// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) fetchCursor() *tree.FetchCursor {
	return u.val.(*tree.FetchCursor)
}

//line sql-gen.y:916
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14334

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 39,
	-2, 1685,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 58,
	269, 432,
	-2, 0,
	-1, 70,
	8, 876,
	29, 876,
	610, 876,
	611, 876,
	-2, 0,
	-1, 76,
	251, 258,
	535, 258,
	-2, 0,
	-1, 90,
	239, 1418,
	253, 1418,
	269, 428,
	405, 428,
	416, 1167,
	457, 428,
	471, 1167,
	520, 1167,
	547, 428,
	573, 1167,
	-2, 0,
	-1, 96,
	136, 1685,
	246, 1685,
	558, 1685,
	559, 1685,
	-2, 0,
	-1, 114,
	155, 1656,
	175, 1656,
	188, 1656,
	249, 1656,
	282, 1656,
	354, 1656,
	365, 1656,
	553, 1656,
	-2, 1627,
	-1, 156,
	163, 1000,
	268, 1000,
	408, 961,
	476, 961,
	519, 961,
	538, 1000,
	540, 961,
	-2, 0,
	-1, 160,
	4, 1687,
	21, 1687,
	22, 1687,
	23, 1687,
	24, 1687,
	25, 1687,
	26, 1687,
	27, 1687,
	28, 1687,
	30, 1687,
	31, 1687,
	37, 1687,
	41, 1687,
	43, 1687,
	44, 1687,
	46, 1687,
	47, 1687,
	48, 1687,
	49, 1687,
	50, 1687,
	51, 1687,
	52, 1687,
	53, 1687,
	54, 1687,
	56, 1687,
	57, 1687,
	58, 1687,
	59, 1687,
	61, 1687,
	62, 1687,
	63, 1687,
	64, 1687,
	65, 1687,
	66, 1687,
	67, 1687,
	71, 1687,
	72, 1687,
	73, 1687,
	74, 1687,
	76, 1687,
	77, 1687,
	78, 1687,
	82, 1687,
	83, 1687,
	84, 1687,
	85, 1687,
	86, 1687,
	87, 1687,
	88, 1687,
	91, 1687,
	92, 1687,
	93, 1687,
	94, 1687,
	95, 1687,
	97, 1687,
	99, 1687,
	100, 1687,
	101, 1687,
	102, 1687,
	103, 1687,
	104, 1687,
	106, 1687,
	107, 1687,
	108, 1687,
	110, 1687,
	111, 1687,
	112, 1687,
	120, 1687,
	121, 1687,
	122, 1687,
	123, 1687,
	124, 1687,
	126, 1687,
	127, 1687,
	128, 1687,
	129, 1687,
	131, 1687,
	132, 1687,
	133, 1687,
	135, 1687,
	136, 1687,
	137, 1687,
	139, 1687,
	140, 1687,
	141, 1687,
	144, 1687,
	145, 1687,
	146, 1687,
	148, 1687,
	149, 1687,
	150, 1687,
	152, 1687,
	153, 1687,
	154, 1687,
	156, 1687,
	157, 1687,
	158, 1687,
	159, 1687,
	160, 1687,
	161, 1687,
	162, 1687,
	163, 1687,
	164, 1687,
	165, 1687,
	166, 1687,
	167, 1687,
	168, 1687,
	169, 1687,
	170, 1687,
	171, 1687,
	172, 1687,
	174, 1687,
	180, 1687,
	181, 1687,
	182, 1687,
	183, 1687,
	187, 1687,
	189, 1687,
	190, 1687,
	191, 1687,
	193, 1687,
	196, 1687,
	197, 1687,
	198, 1687,
	199, 1687,
	200, 1687,
	201, 1687,
	202, 1687,
	203, 1687,
	204, 1687,
	205, 1687,
	206, 1687,
	207, 1687,
	208, 1687,
	209, 1687,
	211, 1687,
	212, 1687,
	214, 1687,
	215, 1687,
	217, 1687,
	218, 1687,
	219, 1687,
	220, 1687,
	221, 1687,
	222, 1687,
	223, 1687,
	224, 1687,
	225, 1687,
	226, 1687,
	228, 1687,
	229, 1687,
	231, 1687,
	232, 1687,
	233, 1687,
	234, 1687,
	235, 1687,
	239, 1687,
	240, 1687,
	241, 1687,
	242, 1687,
	245, 1687,
	246, 1687,
	247, 1687,
	248, 1687,
	250, 1687,
	252, 1687,
	253, 1687,
	255, 1687,
	257, 1687,
	258, 1687,
	259, 1687,
	261, 1687,
	265, 1687,
	266, 1687,
	267, 1687,
	268, 1687,
	269, 1687,
	270, 1687,
	272, 1687,
	273, 1687,
	274, 1687,
	276, 1687,
	277, 1687,
	279, 1687,
	280, 1687,
	283, 1687,
	284, 1687,
	285, 1687,
	286, 1687,
	287, 1687,
	288, 1687,
	289, 1687,
	292, 1687,
	293, 1687,
	294, 1687,
	295, 1687,
	297, 1687,
	298, 1687,
	299, 1687,
	300, 1687,
	301, 1687,
	302, 1687,
	303, 1687,
	304, 1687,
	305, 1687,
	306, 1687,
	307, 1687,
	308, 1687,
	309, 1687,
	310, 1687,
	311, 1687,
	312, 1687,
	313, 1687,
	314, 1687,
	315, 1687,
	316, 1687,
	317, 1687,
	318, 1687,
	320, 1687,
	322, 1687,
	323, 1687,
	324, 1687,
	325, 1687,
	326, 1687,
	327, 1687,
	328, 1687,
	329, 1687,
	330, 1687,
	331, 1687,
	332, 1687,
	333, 1687,
	334, 1687,
	335, 1687,
	336, 1687,
	337, 1687,
	338, 1687,
	340, 1687,
	341, 1687,
	343, 1687,
	345, 1687,
	346, 1687,
	347, 1687,
	349, 1687,
	350, 1687,
	351, 1687,
	352, 1687,
	353, 1687,
	356, 1687,
	358, 1687,
	360, 1687,
	361, 1687,
	362, 1687,
	363, 1687,
	366, 1687,
	367, 1687,
	368, 1687,
	370, 1687,
	372, 1687,
	373, 1687,
	374, 1687,
	375, 1687,
	376, 1687,
	377, 1687,
	378, 1687,
	379, 1687,
	380, 1687,
	381, 1687,
	382, 1687,
	383, 1687,
	384, 1687,
	386, 1687,
	387, 1687,
	388, 1687,
	389, 1687,
	390, 1687,
	391, 1687,
	392, 1687,
	393, 1687,
	394, 1687,
	395, 1687,
	396, 1687,
	397, 1687,
	398, 1687,
	399, 1687,
	400, 1687,
	402, 1687,
	403, 1687,
	404, 1687,
	406, 1687,
	407, 1687,
	408, 1687,
	409, 1687,
	410, 1687,
	411, 1687,
	412, 1687,
	413, 1687,
	414, 1687,
	415, 1687,
	416, 1687,
	417, 1687,
	418, 1687,
	420, 1687,
	422, 1687,
	423, 1687,
	424, 1687,
	430, 1687,
	431, 1687,
	432, 1687,
	434, 1687,
	435, 1687,
	436, 1687,
	437, 1687,
	438, 1687,
	439, 1687,
	440, 1687,
	441, 1687,
	442, 1687,
	443, 1687,
	445, 1687,
	446, 1687,
	447, 1687,
	449, 1687,
	450, 1687,
	451, 1687,
	452, 1687,
	453, 1687,
	454, 1687,
	455, 1687,
	457, 1687,
	458, 1687,
	459, 1687,
	460, 1687,
	461, 1687,
	462, 1687,
	463, 1687,
	464, 1687,
	465, 1687,
	466, 1687,
	467, 1687,
	468, 1687,
	469, 1687,
	471, 1687,
	472, 1687,
	473, 1687,
	474, 1687,
	475, 1687,
	476, 1687,
	478, 1687,
	479, 1687,
	480, 1687,
	481, 1687,
	482, 1687,
	483, 1687,
	485, 1687,
	486, 1687,
	487, 1687,
	488, 1687,
	489, 1687,
	490, 1687,
	491, 1687,
	492, 1687,
	494, 1687,
	496, 1687,
	497, 1687,
	498, 1687,
	499, 1687,
	500, 1687,
	501, 1687,
	502, 1687,
	503, 1687,
	504, 1687,
	505, 1687,
	506, 1687,
	507, 1687,
	508, 1687,
	509, 1687,
	510, 1687,
	511, 1687,
	512, 1687,
	513, 1687,
	515, 1687,
	516, 1687,
	518, 1687,
	519, 1687,
	521, 1687,
	522, 1687,
	523, 1687,
	524, 1687,
	525, 1687,
	526, 1687,
	527, 1687,
	528, 1687,
	530, 1687,
	531, 1687,
	532, 1687,
	533, 1687,
	534, 1687,
	536, 1687,
	538, 1687,
	539, 1687,
	540, 1687,
	541, 1687,
	542, 1687,
	543, 1687,
	544, 1687,
	546, 1687,
	547, 1687,
	548, 1687,
	549, 1687,
	551, 1687,
	552, 1687,
	555, 1687,
	556, 1687,
	557, 1687,
	558, 1687,
	559, 1687,
	560, 1687,
	561, 1687,
	563, 1687,
	566, 1687,
	567, 1687,
	568, 1687,
	569, 1687,
	570, 1687,
	571, 1687,
	573, 1687,
	574, 1687,
	575, 1687,
	576, 1687,
	577, 1687,
	578, 1687,
	579, 1687,
	584, 1687,
	585, 1687,
	586, 1687,
	587, 1687,
	588, 1687,
	589, 1687,
	-2, 0,
	-1, 161,
	1, 1535,
	134, 1535,
	257, 1535,
	342, 1535,
	403, 1535,
	412, 1535,
	593, 1535,
	623, 1535,
	-2, 0,
	-1, 163,
	1, 1535,
	623, 1535,
	-2, 0,
	-1, 164,
	1, 1535,
	623, 1535,
	-2, 0,
	-1, 165,
	1, 1535,
	535, 1535,
	623, 1535,
	-2, 0,
	-1, 197,
	155, 1655,
	175, 1655,
	188, 1655,
	249, 1655,
	282, 1655,
	354, 1655,
	365, 1655,
	553, 1655,
	-2, 1630,
	-1, 244,
	4, 1694,
	5, 1694,
	6, 1694,
	7, 1694,
	8, 1694,
	9, 1694,
	10, 1694,
	21, 1694,
	22, 1694,
	23, 1694,
	24, 1694,
	25, 1694,
	26, 1694,
	27, 1694,
	28, 1694,
	30, 1694,
	31, 1694,
	37, 1694,
	38, 1694,
	41, 1694,
	43, 1694,
	44, 1694,
	45, 1694,
	46, 1694,
	47, 1694,
	48, 1694,
	49, 1694,
	50, 1694,
	51, 1694,
	52, 1694,
	53, 1694,
	54, 1694,
	56, 1694,
	57, 1694,
	58, 1694,
	59, 1694,
	61, 1694,
	62, 1694,
	63, 1694,
	64, 1694,
	65, 1694,
	66, 1694,
	67, 1694,
	68, 1694,
	69, 1694,
	70, 1694,
	71, 1694,
	72, 1694,
	73, 1694,
	74, 1694,
	76, 1694,
	77, 1694,
	78, 1694,
	80, 1694,
	82, 1694,
	83, 1694,
	84, 1694,
	85, 1694,
	86, 1694,
	87, 1694,
	88, 1694,
	91, 1694,
	92, 1694,
	93, 1694,
	94, 1694,
	95, 1694,
	97, 1694,
	99, 1694,
	100, 1694,
	101, 1694,
	102, 1694,
	103, 1694,
	104, 1694,
	106, 1694,
	107, 1694,
	108, 1694,
	109, 1694,
	110, 1694,
	111, 1694,
	112, 1694,
	113, 1694,
	114, 1694,
	115, 1694,
	116, 1694,
	117, 1694,
	118, 1694,
	119, 1694,
	120, 1694,
	121, 1694,
	122, 1694,
	123, 1694,
	124, 1694,
	125, 1694,
	126, 1694,
	127, 1694,
	128, 1694,
	129, 1694,
	130, 1694,
	131, 1694,
	132, 1694,
	133, 1694,
	135, 1694,
	136, 1694,
	137, 1694,
	139, 1694,
	140, 1694,
	141, 1694,
	144, 1694,
	145, 1694,
	146, 1694,
	148, 1694,
	149, 1694,
	150, 1694,
	152, 1694,
	153, 1694,
	154, 1694,
	156, 1694,
	157, 1694,
	158, 1694,
	159, 1694,
	160, 1694,
	161, 1694,
	162, 1694,
	163, 1694,
	164, 1694,
	165, 1694,
	166, 1694,
	167, 1694,
	168, 1694,
	169, 1694,
	170, 1694,
	171, 1694,
	172, 1694,
	173, 1694,
	174, 1694,
	180, 1694,
	181, 1694,
	182, 1694,
	183, 1694,
	187, 1694,
	189, 1694,
	190, 1694,
	191, 1694,
	193, 1694,
	195, 1694,
	196, 1694,
	197, 1694,
	198, 1694,
	199, 1694,
	200, 1694,
	201, 1694,
	202, 1694,
	203, 1694,
	204, 1694,
	205, 1694,
	206, 1694,
	207, 1694,
	208, 1694,
	209, 1694,
	211, 1694,
	212, 1694,
	214, 1694,
	215, 1694,
	217, 1694,
	218, 1694,
	219, 1694,
	220, 1694,
	221, 1694,
	222, 1694,
	223, 1694,
	224, 1694,
	225, 1694,
	226, 1694,
	227, 1694,
	228, 1694,
	229, 1694,
	231, 1694,
	232, 1694,
	233, 1694,
	234, 1694,
	235, 1694,
	239, 1694,
	240, 1694,
	241, 1694,
	242, 1694,
	244, 1694,
	245, 1694,
	246, 1694,
	247, 1694,
	248, 1694,
	250, 1694,
	252, 1694,
	253, 1694,
	254, 1694,
	255, 1694,
	256, 1694,
	257, 1694,
	258, 1694,
	259, 1694,
	260, 1694,
	261, 1694,
	265, 1694,
	266, 1694,
	267, 1694,
	268, 1694,
	269, 1694,
	270, 1694,
	272, 1694,
	273, 1694,
	274, 1694,
	276, 1694,
	277, 1694,
	278, 1694,
	279, 1694,
	280, 1694,
	281, 1694,
	283, 1694,
	284, 1694,
	285, 1694,
	286, 1694,
	287, 1694,
	288, 1694,
	289, 1694,
	290, 1694,
	291, 1694,
	292, 1694,
	293, 1694,
	294, 1694,
	295, 1694,
	297, 1694,
	298, 1694,
	299, 1694,
	300, 1694,
	301, 1694,
	302, 1694,
	303, 1694,
	304, 1694,
	305, 1694,
	306, 1694,
	307, 1694,
	308, 1694,
	309, 1694,
	310, 1694,
	311, 1694,
	312, 1694,
	313, 1694,
	314, 1694,
	315, 1694,
	316, 1694,
	317, 1694,
	318, 1694,
	320, 1694,
	321, 1694,
	322, 1694,
	323, 1694,
	324, 1694,
	325, 1694,
	326, 1694,
	327, 1694,
	328, 1694,
	329, 1694,
	330, 1694,
	331, 1694,
	332, 1694,
	333, 1694,
	334, 1694,
	335, 1694,
	336, 1694,
	337, 1694,
	338, 1694,
	339, 1694,
	340, 1694,
	341, 1694,
	342, 1694,
	343, 1694,
	344, 1694,
	345, 1694,
	346, 1694,
	347, 1694,
	348, 1694,
	349, 1694,
	350, 1694,
	351, 1694,
	352, 1694,
	353, 1694,
	356, 1694,
	358, 1694,
	361, 1694,
	362, 1694,
	363, 1694,
	366, 1694,
	367, 1694,
	368, 1694,
	369, 1694,
	370, 1694,
	371, 1694,
	372, 1694,
	373, 1694,
	374, 1694,
	375, 1694,
	376, 1694,
	377, 1694,
	378, 1694,
	379, 1694,
	380, 1694,
	381, 1694,
	382, 1694,
	383, 1694,
	384, 1694,
	386, 1694,
	387, 1694,
	388, 1694,
	389, 1694,
	390, 1694,
	391, 1694,
	392, 1694,
	393, 1694,
	394, 1694,
	395, 1694,
	396, 1694,
	397, 1694,
	398, 1694,
	399, 1694,
	400, 1694,
	402, 1694,
	403, 1694,
	404, 1694,
	406, 1694,
	407, 1694,
	408, 1694,
	409, 1694,
	410, 1694,
	411, 1694,
	412, 1694,
	413, 1694,
	414, 1694,
	415, 1694,
	416, 1694,
	417, 1694,
	418, 1694,
	420, 1694,
	422, 1694,
	423, 1694,
	424, 1694,
	430, 1694,
	431, 1694,
	432, 1694,
	434, 1694,
	435, 1694,
	436, 1694,
	437, 1694,
	438, 1694,
	439, 1694,
	440, 1694,
	441, 1694,
	442, 1694,
	443, 1694,
	445, 1694,
	446, 1694,
	447, 1694,
	448, 1694,
	449, 1694,
	450, 1694,
	451, 1694,
	452, 1694,
	453, 1694,
	454, 1694,
	455, 1694,
	457, 1694,
	458, 1694,
	459, 1694,
	460, 1694,
	461, 1694,
	462, 1694,
	463, 1694,
	464, 1694,
	465, 1694,
	466, 1694,
	467, 1694,
	468, 1694,
	469, 1694,
	471, 1694,
	472, 1694,
	473, 1694,
	474, 1694,
	475, 1694,
	476, 1694,
	477, 1694,
	478, 1694,
	479, 1694,
	480, 1694,
	481, 1694,
	482, 1694,
	483, 1694,
	484, 1694,
	485, 1694,
	486, 1694,
	487, 1694,
	488, 1694,
	489, 1694,
	490, 1694,
	491, 1694,
	492, 1694,
	494, 1694,
	496, 1694,
	497, 1694,
	498, 1694,
	499, 1694,
	500, 1694,
	501, 1694,
	502, 1694,
	503, 1694,
	504, 1694,
	505, 1694,
	506, 1694,
	507, 1694,
	508, 1694,
	509, 1694,
	510, 1694,
	511, 1694,
	512, 1694,
	513, 1694,
	515, 1694,
	516, 1694,
	517, 1694,
	518, 1694,
	519, 1694,
	521, 1694,
	522, 1694,
	523, 1694,
	524, 1694,
	525, 1694,
	526, 1694,
	527, 1694,
	528, 1694,
	530, 1694,
	531, 1694,
	532, 1694,
	533, 1694,
	534, 1694,
	536, 1694,
	538, 1694,
	539, 1694,
	540, 1694,
	541, 1694,
	542, 1694,
	543, 1694,
	544, 1694,
	545, 1694,
	546, 1694,
	547, 1694,
	548, 1694,
	549, 1694,
	551, 1694,
	552, 1694,
	554, 1694,
	555, 1694,
	556, 1694,
	557, 1694,
	558, 1694,
	559, 1694,
	560, 1694,
	561, 1694,
	562, 1694,
	563, 1694,
	566, 1694,
	567, 1694,
	568, 1694,
	569, 1694,
	570, 1694,
	571, 1694,
	573, 1694,
	574, 1694,
	575, 1694,
	576, 1694,
	577, 1694,
	578, 1694,
	579, 1694,
	584, 1694,
	585, 1694,
	586, 1694,
	587, 1694,
	588, 1694,
	589, 1694,
	590, 1694,
	603, 1694,
	610, 1694,
	611, 1694,
	612, 1694,
	620, 1694,
	624, 1694,
	-2, 0,
	-1, 779,
	4, 1416,
	21, 1416,
	22, 1416,
	23, 1416,
	24, 1416,
	25, 1416,
	26, 1416,
	27, 1416,
	28, 1416,
	30, 1416,
	31, 1416,
	37, 1416,
	41, 1416,
	43, 1416,
	44, 1416,
	46, 1416,
	47, 1416,
	48, 1416,
	49, 1416,
	50, 1416,
	51, 1416,
	52, 1416,
	53, 1416,
	54, 1416,
	56, 1416,
	57, 1416,
	58, 1416,
	59, 1416,
	61, 1416,
	62, 1416,
	63, 1416,
	64, 1416,
	65, 1416,
	66, 1416,
	67, 1416,
	71, 1416,
	72, 1416,
	73, 1416,
	74, 1416,
	76, 1416,
	77, 1416,
	78, 1416,
	82, 1416,
	83, 1416,
	84, 1416,
	85, 1416,
	86, 1416,
	87, 1416,
	88, 1416,
	91, 1416,
	92, 1416,
	93, 1416,
	94, 1416,
	95, 1416,
	97, 1416,
	99, 1416,
	100, 1416,
	101, 1416,
	102, 1416,
	103, 1416,
	104, 1416,
	106, 1416,
	107, 1416,
	108, 1416,
	110, 1416,
	111, 1416,
	112, 1416,
	120, 1416,
	121, 1416,
	122, 1416,
	123, 1416,
	124, 1416,
	126, 1416,
	127, 1416,
	128, 1416,
	129, 1416,
	131, 1416,
	132, 1416,
	133, 1416,
	135, 1416,
	136, 1416,
	137, 1416,
	139, 1416,
	140, 1416,
	141, 1416,
	144, 1416,
	145, 1416,
	146, 1416,
	148, 1416,
	149, 1416,
	150, 1416,
	152, 1416,
	153, 1416,
	154, 1416,
	156, 1416,
	157, 1416,
	158, 1416,
	159, 1416,
	160, 1416,
	161, 1416,
	162, 1416,
	163, 1416,
	164, 1416,
	165, 1416,
	166, 1416,
	167, 1416,
	168, 1416,
	169, 1416,
	170, 1416,
	171, 1416,
	172, 1416,
	174, 1416,
	180, 1416,
	181, 1416,
	182, 1416,
	183, 1416,
	187, 1416,
	189, 1416,
	190, 1416,
	191, 1416,
	193, 1416,
	196, 1416,
	197, 1416,
	198, 1416,
	199, 1416,
	200, 1416,
	201, 1416,
	202, 1416,
	203, 1416,
	204, 1416,
	205, 1416,
	206, 1416,
	207, 1416,
	208, 1416,
	209, 1416,
	211, 1416,
	212, 1416,
	214, 1416,
	215, 1416,
	217, 1416,
	218, 1416,
	219, 1416,
	220, 1416,
	221, 1416,
	222, 1416,
	223, 1416,
	224, 1416,
	225, 1416,
	226, 1416,
	228, 1416,
	229, 1416,
	231, 1416,
	232, 1416,
	233, 1416,
	234, 1416,
	235, 1416,
	239, 1416,
	240, 1416,
	241, 1416,
	242, 1416,
	245, 1416,
	246, 1416,
	247, 1416,
	248, 1416,
	250, 1416,
	252, 1416,
	253, 1416,
	255, 1416,
	257, 1416,
	258, 1416,
	259, 1416,
	261, 1416,
	265, 1416,
	266, 1416,
	267, 1416,
	268, 1416,
	269, 1416,
	270, 1416,
	272, 1416,
	273, 1416,
	274, 1416,
	276, 1416,
	277, 1416,
	279, 1416,
	280, 1416,
	283, 1416,
	284, 1416,
	285, 1416,
	286, 1416,
	287, 1416,
	288, 1416,
	289, 1416,
	292, 1416,
	293, 1416,
	294, 1416,
	295, 1416,
	297, 1416,
	298, 1416,
	299, 1416,
	300, 1416,
	301, 1416,
	302, 1416,
	303, 1416,
	304, 1416,
	305, 1416,
	306, 1416,
	307, 1416,
	308, 1416,
	309, 1416,
	310, 1416,
	311, 1416,
	312, 1416,
	313, 1416,
	314, 1416,
	315, 1416,
	316, 1416,
	317, 1416,
	318, 1416,
	320, 1416,
	322, 1416,
	323, 1416,
	324, 1416,
	325, 1416,
	326, 1416,
	327, 1416,
	328, 1416,
	329, 1416,
	330, 1416,
	331, 1416,
	332, 1416,
	333, 1416,
	334, 1416,
	335, 1416,
	336, 1416,
	337, 1416,
	338, 1416,
	340, 1416,
	341, 1416,
	343, 1416,
	345, 1416,
	346, 1416,
	347, 1416,
	349, 1416,
	350, 1416,
	351, 1416,
	352, 1416,
	353, 1416,
	356, 1416,
	358, 1416,
	361, 1416,
	362, 1416,
	363, 1416,
	366, 1416,
	367, 1416,
	368, 1416,
	370, 1416,
	372, 1416,
	373, 1416,
	374, 1416,
	375, 1416,
	376, 1416,
	377, 1416,
	378, 1416,
	379, 1416,
	380, 1416,
	381, 1416,
	382, 1416,
	383, 1416,
	384, 1416,
	386, 1416,
	387, 1416,
	388, 1416,
	389, 1416,
	390, 1416,
	391, 1416,
	392, 1416,
	393, 1416,
	394, 1416,
	395, 1416,
	396, 1416,
	397, 1416,
	398, 1416,
	399, 1416,
	400, 1416,
	402, 1416,
	403, 1416,
	404, 1416,
	406, 1416,
	407, 1416,
	408, 1416,
	409, 1416,
	410, 1416,
	411, 1416,
	412, 1416,
	413, 1416,
	414, 1416,
	415, 1416,
	416, 1416,
	417, 1416,
	418, 1416,
	420, 1416,
	422, 1416,
	423, 1416,
	424, 1416,
	430, 1416,
	431, 1416,
	432, 1416,
	434, 1416,
	435, 1416,
	436, 1416,
	437, 1416,
	438, 1416,
	439, 1416,
	440, 1416,
	441, 1416,
	442, 1416,
	443, 1416,
	445, 1416,
	446, 1416,
	447, 1416,
	449, 1416,
	450, 1416,
	451, 1416,
	452, 1416,
	453, 1416,
	454, 1416,
	455, 1416,
	457, 1416,
	458, 1416,
	459, 1416,
	460, 1416,
	461, 1416,
	462, 1416,
	463, 1416,
	464, 1416,
	465, 1416,
	466, 1416,
	467, 1416,
	468, 1416,
	469, 1416,
	471, 1416,
	472, 1416,
	473, 1416,
	474, 1416,
	475, 1416,
	476, 1416,
	478, 1416,
	479, 1416,
	480, 1416,
	481, 1416,
	482, 1416,
	483, 1416,
	485, 1416,
	486, 1416,
	487, 1416,
	488, 1416,
	489, 1416,
	490, 1416,
	491, 1416,
	492, 1416,
	494, 1416,
	496, 1416,
	497, 1416,
	498, 1416,
	499, 1416,
	500, 1416,
	501, 1416,
	502, 1416,
	503, 1416,
	504, 1416,
	505, 1416,
	506, 1416,
	507, 1416,
	508, 1416,
	509, 1416,
	510, 1416,
	511, 1416,
	512, 1416,
	513, 1416,
	515, 1416,
	516, 1416,
	518, 1416,
	519, 1416,
	521, 1416,
	522, 1416,
	523, 1416,
	524, 1416,
	525, 1416,
	526, 1416,
	527, 1416,
	528, 1416,
	530, 1416,
	531, 1416,
	532, 1416,
	533, 1416,
	534, 1416,
	536, 1416,
	538, 1416,
	539, 1416,
	540, 1416,
	541, 1416,
	542, 1416,
	543, 1416,
	544, 1416,
	546, 1416,
	547, 1416,
	548, 1416,
	549, 1416,
	551, 1416,
	552, 1416,
	555, 1416,
	556, 1416,
	557, 1416,
	558, 1416,
	559, 1416,
	560, 1416,
	561, 1416,
	563, 1416,
	566, 1416,
	567, 1416,
	568, 1416,
	569, 1416,
	570, 1416,
	571, 1416,
	573, 1416,
	574, 1416,
	575, 1416,
	576, 1416,
	577, 1416,
	578, 1416,
	579, 1416,
	584, 1416,
	585, 1416,
	586, 1416,
	587, 1416,
	588, 1416,
	589, 1416,
	-2, 0,
	-1, 798,
	194, 2489,
	535, 2489,
	602, 2489,
	622, 2489,
	-2, 0,
	-1, 799,
	194, 2476,
	535, 2476,
	602, 2476,
	622, 2476,
	-2, 0,
	-1, 801,
	194, 2751,
	535, 2751,
	602, 2751,
	622, 2751,
	-2, 0,
	-1, 804,
	194, 2603,
	535, 2603,
	602, 2603,
	622, 2603,
	-2, 0,
	-1, 805,
	194, 2794,
	535, 2794,
	602, 2794,
	622, 2794,
	-2, 0,
	-1, 813,
	194, 2630,
	535, 2630,
	602, 2630,
	622, 2630,
	-2, 745,
	-1, 829,
	8, 875,
	29, 875,
	610, 875,
	611, 875,
	-2, 880,
	-1, 833,
	1, 2543,
	623, 2543,
	-2, 880,
	-1, 834,
	1, 2591,
	623, 2591,
	-2, 880,
	-1, 837,
	1, 2635,
	623, 2635,
	-2, 873,
	-1, 838,
	1, 2690,
	623, 2690,
	-2, 874,
	-1, 839,
	1, 2548,
	623, 2548,
	-2, 877,
	-1, 840,
	1, 2463,
	623, 2463,
	-2, 878,
	-1, 870,
	622, 2422,
	625, 2422,
	-2, 1085,
	-1, 871,
	622, 2424,
	625, 2424,
	-2, 1086,
	-1, 872,
	622, 2423,
	625, 2423,
	-2, 1087,
	-1, 873,
	625, 2348,
	-2, 1088,
	-1, 898,
	188, 277,
	-2, 0,
	-1, 922,
	45, 2395,
	-2, 0,
	-1, 923,
	573, 1394,
	-2, 1168,
	-1, 939,
	4, 1828,
	21, 1828,
	22, 1828,
	23, 1828,
	24, 1828,
	25, 1828,
	26, 1828,
	27, 1828,
	28, 1828,
	30, 1828,
	31, 1828,
	37, 1828,
	41, 1828,
	43, 1828,
	44, 1828,
	46, 1828,
	47, 1828,
	48, 1828,
	49, 1828,
	50, 1828,
	51, 1828,
	52, 1828,
	53, 1828,
	54, 1828,
	56, 1828,
	57, 1828,
	58, 1828,
	59, 1828,
	61, 1828,
	62, 1828,
	63, 1828,
	64, 1828,
	65, 1828,
	66, 1828,
	67, 1828,
	71, 1828,
	72, 1828,
	73, 1828,
	74, 1828,
	76, 1828,
	77, 1828,
	78, 1828,
	82, 1828,
	83, 1828,
	84, 1828,
	85, 1828,
	86, 1828,
	87, 1828,
	88, 1828,
	91, 1828,
	92, 1828,
	93, 1828,
	94, 1828,
	95, 1828,
	97, 1828,
	99, 1828,
	100, 1828,
	101, 1828,
	102, 1828,
	103, 1828,
	104, 1828,
	106, 1828,
	107, 1828,
	108, 1828,
	110, 1828,
	111, 1828,
	112, 1828,
	120, 1828,
	121, 1828,
	122, 1828,
	123, 1828,
	124, 1828,
	126, 1828,
	127, 1828,
	128, 1828,
	129, 1828,
	131, 1828,
	132, 1828,
	133, 1828,
	135, 1828,
	136, 1828,
	137, 1828,
	139, 1828,
	140, 1828,
	141, 1828,
	144, 1828,
	145, 1828,
	146, 1828,
	148, 1828,
	149, 1828,
	150, 1828,
	152, 1828,
	153, 1828,
	154, 1828,
	156, 1828,
	157, 1828,
	158, 1828,
	159, 1828,
	160, 1828,
	161, 1828,
	162, 1828,
	163, 1828,
	164, 1828,
	165, 1828,
	166, 1828,
	167, 1828,
	168, 1828,
	169, 1828,
	170, 1828,
	171, 1828,
	172, 1828,
	174, 1828,
	180, 1828,
	181, 1828,
	182, 1828,
	183, 1828,
	187, 1828,
	189, 1828,
	190, 1828,
	191, 1828,
	193, 1828,
	196, 1828,
	197, 1828,
	198, 1828,
	199, 1828,
	200, 1828,
	201, 1828,
	202, 1828,
	203, 1828,
	204, 1828,
	205, 1828,
	206, 1828,
	207, 1828,
	208, 1828,
	209, 1828,
	211, 1828,
	212, 1828,
	214, 1828,
	215, 1828,
	217, 1828,
	218, 1828,
	219, 1828,
	220, 1828,
	221, 1828,
	222, 1828,
	223, 1828,
	224, 1828,
	225, 1828,
	226, 1828,
	228, 1828,
	229, 1828,
	231, 1828,
	232, 1828,
	233, 1828,
	234, 1828,
	235, 1828,
	239, 1828,
	240, 1828,
	241, 1828,
	242, 1828,
	245, 1828,
	246, 1828,
	247, 1828,
	248, 1828,
	250, 1828,
	252, 1828,
	253, 1828,
	255, 1828,
	257, 1828,
	258, 1828,
	259, 1828,
	261, 1828,
	265, 1828,
	266, 1828,
	267, 1828,
	268, 1828,
	269, 1828,
	270, 1828,
	272, 1828,
	273, 1828,
	274, 1828,
	276, 1828,
	277, 1828,
	279, 1828,
	280, 1828,
	283, 1828,
	284, 1828,
	285, 1828,
	286, 1828,
	287, 1828,
	288, 1828,
	289, 1828,
	292, 1828,
	293, 1828,
	294, 1828,
	295, 1828,
	297, 1828,
	298, 1828,
	299, 1828,
	300, 1828,
	301, 1828,
	302, 1828,
	303, 1828,
	304, 1828,
	305, 1828,
	306, 1828,
	307, 1828,
	308, 1828,
	309, 1828,
	310, 1828,
	311, 1828,
	312, 1828,
	313, 1828,
	314, 1828,
	315, 1828,
	316, 1828,
	317, 1828,
	318, 1828,
	320, 1828,
	322, 1828,
	323, 1828,
	324, 1828,
	325, 1828,
	326, 1828,
	327, 1828,
	328, 1828,
	329, 1828,
	330, 1828,
	331, 1828,
	332, 1828,
	333, 1828,
	334, 1828,
	335, 1828,
	336, 1828,
	337, 1828,
	338, 1828,
	340, 1828,
	341, 1828,
	343, 1828,
	345, 1828,
	346, 1828,
	347, 1828,
	349, 1828,
	350, 1828,
	351, 1828,
	352, 1828,
	353, 1828,
	356, 1828,
	358, 1828,
	361, 1828,
	362, 1828,
	363, 1828,
	366, 1828,
	367, 1828,
	368, 1828,
	370, 1828,
	372, 1828,
	373, 1828,
	374, 1828,
	375, 1828,
	376, 1828,
	377, 1828,
	378, 1828,
	379, 1828,
	380, 1828,
	381, 1828,
	382, 1828,
	383, 1828,
	384, 1828,
	386, 1828,
	387, 1828,
	388, 1828,
	389, 1828,
	390, 1828,
	391, 1828,
	392, 1828,
	393, 1828,
	394, 1828,
	395, 1828,
	396, 1828,
	397, 1828,
	398, 1828,
	399, 1828,
	400, 1828,
	402, 1828,
	403, 1828,
	404, 1828,
	406, 1828,
	407, 1828,
	408, 1828,
	409, 1828,
	410, 1828,
	411, 1828,
	412, 1828,
	413, 1828,
	414, 1828,
	415, 1828,
	416, 1828,
	417, 1828,
	418, 1828,
	420, 1828,
	422, 1828,
	423, 1828,
	424, 1828,
	430, 1828,
	431, 1828,
	432, 1828,
	434, 1828,
	435, 1828,
	436, 1828,
	437, 1828,
	438, 1828,
	439, 1828,
	440, 1828,
	441, 1828,
	442, 1828,
	443, 1828,
	445, 1828,
	446, 1828,
	447, 1828,
	449, 1828,
	450, 1828,
	451, 1828,
	452, 1828,
	453, 1828,
	454, 1828,
	455, 1828,
	457, 1828,
	458, 1828,
	459, 1828,
	460, 1828,
	461, 1828,
	462, 1828,
	463, 1828,
	464, 1828,
	465, 1828,
	466, 1828,
	467, 1828,
	468, 1828,
	469, 1828,
	471, 1828,
	472, 1828,
	473, 1828,
	474, 1828,
	475, 1828,
	476, 1828,
	478, 1828,
	479, 1828,
	480, 1828,
	481, 1828,
	482, 1828,
	483, 1828,
	485, 1828,
	486, 1828,
	487, 1828,
	488, 1828,
	489, 1828,
	490, 1828,
	491, 1828,
	492, 1828,
	494, 1828,
	496, 1828,
	497, 1828,
	498, 1828,
	499, 1828,
	500, 1828,
	501, 1828,
	502, 1828,
	503, 1828,
	504, 1828,
	505, 1828,
	506, 1828,
	507, 1828,
	508, 1828,
	509, 1828,
	510, 1828,
	511, 1828,
	512, 1828,
	513, 1828,
	515, 1828,
	516, 1828,
	518, 1828,
	519, 1828,
	521, 1828,
	522, 1828,
	523, 1828,
	524, 1828,
	525, 1828,
	526, 1828,
	527, 1828,
	528, 1828,
	530, 1828,
	531, 1828,
	532, 1828,
	533, 1828,
	534, 1828,
	536, 1828,
	538, 1828,
	539, 1828,
	540, 1828,
	541, 1828,
	542, 1828,
	543, 1828,
	544, 1828,
	546, 1828,
	547, 1828,
	548, 1828,
	549, 1828,
	551, 1828,
	552, 1828,
	555, 1828,
	556, 1828,
	557, 1828,
	558, 1828,
	559, 1828,
	560, 1828,
	561, 1828,
	563, 1828,
	566, 1828,
	567, 1828,
	568, 1828,
	569, 1828,
	570, 1828,
	571, 1828,
	573, 1828,
	574, 1828,
	575, 1828,
	576, 1828,
	577, 1828,
	578, 1828,
	579, 1828,
	584, 1828,
	585, 1828,
	586, 1828,
	587, 1828,
	588, 1828,
	589, 1828,
	-2, 0,
	-1, 949,
	269, 432,
	-2, 0,
	-1, 1028,
	408, 962,
	476, 962,
	519, 962,
	540, 962,
	-2, 0,
	-1, 1029,
	408, 961,
	476, 961,
	519, 961,
	540, 961,
	-2, 893,
	-1, 1033,
	1, 1014,
	619, 1014,
	621, 1014,
	623, 1014,
	-2, 0,
	-1, 1035,
	1, 936,
	619, 936,
	621, 936,
	623, 936,
	-2, 0,
	-1, 1036,
	1, 940,
	619, 940,
	621, 940,
	623, 940,
	-2, 0,
	-1, 1037,
	1, 1084,
	188, 1084,
	619, 1084,
	621, 1084,
	623, 1084,
	-2, 0,
	-1, 1045,
	1, 967,
	619, 967,
	621, 967,
	623, 967,
	-2, 0,
	-1, 1052,
	1, 1014,
	619, 1014,
	621, 1014,
	623, 1014,
	-2, 0,
	-1, 1053,
	1, 1016,
	619, 1016,
	621, 1016,
	623, 1016,
	-2, 0,
	-1, 1054,
	1, 1019,
	619, 1019,
	621, 1019,
	623, 1019,
	-2, 0,
	-1, 1061,
	1, 1048,
	619, 1048,
	621, 1048,
	623, 1048,
	-2, 0,
	-1, 1062,
	1, 1050,
	619, 1050,
	621, 1050,
	623, 1050,
	-2, 0,
	-1, 1067,
	1, 1078,
	619, 1078,
	621, 1078,
	623, 1078,
	-2, 0,
	-1, 1121,
	175, 1698,
	188, 1698,
	282, 1698,
	354, 1698,
	-2, 1634,
	-1, 1137,
	175, 1697,
	188, 1697,
	282, 1697,
	354, 1697,
	-2, 1631,
	-1, 1164,
	622, 2421,
	-2, 753,
	-1, 1193,
	5, 2413,
	620, 2411,
	-2, 2402,
	-1, 1201,
	5, 2434,
	620, 2431,
	-2, 2422,
	-1, 1202,
	5, 2435,
	620, 2432,
	-2, 2423,
	-1, 1210,
	622, 2419,
	-2, 2401,
	-1, 1211,
	620, 2880,
	-2, 2420,
	-1, 1234,
	620, 2879,
	-2, 2436,
	-1, 1235,
	5, 1903,
	-2, 2850,
	-1, 1236,
	5, 1904,
	-2, 2851,
	-1, 1237,
	5, 1905,
	-2, 2865,
	-1, 1238,
	5, 1906,
	-2, 2829,
	-1, 1239,
	5, 1907,
	-2, 2863,
	-1, 1240,
	5, 1915,
	-2, 2842,
	-1, 1241,
	5, 1902,
	-2, 2838,
	-1, 1242,
	5, 1902,
	-2, 2837,
	-1, 1243,
	5, 1902,
	-2, 2856,
	-1, 1244,
	5, 1913,
	-2, 2831,
	-1, 1245,
	5, 1918,
	-2, 2830,
	-1, 1246,
	5, 1920,
	-2, 2875,
	-1, 1249,
	5, 1942,
	-2, 2868,
	-1, 1250,
	5, 1934,
	-2, 2869,
	-1, 1251,
	5, 1942,
	-2, 2870,
	-1, 1252,
	5, 1938,
	-2, 2871,
	-1, 1253,
	5, 1888,
	-2, 2843,
	-1, 1254,
	5, 1889,
	-2, 2844,
	-1, 1255,
	5, 1890,
	-2, 2832,
	-1, 1283,
	5, 1925,
	-2, 2876,
	-1, 1284,
	5, 1926,
	-2, 2866,
	-1, 1285,
	5, 1927,
	574, 1927,
	-2, 2833,
	-1, 1286,
	5, 1928,
	574, 1928,
	-2, 2834,
	-1, 1323,
	620, 2431,
	-2, 2422,
	-1, 1324,
	620, 2432,
	-2, 2423,
	-1, 1422,
	194, 2794,
	535, 2794,
	602, 2794,
	622, 2794,
	-2, 0,
	-1, 1427,
	1, 729,
	623, 729,
	-2, 1543,
	-1, 1574,
	374, 2396,
	434, 2396,
	478, 2396,
	612, 2396,
	-2, 2386,
	-1, 1580,
	194, 137,
	276, 137,
	340, 137,
	579, 137,
	-2, 2790,
	-1, 1581,
	194, 138,
	276, 138,
	340, 138,
	579, 138,
	-2, 2534,
	-1, 1582,
	194, 139,
	276, 139,
	340, 139,
	579, 139,
	-2, 2712,
	-1, 1588,
	624, 2396,
	-2, 2398,
	-1, 1608,
	1, 1391,
	439, 1348,
	478, 1348,
	596, 1348,
	619, 1391,
	621, 1391,
	623, 1391,
	-2, 1683,
	-1, 1614,
	210, 1488,
	230, 1488,
	447, 1488,
	-2, 0,
	-1, 1662,
	416, 1167,
	573, 1167,
	-2, 427,
	-1, 1679,
	45, 2394,
	-2, 1130,
	-1, 1686,
	1, 1391,
	619, 1391,
	621, 1391,
	623, 1391,
	-2, 1683,
	-1, 1694,
	4, 1416,
	21, 1416,
	22, 1416,
	23, 1416,
	24, 1416,
	25, 1416,
	26, 1416,
	27, 1416,
	28, 1416,
	30, 1416,
	31, 1416,
	37, 1416,
	41, 1416,
	43, 1416,
	44, 1416,
	46, 1416,
	47, 1416,
	48, 1416,
	49, 1416,
	50, 1416,
	51, 1416,
	52, 1416,
	53, 1416,
	54, 1416,
	56, 1416,
	57, 1416,
	58, 1416,
	59, 1416,
	61, 1416,
	62, 1416,
	63, 1416,
	64, 1416,
	65, 1416,
	66, 1416,
	67, 1416,
	71, 1416,
	72, 1416,
	73, 1416,
	74, 1416,
	76, 1416,
	77, 1416,
	78, 1416,
	82, 1416,
	83, 1416,
	84, 1416,
	85, 1416,
	86, 1416,
	87, 1416,
	88, 1416,
	91, 1416,
	92, 1416,
	93, 1416,
	94, 1416,
	95, 1416,
	97, 1416,
	99, 1416,
	100, 1416,
	101, 1416,
	102, 1416,
	103, 1416,
	104, 1416,
	106, 1416,
	107, 1416,
	108, 1416,
	110, 1416,
	111, 1416,
	112, 1416,
	120, 1416,
	121, 1416,
	122, 1416,
	123, 1416,
	124, 1416,
	126, 1416,
	127, 1416,
	128, 1416,
	129, 1416,
	131, 1416,
	132, 1416,
	133, 1416,
	135, 1416,
	136, 1416,
	137, 1416,
	139, 1416,
	140, 1416,
	141, 1416,
	144, 1416,
	145, 1416,
	146, 1416,
	148, 1416,
	149, 1416,
	150, 1416,
	152, 1416,
	153, 1416,
	154, 1416,
	156, 1416,
	157, 1416,
	158, 1416,
	159, 1416,
	160, 1416,
	161, 1416,
	162, 1416,
	163, 1416,
	164, 1416,
	165, 1416,
	166, 1416,
	167, 1416,
	168, 1416,
	169, 1416,
	170, 1416,
	171, 1416,
	172, 1416,
	180, 1416,
	181, 1416,
	182, 1416,
	183, 1416,
	187, 1416,
	189, 1416,
	190, 1416,
	191, 1416,
	193, 1416,
	196, 1416,
	197, 1416,
	198, 1416,
	199, 1416,
	200, 1416,
	201, 1416,
	202, 1416,
	203, 1416,
	204, 1416,
	205, 1416,
	206, 1416,
	207, 1416,
	208, 1416,
	209, 1416,
	211, 1416,
	212, 1416,
	214, 1416,
	215, 1416,
	217, 1416,
	218, 1416,
	219, 1416,
	220, 1416,
	221, 1416,
	222, 1416,
	223, 1416,
	224, 1416,
	225, 1416,
	226, 1416,
	228, 1416,
	229, 1416,
	231, 1416,
	232, 1416,
	233, 1416,
	234, 1416,
	235, 1416,
	240, 1416,
	241, 1416,
	242, 1416,
	245, 1416,
	246, 1416,
	247, 1416,
	248, 1416,
	250, 1416,
	252, 1416,
	253, 1416,
	255, 1416,
	257, 1416,
	258, 1416,
	259, 1416,
	261, 1416,
	265, 1416,
	266, 1416,
	267, 1416,
	268, 1416,
	269, 1416,
	270, 1416,
	272, 1416,
	273, 1416,
	274, 1416,
	276, 1416,
	277, 1416,
	279, 1416,
	280, 1416,
	283, 1416,
	284, 1416,
	285, 1416,
	286, 1416,
	287, 1416,
	288, 1416,
	289, 1416,
	292, 1416,
	293, 1416,
	294, 1416,
	295, 1416,
	297, 1416,
	298, 1416,
	299, 1416,
	300, 1416,
	301, 1416,
	302, 1416,
	303, 1416,
	304, 1416,
	305, 1416,
	306, 1416,
	307, 1416,
	308, 1416,
	309, 1416,
	310, 1416,
	311, 1416,
	312, 1416,
	313, 1416,
	314, 1416,
	315, 1416,
	316, 1416,
	317, 1416,
	318, 1416,
	320, 1416,
	322, 1416,
	323, 1416,
	324, 1416,
	325, 1416,
	326, 1416,
	327, 1416,
	328, 1416,
	329, 1416,
	330, 1416,
	331, 1416,
	332, 1416,
	333, 1416,
	334, 1416,
	335, 1416,
	336, 1416,
	337, 1416,
	338, 1416,
	340, 1416,
	341, 1416,
	345, 1416,
	346, 1416,
	347, 1416,
	349, 1416,
	350, 1416,
	351, 1416,
	352, 1416,
	353, 1416,
	356, 1416,
	358, 1416,
	359, 1416,
	361, 1416,
	362, 1416,
	363, 1416,
	366, 1416,
	367, 1416,
	368, 1416,
	370, 1416,
	372, 1416,
	373, 1416,
	374, 1416,
	375, 1416,
	376, 1416,
	377, 1416,
	378, 1416,
	379, 1416,
	380, 1416,
	381, 1416,
	382, 1416,
	383, 1416,
	384, 1416,
	386, 1416,
	387, 1416,
	388, 1416,
	389, 1416,
	390, 1416,
	391, 1416,
	392, 1416,
	393, 1416,
	394, 1416,
	395, 1416,
	396, 1416,
	397, 1416,
	398, 1416,
	399, 1416,
	400, 1416,
	402, 1416,
	403, 1416,
	404, 1416,
	406, 1416,
	407, 1416,
	408, 1416,
	409, 1416,
	410, 1416,
	411, 1416,
	412, 1416,
	413, 1416,
	414, 1416,
	415, 1416,
	416, 1416,
	417, 1416,
	418, 1416,
	420, 1416,
	422, 1416,
	423, 1416,
	424, 1416,
	430, 1416,
	431, 1416,
	432, 1416,
	434, 1416,
	435, 1416,
	436, 1416,
	437, 1416,
	438, 1416,
	439, 1416,
	440, 1416,
	441, 1416,
	442, 1416,
	443, 1416,
	445, 1416,
	446, 1416,
	447, 1416,
	449, 1416,
	450, 1416,
	451, 1416,
	452, 1416,
	453, 1416,
	454, 1416,
	455, 1416,
	457, 1416,
	458, 1416,
	459, 1416,
	460, 1416,
	461, 1416,
	462, 1416,
	463, 1416,
	464, 1416,
	465, 1416,
	466, 1416,
	467, 1416,
	468, 1416,
	469, 1416,
	471, 1416,
	472, 1416,
	473, 1416,
	474, 1416,
	475, 1416,
	476, 1416,
	478, 1416,
	479, 1416,
	480, 1416,
	481, 1416,
	482, 1416,
	483, 1416,
	485, 1416,
	486, 1416,
	487, 1416,
	488, 1416,
	489, 1416,
	490, 1416,
	491, 1416,
	492, 1416,
	494, 1416,
	496, 1416,
	497, 1416,
	498, 1416,
	499, 1416,
	500, 1416,
	501, 1416,
	502, 1416,
	503, 1416,
	504, 1416,
	505, 1416,
	506, 1416,
	507, 1416,
	508, 1416,
	509, 1416,
	510, 1416,
	511, 1416,
	512, 1416,
	513, 1416,
	515, 1416,
	516, 1416,
	518, 1416,
	519, 1416,
	521, 1416,
	522, 1416,
	523, 1416,
	524, 1416,
	525, 1416,
	526, 1416,
	527, 1416,
	528, 1416,
	530, 1416,
	531, 1416,
	532, 1416,
	533, 1416,
	534, 1416,
	536, 1416,
	538, 1416,
	539, 1416,
	540, 1416,
	541, 1416,
	542, 1416,
	543, 1416,
	544, 1416,
	546, 1416,
	547, 1416,
	548, 1416,
	549, 1416,
	551, 1416,
	552, 1416,
	555, 1416,
	556, 1416,
	557, 1416,
	558, 1416,
	559, 1416,
	560, 1416,
	561, 1416,
	563, 1416,
	566, 1416,
	567, 1416,
	568, 1416,
	569, 1416,
	570, 1416,
	571, 1416,
	573, 1416,
	574, 1416,
	575, 1416,
	576, 1416,
	577, 1416,
	578, 1416,
	579, 1416,
	584, 1416,
	585, 1416,
	586, 1416,
	587, 1416,
	588, 1416,
	589, 1416,
	-2, 0,
	-1, 1717,
	1, 572,
	619, 572,
	621, 572,
	623, 572,
	-2, 1654,
	-1, 1720,
	4, 2874,
	11, 2874,
	12, 2874,
	14, 2874,
	15, 2874,
	16, 2874,
	17, 2874,
	18, 2874,
	19, 2874,
	21, 2874,
	22, 2874,
	23, 2874,
	24, 2874,
	25, 2874,
	26, 2874,
	27, 2874,
	28, 2874,
	30, 2874,
	31, 2874,
	34, 2874,
	35, 2874,
	37, 2874,
	39, 2874,
	41, 2874,
	43, 2874,
	44, 2874,
	46, 2874,
	47, 2874,
	48, 2874,
	49, 2874,
	50, 2874,
	51, 2874,
	52, 2874,
	53, 2874,
	54, 2874,
	56, 2874,
	57, 2874,
	58, 2874,
	59, 2874,
	61, 2874,
	62, 2874,
	63, 2874,
	64, 2874,
	65, 2874,
	66, 2874,
	67, 2874,
	70, 2874,
	71, 2874,
	72, 2874,
	73, 2874,
	74, 2874,
	76, 2874,
	77, 2874,
	78, 2874,
	79, 2874,
	82, 2874,
	83, 2874,
	84, 2874,
	85, 2874,
	86, 2874,
	87, 2874,
	88, 2874,
	89, 2874,
	91, 2874,
	92, 2874,
	93, 2874,
	94, 2874,
	95, 2874,
	97, 2874,
	98, 2874,
	99, 2874,
	100, 2874,
	101, 2874,
	102, 2874,
	103, 2874,
	104, 2874,
	106, 2874,
	107, 2874,
	108, 2874,
	109, 2874,
	110, 2874,
	111, 2874,
	112, 2874,
	120, 2874,
	121, 2874,
	122, 2874,
	123, 2874,
	124, 2874,
	126, 2874,
	127, 2874,
	128, 2874,
	129, 2874,
	131, 2874,
	132, 2874,
	133, 2874,
	135, 2874,
	136, 2874,
	137, 2874,
	139, 2874,
	140, 2874,
	141, 2874,
	144, 2874,
	145, 2874,
	146, 2874,
	148, 2874,
	149, 2874,
	150, 2874,
	152, 2874,
	153, 2874,
	154, 2874,
	156, 2874,
	157, 2874,
	158, 2874,
	159, 2874,
	160, 2874,
	161, 2874,
	162, 2874,
	163, 2874,
	164, 2874,
	165, 2874,
	166, 2874,
	167, 2874,
	168, 2874,
	169, 2874,
	170, 2874,
	171, 2874,
	172, 2874,
	176, 2874,
	177, 2874,
	178, 2874,
	179, 2874,
	180, 2874,
	181, 2874,
	182, 2874,
	183, 2874,
	186, 2874,
	187, 2874,
	189, 2874,
	190, 2874,
	191, 2874,
	193, 2874,
	195, 2874,
	196, 2874,
	197, 2874,
	198, 2874,
	199, 2874,
	200, 2874,
	201, 2874,
	202, 2874,
	203, 2874,
	204, 2874,
	205, 2874,
	206, 2874,
	207, 2874,
	208, 2874,
	209, 2874,
	211, 2874,
	212, 2874,
	214, 2874,
	215, 2874,
	217, 2874,
	218, 2874,
	219, 2874,
	220, 2874,
	221, 2874,
	222, 2874,
	223, 2874,
	224, 2874,
	225, 2874,
	226, 2874,
	227, 2874,
	228, 2874,
	229, 2874,
	230, 2874,
	231, 2874,
	232, 2874,
	233, 2874,
	234, 2874,
	235, 2874,
	237, 2874,
	238, 2874,
	240, 2874,
	241, 2874,
	242, 2874,
	244, 2874,
	245, 2874,
	246, 2874,
	247, 2874,
	248, 2874,
	250, 2874,
	252, 2874,
	253, 2874,
	254, 2874,
	255, 2874,
	256, 2874,
	257, 2874,
	258, 2874,
	259, 2874,
	260, 2874,
	261, 2874,
	263, 2874,
	264, 2874,
	265, 2874,
	266, 2874,
	267, 2874,
	268, 2874,
	269, 2874,
	270, 2874,
	272, 2874,
	273, 2874,
	274, 2874,
	276, 2874,
	277, 2874,
	278, 2874,
	279, 2874,
	280, 2874,
	281, 2874,
	283, 2874,
	284, 2874,
	285, 2874,
	286, 2874,
	287, 2874,
	288, 2874,
	289, 2874,
	292, 2874,
	293, 2874,
	294, 2874,
	295, 2874,
	296, 2874,
	297, 2874,
	298, 2874,
	299, 2874,
	300, 2874,
	301, 2874,
	302, 2874,
	303, 2874,
	304, 2874,
	305, 2874,
	306, 2874,
	307, 2874,
	308, 2874,
	309, 2874,
	310, 2874,
	311, 2874,
	312, 2874,
	313, 2874,
	314, 2874,
	315, 2874,
	316, 2874,
	317, 2874,
	318, 2874,
	320, 2874,
	321, 2874,
	322, 2874,
	323, 2874,
	324, 2874,
	325, 2874,
	326, 2874,
	327, 2874,
	328, 2874,
	329, 2874,
	330, 2874,
	331, 2874,
	332, 2874,
	333, 2874,
	334, 2874,
	335, 2874,
	336, 2874,
	337, 2874,
	338, 2874,
	340, 2874,
	341, 2874,
	344, 2874,
	345, 2874,
	346, 2874,
	347, 2874,
	349, 2874,
	350, 2874,
	351, 2874,
	352, 2874,
	353, 2874,
	356, 2874,
	358, 2874,
	361, 2874,
	362, 2874,
	363, 2874,
	364, 2874,
	366, 2874,
	367, 2874,
	368, 2874,
	370, 2874,
	372, 2874,
	373, 2874,
	374, 2874,
	375, 2874,
	376, 2874,
	377, 2874,
	378, 2874,
	379, 2874,
	380, 2874,
	381, 2874,
	382, 2874,
	383, 2874,
	384, 2874,
	386, 2874,
	387, 2874,
	388, 2874,
	389, 2874,
	390, 2874,
	391, 2874,
	392, 2874,
	393, 2874,
	394, 2874,
	395, 2874,
	396, 2874,
	397, 2874,
	398, 2874,
	399, 2874,
	400, 2874,
	402, 2874,
	403, 2874,
	404, 2874,
	406, 2874,
	407, 2874,
	408, 2874,
	409, 2874,
	410, 2874,
	411, 2874,
	412, 2874,
	413, 2874,
	414, 2874,
	415, 2874,
	416, 2874,
	417, 2874,
	418, 2874,
	420, 2874,
	422, 2874,
	423, 2874,
	424, 2874,
	430, 2874,
	431, 2874,
	432, 2874,
	433, 2874,
	434, 2874,
	435, 2874,
	436, 2874,
	437, 2874,
	438, 2874,
	439, 2874,
	440, 2874,
	441, 2874,
	442, 2874,
	443, 2874,
	445, 2874,
	446, 2874,
	447, 2874,
	448, 2874,
	449, 2874,
	450, 2874,
	451, 2874,
	452, 2874,
	453, 2874,
	454, 2874,
	455, 2874,
	456, 2874,
	457, 2874,
	458, 2874,
	459, 2874,
	460, 2874,
	461, 2874,
	462, 2874,
	463, 2874,
	464, 2874,
	465, 2874,
	466, 2874,
	467, 2874,
	468, 2874,
	469, 2874,
	471, 2874,
	472, 2874,
	473, 2874,
	474, 2874,
	475, 2874,
	476, 2874,
	478, 2874,
	479, 2874,
	480, 2874,
	481, 2874,
	482, 2874,
	483, 2874,
	484, 2874,
	485, 2874,
	486, 2874,
	487, 2874,
	488, 2874,
	489, 2874,
	490, 2874,
	491, 2874,
	492, 2874,
	494, 2874,
	496, 2874,
	497, 2874,
	498, 2874,
	499, 2874,
	500, 2874,
	501, 2874,
	502, 2874,
	503, 2874,
	504, 2874,
	505, 2874,
	506, 2874,
	507, 2874,
	508, 2874,
	509, 2874,
	510, 2874,
	511, 2874,
	512, 2874,
	513, 2874,
	515, 2874,
	516, 2874,
	517, 2874,
	518, 2874,
	519, 2874,
	521, 2874,
	522, 2874,
	523, 2874,
	524, 2874,
	525, 2874,
	526, 2874,
	527, 2874,
	528, 2874,
	530, 2874,
	531, 2874,
	532, 2874,
	533, 2874,
	534, 2874,
	536, 2874,
	538, 2874,
	539, 2874,
	540, 2874,
	541, 2874,
	542, 2874,
	543, 2874,
	544, 2874,
	546, 2874,
	547, 2874,
	548, 2874,
	549, 2874,
	551, 2874,
	552, 2874,
	555, 2874,
	556, 2874,
	557, 2874,
	558, 2874,
	559, 2874,
	560, 2874,
	561, 2874,
	563, 2874,
	566, 2874,
	567, 2874,
	568, 2874,
	569, 2874,
	570, 2874,
	571, 2874,
	573, 2874,
	574, 2874,
	575, 2874,
	576, 2874,
	577, 2874,
	578, 2874,
	579, 2874,
	584, 2874,
	585, 2874,
	586, 2874,
	587, 2874,
	588, 2874,
	589, 2874,
	590, 2874,
	592, 2874,
	600, 2874,
	601, 2874,
	602, 2874,
	603, 2874,
	604, 2874,
	605, 2874,
	607, 2874,
	608, 2874,
	609, 2874,
	610, 2874,
	611, 2874,
	612, 2874,
	613, 2874,
	614, 2874,
	615, 2874,
	618, 2874,
	621, 2874,
	622, 2874,
	624, 2874,
	625, 2874,
	-2, 0,
	-1, 1725,
	194, 2751,
	535, 2751,
	602, 2751,
	622, 2751,
	-2, 0,
	-1, 1779,
	408, 962,
	476, 962,
	519, 962,
	540, 962,
	-2, 0,
	-1, 1790,
	1, 1488,
	619, 1488,
	621, 1488,
	623, 1488,
	-2, 0,
	-1, 1807,
	1, 957,
	619, 957,
	621, 957,
	623, 957,
	-2, 0,
	-1, 1808,
	1, 1001,
	619, 1001,
	621, 1001,
	623, 1001,
	-2, 0,
	-1, 1809,
	1, 1009,
	619, 1009,
	621, 1009,
	623, 1009,
	-2, 0,
	-1, 1812,
	1, 966,
	619, 966,
	621, 966,
	623, 966,
	-2, 0,
	-1, 1814,
	1, 972,
	619, 972,
	621, 972,
	623, 972,
	-2, 0,
	-1, 1817,
	1, 968,
	619, 968,
	621, 968,
	623, 968,
	-2, 0,
	-1, 1822,
	1, 982,
	619, 982,
	621, 982,
	623, 982,
	-2, 0,
	-1, 1855,
	1, 2733,
	619, 2733,
	621, 2733,
	622, 2733,
	623, 2733,
	-2, 0,
	-1, 1859,
	1, 1059,
	619, 1059,
	621, 1059,
	623, 1059,
	-2, 0,
	-1, 1876,
	1, 1538,
	623, 1538,
	-2, 1543,
	-1, 1879,
	175, 1697,
	188, 1697,
	282, 1697,
	354, 1697,
	-2, 1635,
	-1, 1979,
	155, 1656,
	175, 1656,
	188, 1656,
	249, 1656,
	282, 1656,
	354, 1656,
	365, 1656,
	553, 1656,
	-2, 2107,
	-1, 2040,
	621, 2282,
	-2, 0,
	-1, 2075,
	155, 1656,
	175, 1656,
	188, 1656,
	249, 1656,
	282, 1656,
	354, 1656,
	365, 1656,
	553, 1656,
	-2, 1789,
	-1, 2115,
	535, 2748,
	622, 2748,
	625, 2748,
	-2, 0,
	-1, 2132,
	620, 1930,
	-2, 1918,
	-1, 2164,
	194, 2748,
	622, 2748,
	625, 2748,
	-2, 0,
	-1, 2207,
	1, 731,
	623, 731,
	-2, 1543,
	-1, 2372,
	230, 272,
	-2, 2430,
	-1, 2373,
	230, 273,
	-2, 327,
	-1, 2484,
	1, 959,
	619, 959,
	621, 959,
	623, 959,
	-2, 0,
	-1, 2485,
	1, 1003,
	619, 1003,
	621, 1003,
	623, 1003,
	-2, 0,
	-1, 2486,
	1, 1011,
	619, 1011,
	621, 1011,
	623, 1011,
	-2, 0,
	-1, 2487,
	1, 1061,
	619, 1061,
	621, 1061,
	623, 1061,
	-2, 0,
	-1, 2528,
	1, 984,
	619, 984,
	621, 984,
	623, 984,
	-2, 0,
	-1, 2549,
	1, 1044,
	619, 1044,
	621, 1044,
	623, 1044,
	-2, 0,
	-1, 2596,
	454, 1724,
	455, 1724,
	-2, 1963,
	-1, 2627,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 1983,
	-1, 2628,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 1984,
	-1, 2629,
	98, 0,
	263, 0,
	264, 0,
	604, 0,
	605, 0,
	-2, 1985,
	-1, 2630,
	98, 0,
	263, 0,
	264, 0,
	604, 0,
	605, 0,
	-2, 1986,
	-1, 2631,
	98, 0,
	263, 0,
	264, 0,
	604, 0,
	605, 0,
	-2, 1987,
	-1, 2632,
	98, 0,
	263, 0,
	264, 0,
	604, 0,
	605, 0,
	-2, 1988,
	-1, 2633,
	98, 0,
	263, 0,
	264, 0,
	604, 0,
	605, 0,
	-2, 1989,
	-1, 2634,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 1990,
	-1, 2646,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 2002,
	-1, 2647,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 2003,
	-1, 2648,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 2004,
	-1, 2652,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2011,
	-1, 2658,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2015,
	-1, 2660,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2023,
	-1, 2661,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2024,
	-1, 2662,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2025,
	-1, 2663,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2026,
	-1, 2837,
	5, 2434,
	194, 2293,
	620, 2431,
	-2, 2422,
	-1, 2838,
	194, 2294,
	-2, 2825,
	-1, 2839,
	194, 2295,
	-2, 2629,
	-1, 2840,
	194, 2296,
	-2, 2507,
	-1, 2841,
	194, 2297,
	-2, 2567,
	-1, 2842,
	194, 2298,
	-2, 2614,
	-1, 2843,
	194, 2299,
	-2, 2746,
	-1, 2844,
	194, 2300,
	-2, 2090,
	-1, 2915,
	1, 1790,
	2, 1790,
	109, 1790,
	155, 1790,
	175, 1790,
	188, 1790,
	195, 1790,
	213, 1790,
	216, 1790,
	244, 1790,
	249, 1790,
	260, 1790,
	278, 1790,
	282, 1790,
	321, 1790,
	354, 1790,
	359, 1790,
	365, 1790,
	444, 1790,
	448, 1790,
	553, 1790,
	564, 1790,
	581, 1790,
	582, 1790,
	583, 1790,
	593, 1790,
	619, 1790,
	621, 1790,
	623, 1790,
	625, 1790,
	-2, 1789,
	-1, 2928,
	620, 2403,
	-2, 2417,
	-1, 2930,
	1, 344,
	581, 344,
	-2, 1683,
	-1, 2960,
	620, 1929,
	-2, 1919,
	-1, 3164,
	1, 1391,
	439, 1348,
	478, 1348,
	596, 1348,
	619, 1391,
	621, 1391,
	623, 1391,
	-2, 1683,
	-1, 3343,
	360, 1727,
	-2, 2864,
	-1, 3344,
	360, 1728,
	-2, 2730,
	-1, 3348,
	454, 2359,
	455, 2359,
	-2, 2088,
	-1, 3349,
	454, 2363,
	455, 2363,
	-2, 2089,
	-1, 3350,
	454, 2360,
	455, 2360,
	-2, 2088,
	-1, 3351,
	454, 2364,
	455, 2364,
	-2, 2089,
	-1, 3364,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2013,
	-1, 3365,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2017,
	-1, 3371,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2019,
	-1, 3598,
	1, 726,
	619, 726,
	621, 726,
	623, 726,
	-2, 1543,
	-1, 3787,
	45, 2394,
	-2, 1131,
	-1, 3792,
	1, 1391,
	619, 1391,
	621, 1391,
	623, 1391,
	-2, 1683,
	-1, 3899,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2021,
	-1, 3906,
	254, 0,
	256, 0,
	344, 0,
	-2, 2040,
	-1, 3974,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 2069,
	-1, 3975,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 2070,
	-1, 3976,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 2071,
	-1, 3980,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 2075,
	-1, 3981,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 2076,
	-1, 3982,
	14, 0,
	15, 0,
	16, 0,
	600, 0,
	601, 0,
	602, 0,
	-2, 2077,
	-1, 4030,
	620, 2404,
	-2, 2418,
	-1, 4233,
	622, 2981,
	-2, 1609,
	-1, 4290,
	254, 0,
	256, 0,
	344, 0,
	-2, 2041,
	-1, 4293,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2044,
	-1, 4294,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2046,
	-1, 4408,
	622, 2419,
	-2, 1426,
	-1, 4568,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2045,
	-1, 4569,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2047,
	-1, 4580,
	254, 0,
	-2, 2080,
	-1, 4768,
	254, 0,
	-2, 2081,
	-1, 4988,
	53, 0,
	227, 0,
	281, 0,
	484, 0,
	590, 0,
	603, 0,
	-2, 2828,
}

const sqlPrivate = 57344

const sqlLast = 143208

var sqlAct = [...]int{
	283, 5179, 4923, 3237, 1403, 3250, 3776, 5106, 3096, 3502,
	5034, 4816, 5050, 4808, 4987, 4637, 4974, 5000, 5120, 3775,
	4922, 4860, 4879, 4956, 2369, 4934, 4913, 5002, 5001, 4714,
	4737, 2267, 4937, 1327, 4273, 4998, 4701, 1459, 4619, 5059,
	4040, 4685, 3624, 4528, 3939, 4986, 4523, 4484, 1316, 4589,
	4457, 2447, 3891, 2606, 4772, 4517, 4642, 3207, 1147, 4557,
	4225, 1395, 2459, 3809, 1598, 4217, 4508, 4720, 3627, 4510,
	4845, 1393, 4144, 1400, 738, 3357, 4405, 872, 4385, 2870,
	2457, 3032, 2176, 2189, 2675, 3111, 1888, 4533, 3803, 4174,
	3630, 4191, 4172, 3760, 2614, 1743, 2099, 3842, 3687, 1478,
	3840, 2276, 3196, 2081, 3749, 872, 1138, 810, 3765, 3262,
	3226, 3221, 3612, 4585, 3223, 3742, 2119, 3613, 3764, 3741,
	3614, 2607, 3767, 4033, 3548, 2942, 2455, 3508, 3525, 2120,
	749, 3485, 3517, 4272, 3252, 1741, 1787, 1571, 3555, 1146,
	187, 3257, 2050, 951, 2420, 3238, 3506, 2356, 3651, 947,
	4, 5035, 2358, 4329, 3171, 2352, 4000, 2304, 2026, 3484,
	2908, 2688, 277, 1623, 2288, 3031, 2611, 1987, 869, 4773,
	1957, 942, 3135, 276, 3341, 1307, 1681, 2753, 3256, 2910,
	1398, 867, 2357, 2350, 806, 2755, 2344, 2325, 3200, 2332,
	1197, 2907, 2255, 3208, 1442, 2259, 1876, 2051, 1461, 2888,
	2187, 1202, 1386, 2744, 1193, 2672, 2595, 2576, 2578, 1718,
	2943, 3231, 4404, 2407, 1684, 4880, 2347, 1022, 873, 783,
	3056, 1600, 2406, 874, 3017, 1429, 3057, 1372, 3768, 2747,
	725, 2021, 819, 2971, 747, 1310, 187, 2897, 2070, 878,
	2067, 2060, 2878, 2833, 1289, 2725, 1971, 1324, 1457, 197,
	881, 2867, 2799, 1889, 1890, 2577, 1383, 1822, 113, 2579,
	198, 2366, 802, 2433, 791, 1807, 1579, 878, 1709, 1618,
	1716, 5051, 1454, 968, 2600, 5107, 1178, 742, 881, 45,
	44, 42, 33, 31, 29, 1287, 1895, 739, 766, 751,
	1306, 923, 1312, 1875, 1629, 862, 1043, 4014, 3394, 4015,
	2178, 3388, 822, 826, 4041, 5190, 3504, 2178, 2178, 2887,
	924, 2178, 1622, 4996, 5182, 4609, 1903, 1904, 3828, 1936,
	1937, 1938, 1947, 1948, 1949, 2178, 2178, 5170, 5169, 5139,
	5137, 2887, 2887, 4641, 4641, 4606, 1142, 5080, 5036, 1940,
	1934, 2378, 5037, 5026, 4603, 5024, 2199, 2887, 1906, 2887,
	3818, 5021, 1142, 3828, 3565, 5022, 1903, 1904, 1953, 5018,
	4984, 2905, 4983, 5019, 2378, 4982, 2378, 4972, 4970, 3267,
	2378, 4641, 4641, 4965, 1304, 1959, 3819, 4723, 4960, 3583,
	1934, 4959, 4641, 1643, 1905, 4641, 4932, 4899, 1906, 4892,
	4641, 2951, 4891, 2887, 1925, 4884, 2887, 4859, 4856, 2378,
	4838, 2378, 4641, 1922, 4474, 4770, 4751, 4716, 4660, 2951,
	4254, 4074, 2378, 1131, 1438, 1959, 4659, 4648, 1290, 1290,
	2378, 2378, 4647, 4640, 1905, 4596, 4641, 4641, 4570, 2378,
	4356, 4544, 2951, 3580, 2196, 3267, 4541, 1122, 4452, 4432,
	3828, 1438, 2887, 2887, 2196, 1200, 2456, 2973, 1121, 2880,
	4292, 1322, 4241, 1813, 2951, 4235, 3835, 4188, 1143, 3835,
	4105, 4189, 4073, 4025, 4106, 4023, 4074, 4026, 1342, 4024,
	4007, 96, 2199, 4004, 2887, 3923, 3919, 2947, 1753, 2378,
	2887, 1928, 1929, 1930, 1931, 3834, 3501, 3403, 2199, 3835,
	2887, 1911, 1204, 3404, 3496, 3495, 3446, 1137, 2887, 2887,
	3447, 3444, 3436, 3434, 3405, 3445, 3437, 2887, 2887, 3266,
	3248, 3247, 2996, 3267, 2443, 2443, 2887, 2950, 2940, 2199,
	2932, 2951, 2887, 2886, 2378, 1291, 1293, 2887, 1294, 2442,
	1247, 1911, 1944, 2443, 1350, 1954, 3356, 2199, 2887, 244,
	4900, 4774, 1933, 1935, 4765, 4753, 4723, 3267, 4004, 2701,
	2702, 2703, 2720, 2721, 2722, 2879, 4521, 4474, 1343, 1950,
	2196, 1951, 4433, 4254, 4190, 3103, 2281, 3016, 1920, 1921,
	2723, 2213, 2177, 2193, 3202, 1343, 2377, 3121, 3007, 2046,
	1617, 4123, 1933, 1935, 3894, 3867, 1942, 2068, 2337, 246,
	3820, 1789, 2924, 2923, 5011, 2922, 2887, 2921, 2920, 1295,
	1292, 1926, 1130, 244, 1642, 1959, 1129, 1734, 1128, 1637,
	3821, 4347, 3393, 1127, 1126, 1125, 1124, 3455, 3456, 1120,
	3473, 3474, 3475, 1119, 2713, 1118, 1117, 2750, 1116, 1115,
	3313, 1622, 1114, 2709, 1113, 1112, 1111, 1110, 245, 1631,
	1109, 1926, 1108, 1107, 1106, 1105, 1104, 1103, 1102, 1952,
	1101, 1083, 238, 246, 1020, 1019, 1018, 1017, 1016, 1015,
	1014, 239, 1013, 1012, 1631, 1903, 1904, 1011, 1010, 1941,
	1009, 1008, 1007, 1630, 2179, 1006, 1005, 1903, 1904, 1004,
	1956, 2179, 2179, 1003, 1002, 2179, 1001, 1000, 999, 199,
	1199, 998, 1319, 997, 996, 3470, 995, 1906, 994, 2179,
	2179, 1934, 245, 993, 992, 991, 990, 989, 988, 1906,
	987, 2714, 2715, 2716, 2717, 986, 985, 984, 973, 2520,
	1956, 2708, 2751, 972, 971, 966, 965, 1757, 958, 957,
	956, 941, 940, 1905, 897, 896, 1959, 895, 1932, 894,
	885, 884, 4304, 3234, 2196, 1905, 2196, 883, 882, 846,
	817, 816, 815, 199, 797, 271, 3024, 270, 269, 1903,
	1904, 1927, 268, 267, 4050, 1176, 2196, 266, 265, 264,
	263, 262, 261, 260, 244, 259, 258, 257, 256, 255,
	254, 253, 252, 1934, 1405, 1202, 251, 156, 250, 1945,
	249, 1906, 3461, 1631, 248, 247, 4019, 3836, 2718, 2719,
	3551, 1927, 3416, 3399, 2752, 3390, 2749, 3818, 3293, 3499,
	1343, 3181, 1202, 1202, 1202, 3216, 1738, 2955, 1959, 4535,
	2929, 3024, 1958, 2914, 246, 2568, 2071, 1905, 2240, 2198,
	1636, 2711, 2094, 2782, 1998, 2780, 1870, 1625, 2766, 1450,
	1911, 1326, 2029, 2764, 5010, 5007, 3455, 3456, 1411, 2028,
	1481, 244, 1911, 3500, 1202, 1902, 4985, 4969, 2199, 1631,
	1202, 1603, 1958, 1405, 2196, 2983, 2177, 1608, 4864, 2196,
	1446, 1447, 1448, 245, 4762, 4777, 4756, 2032, 4632, 4754,
	2879, 4584, 4542, 2193, 2571, 4520, 1433, 238, 1202, 4362,
	1202, 4327, 1202, 2029, 4326, 1943, 239, 1989, 4320, 1603,
	2028, 246, 3471, 1933, 1935, 1917, 1918, 1924, 1946, 1923,
	1919, 4319, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912,
	1913, 244, 4318, 4311, 199, 1405, 4314, 1589, 2027, 1686,
	4313, 4310, 4111, 4308, 1911, 4303, 4300, 1318, 1584, 4299,
	1145, 3455, 3456, 4187, 1195, 1603, 244, 4054, 4201, 4053,
	245, 4052, 1603, 1914, 1915, 1907, 1908, 1909, 1910, 1912,
	1913, 1202, 1926, 1202, 238, 1343, 1996, 4029, 1603, 3995,
	2754, 246, 3994, 239, 3993, 3915, 3910, 1202, 3546, 1202,
	1621, 1956, 3492, 3483, 3454, 1933, 1935, 3455, 3456, 1425,
	3451, 2712, 1390, 3450, 3448, 3443, 246, 3022, 1690, 1693,
	3442, 199, 1427, 3441, 3438, 1377, 1380, 3435, 3415, 3398,
	3455, 3456, 1320, 3473, 3474, 3475, 1991, 1303, 3391, 3389,
	245, 3461, 3249, 2915, 1474, 2737, 1568, 1573, 1603, 1902,
	1901, 1815, 1989, 4288, 238, 4537, 5185, 2423, 878, 5128,
	2385, 1956, 1606, 239, 1926, 245, 2383, 5127, 1202, 881,
	5049, 1202, 1958, 5047, 1328, 1576, 3941, 4924, 4202, 238,
	1453, 1990, 3472, 1988, 1419, 4843, 4828, 4824, 239, 4823,
	4822, 199, 4802, 3218, 4801, 244, 4799, 244, 4776, 4775,
	1464, 1465, 4749, 244, 2678, 187, 187, 3021, 3470, 2748,
	4735, 4732, 4731, 3572, 1620, 4724, 199, 4121, 4712, 1619,
	4711, 4656, 1456, 1679, 4627, 4582, 1466, 1467, 4565, 4564,
	4504, 4500, 4497, 4475, 4346, 4325, 3461, 1721, 1723, 4255,
	4109, 2964, 1927, 1956, 1758, 246, 4108, 246, 4089, 4088,
	4086, 3497, 1696, 246, 3021, 2698, 2699, 2700, 2724, 2710,
	2704, 244, 2706, 2707, 2705, 2692, 2693, 2694, 2695, 2696,
	2697, 4010, 3021, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
	1202, 3998, 3461, 3905, 1976, 3837, 1719, 3829, 1433, 3795,
	3706, 1433, 3662, 3629, 245, 3574, 245, 3420, 3419, 3414,
	3380, 3195, 245, 1958, 3049, 3461, 1202, 244, 238, 1831,
	238, 246, 1202, 2035, 2034, 244, 238, 239, 2684, 239,
	3455, 3456, 2033, 1143, 1927, 239, 3467, 3468, 3469, 2030,
	1956, 1479, 4202, 3466, 3464, 3465, 3457, 3458, 3459, 3460,
	3462, 3463, 2022, 2020, 2962, 199, 3471, 199, 1880, 2961,
	1712, 2926, 2919, 3233, 2885, 2762, 1975, 246, 2093, 2049,
	245, 1763, 2044, 4779, 3543, 246, 2043, 2042, 2041, 2040,
	2039, 2038, 2037, 3477, 238, 2036, 1733, 2017, 2016, 2015,
	1874, 1903, 1904, 239, 2014, 1958, 1909, 1910, 1912, 1913,
	2013, 2012, 1752, 1916, 1914, 1915, 1907, 1908, 1909, 1910,
	1912, 1913, 2011, 3217, 244, 1934, 245, 1978, 2010, 2009,
	2008, 199, 2007, 1906, 245, 3471, 4536, 1202, 1202, 1202,
	238, 2006, 2005, 1202, 2004, 1956, 2003, 2002, 238, 239,
	1324, 1991, 1324, 1977, 1974, 1969, 244, 239, 1418, 1347,
	1959, 40, 1338, 4778, 2048, 4507, 1780, 1481, 4358, 1905,
	4296, 4049, 4022, 4013, 246, 3402, 4604, 199, 2917, 1202,
	1816, 4360, 872, 1405, 1710, 199, 4048, 1715, 2137, 872,
	1881, 1405, 1990, 1405, 3570, 1972, 4435, 1915, 1907, 1908,
	1909, 1910, 1912, 1913, 3455, 3456, 246, 3824, 2089, 1443,
	3665, 3097, 1460, 5119, 1956, 3461, 4832, 1460, 4825, 4725,
	4540, 2953, 2057, 245, 1877, 4478, 3472, 4477, 4476, 1445,
	4434, 4349, 4261, 1458, 1885, 4260, 1122, 238, 1884, 4259,
	4258, 4257, 4256, 2105, 4075, 4017, 239, 1121, 244, 4016,
	2031, 3839, 3838, 1405, 3831, 245, 2116, 2104, 2110, 1202,
	1879, 3830, 1460, 3726, 2166, 1460, 2168, 1898, 1899, 238,
	1438, 5003, 1903, 1904, 199, 3892, 1911, 5076, 239, 2078,
	2054, 2055, 5074, 1202, 1143, 3457, 3458, 3459, 3460, 3462,
	3463, 1481, 2781, 187, 2779, 3472, 1444, 2765, 246, 4999,
	2183, 4721, 2763, 2185, 1906, 2071, 199, 4757, 1290, 2190,
	4755, 1872, 4205, 2192, 2023, 2024, 2029, 2270, 2195, 2231,
	3075, 2315, 1438, 2028, 3696, 3471, 2201, 1933, 1935, 4135,
	3440, 3439, 2097, 3362, 3060, 1441, 4631, 2208, 2205, 2219,
	1905, 2238, 2012, 1433, 878, 4104, 1099, 245, 2012, 3631,
	2111, 878, 4195, 2359, 1322, 881, 1322, 2160, 1438, 2476,
	3133, 238, 881, 2102, 2204, 1832, 3778, 1439, 3777, 4069,
	239, 4070, 2098, 4794, 2000, 4795, 1779, 2103, 3464, 3465,
	3457, 3458, 3459, 3460, 3462, 3463, 1926, 2076, 2069, 1788,
	4586, 2079, 4795, 1100, 2448, 4715, 5032, 4518, 199, 5008,
	3263, 3750, 4464, 1789, 1956, 2360, 4209, 4184, 4141, 4132,
	1143, 2225, 2224, 4114, 2047, 1460, 2233, 3864, 3596, 2540,
	2453, 1997, 3504, 2391, 3943, 3058, 3408, 2334, 3459, 3460,
	3462, 3463, 3099, 2088, 2087, 2086, 2084, 2083, 2082, 3467,
	3468, 3469, 2073, 2745, 2181, 1714, 3466, 3464, 3465, 3457,
	3458, 3459, 3460, 3462, 3463, 2960, 1603, 1603, 2424, 2207,
	4651, 2117, 2045, 2025, 4623, 1956, 1481, 5009, 3758, 1439,
	2417, 1689, 1613, 4419, 1414, 1302, 1376, 3118, 2314, 5023,
	5020, 4416, 3814, 3115, 3113, 3472, 4080, 1767, 4817, 2324,
	1435, 4524, 4931, 3634, 3292, 4099, 2324, 3230, 1746, 3733,
	2321, 5111, 2281, 3173, 5078, 5056, 5077, 4654, 936, 4650,
	4629, 2203, 3886, 3600, 2549, 1141, 4680, 2546, 2311, 4154,
	2319, 4421, 1664, 1656, 1097, 1829, 2329, 2245, 2095, 2246,
	2997, 1095, 1093, 1091, 1088, 5181, 2534, 2228, 2532, 2253,
	2254, 4833, 1715, 4673, 3571, 3034, 1927, 4662, 4467, 4466,
	1445, 2370, 2375, 4152, 1811, 4151, 2234, 1830, 2226, 4143,
	2750, 4129, 4128, 1603, 2324, 1603, 2220, 1603, 4126, 3020,
	2247, 2248, 2547, 4125, 2279, 1440, 3020, 2251, 2252, 4113,
	4072, 4071, 3739, 2275, 3018, 1603, 1603, 1079, 1615, 4153,
	3738, 3018, 1435, 3698, 3564, 1319, 3413, 1319, 1811, 1603,
	2548, 3412, 2306, 3411, 1445, 2287, 3410, 1958, 3366, 1140,
	3131, 1603, 1665, 1603, 1603, 1603, 3130, 1444, 937, 3120,
	878, 3109, 2485, 3101, 3091, 3602, 4083, 3090, 3085, 2364,
	1828, 881, 2309, 3664, 2362, 2363, 1436, 872, 3465, 3457,
	3458, 3459, 3460, 3462, 3463, 1437, 2322, 4367, 2795, 3084,
	4690, 2794, 2241, 3083, 3065, 2751, 3064, 2230, 2616, 1202,
	3025, 2413, 3037, 2475, 2397, 1810, 1808, 2941, 3455, 3456,
	2281, 1444, 2659, 1765, 2418, 1878, 1620, 1440, 789, 2312,
	2131, 1619, 2586, 3227, 2968, 2320, 2486, 789, 2308, 2430,
	4652, 2328, 2305, 4415, 4624, 2229, 1202, 2945, 3631, 3694,
	1907, 1908, 1909, 1910, 1912, 1913, 2360, 3865, 2566, 1810,
	4417, 4563, 2448, 2451, 3062, 1702, 5112, 1701, 2134, 1660,
	5057, 2461, 2558, 2307, 2480, 1142, 1085, 2376, 2323, 1760,
	1809, 2438, 1202, 2472, 1202, 2323, 1868, 2752, 1436, 2749,
	1700, 1202, 1699, 2584, 2137, 2137, 1481, 1437, 1202, 1202,
	1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
	1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
	1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
	1202, 1202, 1202, 1202, 1719, 1202, 1719, 1202, 1202, 1202,
	1202, 2427, 2399, 2440, 2398, 4377, 2570, 3455, 3456, 878,
	1714, 2954, 2586, 2323, 2468, 2505, 4436, 1673, 3463, 3004,
	881, 2436, 2432, 1202, 1462, 1463, 2588, 1202, 1202, 1462,
	1463, 1143, 2467, 1143, 2561, 1202, 1438, 2379, 1419, 1202,
	2575, 1202, 1202, 2444, 1712, 2445, 2435, 3079, 2435, 1481,
	1318, 2280, 1318, 3461, 2674, 1202, 1202, 1202, 1202, 2492,
	1761, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 2745,
	2674, 4376, 2317, 2584, 1462, 1463, 3695, 1462, 1463, 3270,
	2277, 3036, 1616, 2612, 2613, 3470, 1913, 1202, 1202, 1202,
	1202, 1202, 1202, 1202, 1202, 1202, 2484, 1362, 1781, 844,
	1202, 3308, 2495, 1678, 3048, 2538, 2726, 2727, 1871, 2585,
	1827, 3339, 1324, 2754, 4810, 2273, 4691, 2931, 2526, 1481,
	2726, 2742, 1847, 1139, 788, 1320, 5143, 1320, 1324, 4689,
	1841, 3354, 2528, 788, 4164, 4687, 5077, 5113, 1438, 4418,
	939, 938, 2599, 3047, 1202, 1481, 2278, 2790, 2682, 2489,
	2560, 2437, 3874, 3455, 3456, 2680, 1789, 1410, 1845, 2582,
	5114, 2303, 1777, 3471, 3873, 4413, 2836, 2836, 2850, 2670,
	2726, 2316, 3310, 2871, 2873, 2493, 2274, 2483, 3117, 2877,
	1789, 2754, 3461, 5005, 4686, 2583, 2574, 1883, 2318, 3599,
	2573, 2580, 2587, 2572, 4165, 1122, 2690, 3681, 1122, 1122,
	2668, 934, 4562, 933, 2902, 3061, 2603, 2852, 2741, 2604,
	2605, 3116, 4688, 2557, 4785, 842, 4465, 3114, 3112, 3932,
	1685, 2313, 4127, 2927, 3000, 2944, 2315, 2235, 2236, 2585,
	4124, 2089, 2748, 4110, 3035, 3673, 1417, 790, 4163, 2894,
	3019, 4812, 1956, 4096, 2656, 4057, 790, 3002, 4044, 3011,
	1405, 1405, 1824, 3745, 2991, 2078, 3737, 3682, 2792, 1766,
	1628, 5115, 1635, 2793, 1641, 2310, 2796, 2686, 2797, 2798,
	3353, 1089, 982, 3320, 2967, 1683, 1290, 1428, 1089, 1089,
	1090, 1089, 2533, 1143, 2531, 3003, 2739, 3692, 5089, 3119,
	2970, 1481, 3471, 1143, 3082, 3674, 3063, 1143, 3929, 2317,
	3605, 3680, 5123, 2382, 2381, 2583, 3001, 3168, 187, 2989,
	2893, 2567, 5098, 3377, 2978, 2986, 1322, 2615, 2948, 5097,
	2982, 2916, 5145, 3472, 2992, 1903, 1904, 1659, 3461, 3346,
	3347, 2845, 1322, 1732, 2993, 1737, 2862, 2966, 2832, 3672,
	2137, 2875, 2125, 1433, 3375, 2664, 2301, 2883, 2884, 1751,
	2939, 1756, 2899, 2900, 2895, 737, 2901, 1906, 2906, 2956,
	2031, 2912, 2913, 2076, 4094, 5006, 5064, 3169, 4278, 2665,
	2281, 1956, 4277, 3811, 5117, 2666, 3868, 4411, 3746, 2671,
	3930, 3812, 732, 2314, 3316, 2754, 1143, 3010, 1481, 3323,
	2338, 1662, 4908, 1905, 4414, 2345, 4896, 2178, 2994, 4400,
	3095, 4976, 1603, 4977, 2335, 2355, 2302, 4614, 3098, 1439,
	2757, 3167, 1405, 1842, 3087, 2963, 3164, 1814, 2654, 3026,
	3743, 2657, 847, 3086, 4818, 4840, 1839, 2988, 2023, 2024,
	1685, 2559, 3261, 1202, 1202, 4393, 1202, 2284, 3471, 3618,
	3646, 843, 2279, 3260, 2985, 3601, 2131, 2131, 858, 2995,
	2300, 2972, 3472, 1790, 1086, 2987, 2491, 1762, 2977, 3023,
	3709, 872, 2980, 1405, 2981, 2354, 3811, 3206, 860, 3068,
	3110, 787, 2653, 5004, 3466, 3464, 3465, 3457, 3458, 3459,
	3460, 3462, 3463, 1614, 2134, 2134, 1345, 3080, 2998, 3372,
	4394, 859, 845, 4494, 1603, 1361, 841, 2285, 3052, 3645,
	1911, 2318, 3067, 2018, 3214, 2316, 2928, 1603, 3568, 1603,
	3730, 2339, 3066, 2335, 5042, 1603, 4274, 1956, 3020, 3373,
	4811, 5063, 2271, 3378, 5043, 3081, 3368, 1603, 3322, 4575,
	3012, 3013, 1435, 3040, 3014, 3015, 3039, 3042, 5087, 3029,
	4942, 2283, 2673, 852, 4412, 3089, 2754, 3176, 4559, 2289,
	866, 1405, 3178, 1405, 4446, 756, 3126, 1319, 5141, 1843,
	3319, 5121, 2736, 1968, 857, 3132, 3418, 2527, 3273, 3274,
	3165, 3166, 2667, 1319, 2293, 1202, 3088, 2898, 5116, 3280,
	3281, 3282, 2669, 3093, 5146, 2911, 1142, 3945, 5130, 4506,
	878, 4894, 3073, 3074, 3076, 3077, 3078, 3100, 3472, 3107,
	4268, 881, 3264, 3466, 3464, 3465, 3457, 3458, 3459, 3460,
	3462, 3463, 3210, 3123, 2681, 3296, 856, 1440, 2930, 3199,
	1846, 3124, 3125, 878, 3294, 3652, 3295, 3290, 2488, 3204,
	1840, 2290, 187, 789, 881, 4601, 4895, 3174, 3268, 2059,
	1776, 1778, 1202, 3255, 3265, 3275, 1620, 3276, 1202, 1202,
	3271, 3179, 3008, 3241, 3619, 2335, 2482, 3744, 1844, 854,
	4511, 4470, 4045, 3193, 3245, 1882, 3258, 1351, 983, 3243,
	3321, 1349, 3203, 4177, 1795, 2655, 5122, 3287, 1436, 4861,
	4512, 3654, 4279, 4175, 3888, 2085, 3337, 1437, 4948, 1956,
	4878, 4558, 3325, 3298, 3327, 3300, 4095, 3302, 3236, 3304,
	3305, 1151, 4389, 3246, 1202, 1202, 4734, 4469, 4390, 2280,
	1202, 2331, 3094, 5124, 1416, 1719, 3374, 974, 865, 4395,
	4495, 4468, 3314, 1202, 1202, 2063, 3376, 4177, 4223, 1202,
	1202, 5062, 3244, 3799, 1071, 1202, 3225, 4175, 2330, 2342,
	733, 3582, 2938, 2294, 975, 3289, 2405, 2056, 3653, 1348,
	1341, 724, 3457, 3458, 3459, 3460, 3462, 3463, 2063, 1135,
	3299, 4392, 3301, 4681, 3303, 3297, 3174, 1764, 4179, 1071,
	4200, 2179, 1892, 2326, 2066, 1893, 3984, 4275, 5041, 4396,
	1202, 1202, 1202, 1892, 2602, 1887, 1202, 2282, 959, 5151,
	2061, 4323, 3369, 2221, 1135, 4649, 1202, 3334, 849, 2340,
	4178, 3556, 1318, 4743, 2278, 3625, 4792, 2066, 2064, 4224,
	2295, 2296, 4147, 1202, 3328, 964, 4130, 3330, 1318, 4854,
	3345, 4081, 4179, 2896, 4079, 734, 3800, 3791, 3621, 3215,
	853, 3335, 2131, 3336, 2327, 4560, 2291, 3209, 3041, 3197,
	2599, 2064, 2431, 2341, 2425, 2419, 2218, 2411, 3340, 2390,
	2389, 2062, 2592, 1072, 4178, 4862, 4728, 4065, 3129, 3928,
	3396, 3397, 3069, 2059, 2889, 3400, 1653, 1353, 1438, 788,
	2134, 3999, 4914, 3889, 4846, 3024, 735, 1320, 736, 1891,
	3355, 4881, 1892, 2292, 3392, 861, 2539, 4847, 1072, 3519,
	1891, 851, 796, 1320, 1968, 2214, 4173, 4226, 2125, 2125,
	2892, 3194, 4035, 4509, 4529, 1202, 1202, 1202, 1202, 1364,
	4707, 4705, 3367, 4626, 4391, 1202, 1202, 1202, 3637, 3633,
	1202, 4848, 4280, 2216, 1907, 1908, 1909, 1910, 1912, 1913,
	1202, 1324, 1481, 1332, 3632, 4012, 1202, 2473, 1202, 3360,
	848, 2891, 3338, 3511, 3512, 3516, 2890, 1324, 1334, 2063,
	3401, 1893, 3515, 2465, 4401, 4402, 4036, 1818, 1817, 2454,
	2387, 1812, 1893, 4039, 2937, 1481, 2936, 2935, 855, 2217,
	2934, 2933, 1708, 976, 977, 1329, 3985, 1324, 2065, 4176,
	1481, 1706, 790, 4037, 4638, 4034, 3986, 1143, 4850, 1891,
	4183, 1694, 1405, 850, 3536, 2593, 3201, 3407, 2066, 3494,
	1140, 4324, 2137, 1077, 1076, 1695, 1481, 5150, 4485, 2297,
	4281, 2065, 4849, 4805, 2061, 3513, 1405, 863, 864, 2244,
	981, 1335, 3045, 4196, 1405, 3549, 4087, 2429, 3584, 3753,
	4851, 1796, 2064, 4176, 4709, 835, 4076, 5084, 1077, 1076,
	4612, 3070, 3071, 4610, 960, 961, 1202, 3172, 1336, 2353,
	1073, 3861, 3581, 3566, 3269, 3177, 3175, 3523, 1202, 4863,
	4727, 4066, 2458, 2359, 1770, 3563, 4634, 3710, 4920, 2270,
	4633, 836, 4621, 3545, 3521, 2062, 1405, 4806, 4371, 4370,
	3620, 4928, 2137, 4911, 3550, 1073, 4330, 2298, 4001, 3578,
	4353, 1333, 2761, 4639, 3518, 1864, 4602, 4950, 1866, 1202,
	1863, 5088, 5086, 5025, 3597, 2270, 4836, 1861, 1836, 4708,
	3586, 4826, 4608, 3588, 3589, 1405, 3603, 3590, 3592, 3670,
	3593, 4622, 3594, 3558, 3559, 3560, 3561, 3505, 1433, 3542,
	2553, 3569, 4581, 3554, 1405, 1322, 1405, 4364, 3684, 3535,
	3686, 1834, 4322, 3522, 3557, 3520, 4182, 1806, 3534, 3486,
	3904, 1322, 1202, 1202, 3537, 3538, 2334, 3697, 3862, 3636,
	1481, 4921, 3641, 2334, 4693, 3643, 3489, 3490, 3491, 3617,
	4807, 1405, 1804, 1802, 1800, 3720, 3859, 978, 979, 1074,
	3699, 1322, 1405, 281, 3579, 1798, 3728, 3622, 795, 2521,
	886, 1792, 3449, 1786, 4038, 3379, 3667, 3575, 3576, 3198,
	3577, 1784, 2065, 4077, 3540, 3527, 3541, 1075, 1704, 3108,
	3669, 3628, 1603, 3102, 1074, 3059, 2965, 893, 2530, 2562,
	3649, 1707, 2464, 2243, 2449, 1405, 1603, 2096, 1603, 3683,
	1705, 2092, 1481, 3609, 3610, 3591, 3690, 1867, 1745, 872,
	1603, 4369, 1075, 2497, 3598, 3707, 3487, 2368, 962, 963,
	2760, 3884, 1603, 3883, 2351, 3635, 1887, 3587, 3639, 3312,
	3671, 1078, 3606, 3311, 1405, 3278, 3719, 2581, 3792, 980,
	1823, 2500, 3685, 2410, 2388, 2167, 2165, 3727, 2001, 1759,
	1677, 1324, 4997, 4447, 2125, 3711, 3805, 4134, 4133, 3807,
	1865, 4852, 1862, 3510, 3790, 3655, 1078, 4853, 3747, 1860,
	1835, 4451, 3783, 3528, 4353, 3663, 1603, 4431, 4910, 1087,
	4527, 4456, 4444, 3676, 4382, 4381, 2555, 1330, 1603, 4222,
	1603, 3748, 2554, 3751, 3679, 4213, 3539, 2103, 4522, 3712,
	2348, 3714, 4150, 1833, 3718, 4131, 4102, 4100, 3724, 1805,
	4078, 3552, 3798, 3702, 3693, 3794, 5060, 5055, 3708, 3925,
	3816, 3827, 3789, 3779, 3228, 3526, 3533, 3729, 3721, 3220,
	3213, 3725, 3735, 3205, 1803, 1801, 1799, 3573, 3089, 3190,
	1481, 3189, 1331, 1481, 3677, 3170, 1319, 1797, 3678, 2984,
	2979, 3866, 2386, 1791, 1164, 1785, 2384, 3801, 2361, 2336,
	2299, 3532, 1319, 1783, 2286, 2272, 3740, 3736, 2200, 4981,
	1703, 878, 2197, 3804, 2529, 2194, 2191, 1202, 2186, 2184,
	2180, 3763, 881, 1202, 1202, 2171, 3734, 1202, 1202, 1202,
	3755, 1202, 1319, 3067, 2109, 5078, 2222, 3808, 3857, 2496,
	1202, 2137, 3788, 2367, 4511, 3722, 3787, 187, 187, 1202,
	2345, 1160, 3855, 3786, 1202, 1896, 887, 888, 3860, 3258,
	1481, 2349, 3358, 4804, 4512, 3858, 3331, 3882, 3258, 1202,
	2210, 2211, 3813, 3329, 1299, 3815, 3163, 1481, 4962, 3825,
	3826, 3822, 3881, 1092, 1094, 1096, 4872, 2137, 2137, 1202,
	1202, 3806, 1202, 1202, 1202, 1322, 3870, 4543, 3871, 4463,
	3872, 1300, 4368, 2565, 2131, 3259, 3604, 2239, 1658, 4745,
	1202, 3529, 3530, 3531, 1202, 4234, 2137, 2137, 1202, 1202,
	1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
	1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 3890, 1202,
	3876, 3020, 2134, 3957, 3046, 3958, 3852, 1202, 1202, 2137,
	4738, 2563, 1143, 2487, 1202, 2281, 3018, 3907, 3020, 3850,
	3359, 1385, 3917, 3918, 2428, 1202, 3723, 1384, 1897, 3843,
	1858, 1859, 2524, 3043, 2519, 3887, 1324, 1324, 4961, 2494,
	1202, 2374, 4422, 3879, 2131, 4458, 1782, 4764, 1903, 1904,
	1903, 1904, 3885, 1455, 4636, 4331, 2209, 2564, 4309, 3650,
	3050, 3051, 3072, 3552, 1900, 1412, 890, 889, 1352, 5072,
	3912, 1452, 1481, 4146, 1301, 5033, 2612, 3948, 3188, 272,
	1906, 3914, 2134, 4031, 3115, 1405, 1405, 4210, 2412, 4018,
	1423, 1318, 3924, 3996, 3051, 3113, 3122, 4145, 3104, 3053,
	1405, 1405, 4919, 872, 1405, 2612, 3963, 1318, 3940, 3931,
	3933, 3934, 1385, 3947, 3854, 1385, 1905, 3955, 1905, 4901,
	3935, 3956, 4871, 1202, 827, 3106, 3055, 721, 4865, 4803,
	4729, 3845, 3960, 891, 892, 5118, 3988, 1318, 3992, 3105,
	3054, 4700, 3962, 3954, 4613, 4220, 3844, 4212, 4199, 4028,
	1202, 3793, 3235, 4003, 2876, 2206, 2118, 187, 4042, 4043,
	4635, 3092, 1612, 4008, 4009, 3989, 1320, 3997, 1611, 1136,
	3567, 4952, 2353, 4055, 4056, 2260, 4953, 4062, 5149, 4867,
	2261, 1769, 1320, 1202, 1202, 3455, 3456, 1768, 4005, 4006,
	4063, 1903, 1904, 4952, 4064, 1622, 1319, 5091, 4953, 2250,
	3006, 3878, 3853, 4301, 1479, 2249, 3005, 2756, 4047, 2791,
	2250, 2249, 1320, 1838, 4219, 4730, 1837, 4674, 4460, 1202,
	1202, 4020, 4455, 3182, 4454, 4297, 3185, 1202, 3187, 4082,
	4046, 3936, 3716, 3713, 3317, 1995, 1994, 3333, 2569, 5134,
	1322, 1322, 4101, 5099, 4103, 4967, 4905, 1603, 4904, 4903,
	4835, 1603, 4834, 4021, 1603, 4781, 4703, 4666, 4605, 1405,
	4599, 4502, 4115, 4161, 4482, 878, 4420, 4359, 4250, 4240,
	4186, 4058, 4098, 4090, 3797, 3232, 881, 3796, 3232, 3642,
	4051, 3921, 3585, 3318, 2137, 3309, 3286, 3285, 4120, 4122,
	3284, 3283, 4119, 3219, 3192, 3191, 2262, 3044, 3937, 2975,
	2969, 2958, 2957, 2946, 4148, 2685, 4142, 2556, 2525, 2518,
	2517, 2516, 2515, 2514, 2266, 2426, 4136, 4149, 2400, 4107,
	2396, 2395, 2394, 2393, 2392, 2174, 1603, 4169, 2173, 4112,
	2172, 4192, 1202, 4227, 2170, 2108, 2107, 1857, 4166, 4167,
	1324, 1202, 4155, 1856, 1793, 1672, 1671, 4236, 1670, 1669,
	1668, 1603, 1603, 1603, 4160, 4243, 1667, 1666, 1603, 1603,
	1603, 3306, 1661, 1657, 3067, 1655, 3851, 3846, 3847, 3848,
	3849, 1654, 1593, 1592, 1591, 1472, 1471, 4181, 1470, 1469,
	1603, 4206, 1603, 1468, 1415, 1371, 1370, 1369, 1481, 1368,
	4228, 2263, 2268, 2131, 4231, 4171, 1367, 1366, 4180, 1365,
	1363, 3126, 4194, 1358, 4162, 4247, 4207, 1357, 4198, 1356,
	1355, 1354, 1282, 3628, 4159, 1481, 2125, 2212, 1202, 1202,
	4251, 4170, 1098, 4185, 1202, 1202, 2137, 948, 8, 1202,
	1202, 2134, 1202, 4030, 4230, 1084, 4809, 1202, 4399, 2131,
	2131, 1318, 4398, 4397, 2552, 95, 1663, 4211, 1202, 910,
	89, 2343, 4097, 1049, 4949, 4839, 1646, 918, 4930, 4216,
	4214, 4208, 3644, 3134, 1202, 1164, 1164, 1164, 2131, 2131,
	2499, 1794, 2501, 3544, 4232, 4264, 2264, 2134, 2134, 4229,
	2918, 1319, 1319, 4242, 4237, 4262, 4238, 4893, 4305, 4282,
	4265, 3417, 4771, 4574, 2759, 1999, 2125, 4249, 4248, 3498,
	4283, 2131, 91, 1565, 3241, 4263, 2134, 2134, 1186, 1232,
	4493, 4295, 4492, 4383, 4084, 3766, 1320, 4266, 4489, 4488,
	2122, 3258, 2124, 1150, 3658, 1324, 1484, 4975, 2271, 2223,
	5140, 1192, 4271, 1324, 2237, 2232, 4276, 1481, 1481, 2134,
	1481, 2959, 4291, 2835, 1322, 1209, 1206, 1324, 2126, 2128,
	1208, 1207, 2127, 2019, 1205, 2121, 4218, 3239, 1603, 1603,
	3823, 1713, 1711, 1051, 2227, 2679, 2743, 3406, 1992, 1166,
	1188, 1481, 2740, 1346, 1177, 1165, 3524, 3503, 3810, 4027,
	2591, 2260, 928, 3452, 3656, 2746, 2261, 1337, 2859, 2269,
	2851, 2847, 3595, 3229, 1873, 3549, 1202, 4588, 1970, 3240,
	1869, 1449, 1170, 4354, 4355, 2677, 1983, 1324, 3384, 1324,
	2601, 3817, 4321, 3547, 2952, 4955, 3944, 3315, 1210, 2404,
	1298, 1297, 4339, 4341, 1344, 1296, 4357, 4936, 3657, 4933,
	2333, 4496, 3761, 3762, 1405, 2215, 2999, 2689, 4430, 4363,
	3780, 1182, 4366, 1587, 1481, 2544, 1405, 3877, 4344, 1405,
	4439, 3509, 4332, 4442, 4375, 4406, 4197, 4406, 187, 1674,
	4337, 1202, 4335, 4338, 1481, 279, 279, 279, 4328, 727,
	728, 4345, 743, 727, 743, 754, 4348, 4643, 794, 4333,
	4334, 1194, 814, 1955, 3159, 3158, 4798, 821, 821, 821,
	1434, 4424, 1432, 1431, 4336, 279, 4378, 1430, 4352, 5108,
	3128, 2346, 2262, 1603, 1603, 4365, 4093, 4380, 4092, 4091,
	243, 3352, 4374, 1894, 1886, 240, 955, 2265, 242, 241,
	2266, 3648, 4032, 279, 3553, 5031, 1318, 1318, 4429, 1322,
	4117, 1405, 3752, 24, 828, 4513, 829, 1322, 830, 4483,
	3009, 4438, 2242, 1481, 4441, 4462, 1451, 4425, 1603, 4453,
	4445, 1322, 4068, 824, 23, 4530, 22, 4372, 4373, 21,
	118, 43, 20, 158, 135, 4480, 155, 154, 127, 153,
	4519, 152, 151, 4410, 150, 149, 2131, 1603, 1603, 1603,
	1603, 1603, 1603, 157, 148, 1319, 4423, 4443, 147, 4514,
	142, 4440, 4426, 4427, 146, 1481, 4473, 2263, 2268, 4481,
	145, 1320, 1320, 144, 143, 4479, 4472, 1202, 1202, 1202,
	4471, 1322, 4531, 1322, 2134, 141, 139, 140, 134, 138,
	137, 4409, 136, 133, 132, 1481, 4505, 4498, 4525, 4491,
	1202, 4499, 4487, 1202, 1202, 4503, 4459, 4534, 4461, 131,
	130, 129, 128, 1202, 126, 2125, 2137, 159, 125, 124,
	123, 1202, 1202, 122, 121, 120, 119, 727, 727, 807,
	4532, 808, 62, 4539, 61, 279, 117, 115, 1481, 116,
	1603, 19, 4545, 4548, 41, 4486, 4546, 4552, 4516, 4566,
	14, 66, 2264, 67, 18, 1405, 13, 36, 94, 107,
	106, 2125, 2125, 4553, 4561, 3659, 3660, 105, 3661, 37,
	103, 4343, 1596, 102, 35, 17, 16, 1481, 15, 100,
	99, 4554, 98, 4555, 34, 1202, 32, 11, 2131, 9,
	2125, 2125, 38, 2080, 12, 4571, 5, 192, 1202, 191,
	2258, 194, 4361, 190, 2271, 193, 93, 1202, 189, 188,
	1648, 92, 2137, 30, 10, 184, 3703, 3704, 4719, 3705,
	4204, 4577, 1202, 2125, 84, 1202, 2134, 186, 4607, 185,
	183, 182, 4583, 181, 4597, 85, 4598, 4594, 4595, 1202,
	1319, 4616, 1202, 4617, 82, 180, 88, 179, 1319, 1481,
	1565, 83, 87, 86, 28, 4646, 6, 1405, 65, 7,
	2256, 4683, 1319, 1727, 4556, 2269, 3863, 1603, 1603, 1603,
	110, 4618, 4625, 111, 39, 80, 79, 2270, 78, 1742,
	4615, 77, 27, 4665, 64, 26, 176, 224, 1324, 223,
	222, 221, 220, 219, 218, 217, 4657, 4658, 212, 216,
	1318, 4692, 214, 4679, 2257, 213, 4702, 215, 211, 234,
	233, 227, 226, 232, 231, 4718, 230, 229, 1481, 228,
	225, 1603, 1319, 4706, 1319, 237, 210, 275, 4739, 4667,
	4675, 4663, 4677, 4668, 4678, 2596, 4406, 209, 208, 1771,
	4726, 4655, 206, 4676, 202, 205, 207, 204, 203, 201,
	236, 235, 4682, 74, 4694, 1202, 1202, 174, 4695, 175,
	73, 173, 172, 4697, 4698, 171, 1164, 1981, 4704, 170,
	169, 1986, 1202, 2137, 1565, 1320, 4699, 4722, 168, 167,
	72, 178, 177, 25, 4748, 4740, 4750, 4742, 4717, 2,
	1, 0, 0, 2265, 1405, 0, 0, 1405, 0, 1405,
	1405, 0, 4684, 4736, 0, 0, 0, 0, 0, 0,
	0, 4741, 0, 0, 0, 4747, 4534, 4746, 1202, 0,
	1202, 0, 1202, 4793, 0, 0, 1479, 0, 0, 0,
	0, 0, 1324, 0, 4760, 4761, 0, 4759, 0, 4669,
	0, 0, 0, 0, 0, 1202, 0, 1324, 0, 0,
	4791, 0, 0, 0, 4713, 4752, 4572, 0, 0, 0,
	3763, 0, 0, 0, 0, 0, 0, 4780, 0, 0,
	4782, 4763, 4783, 4784, 0, 0, 0, 0, 0, 0,
	4406, 2853, 0, 0, 0, 1318, 4790, 0, 4789, 4769,
	4744, 0, 1322, 1318, 0, 4406, 4820, 0, 2125, 4572,
	4710, 4786, 1324, 1324, 4844, 0, 0, 1318, 4813, 4814,
	0, 4842, 0, 0, 0, 0, 1202, 0, 0, 0,
	0, 0, 0, 1324, 0, 0, 1324, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 0, 4829, 2615, 0,
	1603, 0, 4831, 0, 0, 0, 0, 0, 0, 1565,
	4406, 4406, 4830, 0, 0, 1202, 1202, 0, 4837, 0,
	1320, 0, 0, 0, 0, 1202, 0, 1318, 1320, 1318,
	4855, 4406, 0, 0, 4406, 0, 0, 4866, 0, 0,
	0, 4869, 1320, 4868, 0, 0, 0, 4874, 0, 0,
	4722, 0, 4883, 0, 4882, 0, 0, 0, 0, 0,
	4886, 0, 4887, 4888, 4885, 0, 0, 0, 2131, 4898,
	2615, 4906, 0, 4927, 4902, 1202, 1202, 0, 1339, 1202,
	3381, 3382, 4909, 1603, 1405, 0, 0, 1405, 0, 0,
	0, 0, 0, 0, 4897, 0, 1322, 4907, 0, 0,
	2125, 0, 1320, 0, 1320, 0, 2134, 4935, 4938, 4917,
	4918, 1322, 1360, 0, 4954, 4951, 0, 4925, 4958, 4821,
	0, 0, 4926, 0, 279, 0, 279, 279, 0, 1389,
	279, 1399, 4944, 0, 4940, 0, 0, 0, 0, 0,
	4978, 0, 1413, 0, 4980, 1202, 1202, 1202, 0, 0,
	814, 0, 0, 814, 4939, 0, 0, 4946, 4943, 0,
	4947, 0, 4963, 0, 2131, 0, 1322, 1322, 0, 4889,
	0, 4890, 0, 4971, 4857, 4858, 821, 4979, 4945, 4968,
	0, 0, 1202, 0, 0, 0, 0, 1322, 5012, 0,
	1322, 4992, 4993, 1319, 5017, 4875, 4995, 279, 4877, 279,
	279, 1389, 2134, 279, 279, 4994, 0, 0, 0, 0,
	1399, 0, 0, 5015, 5014, 0, 2270, 0, 0, 0,
	0, 5039, 5038, 0, 279, 0, 1624, 0, 0, 0,
	0, 5040, 5046, 0, 5052, 0, 5048, 5028, 0, 1202,
	5030, 0, 1644, 0, 5045, 4702, 0, 1405, 0, 1651,
	5044, 0, 0, 5061, 0, 5071, 0, 0, 0, 4957,
	5054, 0, 3479, 3480, 3481, 3482, 5053, 0, 1676, 0,
	0, 1399, 5079, 0, 5082, 279, 279, 5027, 1389, 5073,
	5029, 5075, 5067, 5068, 5058, 0, 5070, 0, 0, 1565,
	0, 0, 5081, 5092, 0, 5083, 0, 5096, 1324, 814,
	1324, 279, 279, 5095, 4935, 5085, 0, 4938, 5090, 5094,
	5102, 5093, 0, 1739, 5100, 0, 0, 5101, 0, 5104,
	5069, 0, 0, 0, 1747, 2131, 0, 5110, 0, 955,
	0, 0, 0, 0, 0, 0, 0, 1319, 5013, 1405,
	0, 0, 0, 0, 0, 0, 4406, 5125, 4406, 5126,
	0, 5131, 1319, 0, 0, 0, 5133, 0, 0, 0,
	0, 5138, 0, 2134, 0, 4215, 5132, 5144, 0, 1202,
	1202, 0, 5135, 5136, 0, 0, 0, 5142, 1202, 1202,
	0, 0, 1565, 5147, 0, 0, 5156, 0, 0, 5159,
	0, 5158, 5152, 5161, 0, 0, 5160, 5167, 5163, 5162,
	5165, 0, 0, 5164, 5168, 5166, 0, 1319, 1319, 279,
	0, 0, 5129, 5171, 0, 0, 1405, 0, 0, 5172,
	5176, 5173, 5180, 0, 5177, 0, 5174, 5178, 1319, 0,
	0, 1319, 5184, 279, 4267, 5175, 1202, 0, 1318, 0,
	5186, 0, 5191, 5180, 5187, 5183, 5189, 0, 0, 2260,
	0, 0, 1565, 4957, 2261, 0, 0, 5153, 5154, 0,
	0, 0, 5155, 0, 0, 0, 5109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3342, 0, 0, 0, 0, 2446, 0,
	0, 0, 1322, 0, 1322, 0, 0, 0, 0, 0,
	5103, 0, 5105, 1320, 0, 5188, 2460, 2462, 0, 0,
	2125, 0, 0, 0, 0, 0, 4400, 0, 0, 3241,
	2466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2474, 0, 2477, 2478, 2479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3241,
	0, 0, 4393, 0, 0, 0, 4386, 0, 0, 1394,
	2262, 0, 943, 0, 2853, 2853, 0, 0, 0, 0,
	0, 0, 1318, 4384, 0, 0, 0, 0, 2266, 0,
	0, 0, 4388, 0, 0, 0, 0, 1318, 0, 0,
	75, 0, 946, 945, 0, 0, 0, 0, 0, 0,
	2683, 0, 0, 0, 0, 0, 2125, 4394, 76, 0,
	0, 0, 0, 0, 1565, 0, 1981, 0, 1133, 0,
	1071, 0, 0, 0, 0, 81, 0, 727, 0, 1574,
	0, 0, 1588, 1394, 0, 0, 0, 0, 0, 0,
	0, 0, 1318, 1318, 0, 1135, 0, 1320, 279, 0,
	279, 4387, 0, 0, 279, 2263, 2268, 0, 0, 0,
	0, 0, 1320, 1318, 0, 90, 1318, 1624, 1389, 2100,
	279, 2858, 279, 2106, 0, 1903, 1904, 0, 0, 0,
	279, 0, 743, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 1134, 0, 0, 0, 0, 0, 1934,
	0, 4449, 0, 2175, 1394, 1394, 949, 1906, 0, 0,
	0, 1565, 0, 0, 0, 279, 0, 1320, 1320, 50,
	0, 112, 279, 0, 0, 0, 0, 96, 109, 0,
	0, 0, 0, 1319, 1959, 1319, 0, 0, 1320, 1072,
	2264, 1320, 0, 1905, 0, 0, 2853, 2853, 2853, 2853,
	0, 0, 0, 1925, 0, 814, 0, 0, 0, 0,
	0, 4501, 1922, 0, 0, 3900, 3901, 2125, 0, 0,
	0, 0, 0, 0, 4515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 2271, 821, 0, 821, 0, 4538, 0, 0,
	0, 0, 0, 0, 0, 821, 821, 0, 0, 0,
	0, 0, 0, 0, 0, 3852, 0, 0, 4286, 4389,
	0, 0, 0, 0, 0, 4390, 0, 0, 3850, 0,
	0, 0, 0, 0, 0, 0, 4395, 0, 3843, 0,
	1928, 1929, 1930, 1931, 0, 0, 0, 0, 3607, 0,
	1911, 0, 0, 2269, 0, 3964, 3965, 3966, 3967, 3968,
	3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978,
	3979, 3980, 3981, 3982, 3983, 0, 3987, 0, 4392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1077,
	1076, 0, 3608, 0, 0, 0, 4396, 0, 0, 0,
	0, 1933, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3854, 0, 0, 0, 1920, 1921, 0,
	0, 4611, 0, 0, 0, 0, 1073, 0, 0, 0,
	3845, 101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 0, 3844, 279, 0, 0, 0,
	1926, 0, 3455, 3456, 0, 3473, 3474, 3475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1318, 0,
	1318, 2265, 0, 0, 0, 4287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	104, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	0, 3853, 279, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 279, 0,
	244, 4391, 0, 0, 0, 0, 0, 0, 950, 1956,
	3470, 0, 0, 156, 279, 0, 279, 0, 0, 0,
	727, 3841, 279, 1320, 0, 1320, 0, 0, 0, 0,
	0, 0, 0, 0, 814, 1074, 0, 0, 955, 0,
	0, 4401, 4402, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1132, 0, 1075, 0, 0, 0, 1932, 279, 0,
	1389, 279, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 1588, 0, 3127, 0, 814, 0, 0, 0, 0,
	1927, 200, 279, 0, 0, 0, 0, 0, 0, 245,
	2498, 0, 0, 0, 0, 279, 279, 3461, 279, 0,
	279, 0, 279, 238, 279, 0, 0, 1078, 0, 0,
	0, 0, 239, 0, 0, 0, 196, 0, 0, 0,
	0, 1588, 0, 0, 0, 0, 0, 0, 0, 2535,
	0, 0, 2536, 0, 2537, 3851, 3846, 3847, 3848, 3849,
	944, 1958, 0, 0, 0, 0, 0, 0, 279, 279,
	279, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 794, 0, 0,
	0, 814, 0, 2858, 0, 0, 3272, 0, 0, 0,
	0, 0, 0, 4827, 0, 0, 0, 0, 3279, 0,
	0, 0, 0, 0, 0, 0, 0, 3471, 0, 0,
	0, 0, 0, 0, 0, 1565, 0, 0, 0, 2853,
	2853, 0, 4841, 0, 0, 0, 0, 0, 1923, 1919,
	0, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 0,
	0, 4873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 2858, 2858, 0, 0, 0, 0,
	0, 0, 0, 0, 2691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 1565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2853,
	2853, 2853, 2853, 2853, 2853, 2853, 2853, 2853, 2853, 2853,
	2853, 2853, 2853, 2853, 2853, 2853, 2853, 2853, 2853, 1164,
	2853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 3455, 3456, 0, 3473, 3474, 3475,
	279, 0, 0, 0, 0, 0, 0, 3472, 0, 727,
	0, 0, 0, 0, 0, 0, 279, 3909, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 4964, 0, 0,
	279, 0, 0, 4966, 0, 0, 0, 0, 0, 1903,
	1904, 0, 0, 0, 0, 1947, 1948, 1949, 0, 0,
	0, 279, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 2416, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 1906, 3470, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 1565, 0, 0, 2858, 2858, 2858, 2858,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	279, 1399, 0, 0, 743, 0, 743, 1905, 0, 0,
	2974, 0, 0, 0, 0, 0, 279, 1925, 0, 279,
	0, 0, 0, 279, 0, 279, 1922, 0, 0, 0,
	1389, 0, 279, 279, 0, 1399, 1399, 2990, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 3467, 3468, 3469, 0, 1565, 0, 0, 3466, 3464,
	3465, 3457, 3458, 3459, 3460, 3462, 3463, 0, 0, 3461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 821, 821, 0, 0,
	821, 821, 0, 0, 0, 0, 0, 0, 0, 3033,
	0, 0, 0, 0, 1928, 1929, 1930, 1931, 0, 0,
	0, 279, 0, 0, 1911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	2545, 0, 0, 0, 0, 0, 0, 3477, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 814,
	0, 1157, 0, 0, 0, 1944, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 1933, 1935, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 0, 3471,
	0, 0, 0, 0, 0, 0, 0, 279, 279, 0,
	0, 1920, 1921, 1565, 0, 0, 1565, 0, 0, 0,
	0, 0, 0, 0, 1903, 1904, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 279, 3180, 0, 0,
	4580, 0, 75, 0, 1926, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 1906, 0, 0, 0,
	76, 0, 0, 0, 1624, 0, 0, 279, 0, 279,
	0, 0, 0, 0, 0, 0, 279, 81, 1956, 0,
	0, 0, 0, 1959, 0, 0, 3224, 0, 0, 0,
	0, 0, 1905, 1565, 0, 0, 3033, 0, 727, 0,
	0, 0, 1925, 0, 0, 0, 0, 3253, 955, 3033,
	1565, 1922, 4628, 0, 0, 0, 0, 90, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 1389, 279, 0, 0, 0, 0, 0, 949, 3472,
	0, 0, 1399, 279, 0, 0, 1389, 3903, 1389, 0,
	1389, 50, 0, 112, 0, 0, 0, 0, 0, 96,
	109, 1932, 0, 0, 0, 0, 0, 0, 0, 1928,
	1929, 1930, 1931, 0, 0, 0, 0, 0, 0, 1911,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 279, 279, 279, 279,
	1389, 0, 0, 1389, 0, 279, 0, 0, 0, 0,
	279, 0, 1945, 0, 0, 0, 0, 0, 0, 3152,
	0, 97, 0, 3731, 0, 1565, 0, 0, 0, 0,
	1933, 1935, 0, 0, 0, 0, 0, 0, 0, 1394,
	0, 279, 0, 0, 0, 1958, 0, 0, 0, 279,
	0, 3756, 3142, 3140, 0, 0, 1920, 1921, 0, 3144,
	3146, 3136, 0, 3784, 0, 0, 0, 0, 0, 0,
	0, 1394, 1394, 0, 0, 0, 0, 0, 0, 4768,
	0, 0, 0, 3467, 3468, 3469, 0, 0, 0, 1926,
	3466, 3464, 3465, 3457, 3458, 3459, 3460, 3462, 3463, 2858,
	2858, 0, 3160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3833, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 4797, 0, 3856,
	0, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908,
	1909, 1910, 1912, 1913, 0, 0, 0, 0, 0, 0,
	0, 0, 4819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 101, 0, 1624, 0, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2858,
	2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858,
	2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858, 0,
	2858, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 0, 0, 0,
	0, 195, 104, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3138, 0, 0, 1927,
	0, 0, 0, 0, 0, 0, 0, 3154, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	950, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	3153, 3143, 3141, 3145, 3147, 3137, 3139, 3155, 3157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3149, 3151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 246, 0, 2853, 0, 0, 0, 0, 279,
	0, 3455, 3456, 0, 3473, 3474, 3475, 0, 0, 0,
	0, 0, 0, 3161, 0, 279, 0, 0, 160, 0,
	727, 1565, 0, 0, 3908, 727, 0, 0, 727, 0,
	0, 727, 727, 200, 0, 0, 0, 727, 0, 0,
	0, 245, 0, 0, 0, 279, 0, 0, 1565, 0,
	0, 1588, 0, 0, 0, 238, 0, 279, 0, 0,
	0, 0, 1394, 0, 239, 0, 2853, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 1923, 1919, 3470,
	1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 279, 0,
	0, 0, 279, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1588, 0, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3156, 0, 0, 0, 0, 3033, 3033, 279, 0,
	3615, 2100, 0, 0, 0, 0, 0, 3033, 0, 2106,
	0, 0, 0, 0, 0, 0, 0, 0, 3033, 2106,
	0, 3033, 2106, 0, 0, 2106, 0, 0, 3615, 0,
	1565, 1565, 0, 1565, 0, 0, 3461, 0, 0, 0,
	279, 279, 2100, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3162,
	0, 2100, 0, 279, 1565, 3689, 3689, 0, 3148, 3150,
	1389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 3033, 0, 3033, 0, 3717, 3033, 2100, 0,
	0, 3033, 0, 0, 3477, 0, 0, 0, 0, 2100,
	0, 0, 814, 2853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4156, 0, 0, 4157, 0, 1565, 0, 0,
	0, 0, 1389, 0, 0, 0, 3471, 0, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 1565, 0, 0,
	0, 2853, 0, 0, 0, 0, 0, 279, 0, 3757,
	0, 0, 0, 3759, 3033, 0, 0, 279, 0, 0,
	0, 279, 0, 0, 1399, 0, 2853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 0, 0, 3224, 0, 0, 1389, 0, 279,
	0, 0, 3033, 0, 727, 0, 0, 0, 0, 0,
	0, 3033, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 4244, 4245, 4246, 0, 1565, 0, 0, 2460,
	4252, 4253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 0,
	0, 0, 3875, 0, 0, 1624, 0, 0, 0, 1389,
	279, 0, 279, 0, 0, 0, 3472, 0, 1389, 0,
	0, 1903, 1904, 0, 0, 0, 0, 0, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 279,
	0, 0, 0, 1906, 0, 0, 0, 0, 1903, 1904,
	0, 1936, 1937, 1938, 1947, 1948, 1949, 0, 0, 0,
	0, 1565, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1940, 1934, 0, 0, 0, 0, 0, 0, 1905,
	1906, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	1953, 0, 0, 0, 0, 0, 0, 3942, 0, 0,
	1565, 1588, 1588, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 1905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1925, 0, 0, 0,
	0, 0, 0, 0, 0, 1922, 0, 0, 0, 4350,
	4351, 1939, 0, 0, 0, 0, 0, 0, 1164, 0,
	3467, 3468, 3469, 0, 0, 0, 0, 3466, 3464, 3465,
	3457, 3458, 3459, 3460, 3462, 3463, 0, 0, 0, 0,
	0, 0, 1565, 0, 0, 0, 1928, 1929, 1930, 1931,
	1588, 0, 0, 0, 0, 0, 1911, 0, 0, 0,
	0, 0, 0, 0, 279, 279, 0, 0, 0, 0,
	0, 0, 2416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1928, 1929, 1930, 1931, 0, 0, 727,
	727, 0, 0, 1911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1933, 1935, 0,
	0, 1565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 1944, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 1933, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 2460, 0, 0, 0, 0, 0,
	0, 1950, 0, 1951, 2858, 0, 1926, 0, 0, 0,
	1920, 1921, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1942, 0,
	0, 1903, 1904, 0, 1936, 1937, 1938, 1947, 1948, 1949,
	0, 0, 0, 1926, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 814, 1940, 1934, 0, 0, 0, 0,
	0, 0, 0, 1906, 0, 0, 0, 0, 4547, 0,
	4549, 4550, 4551, 1953, 0, 0, 2858, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 3689, 0, 0, 0,
	1959, 1952, 0, 0, 0, 0, 0, 0, 0, 1905,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 1925,
	1939, 1941, 0, 0, 0, 0, 0, 0, 1922, 0,
	0, 0, 1956, 0, 0, 0, 2100, 0, 279, 0,
	0, 0, 743, 743, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 279, 0, 0,
	0, 1588, 0, 0, 0, 0, 0, 0, 279, 3224,
	0, 4600, 3224, 2106, 0, 0, 1927, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	1932, 0, 0, 279, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 1928, 1929, 1930, 1931,
	0, 0, 0, 1927, 0, 0, 1911, 3033, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 3253, 3253, 0,
	0, 0, 0, 955, 3033, 0, 0, 1958, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 1164,
	1954, 0, 0, 0, 279, 0, 0, 1933, 1935, 0,
	0, 0, 0, 2858, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 1951, 0, 0, 0,
	1939, 0, 0, 1920, 1921, 0, 0, 0, 4696, 0,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2858, 0, 0, 0, 0, 1926, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 1939, 0,
	4306, 0, 0, 0, 1939, 0, 2858, 1943, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 1917, 1918, 1924,
	1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908, 1909,
	1910, 1912, 1913, 0, 1952, 0, 0, 0, 3430, 0,
	0, 0, 3431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 1956, 0, 0, 0, 1624,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1939, 1399, 0, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 1399, 0, 279, 1399,
	0, 1939, 0, 1932, 0, 0, 1939, 0, 0, 0,
	3033, 3033, 0, 3615, 0, 0, 3689, 3033, 0, 0,
	0, 0, 0, 0, 0, 4408, 1927, 4408, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3033,
	0, 2106, 0, 0, 0, 3615, 0, 1624, 1624, 279,
	2100, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 2100, 0, 279, 2100, 0, 279, 0,
	3689, 1939, 0, 0, 0, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 3033,
	1394, 3033, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3033, 3033,
	0, 0, 0, 75, 3224, 3224, 0, 0, 0, 0,
	0, 3615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 76, 279, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 279, 0, 0, 0, 0, 2416, 81, 0,
	1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 0, 0,
	0, 2734, 0, 0, 0, 2735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 0,
	1903, 1904, 1939, 1936, 1937, 1938, 1947, 1948, 1949, 0,
	0, 0, 0, 0, 0, 1939, 76, 0, 0, 949,
	0, 0, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 1906, 81, 112, 0, 0, 0, 0, 0,
	96, 109, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 2857, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 0, 0, 90, 1939, 0, 0, 0, 1925, 0,
	1939, 0, 0, 0, 0, 0, 0, 1922, 0, 0,
	3033, 2106, 0, 2106, 0, 0, 4620, 0, 0, 0,
	0, 0, 97, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 949, 4644, 0, 4644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 2058, 112,
	0, 0, 0, 0, 0, 96, 109, 0, 0, 0,
	0, 0, 814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3689, 0, 1389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1928, 1929, 1930, 1931, 0,
	0, 0, 0, 0, 2100, 1911, 279, 0, 0, 0,
	0, 0, 3455, 3456, 0, 3473, 3474, 3475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 4620, 0, 0, 4408, 1394, 0, 1624,
	0, 0, 0, 3033, 0, 0, 1944, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 1933, 1935, 0, 0,
	0, 0, 0, 4733, 2949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 1920, 1921, 101, 0, 0, 0, 3455, 3456,
	3470, 3473, 3474, 3475, 0, 0, 0, 0, 0, 0,
	1942, 279, 279, 0, 0, 0, 0, 2416, 0, 0,
	0, 0, 0, 0, 0, 1926, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3942, 0, 0, 0, 0,
	0, 1394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 104, 0, 0, 108, 0, 0, 0,
	0, 3689, 4788, 0, 0, 0, 0, 0, 0, 1149,
	4620, 0, 0, 0, 0, 0, 3470, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 101,
	4408, 950, 0, 0, 0, 0, 156, 3461, 0, 0,
	0, 0, 0, 0, 1956, 4408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 3478, 743, 0, 0, 0, 0, 195, 104, 0,
	0, 108, 0, 0, 0, 0, 0, 0, 0, 160,
	4408, 4408, 1932, 0, 0, 3477, 0, 0, 0, 0,
	0, 0, 0, 3461, 200, 0, 0, 0, 244, 0,
	0, 4408, 245, 279, 4408, 1927, 950, 0, 0, 0,
	0, 156, 0, 0, 2106, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 1624, 239, 1624, 3471, 0, 196,
	0, 0, 0, 1945, 0, 0, 0, 0, 1234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 199, 1399, 0, 0, 0, 0, 0,
	0, 3477, 0, 0, 0, 0, 1958, 0, 4915, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4644, 0, 0, 279, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 3471, 1939, 0, 1956, 0, 0, 0,
	0, 238, 3033, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 279, 1724, 1917,
	1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907,
	1908, 1909, 1910, 1912, 1913, 0, 0, 0, 0, 3942,
	0, 0, 1939, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 3472, 0, 0,
	1939, 0, 0, 1624, 0, 0, 0, 0, 0, 1939,
	1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
	1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
	1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
	1939, 1939, 1939, 1939, 1939, 1903, 1904, 0, 0, 0,
	1939, 0, 1939, 1939, 1939, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 2857, 2857, 0, 0, 0, 1934,
	75, 0, 0, 3472, 0, 0, 4620, 1906, 0, 1939,
	0, 1588, 0, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 81, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 3033, 0, 0, 0,
	0, 0, 0, 1925, 0, 0, 4408, 0, 4408, 0,
	1939, 1624, 1922, 0, 0, 0, 0, 0, 0, 0,
	0, 3467, 3468, 3469, 0, 90, 0, 0, 3466, 3464,
	3465, 3457, 3458, 3459, 3460, 3462, 3463, 0, 0, 0,
	1939, 0, 0, 1939, 0, 0, 1939, 0, 0, 1939,
	0, 0, 0, 0, 0, 1939, 1939, 1939, 1939, 1939,
	1939, 1939, 0, 0, 0, 0, 949, 0, 3898, 0,
	0, 0, 3033, 0, 0, 0, 0, 0, 1394, 50,
	0, 112, 0, 0, 0, 0, 0, 96, 109, 3253,
	1928, 1929, 1930, 1931, 0, 0, 0, 3467, 3468, 3469,
	1911, 0, 3033, 0, 3466, 3464, 3465, 3457, 3458, 3459,
	3460, 3462, 3463, 0, 0, 0, 3253, 0, 0, 0,
	0, 1939, 0, 0, 3476, 0, 2857, 2857, 2857, 2857,
	0, 0, 0, 1939, 0, 1939, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 1933, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1920, 1921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1149, 1149, 1149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1926, 0, 0, 0, 0, 0, 1903, 1904, 0, 1936,
	1937, 1938, 1947, 1948, 1949, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 0, 0, 0, 1594, 1940,
	1934, 0, 0, 0, 0, 0, 0, 0, 1906, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 1632, 0,
	1638, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 1905, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 1925, 0, 0, 0, 0, 0,
	0, 101, 0, 1922, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1730,
	0, 1735, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 1754, 0, 195,
	104, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 1929, 1930, 1931, 0, 0, 0, 0, 0,
	244, 1911, 0, 0, 0, 0, 0, 0, 950, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 1825,
	0, 1958, 1944, 0, 0, 1954, 0, 0, 0, 0,
	246, 0, 1933, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1939, 1939, 0, 1939, 1950,
	0, 1951, 0, 0, 0, 0, 160, 0, 1920, 1921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 1942, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1926, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 196, 0, 1923, 1919,
	0, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913,
	0, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 0,
	1722, 1903, 1904, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 1934, 0, 0, 0, 1941,
	1993, 0, 0, 1906, 0, 0, 0, 0, 1325, 1939,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 1325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 1905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 0, 0, 0, 0, 0, 1325, 1922, 0,
	0, 0, 0, 0, 0, 0, 1939, 1939, 1932, 2857,
	2857, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3476, 3476, 0, 0, 1939, 1939, 0,
	0, 1927, 0, 0, 0, 0, 0, 1939, 0, 0,
	0, 0, 0, 1325, 0, 2052, 2052, 2052, 0, 0,
	1325, 1939, 0, 0, 3897, 0, 0, 0, 0, 1945,
	0, 0, 0, 1939, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 1929, 1930, 1931,
	0, 0, 0, 0, 0, 0, 1911, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 2857,
	2857, 2857, 2857, 2857, 2857, 2857, 2857, 2857, 2857, 2857,
	2857, 2857, 2857, 2857, 2857, 2857, 2857, 2857, 2857, 0,
	2857, 3476, 3476, 3476, 3476, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1933, 1935, 0,
	0, 0, 1903, 1904, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 1920, 1921, 1943, 1934, 0, 0, 0,
	0, 0, 0, 0, 1906, 1917, 1918, 1924, 1946, 1923,
	1919, 0, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912,
	1913, 1149, 0, 0, 1198, 0, 1926, 0, 0, 0,
	4312, 1959, 0, 0, 0, 0, 1903, 1904, 0, 0,
	1905, 0, 2828, 2829, 2830, 2831, 2824, 2825, 2826, 2827,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 1922,
	1934, 0, 0, 0, 0, 0, 0, 0, 1906, 0,
	0, 278, 278, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 879, 0, 0, 1905, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1925, 3370, 0, 0, 0, 1939,
	0, 0, 0, 1922, 0, 2804, 2805, 2806, 2807, 879,
	0, 0, 0, 0, 0, 0, 0, 1928, 1929, 1930,
	1931, 0, 0, 0, 0, 0, 0, 1911, 2816, 2817,
	2818, 2819, 2812, 2813, 2814, 2815, 2820, 2821, 2822, 2823,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 1939, 1939, 0, 0, 0, 0, 0, 3363,
	0, 0, 0, 0, 0, 0, 1927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1933, 1935,
	0, 1928, 1929, 1930, 1931, 0, 0, 0, 0, 0,
	0, 1911, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1920, 1921, 0, 0, 0, 0,
	2800, 2801, 2802, 2803, 2808, 2809, 2810, 2811, 1325, 0,
	1325, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 1325, 0, 1926, 0, 0,
	0, 0, 1933, 1935, 0, 0, 0, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 2138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1920, 1921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1923, 1919, 1956, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1939, 1939, 0,
	0, 1939, 3476, 3476, 1939, 0, 0, 0, 1939, 1325,
	0, 0, 0, 0, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 2522, 1939, 0,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1927, 0, 0,
	0, 1939, 1939, 1939, 1939, 1939, 0, 0, 0, 0,
	0, 1939, 0, 1939, 2550, 0, 3476, 3476, 3476, 3476,
	3476, 3476, 3476, 3476, 3476, 3476, 3476, 3476, 3476, 3476,
	3476, 3476, 3476, 3476, 3476, 3476, 0, 0, 1932, 3476,
	0, 0, 1939, 1939, 0, 0, 0, 0, 0, 0,
	2590, 0, 2594, 0, 1939, 0, 0, 0, 1958, 2608,
	0, 1927, 0, 1939, 0, 0, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 0, 2658, 0, 2660, 2661, 2662, 2663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1939,
	0, 0, 1958, 0, 1325, 1325, 0, 0, 0, 0,
	0, 2687, 0, 0, 1325, 0, 0, 1939, 0, 0,
	0, 0, 0, 1980, 0, 1923, 1919, 2738, 1916, 1914,
	1915, 1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 0,
	0, 0, 0, 2768, 2771, 2774, 2777, 0, 1939, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1939,
	1939, 0, 0, 0, 0, 0, 0, 2849, 0, 2861,
	2863, 2868, 0, 0, 0, 0, 0, 0, 0, 1923,
	1919, 0, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912,
	1913, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1325, 0, 1325, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1903, 1904, 1325, 1936, 1937,
	1938, 1947, 1948, 1949, 0, 0, 0, 0, 0, 1325,
	0, 1325, 1325, 1325, 0, 0, 0, 0, 1940, 1934,
	0, 1939, 0, 0, 0, 0, 0, 1906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 1939, 1939, 0, 0,
	0, 1939, 1939, 1925, 0, 1939, 1939, 0, 0, 0,
	1939, 0, 1922, 0, 1939, 0, 0, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2857, 0, 0, 0, 0, 0,
	278, 0, 278, 278, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2138, 2138, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 1929, 1930, 1931, 0, 0, 0, 0, 0, 0,
	1911, 0, 0, 0, 0, 0, 2857, 0, 0, 0,
	0, 0, 0, 278, 0, 278, 278, 0, 0, 278,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	879, 1944, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 1933, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1939, 0, 0, 0, 0, 1325, 1950, 0,
	1951, 0, 0, 0, 0, 0, 0, 1920, 1921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 278, 0, 0, 1942, 0, 0, 0, 0,
	0, 3183, 3184, 0, 3186, 0, 0, 0, 0, 0,
	1926, 0, 0, 0, 0, 0, 0, 278, 278, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 1325, 0, 0,
	76, 0, 0, 0, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 1952, 0,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1941, 1939,
	1939, 1939, 0, 0, 0, 0, 0, 0, 0, 1956,
	1939, 1939, 3476, 2857, 0, 0, 0, 90, 0, 1939,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 949, 0,
	3476, 2857, 0, 3307, 0, 0, 774, 1932, 0, 278,
	0, 0, 0, 112, 0, 0, 0, 1939, 0, 96,
	109, 0, 0, 0, 0, 1939, 2857, 757, 0, 0,
	1927, 0, 758, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 1939, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 0,
	0, 0, 0, 1903, 1904, 0, 0, 0, 0, 1325,
	0, 0, 0, 759, 0, 0, 1960, 1961, 0, 0,
	0, 97, 0, 0, 760, 0, 0, 1934, 0, 0,
	0, 1958, 0, 0, 0, 1906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2138, 0,
	0, 0, 1959, 0, 0, 0, 0, 780, 0, 0,
	0, 1905, 3364, 3365, 0, 0, 0, 0, 3371, 0,
	3476, 1925, 0, 0, 0, 0, 0, 0, 762, 0,
	1922, 0, 0, 0, 0, 0, 0, 3385, 3386, 0,
	0, 0, 0, 2738, 1943, 0, 1325, 0, 1939, 3476,
	0, 0, 1939, 763, 1917, 1918, 1924, 1946, 1923, 1919,
	1325, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913,
	0, 3476, 0, 0, 0, 0, 764, 0, 0, 3911,
	765, 0, 0, 0, 0, 0, 0, 0, 3395, 0,
	0, 0, 0, 0, 0, 0, 0, 789, 0, 0,
	0, 0, 0, 0, 3409, 0, 0, 0, 1928, 1929,
	1930, 1931, 0, 101, 2074, 0, 1321, 0, 1911, 0,
	278, 3421, 1939, 779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 2074, 278, 0,
	0, 0, 0, 0, 0, 0, 879, 0, 0, 0,
	0, 0, 1325, 879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1325, 0, 1325, 0, 1933,
	1935, 195, 104, 1325, 0, 108, 0, 0, 0, 0,
	0, 278, 776, 0, 0, 1325, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 1920, 1921, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	950, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 2868, 2868, 2868, 0, 0, 1926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2052, 0,
	0, 0, 0, 1939, 0, 0, 3514, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 786, 0, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 787,
	0, 768, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 196, 0,
	0, 0, 0, 788, 0, 0, 0, 0, 0, 0,
	0, 769, 0, 0, 0, 0, 784, 785, 0, 782,
	0, 0, 199, 0, 1149, 777, 0, 0, 770, 0,
	0, 0, 0, 0, 0, 1932, 1149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1939, 0, 771, 0, 778, 0, 0, 3647, 0, 0,
	0, 0, 772, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 879, 0, 0, 0, 0, 773, 0, 0,
	0, 0, 781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 1903, 1904, 1958,
	1936, 1937, 1938, 1947, 1948, 1949, 0, 775, 0, 0,
	3700, 3701, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 1934, 0, 0, 0, 0, 0, 0, 278, 1906,
	0, 0, 278, 0, 0, 0, 0, 0, 278, 1953,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	278, 0, 278, 0, 0, 1905, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 1922, 0, 1923, 1919, 0, 1916,
	1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 1325,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 879, 278, 0, 278, 1325, 278, 0, 278, 0,
	278, 0, 1928, 1929, 1930, 1931, 0, 0, 0, 0,
	0, 0, 1911, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1325, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 278, 278, 278, 0, 0,
	2138, 0, 0, 1944, 1325, 0, 1954, 0, 0, 0,
	0, 0, 0, 1933, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 1951, 0, 0, 0, 0, 0, 0, 1920,
	1921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2608, 0, 1942, 0, 0,
	0, 3895, 3896, 0, 0, 3899, 0, 0, 0, 3902,
	0, 0, 1926, 0, 0, 0, 0, 0, 3906, 0,
	2138, 0, 0, 0, 0, 0, 0, 3913, 0, 0,
	0, 0, 3514, 0, 0, 1314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3926, 0, 0,
	0, 0, 0, 774, 0, 0, 0, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 3949, 3950, 0,
	3951, 3952, 3953, 0, 757, 0, 0, 0, 0, 758,
	1941, 0, 274, 274, 723, 0, 0, 0, 3959, 0,
	0, 1956, 3961, 0, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 0, 3990, 3991, 0, 0, 0,
	0, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4002, 0, 0, 1321, 0, 0, 1932,
	1325, 0, 761, 0, 0, 0, 0, 0, 4011, 0,
	0, 0, 1321, 0, 1325, 0, 1325, 0, 0, 0,
	1325, 0, 1927, 0, 780, 0, 278, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 762, 0, 278, 0, 0,
	1945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1325,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 0, 0, 0, 0, 0, 0,
	0, 4067, 0, 764, 1325, 0, 278, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 0, 1325, 0,
	0, 0, 278, 0, 789, 278, 0, 0, 4085, 278,
	0, 278, 0, 0, 0, 0, 0, 0, 278, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4116, 0, 0, 0, 1943, 0, 1325, 0,
	0, 1325, 0, 0, 0, 0, 1917, 1918, 1924, 1946,
	1923, 1919, 0, 1916, 1914, 1915, 1907, 1908, 1909, 1910,
	1912, 1913, 0, 0, 0, 0, 0, 4137, 4138, 0,
	0, 3433, 0, 0, 0, 0, 0, 0, 0, 776,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2138,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2138, 2138, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 767, 0, 0, 0,
	0, 0, 0, 278, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2138, 2138, 0, 0, 0, 0,
	2052, 0, 0, 0, 0, 0, 787, 0, 768, 4239,
	0, 0, 879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 879, 0, 0, 0, 0,
	788, 0, 278, 0, 1325, 1325, 0, 0, 769, 0,
	0, 0, 0, 784, 785, 0, 782, 0, 0, 0,
	0, 0, 777, 0, 0, 770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4284, 4285, 0, 0,
	1325, 0, 4289, 4290, 0, 0, 0, 4293, 4294, 0,
	0, 0, 0, 0, 0, 4298, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 4302, 0, 0, 771,
	0, 778, 0, 0, 0, 0, 278, 0, 278, 772,
	0, 0, 4307, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 773, 0, 0, 0, 0, 781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 278, 278, 278, 0, 0, 0, 0,
	1211, 278, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 901, 0,
	0, 0, 0, 902, 0, 278, 0, 280, 280, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1149, 1325, 0, 0, 0, 1325,
	0, 0, 1325, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 903, 0, 920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2138, 0, 0, 280, 0, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4450,
	0, 0, 0, 0, 0, 0, 0, 0, 929, 0,
	0, 0, 0, 0, 1325, 906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 927,
	0, 1375, 0, 1375, 1375, 0, 0, 0, 0, 1325,
	1325, 1325, 0, 0, 0, 0, 1325, 1325, 1325, 0,
	0, 0, 0, 0, 900, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	1325, 0, 0, 0, 0, 0, 1325, 907, 0, 0,
	0, 908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 931, 0, 0, 0, 0, 789, 0,
	0, 0, 0, 1325, 1476, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 2138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4567, 4568, 4569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2608, 0,
	0, 4578, 4579, 930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 925, 0, 1321, 0, 0, 0, 4587,
	4590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 0, 0, 1728, 1729,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 0,
	0, 1325, 0, 0, 0, 1325, 1325, 0, 1325, 0,
	0, 2074, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 1325, 1325, 0, 909,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1325,
	911, 0, 0, 0, 0, 0, 4645, 0, 0, 0,
	0, 0, 0, 0, 0, 4653, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 278, 278,
	4661, 0, 912, 1149, 0, 1325, 0, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4670, 0, 0,
	4672, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 921, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 1325, 0, 788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 898, 0, 0,
	922, 0, 1325, 0, 0, 0, 0, 0, 0, 913,
	0, 0, 0, 0, 0, 0, 278, 278, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 2074, 0, 0,
	0, 0, 0, 0, 0, 0, 919, 0, 0, 278,
	0, 1325, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 914, 0, 0, 0, 915, 934, 0,
	933, 0, 0, 916, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 917, 0,
	0, 1325, 0, 926, 0, 0, 1325, 0, 0, 935,
	0, 932, 0, 0, 0, 0, 0, 790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1325, 1325, 1325, 1325, 1325,
	1325, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 4796, 0, 0, 0,
	4800, 0, 0, 879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 2138, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4870, 0, 0, 2101, 0, 1586,
	0, 0, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2608, 0, 278, 0, 278, 0,
	2138, 0, 1375, 4590, 0, 0, 0, 0, 0, 1586,
	0, 0, 0, 0, 0, 0, 280, 0, 280, 280,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1149, 1325, 1325, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	1485, 280, 280, 0, 0, 280, 280, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 1325, 0, 0, 1325,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 4991, 4991, 4991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1187, 114, 0, 0,
	5016, 2138, 0, 0, 0, 0, 0, 280, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	1321, 1321, 1485, 280, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 4991, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1903, 1904, 0, 1936, 1937, 1938, 1947, 1948, 1949,
	1325, 1325, 0, 0, 0, 0, 0, 0, 0, 2402,
	0, 280, 0, 2409, 1940, 1934, 0, 0, 0, 0,
	0, 1325, 0, 1906, 1325, 2422, 0, 0, 1325, 0,
	0, 0, 0, 1953, 0, 280, 0, 0, 1325, 0,
	0, 2434, 0, 2434, 0, 0, 0, 0, 0, 2441,
	1959, 0, 0, 0, 1123, 0, 0, 4991, 5148, 1905,
	0, 0, 0, 0, 0, 0, 1144, 0, 0, 1925,
	0, 0, 0, 0, 0, 0, 0, 0, 1922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2409, 0, 278, 2470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1308, 0, 0, 0, 0, 0, 2490,
	0, 1325, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 2506, 0, 2508, 0, 2510, 0, 2512,
	0, 2513, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 1928, 1929, 1930, 1931,
	0, 0, 0, 0, 278, 0, 1911, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 278, 2541, 2542, 2543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1321, 0, 0, 1944, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 1933, 1935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 1950, 0, 1951, 0, 0, 0,
	0, 0, 0, 1920, 1921, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1926, 1485, 0, 0,
	0, 0, 280, 280, 280, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 280, 871, 1325, 0, 1325, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1321,
	0, 0, 0, 0, 0, 0, 0, 1321, 0, 0,
	0, 1485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2925, 0, 0,
	0, 0, 0, 0, 0, 0, 1927, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 2074, 0, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 2976, 278, 0, 1375, 0, 0, 0,
	1375, 0, 1375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 2422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 1485, 1485, 280, 0,
	1943, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 3432, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 280, 0, 280, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 1586, 1485, 0, 1485, 0, 1485, 0, 0,
	0, 0, 0, 0, 2409, 2409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1485,
	280, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 1485, 0, 1485, 1485, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2409, 0, 0, 280, 280, 0,
	280, 0, 280, 2422, 280, 114, 280, 114, 0, 114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 278, 0, 0, 0, 0, 0, 75, 0, 47,
	46, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 280, 280, 280, 0, 76, 0, 0, 3277, 161,
	0, 1144, 114, 114, 0, 1203, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 3288, 114, 3291,
	114, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	49, 0, 163, 0, 114, 0, 114, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 1485, 0, 0, 0,
	48, 0, 90, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2074, 0, 0, 0, 0, 0, 0, 51,
	69, 0, 0, 3324, 1586, 3326, 1586, 0, 52, 0,
	0, 0, 3332, 58, 0, 0, 0, 0, 164, 0,
	0, 0, 114, 0, 0, 0, 50, 0, 112, 0,
	0, 0, 0, 0, 96, 109, 0, 0, 0, 0,
	0, 0, 70, 0, 0, 0, 0, 0, 1375, 0,
	0, 0, 0, 0, 0, 0, 3361, 278, 278, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1123, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 2074, 280, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 280, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 2074, 2074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 2074, 0, 278,
	2074, 0, 0, 0, 0, 0, 0, 0, 280, 1604,
	0, 280, 0, 0, 0, 280, 0, 280, 101, 0,
	0, 0, 0, 0, 280, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 54, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 0, 0, 1604, 2072, 60, 2075, 0,
	114, 0, 1604, 0, 0, 0, 0, 71, 0, 0,
	0, 1485, 0, 0, 0, 59, 195, 104, 1604, 0,
	108, 0, 0, 278, 55, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 63, 0, 280, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 162, 0, 1604, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3562, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	280, 0, 1485, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 0, 0, 200, 1586,
	1586, 0, 0, 0, 0, 0, 245, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 196, 0, 3611, 0, 0, 0, 280,
	0, 280, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 3666, 3668, 0,
	0, 2422, 0, 0, 0, 0, 0, 1485, 0, 1485,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 1485, 0, 0,
	0, 0, 2074, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 280,
	280, 280, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3781, 0, 0, 0, 3785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 1482, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 871, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1144,
	0, 1144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3880, 0, 1586,
	0, 0, 0, 0, 0, 1483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 1482, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3893, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1605, 0, 1123, 0, 0, 1123, 1123, 1605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1903, 1904, 1605, 1936, 1937, 1938, 1947, 1948, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 1934, 0, 0, 0, 0,
	0, 0, 0, 1906, 0, 0, 0, 0, 0, 0,
	0, 2676, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 0, 0, 0, 0, 0, 0, 0,
	1959, 1144, 0, 1605, 0, 0, 1604, 1604, 0, 1905,
	0, 1979, 0, 0, 0, 1979, 1482, 0, 0, 1925,
	0, 0, 0, 0, 0, 1485, 0, 0, 1922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1308, 0,
	280, 0, 0, 0, 280, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 0, 1928, 1929, 1930, 1931,
	0, 0, 0, 1604, 0, 1604, 1911, 1604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 1604, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 1604,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	1954, 1604, 0, 1604, 1604, 1604, 0, 1933, 1935, 0,
	0, 0, 280, 280, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 280, 1950, 0, 1951, 871, 0, 0,
	0, 0, 0, 1920, 1921, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	1485, 0, 0, 0, 0, 0, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 2422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4193, 0, 0, 0, 0,
	0, 0, 1485, 0, 1952, 4203, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 1485, 0, 1485, 0,
	2422, 0, 1485, 0, 1941, 4221, 1482, 0, 0, 280,
	1485, 0, 1483, 0, 0, 1956, 0, 0, 0, 280,
	0, 0, 1485, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4269, 0, 1932, 0, 0, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	1485, 0, 0, 0, 0, 0, 1927, 0, 0, 1482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 114, 0, 114, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 0, 0,
	1485, 0, 280, 1485, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1482,
	114, 0, 0, 114, 0, 0, 0, 0, 0, 114,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 3429, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1605, 1605, 0, 0, 0, 0, 0, 0, 0,
	0, 1483, 0, 0, 0, 0, 4428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2422, 0, 0, 0, 0, 0, 0, 0,
	0, 1482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2676, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 1605, 0,
	1605, 0, 1605, 0, 0, 1979, 0, 0, 0, 2422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4526,
	1605, 1605, 0, 0, 0, 0, 0, 0, 1482, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 1605, 0, 1605, 1605,
	1605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1604, 0, 0, 1485, 0, 0,
	0, 1485, 0, 0, 1485, 0, 0, 1604, 0, 1604,
	280, 0, 0, 0, 0, 1604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1604, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 4630, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 280, 0, 1308, 0, 0,
	280, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 0, 0, 1308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 1485, 1485, 0, 0, 0, 0, 1485, 1485,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2422, 0, 0, 0, 0, 0, 0,
	1485, 0, 1485, 0, 1483, 0, 280, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1903, 1904, 0, 1936, 1937,
	1938, 1947, 1948, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1483, 0, 0, 0, 1940, 1934,
	0, 0, 0, 0, 0, 0, 0, 1906, 4758, 1586,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 114, 0, 114, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 0, 0, 0, 0, 0, 0,
	0, 0, 1922, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1485, 1485, 0,
	1485, 114, 114, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 1929, 1930, 1931, 0, 0, 0, 0, 0, 0,
	1911, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	4876, 0, 0, 0, 1485, 0, 0, 280, 0, 0,
	280, 1944, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 1933, 1935, 0, 1485, 0, 0, 1308, 0, 0,
	1144, 0, 0, 0, 280, 0, 0, 0, 1950, 0,
	1951, 0, 1482, 0, 114, 114, 0, 1920, 1921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1485, 1485, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	1926, 0, 0, 1483, 4929, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 280, 0, 0, 1605, 0, 0,
	0, 0, 0, 1485, 280, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 1482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 1485, 1485, 1485,
	1485, 1485, 1485, 0, 4973, 0, 0, 0, 1941, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 1605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 0, 1605, 0, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 1605, 0, 0, 0, 0, 0, 1485, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1485, 1945, 0,
	1482, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 1958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1308, 1308, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 1604, 1485,
	0, 0, 1482, 0, 0, 0, 0, 0, 280, 871,
	1604, 0, 0, 0, 0, 0, 0, 1485, 1485, 1485,
	0, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1917, 1918, 1924, 1946, 1923, 1919,
	0, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 3428,
	0, 1485, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1604, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1482, 1903, 1904, 1482, 1936, 1937, 1938, 1947, 1948, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 1934, 0, 0, 0, 0,
	0, 1903, 1904, 1906, 1936, 1937, 1938, 1947, 1948, 1949,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 1934, 0, 0, 0, 0,
	1959, 0, 0, 1906, 0, 0, 0, 0, 0, 1905,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 1925,
	1482, 280, 0, 0, 0, 0, 0, 0, 1922, 0,
	1959, 0, 0, 0, 0, 0, 0, 1482, 0, 1905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	114, 0, 0, 0, 0, 0, 0, 0, 1922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 1308, 0, 0, 0,
	1485, 0, 0, 0, 0, 0, 0, 1483, 0, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 1929, 1930, 1931,
	0, 0, 0, 0, 0, 0, 1911, 0, 0, 114,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1483, 1928, 1929, 1930, 1931,
	0, 0, 0, 0, 0, 0, 1911, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 280,
	1954, 1483, 0, 0, 0, 0, 0, 1933, 1935, 0,
	0, 0, 1482, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 1951, 1944, 0, 0,
	1954, 0, 0, 1920, 1921, 0, 0, 1933, 1935, 0,
	0, 0, 0, 871, 0, 0, 0, 0, 0, 0,
	0, 1942, 0, 0, 1950, 0, 1951, 0, 0, 280,
	0, 0, 0, 1920, 1921, 0, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 1926, 0, 0, 0,
	0, 1308, 0, 0, 0, 0, 0, 0, 0, 1308,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1483, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1604, 0, 0,
	0, 1604, 0, 0, 1604, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 1605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1605, 0, 1605, 0, 0, 1927, 1483, 0, 0,
	0, 0, 0, 1932, 0, 1605, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 0, 0, 1945, 0, 1927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 1958, 0, 0,
	0, 1604, 1604, 1604, 0, 0, 114, 0, 1604, 1604,
	1604, 1605, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 1605, 0, 1605, 0, 1958, 0, 0,
	1604, 0, 1604, 0, 0, 0, 0, 0, 1482, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 1483, 0, 0, 1483, 0,
	1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 3427, 0, 0, 0, 0,
	1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1483, 0, 0, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1482, 1482, 0,
	1482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1604, 1604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1903, 1904,
	0, 1936, 1937, 1938, 1947, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1940, 1934, 0, 0, 0, 0, 0, 0, 0,
	1906, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1482, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 1905, 1483, 0, 0,
	0, 0, 0, 0, 1482, 0, 1925, 0, 0, 0,
	0, 0, 0, 0, 0, 1922, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2676, 0, 0,
	0, 0, 0, 1604, 1604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 0, 0, 1604, 0,
	0, 0, 0, 1928, 1929, 1930, 1931, 0, 0, 0,
	0, 0, 0, 1911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1604, 1604, 1604,
	1604, 1604, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 1933, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 114, 0,
	0, 1950, 1605, 1951, 0, 0, 1605, 0, 0, 1605,
	1920, 1921, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1482, 0,
	1604, 0, 0, 1926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 1605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 1605, 1605, 0,
	0, 1941, 0, 1605, 1605, 1605, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1605, 0, 1605, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 1482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1604, 1604, 1604,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1482, 1903,
	1904, 1604, 1936, 1937, 1938, 1947, 1948, 1949, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 1934, 0, 0, 0, 0, 0, 0,
	0, 1906, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 1483, 1483, 0, 1483, 0, 1925, 0, 0,
	0, 0, 0, 0, 0, 0, 1922, 0, 0, 0,
	0, 0, 0, 1605, 1605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 1918, 1924,
	1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908, 1909,
	1910, 1912, 1913, 0, 0, 0, 0, 0, 4916, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1021, 0, 1071, 0, 1928, 1929, 1930, 1931, 0, 0,
	0, 0, 0, 0, 1911, 0, 0, 0, 0, 1483,
	0, 0, 0, 0, 0, 0, 0, 1029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	0, 0, 0, 0, 1044, 0, 1027, 1026, 0, 0,
	1604, 0, 0, 0, 0, 1944, 0, 0, 1954, 0,
	1604, 0, 0, 0, 0, 1933, 1935, 0, 0, 1046,
	0, 0, 0, 0, 0, 1028, 0, 0, 1605, 1605,
	1031, 0, 1950, 0, 1951, 1082, 0, 0, 0, 0,
	0, 1920, 1921, 0, 1041, 1042, 0, 0, 0, 0,
	0, 0, 0, 1060, 0, 0, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 1483, 0,
	0, 1072, 1033, 1605, 1926, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1604, 0, 0, 0, 0, 0, 0,
	0, 1035, 1605, 1605, 1605, 1605, 1605, 1605, 0, 0,
	1069, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1483, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1941, 1070, 0, 0, 0, 0, 0, 0,
	1483, 0, 0, 1956, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 0, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1038, 1039, 0,
	0, 0, 0, 1483, 0, 1605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1047, 1045, 0, 0,
	0, 1932, 0, 0, 1040, 0, 0, 0, 1056, 0,
	0, 1077, 1076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1483, 0, 1927, 0, 1079, 1068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 0, 0, 0, 0, 0, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 1483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 1605, 1605, 0, 0, 1032, 0, 0,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 1064, 1065,
	0, 0, 0, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 1067, 1483, 0, 0, 1605, 0, 1917, 1918,
	1924, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908,
	1909, 1910, 1912, 1913, 0, 0, 0, 1074, 1062, 4912,
	0, 0, 0, 0, 0, 0, 1080, 1057, 0, 0,
	1050, 1048, 0, 0, 1053, 0, 0, 0, 0, 0,
	1054, 0, 0, 1023, 0, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 1055, 0, 0, 0, 0, 0, 1052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1078,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 1059,
	0, 0, 0, 0, 0, 0, 0, 1036, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1063, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1480, 1605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1605, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 1486,
	296, 297, 1487, 1488, 1489, 0, 1490, 669, 1491, 1492,
	1493, 298, 1494, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	1495, 674, 310, 311, 312, 313, 314, 315, 1496, 1497,
	0, 316, 675, 676, 677, 1498, 317, 318, 678, 1499,
	1566, 1500, 319, 320, 321, 322, 323, 324, 325, 0,
	1501, 327, 328, 329, 326, 330, 1502, 331, 1605, 332,
	333, 334, 335, 336, 337, 1503, 338, 339, 340, 1266,
	341, 342, 343, 1504, 1505, 1507, 1506, 1508, 1509, 1510,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	1511, 354, 350, 352, 1512, 355, 353, 356, 1513, 357,
	358, 359, 1514, 1515, 360, 361, 362, 1516, 363, 364,
	365, 1517, 366, 367, 368, 1518, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 1519, 285, 1520, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 1521, 387,
	388, 389, 1522, 390, 1523, 1267, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	1524, 403, 687, 1525, 688, 404, 1526, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 1269, 411, 412,
	1527, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 1528, 1268, 498, 421, 692, 693, 1529,
	694, 1530, 422, 423, 1270, 695, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 1531, 434, 436, 435, 1532, 437, 696, 1273, 438,
	439, 1274, 1533, 440, 441, 442, 443, 444, 445, 448,
	1534, 1535, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 1536, 287, 1277, 493, 494, 495, 1537, 697,
	496, 698, 499, 500, 1538, 0, 501, 0, 502, 1539,
	1540, 504, 505, 506, 1541, 1542, 507, 508, 699, 1278,
	509, 1279, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 1543, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 1544, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 1545,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 1546, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	1547, 590, 591, 589, 592, 593, 594, 1548, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 1549, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 1550, 624, 625, 0, 621, 612,
	1551, 626, 627, 628, 629, 630, 631, 632, 633, 1552,
	634, 710, 711, 712, 713, 1553, 644, 1554, 635, 636,
	637, 638, 714, 639, 715, 1555, 640, 641, 642, 643,
	0, 645, 646, 1556, 1557, 647, 648, 649, 651, 652,
	650, 653, 1558, 654, 1559, 0, 655, 656, 657, 716,
	717, 718, 1560, 659, 658, 660, 661, 719, 662, 663,
	1561, 1562, 1563, 1564, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1480, 0, 0, 0, 0, 0, 0, 0, 2903, 0,
	0, 0, 0, 0, 0, 0, 2904, 288, 289, 291,
	290, 292, 293, 294, 295, 1486, 296, 297, 1487, 1488,
	1489, 0, 1490, 669, 1491, 1492, 1493, 298, 1494, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 1495, 674, 310, 311,
	312, 313, 314, 315, 1496, 1497, 0, 316, 675, 676,
	677, 1498, 317, 318, 678, 1499, 1566, 1500, 319, 320,
	321, 322, 323, 324, 325, 0, 1501, 327, 328, 329,
	326, 330, 1502, 331, 0, 332, 333, 334, 335, 336,
	337, 1503, 338, 339, 340, 1266, 341, 342, 343, 1504,
	1505, 1507, 1506, 1508, 1509, 1510, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 1511, 354, 350, 352,
	1512, 355, 353, 356, 1513, 357, 358, 359, 1514, 1515,
	360, 361, 362, 1516, 363, 364, 365, 1517, 366, 367,
	368, 1518, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 1519,
	285, 1520, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 1521, 387, 388, 389, 1522, 390,
	1523, 1267, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 1524, 403, 687, 1525,
	688, 404, 1526, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 1269, 411, 412, 1527, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 1528,
	1268, 498, 421, 692, 693, 1529, 694, 1530, 422, 423,
	1270, 695, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 1531, 434, 436,
	435, 1532, 437, 696, 1273, 438, 439, 1274, 1533, 440,
	441, 442, 443, 444, 445, 448, 1534, 1535, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 1536, 287,
	1277, 493, 494, 495, 1537, 697, 496, 698, 499, 500,
	1538, 0, 501, 0, 502, 1539, 1540, 504, 505, 506,
	1541, 1542, 507, 508, 699, 1278, 509, 1279, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 1543, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 1544, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 1545, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	1546, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 1547, 590, 591, 589,
	592, 593, 594, 1548, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 1549, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	1550, 624, 625, 0, 621, 612, 1551, 626, 627, 628,
	629, 630, 631, 632, 633, 1552, 634, 710, 711, 712,
	713, 1553, 644, 1554, 635, 636, 637, 638, 714, 639,
	715, 1555, 640, 641, 642, 643, 0, 645, 646, 1556,
	1557, 647, 648, 649, 651, 652, 650, 653, 1558, 654,
	1559, 0, 655, 656, 657, 716, 717, 718, 1560, 659,
	658, 660, 661, 719, 662, 663, 1561, 1562, 1563, 1564,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 3920, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3922, 288, 289, 291, 290, 292, 293, 294, 295, 1486,
	296, 297, 1487, 1488, 1489, 0, 1490, 669, 1491, 1492,
	1493, 298, 1494, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	1495, 674, 310, 311, 312, 313, 314, 315, 1496, 1497,
	0, 316, 675, 676, 677, 1498, 317, 318, 678, 1499,
	1566, 1500, 319, 320, 321, 322, 323, 324, 325, 0,
	1501, 327, 328, 329, 326, 330, 1502, 331, 0, 332,
	333, 334, 335, 336, 337, 1503, 338, 339, 340, 1266,
	341, 342, 343, 1504, 1505, 1507, 1506, 1508, 1509, 1510,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	1511, 354, 350, 352, 1512, 355, 353, 356, 1513, 357,
	358, 359, 1514, 1515, 360, 361, 362, 1516, 363, 364,
	365, 1517, 366, 367, 368, 1518, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 1519, 285, 1520, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 1521, 387,
	388, 389, 1522, 390, 1523, 1267, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	1524, 403, 687, 1525, 688, 404, 1526, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 1269, 411, 412,
	1527, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 1528, 1268, 498, 421, 692, 693, 1529,
	694, 1530, 422, 423, 1270, 695, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 1531, 434, 436, 435, 1532, 437, 696, 1273, 438,
	439, 1274, 1533, 440, 441, 442, 443, 444, 445, 448,
	1534, 1535, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 1536, 287, 1277, 493, 494, 495, 1537, 697,
	496, 698, 499, 500, 1538, 0, 501, 0, 502, 1539,
	1540, 504, 505, 506, 1541, 1542, 507, 508, 699, 1278,
	509, 1279, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 1543, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 1544, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 1545,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 1546, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	1547, 590, 591, 589, 592, 593, 594, 1548, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 1549, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 1550, 624, 625, 0, 621, 612,
	1551, 626, 627, 628, 629, 630, 631, 632, 633, 1552,
	634, 710, 711, 712, 713, 1553, 644, 1554, 635, 636,
	637, 638, 714, 639, 715, 1555, 640, 641, 642, 643,
	0, 645, 646, 1556, 1557, 647, 648, 649, 651, 652,
	650, 653, 1558, 654, 1559, 0, 655, 656, 657, 716,
	717, 718, 1560, 659, 658, 660, 661, 719, 662, 663,
	1561, 1562, 1563, 1564, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4342, 288,
	289, 291, 290, 292, 293, 294, 295, 1486, 296, 297,
	1487, 1488, 1489, 0, 1490, 669, 1491, 1492, 1493, 298,
	1494, 299, 300, 1265, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 1495, 674,
	310, 311, 312, 313, 314, 315, 1496, 1497, 0, 316,
	675, 676, 677, 1498, 317, 318, 678, 1499, 1566, 1500,
	319, 320, 321, 322, 323, 324, 325, 0, 1501, 327,
	328, 329, 326, 330, 1502, 331, 0, 332, 333, 334,
	335, 336, 337, 1503, 338, 339, 340, 1266, 341, 342,
	343, 1504, 1505, 1507, 1506, 1508, 1509, 1510, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 1511, 354,
	350, 352, 1512, 355, 353, 356, 1513, 357, 358, 359,
	1514, 1515, 360, 361, 362, 1516, 363, 364, 365, 1517,
	366, 367, 368, 1518, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 1519, 285, 1520, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 1521, 387, 388, 389,
	1522, 390, 1523, 1267, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 1524, 403,
	687, 1525, 688, 404, 1526, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 1269, 411, 412, 1527, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 1528, 1268, 498, 421, 692, 693, 1529, 694, 1530,
	422, 423, 1270, 695, 1271, 424, 425, 426, 1272, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 1531,
	434, 436, 435, 1532, 437, 696, 1273, 438, 439, 1274,
	1533, 440, 441, 442, 443, 444, 445, 448, 1534, 1535,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1275,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1276, 491, 479,
	1536, 287, 1277, 493, 494, 495, 1537, 697, 496, 698,
	499, 500, 1538, 0, 501, 0, 502, 1539, 1540, 504,
	505, 506, 1541, 1542, 507, 508, 699, 1278, 509, 1279,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 1543, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 1544,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 1545, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 1546, 564, 565, 566, 1280, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 1547, 590,
	591, 589, 592, 593, 594, 1548, 595, 596, 578, 579,
	597, 598, 1281, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 1549, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 1550, 624, 625, 0, 621, 612, 1551, 626,
	627, 628, 629, 630, 631, 632, 633, 1552, 634, 710,
	711, 712, 713, 1553, 644, 1554, 635, 636, 637, 638,
	714, 639, 715, 1555, 640, 641, 642, 643, 0, 645,
	646, 1556, 1557, 647, 648, 649, 651, 652, 650, 653,
	1558, 654, 1559, 0, 655, 656, 657, 716, 717, 718,
	1560, 659, 658, 660, 661, 719, 662, 663, 1561, 1562,
	1563, 1564, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4340, 288, 289, 291,
	290, 292, 293, 294, 295, 1486, 296, 297, 1487, 1488,
	1489, 0, 1490, 669, 1491, 1492, 1493, 298, 1494, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 1495, 674, 310, 311,
	312, 313, 314, 315, 1496, 1497, 0, 316, 675, 676,
	677, 1498, 317, 318, 678, 1499, 1566, 1500, 319, 320,
	321, 322, 323, 324, 325, 0, 1501, 327, 328, 329,
	326, 330, 1502, 331, 0, 332, 333, 334, 335, 336,
	337, 1503, 338, 339, 340, 1266, 341, 342, 343, 1504,
	1505, 1507, 1506, 1508, 1509, 1510, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 1511, 354, 350, 352,
	1512, 355, 353, 356, 1513, 357, 358, 359, 1514, 1515,
	360, 361, 362, 1516, 363, 364, 365, 1517, 366, 367,
	368, 1518, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 1519,
	285, 1520, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 1521, 387, 388, 389, 1522, 390,
	1523, 1267, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 1524, 403, 687, 1525,
	688, 404, 1526, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 1269, 411, 412, 1527, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 1528,
	1268, 498, 421, 692, 693, 1529, 694, 1530, 422, 423,
	1270, 695, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 1531, 434, 436,
	435, 1532, 437, 696, 1273, 438, 439, 1274, 1533, 440,
	441, 442, 443, 444, 445, 448, 1534, 1535, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 1536, 287,
	1277, 493, 494, 495, 1537, 697, 496, 698, 499, 500,
	1538, 0, 501, 0, 502, 1539, 1540, 504, 505, 506,
	1541, 1542, 507, 508, 699, 1278, 509, 1279, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 1543, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 1544, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 1545, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	1546, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 1547, 590, 591, 589,
	592, 593, 594, 1548, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 1549, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	1550, 624, 625, 0, 621, 612, 1551, 626, 627, 628,
	629, 630, 631, 632, 633, 1552, 634, 710, 711, 712,
	713, 1553, 644, 1554, 635, 636, 637, 638, 714, 639,
	715, 1555, 640, 641, 642, 643, 0, 645, 646, 1556,
	1557, 647, 648, 649, 651, 652, 650, 653, 1558, 654,
	1559, 0, 655, 656, 657, 716, 717, 718, 1560, 659,
	658, 660, 661, 719, 662, 663, 1561, 1562, 1563, 1564,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 1480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4573, 288,
	289, 291, 290, 292, 293, 294, 295, 1486, 296, 297,
	1487, 1488, 1489, 0, 1490, 669, 1491, 1492, 1493, 298,
	1494, 299, 300, 1265, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 1495, 674,
	310, 311, 312, 313, 314, 315, 1496, 1497, 0, 316,
	675, 676, 677, 1498, 317, 318, 678, 1499, 1566, 1500,
	319, 320, 321, 322, 323, 324, 325, 0, 1501, 327,
	328, 329, 326, 330, 1502, 331, 0, 332, 333, 334,
	335, 336, 337, 1503, 338, 339, 340, 1266, 341, 342,
	343, 1504, 1505, 1507, 1506, 1508, 1509, 1510, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 1511, 354,
	350, 352, 1512, 355, 353, 356, 1513, 357, 358, 359,
	1514, 1515, 360, 361, 362, 1516, 363, 364, 365, 1517,
	366, 367, 368, 1518, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 1519, 285, 1520, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 1521, 387, 388, 389,
	1522, 390, 1523, 1267, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 1524, 403,
	687, 1525, 688, 404, 1526, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 1269, 411, 412, 1527, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 1528, 1268, 498, 421, 692, 693, 1529, 694, 1530,
	422, 423, 1270, 695, 1271, 424, 425, 426, 1272, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 1531,
	434, 436, 435, 1532, 437, 696, 1273, 438, 439, 1274,
	1533, 440, 441, 442, 443, 444, 445, 448, 1534, 1535,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1275,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1276, 491, 479,
	1536, 287, 1277, 493, 494, 495, 1537, 697, 496, 698,
	499, 500, 1538, 0, 501, 0, 502, 1539, 1540, 504,
	505, 506, 1541, 1542, 507, 508, 699, 1278, 509, 1279,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 1543, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 1544,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 1545, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 1546, 564, 565, 566, 1280, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 1547, 590,
	591, 589, 592, 593, 594, 1548, 595, 596, 578, 579,
	597, 598, 1281, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 1549, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 1550, 624, 625, 0, 621, 612, 1551, 626,
	627, 628, 629, 630, 631, 632, 633, 1552, 634, 710,
	711, 712, 713, 1553, 644, 1554, 635, 636, 637, 638,
	714, 639, 715, 1555, 640, 641, 642, 643, 0, 645,
	646, 1556, 1557, 647, 648, 649, 651, 652, 650, 653,
	1558, 654, 1559, 0, 655, 656, 657, 716, 717, 718,
	1560, 659, 658, 660, 661, 719, 662, 663, 1561, 1562,
	1563, 1564, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4437, 288, 289, 291, 290, 292, 293, 294, 295, 1486,
	296, 297, 1487, 1488, 1489, 0, 1490, 669, 1491, 1492,
	1493, 298, 1494, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	1495, 674, 310, 311, 312, 313, 314, 315, 1496, 1497,
	0, 316, 675, 676, 677, 1498, 317, 318, 678, 1499,
	1566, 1500, 319, 320, 321, 322, 323, 324, 325, 0,
	1501, 327, 328, 329, 326, 330, 1502, 331, 0, 332,
	333, 334, 335, 336, 337, 1503, 338, 339, 340, 1266,
	341, 342, 343, 1504, 1505, 1507, 1506, 1508, 1509, 1510,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	1511, 354, 350, 352, 1512, 355, 353, 356, 1513, 357,
	358, 359, 1514, 1515, 360, 361, 362, 1516, 363, 364,
	365, 1517, 366, 367, 368, 1518, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 1519, 285, 1520, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 1521, 387,
	388, 389, 1522, 390, 1523, 1267, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	1524, 403, 687, 1525, 688, 404, 1526, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 1269, 411, 412,
	1527, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 1528, 1268, 498, 421, 692, 693, 1529,
	694, 1530, 422, 423, 1270, 695, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 1531, 434, 436, 435, 1532, 437, 696, 1273, 438,
	439, 1274, 1533, 440, 441, 442, 443, 444, 445, 448,
	1534, 1535, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 1536, 287, 1277, 493, 494, 495, 1537, 697,
	496, 698, 499, 500, 1538, 0, 501, 0, 502, 1539,
	1540, 504, 505, 506, 1541, 1542, 507, 508, 699, 1278,
	509, 1279, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 1543, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 1544, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 1545,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 1546, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	1547, 590, 591, 589, 592, 593, 594, 1548, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 1549, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 1550, 624, 625, 0, 621, 612,
	1551, 626, 627, 628, 629, 630, 631, 632, 633, 1552,
	634, 710, 711, 712, 713, 1553, 644, 1554, 635, 636,
	637, 638, 714, 639, 715, 1555, 640, 641, 642, 643,
	0, 645, 646, 1556, 1557, 647, 648, 649, 651, 652,
	650, 653, 1558, 654, 1559, 0, 655, 656, 657, 716,
	717, 718, 1560, 659, 658, 660, 661, 719, 662, 663,
	1561, 1562, 1563, 1564, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 1480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4270, 288, 289, 291, 290, 292, 293, 294,
	295, 1486, 296, 297, 1487, 1488, 1489, 0, 1490, 669,
	1491, 1492, 1493, 298, 1494, 299, 300, 1265, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 1495, 674, 310, 311, 312, 313, 314, 315,
	1496, 1497, 0, 316, 675, 676, 677, 1498, 317, 318,
	678, 1499, 1566, 1500, 319, 320, 321, 322, 323, 324,
	325, 0, 1501, 327, 328, 329, 326, 330, 1502, 331,
	0, 332, 333, 334, 335, 336, 337, 1503, 338, 339,
	340, 1266, 341, 342, 343, 1504, 1505, 1507, 1506, 1508,
	1509, 1510, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 1511, 354, 350, 352, 1512, 355, 353, 356,
	1513, 357, 358, 359, 1514, 1515, 360, 361, 362, 1516,
	363, 364, 365, 1517, 366, 367, 368, 1518, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 1519, 285, 1520, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	1521, 387, 388, 389, 1522, 390, 1523, 1267, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 1524, 403, 687, 1525, 688, 404, 1526, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 1269,
	411, 412, 1527, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 1528, 1268, 498, 421, 692,
	693, 1529, 694, 1530, 422, 423, 1270, 695, 1271, 424,
	425, 426, 1272, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 1531, 434, 436, 435, 1532, 437, 696,
	1273, 438, 439, 1274, 1533, 440, 441, 442, 443, 444,
	445, 448, 1534, 1535, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1275, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1276, 491, 479, 1536, 287, 1277, 493, 494, 495,
	1537, 697, 496, 698, 499, 500, 1538, 0, 501, 0,
	502, 1539, 1540, 504, 505, 506, 1541, 1542, 507, 508,
	699, 1278, 509, 1279, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 1543, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 1544, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 1545, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 1546, 564, 565, 566,
	1280, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 1547, 590, 591, 589, 592, 593, 594, 1548,
	595, 596, 578, 579, 597, 598, 1281, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 1549, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 1550, 624, 625, 0,
	621, 612, 1551, 626, 627, 628, 629, 630, 631, 632,
	633, 1552, 634, 710, 711, 712, 713, 1553, 644, 1554,
	635, 636, 637, 638, 714, 639, 715, 1555, 640, 641,
	642, 643, 0, 645, 646, 1556, 1557, 647, 648, 649,
	651, 652, 650, 653, 1558, 654, 1559, 0, 655, 656,
	657, 716, 717, 718, 1560, 659, 658, 660, 661, 719,
	662, 663, 1561, 1562, 1563, 1564, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 1480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3938, 288, 289, 291, 290, 292,
	293, 294, 295, 1486, 296, 297, 1487, 1488, 1489, 0,
	1490, 669, 1491, 1492, 1493, 298, 1494, 299, 300, 1265,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 1495, 674, 310, 311, 312, 313,
	314, 315, 1496, 1497, 0, 316, 675, 676, 677, 1498,
	317, 318, 678, 1499, 1566, 1500, 319, 320, 321, 322,
	323, 324, 325, 0, 1501, 327, 328, 329, 326, 330,
	1502, 331, 0, 332, 333, 334, 335, 336, 337, 1503,
	338, 339, 340, 1266, 341, 342, 343, 1504, 1505, 1507,
	1506, 1508, 1509, 1510, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 1511, 354, 350, 352, 1512, 355,
	353, 356, 1513, 357, 358, 359, 1514, 1515, 360, 361,
	362, 1516, 363, 364, 365, 1517, 366, 367, 368, 1518,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 1519, 285, 1520,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 1521, 387, 388, 389, 1522, 390, 1523, 1267,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 1524, 403, 687, 1525, 688, 404,
	1526, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 1269, 411, 412, 1527, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 1528, 1268, 498,
	421, 692, 693, 1529, 694, 1530, 422, 423, 1270, 695,
	1271, 424, 425, 426, 1272, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 1531, 434, 436, 435, 1532,
	437, 696, 1273, 438, 439, 1274, 1533, 440, 441, 442,
	443, 444, 445, 448, 1534, 1535, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1275, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1276, 491, 479, 1536, 287, 1277, 493,
	494, 495, 1537, 697, 496, 698, 499, 500, 1538, 0,
	501, 0, 502, 1539, 1540, 504, 505, 506, 1541, 1542,
	507, 508, 699, 1278, 509, 1279, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 1543,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 1544, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 1545, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 1546, 564,
	565, 566, 1280, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 1547, 590, 591, 589, 592, 593,
	594, 1548, 595, 596, 578, 579, 597, 598, 1281, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 1549,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 1550, 624,
	625, 0, 621, 612, 1551, 626, 627, 628, 629, 630,
	631, 632, 633, 1552, 634, 710, 711, 712, 713, 1553,
	644, 1554, 635, 636, 637, 638, 714, 639, 715, 1555,
	640, 641, 642, 643, 0, 645, 646, 1556, 1557, 647,
	648, 649, 651, 652, 650, 653, 1558, 654, 1559, 0,
	655, 656, 657, 716, 717, 718, 1560, 659, 658, 660,
	661, 719, 662, 663, 1561, 1562, 1563, 1564, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	1480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3754, 288, 289, 291,
	290, 292, 293, 294, 295, 1486, 296, 297, 1487, 1488,
	1489, 0, 1490, 669, 1491, 1492, 1493, 298, 1494, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 1495, 674, 310, 311,
	312, 313, 314, 315, 1496, 1497, 0, 316, 675, 676,
	677, 1498, 317, 318, 678, 1499, 1566, 1500, 319, 320,
	321, 322, 323, 324, 325, 0, 1501, 327, 328, 329,
	326, 330, 1502, 331, 0, 332, 333, 334, 335, 336,
	337, 1503, 338, 339, 340, 1266, 341, 342, 343, 1504,
	1505, 1507, 1506, 1508, 1509, 1510, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 1511, 354, 350, 352,
	1512, 355, 353, 356, 1513, 357, 358, 359, 1514, 1515,
	360, 361, 362, 1516, 363, 364, 365, 1517, 366, 367,
	368, 1518, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 1519,
	285, 1520, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 1521, 387, 388, 389, 1522, 390,
	1523, 1267, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 1524, 403, 687, 1525,
	688, 404, 1526, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 1269, 411, 412, 1527, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 1528,
	1268, 498, 421, 692, 693, 1529, 694, 1530, 422, 423,
	1270, 695, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 1531, 434, 436,
	435, 1532, 437, 696, 1273, 438, 439, 1274, 1533, 440,
	441, 442, 443, 444, 445, 448, 1534, 1535, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 1536, 287,
	1277, 493, 494, 495, 1537, 697, 496, 698, 499, 500,
	1538, 0, 501, 0, 502, 1539, 1540, 504, 505, 506,
	1541, 1542, 507, 508, 699, 1278, 509, 1279, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 1543, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 1544, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 1545, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	1546, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 1547, 590, 591, 589,
	592, 593, 594, 1548, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 1549, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	1550, 624, 625, 0, 621, 612, 1551, 626, 627, 628,
	629, 630, 631, 632, 633, 1552, 634, 710, 711, 712,
	713, 1553, 644, 1554, 635, 636, 637, 638, 714, 639,
	715, 1555, 640, 641, 642, 643, 0, 645, 646, 1556,
	1557, 647, 648, 649, 651, 652, 650, 653, 1558, 654,
	1559, 0, 655, 656, 657, 716, 717, 718, 1560, 659,
	658, 660, 661, 719, 662, 663, 1561, 1562, 1563, 1564,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 1480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2758, 288,
	289, 291, 290, 292, 293, 294, 295, 1486, 296, 297,
	1487, 1488, 1489, 0, 1490, 669, 1491, 1492, 1493, 298,
	1494, 299, 300, 1265, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 1495, 674,
	310, 311, 312, 313, 314, 315, 1496, 1497, 0, 316,
	675, 676, 677, 1498, 317, 318, 678, 1499, 1566, 1500,
	319, 320, 321, 322, 323, 324, 325, 0, 1501, 327,
	328, 329, 326, 330, 1502, 331, 0, 332, 333, 334,
	335, 336, 337, 1503, 338, 339, 340, 1266, 341, 342,
	343, 1504, 1505, 1507, 1506, 1508, 1509, 1510, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 1511, 354,
	350, 352, 1512, 355, 353, 356, 1513, 357, 358, 359,
	1514, 1515, 360, 361, 362, 1516, 363, 364, 365, 1517,
	366, 367, 368, 1518, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 1519, 285, 1520, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 1521, 387, 388, 389,
	1522, 390, 1523, 1267, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 1524, 403,
	687, 1525, 688, 404, 1526, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 1269, 411, 412, 1527, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 1528, 1268, 498, 421, 692, 693, 1529, 694, 1530,
	422, 423, 1270, 695, 1271, 424, 425, 426, 1272, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 1531,
	434, 436, 435, 1532, 437, 696, 1273, 438, 439, 1274,
	1533, 440, 441, 442, 443, 444, 445, 448, 1534, 1535,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1275,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1276, 491, 479,
	1536, 287, 1277, 493, 494, 495, 1537, 697, 496, 698,
	499, 500, 1538, 0, 501, 0, 502, 1539, 1540, 504,
	505, 506, 1541, 1542, 507, 508, 699, 1278, 509, 1279,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 1543, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 1544,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 1545, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 1546, 564, 565, 566, 1280, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 1547, 590,
	591, 589, 592, 593, 594, 1548, 595, 596, 578, 579,
	597, 598, 1281, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 1549, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 1550, 624, 625, 0, 621, 612, 1551, 626,
	627, 628, 629, 630, 631, 632, 633, 1552, 634, 710,
	711, 712, 713, 1553, 644, 1554, 635, 636, 637, 638,
	714, 639, 715, 1555, 640, 641, 642, 643, 0, 645,
	646, 1556, 1557, 647, 648, 649, 651, 652, 650, 653,
	1558, 654, 1559, 0, 655, 656, 657, 716, 717, 718,
	1560, 659, 658, 660, 661, 719, 662, 663, 1561, 1562,
	1563, 1564, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 1477, 0, 1480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2380, 288, 289, 291, 290, 292, 293, 294, 295, 1486,
	296, 297, 1487, 1488, 1489, 0, 1490, 669, 1491, 1492,
	1493, 298, 1494, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	1495, 674, 310, 311, 312, 313, 314, 315, 1496, 1497,
	0, 316, 675, 676, 677, 1498, 317, 318, 678, 1499,
	1566, 1500, 319, 320, 321, 322, 323, 324, 325, 0,
	1501, 327, 328, 329, 326, 330, 1502, 331, 0, 332,
	333, 334, 335, 336, 337, 1503, 338, 339, 340, 1266,
	341, 342, 343, 1504, 1505, 1507, 1506, 1508, 1509, 1510,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	1511, 354, 350, 352, 1512, 355, 353, 356, 1513, 357,
	358, 359, 1514, 1515, 360, 361, 362, 1516, 363, 364,
	365, 1517, 366, 367, 368, 1518, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 1519, 285, 1520, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 1521, 387,
	388, 389, 1522, 390, 1523, 1267, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	1524, 403, 687, 1525, 688, 404, 1526, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 1269, 411, 412,
	1527, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 1528, 1268, 498, 421, 692, 693, 1529,
	694, 1530, 422, 423, 1270, 695, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 1531, 434, 436, 435, 1532, 437, 696, 1273, 438,
	439, 1274, 1533, 440, 441, 442, 443, 444, 445, 448,
	1534, 1535, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 1536, 287, 1277, 493, 494, 495, 1537, 697,
	496, 698, 499, 500, 1538, 0, 501, 0, 502, 1539,
	1540, 504, 505, 506, 1541, 1542, 507, 508, 699, 1278,
	509, 1279, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 1543, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 1544, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 1545,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 1546, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	1547, 590, 591, 589, 592, 593, 594, 1548, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 1549, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 1550, 624, 625, 0, 621, 612,
	1551, 626, 627, 628, 629, 630, 631, 632, 633, 1552,
	634, 710, 711, 712, 713, 1553, 644, 1554, 635, 636,
	637, 638, 714, 639, 715, 1555, 640, 641, 642, 643,
	0, 645, 646, 1556, 1557, 647, 648, 649, 651, 652,
	650, 653, 1558, 654, 1559, 0, 655, 656, 657, 716,
	717, 718, 1560, 659, 658, 660, 661, 719, 662, 663,
	1561, 1562, 1563, 1564, 664, 665, 720, 666, 667, 668,
	1480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 1486, 296, 297, 1487, 1488,
	1489, 0, 1490, 669, 1491, 1492, 1493, 298, 1494, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 1495, 674, 310, 311,
	312, 313, 314, 315, 1496, 1497, 0, 316, 675, 676,
	677, 1498, 317, 318, 678, 1499, 1566, 1500, 319, 320,
	321, 322, 323, 324, 325, 0, 1501, 327, 328, 329,
	326, 330, 1502, 331, 0, 332, 333, 334, 335, 336,
	337, 1503, 338, 339, 340, 1266, 341, 342, 343, 1504,
	1505, 1507, 1506, 1508, 1509, 1510, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 1511, 354, 350, 352,
	1512, 355, 353, 356, 1513, 357, 358, 359, 1514, 1515,
	360, 361, 362, 1516, 363, 364, 365, 1517, 366, 367,
	368, 1518, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 1519,
	285, 1520, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 1521, 387, 388, 389, 1522, 390,
	1523, 1267, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 1524, 403, 687, 1525,
	688, 404, 1526, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 1269, 411, 412, 1527, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 1528,
	1268, 498, 421, 692, 693, 1529, 694, 1530, 422, 423,
	1270, 695, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 1531, 434, 436,
	435, 1532, 437, 696, 1273, 438, 439, 1274, 1533, 440,
	441, 442, 443, 444, 445, 448, 1534, 1535, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 1536, 287,
	1277, 493, 494, 495, 1537, 697, 496, 698, 499, 500,
	1538, 0, 501, 0, 502, 1539, 1540, 504, 505, 506,
	1541, 1542, 507, 508, 699, 1278, 509, 1279, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 1543, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 1544, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 1545, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	1546, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 1547, 590, 591, 589,
	592, 593, 594, 1548, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 1549, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	1550, 624, 625, 0, 621, 612, 1551, 626, 627, 628,
	629, 630, 631, 632, 633, 1552, 634, 710, 711, 712,
	713, 1553, 644, 1554, 635, 636, 637, 638, 714, 639,
	715, 1555, 640, 641, 642, 643, 0, 645, 646, 1556,
	1557, 647, 648, 649, 651, 652, 650, 653, 1558, 654,
	1559, 0, 655, 656, 657, 716, 717, 718, 1560, 659,
	658, 660, 661, 719, 662, 663, 1561, 1562, 1563, 1564,
	664, 665, 720, 666, 667, 668, 2733, 0, 1201, 1173,
	1174, 1175, 1171, 1172, 1184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 2730, 296, 297, 0, 0, 0, 0,
	0, 1225, 1189, 0, 0, 298, 0, 299, 300, 1265,
	301, 302, 303, 304, 305, 306, 307, 670, 1238, 0,
	308, 1245, 309, 1244, 0, 1255, 310, 311, 312, 313,
	314, 315, 1191, 1224, 1156, 316, 1285, 1286, 677, 0,
	317, 318, 1231, 0, 1212, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1266, 341, 342, 343, 1215, 1213, 1214,
	1221, 1217, 1216, 1220, 344, 345, 346, 347, 348, 1248,
	349, 351, 1242, 1241, 1161, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 2731, 0, 360, 1233,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 1167, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1256, 1257, 382, 1180, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 1240, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1267,
	391, 392, 393, 1253, 1254, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1263, 0, 1190, 404,
	0, 405, 406, 407, 408, 409, 410, 1226, 1227, 1230,
	497, 1269, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1268, 498,
	421, 1235, 1236, 0, 1196, 0, 422, 423, 1270, 1228,
	1271, 424, 425, 426, 1272, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 1264, 1273, 438, 439, 1274, 0, 440, 441, 442,
	443, 444, 445, 448, 1219, 1218, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1275, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1276, 491, 479, 1158, 287, 1277, 493,
	494, 495, 1181, 1229, 496, 1243, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 1278, 509, 1279, 1258, 510, 511, 1168,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	1259, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 1239, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 1280, 567, 568, 569, 570, 571, 1169, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 1222, 595, 596, 578, 579, 597, 598, 1281, 599,
	600, 601, 602, 603, 604, 605, 1237, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	1284, 615, 616, 617, 618, 1260, 622, 623, 0, 624,
	625, 1155, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 1249, 1250, 1251, 1252, 0,
	644, 0, 635, 636, 637, 638, 1261, 639, 1262, 1179,
	640, 641, 642, 643, 0, 645, 646, 0, 1162, 647,
	648, 649, 651, 652, 650, 653, 1223, 654, 0, 0,
	655, 656, 657, 716, 1246, 1283, 2729, 659, 658, 660,
	661, 719, 662, 663, 0, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 1159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1154, 0, 0,
	0, 0, 0, 0, 1152, 1153, 2732, 0, 0, 0,
	0, 0, 0, 0, 1185, 2728, 0, 1145, 1183, 1201,
	1173, 1174, 1175, 1171, 1172, 1184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 1225, 1189, 0, 0, 298, 0, 299, 300,
	1265, 301, 302, 303, 304, 305, 306, 307, 670, 1238,
	0, 308, 1245, 309, 1244, 0, 1255, 310, 311, 312,
	313, 314, 315, 1191, 1224, 1156, 316, 1285, 1286, 677,
	0, 317, 318, 1231, 0, 1212, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1266, 341, 342, 343, 1215, 1213,
	1214, 1221, 1217, 1216, 1220, 344, 345, 346, 347, 348,
	1248, 349, 351, 1242, 1241, 1161, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1233, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1167, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1256, 1257, 382, 1180, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1240, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1267, 391, 392, 393, 1253, 1254, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1263, 0, 1190,
	404, 0, 405, 406, 407, 408, 409, 410, 1226, 1227,
	1230, 497, 1269, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1268,
	498, 421, 1235, 1236, 0, 1196, 0, 422, 423, 1270,
	1228, 1271, 424, 425, 426, 1272, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1264, 1273, 438, 439, 1274, 0, 440, 441,
	442, 443, 444, 445, 448, 1219, 1218, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1275, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1276, 491, 479, 1158, 287, 1277,
	493, 494, 495, 1181, 1229, 496, 1243, 499, 500, 0,
	0, 501, 0, 502, 0, 0, 504, 505, 506, 0,
	0, 507, 508, 699, 1278, 509, 1279, 1258, 510, 511,
	1168, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 521, 522, 701, 523, 524, 525, 702, 526, 527,
	528, 1259, 529, 704, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 540, 541, 1239, 542,
	543, 545, 544, 546, 0, 547, 0, 548, 549, 550,
	0, 0, 0, 0, 0, 551, 552, 554, 0, 555,
	556, 557, 558, 553, 559, 560, 561, 562, 563, 0,
	564, 565, 566, 1280, 567, 568, 569, 570, 571, 1169,
	572, 0, 573, 574, 581, 582, 583, 575, 576, 577,
	584, 585, 586, 587, 588, 244, 590, 591, 589, 592,
	593, 594, 1222, 595, 596, 578, 579, 597, 598, 1281,
	599, 600, 601, 602, 603, 604, 605, 1237, 0, 606,
	0, 607, 608, 609, 610, 611, 613, 580, 614, 619,
	620, 1284, 615, 616, 617, 618, 1260, 622, 623, 0,
	624, 625, 1155, 621, 612, 246, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 634, 1249, 1250, 1251, 1252,
	0, 644, 0, 635, 636, 637, 638, 1261, 639, 1262,
	1179, 640, 641, 642, 643, 0, 645, 646, 0, 1162,
	647, 648, 649, 651, 652, 650, 653, 1223, 654, 0,
	0, 655, 656, 657, 1720, 1246, 1283, 0, 659, 658,
	660, 661, 719, 662, 663, 0, 0, 0, 238, 664,
	665, 720, 666, 667, 668, 1159, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1154, 0,
	0, 0, 0, 0, 0, 1152, 1153, 1201, 1173, 1174,
	1175, 1171, 1172, 1184, 0, 1984, 1982, 0, 0, 1183,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	1225, 1189, 0, 0, 298, 0, 299, 300, 1265, 301,
	302, 303, 304, 305, 306, 307, 670, 1238, 0, 308,
	1245, 309, 1244, 0, 1255, 310, 311, 312, 313, 314,
	315, 1191, 1224, 1156, 316, 1285, 1286, 677, 0, 317,
	318, 1231, 0, 1212, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221,
	1217, 1216, 1220, 344, 345, 346, 347, 348, 1248, 349,
	351, 1242, 1241, 1161, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1233, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1167, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1256, 1257, 382, 1180, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1240, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1267, 391,
	392, 393, 1253, 1254, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1263, 0, 1190, 404, 0,
	405, 406, 407, 408, 409, 410, 1226, 1227, 1230, 497,
	1269, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1268, 498, 421,
	1235, 1236, 0, 1196, 0, 422, 423, 1270, 1228, 1271,
	424, 425, 426, 1272, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1264, 1273, 438, 439, 1274, 0, 440, 441, 442, 443,
	444, 445, 448, 1219, 1218, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1275, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1276, 491, 479, 1158, 287, 1277, 493, 494,
	495, 1181, 1229, 496, 1243, 499, 500, 0, 0, 501,
	0, 502, 0, 0, 504, 505, 506, 0, 0, 507,
	508, 699, 1278, 509, 1279, 1258, 510, 511, 1168, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 521,
	522, 701, 523, 524, 525, 702, 526, 527, 528, 1259,
	529, 704, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 540, 541, 1239, 542, 543, 545,
	544, 546, 0, 547, 0, 548, 549, 550, 0, 0,
	0, 0, 0, 551, 552, 554, 0, 555, 556, 557,
	558, 553, 559, 560, 561, 562, 563, 0, 564, 565,
	566, 1280, 567, 568, 569, 570, 571, 1169, 572, 0,
	573, 574, 581, 582, 583, 575, 576, 577, 584, 585,
	586, 587, 588, 244, 590, 591, 589, 592, 593, 594,
	1222, 595, 596, 578, 579, 597, 598, 1281, 599, 600,
	601, 602, 603, 604, 605, 1237, 0, 606, 0, 607,
	608, 609, 610, 611, 613, 580, 614, 619, 620, 1284,
	615, 616, 617, 618, 1260, 622, 623, 0, 624, 625,
	1155, 621, 612, 246, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 634, 1249, 1250, 1251, 1252, 0, 644,
	0, 635, 636, 637, 638, 1261, 639, 1262, 1179, 640,
	641, 642, 643, 0, 645, 646, 0, 1162, 647, 648,
	649, 651, 652, 650, 653, 1223, 654, 0, 0, 655,
	656, 657, 1720, 1246, 1283, 0, 659, 658, 660, 661,
	719, 662, 663, 0, 0, 0, 238, 664, 665, 720,
	666, 667, 668, 1159, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 0, 0, 0,
	0, 0, 0, 1152, 1153, 1201, 1173, 1174, 1175, 1171,
	1172, 1184, 0, 1984, 3383, 0, 0, 1183, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 1225, 1189,
	0, 0, 298, 0, 299, 300, 1265, 301, 302, 303,
	304, 305, 306, 307, 670, 1238, 0, 308, 1245, 309,
	1244, 0, 1255, 310, 311, 312, 313, 314, 315, 1191,
	1224, 1156, 316, 1285, 1286, 677, 0, 317, 318, 1231,
	0, 1212, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216,
	1220, 344, 345, 346, 347, 348, 1248, 349, 351, 1242,
	1241, 1161, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1233, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1167,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1256, 1257, 382, 1180, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1240, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1267, 391, 392, 393,
	1253, 1254, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1263, 0, 1190, 404, 0, 405, 406,
	407, 408, 409, 410, 1226, 1227, 1230, 497, 1269, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1268, 498, 421, 1235, 1236,
	0, 1196, 0, 422, 423, 1270, 1228, 1271, 424, 425,
	426, 1272, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1264, 1273,
	438, 439, 1274, 0, 440, 441, 442, 443, 444, 445,
	448, 1219, 1218, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1275, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1276, 491, 479, 1158, 287, 1277, 493, 494, 495, 1181,
	1229, 496, 1243, 499, 500, 0, 0, 501, 0, 502,
	0, 0, 504, 505, 506, 0, 0, 507, 508, 699,
	1278, 509, 1279, 1258, 510, 511, 1168, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 701,
	523, 524, 525, 702, 526, 527, 528, 1259, 529, 704,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 540, 541, 1239, 542, 543, 545, 544, 546,
	0, 547, 0, 548, 549, 550, 0, 0, 0, 0,
	0, 551, 552, 554, 0, 555, 556, 557, 558, 553,
	559, 560, 561, 562, 563, 0, 564, 565, 566, 1280,
	567, 568, 569, 570, 571, 1169, 572, 0, 573, 574,
	581, 582, 583, 575, 576, 577, 584, 585, 586, 587,
	588, 244, 590, 591, 589, 592, 593, 594, 1222, 595,
	596, 578, 579, 597, 598, 1281, 599, 600, 601, 602,
	603, 604, 605, 1237, 0, 606, 0, 607, 608, 609,
	610, 611, 613, 580, 614, 619, 620, 1284, 615, 616,
	617, 618, 1260, 622, 623, 0, 624, 625, 1155, 621,
	612, 246, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 634, 1249, 1250, 1251, 1252, 0, 644, 0, 635,
	636, 637, 638, 1261, 639, 1262, 1179, 640, 641, 642,
	643, 0, 645, 646, 0, 1162, 647, 648, 649, 651,
	652, 650, 653, 1223, 654, 0, 0, 655, 656, 657,
	1720, 1246, 1283, 0, 659, 658, 660, 661, 719, 662,
	663, 0, 0, 0, 238, 664, 665, 720, 666, 667,
	668, 1159, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1154, 0, 0, 0, 0, 0,
	0, 1152, 1153, 1201, 1173, 1174, 1175, 1171, 1172, 1184,
	0, 1984, 1982, 0, 0, 1183, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 1225, 1189, 0, 0,
	298, 0, 299, 300, 1265, 301, 302, 303, 304, 305,
	306, 307, 670, 1238, 0, 308, 1245, 309, 1244, 2864,
	1255, 310, 311, 312, 313, 314, 315, 1191, 1224, 1156,
	316, 1285, 1286, 677, 0, 317, 318, 1231, 0, 1212,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1266, 341,
	342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344,
	345, 346, 347, 348, 1248, 349, 351, 1242, 1241, 1161,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1233, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1167, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1256,
	1257, 382, 1180, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1240, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 2869, 1267, 391, 392, 393, 1253, 1254,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1263, 0, 1190, 404, 0, 405, 406, 407, 408,
	409, 410, 1226, 1227, 1230, 497, 1269, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1268, 498, 421, 1235, 1236, 0, 1196,
	0, 422, 423, 1270, 1228, 1271, 424, 425, 426, 1272,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 2865, 437, 1264, 1273, 438, 439,
	1274, 0, 440, 441, 442, 443, 444, 445, 448, 1219,
	1218, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1275, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1276, 491,
	479, 1158, 287, 1277, 493, 494, 495, 1181, 1229, 496,
	1243, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 1278, 509,
	1279, 1258, 510, 511, 1168, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 1259, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 1239, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 1280, 567, 568,
	569, 570, 571, 1169, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 1222, 595, 596, 578,
	579, 597, 598, 1281, 599, 600, 601, 602, 603, 604,
	605, 1237, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 1284, 615, 616, 617, 618,
	1260, 622, 623, 0, 624, 625, 1155, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	1249, 1250, 1251, 1252, 0, 644, 2866, 635, 636, 637,
	638, 1261, 639, 1262, 1179, 640, 641, 642, 643, 0,
	645, 646, 0, 1162, 647, 648, 649, 651, 652, 650,
	653, 1223, 654, 0, 0, 655, 656, 657, 716, 1246,
	1283, 0, 659, 658, 660, 661, 719, 662, 663, 0,
	0, 0, 0, 664, 665, 720, 666, 667, 668, 1159,
	0, 0, 2778, 0, 1201, 1173, 1174, 1175, 1171, 1172,
	1184, 0, 1154, 0, 0, 0, 0, 0, 0, 1152,
	1153, 288, 289, 291, 290, 292, 293, 294, 295, 1185,
	296, 297, 0, 1183, 0, 0, 0, 1225, 1189, 0,
	0, 298, 0, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 1238, 0, 308, 1245, 309, 1244,
	0, 1255, 310, 311, 312, 313, 314, 315, 1191, 1224,
	1156, 316, 1285, 1286, 677, 0, 317, 318, 1231, 0,
	1212, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220,
	344, 345, 346, 347, 348, 1248, 349, 351, 1242, 1241,
	1161, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1233, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1167, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1256, 1257, 382, 1180, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1240, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 1253,
	1254, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1263, 0, 1190, 404, 0, 405, 406, 407,
	408, 409, 410, 1226, 1227, 1230, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1268, 498, 421, 1235, 1236, 0,
	1196, 0, 422, 423, 1270, 1228, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1264, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	1219, 1218, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 1158, 287, 1277, 493, 494, 495, 1181, 1229,
	496, 1243, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 1258, 510, 511, 1168, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 1259, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 1239, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 1169, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 1222, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 1237, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 1284, 615, 616, 617,
	618, 1260, 622, 623, 0, 624, 625, 1155, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 1249, 1250, 1251, 1252, 0, 644, 0, 635, 636,
	637, 638, 1261, 639, 1262, 1179, 640, 641, 642, 643,
	0, 645, 646, 0, 1162, 647, 648, 649, 651, 652,
	650, 653, 1223, 654, 0, 0, 655, 656, 657, 716,
	1246, 1283, 0, 659, 658, 660, 661, 719, 662, 663,
	0, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1154, 0, 0, 0, 0, 0, 0,
	1152, 1153, 0, 0, 0, 0, 0, 0, 0, 0,
	1185, 2776, 0, 2775, 1183, 1201, 1173, 1174, 1175, 1171,
	1172, 1184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 1225, 1189,
	0, 0, 298, 0, 299, 300, 1265, 301, 302, 303,
	304, 305, 306, 307, 670, 1238, 0, 308, 1245, 309,
	1244, 0, 1255, 310, 311, 312, 313, 314, 315, 1191,
	1224, 1156, 316, 1285, 1286, 677, 0, 317, 318, 1231,
	0, 1212, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216,
	1220, 344, 345, 346, 347, 348, 1248, 349, 351, 1242,
	1241, 1161, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1233, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1167,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1256, 1257, 382, 1180, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1240, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1267, 391, 392, 393,
	1253, 1254, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1263, 0, 1190, 404, 0, 405, 406,
	407, 408, 409, 410, 1226, 1227, 1230, 497, 1269, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1268, 498, 421, 1235, 1236,
	0, 1196, 0, 422, 423, 1270, 1228, 1271, 424, 425,
	426, 1272, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1264, 1273,
	438, 439, 1274, 0, 440, 441, 442, 443, 444, 445,
	448, 1219, 1218, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1275, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1276, 491, 479, 1158, 287, 1277, 493, 494, 495, 1181,
	1229, 496, 1243, 499, 500, 0, 0, 501, 0, 502,
	0, 0, 504, 505, 506, 0, 0, 507, 508, 699,
	1278, 509, 1279, 1258, 510, 511, 1168, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 701,
	523, 524, 525, 702, 526, 527, 528, 1259, 529, 704,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 540, 541, 1239, 542, 543, 545, 544, 546,
	0, 547, 0, 548, 549, 550, 0, 0, 0, 0,
	0, 551, 552, 554, 0, 555, 556, 557, 558, 553,
	559, 560, 561, 562, 563, 0, 564, 565, 566, 1280,
	567, 568, 569, 570, 571, 1169, 572, 0, 573, 574,
	581, 582, 583, 575, 576, 577, 584, 585, 586, 587,
	588, 0, 590, 591, 589, 592, 593, 594, 1222, 595,
	596, 578, 579, 597, 598, 1281, 599, 600, 601, 602,
	603, 604, 605, 1237, 0, 606, 0, 607, 608, 609,
	610, 611, 613, 580, 614, 619, 620, 1284, 615, 616,
	617, 618, 1260, 622, 623, 0, 624, 625, 1155, 621,
	612, 0, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 634, 1249, 1250, 1251, 1252, 0, 644, 0, 635,
	636, 637, 638, 1261, 639, 1262, 1179, 640, 641, 642,
	643, 0, 645, 646, 0, 1162, 647, 648, 649, 651,
	652, 650, 653, 1223, 654, 0, 0, 655, 656, 657,
	716, 1246, 1283, 0, 659, 658, 660, 661, 719, 662,
	663, 0, 0, 0, 0, 664, 665, 720, 666, 667,
	668, 1159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1154, 0, 0, 0, 0, 0,
	0, 1152, 1153, 0, 0, 0, 0, 0, 0, 0,
	0, 1185, 2773, 0, 2772, 1183, 1201, 1173, 1174, 1175,
	1171, 1172, 1184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 1225,
	1189, 0, 0, 298, 0, 299, 300, 1265, 301, 302,
	303, 304, 305, 306, 307, 670, 1238, 0, 308, 1245,
	309, 1244, 0, 1255, 310, 311, 312, 313, 314, 315,
	1191, 1224, 1156, 316, 1285, 1286, 677, 0, 317, 318,
	1231, 0, 1212, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217,
	1216, 1220, 344, 345, 346, 347, 348, 1248, 349, 351,
	1242, 1241, 1161, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 1233, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	1167, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1256, 1257, 382, 1180, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 1240, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1267, 391, 392,
	393, 1253, 1254, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1263, 0, 1190, 404, 0, 405,
	406, 407, 408, 409, 410, 1226, 1227, 1230, 497, 1269,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1268, 498, 421, 1235,
	1236, 0, 1196, 0, 422, 423, 1270, 1228, 1271, 424,
	425, 426, 1272, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1264,
	1273, 438, 439, 1274, 0, 440, 441, 442, 443, 444,
	445, 448, 1219, 1218, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1275, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1276, 491, 479, 1158, 287, 1277, 493, 494, 495,
	1181, 1229, 496, 1243, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 1278, 509, 1279, 1258, 510, 511, 1168, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 1259, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 1239, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	1280, 567, 568, 569, 570, 571, 1169, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 1222,
	595, 596, 578, 579, 597, 598, 1281, 599, 600, 601,
	602, 603, 604, 605, 1237, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 1284, 615,
	616, 617, 618, 1260, 622, 623, 0, 624, 625, 1155,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 1249, 1250, 1251, 1252, 0, 644, 0,
	635, 636, 637, 638, 1261, 639, 1262, 1179, 640, 641,
	642, 643, 0, 645, 646, 0, 1162, 647, 648, 649,
	651, 652, 650, 653, 1223, 654, 0, 0, 655, 656,
	657, 716, 1246, 1283, 0, 659, 658, 660, 661, 719,
	662, 663, 0, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 1159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 0, 0, 0, 0,
	0, 0, 1152, 1153, 0, 0, 0, 0, 0, 0,
	0, 0, 1185, 2770, 0, 2769, 1183, 1201, 1173, 1174,
	1175, 1171, 1172, 1184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	1225, 1189, 0, 0, 298, 0, 299, 300, 1265, 301,
	302, 303, 304, 305, 306, 307, 670, 1238, 0, 308,
	1245, 309, 1244, 0, 1255, 310, 311, 312, 313, 314,
	315, 1191, 1224, 1156, 316, 1285, 1286, 677, 0, 317,
	318, 1231, 0, 1212, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221,
	1217, 1216, 1220, 344, 345, 346, 347, 348, 1248, 349,
	351, 1242, 1241, 1161, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1233, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1167, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1256, 1257, 382, 1180, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1240, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1267, 391,
	392, 393, 1253, 1254, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1263, 0, 1190, 404, 0,
	405, 406, 407, 408, 409, 410, 1226, 1227, 1230, 497,
	1269, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1268, 498, 421,
	1235, 1236, 0, 1196, 0, 422, 423, 1270, 1228, 1271,
	424, 425, 426, 1272, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1264, 1273, 438, 439, 1274, 0, 440, 441, 442, 443,
	444, 445, 448, 1219, 1218, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1275, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1276, 491, 479, 1158, 287, 1277, 493, 494,
	495, 1181, 1229, 496, 1243, 499, 500, 0, 0, 501,
	0, 502, 0, 0, 504, 505, 506, 0, 0, 507,
	508, 699, 1278, 509, 1279, 1258, 510, 511, 1168, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 521,
	522, 701, 523, 524, 525, 702, 526, 527, 528, 1259,
	529, 704, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 540, 541, 1239, 542, 543, 545,
	544, 546, 0, 547, 0, 548, 549, 550, 0, 0,
	0, 0, 0, 551, 552, 554, 0, 555, 556, 557,
	558, 553, 559, 560, 561, 562, 563, 0, 564, 565,
	566, 1280, 567, 568, 569, 570, 571, 1169, 572, 0,
	573, 574, 581, 582, 583, 575, 576, 577, 584, 585,
	586, 587, 588, 0, 590, 591, 589, 592, 593, 594,
	1222, 595, 596, 578, 579, 597, 598, 1281, 599, 600,
	601, 602, 603, 604, 605, 1237, 0, 606, 0, 607,
	608, 609, 610, 611, 613, 580, 614, 619, 620, 1284,
	615, 616, 617, 618, 1260, 622, 623, 0, 624, 625,
	1155, 621, 612, 0, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 634, 1249, 1250, 1251, 1252, 0, 644,
	0, 635, 636, 637, 638, 1261, 639, 1262, 1179, 640,
	641, 642, 643, 0, 645, 646, 0, 1162, 647, 648,
	649, 651, 652, 650, 653, 1223, 654, 0, 0, 655,
	656, 657, 716, 1246, 1283, 0, 659, 658, 660, 661,
	719, 662, 663, 0, 0, 0, 0, 664, 665, 720,
	666, 667, 668, 1159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 0, 0, 0,
	0, 0, 0, 1152, 1153, 0, 0, 0, 0, 0,
	0, 0, 0, 1185, 2767, 0, 1821, 1183, 1201, 1173,
	1174, 1175, 1171, 1172, 1184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 1225, 1189, 0, 0, 298, 0, 299, 300, 1265,
	301, 302, 303, 304, 305, 306, 307, 670, 1238, 0,
	308, 1245, 309, 1244, 0, 1255, 310, 311, 312, 313,
	314, 315, 1191, 1224, 1156, 316, 1285, 1286, 677, 0,
	317, 318, 1231, 0, 1212, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1266, 341, 342, 343, 1215, 1213, 1214,
	1221, 1217, 1216, 1220, 344, 345, 346, 347, 348, 1248,
	349, 351, 1242, 1241, 1161, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 1233,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 1167, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1256, 1257, 382, 1180, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 1240, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1267,
	391, 392, 393, 1253, 1254, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1263, 0, 1190, 404,
	0, 405, 406, 407, 408, 409, 410, 1226, 1227, 1230,
	497, 1269, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1268, 498,
	421, 1235, 1236, 0, 1196, 0, 422, 423, 1270, 1228,
	1271, 424, 425, 426, 1272, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 1264, 1273, 438, 439, 1274, 0, 440, 441, 442,
	443, 444, 445, 448, 1219, 1218, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1275, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1276, 491, 479, 1158, 287, 1277, 493,
	494, 495, 1181, 1229, 496, 1243, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 1278, 509, 1279, 1258, 510, 511, 1168,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	1259, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 1239, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 1280, 567, 568, 569, 570, 571, 1169, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 1222, 595, 596, 578, 579, 597, 598, 1281, 599,
	600, 601, 602, 603, 604, 605, 1237, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	1284, 615, 616, 617, 618, 1260, 622, 623, 0, 624,
	625, 1155, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 1249, 1250, 1251, 1252, 0,
	644, 0, 635, 636, 637, 638, 1261, 639, 1262, 1179,
	640, 641, 642, 643, 0, 645, 646, 0, 1162, 647,
	648, 649, 651, 652, 650, 653, 1223, 654, 0, 0,
	655, 656, 657, 716, 1246, 1283, 0, 659, 658, 660,
	661, 719, 662, 663, 1820, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 1159, 0, 0, 1148, 0, 1201,
	1173, 1174, 1175, 1171, 1172, 1184, 0, 1154, 0, 0,
	0, 0, 0, 0, 1152, 1153, 288, 289, 291, 290,
	292, 293, 294, 295, 1185, 296, 297, 0, 1183, 0,
	0, 0, 1225, 1189, 0, 0, 298, 0, 299, 300,
	1265, 301, 302, 303, 304, 305, 306, 307, 670, 1238,
	0, 308, 1245, 309, 1244, 0, 1255, 310, 311, 312,
	313, 314, 315, 1191, 1224, 1156, 316, 1285, 1286, 677,
	0, 317, 318, 1231, 0, 1212, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1266, 341, 342, 343, 1215, 1213,
	1214, 1221, 1217, 1216, 1220, 344, 345, 346, 347, 348,
	1248, 349, 351, 1242, 1241, 1161, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1233, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1167, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1256, 1257, 382, 1180, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1240, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1267, 391, 392, 393, 1253, 1254, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1263, 0, 1190,
	404, 0, 405, 406, 407, 408, 409, 410, 1226, 1227,
	1230, 497, 1269, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1268,
	498, 421, 1235, 1236, 0, 1196, 0, 422, 423, 1270,
	1228, 1271, 424, 425, 426, 1272, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1264, 1273, 438, 439, 1274, 0, 440, 441,
	442, 443, 444, 445, 448, 1219, 1218, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1275, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1276, 491, 479, 1158, 287, 1277,
	493, 494, 495, 1181, 1229, 496, 1243, 499, 500, 0,
	0, 501, 0, 502, 1163, 0, 504, 505, 506, 0,
	0, 507, 508, 699, 1278, 509, 1279, 1258, 510, 511,
	1168, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 521, 522, 701, 523, 524, 525, 702, 526, 527,
	528, 1259, 529, 704, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 540, 541, 1239, 542,
	543, 545, 544, 546, 0, 547, 0, 548, 549, 550,
	0, 0, 0, 0, 0, 551, 552, 554, 0, 555,
	556, 557, 558, 553, 559, 560, 561, 562, 563, 0,
	564, 565, 566, 1280, 567, 568, 569, 570, 571, 1169,
	572, 0, 573, 574, 581, 582, 583, 575, 576, 577,
	584, 585, 586, 587, 588, 0, 590, 591, 589, 592,
	593, 594, 1222, 595, 596, 578, 579, 597, 598, 1281,
	599, 600, 601, 602, 603, 604, 605, 1237, 0, 606,
	0, 607, 608, 609, 610, 611, 613, 580, 614, 619,
	620, 1284, 615, 616, 617, 618, 1260, 622, 623, 0,
	624, 625, 1155, 621, 612, 0, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 634, 1249, 1250, 1251, 1252,
	0, 644, 0, 635, 636, 637, 638, 1261, 639, 1262,
	1179, 640, 641, 642, 643, 0, 645, 646, 0, 1162,
	647, 648, 649, 651, 652, 650, 653, 1223, 654, 0,
	0, 655, 656, 657, 716, 1246, 1283, 0, 659, 658,
	660, 661, 719, 662, 663, 0, 0, 0, 0, 664,
	665, 720, 666, 667, 668, 1159, 0, 0, 0, 0,
	1201, 1173, 1174, 1175, 1171, 1172, 1184, 0, 1154, 0,
	0, 0, 0, 0, 0, 1152, 1153, 288, 289, 291,
	290, 292, 293, 294, 295, 1185, 296, 297, 0, 1183,
	0, 0, 0, 1225, 1189, 0, 0, 298, 0, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	1238, 0, 308, 1245, 309, 1244, 0, 1255, 310, 311,
	312, 313, 314, 315, 1191, 1224, 1156, 316, 1285, 1286,
	677, 0, 317, 318, 1231, 0, 1212, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 4941,
	337, 0, 338, 339, 340, 1266, 341, 342, 343, 1215,
	1213, 1214, 1221, 1217, 1216, 1220, 344, 345, 346, 347,
	348, 1248, 349, 351, 1242, 1241, 1161, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 1233, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 1167, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1256, 1257, 382, 1180,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 1240,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1267, 391, 392, 393, 1253, 1254, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1263, 0,
	1190, 404, 0, 405, 406, 407, 408, 409, 410, 1226,
	1227, 1230, 497, 1269, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1268, 498, 421, 1235, 1236, 0, 1196, 0, 422, 423,
	1270, 1228, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 1264, 1273, 438, 439, 1274, 0, 440,
	441, 442, 443, 444, 445, 448, 1219, 1218, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 1158, 287,
	1277, 493, 494, 495, 1181, 1229, 496, 1243, 499, 500,
	0, 0, 501, 0, 502, 1163, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 1278, 509, 1279, 1258, 510,
	511, 1168, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 1259, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 1239,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	1169, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 1222, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 1237, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 1284, 615, 616, 617, 618, 1260, 622, 623,
	0, 624, 625, 1155, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 1249, 1250, 1251,
	1252, 0, 644, 0, 635, 636, 637, 638, 1261, 639,
	1262, 1179, 640, 641, 642, 643, 0, 645, 646, 0,
	1162, 647, 648, 649, 651, 652, 650, 653, 1223, 654,
	0, 0, 655, 656, 657, 716, 1246, 1283, 0, 659,
	658, 660, 661, 719, 662, 663, 0, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 1159, 0, 0, 0,
	0, 1201, 1173, 1174, 1175, 1171, 1172, 1184, 0, 1154,
	0, 0, 0, 0, 0, 0, 1152, 1153, 288, 289,
	291, 290, 292, 293, 294, 295, 1185, 296, 297, 0,
	1183, 0, 0, 0, 1225, 1189, 0, 0, 298, 0,
	299, 300, 1265, 301, 302, 303, 304, 305, 306, 307,
	670, 1238, 0, 308, 1245, 309, 1244, 0, 1255, 310,
	311, 312, 313, 314, 315, 1191, 1224, 1156, 316, 1285,
	1286, 677, 0, 317, 318, 1231, 0, 1212, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1266, 341, 342, 343,
	1215, 1213, 1214, 1221, 1217, 1216, 1220, 344, 345, 346,
	347, 348, 1248, 349, 351, 1242, 1241, 1161, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1233, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1167, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1256, 1257, 382,
	1180, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1240, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1267, 391, 392, 393, 1253, 1254, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1263,
	0, 1190, 404, 0, 405, 406, 407, 408, 409, 410,
	1226, 1227, 1230, 497, 1269, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 2610, 418, 419, 420,
	0, 1268, 498, 421, 1235, 1236, 0, 1196, 0, 422,
	423, 1270, 1228, 1271, 424, 425, 426, 1272, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1264, 1273, 438, 439, 1274, 0,
	440, 441, 442, 443, 444, 445, 448, 1219, 1218, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1275, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1276, 491, 479, 1158,
	287, 1277, 493, 494, 495, 1181, 1229, 496, 1243, 499,
	500, 0, 0, 501, 0, 502, 0, 0, 504, 505,
	506, 0, 0, 507, 508, 699, 1278, 509, 1279, 1258,
	510, 511, 1168, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 521, 522, 701, 523, 524, 525, 702,
	526, 527, 528, 1259, 529, 704, 530, 531, 2609, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 540, 541,
	1239, 542, 543, 545, 544, 546, 0, 547, 0, 548,
	549, 550, 0, 0, 0, 0, 0, 551, 552, 554,
	0, 555, 556, 557, 558, 553, 559, 560, 561, 562,
	563, 0, 564, 565, 566, 1280, 567, 568, 569, 570,
	571, 1169, 572, 0, 573, 574, 581, 582, 583, 575,
	576, 577, 584, 585, 586, 587, 588, 0, 590, 591,
	589, 592, 593, 594, 1222, 595, 596, 578, 579, 597,
	598, 1281, 599, 600, 601, 602, 603, 604, 605, 1237,
	0, 606, 0, 607, 608, 609, 610, 611, 613, 580,
	614, 619, 620, 1284, 615, 616, 617, 618, 1260, 622,
	623, 0, 624, 625, 1155, 621, 612, 0, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 634, 1249, 1250,
	1251, 1252, 0, 644, 0, 635, 636, 637, 638, 1261,
	639, 1262, 1179, 640, 641, 642, 643, 0, 645, 646,
	0, 1162, 647, 648, 649, 651, 652, 650, 653, 1223,
	654, 0, 0, 655, 656, 657, 716, 1246, 1283, 0,
	659, 658, 660, 661, 719, 662, 663, 0, 0, 0,
	0, 664, 665, 720, 666, 667, 668, 1159, 0, 0,
	0, 0, 1201, 1173, 1174, 1175, 1171, 1172, 1184, 0,
	1154, 0, 0, 0, 0, 0, 0, 1152, 1153, 288,
	289, 291, 290, 292, 293, 294, 295, 1185, 296, 297,
	0, 1183, 0, 0, 0, 1225, 1189, 0, 0, 298,
	0, 299, 300, 1265, 301, 302, 303, 304, 305, 306,
	307, 670, 1238, 0, 308, 1245, 309, 1244, 0, 1255,
	310, 311, 312, 313, 314, 315, 1191, 1224, 1156, 316,
	1285, 1286, 677, 0, 317, 318, 1231, 0, 1212, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 4664, 337, 0, 338, 339, 340, 1266, 341, 342,
	343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344, 345,
	346, 347, 348, 1248, 349, 351, 1242, 1241, 1161, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1233, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1167, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1256, 1257,
	382, 1180, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1240, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1267, 391, 392, 393, 1253, 1254, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1263, 0, 1190, 404, 0, 405, 406, 407, 408, 409,
	410, 1226, 1227, 1230, 497, 1269, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1268, 498, 421, 1235, 1236, 0, 1196, 0,
	422, 423, 1270, 1228, 1271, 424, 425, 426, 1272, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1264, 1273, 438, 439, 1274,
	0, 440, 441, 442, 443, 444, 445, 448, 1219, 1218,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1275,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1276, 491, 479,
	1158, 287, 1277, 493, 494, 495, 1181, 1229, 496, 1243,
	499, 500, 0, 0, 501, 0, 502, 1163, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 1278, 509, 1279,
	1258, 510, 511, 1168, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 1259, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 1239, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 1280, 567, 568, 569,
	570, 571, 1169, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 1222, 595, 596, 578, 579,
	597, 598, 1281, 599, 600, 601, 602, 603, 604, 605,
	1237, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 1284, 615, 616, 617, 618, 1260,
	622, 623, 0, 624, 625, 1155, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 1249,
	1250, 1251, 1252, 0, 644, 0, 635, 636, 637, 638,
	1261, 639, 1262, 1179, 640, 641, 642, 643, 0, 645,
	646, 0, 1162, 647, 648, 649, 651, 652, 650, 653,
	1223, 654, 0, 0, 655, 656, 657, 716, 1246, 1283,
	0, 659, 658, 660, 661, 719, 662, 663, 0, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 1159, 0,
	0, 0, 0, 1201, 1173, 1174, 1175, 1171, 1172, 1184,
	0, 1154, 0, 0, 0, 0, 0, 0, 1152, 1153,
	288, 289, 291, 290, 292, 293, 294, 295, 1185, 296,
	297, 0, 1183, 0, 0, 0, 1225, 1189, 0, 0,
	298, 0, 299, 300, 1265, 301, 302, 303, 304, 305,
	306, 307, 670, 1238, 0, 308, 1245, 309, 1244, 0,
	1255, 310, 311, 312, 313, 314, 315, 1191, 1224, 1156,
	316, 1285, 1286, 677, 0, 317, 318, 1231, 0, 1212,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1266, 341,
	342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344,
	345, 346, 347, 348, 1248, 349, 351, 1242, 1241, 1161,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1233, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1167, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1256,
	1257, 382, 1180, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1240, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1267, 391, 392, 393, 1253, 1254,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1263, 0, 1190, 404, 0, 405, 406, 407, 408,
	409, 410, 1226, 1227, 1230, 497, 1269, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1268, 498, 421, 1235, 1236, 0, 1196,
	0, 422, 423, 1270, 1228, 1271, 424, 425, 426, 1272,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1264, 1273, 438, 439,
	1274, 0, 440, 441, 442, 443, 444, 445, 448, 1219,
	1218, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1275, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1276, 491,
	479, 1158, 287, 1277, 493, 494, 495, 1181, 1229, 496,
	1243, 499, 500, 0, 0, 501, 0, 502, 1163, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 1278, 509,
	1279, 1258, 510, 511, 1168, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 1259, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 1239, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 1280, 567, 568,
	569, 570, 571, 1169, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 1222, 595, 596, 578,
	579, 597, 598, 1281, 599, 600, 601, 602, 603, 604,
	605, 1237, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 1284, 615, 616, 617, 618,
	1260, 622, 623, 0, 624, 625, 1155, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	1249, 1250, 1251, 1252, 0, 644, 0, 635, 636, 637,
	638, 1261, 639, 1262, 1179, 640, 641, 642, 643, 0,
	645, 646, 0, 1162, 647, 648, 649, 651, 652, 650,
	653, 1223, 654, 0, 0, 655, 656, 657, 716, 1246,
	1283, 0, 659, 658, 660, 661, 719, 662, 663, 0,
	0, 0, 0, 664, 665, 720, 666, 667, 668, 1159,
	0, 0, 0, 0, 1201, 1173, 1174, 1175, 1171, 1172,
	1184, 0, 1154, 0, 0, 0, 0, 0, 0, 1152,
	1153, 288, 289, 291, 290, 292, 293, 294, 295, 1185,
	296, 297, 0, 1183, 0, 0, 0, 1225, 1189, 0,
	0, 298, 0, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 1238, 0, 308, 1245, 309, 1244,
	0, 1255, 310, 311, 312, 313, 314, 315, 1191, 1224,
	1156, 316, 1285, 1286, 677, 0, 317, 318, 1231, 0,
	1212, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220,
	344, 345, 346, 347, 348, 1248, 349, 351, 1242, 1241,
	1161, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1233, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1167, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1256, 1257, 382, 1180, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1240, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 1253,
	1254, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1263, 0, 1190, 404, 0, 405, 406, 407,
	408, 409, 410, 1226, 1227, 1230, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1268, 498, 421, 1235, 1236, 0,
	1196, 0, 422, 423, 1270, 1228, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1264, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	1219, 1218, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 1158, 4233, 1277, 493, 494, 495, 1181, 1229,
	496, 1243, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 1258, 510, 511, 1168, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 1259, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 1239, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 1169, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 1222, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 1237, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 1284, 615, 616, 617,
	618, 1260, 622, 623, 0, 624, 625, 1155, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 1249, 1250, 1251, 1252, 0, 644, 0, 635, 636,
	637, 638, 1261, 639, 1262, 1179, 640, 641, 642, 643,
	0, 645, 646, 0, 1162, 647, 648, 649, 651, 652,
	650, 653, 1223, 654, 0, 0, 655, 656, 657, 716,
	1246, 1283, 0, 659, 658, 660, 661, 719, 662, 663,
	0, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1154, 0, 0, 0, 0, 0, 0,
	1152, 1153, 2053, 1201, 1173, 1174, 1175, 1171, 1172, 1184,
	1185, 0, 0, 0, 1183, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 1225, 1189, 0, 0,
	298, 0, 299, 300, 1265, 301, 302, 303, 304, 305,
	306, 307, 670, 1238, 0, 308, 1245, 309, 1244, 0,
	1255, 310, 311, 312, 313, 314, 315, 1191, 1224, 1156,
	316, 1285, 1286, 677, 0, 317, 318, 1231, 0, 1212,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1266, 341,
	342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344,
	345, 346, 347, 348, 1248, 349, 351, 1242, 1241, 1161,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1233, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1167, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1256,
	1257, 382, 1180, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1240, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1267, 391, 392, 393, 1253, 1254,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1263, 0, 1190, 404, 0, 405, 406, 407, 408,
	409, 410, 1226, 1227, 1230, 497, 1269, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1268, 498, 421, 1235, 1236, 0, 1196,
	0, 422, 423, 1270, 1228, 1271, 424, 425, 426, 1272,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1264, 1273, 438, 439,
	1274, 0, 440, 441, 442, 443, 444, 445, 448, 1219,
	1218, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1275, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1276, 491,
	479, 1158, 287, 1277, 493, 494, 495, 1181, 1229, 496,
	1243, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 1278, 509,
	1279, 1258, 510, 511, 1168, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 1259, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 1239, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 1280, 567, 568,
	569, 570, 571, 1169, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 1222, 595, 596, 578,
	579, 597, 598, 1281, 599, 600, 601, 602, 603, 604,
	605, 1237, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 1284, 615, 616, 617, 618,
	1260, 622, 623, 0, 624, 625, 1155, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	1249, 1250, 1251, 1252, 0, 644, 0, 635, 636, 637,
	638, 1261, 639, 1262, 1179, 640, 641, 642, 643, 0,
	645, 646, 0, 1162, 647, 648, 649, 651, 652, 650,
	653, 1223, 654, 0, 0, 655, 656, 657, 716, 1246,
	1283, 3916, 659, 658, 660, 661, 719, 662, 663, 0,
	0, 0, 0, 664, 665, 720, 666, 667, 668, 1159,
	0, 0, 0, 0, 1201, 1173, 1174, 1175, 1171, 1172,
	1184, 0, 1154, 0, 0, 0, 0, 0, 0, 1152,
	1153, 288, 289, 291, 290, 292, 293, 294, 295, 1185,
	296, 297, 0, 1183, 0, 0, 0, 1225, 1189, 0,
	0, 298, 0, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 1238, 0, 308, 1245, 309, 1244,
	0, 1255, 310, 311, 312, 313, 314, 315, 1191, 1224,
	1156, 316, 1285, 1286, 677, 0, 317, 318, 1231, 0,
	1212, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220,
	344, 345, 346, 347, 348, 1248, 349, 351, 1242, 1241,
	1161, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1233, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1167, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1256, 1257, 382, 1180, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1240, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 1253,
	1254, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1263, 0, 1190, 404, 0, 405, 406, 407,
	408, 409, 410, 1226, 1227, 1230, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1268, 498, 421, 1235, 1236, 0,
	1196, 0, 422, 423, 1270, 1228, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1264, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	1219, 1218, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 1158, 287, 1277, 493, 494, 495, 1181, 1229,
	496, 1243, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 1258, 510, 511, 1168, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 1259, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 1239, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 1169, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 1222, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 1237, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 1284, 615, 616, 617,
	618, 1260, 622, 623, 0, 624, 625, 1155, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 1249, 1250, 1251, 1252, 0, 644, 0, 635, 636,
	637, 638, 1261, 639, 1262, 1179, 640, 641, 642, 643,
	0, 645, 646, 0, 1162, 647, 648, 649, 651, 652,
	650, 653, 1223, 654, 0, 0, 655, 656, 657, 716,
	1246, 1283, 0, 659, 658, 660, 661, 719, 662, 663,
	0, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1154, 0, 0, 0, 0, 0, 0,
	1152, 1153, 2053, 1201, 1173, 1174, 1175, 1171, 1172, 1184,
	1185, 0, 0, 0, 1183, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 1225, 1189, 0, 0,
	298, 0, 299, 300, 1265, 301, 302, 303, 304, 305,
	306, 307, 670, 1238, 0, 308, 1245, 309, 1244, 0,
	1255, 310, 311, 312, 313, 314, 315, 1191, 1224, 1156,
	316, 1285, 1286, 677, 0, 317, 318, 1231, 0, 1212,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1266, 341,
	342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344,
	345, 346, 347, 348, 1248, 349, 351, 1242, 1241, 1161,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1233, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1167, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1256,
	1257, 382, 1180, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1240, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 2869, 1267, 391, 392, 393, 1253, 1254,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1263, 0, 1190, 404, 0, 405, 406, 407, 408,
	409, 410, 1226, 1227, 1230, 497, 1269, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1268, 498, 421, 1235, 1236, 0, 1196,
	0, 422, 423, 1270, 1228, 1271, 424, 425, 426, 1272,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1264, 1273, 438, 439,
	1274, 0, 440, 441, 442, 443, 444, 445, 448, 1219,
	1218, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1275, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1276, 491,
	479, 1158, 287, 1277, 493, 494, 495, 1181, 1229, 496,
	1243, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 1278, 509,
	1279, 1258, 510, 511, 1168, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 1259, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 1239, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 1280, 567, 568,
	569, 570, 571, 1169, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 1222, 595, 596, 578,
	579, 597, 598, 1281, 599, 600, 601, 602, 603, 604,
	605, 1237, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 1284, 615, 616, 617, 618,
	1260, 622, 623, 0, 624, 625, 1155, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	1249, 1250, 1251, 1252, 0, 644, 0, 635, 636, 637,
	638, 1261, 639, 1262, 1179, 640, 641, 642, 643, 0,
	645, 646, 0, 1162, 647, 648, 649, 651, 652, 650,
	653, 1223, 654, 0, 0, 655, 656, 657, 716, 1246,
	1283, 0, 659, 658, 660, 661, 719, 662, 663, 0,
	0, 0, 0, 664, 665, 720, 666, 667, 668, 1159,
	0, 0, 0, 0, 1201, 1173, 1174, 1175, 1171, 1172,
	1184, 0, 1154, 0, 0, 0, 0, 0, 0, 1152,
	1153, 288, 289, 291, 290, 292, 293, 294, 295, 1185,
	296, 297, 0, 1183, 0, 0, 0, 1225, 1189, 0,
	0, 298, 0, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 1238, 0, 308, 1245, 309, 1244,
	0, 1255, 310, 311, 312, 313, 314, 315, 1191, 1224,
	1156, 316, 1285, 1286, 677, 0, 317, 318, 1231, 0,
	1212, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220,
	344, 345, 346, 347, 348, 1248, 349, 351, 1242, 1241,
	1161, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1233, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1167, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1256, 1257, 382, 1180, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1240, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 1253,
	1254, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1263, 0, 1190, 404, 0, 405, 406, 407,
	408, 409, 410, 1226, 1227, 1230, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1268, 498, 421, 1235, 1236, 0,
	1196, 0, 422, 423, 1270, 1228, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1264, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	1219, 1218, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 1158, 287, 1277, 493, 494, 495, 1181, 1229,
	496, 1243, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 1258, 510, 511, 1168, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 1259, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 1239, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 1169, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 1222, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 1237, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 1284, 615, 616, 617,
	618, 1260, 622, 623, 0, 624, 625, 1155, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 1249, 1250, 1251, 1252, 0, 644, 0, 635, 636,
	637, 638, 1261, 639, 1262, 1179, 640, 641, 642, 643,
	0, 645, 646, 0, 1162, 647, 648, 649, 651, 652,
	650, 653, 1223, 654, 0, 0, 655, 656, 657, 716,
	1246, 1283, 0, 659, 658, 660, 661, 719, 662, 663,
	0, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1154, 0, 0, 0, 0, 0, 0,
	1152, 1153, 0, 0, 0, 0, 0, 0, 0, 0,
	1185, 1982, 0, 2874, 1183, 1201, 1173, 1174, 1175, 1171,
	1172, 1184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 1225, 1189,
	0, 0, 298, 0, 299, 300, 1265, 301, 302, 303,
	304, 305, 306, 307, 670, 1238, 0, 308, 1245, 309,
	1244, 0, 1255, 310, 311, 312, 313, 314, 315, 1191,
	1224, 1156, 316, 1285, 1286, 677, 0, 317, 318, 1231,
	0, 1212, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216,
	1220, 344, 345, 346, 347, 348, 1248, 349, 351, 1242,
	1241, 1161, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1233, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1167,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1256, 1257, 382, 1180, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1240, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1267, 391, 392, 393,
	1253, 1254, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1263, 0, 1190, 404, 0, 405, 406,
	407, 408, 409, 410, 1226, 1227, 1230, 497, 1269, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1268, 498, 421, 1235, 1236,
	0, 1196, 0, 422, 423, 1270, 1228, 1271, 424, 425,
	426, 1272, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1264, 1273,
	438, 439, 1274, 0, 440, 441, 442, 443, 444, 445,
	448, 1219, 1218, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1275, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1276, 491, 479, 1158, 287, 1277, 493, 494, 495, 1181,
	1229, 496, 1243, 499, 500, 0, 0, 501, 0, 502,
	0, 0, 504, 505, 506, 0, 0, 507, 508, 699,
	1278, 509, 1279, 1258, 510, 511, 1168, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 701,
	523, 524, 525, 702, 526, 527, 528, 1259, 529, 704,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 540, 541, 1239, 542, 543, 545, 544, 546,
	0, 547, 0, 548, 549, 550, 0, 0, 0, 0,
	0, 551, 552, 554, 0, 555, 556, 557, 558, 553,
	559, 560, 561, 562, 563, 0, 564, 565, 566, 1280,
	567, 568, 569, 570, 571, 1169, 572, 0, 573, 574,
	581, 582, 583, 575, 576, 577, 584, 585, 586, 587,
	588, 0, 590, 591, 589, 592, 593, 594, 1222, 595,
	596, 578, 579, 597, 598, 1281, 599, 600, 601, 602,
	603, 604, 605, 1237, 0, 606, 0, 607, 608, 609,
	610, 611, 613, 580, 614, 619, 620, 1284, 615, 616,
	617, 618, 1260, 622, 623, 0, 624, 625, 1155, 621,
	612, 0, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 634, 1249, 1250, 1251, 1252, 0, 644, 0, 635,
	636, 637, 638, 1261, 639, 1262, 1179, 640, 641, 642,
	643, 0, 645, 646, 0, 1162, 647, 648, 649, 651,
	652, 650, 653, 1223, 654, 0, 0, 655, 656, 657,
	716, 1246, 1283, 0, 659, 658, 660, 661, 719, 662,
	663, 0, 0, 0, 0, 664, 665, 720, 666, 667,
	668, 1159, 0, 0, 2872, 0, 1201, 1173, 1174, 1175,
	1171, 1172, 1184, 0, 1154, 0, 0, 0, 0, 0,
	0, 1152, 1153, 288, 289, 291, 290, 292, 293, 294,
	295, 1185, 296, 297, 0, 1183, 0, 0, 0, 1225,
	1189, 0, 0, 298, 0, 299, 300, 1265, 301, 302,
	303, 304, 305, 306, 307, 670, 1238, 0, 308, 1245,
	309, 1244, 0, 1255, 310, 311, 312, 313, 314, 315,
	1191, 1224, 1156, 316, 1285, 1286, 677, 0, 317, 318,
	1231, 0, 1212, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217,
	1216, 1220, 344, 345, 346, 347, 348, 1248, 349, 351,
	1242, 1241, 1161, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 1233, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	1167, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1256, 1257, 382, 1180, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 1240, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1267, 391, 392,
	393, 1253, 1254, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1263, 0, 1190, 404, 0, 405,
	406, 407, 408, 409, 410, 1226, 1227, 1230, 497, 1269,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1268, 498, 421, 1235,
	1236, 0, 1196, 0, 422, 423, 1270, 1228, 1271, 424,
	425, 426, 1272, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1264,
	1273, 438, 439, 1274, 0, 440, 441, 442, 443, 444,
	445, 448, 1219, 1218, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1275, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1276, 491, 479, 1158, 287, 1277, 493, 494, 495,
	1181, 1229, 496, 1243, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 1278, 509, 1279, 1258, 510, 511, 1168, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 1259, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 1239, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	1280, 567, 568, 569, 570, 571, 1169, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 1222,
	595, 596, 578, 579, 597, 598, 1281, 599, 600, 601,
	602, 603, 604, 605, 1237, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 1284, 615,
	616, 617, 618, 1260, 622, 623, 0, 624, 625, 1155,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 1249, 1250, 1251, 1252, 0, 644, 0,
	635, 636, 637, 638, 1261, 639, 1262, 1179, 640, 641,
	642, 643, 0, 645, 646, 0, 1162, 647, 648, 649,
	651, 652, 650, 653, 1223, 654, 0, 0, 655, 656,
	657, 716, 1246, 1283, 0, 659, 658, 660, 661, 719,
	662, 663, 0, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 1159, 0, 0, 2860, 0, 1201, 1173, 1174,
	1175, 1171, 1172, 1184, 0, 1154, 0, 0, 0, 0,
	0, 0, 1152, 1153, 288, 289, 291, 290, 292, 293,
	294, 295, 1185, 296, 297, 0, 1183, 0, 0, 0,
	1225, 1189, 0, 0, 298, 0, 299, 300, 1265, 301,
	302, 303, 304, 305, 306, 307, 670, 1238, 0, 308,
	1245, 309, 1244, 0, 1255, 310, 311, 312, 313, 314,
	315, 1191, 1224, 1156, 316, 1285, 1286, 677, 0, 317,
	318, 1231, 0, 1212, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221,
	1217, 1216, 1220, 344, 345, 346, 347, 348, 1248, 349,
	351, 1242, 1241, 1161, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1233, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1167, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1256, 1257, 382, 1180, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1240, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1267, 391,
	392, 393, 1253, 1254, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1263, 0, 1190, 404, 0,
	405, 406, 407, 408, 409, 410, 1226, 1227, 1230, 497,
	1269, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1268, 498, 421,
	1235, 1236, 0, 1196, 0, 422, 423, 1270, 1228, 1271,
	424, 425, 426, 1272, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1264, 1273, 438, 439, 1274, 0, 440, 441, 442, 443,
	444, 445, 448, 1219, 1218, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1275, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1276, 491, 479, 1158, 287, 1277, 493, 494,
	495, 1181, 1229, 496, 1243, 499, 500, 0, 0, 501,
	0, 502, 0, 0, 504, 505, 506, 0, 0, 507,
	508, 699, 1278, 509, 1279, 1258, 510, 511, 1168, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 521,
	522, 701, 523, 524, 525, 702, 526, 527, 528, 1259,
	529, 704, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 540, 541, 1239, 542, 543, 545,
	544, 546, 0, 547, 0, 548, 549, 550, 0, 0,
	0, 0, 0, 551, 552, 554, 0, 555, 556, 557,
	558, 553, 559, 560, 561, 562, 563, 0, 564, 565,
	566, 1280, 567, 568, 569, 570, 571, 1169, 572, 0,
	573, 574, 581, 582, 583, 575, 576, 577, 584, 585,
	586, 587, 588, 0, 590, 591, 589, 592, 593, 594,
	1222, 595, 596, 578, 579, 597, 598, 1281, 599, 600,
	601, 602, 603, 604, 605, 1237, 0, 606, 0, 607,
	608, 609, 610, 611, 613, 580, 614, 619, 620, 1284,
	615, 616, 617, 618, 1260, 622, 623, 0, 624, 625,
	1155, 621, 612, 0, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 634, 1249, 1250, 1251, 1252, 0, 644,
	0, 635, 636, 637, 638, 1261, 639, 1262, 1179, 640,
	641, 642, 643, 0, 645, 646, 0, 1162, 647, 648,
	649, 651, 652, 650, 653, 1223, 654, 0, 0, 655,
	656, 657, 716, 1246, 1283, 0, 659, 658, 660, 661,
	719, 662, 663, 0, 0, 0, 0, 664, 665, 720,
	666, 667, 668, 1159, 0, 0, 2848, 0, 1201, 1173,
	1174, 1175, 1171, 1172, 1184, 0, 1154, 0, 0, 0,
	0, 0, 0, 1152, 1153, 288, 289, 291, 290, 292,
	293, 294, 295, 1185, 296, 297, 0, 1183, 0, 0,
	0, 1225, 1189, 0, 0, 298, 0, 299, 300, 1265,
	301, 302, 303, 304, 305, 306, 307, 670, 1238, 0,
	308, 1245, 309, 1244, 0, 1255, 310, 311, 312, 313,
	314, 315, 1191, 1224, 1156, 316, 1285, 1286, 677, 0,
	317, 318, 1231, 0, 1212, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1266, 341, 342, 343, 1215, 1213, 1214,
	1221, 1217, 1216, 1220, 344, 345, 346, 347, 348, 1248,
	349, 351, 1242, 1241, 1161, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 1233,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 1167, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1256, 1257, 382, 1180, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 1240, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1267,
	391, 392, 393, 1253, 1254, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1263, 0, 1190, 404,
	0, 405, 406, 407, 408, 409, 410, 1226, 1227, 1230,
	497, 1269, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1268, 498,
	421, 1235, 1236, 0, 1196, 0, 422, 423, 1270, 1228,
	1271, 424, 425, 426, 1272, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 1264, 1273, 438, 439, 1274, 0, 440, 441, 442,
	443, 444, 445, 448, 1219, 1218, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1275, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1276, 491, 479, 1158, 287, 1277, 493,
	494, 495, 1181, 1229, 496, 1243, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 1278, 509, 1279, 1258, 510, 511, 1168,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	1259, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 1239, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 1280, 567, 568, 569, 570, 571, 1169, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 1222, 595, 596, 578, 579, 597, 598, 1281, 599,
	600, 601, 602, 603, 604, 605, 1237, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	1284, 615, 616, 617, 618, 1260, 622, 623, 0, 624,
	625, 1155, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 1249, 1250, 1251, 1252, 0,
	644, 0, 635, 636, 637, 638, 1261, 639, 1262, 1179,
	640, 641, 642, 643, 0, 645, 646, 0, 1162, 647,
	648, 649, 651, 652, 650, 653, 1223, 654, 0, 0,
	655, 656, 657, 716, 1246, 1283, 0, 659, 658, 660,
	661, 719, 662, 663, 0, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 1159, 0, 0, 2846, 0, 2837,
	2844, 1174, 1175, 1171, 1172, 1184, 0, 1154, 0, 0,
	0, 0, 0, 0, 1152, 1153, 288, 289, 291, 290,
	292, 293, 294, 295, 1185, 296, 297, 0, 1183, 0,
	0, 0, 1225, 1189, 0, 0, 298, 0, 299, 300,
	1265, 301, 302, 303, 304, 305, 306, 307, 670, 1238,
	0, 308, 1245, 309, 1244, 0, 1255, 310, 311, 312,
	313, 314, 315, 1191, 1224, 1156, 316, 1285, 1286, 677,
	0, 317, 318, 1231, 0, 1212, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1266, 341, 342, 343, 1215, 1213,
	1214, 1221, 1217, 1216, 1220, 344, 345, 346, 347, 348,
	1248, 2840, 351, 1242, 1241, 1161, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1233, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1167, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1256, 1257, 382, 1180, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1240, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1267, 391, 392, 393, 1253, 1254, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1263, 0, 1190,
	404, 0, 405, 406, 407, 408, 2841, 410, 1226, 1227,
	1230, 497, 1269, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1268,
	498, 421, 1235, 1236, 0, 1196, 0, 422, 423, 1270,
	1228, 1271, 424, 425, 426, 1272, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1264, 1273, 438, 439, 1274, 0, 440, 441,
	442, 443, 444, 445, 448, 1219, 1218, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 2842, 458,
	2839, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1275, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1276, 491, 479, 1158, 287, 1277,
	493, 494, 495, 1181, 1229, 496, 1243, 499, 500, 0,
	0, 501, 0, 502, 0, 0, 504, 505, 506, 0,
	0, 507, 508, 699, 1278, 509, 1279, 1258, 510, 511,
	1168, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 521, 522, 701, 523, 524, 525, 702, 526, 527,
	528, 1259, 529, 704, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 540, 541, 1239, 542,
	543, 545, 544, 546, 0, 547, 0, 548, 549, 550,
	0, 0, 0, 0, 0, 551, 552, 554, 0, 555,
	556, 557, 558, 553, 559, 560, 561, 562, 563, 0,
	564, 565, 566, 1280, 567, 568, 569, 570, 571, 1169,
	572, 0, 573, 574, 581, 582, 583, 575, 576, 577,
	584, 585, 586, 587, 2843, 0, 590, 591, 589, 592,
	593, 594, 1222, 595, 596, 578, 579, 597, 598, 1281,
	599, 600, 601, 602, 603, 604, 605, 1237, 0, 606,
	0, 607, 608, 609, 610, 611, 613, 580, 614, 619,
	620, 1284, 615, 616, 617, 618, 1260, 622, 623, 0,
	624, 625, 1155, 621, 612, 0, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 634, 1249, 1250, 1251, 1252,
	0, 644, 0, 635, 636, 637, 638, 1261, 639, 1262,
	1179, 640, 641, 642, 643, 0, 645, 646, 0, 1162,
	647, 648, 649, 651, 652, 650, 653, 1223, 654, 0,
	0, 655, 656, 657, 716, 1246, 1283, 0, 659, 658,
	660, 661, 719, 662, 663, 0, 0, 0, 0, 664,
	665, 720, 666, 2838, 668, 1159, 0, 0, 2834, 0,
	2837, 2844, 1174, 1175, 1171, 1172, 1184, 0, 1154, 0,
	0, 0, 0, 0, 0, 1152, 1153, 288, 289, 291,
	290, 292, 293, 294, 295, 1185, 296, 297, 0, 1183,
	0, 0, 0, 1225, 1189, 0, 0, 298, 0, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	1238, 0, 308, 1245, 309, 1244, 0, 1255, 310, 311,
	312, 313, 314, 315, 1191, 1224, 1156, 316, 1285, 1286,
	677, 0, 317, 318, 1231, 0, 1212, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1266, 341, 342, 343, 1215,
	1213, 1214, 1221, 1217, 1216, 1220, 344, 345, 346, 347,
	348, 1248, 2840, 351, 1242, 1241, 1161, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 1233, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 1167, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1256, 1257, 382, 1180,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 1240,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1267, 391, 392, 393, 1253, 1254, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1263, 0,
	1190, 404, 0, 405, 406, 407, 408, 2841, 410, 1226,
	1227, 1230, 497, 1269, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1268, 498, 421, 1235, 1236, 0, 1196, 0, 422, 423,
	1270, 1228, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 1264, 1273, 438, 439, 1274, 0, 440,
	441, 442, 443, 444, 445, 448, 1219, 1218, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 2842,
	458, 2839, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 1158, 287,
	1277, 493, 494, 495, 1181, 1229, 496, 1243, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 1278, 509, 1279, 1258, 510,
	511, 1168, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 1259, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 1239,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	1169, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 2843, 0, 590, 591, 589,
	592, 593, 594, 1222, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 1237, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 1284, 615, 616, 617, 618, 1260, 622, 623,
	0, 624, 625, 1155, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 1249, 1250, 1251,
	1252, 0, 644, 0, 635, 636, 637, 638, 1261, 639,
	1262, 1179, 640, 641, 642, 643, 0, 645, 646, 0,
	1162, 647, 648, 649, 651, 652, 650, 653, 1223, 654,
	0, 0, 655, 656, 657, 716, 1246, 1283, 0, 659,
	658, 660, 661, 719, 662, 663, 0, 0, 0, 0,
	664, 665, 720, 666, 2838, 668, 1159, 0, 0, 0,
	0, 1201, 1173, 1174, 1175, 1171, 1172, 1184, 0, 1154,
	0, 0, 0, 0, 0, 0, 1152, 1153, 288, 289,
	291, 290, 292, 293, 294, 295, 1185, 296, 297, 0,
	1183, 0, 0, 0, 1225, 1189, 0, 0, 298, 0,
	299, 300, 1265, 301, 302, 303, 304, 305, 306, 307,
	670, 1238, 0, 308, 1245, 309, 1244, 0, 1255, 310,
	311, 312, 313, 314, 315, 1191, 1224, 1156, 316, 1285,
	1286, 677, 0, 317, 318, 1231, 0, 1212, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1266, 341, 342, 343,
	1215, 1213, 1214, 1221, 1217, 1216, 1220, 344, 345, 346,
	347, 348, 1248, 349, 351, 1242, 1241, 1161, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1233, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1167, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1256, 1257, 382,
	1180, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1240, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1267, 391, 392, 393, 1253, 1254, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1263,
	0, 1190, 404, 0, 405, 406, 407, 408, 409, 410,
	1226, 1227, 1230, 497, 1269, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1268, 498, 421, 1235, 1236, 0, 1196, 0, 422,
	423, 1270, 1228, 1271, 424, 425, 426, 1272, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1264, 1273, 438, 439, 1274, 0,
	440, 441, 442, 443, 444, 445, 448, 1219, 1218, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1275, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1276, 491, 479, 1158,
	287, 1277, 493, 494, 495, 1181, 1229, 496, 1243, 499,
	500, 0, 0, 501, 0, 502, 0, 0, 504, 505,
	506, 0, 0, 507, 508, 699, 1278, 509, 1279, 1258,
	510, 511, 1168, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 521, 522, 701, 523, 524, 525, 702,
	526, 527, 528, 1259, 529, 704, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 540, 541,
	1239, 542, 543, 545, 544, 546, 0, 547, 0, 548,
	549, 550, 0, 0, 0, 0, 0, 551, 552, 554,
	0, 555, 556, 557, 558, 553, 559, 560, 561, 562,
	563, 0, 564, 565, 566, 1280, 567, 568, 569, 570,
	571, 1169, 572, 0, 573, 574, 581, 582, 583, 575,
	576, 577, 584, 585, 586, 587, 588, 0, 590, 591,
	589, 592, 593, 594, 1222, 595, 596, 578, 579, 597,
	598, 1281, 599, 600, 601, 602, 603, 604, 605, 1237,
	0, 606, 0, 607, 608, 609, 610, 611, 613, 580,
	614, 619, 620, 1284, 615, 616, 617, 618, 1260, 622,
	623, 0, 624, 625, 1155, 621, 612, 0, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 634, 1249, 1250,
	1251, 1252, 0, 644, 0, 635, 636, 637, 638, 1261,
	639, 1262, 1179, 640, 641, 642, 643, 0, 645, 646,
	0, 1162, 647, 648, 649, 651, 652, 650, 653, 1223,
	654, 0, 0, 655, 656, 657, 716, 1246, 1283, 0,
	659, 658, 660, 661, 719, 662, 663, 0, 0, 0,
	0, 664, 665, 720, 666, 667, 668, 1159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1154, 0, 0, 0, 0, 0, 0, 1152, 1153, 0,
	0, 0, 0, 0, 0, 1990, 0, 1185, 0, 0,
	0, 1183, 1201, 1173, 1174, 1175, 1171, 1172, 1184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 2589, 296, 297,
	0, 0, 0, 0, 0, 1225, 1189, 0, 0, 298,
	0, 299, 300, 1265, 301, 302, 303, 304, 305, 306,
	307, 670, 1238, 0, 308, 1245, 309, 1244, 0, 1255,
	310, 311, 312, 313, 314, 315, 1191, 1224, 1156, 316,
	1285, 1286, 677, 0, 317, 318, 1231, 0, 1212, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1266, 341, 342,
	343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344, 345,
	346, 347, 348, 1248, 349, 351, 1242, 1241, 1161, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1233, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1167, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1256, 1257,
	382, 1180, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1240, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1267, 391, 392, 393, 1253, 1254, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1263, 0, 1190, 404, 0, 405, 406, 407, 408, 409,
	410, 1226, 1227, 1230, 497, 1269, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1268, 498, 421, 1235, 1236, 0, 1196, 0,
	422, 423, 1270, 1228, 1271, 424, 425, 426, 1272, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1264, 1273, 438, 439, 1274,
	0, 440, 441, 442, 443, 444, 445, 448, 1219, 1218,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1275,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1276, 491, 479,
	1158, 287, 1277, 493, 494, 495, 1181, 1229, 496, 1243,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 1278, 509, 1279,
	1258, 510, 511, 1168, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 1259, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 1239, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 1280, 567, 568, 569,
	570, 571, 1169, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 1222, 595, 596, 578, 579,
	597, 598, 1281, 599, 600, 601, 602, 603, 604, 605,
	1237, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 1284, 615, 616, 617, 618, 1260,
	622, 623, 0, 624, 625, 1155, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 1249,
	1250, 1251, 1252, 0, 644, 0, 635, 636, 637, 638,
	1261, 639, 1262, 1179, 640, 641, 642, 643, 0, 645,
	646, 0, 1162, 647, 648, 649, 651, 652, 650, 653,
	1223, 654, 0, 0, 655, 656, 657, 716, 1246, 1283,
	0, 659, 658, 660, 661, 719, 662, 663, 0, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 1159, 0,
	0, 2551, 0, 1201, 1173, 1174, 1175, 1171, 1172, 1184,
	0, 1154, 0, 0, 0, 0, 0, 0, 1152, 1153,
	288, 289, 291, 290, 292, 293, 294, 295, 1185, 296,
	297, 0, 1183, 0, 0, 0, 1225, 1189, 0, 0,
	298, 0, 299, 300, 1265, 301, 302, 303, 304, 305,
	306, 307, 670, 1238, 0, 308, 1245, 309, 1244, 0,
	1255, 310, 311, 312, 313, 314, 315, 1191, 1224, 1156,
	316, 1285, 1286, 677, 0, 317, 318, 1231, 0, 1212,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1266, 341,
	342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344,
	345, 346, 347, 348, 1248, 349, 351, 1242, 1241, 1161,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1233, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1167, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1256,
	1257, 382, 1180, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1240, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1267, 391, 392, 393, 1253, 1254,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1263, 0, 1190, 404, 0, 405, 406, 407, 408,
	409, 410, 1226, 1227, 1230, 497, 1269, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1268, 498, 421, 1235, 1236, 0, 1196,
	0, 422, 423, 1270, 1228, 1271, 424, 425, 426, 1272,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1264, 1273, 438, 439,
	1274, 0, 440, 441, 442, 443, 444, 445, 448, 1219,
	1218, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1275, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1276, 491,
	479, 1158, 287, 1277, 493, 494, 495, 1181, 1229, 496,
	1243, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 1278, 509,
	1279, 1258, 510, 511, 1168, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 1259, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 1239, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 1280, 567, 568,
	569, 570, 571, 1169, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 1222, 595, 596, 578,
	579, 597, 598, 1281, 599, 600, 601, 602, 603, 604,
	605, 1237, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 1284, 615, 616, 617, 618,
	1260, 622, 623, 0, 624, 625, 1155, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	1249, 1250, 1251, 1252, 0, 644, 0, 635, 636, 637,
	638, 1261, 639, 1262, 1179, 640, 641, 642, 643, 0,
	645, 646, 0, 1162, 647, 648, 649, 651, 652, 650,
	653, 1223, 654, 0, 0, 655, 656, 657, 716, 1246,
	1283, 0, 659, 658, 660, 661, 719, 662, 663, 0,
	0, 0, 0, 664, 665, 720, 666, 667, 668, 1159,
	0, 0, 2523, 0, 1201, 1173, 1174, 1175, 1171, 1172,
	1184, 0, 1154, 0, 0, 0, 0, 0, 0, 1152,
	1153, 288, 289, 291, 290, 292, 293, 294, 295, 1185,
	296, 297, 0, 1183, 0, 0, 0, 1225, 1189, 0,
	0, 298, 0, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 1238, 0, 308, 1245, 309, 1244,
	0, 1255, 310, 311, 312, 313, 314, 315, 1191, 1224,
	1156, 316, 1285, 1286, 677, 0, 317, 318, 1231, 0,
	1212, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220,
	344, 345, 346, 347, 348, 1248, 349, 351, 1242, 1241,
	1161, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1233, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1167, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1256, 1257, 382, 1180, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1240, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 1253,
	1254, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1263, 0, 1190, 404, 0, 405, 406, 407,
	408, 409, 410, 1226, 1227, 1230, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1268, 498, 421, 1235, 1236, 0,
	1196, 0, 422, 423, 1270, 1228, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1264, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	1219, 1218, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 1158, 287, 1277, 493, 494, 495, 1181, 1229,
	496, 1243, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 1258, 510, 511, 1168, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 1259, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 1239, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 1169, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 1222, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 1237, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 1284, 615, 616, 617,
	618, 1260, 622, 623, 0, 624, 625, 1155, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 1249, 1250, 1251, 1252, 0, 644, 0, 635, 636,
	637, 638, 1261, 639, 1262, 1179, 640, 641, 642, 643,
	0, 645, 646, 0, 1162, 647, 648, 649, 651, 652,
	650, 653, 1223, 654, 0, 0, 655, 656, 657, 716,
	1246, 1283, 0, 659, 658, 660, 661, 719, 662, 663,
	0, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	1159, 0, 0, 1826, 0, 1201, 1173, 1174, 1175, 1171,
	1172, 1184, 0, 1154, 0, 0, 0, 0, 0, 0,
	1152, 1153, 288, 289, 291, 290, 292, 293, 294, 295,
	1185, 296, 297, 0, 1183, 0, 0, 0, 1225, 1189,
	0, 0, 298, 0, 299, 300, 1265, 301, 302, 303,
	304, 305, 306, 307, 670, 1238, 0, 308, 1245, 309,
	1244, 0, 1255, 310, 311, 312, 313, 314, 315, 1191,
	1224, 1156, 316, 1285, 1286, 677, 0, 317, 318, 1231,
	0, 1212, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216,
	1220, 344, 345, 346, 347, 348, 1248, 349, 351, 1242,
	1241, 1161, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1233, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1167,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1256, 1257, 382, 1180, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1240, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1267, 391, 392, 393,
	1253, 1254, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1263, 0, 1190, 404, 0, 405, 406,
	407, 408, 409, 410, 1226, 1227, 1230, 497, 1269, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1268, 498, 421, 1235, 1236,
	0, 1196, 0, 422, 423, 1270, 1228, 1271, 424, 425,
	426, 1272, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1264, 1273,
	438, 439, 1274, 0, 440, 441, 442, 443, 444, 445,
	448, 1219, 1218, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1275, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1276, 491, 479, 1158, 287, 1277, 493, 494, 495, 1181,
	1229, 496, 1243, 499, 500, 0, 0, 501, 0, 502,
	0, 0, 504, 505, 506, 0, 0, 507, 508, 699,
	1278, 509, 1279, 1258, 510, 511, 1168, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 701,
	523, 524, 525, 702, 526, 527, 528, 1259, 529, 704,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 540, 541, 1239, 542, 543, 545, 544, 546,
	0, 547, 0, 548, 549, 550, 0, 0, 0, 0,
	0, 551, 552, 554, 0, 555, 556, 557, 558, 553,
	559, 560, 561, 562, 563, 0, 564, 565, 566, 1280,
	567, 568, 569, 570, 571, 1169, 572, 0, 573, 574,
	581, 582, 583, 575, 576, 577, 584, 585, 586, 587,
	588, 0, 590, 591, 589, 592, 593, 594, 1222, 595,
	596, 578, 579, 597, 598, 1281, 599, 600, 601, 602,
	603, 604, 605, 1237, 0, 606, 0, 607, 608, 609,
	610, 611, 613, 580, 614, 619, 620, 1284, 615, 616,
	617, 618, 1260, 622, 623, 0, 624, 625, 1155, 621,
	612, 0, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 634, 1249, 1250, 1251, 1252, 0, 644, 0, 635,
	636, 637, 638, 1261, 639, 1262, 1179, 640, 641, 642,
	643, 0, 645, 646, 0, 1162, 647, 648, 649, 651,
	652, 650, 653, 1223, 654, 0, 0, 655, 656, 657,
	716, 1246, 1283, 0, 659, 658, 660, 661, 719, 662,
	663, 0, 0, 0, 0, 664, 665, 720, 666, 667,
	668, 1159, 0, 0, 1755, 0, 1201, 1173, 1174, 1175,
	1171, 1172, 1184, 0, 1154, 0, 0, 0, 0, 0,
	0, 1152, 1153, 288, 289, 291, 290, 292, 293, 294,
	295, 1185, 296, 297, 0, 1183, 0, 0, 0, 1225,
	1189, 0, 0, 298, 0, 299, 300, 1265, 301, 302,
	303, 304, 305, 306, 307, 670, 1238, 0, 308, 1245,
	309, 1244, 0, 1255, 310, 311, 312, 313, 314, 315,
	1191, 1224, 1156, 316, 1285, 1286, 677, 0, 317, 318,
	1231, 0, 1212, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217,
	1216, 1220, 344, 345, 346, 347, 348, 1248, 349, 351,
	1242, 1241, 1161, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 1233, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	1167, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1256, 1257, 382, 1180, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 1240, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1267, 391, 392,
	393, 1253, 1254, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1263, 0, 1190, 404, 0, 405,
	406, 407, 408, 409, 410, 1226, 1227, 1230, 497, 1269,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1268, 498, 421, 1235,
	1236, 0, 1196, 0, 422, 423, 1270, 1228, 1271, 424,
	425, 426, 1272, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1264,
	1273, 438, 439, 1274, 0, 440, 441, 442, 443, 444,
	445, 448, 1219, 1218, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1275, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1276, 491, 479, 1158, 287, 1277, 493, 494, 495,
	1181, 1229, 496, 1243, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 1278, 509, 1279, 1258, 510, 511, 1168, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 1259, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 1239, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	1280, 567, 568, 569, 570, 571, 1169, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 1222,
	595, 596, 578, 579, 597, 598, 1281, 599, 600, 601,
	602, 603, 604, 605, 1237, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 1284, 615,
	616, 617, 618, 1260, 622, 623, 0, 624, 625, 1155,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 1249, 1250, 1251, 1252, 0, 644, 0,
	635, 636, 637, 638, 1261, 639, 1262, 1179, 640, 641,
	642, 643, 0, 645, 646, 0, 1162, 647, 648, 649,
	651, 652, 650, 653, 1223, 654, 0, 0, 655, 656,
	657, 716, 1246, 1283, 0, 659, 658, 660, 661, 719,
	662, 663, 0, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 1159, 0, 0, 1750, 0, 1201, 1173, 1174,
	1175, 1171, 1172, 1184, 0, 1154, 0, 0, 0, 0,
	0, 0, 1152, 1153, 288, 289, 291, 290, 292, 293,
	294, 295, 1185, 296, 297, 0, 1183, 0, 0, 0,
	1225, 1189, 0, 0, 298, 0, 299, 300, 1265, 301,
	302, 303, 304, 305, 306, 307, 670, 1238, 0, 308,
	1245, 309, 1244, 0, 1255, 310, 311, 312, 313, 314,
	315, 1191, 1224, 1156, 316, 1285, 1286, 677, 0, 317,
	318, 1231, 0, 1212, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221,
	1217, 1216, 1220, 344, 345, 346, 347, 348, 1248, 349,
	351, 1242, 1241, 1161, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1233, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1167, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1256, 1257, 382, 1180, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1240, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1267, 391,
	392, 393, 1253, 1254, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1263, 0, 1190, 404, 0,
	405, 406, 407, 408, 409, 410, 1226, 1227, 1230, 497,
	1269, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1268, 498, 421,
	1235, 1236, 0, 1196, 0, 422, 423, 1270, 1228, 1271,
	424, 425, 426, 1272, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1264, 1273, 438, 439, 1274, 0, 440, 441, 442, 443,
	444, 445, 448, 1219, 1218, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1275, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1276, 491, 479, 1158, 287, 1277, 493, 494,
	495, 1181, 1229, 496, 1243, 499, 500, 0, 0, 501,
	0, 502, 0, 0, 504, 505, 506, 0, 0, 507,
	508, 699, 1278, 509, 1279, 1258, 510, 511, 1168, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 521,
	522, 701, 523, 524, 525, 702, 526, 527, 528, 1259,
	529, 704, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 540, 541, 1239, 542, 543, 545,
	544, 546, 0, 547, 0, 548, 549, 550, 0, 0,
	0, 0, 0, 551, 552, 554, 0, 555, 556, 557,
	558, 553, 559, 560, 561, 562, 563, 0, 564, 565,
	566, 1280, 567, 568, 569, 570, 571, 1169, 572, 0,
	573, 574, 581, 582, 583, 575, 576, 577, 584, 585,
	586, 587, 588, 0, 590, 591, 589, 592, 593, 594,
	1222, 595, 596, 578, 579, 597, 598, 1281, 599, 600,
	601, 602, 603, 604, 605, 1237, 0, 606, 0, 607,
	608, 609, 610, 611, 613, 580, 614, 619, 620, 1284,
	615, 616, 617, 618, 1260, 622, 623, 0, 624, 625,
	1155, 621, 612, 0, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 634, 1249, 1250, 1251, 1252, 0, 644,
	0, 635, 636, 637, 638, 1261, 639, 1262, 1179, 640,
	641, 642, 643, 0, 645, 646, 0, 1162, 647, 648,
	649, 651, 652, 650, 653, 1223, 654, 0, 0, 655,
	656, 657, 716, 1246, 1283, 0, 659, 658, 660, 661,
	719, 662, 663, 0, 0, 0, 0, 664, 665, 720,
	666, 667, 668, 1159, 0, 0, 1736, 0, 1201, 1173,
	1174, 1175, 1171, 1172, 1184, 0, 1154, 0, 0, 0,
	0, 0, 0, 1152, 1153, 288, 289, 291, 290, 292,
	293, 294, 295, 1185, 296, 297, 0, 1183, 0, 0,
	0, 1225, 1189, 0, 0, 298, 0, 299, 300, 1265,
	301, 302, 303, 304, 305, 306, 307, 670, 1238, 0,
	308, 1245, 309, 1244, 0, 1255, 310, 311, 312, 313,
	314, 315, 1191, 1224, 1156, 316, 1285, 1286, 677, 0,
	317, 318, 1231, 0, 1212, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1266, 341, 342, 343, 1215, 1213, 1214,
	1221, 1217, 1216, 1220, 344, 345, 346, 347, 348, 1248,
	349, 351, 1242, 1241, 1161, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 1233,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 1167, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1256, 1257, 382, 1180, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 1240, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1267,
	391, 392, 393, 1253, 1254, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1263, 0, 1190, 404,
	0, 405, 406, 407, 408, 409, 410, 1226, 1227, 1230,
	497, 1269, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1268, 498,
	421, 1235, 1236, 0, 1196, 0, 422, 423, 1270, 1228,
	1271, 424, 425, 426, 1272, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 1264, 1273, 438, 439, 1274, 0, 440, 441, 442,
	443, 444, 445, 448, 1219, 1218, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1275, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1276, 491, 479, 1158, 287, 1277, 493,
	494, 495, 1181, 1229, 496, 1243, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 1278, 509, 1279, 1258, 510, 511, 1168,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	1259, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 1239, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 1280, 567, 568, 569, 570, 571, 1169, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 1222, 595, 596, 578, 579, 597, 598, 1281, 599,
	600, 601, 602, 603, 604, 605, 1237, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	1284, 615, 616, 617, 618, 1260, 622, 623, 0, 624,
	625, 1155, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 1249, 1250, 1251, 1252, 0,
	644, 0, 635, 636, 637, 638, 1261, 639, 1262, 1179,
	640, 641, 642, 643, 0, 645, 646, 0, 1162, 647,
	648, 649, 651, 652, 650, 653, 1223, 654, 0, 0,
	655, 656, 657, 716, 1246, 1283, 0, 659, 658, 660,
	661, 719, 662, 663, 0, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 1159, 0, 0, 1731, 0, 1201,
	1173, 1174, 1175, 1171, 1172, 1184, 0, 1154, 0, 0,
	0, 0, 0, 0, 1152, 1153, 288, 289, 291, 290,
	292, 293, 294, 295, 1185, 296, 297, 0, 1183, 0,
	0, 0, 1225, 1189, 0, 0, 298, 0, 299, 300,
	1265, 301, 302, 303, 304, 305, 306, 307, 670, 1238,
	0, 308, 1245, 309, 1244, 0, 1255, 310, 311, 312,
	313, 314, 315, 1191, 1224, 1156, 316, 1285, 1286, 677,
	0, 317, 318, 1231, 0, 1212, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1266, 341, 342, 343, 1215, 1213,
	1214, 1221, 1217, 1216, 1220, 344, 345, 346, 347, 348,
	1248, 349, 351, 1242, 1241, 1161, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1233, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1167, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1256, 1257, 382, 1180, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1240, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1267, 391, 392, 393, 1253, 1254, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1263, 0, 1190,
	404, 0, 405, 406, 407, 408, 409, 410, 1226, 1227,
	1230, 497, 1269, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1268,
	498, 421, 1235, 1236, 0, 1196, 0, 422, 423, 1270,
	1228, 1271, 424, 425, 426, 1272, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1264, 1273, 438, 439, 1274, 0, 440, 441,
	442, 443, 444, 445, 448, 1219, 1218, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1275, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1276, 491, 479, 1158, 287, 1277,
	493, 494, 495, 1181, 1229, 496, 1243, 499, 500, 0,
	0, 501, 0, 502, 0, 0, 504, 505, 506, 0,
	0, 507, 508, 699, 1278, 509, 1279, 1258, 510, 511,
	1168, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 521, 522, 701, 523, 524, 525, 702, 526, 527,
	528, 1259, 529, 704, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 540, 541, 1239, 542,
	543, 545, 544, 546, 0, 547, 0, 548, 549, 550,
	0, 0, 0, 0, 0, 551, 552, 554, 0, 555,
	556, 557, 558, 553, 559, 560, 561, 562, 563, 0,
	564, 565, 566, 1280, 567, 568, 569, 570, 571, 1169,
	572, 0, 573, 574, 581, 582, 583, 575, 576, 577,
	584, 585, 586, 587, 588, 0, 590, 591, 589, 592,
	593, 594, 1222, 595, 596, 578, 579, 597, 598, 1281,
	599, 600, 601, 602, 603, 604, 605, 1237, 0, 606,
	0, 607, 608, 609, 610, 611, 613, 580, 614, 619,
	620, 1284, 615, 616, 617, 618, 1260, 622, 623, 0,
	624, 625, 1155, 621, 612, 0, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 634, 1249, 1250, 1251, 1252,
	0, 644, 0, 635, 636, 637, 638, 1261, 639, 1262,
	1179, 640, 641, 642, 643, 0, 645, 646, 0, 1162,
	647, 648, 649, 651, 652, 650, 653, 1223, 654, 0,
	0, 655, 656, 657, 716, 1246, 1283, 0, 659, 658,
	660, 661, 719, 662, 663, 0, 0, 0, 0, 664,
	665, 720, 666, 667, 668, 1159, 0, 0, 1640, 0,
	1201, 1173, 1174, 1175, 1171, 1172, 1184, 0, 1154, 0,
	0, 0, 0, 0, 0, 1152, 1153, 288, 289, 291,
	290, 292, 293, 294, 295, 1185, 296, 297, 0, 1183,
	0, 0, 0, 1225, 1189, 0, 0, 298, 0, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	1238, 0, 308, 1245, 309, 1244, 0, 1255, 310, 311,
	312, 313, 314, 315, 1191, 1224, 1156, 316, 1285, 1286,
	677, 0, 317, 318, 1231, 0, 1212, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1266, 341, 342, 343, 1215,
	1213, 1214, 1221, 1217, 1216, 1220, 344, 345, 346, 347,
	348, 1248, 349, 351, 1242, 1241, 1161, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 1233, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 1167, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1256, 1257, 382, 1180,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 1240,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1267, 391, 392, 393, 1253, 1254, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1263, 0,
	1190, 404, 0, 405, 406, 407, 408, 409, 410, 1639,
	1227, 1230, 497, 1269, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1268, 498, 421, 1235, 1236, 0, 1196, 0, 422, 423,
	1270, 1228, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 1264, 1273, 438, 439, 1274, 0, 440,
	441, 442, 443, 444, 445, 448, 1219, 1218, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 1158, 287,
	1277, 493, 494, 495, 1181, 1229, 496, 1243, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 1278, 509, 1279, 1258, 510,
	511, 1168, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 1259, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 1239,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	1169, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 1222, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 1237, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 1284, 615, 616, 617, 618, 1260, 622, 623,
	0, 624, 625, 1155, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 1249, 1250, 1251,
	1252, 0, 644, 0, 635, 636, 637, 638, 1261, 639,
	1262, 1179, 640, 641, 642, 643, 0, 645, 646, 0,
	1162, 647, 648, 649, 651, 652, 650, 653, 1223, 654,
	0, 0, 655, 656, 657, 716, 1246, 1283, 0, 659,
	658, 660, 661, 719, 662, 663, 0, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 1159, 0, 0, 1634,
	0, 1201, 1173, 1174, 1175, 1171, 1172, 1184, 0, 1154,
	0, 0, 0, 0, 0, 0, 1152, 1153, 288, 289,
	291, 290, 292, 293, 294, 295, 1185, 296, 297, 0,
	1183, 0, 0, 0, 1225, 1189, 0, 0, 298, 0,
	299, 300, 1265, 301, 302, 303, 304, 305, 306, 307,
	670, 1238, 0, 308, 1245, 309, 1244, 0, 1255, 310,
	311, 312, 313, 314, 315, 1191, 1224, 1156, 316, 1285,
	1286, 677, 0, 317, 318, 1231, 0, 1212, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1266, 341, 342, 343,
	1215, 1213, 1214, 1221, 1217, 1216, 1220, 344, 345, 346,
	347, 348, 1248, 349, 351, 1242, 1241, 1161, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1233, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1167, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1256, 1257, 382,
	1180, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1240, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1267, 391, 392, 393, 1253, 1254, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1263,
	0, 1190, 404, 0, 405, 406, 407, 408, 409, 410,
	1633, 1227, 1230, 497, 1269, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1268, 498, 421, 1235, 1236, 0, 1196, 0, 422,
	423, 1270, 1228, 1271, 424, 425, 426, 1272, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1264, 1273, 438, 439, 1274, 0,
	440, 441, 442, 443, 444, 445, 448, 1219, 1218, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1275, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1276, 491, 479, 1158,
	287, 1277, 493, 494, 495, 1181, 1229, 496, 1243, 499,
	500, 0, 0, 501, 0, 502, 0, 0, 504, 505,
	506, 0, 0, 507, 508, 699, 1278, 509, 1279, 1258,
	510, 511, 1168, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 521, 522, 701, 523, 524, 525, 702,
	526, 527, 528, 1259, 529, 704, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 540, 541,
	1239, 542, 543, 545, 544, 546, 0, 547, 0, 548,
	549, 550, 0, 0, 0, 0, 0, 551, 552, 554,
	0, 555, 556, 557, 558, 553, 559, 560, 561, 562,
	563, 0, 564, 565, 566, 1280, 567, 568, 569, 570,
	571, 1169, 572, 0, 573, 574, 581, 582, 583, 575,
	576, 577, 584, 585, 586, 587, 588, 0, 590, 591,
	589, 592, 593, 594, 1222, 595, 596, 578, 579, 597,
	598, 1281, 599, 600, 601, 602, 603, 604, 605, 1237,
	0, 606, 0, 607, 608, 609, 610, 611, 613, 580,
	614, 619, 620, 1284, 615, 616, 617, 618, 1260, 622,
	623, 0, 624, 625, 1155, 621, 612, 0, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 634, 1249, 1250,
	1251, 1252, 0, 644, 0, 635, 636, 637, 638, 1261,
	639, 1262, 1179, 640, 641, 642, 643, 0, 645, 646,
	0, 1162, 647, 648, 649, 651, 652, 650, 653, 1223,
	654, 0, 0, 655, 656, 657, 716, 1246, 1283, 0,
	659, 658, 660, 661, 719, 662, 663, 0, 0, 0,
	0, 664, 665, 720, 666, 667, 668, 1159, 0, 0,
	1627, 0, 1201, 1173, 1174, 1175, 1171, 1172, 1184, 0,
	1154, 0, 0, 0, 0, 0, 0, 1152, 1153, 288,
	289, 291, 290, 292, 293, 294, 295, 1185, 296, 297,
	0, 1183, 0, 0, 0, 1225, 1189, 0, 0, 298,
	0, 299, 300, 1265, 301, 302, 303, 304, 305, 306,
	307, 670, 1238, 0, 308, 1245, 309, 1244, 0, 1255,
	310, 311, 312, 313, 314, 315, 1191, 1224, 1156, 316,
	1285, 1286, 677, 0, 317, 318, 1231, 0, 1212, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1266, 341, 342,
	343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344, 345,
	346, 347, 348, 1248, 349, 351, 1242, 1241, 1161, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1233, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1167, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1256, 1257,
	382, 1180, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1240, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1267, 391, 392, 393, 1253, 1254, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1263, 0, 1190, 404, 0, 405, 406, 407, 408, 409,
	410, 1226, 1227, 1230, 497, 1269, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1268, 498, 421, 1235, 1236, 0, 1196, 0,
	422, 423, 1270, 1228, 1271, 424, 425, 426, 1272, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1264, 1273, 438, 439, 1274,
	0, 440, 441, 442, 443, 444, 445, 448, 1219, 1218,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1275,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1276, 491, 479,
	1158, 287, 1277, 493, 494, 495, 1181, 1229, 496, 1243,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 1278, 509, 1279,
	1258, 510, 511, 1168, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 1259, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 1239, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 1280, 567, 568, 569,
	570, 571, 1169, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 1222, 595, 596, 578, 579,
	597, 598, 1281, 599, 600, 601, 602, 603, 604, 605,
	1237, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 1284, 615, 616, 617, 618, 1260,
	622, 623, 0, 624, 625, 1155, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 1249,
	1250, 1251, 1252, 0, 644, 0, 635, 636, 637, 638,
	1261, 639, 1262, 1179, 640, 641, 642, 643, 0, 645,
	646, 0, 1162, 647, 648, 649, 651, 652, 650, 653,
	1223, 654, 0, 0, 655, 656, 657, 716, 1246, 1283,
	0, 659, 658, 660, 661, 719, 662, 663, 0, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 1159, 0,
	0, 1595, 0, 1201, 1173, 1174, 1175, 1171, 1172, 1184,
	0, 1154, 0, 0, 0, 0, 0, 0, 1152, 1153,
	288, 289, 291, 290, 292, 293, 294, 295, 1185, 296,
	297, 0, 1183, 0, 0, 0, 1225, 1189, 0, 0,
	298, 0, 299, 300, 1265, 301, 302, 303, 304, 305,
	306, 307, 670, 1238, 0, 308, 1245, 309, 1244, 0,
	1255, 310, 311, 312, 313, 314, 315, 1191, 1224, 1156,
	316, 1285, 1286, 677, 0, 317, 318, 1231, 0, 1212,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1266, 341,
	342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344,
	345, 346, 347, 348, 1248, 349, 351, 1242, 1241, 1161,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1233, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1167, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1256,
	1257, 382, 1180, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1240, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1267, 391, 392, 393, 1253, 1254,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1263, 0, 1190, 404, 0, 405, 406, 407, 408,
	409, 410, 1226, 1227, 1230, 497, 1269, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1268, 498, 421, 1235, 1236, 0, 1196,
	0, 422, 423, 1270, 1228, 1271, 424, 425, 426, 1272,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1264, 1273, 438, 439,
	1274, 0, 440, 441, 442, 443, 444, 445, 448, 1219,
	1218, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1275, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1276, 491,
	479, 1158, 287, 1277, 493, 494, 495, 1181, 1229, 496,
	1243, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 1278, 509,
	1279, 1258, 510, 511, 1168, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 1259, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 1239, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 1280, 567, 568,
	569, 570, 571, 1169, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 1222, 595, 596, 578,
	579, 597, 598, 1281, 599, 600, 601, 602, 603, 604,
	605, 1237, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 1284, 615, 616, 617, 618,
	1260, 622, 623, 0, 624, 625, 1155, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	1249, 1250, 1251, 1252, 0, 644, 0, 635, 636, 637,
	638, 1261, 639, 1262, 1179, 640, 641, 642, 643, 0,
	645, 646, 0, 1162, 647, 648, 649, 651, 652, 650,
	653, 1223, 654, 0, 0, 655, 656, 657, 716, 1246,
	1283, 0, 659, 658, 660, 661, 719, 662, 663, 0,
	0, 0, 0, 664, 665, 720, 666, 667, 668, 1159,
	0, 0, 1577, 0, 1201, 1173, 1174, 1175, 1171, 1172,
	1184, 0, 1154, 0, 0, 0, 0, 0, 0, 1152,
	1153, 288, 289, 291, 290, 292, 293, 294, 295, 1185,
	296, 297, 0, 1183, 0, 0, 0, 1225, 1189, 0,
	0, 298, 0, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 1238, 0, 308, 1245, 309, 1244,
	0, 1255, 310, 311, 312, 313, 314, 315, 1191, 1224,
	1156, 316, 1285, 1286, 677, 0, 317, 318, 1231, 0,
	1212, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220,
	344, 345, 346, 347, 348, 1248, 349, 351, 1242, 1241,
	1161, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1233, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1167, 371,
	372, 373, 375, 377, 374, 1581, 378, 379, 380, 381,
	1256, 1257, 382, 1180, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1240, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 1253,
	1254, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1263, 0, 1190, 404, 0, 405, 406, 407,
	408, 409, 410, 1226, 1227, 1230, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1268, 498, 421, 1235, 1236, 0,
	1196, 0, 422, 423, 1270, 1228, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1264, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	1219, 1218, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 1158, 287, 1277, 493, 494, 495, 1181, 1229,
	496, 1243, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 1258, 510, 511, 1168, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 1259, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 1239, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 1582, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 1169, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 1222, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 1237, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 1284, 615, 616, 617,
	618, 1260, 622, 623, 0, 624, 625, 1155, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 1580, 633, 0,
	634, 1249, 1250, 1251, 1252, 0, 644, 0, 635, 636,
	637, 638, 1261, 639, 1262, 1179, 640, 641, 642, 643,
	0, 645, 646, 0, 1162, 647, 648, 649, 651, 652,
	650, 653, 1223, 654, 0, 0, 655, 656, 657, 716,
	1246, 1283, 0, 659, 658, 660, 661, 719, 662, 663,
	0, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	1159, 0, 0, 1409, 0, 1201, 1173, 1174, 1175, 1171,
	1172, 1184, 0, 1154, 0, 0, 0, 0, 0, 0,
	1152, 1153, 288, 289, 291, 290, 292, 293, 294, 295,
	1185, 296, 297, 0, 1183, 0, 0, 0, 1225, 1189,
	0, 0, 298, 0, 299, 300, 1265, 301, 302, 303,
	304, 305, 306, 307, 670, 1238, 0, 308, 1245, 309,
	1244, 0, 1255, 310, 311, 312, 313, 314, 315, 1191,
	1224, 1156, 316, 1285, 1286, 677, 0, 317, 318, 1231,
	0, 1212, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216,
	1220, 344, 345, 346, 347, 348, 1248, 349, 351, 1242,
	1241, 1161, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1233, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1167,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1256, 1257, 382, 1180, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1240, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1267, 391, 392, 393,
	1253, 1254, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1263, 0, 1190, 404, 0, 405, 406,
	407, 408, 409, 410, 1226, 1227, 1230, 497, 1269, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1268, 498, 421, 1235, 1236,
	0, 1196, 0, 422, 423, 1270, 1228, 1271, 424, 425,
	426, 1272, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1264, 1273,
	438, 439, 1274, 0, 440, 441, 442, 443, 444, 445,
	448, 1219, 1218, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1275, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1276, 491, 479, 1158, 287, 1277, 493, 494, 495, 1181,
	1229, 496, 1243, 499, 500, 0, 0, 501, 0, 502,
	0, 0, 504, 505, 506, 0, 0, 507, 508, 699,
	1278, 509, 1279, 1258, 510, 511, 1168, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 701,
	523, 524, 525, 702, 526, 527, 528, 1259, 529, 704,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 540, 541, 1239, 542, 543, 545, 544, 546,
	0, 547, 0, 548, 549, 550, 0, 0, 0, 0,
	0, 551, 552, 554, 0, 555, 556, 557, 558, 553,
	559, 560, 561, 562, 563, 0, 564, 565, 566, 1280,
	567, 568, 569, 570, 571, 1169, 572, 0, 573, 574,
	581, 582, 583, 575, 576, 577, 584, 585, 586, 587,
	588, 0, 590, 591, 589, 592, 593, 594, 1222, 595,
	596, 578, 579, 597, 598, 1281, 599, 600, 601, 602,
	603, 604, 605, 1237, 0, 606, 0, 607, 608, 609,
	610, 611, 613, 580, 614, 619, 620, 1284, 615, 616,
	617, 618, 1260, 622, 623, 0, 624, 625, 1155, 621,
	612, 0, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 634, 1249, 1250, 1251, 1252, 0, 644, 0, 635,
	636, 637, 638, 1261, 639, 1262, 1179, 640, 641, 642,
	643, 0, 645, 646, 0, 1162, 647, 648, 649, 651,
	652, 650, 653, 1223, 654, 0, 0, 655, 656, 657,
	716, 1246, 1283, 0, 659, 658, 660, 661, 719, 662,
	663, 0, 0, 0, 0, 664, 665, 720, 666, 667,
	668, 1159, 0, 0, 0, 0, 1201, 1173, 1174, 1175,
	1171, 1172, 1184, 0, 1154, 0, 0, 0, 0, 0,
	0, 1152, 1153, 288, 289, 291, 290, 292, 293, 294,
	295, 1185, 296, 297, 0, 1183, 0, 0, 0, 1225,
	1189, 0, 0, 298, 0, 299, 300, 1265, 301, 302,
	303, 304, 305, 306, 307, 670, 1238, 0, 308, 1245,
	309, 1244, 0, 1255, 310, 311, 312, 313, 314, 315,
	1191, 1224, 1156, 316, 1285, 1286, 677, 0, 317, 318,
	1231, 0, 1212, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217,
	1216, 1220, 344, 345, 346, 347, 348, 1248, 349, 351,
	1242, 1241, 1161, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 1233, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	1167, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1256, 1257, 382, 1180, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 1240, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1267, 391, 392,
	393, 1253, 1254, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1263, 0, 1190, 404, 0, 405,
	406, 407, 408, 409, 410, 1226, 1227, 1230, 497, 1269,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1268, 498, 421, 1235,
	1236, 0, 1196, 0, 422, 423, 1270, 1228, 1271, 424,
	425, 426, 1272, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1264,
	1273, 438, 439, 1274, 0, 440, 441, 442, 443, 444,
	445, 448, 1219, 1218, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1275, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1276, 491, 479, 1158, 287, 1277, 493, 494, 495,
	1181, 1229, 496, 1243, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 1278, 509, 1279, 1258, 510, 511, 1168, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 1259, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 1239, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	1280, 567, 568, 569, 570, 571, 1169, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 1222,
	595, 596, 578, 579, 597, 598, 1281, 599, 600, 601,
	602, 603, 604, 605, 1237, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 1284, 615,
	616, 617, 618, 1260, 622, 623, 0, 624, 625, 1155,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 1249, 1250, 1251, 1252, 0, 644, 0,
	635, 636, 637, 638, 1261, 639, 1262, 1179, 640, 641,
	642, 643, 0, 645, 646, 0, 1162, 647, 648, 649,
	651, 652, 650, 653, 1223, 654, 0, 0, 655, 656,
	657, 716, 1246, 1283, 0, 659, 658, 660, 661, 719,
	662, 663, 0, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 1159, 0, 0, 0, 0, 1201, 1173, 1174,
	1175, 1171, 1172, 1184, 0, 1154, 0, 0, 0, 0,
	0, 0, 1152, 1153, 288, 289, 291, 290, 292, 293,
	294, 295, 1185, 296, 297, 0, 1183, 0, 0, 0,
	1225, 1189, 0, 0, 298, 0, 299, 300, 1265, 301,
	302, 303, 304, 305, 306, 307, 670, 1238, 0, 308,
	1245, 309, 1244, 0, 1255, 310, 311, 312, 313, 314,
	315, 1191, 1224, 1156, 316, 1285, 1286, 677, 0, 317,
	318, 1231, 0, 1212, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1266, 341, 342, 4990, 1215, 1213, 1214, 1221,
	1217, 1216, 1220, 344, 345, 346, 347, 348, 1248, 349,
	351, 1242, 1241, 1161, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1233, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1167, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1256, 1257, 382, 1180, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1240, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1267, 391,
	392, 393, 1253, 1254, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1263, 0, 1190, 404, 0,
	405, 406, 407, 408, 409, 410, 1226, 1227, 1230, 497,
	1269, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1268, 498, 421,
	1235, 1236, 0, 1196, 0, 422, 423, 1270, 1228, 1271,
	424, 425, 426, 1272, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1264, 1273, 438, 439, 1274, 0, 440, 441, 442, 443,
	444, 445, 448, 1219, 1218, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1275, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1276, 491, 479, 1158, 287, 1277, 493, 494,
	495, 1181, 1229, 496, 1243, 499, 500, 0, 0, 501,
	0, 502, 0, 0, 504, 505, 506, 0, 0, 507,
	508, 699, 1278, 509, 1279, 1258, 510, 511, 1168, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 521,
	522, 701, 523, 524, 525, 702, 526, 527, 528, 1259,
	529, 704, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 540, 541, 1239, 542, 543, 545,
	544, 546, 0, 547, 0, 548, 549, 550, 0, 0,
	0, 0, 0, 551, 552, 554, 0, 555, 556, 557,
	558, 553, 559, 560, 561, 562, 563, 0, 564, 565,
	566, 1280, 567, 568, 569, 570, 571, 1169, 572, 0,
	573, 574, 581, 582, 583, 575, 576, 577, 584, 585,
	586, 587, 588, 0, 590, 591, 589, 592, 593, 594,
	1222, 595, 596, 578, 579, 597, 598, 1281, 599, 600,
	601, 602, 603, 604, 605, 1237, 0, 606, 0, 607,
	608, 609, 610, 611, 613, 580, 614, 619, 620, 1284,
	615, 616, 617, 618, 1260, 622, 623, 0, 624, 625,
	1155, 621, 612, 0, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 634, 1249, 1250, 1251, 1252, 0, 644,
	0, 635, 636, 637, 638, 1261, 639, 1262, 1179, 640,
	641, 642, 643, 0, 4989, 646, 0, 1162, 647, 648,
	649, 651, 652, 650, 653, 1223, 654, 0, 0, 655,
	656, 657, 716, 1246, 1283, 0, 659, 658, 660, 661,
	719, 662, 663, 0, 0, 0, 0, 664, 665, 720,
	666, 667, 668, 1159, 0, 0, 0, 0, 1201, 1173,
	1174, 1175, 1171, 1172, 1184, 0, 1154, 0, 0, 0,
	0, 0, 0, 1152, 1153, 288, 289, 291, 290, 292,
	293, 294, 295, 1185, 296, 297, 0, 1183, 0, 0,
	0, 1225, 1189, 0, 0, 298, 0, 299, 300, 1265,
	301, 302, 303, 304, 305, 306, 307, 4988, 1238, 0,
	308, 1245, 309, 1244, 0, 1255, 310, 311, 312, 313,
	314, 315, 1191, 1224, 1156, 316, 1285, 1286, 677, 0,
	317, 318, 1231, 0, 1212, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1266, 341, 342, 4990, 1215, 1213, 1214,
	1221, 1217, 1216, 1220, 344, 345, 346, 347, 348, 1248,
	349, 351, 1242, 1241, 1161, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 1233,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 1167, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1256, 1257, 382, 1180, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 1240, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1267,
	391, 392, 393, 1253, 1254, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1263, 0, 1190, 404,
	0, 405, 406, 407, 408, 409, 410, 1226, 1227, 1230,
	497, 1269, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1268, 498,
	421, 1235, 1236, 0, 1196, 0, 422, 423, 1270, 1228,
	1271, 424, 425, 426, 1272, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 1264, 1273, 438, 439, 1274, 0, 440, 441, 442,
	443, 444, 445, 448, 1219, 1218, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1275, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1276, 491, 479, 1158, 287, 1277, 493,
	494, 495, 1181, 1229, 496, 1243, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 1278, 509, 1279, 1258, 510, 511, 1168,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	1259, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 1239, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 1280, 567, 568, 569, 570, 571, 1169, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 1222, 595, 596, 578, 579, 597, 598, 1281, 599,
	600, 601, 602, 603, 604, 605, 1237, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	1284, 615, 616, 617, 618, 1260, 622, 623, 0, 624,
	625, 1155, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 1249, 1250, 1251, 1252, 0,
	644, 0, 635, 636, 637, 638, 1261, 639, 1262, 1179,
	640, 641, 642, 643, 0, 4989, 646, 0, 1162, 647,
	648, 649, 651, 652, 650, 653, 1223, 654, 0, 0,
	655, 656, 657, 716, 1246, 1283, 0, 659, 658, 660,
	661, 719, 662, 663, 0, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 1159, 0, 0, 0, 0, 1201,
	1173, 1174, 1175, 1171, 1172, 1184, 0, 1154, 0, 0,
	0, 0, 0, 0, 1152, 1153, 288, 289, 291, 290,
	292, 293, 294, 295, 1185, 296, 297, 0, 1183, 0,
	0, 0, 1225, 1189, 0, 0, 298, 0, 299, 300,
	1265, 301, 302, 303, 304, 305, 306, 307, 670, 1238,
	0, 308, 1245, 309, 1244, 0, 1255, 310, 311, 312,
	313, 314, 315, 1191, 1224, 1156, 316, 1285, 1286, 677,
	0, 317, 318, 1231, 0, 1212, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1266, 341, 4592, 343, 1215, 1213,
	1214, 1221, 1217, 1216, 1220, 344, 345, 346, 347, 348,
	1248, 349, 351, 1242, 1241, 1161, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1233, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1167, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1256, 1257, 382, 1180, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1240, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1267, 391, 392, 393, 1253, 1254, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1263, 0, 4593,
	404, 0, 405, 406, 407, 408, 409, 410, 1226, 1227,
	1230, 497, 1269, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1268,
	498, 421, 1235, 1236, 0, 1196, 0, 422, 423, 1270,
	1228, 1271, 424, 425, 426, 1272, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1264, 1273, 438, 439, 1274, 0, 440, 441,
	442, 443, 444, 445, 448, 1219, 1218, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1275, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1276, 491, 479, 1158, 287, 1277,
	493, 494, 495, 1181, 1229, 496, 1243, 499, 500, 0,
	0, 501, 0, 502, 0, 0, 504, 505, 506, 0,
	0, 507, 508, 699, 1278, 509, 1279, 1258, 510, 511,
	1168, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 521, 522, 701, 523, 524, 525, 702, 526, 527,
	528, 1259, 529, 704, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 540, 541, 1239, 542,
	543, 545, 544, 546, 0, 547, 0, 548, 549, 550,
	0, 0, 0, 0, 0, 551, 552, 554, 0, 555,
	556, 557, 558, 553, 559, 560, 561, 562, 563, 0,
	564, 565, 566, 1280, 567, 568, 569, 4591, 571, 1169,
	572, 0, 573, 574, 581, 582, 583, 575, 576, 577,
	584, 585, 586, 587, 588, 0, 590, 591, 589, 592,
	593, 594, 1222, 595, 596, 578, 579, 597, 598, 1281,
	599, 600, 601, 602, 603, 604, 605, 1237, 0, 606,
	0, 607, 608, 609, 610, 611, 613, 580, 614, 619,
	620, 1284, 615, 616, 617, 618, 1260, 622, 623, 0,
	624, 625, 1155, 621, 612, 0, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 634, 1249, 1250, 1251, 1252,
	0, 644, 0, 635, 636, 637, 638, 1261, 639, 1262,
	1179, 640, 641, 642, 643, 0, 645, 646, 0, 1162,
	647, 648, 649, 651, 652, 650, 653, 1223, 654, 0,
	0, 655, 656, 657, 716, 1246, 1283, 0, 659, 658,
	660, 661, 719, 662, 663, 0, 0, 0, 0, 664,
	665, 720, 666, 667, 668, 1159, 0, 0, 0, 0,
	1201, 1173, 1174, 1175, 3350, 3351, 1184, 0, 1154, 0,
	0, 0, 0, 0, 0, 1152, 1153, 288, 289, 291,
	290, 292, 293, 294, 295, 1185, 296, 297, 0, 1183,
	0, 0, 0, 1225, 1189, 0, 0, 298, 0, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	1238, 0, 308, 1245, 309, 1244, 0, 1255, 310, 311,
	312, 313, 314, 315, 1191, 1224, 1156, 316, 1285, 1286,
	677, 0, 317, 318, 1231, 0, 1212, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1266, 341, 342, 343, 1215,
	1213, 1214, 1221, 1217, 1216, 1220, 344, 345, 346, 347,
	348, 1248, 349, 351, 1242, 1241, 1161, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 1233, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 1167, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1256, 1257, 382, 1180,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 1240,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1267, 391, 392, 393, 1253, 1254, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1263, 0,
	1190, 404, 0, 405, 406, 407, 408, 409, 410, 1226,
	1227, 1230, 497, 1269, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1268, 498, 421, 1235, 1236, 0, 1196, 0, 422, 423,
	1270, 1228, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 1264, 1273, 438, 439, 1274, 0, 440,
	441, 442, 443, 444, 445, 448, 1219, 1218, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 1158, 287,
	1277, 493, 494, 495, 1181, 1229, 496, 1243, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 1278, 509, 1279, 1258, 510,
	511, 1168, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 1259, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 1239,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	1169, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 1222, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 1237, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 1284, 615, 616, 617, 618, 1260, 622, 623,
	0, 624, 625, 1155, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 1249, 1250, 1251,
	1252, 0, 644, 0, 635, 636, 637, 638, 1261, 639,
	1262, 1179, 640, 641, 642, 643, 0, 645, 646, 0,
	1162, 647, 648, 649, 651, 652, 650, 653, 1223, 654,
	0, 0, 655, 656, 657, 716, 1246, 1283, 0, 659,
	658, 660, 661, 719, 662, 663, 0, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 1159, 0, 0, 0,
	0, 1201, 1173, 1174, 1175, 3348, 3349, 1184, 0, 1154,
	0, 0, 0, 0, 0, 0, 1152, 1153, 288, 289,
	291, 290, 292, 293, 294, 295, 1185, 296, 297, 0,
	1183, 0, 0, 0, 1225, 1189, 0, 0, 298, 0,
	299, 300, 1265, 301, 302, 303, 304, 305, 306, 307,
	670, 1238, 0, 308, 1245, 309, 1244, 0, 1255, 310,
	311, 312, 313, 314, 315, 1191, 1224, 1156, 316, 1285,
	1286, 677, 0, 317, 318, 1231, 0, 1212, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1266, 341, 342, 343,
	1215, 1213, 1214, 1221, 1217, 1216, 1220, 344, 345, 346,
	347, 348, 1248, 349, 351, 1242, 1241, 1161, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1233, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1167, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1256, 1257, 382,
	1180, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1240, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1267, 391, 392, 393, 1253, 1254, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1263,
	0, 1190, 404, 0, 405, 406, 407, 408, 409, 410,
	1226, 1227, 1230, 497, 1269, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1268, 498, 421, 1235, 1236, 0, 1196, 0, 422,
	423, 1270, 1228, 1271, 424, 425, 426, 1272, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1264, 1273, 438, 439, 1274, 0,
	440, 441, 442, 443, 444, 445, 448, 1219, 1218, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1275, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1276, 491, 479, 1158,
	287, 1277, 493, 494, 495, 1181, 1229, 496, 1243, 499,
	500, 0, 0, 501, 0, 502, 0, 0, 504, 505,
	506, 0, 0, 507, 508, 699, 1278, 509, 1279, 1258,
	510, 511, 1168, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 521, 522, 701, 523, 524, 525, 702,
	526, 527, 528, 1259, 529, 704, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 540, 541,
	1239, 542, 543, 545, 544, 546, 0, 547, 0, 548,
	549, 550, 0, 0, 0, 0, 0, 551, 552, 554,
	0, 555, 556, 557, 558, 553, 559, 560, 561, 562,
	563, 0, 564, 565, 566, 1280, 567, 568, 569, 570,
	571, 1169, 572, 0, 573, 574, 581, 582, 583, 575,
	576, 577, 584, 585, 586, 587, 588, 0, 590, 591,
	589, 592, 593, 594, 1222, 595, 596, 578, 579, 597,
	598, 1281, 599, 600, 601, 602, 603, 604, 605, 1237,
	0, 606, 0, 607, 608, 609, 610, 611, 613, 580,
	614, 619, 620, 1284, 615, 616, 617, 618, 1260, 622,
	623, 0, 624, 625, 1155, 621, 612, 0, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 634, 1249, 1250,
	1251, 1252, 0, 644, 0, 635, 636, 637, 638, 1261,
	639, 1262, 1179, 640, 641, 642, 643, 0, 645, 646,
	0, 1162, 647, 648, 649, 651, 652, 650, 653, 1223,
	654, 0, 0, 655, 656, 657, 716, 1246, 1283, 0,
	659, 658, 660, 661, 719, 662, 663, 0, 0, 0,
	0, 664, 665, 720, 666, 667, 668, 1159, 0, 0,
	0, 0, 1201, 1173, 1174, 1175, 1171, 1172, 1184, 0,
	1154, 0, 0, 0, 0, 0, 0, 1152, 1153, 288,
	289, 291, 290, 292, 293, 294, 295, 1185, 296, 297,
	0, 1183, 0, 0, 0, 1225, 1189, 0, 0, 298,
	0, 299, 300, 1265, 301, 302, 303, 304, 305, 306,
	307, 670, 1238, 0, 308, 1245, 309, 1244, 0, 1255,
	310, 311, 312, 313, 314, 315, 1191, 1224, 1156, 316,
	1285, 1286, 677, 0, 317, 318, 1231, 0, 1212, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1266, 341, 342,
	343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344, 345,
	346, 347, 348, 1248, 349, 351, 1242, 1241, 1161, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1233, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1167, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1256, 1257,
	382, 1180, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1240, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1267, 391, 392, 393, 1253, 1254, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1263, 0, 1190, 404, 0, 405, 406, 407, 408, 409,
	410, 1226, 1227, 1230, 497, 1269, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1268, 498, 421, 1235, 1236, 0, 1196, 0,
	422, 423, 1270, 1228, 1271, 424, 425, 426, 1272, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1264, 1273, 438, 439, 1274,
	0, 440, 441, 442, 443, 444, 445, 448, 1219, 1218,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1275,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1276, 491, 479,
	1158, 287, 1277, 493, 494, 495, 1181, 1229, 496, 1243,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 1278, 509, 1279,
	1258, 510, 511, 1168, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 1259, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 1239, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 1280, 567, 568, 569,
	570, 571, 1169, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 1222, 595, 596, 578, 579,
	597, 598, 1281, 599, 600, 601, 602, 603, 604, 605,
	1237, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 1284, 615, 616, 617, 618, 1260,
	622, 623, 0, 624, 625, 1155, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 1249,
	1250, 1251, 1252, 0, 644, 0, 635, 636, 637, 638,
	1261, 639, 1262, 1179, 640, 641, 642, 643, 0, 645,
	646, 0, 1162, 647, 648, 649, 651, 652, 650, 653,
	1223, 654, 0, 0, 655, 656, 657, 716, 1246, 1283,
	0, 659, 658, 660, 661, 719, 662, 663, 0, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 1159, 0,
	0, 0, 0, 1201, 1173, 1174, 1175, 1171, 1172, 1184,
	0, 1154, 0, 0, 0, 0, 0, 0, 2597, 2598,
	288, 289, 291, 290, 292, 293, 294, 295, 1185, 296,
	297, 0, 1183, 0, 0, 0, 1225, 1189, 0, 0,
	298, 0, 299, 300, 1265, 301, 302, 303, 304, 305,
	306, 307, 670, 1238, 0, 308, 1245, 309, 1244, 0,
	1255, 310, 311, 312, 313, 314, 315, 1191, 1224, 0,
	316, 1285, 1286, 677, 0, 317, 318, 1231, 0, 1212,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1266, 341,
	342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344,
	345, 346, 347, 348, 1248, 349, 351, 1242, 1241, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1233, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1167, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1256,
	1257, 382, 1180, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1240, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1267, 391, 392, 393, 1253, 1254,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1263, 0, 1190, 404, 0, 405, 406, 407, 408,
	409, 410, 1226, 1227, 1230, 497, 1269, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1268, 498, 421, 1235, 1236, 0, 1196,
	0, 422, 423, 1270, 1228, 1271, 424, 425, 426, 1272,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1264, 1273, 438, 439,
	1274, 0, 440, 441, 442, 443, 444, 445, 448, 1219,
	1218, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1275, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1276, 491,
	479, 0, 287, 1277, 493, 494, 495, 1181, 1229, 496,
	1243, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 1278, 509,
	1279, 1258, 510, 511, 1168, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 1259, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 1239, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 1280, 567, 568,
	569, 570, 571, 1169, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 1222, 595, 596, 578,
	579, 597, 598, 1281, 599, 600, 601, 602, 603, 604,
	605, 1237, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 1284, 615, 616, 617, 618,
	1260, 622, 623, 0, 624, 625, 0, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	1249, 1250, 1251, 1252, 0, 644, 0, 635, 636, 637,
	638, 1261, 639, 1262, 1179, 640, 641, 642, 643, 0,
	645, 646, 0, 0, 647, 648, 649, 651, 652, 650,
	653, 1223, 654, 0, 0, 655, 656, 657, 716, 1246,
	1283, 0, 659, 658, 660, 661, 719, 662, 663, 0,
	0, 0, 0, 664, 665, 720, 666, 667, 668, 0,
	0, 0, 0, 0, 1201, 1173, 1174, 1175, 1171, 1172,
	1184, 0, 2856, 0, 0, 0, 0, 0, 0, 2854,
	2855, 288, 289, 291, 290, 292, 293, 294, 295, 1185,
	296, 297, 0, 1183, 0, 0, 0, 1225, 1189, 0,
	0, 298, 0, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 1238, 0, 308, 1245, 309, 1244,
	0, 1255, 310, 311, 312, 313, 314, 315, 1191, 1224,
	0, 316, 1285, 1286, 677, 0, 317, 318, 1231, 0,
	1212, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220,
	344, 345, 346, 347, 348, 1248, 349, 351, 1242, 1241,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1233, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1167, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1256, 1257, 382, 1180, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1240, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 1253,
	1254, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1263, 0, 1190, 404, 0, 405, 406, 407,
	408, 409, 410, 1226, 1227, 1230, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1268, 498, 421, 1235, 1236, 0,
	1196, 0, 422, 423, 1270, 1228, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1264, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	1219, 1218, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 0, 287, 1277, 493, 494, 495, 1181, 1229,
	496, 1243, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 1258, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 1259, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 1239, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 3343, 3344, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 1222, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 1237, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 1284, 615, 616, 617,
	618, 1260, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 1249, 1250, 1251, 1252, 0, 644, 0, 635, 636,
	637, 638, 1261, 639, 1262, 1179, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 1223, 654, 0, 0, 655, 656, 657, 716,
	1246, 1283, 0, 659, 658, 660, 661, 719, 662, 663,
	0, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 1201, 1173, 1174, 1175, 1171,
	1172, 1184, 0, 0, 0, 0, 0, 0, 0, 0,
	2235, 2236, 288, 289, 291, 290, 292, 293, 294, 295,
	1185, 296, 297, 0, 1183, 0, 0, 0, 1225, 1189,
	0, 0, 298, 0, 299, 300, 1265, 301, 302, 303,
	304, 305, 306, 307, 0, 1238, 0, 308, 1245, 309,
	1244, 0, 1255, 310, 311, 312, 313, 314, 315, 1191,
	1224, 1156, 316, 1285, 1286, 677, 0, 317, 318, 1231,
	0, 1212, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1266, 341, 342, 4990, 1215, 1213, 1214, 1221, 1217, 1216,
	1220, 344, 345, 346, 347, 348, 1248, 349, 351, 1242,
	1241, 1161, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1233, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1167,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1256, 1257, 382, 1180, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1240, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1267, 391, 392, 393,
	1253, 1254, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1263, 0, 1190, 404, 0, 405, 406,
	407, 408, 409, 410, 1226, 1227, 1230, 497, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1268, 498, 421, 1235, 1236,
	0, 1196, 0, 422, 423, 0, 1228, 0, 424, 425,
	426, 1272, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1264, 1273,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 1219, 1218, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1275, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1276, 491, 479, 1158, 287, 0, 493, 494, 495, 1181,
	1229, 496, 1243, 499, 500, 0, 0, 501, 0, 502,
	0, 0, 504, 505, 506, 0, 0, 507, 508, 699,
	1278, 509, 1279, 1258, 510, 511, 1168, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 701,
	523, 524, 525, 702, 526, 527, 528, 1259, 529, 704,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 540, 541, 1239, 542, 543, 545, 544, 546,
	0, 547, 0, 548, 549, 550, 0, 0, 0, 0,
	0, 551, 552, 554, 0, 555, 556, 557, 558, 553,
	559, 560, 561, 562, 563, 0, 564, 565, 566, 1280,
	567, 568, 569, 570, 571, 1169, 572, 0, 573, 574,
	581, 582, 583, 575, 576, 577, 584, 585, 586, 587,
	588, 0, 590, 591, 589, 592, 593, 594, 1222, 595,
	596, 578, 579, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 1237, 0, 606, 0, 607, 608, 609,
	610, 611, 613, 580, 614, 619, 620, 1284, 615, 616,
	617, 618, 1260, 622, 623, 0, 624, 625, 1155, 621,
	612, 0, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 634, 1249, 1250, 1251, 1252, 0, 644, 0, 635,
	636, 637, 638, 1261, 639, 1262, 1179, 640, 641, 642,
	643, 0, 4989, 646, 0, 1162, 647, 648, 649, 651,
	652, 650, 653, 1223, 654, 0, 0, 655, 656, 657,
	716, 1246, 1283, 0, 659, 658, 660, 661, 719, 662,
	663, 0, 0, 0, 0, 664, 665, 720, 666, 667,
	668, 0, 0, 0, 1145, 0, 1323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1152, 1153, 288, 289, 291, 290, 292, 293, 294,
	295, 1185, 296, 297, 0, 1183, 0, 0, 0, 1225,
	0, 0, 0, 298, 0, 299, 300, 1265, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 1224, 0, 316, 675, 676, 677, 0, 317, 318,
	1231, 0, 1212, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217,
	1216, 1220, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1256, 1257, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1267, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1263, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 1226, 1227, 1230, 497, 1269,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1268, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 1270, 1228, 1271, 424,
	425, 426, 1272, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 1309, 434, 436, 435, 0, 437, 1264,
	1273, 438, 439, 1274, 0, 440, 441, 442, 443, 444,
	445, 448, 1219, 1218, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1275, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1276, 491, 479, 0, 287, 1277, 493, 494, 495,
	0, 1229, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 1315, 504, 505, 506, 0, 0, 507, 508,
	699, 1278, 509, 1279, 1258, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 1259, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	1280, 567, 568, 569, 570, 571, 706, 1317, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 244, 590, 591, 589, 592, 593, 594, 1222,
	595, 596, 578, 579, 597, 598, 1281, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 1260, 622, 623, 0, 624, 625, 0,
	621, 612, 246, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 1261, 639, 1262, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 1223, 654, 0, 0, 655, 656,
	657, 1720, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 0, 0, 1323, 238, 664, 665, 720, 666,
	667, 668, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 1225, 0, 0,
	1313, 298, 2077, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 1224,
	0, 316, 675, 676, 677, 0, 317, 318, 1231, 0,
	1212, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1256, 1257, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1263, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 1226, 1227, 1230, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1268, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 1270, 1228, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 1309, 434, 436, 435, 0, 437, 1264, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	1219, 1218, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 0, 287, 1277, 493, 494, 495, 0, 1229,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	1315, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 1258, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 1259, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 706, 1317, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	244, 590, 591, 589, 592, 593, 594, 1222, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 1260, 622, 623, 0, 624, 625, 0, 621, 612,
	246, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 1261, 639, 1262, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 1223, 654, 0, 0, 655, 656, 657, 1720,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	3507, 0, 1323, 238, 664, 665, 720, 666, 667, 668,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 1225, 0, 0, 1313, 298,
	2077, 299, 300, 1265, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 1224, 0, 316,
	675, 676, 677, 0, 317, 318, 1231, 0, 1212, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1266, 341, 342,
	343, 1215, 1213, 1214, 1221, 1217, 1216, 1220, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1256, 1257,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1267, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1263, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 1226, 1227, 1230, 497, 1269, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1268, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 1270, 1228, 1271, 424, 425, 426, 1272, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 1309,
	434, 436, 435, 0, 437, 1264, 1273, 438, 439, 1274,
	0, 440, 441, 442, 443, 444, 445, 448, 1219, 1218,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1275,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1276, 491, 479,
	0, 287, 1277, 493, 494, 495, 0, 1229, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 1315, 504,
	505, 506, 0, 0, 507, 508, 699, 1278, 509, 1279,
	1258, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 1259, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 1280, 567, 568, 569,
	570, 571, 706, 1317, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 1222, 595, 596, 578, 579,
	597, 598, 1281, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 1260,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	1261, 639, 1262, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	1223, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 1305, 0,
	1323, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 1225, 0, 0, 1313, 298, 1311, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 1224, 0, 316, 675, 676,
	677, 0, 317, 318, 1231, 0, 1212, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1266, 341, 342, 343, 1215,
	1213, 1214, 1221, 1217, 1216, 1220, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1256, 1257, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1267, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1263, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 1226,
	1227, 1230, 497, 1269, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1268, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	1270, 1228, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 1309, 434, 436,
	435, 0, 437, 1264, 1273, 438, 439, 1274, 0, 440,
	441, 442, 443, 444, 445, 448, 1219, 1218, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 0, 287,
	1277, 493, 494, 495, 0, 1229, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 1315, 504, 505, 506,
	0, 0, 507, 508, 699, 1278, 509, 1279, 1258, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 1259, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	706, 1317, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 1222, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 1260, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 1261, 639,
	1262, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 1223, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 0, 0, 1323, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 1225, 0, 0, 1313, 298, 1311, 299, 300, 1265,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 1224, 0, 316, 675, 676, 677, 0,
	317, 318, 1231, 0, 1212, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1266, 341, 342, 343, 1215, 1213, 1214,
	1221, 1217, 1216, 1220, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1256, 1257, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1267,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1263, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 1226, 1227, 1230,
	497, 1269, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1268, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 1270, 1228,
	1271, 424, 425, 426, 1272, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 1309, 434, 436, 435, 0,
	437, 1264, 1273, 438, 439, 1274, 0, 440, 441, 442,
	443, 444, 445, 448, 1219, 1218, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1275, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1276, 491, 479, 0, 287, 1277, 493,
	494, 495, 0, 1229, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 1315, 504, 505, 506, 0, 0,
	507, 508, 699, 1278, 509, 1279, 1258, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	1259, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 1280, 567, 568, 569, 570, 571, 706, 1317,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 1222, 595, 596, 578, 579, 597, 598, 1281, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 1260, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 1261, 639, 1262, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 1223, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 0, 0, 1323, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 1225,
	0, 0, 1313, 298, 1311, 299, 300, 1265, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 1224, 0, 316, 675, 676, 677, 0, 317, 318,
	1231, 0, 1212, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221, 1217,
	1216, 1220, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1256, 1257, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1267, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1263, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 1226, 1227, 1230, 497, 1269,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1268, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 1270, 1228, 1271, 424,
	425, 426, 1272, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1264,
	1273, 438, 439, 1274, 0, 440, 441, 442, 443, 444,
	445, 448, 1219, 1218, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1275, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1276, 491, 479, 0, 287, 1277, 493, 494, 495,
	0, 1229, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 1278, 509, 1279, 1258, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 1259, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	1280, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 1222,
	595, 596, 578, 579, 597, 598, 1281, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 1260, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 1261, 639, 1262, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 1223, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 0, 0, 1323, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 298, 4407, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 1224,
	0, 316, 675, 676, 677, 0, 317, 318, 1231, 0,
	1212, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 1215, 1213, 1214, 1221, 1217, 1216, 1220,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1256, 1257, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1263, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 1226, 1227, 1230, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1268, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 1270, 1228, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1264, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	1219, 1218, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 0, 287, 1277, 493, 494, 495, 0, 1229,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 1258, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 1259, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 706, 1317, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 1222, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 1260, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 1261, 639, 1262, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 1223, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	0, 0, 282, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 2701, 2702, 2703, 2720, 2721, 2722, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 2723, 0, 669, 0, 0, 0, 298,
	1974, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 1959, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 2713, 0, 327,
	328, 329, 326, 330, 0, 331, 2709, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 2714, 2715, 2716, 2717, 383, 384,
	385, 684, 0, 0, 2708, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 2718, 2719, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 2711, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 2712, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 1958, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 0, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 1145, 0, 1602, 2698, 2699,
	2700, 2724, 2710, 2704, 0, 2706, 2707, 2705, 2692, 2693,
	2694, 2695, 2696, 2697, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 298, 0, 299, 300, 1265, 301,
	302, 303, 304, 305, 306, 307, 670, 671, 0, 308,
	672, 309, 673, 0, 674, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 675, 676, 677, 0, 317,
	318, 678, 0, 1566, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1266, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 679, 680, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 681, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 682, 683, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 684, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1267, 391,
	392, 393, 685, 686, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 687, 0, 688, 404, 0,
	405, 406, 407, 408, 409, 410, 689, 690, 691, 497,
	1269, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 1268, 498, 421,
	692, 693, 0, 694, 0, 422, 423, 1270, 695, 1271,
	424, 425, 426, 1272, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	696, 1273, 438, 439, 1274, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1275, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1276, 491, 479, 0, 0, 1277, 493, 494,
	495, 0, 697, 496, 698, 499, 500, 0, 0, 501,
	0, 502, 0, 0, 504, 505, 506, 0, 0, 507,
	508, 699, 1278, 509, 1279, 700, 510, 511, 503, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 521,
	522, 701, 523, 524, 525, 702, 526, 527, 528, 703,
	529, 704, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 540, 541, 705, 542, 543, 545,
	544, 546, 0, 547, 0, 548, 549, 550, 0, 0,
	0, 0, 0, 551, 552, 554, 0, 555, 556, 557,
	558, 553, 559, 560, 561, 562, 563, 0, 564, 565,
	566, 1280, 567, 568, 569, 570, 571, 706, 572, 0,
	573, 574, 581, 582, 583, 575, 576, 577, 584, 585,
	586, 587, 588, 244, 590, 591, 589, 592, 593, 594,
	0, 595, 596, 578, 579, 597, 598, 1281, 599, 600,
	601, 602, 603, 604, 605, 707, 0, 606, 0, 607,
	608, 609, 610, 611, 613, 580, 614, 619, 620, 708,
	615, 616, 617, 618, 709, 622, 623, 0, 624, 625,
	0, 621, 612, 246, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 634, 710, 711, 712, 713, 0, 644,
	0, 635, 636, 637, 638, 714, 639, 715, 0, 640,
	641, 642, 643, 0, 645, 646, 0, 0, 647, 648,
	649, 651, 652, 650, 653, 0, 654, 0, 0, 655,
	656, 657, 1720, 717, 718, 0, 659, 658, 660, 661,
	719, 662, 663, 1717, 0, 1602, 238, 664, 665, 720,
	666, 667, 668, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 298, 199, 299, 300, 1265, 301, 302, 303,
	304, 305, 306, 307, 670, 671, 0, 308, 672, 309,
	673, 0, 674, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 675, 676, 677, 0, 317, 318, 678,
	0, 1566, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1266, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 679,
	680, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 681,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 682, 683, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 684, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1267, 391, 392, 393,
	685, 686, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 687, 0, 688, 404, 0, 405, 406,
	407, 408, 409, 410, 689, 690, 691, 497, 1269, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 1268, 498, 421, 692, 693,
	0, 694, 0, 422, 423, 1270, 695, 1271, 424, 425,
	426, 1272, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 696, 1273,
	438, 439, 1274, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1275, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1276, 491, 479, 0, 0, 1277, 493, 494, 495, 0,
	697, 496, 698, 499, 500, 0, 0, 501, 0, 502,
	0, 0, 504, 505, 506, 0, 0, 507, 508, 699,
	1278, 509, 1279, 700, 510, 511, 503, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 701,
	523, 524, 525, 702, 526, 527, 528, 703, 529, 704,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 540, 541, 705, 542, 543, 545, 544, 546,
	0, 547, 0, 548, 549, 550, 0, 0, 0, 0,
	0, 551, 552, 554, 0, 555, 556, 557, 558, 553,
	559, 560, 561, 562, 563, 0, 564, 565, 566, 1280,
	567, 568, 569, 570, 571, 706, 572, 0, 573, 574,
	581, 582, 583, 575, 576, 577, 584, 585, 586, 587,
	588, 244, 590, 591, 589, 592, 593, 594, 0, 595,
	596, 578, 579, 597, 598, 1281, 599, 600, 601, 602,
	603, 604, 605, 707, 0, 606, 0, 607, 608, 609,
	610, 611, 613, 580, 614, 619, 620, 708, 615, 616,
	617, 618, 709, 622, 623, 0, 624, 625, 0, 621,
	612, 246, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 634, 710, 711, 712, 713, 0, 644, 0, 635,
	636, 637, 638, 714, 639, 715, 0, 640, 641, 642,
	643, 0, 645, 646, 0, 0, 647, 648, 649, 651,
	652, 650, 653, 0, 654, 0, 0, 655, 656, 657,
	1720, 717, 718, 0, 659, 658, 660, 661, 719, 662,
	663, 0, 0, 0, 238, 664, 665, 720, 666, 667,
	668, 1602, 1601, 239, 0, 0, 0, 1599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 199, 0, 0, 669, 0, 0, 0, 298, 0,
	299, 300, 1265, 301, 302, 303, 304, 305, 306, 307,
	670, 671, 0, 308, 672, 309, 673, 0, 674, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 675,
	676, 677, 0, 317, 318, 678, 0, 1566, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1266, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 679, 680, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 681, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 682, 683, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	684, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1267, 391, 392, 393, 685, 686, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 687,
	0, 688, 404, 0, 405, 406, 407, 408, 409, 410,
	689, 690, 691, 497, 1269, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 1268, 498, 421, 692, 693, 0, 694, 0, 422,
	423, 1270, 695, 1271, 424, 425, 426, 1272, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 696, 1273, 438, 439, 1274, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1275, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1276, 491, 479, 0,
	0, 1277, 493, 494, 495, 0, 697, 496, 698, 499,
	500, 0, 0, 501, 0, 502, 0, 0, 504, 505,
	506, 0, 0, 507, 508, 699, 1278, 509, 1279, 700,
	510, 511, 503, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 521, 522, 701, 523, 524, 525, 702,
	526, 527, 528, 703, 529, 704, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 540, 541,
	705, 542, 543, 545, 544, 546, 0, 547, 0, 548,
	549, 550, 0, 0, 0, 0, 0, 551, 552, 554,
	0, 555, 556, 557, 558, 553, 559, 560, 561, 562,
	563, 0, 564, 565, 566, 1280, 567, 568, 569, 570,
	571, 706, 572, 0, 573, 574, 581, 582, 583, 575,
	576, 577, 584, 585, 586, 587, 588, 0, 590, 591,
	589, 592, 593, 594, 0, 595, 596, 578, 579, 597,
	598, 1281, 599, 600, 601, 602, 603, 604, 605, 707,
	0, 606, 0, 607, 608, 609, 610, 611, 613, 580,
	614, 619, 620, 708, 615, 616, 617, 618, 709, 622,
	623, 0, 624, 625, 0, 621, 612, 0, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 634, 710, 711,
	712, 713, 0, 644, 0, 635, 636, 637, 638, 714,
	639, 715, 0, 640, 641, 642, 643, 0, 645, 646,
	0, 0, 647, 648, 649, 651, 652, 650, 653, 0,
	654, 0, 0, 655, 656, 657, 716, 717, 718, 0,
	659, 658, 660, 661, 719, 662, 663, 0, 0, 0,
	0, 664, 665, 720, 666, 667, 668, 1602, 1601, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 1744, 0, 0,
	669, 0, 0, 0, 298, 0, 299, 300, 1265, 301,
	302, 303, 304, 305, 306, 307, 670, 671, 0, 308,
	672, 309, 673, 0, 674, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 675, 676, 677, 0, 317,
	318, 678, 0, 1566, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1266, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 679, 680, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 681, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 682, 683, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 684, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1267, 391,
	392, 393, 685, 686, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 687, 0, 688, 404, 0,
	405, 406, 407, 408, 409, 410, 689, 690, 691, 497,
	1269, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 1268, 498, 421,
	692, 693, 0, 694, 0, 422, 423, 1270, 695, 1271,
	424, 425, 426, 1272, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	696, 1273, 438, 439, 1274, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1275, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1276, 491, 479, 0, 0, 1277, 493, 494,
	495, 0, 697, 496, 698, 499, 500, 0, 0, 501,
	0, 502, 0, 0, 504, 505, 506, 0, 0, 507,
	508, 699, 1278, 509, 1279, 700, 510, 511, 503, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 521,
	522, 701, 523, 524, 525, 702, 526, 527, 528, 703,
	529, 704, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 540, 541, 705, 542, 543, 545,
	544, 546, 0, 547, 0, 548, 549, 550, 0, 0,
	0, 0, 0, 551, 552, 554, 0, 555, 556, 557,
	558, 553, 559, 560, 561, 562, 563, 0, 564, 565,
	566, 1280, 567, 568, 569, 570, 571, 706, 572, 0,
	573, 574, 581, 582, 583, 575, 576, 577, 584, 585,
	586, 587, 588, 0, 590, 591, 589, 592, 593, 594,
	0, 595, 596, 578, 579, 597, 598, 1281, 599, 600,
	601, 602, 603, 604, 605, 707, 0, 606, 0, 607,
	608, 609, 610, 611, 613, 580, 614, 619, 620, 708,
	615, 616, 617, 618, 709, 622, 623, 0, 624, 625,
	0, 621, 612, 0, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 634, 710, 711, 712, 713, 0, 644,
	0, 635, 636, 637, 638, 714, 639, 715, 0, 640,
	641, 642, 643, 0, 645, 646, 0, 0, 647, 648,
	649, 651, 652, 650, 653, 0, 654, 0, 0, 655,
	656, 657, 716, 717, 718, 0, 659, 658, 660, 661,
	719, 662, 663, 0, 0, 0, 0, 664, 665, 720,
	666, 667, 668, 1602, 1601, 0, 0, 0, 0, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 3832, 0, 0, 669, 0, 0, 0,
	298, 0, 299, 300, 1265, 301, 302, 303, 304, 305,
	306, 307, 670, 671, 0, 308, 672, 309, 673, 0,
	674, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 675, 676, 677, 0, 317, 318, 678, 0, 1566,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1266, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 679, 680, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 681, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 682,
	683, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 684, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1267, 391, 392, 393, 685, 686,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 687, 0, 688, 404, 0, 405, 406, 407, 408,
	409, 410, 689, 690, 691, 497, 1269, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 1268, 498, 421, 692, 693, 0, 694,
	0, 422, 423, 1270, 695, 1271, 424, 425, 426, 1272,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 696, 1273, 438, 439,
	1274, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1275, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1276, 491,
	479, 0, 0, 1277, 493, 494, 495, 0, 697, 496,
	698, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 1278, 509,
	1279, 700, 510, 511, 503, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 703, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 705, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 2463, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 1280, 567, 568,
	569, 570, 571, 706, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 0, 595, 596, 578,
	579, 597, 598, 1281, 599, 600, 601, 602, 603, 604,
	605, 707, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 708, 615, 616, 617, 618,
	709, 622, 623, 0, 624, 625, 0, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	710, 711, 712, 713, 0, 644, 0, 635, 636, 637,
	638, 714, 639, 715, 0, 640, 641, 642, 643, 0,
	645, 646, 0, 0, 647, 648, 649, 651, 652, 650,
	653, 0, 654, 0, 0, 655, 656, 657, 716, 717,
	718, 0, 659, 658, 660, 661, 719, 662, 663, 0,
	0, 0, 0, 664, 665, 720, 666, 667, 668, 1602,
	2372, 0, 0, 0, 0, 2373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 1744,
	0, 0, 669, 0, 0, 0, 298, 0, 299, 300,
	1265, 301, 302, 303, 304, 305, 306, 307, 670, 671,
	0, 308, 672, 309, 673, 0, 674, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 675, 676, 677,
	0, 317, 318, 678, 0, 1566, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1266, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 679, 680, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 681, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 682, 683, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 684, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1267, 391, 392, 393, 685, 686, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 687, 0, 688,
	404, 0, 405, 406, 407, 408, 409, 410, 689, 690,
	691, 497, 1269, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 1268,
	498, 421, 692, 693, 0, 694, 0, 422, 423, 1270,
	695, 1271, 424, 425, 426, 1272, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 2371, 436, 435,
	0, 437, 696, 1273, 438, 439, 1274, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1275, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1276, 491, 479, 0, 0, 1277,
	493, 494, 495, 0, 697, 496, 698, 499, 500, 0,
	0, 501, 0, 502, 0, 0, 504, 505, 506, 0,
	0, 507, 508, 699, 1278, 509, 1279, 700, 510, 511,
	503, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 521, 522, 701, 523, 524, 525, 702, 526, 527,
	528, 703, 529, 704, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 540, 541, 705, 542,
	543, 545, 544, 546, 0, 547, 0, 548, 549, 550,
	0, 0, 0, 0, 0, 551, 552, 554, 0, 555,
	556, 557, 558, 553, 559, 560, 561, 562, 563, 0,
	564, 565, 566, 1280, 567, 568, 569, 570, 571, 706,
	572, 0, 573, 574, 581, 582, 583, 575, 576, 577,
	584, 585, 586, 587, 588, 0, 590, 591, 589, 592,
	593, 594, 0, 595, 596, 578, 579, 597, 598, 1281,
	599, 600, 601, 602, 603, 604, 605, 707, 0, 606,
	0, 607, 608, 609, 610, 611, 613, 580, 614, 619,
	620, 708, 615, 616, 617, 618, 709, 622, 623, 0,
	624, 625, 0, 621, 612, 0, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 634, 710, 711, 712, 713,
	0, 644, 0, 635, 636, 637, 638, 714, 639, 715,
	0, 640, 641, 642, 643, 0, 645, 646, 0, 0,
	647, 648, 649, 651, 652, 650, 653, 0, 654, 0,
	0, 655, 656, 657, 716, 717, 718, 0, 659, 658,
	660, 661, 719, 662, 663, 0, 0, 0, 0, 664,
	665, 720, 666, 667, 668, 1602, 1601, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 1744, 0, 0, 669, 0,
	0, 0, 298, 0, 299, 300, 1265, 301, 302, 303,
	304, 305, 306, 307, 670, 671, 0, 308, 672, 309,
	673, 0, 674, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 675, 676, 677, 0, 317, 318, 678,
	0, 1566, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1266, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 679,
	680, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 681,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 682, 683, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 684, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1267, 391, 392, 393,
	685, 686, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 687, 0, 688, 404, 0, 405, 406,
	407, 408, 409, 410, 689, 690, 691, 497, 1269, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 1268, 498, 421, 692, 693,
	0, 694, 0, 422, 423, 1270, 695, 1271, 424, 425,
	426, 1272, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 696, 1273,
	438, 439, 1274, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1275, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1276, 491, 479, 0, 0, 1277, 493, 494, 495, 0,
	697, 496, 698, 499, 500, 0, 0, 501, 0, 502,
	0, 0, 504, 505, 506, 0, 0, 507, 508, 699,
	1278, 509, 1279, 700, 510, 511, 503, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 701,
	523, 524, 525, 702, 526, 527, 528, 703, 529, 704,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 540, 541, 705, 542, 543, 545, 544, 546,
	0, 547, 0, 548, 549, 550, 0, 0, 0, 0,
	0, 551, 552, 554, 0, 555, 556, 557, 558, 553,
	559, 560, 561, 562, 563, 0, 564, 565, 566, 1280,
	567, 568, 569, 570, 571, 706, 572, 0, 573, 574,
	581, 582, 583, 575, 576, 577, 584, 585, 586, 587,
	588, 0, 590, 591, 589, 592, 593, 594, 0, 595,
	596, 578, 579, 597, 598, 1281, 599, 600, 601, 602,
	603, 604, 605, 707, 0, 606, 0, 607, 608, 609,
	610, 611, 613, 580, 614, 619, 620, 708, 615, 616,
	617, 618, 709, 622, 623, 0, 624, 625, 0, 621,
	612, 0, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 634, 710, 711, 712, 713, 0, 644, 0, 635,
	636, 637, 638, 714, 639, 715, 0, 640, 641, 642,
	643, 0, 645, 646, 0, 0, 647, 648, 649, 651,
	652, 650, 653, 0, 654, 0, 0, 655, 656, 657,
	716, 717, 718, 0, 659, 658, 660, 661, 719, 662,
	663, 1145, 0, 282, 0, 664, 665, 720, 666, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	298, 1726, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 670, 671, 0, 308, 672, 309, 673, 0,
	674, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 675, 676, 677, 0, 317, 318, 678, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 679, 680, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 681, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 682,
	683, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 684, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 685, 686,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 687, 0, 688, 404, 0, 405, 406, 407, 408,
	409, 410, 689, 690, 691, 497, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 498, 421, 692, 693, 0, 694,
	0, 422, 423, 0, 695, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 696, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 0, 697, 496,
	698, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 0, 509,
	0, 700, 510, 511, 503, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 703, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 705, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 0, 567, 568,
	569, 570, 571, 706, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 244,
	590, 591, 589, 592, 593, 594, 0, 595, 596, 578,
	579, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 707, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 708, 615, 616, 617, 618,
	709, 622, 623, 0, 624, 625, 0, 621, 612, 246,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	710, 711, 712, 713, 0, 644, 0, 635, 636, 637,
	638, 714, 639, 715, 0, 640, 641, 642, 643, 0,
	645, 646, 0, 0, 647, 648, 649, 651, 652, 650,
	653, 0, 654, 0, 0, 655, 656, 657, 1720, 717,
	718, 0, 659, 658, 660, 661, 719, 662, 663, 0,
	0, 282, 238, 664, 665, 720, 666, 667, 668, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 298, 199,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	670, 671, 0, 308, 672, 309, 673, 0, 674, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 675,
	676, 677, 0, 317, 318, 678, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 679, 680, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 681, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 682, 683, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	684, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 685, 686, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 687,
	0, 688, 404, 0, 405, 406, 407, 408, 409, 410,
	689, 690, 691, 497, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 498, 421, 692, 693, 0, 694, 0, 422,
	423, 0, 695, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 696, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 0, 697, 496, 698, 499,
	500, 0, 0, 501, 0, 502, 0, 0, 504, 505,
	506, 0, 0, 507, 508, 699, 0, 509, 0, 700,
	510, 511, 503, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 521, 522, 701, 523, 524, 525, 702,
	526, 527, 528, 703, 529, 704, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 540, 541,
	705, 542, 543, 545, 544, 546, 0, 547, 0, 548,
	549, 550, 0, 0, 0, 0, 0, 551, 552, 554,
	0, 555, 556, 557, 558, 553, 559, 560, 561, 562,
	563, 0, 564, 565, 566, 0, 567, 568, 569, 570,
	571, 706, 572, 0, 573, 574, 581, 582, 583, 575,
	576, 577, 584, 585, 586, 587, 588, 0, 590, 591,
	589, 592, 593, 594, 0, 595, 596, 578, 579, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 707,
	0, 606, 0, 607, 608, 609, 610, 611, 613, 580,
	614, 619, 620, 708, 615, 616, 617, 618, 709, 622,
	623, 0, 624, 625, 0, 621, 612, 0, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 634, 710, 711,
	712, 713, 0, 644, 0, 635, 636, 637, 638, 714,
	639, 715, 0, 640, 641, 642, 643, 0, 645, 646,
	0, 0, 647, 648, 649, 651, 652, 650, 653, 0,
	654, 0, 0, 655, 656, 657, 716, 717, 718, 0,
	659, 658, 660, 661, 719, 662, 663, 0, 0, 282,
	3254, 664, 665, 720, 666, 667, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 298, 2091, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 670, 671,
	0, 308, 672, 309, 673, 0, 674, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 675, 676, 677,
	0, 317, 318, 678, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 679, 680, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 681, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 682, 683, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 684, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 685, 686, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 687, 0, 688,
	404, 0, 405, 406, 407, 408, 409, 410, 689, 690,
	691, 497, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	498, 421, 692, 693, 0, 694, 0, 422, 423, 0,
	695, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 696, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 0, 697, 496, 698, 499, 500, 0,
	0, 501, 0, 502, 0, 0, 504, 505, 506, 0,
	0, 507, 508, 699, 0, 509, 0, 700, 510, 511,
	503, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 521, 522, 701, 523, 524, 525, 702, 526, 527,
	528, 703, 529, 704, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 540, 541, 705, 542,
	543, 545, 544, 546, 0, 547, 0, 548, 549, 550,
	0, 0, 0, 0, 0, 551, 552, 554, 0, 555,
	556, 557, 558, 553, 559, 560, 561, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 706,
	572, 0, 573, 574, 581, 582, 583, 575, 576, 577,
	584, 585, 586, 587, 588, 0, 590, 591, 589, 592,
	593, 594, 0, 595, 596, 578, 579, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 707, 0, 606,
	0, 607, 608, 609, 610, 611, 613, 580, 614, 619,
	620, 708, 615, 616, 617, 618, 709, 622, 623, 0,
	624, 625, 0, 621, 612, 0, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 634, 710, 711, 712, 713,
	0, 644, 0, 635, 636, 637, 638, 714, 639, 715,
	0, 640, 641, 642, 643, 0, 645, 646, 0, 0,
	647, 648, 649, 651, 652, 650, 653, 0, 654, 0,
	0, 655, 656, 657, 716, 717, 718, 0, 659, 658,
	660, 661, 719, 662, 663, 0, 0, 1323, 0, 664,
	665, 720, 666, 667, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	1225, 0, 0, 0, 298, 5157, 299, 300, 1265, 301,
	302, 303, 304, 305, 306, 307, 670, 671, 0, 308,
	672, 309, 673, 0, 674, 310, 311, 312, 313, 314,
	315, 0, 1224, 0, 316, 675, 676, 677, 0, 317,
	318, 1231, 0, 1212, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1266, 341, 342, 343, 1215, 1213, 1214, 1221,
	1217, 1216, 1220, 344, 345, 346, 347, 348, 0, 349,
	351, 679, 680, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 681, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1256, 1257, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 684, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1267, 391,
	392, 393, 685, 686, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1263, 0, 688, 404, 0,
	405, 406, 407, 408, 409, 410, 1226, 1227, 1230, 497,
	1269, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1268, 498, 421,
	692, 693, 0, 694, 0, 422, 423, 1270, 1228, 1271,
	424, 425, 426, 1272, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1264, 1273, 438, 439, 1274, 0, 440, 441, 442, 443,
	444, 445, 448, 1219, 1218, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1275, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1276, 491, 479, 0, 287, 1277, 493, 494,
	495, 0, 1229, 496, 698, 499, 500, 0, 0, 501,
	0, 502, 0, 0, 504, 505, 506, 0, 0, 507,
	508, 699, 1278, 509, 1279, 1258, 510, 511, 503, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 0, 521,
	522, 701, 523, 524, 525, 702, 526, 527, 528, 1259,
	529, 704, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 540, 541, 705, 542, 543, 545,
	544, 546, 0, 547, 0, 548, 549, 550, 0, 0,
	0, 0, 0, 551, 552, 554, 0, 555, 556, 557,
	558, 553, 559, 560, 561, 562, 563, 0, 564, 565,
	566, 1280, 567, 568, 569, 570, 571, 706, 572, 0,
	573, 574, 581, 582, 583, 575, 576, 577, 584, 585,
	586, 587, 588, 0, 590, 591, 589, 592, 593, 594,
	1222, 595, 596, 578, 579, 597, 598, 1281, 599, 600,
	601, 602, 603, 604, 605, 707, 0, 606, 0, 607,
	608, 609, 610, 611, 613, 580, 614, 619, 620, 708,
	615, 616, 617, 618, 1260, 622, 623, 0, 624, 625,
	0, 621, 612, 0, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 634, 710, 711, 712, 713, 0, 644,
	0, 635, 636, 637, 638, 1261, 639, 1262, 0, 640,
	641, 642, 643, 0, 645, 646, 0, 0, 647, 648,
	649, 651, 652, 650, 653, 1223, 654, 0, 0, 655,
	656, 657, 716, 717, 718, 0, 659, 658, 660, 661,
	719, 662, 663, 282, 0, 0, 0, 664, 665, 720,
	666, 667, 668, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 670, 671, 0, 308, 672, 309, 673, 0,
	674, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 675, 676, 677, 0, 317, 318, 678, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 679, 680, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 681, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 682,
	683, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 684, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 685, 686,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 687, 0, 688, 404, 0, 405, 406, 407, 408,
	409, 410, 689, 690, 691, 497, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 498, 421, 692, 693, 0, 694,
	0, 422, 423, 0, 695, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 696, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 287, 0, 493, 494, 495, 0, 697, 496,
	698, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 0, 509,
	0, 700, 510, 511, 503, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 703, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 705, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 0, 567, 568,
	569, 570, 571, 706, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 0, 595, 596, 578,
	579, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 707, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 708, 615, 616, 617, 618,
	709, 622, 623, 0, 624, 625, 0, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	710, 711, 712, 713, 0, 644, 0, 635, 636, 637,
	638, 714, 639, 715, 0, 640, 641, 642, 643, 0,
	645, 646, 0, 0, 647, 648, 649, 651, 652, 650,
	653, 0, 654, 0, 0, 655, 656, 657, 716, 717,
	718, 0, 659, 658, 660, 661, 719, 662, 663, 282,
	0, 0, 0, 664, 665, 720, 666, 667, 668, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 298, 3782, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 670, 671,
	0, 308, 672, 309, 673, 0, 674, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 675, 676, 677,
	0, 317, 318, 678, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 679, 680, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 681, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 682, 683, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 684, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 685, 686, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 687, 0, 688,
	404, 0, 405, 406, 407, 408, 409, 410, 689, 690,
	691, 497, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	498, 421, 692, 693, 0, 694, 0, 422, 423, 0,
	695, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 696, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 0, 697, 496, 698, 499, 500, 0,
	0, 501, 0, 502, 0, 0, 504, 505, 506, 0,
	0, 507, 508, 699, 0, 509, 0, 700, 510, 511,
	503, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 521, 522, 701, 523, 524, 525, 702, 526, 527,
	528, 703, 529, 704, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 540, 541, 705, 542,
	543, 545, 544, 546, 0, 547, 0, 548, 549, 550,
	0, 0, 0, 0, 0, 551, 552, 554, 0, 555,
	556, 557, 558, 553, 559, 560, 561, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 706,
	572, 0, 573, 574, 581, 582, 583, 575, 576, 577,
	584, 585, 586, 587, 588, 0, 590, 591, 589, 592,
	593, 594, 0, 595, 596, 578, 579, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 707, 0, 606,
	0, 607, 608, 609, 610, 611, 613, 580, 614, 619,
	620, 708, 615, 616, 617, 618, 709, 622, 623, 0,
	624, 625, 0, 621, 612, 0, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 634, 710, 711, 712, 713,
	0, 644, 0, 635, 636, 637, 638, 714, 639, 715,
	0, 640, 641, 642, 643, 0, 645, 646, 0, 0,
	647, 648, 649, 651, 652, 650, 653, 0, 654, 0,
	0, 655, 656, 657, 716, 717, 718, 0, 659, 658,
	660, 661, 719, 662, 663, 282, 0, 0, 0, 664,
	665, 720, 666, 667, 668, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 298, 1714, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 670, 671, 0, 308, 672, 309,
	673, 0, 674, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 675, 676, 677, 0, 317, 318, 678,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 679,
	680, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 681,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 682, 683, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 684, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	685, 686, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 687, 0, 688, 404, 0, 405, 406,
	407, 408, 409, 410, 689, 690, 691, 497, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 498, 421, 692, 693,
	0, 694, 0, 422, 423, 0, 695, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 696, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 0,
	697, 496, 698, 499, 500, 0, 0, 501, 0, 502,
	0, 0, 504, 505, 506, 0, 0, 507, 508, 699,
	0, 509, 0, 700, 510, 511, 503, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 701,
	523, 524, 525, 702, 526, 527, 528, 703, 529, 704,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 540, 541, 705, 542, 543, 545, 544, 546,
	0, 547, 0, 548, 549, 550, 0, 0, 0, 0,
	0, 551, 552, 554, 0, 555, 556, 557, 558, 553,
	559, 560, 561, 562, 563, 0, 564, 565, 566, 0,
	567, 568, 569, 570, 571, 706, 572, 0, 573, 574,
	581, 582, 583, 575, 576, 577, 584, 585, 586, 587,
	588, 0, 590, 591, 589, 592, 593, 594, 0, 595,
	596, 578, 579, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 707, 0, 606, 0, 607, 608, 609,
	610, 611, 613, 580, 614, 619, 620, 708, 615, 616,
	617, 618, 709, 622, 623, 0, 624, 625, 0, 621,
	612, 0, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 634, 710, 711, 712, 713, 0, 644, 0, 635,
	636, 637, 638, 714, 639, 715, 0, 640, 641, 642,
	643, 0, 645, 646, 0, 0, 647, 648, 649, 651,
	652, 650, 653, 0, 654, 0, 0, 655, 656, 657,
	716, 717, 718, 0, 659, 658, 660, 661, 719, 662,
	663, 0, 0, 282, 0, 664, 665, 720, 666, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	298, 3242, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 670, 671, 0, 308, 672, 309, 673, 0,
	674, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 675, 676, 677, 0, 317, 318, 678, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 679, 680, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 681, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 682,
	683, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 684, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 685, 686,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 687, 0, 688, 404, 0, 405, 406, 407, 408,
	409, 410, 689, 690, 691, 497, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 498, 421, 692, 693, 0, 694,
	0, 422, 423, 0, 695, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 696, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 0, 697, 496,
	698, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 699, 0, 509,
	0, 700, 510, 511, 503, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 701, 523, 524,
	525, 702, 526, 527, 528, 703, 529, 704, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 705, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 0, 567, 568,
	569, 570, 571, 706, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 0, 595, 596, 578,
	579, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 707, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 708, 615, 616, 617, 618,
	709, 622, 623, 0, 624, 625, 0, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	710, 711, 712, 713, 0, 644, 0, 635, 636, 637,
	638, 714, 639, 715, 0, 640, 641, 642, 643, 0,
	645, 646, 0, 0, 647, 648, 649, 651, 652, 650,
	653, 0, 654, 0, 0, 655, 656, 657, 716, 717,
	718, 0, 659, 658, 660, 661, 719, 662, 663, 0,
	0, 282, 0, 664, 665, 720, 666, 667, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 298, 3941,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	670, 671, 0, 308, 672, 309, 673, 0, 674, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 675,
	676, 677, 0, 317, 318, 678, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 679, 680, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 681, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 682, 683, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	684, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 685, 686, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 687,
	0, 688, 404, 0, 405, 406, 407, 408, 409, 410,
	689, 690, 691, 497, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 498, 421, 692, 693, 0, 694, 0, 422,
	423, 0, 695, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 696, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 0, 697, 496, 698, 499,
	500, 0, 0, 501, 0, 502, 0, 0, 504, 505,
	506, 0, 0, 507, 508, 699, 0, 509, 0, 700,
	510, 511, 503, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 0, 521, 522, 701, 523, 524, 525, 702,
	526, 527, 528, 703, 529, 704, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 540, 541,
	705, 542, 543, 545, 544, 546, 0, 547, 0, 548,
	549, 550, 0, 0, 0, 0, 0, 551, 552, 554,
	0, 555, 556, 557, 558, 553, 559, 560, 561, 562,
	563, 0, 564, 565, 566, 0, 567, 568, 569, 570,
	571, 706, 572, 0, 573, 574, 581, 582, 583, 575,
	576, 577, 584, 585, 586, 587, 588, 0, 590, 591,
	589, 592, 593, 594, 0, 595, 596, 578, 579, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 707,
	0, 606, 0, 607, 608, 609, 610, 611, 613, 580,
	614, 619, 620, 708, 615, 616, 617, 618, 709, 622,
	623, 0, 624, 625, 0, 621, 612, 0, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 634, 710, 711,
	712, 713, 0, 644, 0, 635, 636, 637, 638, 714,
	639, 715, 0, 640, 641, 642, 643, 0, 645, 646,
	0, 0, 647, 648, 649, 651, 652, 650, 653, 0,
	654, 0, 0, 655, 656, 657, 716, 717, 718, 0,
	659, 658, 660, 661, 719, 662, 663, 970, 0, 870,
	0, 664, 665, 720, 666, 667, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 298, 2450, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 670, 671,
	0, 308, 672, 309, 673, 0, 674, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 675, 676, 677,
	0, 317, 318, 678, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 877, 348,
	0, 349, 351, 679, 680, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 681, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 682, 683, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 684, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 967,
	0, 391, 392, 393, 685, 686, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 687, 0, 688,
	404, 0, 405, 406, 407, 408, 409, 410, 689, 690,
	691, 497, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	498, 421, 692, 693, 0, 694, 0, 422, 423, 0,
	695, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 696, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 0, 697, 496, 698, 499, 500, 0,
	0, 501, 0, 502, 0, 0, 504, 505, 506, 0,
	0, 507, 508, 699, 0, 509, 0, 700, 510, 511,
	503, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	0, 521, 522, 701, 523, 524, 525, 702, 526, 527,
	528, 703, 529, 704, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 540, 541, 705, 542,
	543, 545, 544, 546, 0, 547, 0, 548, 549, 550,
	0, 0, 0, 0, 0, 551, 552, 554, 0, 555,
	556, 557, 558, 553, 559, 560, 561, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 706,
	572, 0, 573, 574, 581, 582, 583, 575, 576, 577,
	584, 585, 586, 587, 588, 0, 590, 591, 589, 592,
	593, 594, 0, 595, 596, 578, 579, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 707, 0, 606,
	0, 607, 608, 609, 610, 611, 613, 580, 614, 619,
	620, 708, 615, 616, 617, 618, 709, 622, 623, 0,
	624, 969, 0, 621, 612, 875, 626, 627, 628, 629,
	630, 876, 632, 633, 0, 634, 710, 711, 712, 713,
	0, 644, 0, 635, 636, 637, 638, 714, 639, 715,
	0, 640, 641, 642, 643, 0, 645, 646, 0, 0,
	647, 648, 649, 651, 652, 650, 653, 0, 654, 0,
	0, 655, 656, 657, 716, 717, 718, 0, 659, 658,
	660, 661, 719, 662, 663, 2136, 0, 0, 0, 664,
	665, 720, 666, 667, 668, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 880, 0, 0,
	0, 0, 298, 0, 299, 300, 1265, 301, 302, 303,
	304, 305, 306, 307, 0, 2142, 0, 308, 2132, 309,
	2148, 0, 2155, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 2158, 2159, 0, 0, 317, 318, 0,
	0, 1566, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1266, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 1248, 349, 351, 2146,
	2145, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1233, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 0,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 2144, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1267, 391, 392, 393,
	2153, 2154, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 0, 0, 0, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 0, 0, 497, 1269, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 1268, 498, 421, 2139, 2140,
	0, 2135, 0, 422, 423, 1270, 0, 1271, 424, 425,
	426, 1272, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 0, 1273,
	438, 439, 1274, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1275, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1276, 491, 479, 0, 0, 1277, 493, 494, 495, 0,
	0, 496, 2147, 499, 500, 0, 0, 501, 0, 502,
	0, 0, 504, 505, 506, 0, 0, 507, 508, 0,
	1278, 509, 1279, 0, 510, 511, 503, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 0, 521, 522, 2129,
	523, 524, 525, 2130, 526, 527, 528, 0, 529, 0,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 540, 541, 2143, 542, 543, 545, 544, 546,
	0, 547, 0, 548, 549, 550, 0, 0, 0, 0,
	0, 551, 552, 554, 0, 555, 556, 557, 558, 553,
	559, 560, 561, 562, 563, 0, 564, 565, 566, 1280,
	567, 568, 569, 570, 571, 0, 572, 0, 573, 574,
	581, 582, 583, 575, 576, 577, 584, 585, 586, 587,
	588, 0, 590, 591, 589, 592, 593, 594, 0, 595,
	596, 578, 579, 597, 598, 1281, 599, 600, 601, 602,
	603, 604, 605, 2141, 0, 606, 0, 607, 608, 609,
	610, 611, 613, 580, 614, 619, 620, 2157, 615, 616,
	617, 618, 0, 622, 623, 0, 624, 625, 0, 621,
	612, 0, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 634, 2149, 2150, 2151, 2152, 0, 644, 0, 635,
	636, 637, 638, 0, 639, 0, 0, 640, 641, 642,
	643, 0, 645, 646, 0, 0, 647, 648, 649, 651,
	652, 650, 653, 0, 654, 0, 0, 655, 656, 657,
	0, 2133, 2156, 0, 659, 658, 660, 661, 0, 662,
	663, 0, 0, 0, 870, 664, 665, 0, 666, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 4061,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 2123, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 877, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 4060, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	875, 626, 627, 628, 629, 630, 876, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 4059, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	870, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 2163, 296, 297, 0, 0,
	0, 0, 880, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 877,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 2162, 585, 586, 587, 588, 0, 2164, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 875, 626, 627, 628,
	629, 630, 876, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 2161, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 870, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 2114, 296, 297, 0, 0, 0, 0, 880, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 877, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 2113, 585, 586,
	587, 588, 0, 2115, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 875, 626, 627, 628, 629, 630, 876, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	2112, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 868, 0, 870, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 880, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 877, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	875, 626, 627, 628, 629, 630, 876, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	870, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 880, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 877,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 875, 626, 627, 628,
	629, 630, 876, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 870, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 880, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 877, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 2502, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 2503, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 875, 626, 627, 628, 629, 630, 876, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	2504, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 282, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 880, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 0, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 1602, 1601, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	1566, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 1268, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 1270, 695, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 0, 0, 1277, 493, 494, 495, 4158, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	0, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	1602, 1601, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 1566, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1266, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1267, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 1269, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	1268, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	1270, 695, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 1273, 438, 439, 1274, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 0, 0,
	1277, 493, 494, 495, 3732, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 1278, 509, 1279, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 0, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 1775, 0, 1602, 1601,
	0, 0, 0, 0, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 1265,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 1566, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1266, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 285, 0,
	0, 0, 0, 0, 1774, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1267,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 1269, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 1268, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 1270, 695,
	1271, 424, 425, 426, 1272, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 1273, 438, 439, 1274, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1275, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1276, 491, 479, 0, 0, 1277, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 1278, 509, 1279, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 1773, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 1280, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	1772, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 1281, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 0, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 1647, 0, 1602, 1601, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 1265, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 1566, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1266, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1267, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 1649, 690, 691, 497, 1269,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 1268, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 1270, 695, 1271, 424,
	425, 426, 1272, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	1273, 438, 439, 1274, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1275, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1276, 491, 479, 0, 0, 1277, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 1278, 509, 1279, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	1280, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 1281, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 0, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 1597, 0, 1602, 1601, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 1265, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	1566, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1266,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1267, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 1269, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 1268, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 1270, 695, 1271, 424, 425, 426,
	1272, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 1273, 438,
	439, 1274, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1275, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1276,
	491, 479, 0, 0, 1277, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 1278,
	509, 1279, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 1280, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 1281, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	0, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	1602, 1601, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 1265, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 1566, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1266, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1267, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 1269, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	1268, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	1270, 695, 1271, 424, 425, 426, 1272, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 1273, 438, 439, 1274, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1275, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1276, 491, 479, 0, 0,
	1277, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 1278, 509, 1279, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 1280, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	1281, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 1602, 1601, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 1265, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 1566, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1266, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1267, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 1269,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 1268, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 1270, 695, 1271, 424,
	425, 426, 1272, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	1273, 438, 439, 1274, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1275, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1276, 491, 479, 0, 0, 1277, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 1278, 509, 1279, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	1280, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 1281, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 1602, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 1265, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 1566, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1266, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1267, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 1269, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 1268, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 1270, 695, 1271, 424, 425, 426, 1272, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 1273, 438, 439, 1274,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1275,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1276, 491, 479,
	0, 0, 1277, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 1278, 509, 1279,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 1280, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 1281, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 282, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 3034,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	3774, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	3038, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 3773, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 3037, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 3770, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 3772, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 3769, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 3036, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 3771, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 282, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 3034, 317, 318, 678, 0,
	0, 3028, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 3030, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 3038, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 3037, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 3027, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 3036, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 3035, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	1854, 0, 282, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 1853, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 1852, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	1855, 576, 577, 584, 585, 586, 587, 588, 0, 1851,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 1849, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 1850, 658, 660, 661, 719, 662, 663, 1570, 0,
	282, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 1572,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 1315, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 1567, 0, 282, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 1569, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 287, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 1315, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 1473, 0, 282, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 1475, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 1315, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 753, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 752, 294, 295, 741,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 744, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	750, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	746, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	740, 0, 282, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 741, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 744, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 745, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 746, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 282, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 741, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 744,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 745, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 746, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 282, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 741,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 744, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	4168, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	746, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 1315, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 282, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 3675, 491, 479, 0, 287, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 3212, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 3211, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 2408, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 2471, 0, 282, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 287, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 2415, 0, 282, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 2414, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 2401, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 2403, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 2365,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 1315, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 1692, 0, 282, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 1691, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 287, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 1590, 0, 282, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 1583, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 1585, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	1392, 0, 282, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 1391, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 1382, 0,
	282, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 1381,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 1379, 0, 282, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 1378, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 287, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 1374, 0, 282, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 1373, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 722, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	273, 0, 282, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 282, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 287, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 282, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 744, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	745, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	746, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 2511,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 282, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 2509, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 282, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 2507, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 282, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 2421, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 287, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 282, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 2188, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 2182,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 954, 0, 282, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 953, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 952, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 825, 0, 282, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 831, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 840, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 833, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 839, 835, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 836, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 834, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 837, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 838, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 832, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 282, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 3773, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 4490,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 1420, 0,
	282, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 1423, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	1421, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 813, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 812, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 811, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 1424, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 809, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 1420, 0, 282, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 1423,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 1421, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 813, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 812, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 811,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 1424,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 809, 711, 712, 713, 0,
	644, 0, 635, 1422, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 820, 0, 282, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 818, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 731, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 730,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 729,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 3254, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 282, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 4787, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 282, 3616, 0, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 282, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 4379, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 282, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	4118, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 2909, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 282, 3254, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 3251, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 282, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 2318,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 812, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 811, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 809,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 282, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 2481, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 2469, 0, 282, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 1748, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	1740, 0, 282, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 803, 0,
	282, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 799, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 804, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 813, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 812, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 811, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 1725, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 809, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 1698, 0, 282, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 1697, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 1682, 0, 282, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 1680, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 1675, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	1652, 0, 282, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 1650, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 1645, 0,
	282, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 1607, 0, 282, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 1575, 0, 282, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 1426, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 812,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 811, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 809, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	1397, 0, 282, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 1396, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 1388, 0,
	282, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 1387,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 282, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 1340, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 823, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	803, 0, 282, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 799, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 798, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 804, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 813, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 812, 568, 569,
	570, 571, 800, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 811, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 801, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 809,
	711, 712, 713, 0, 644, 0, 635, 805, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 792, 0,
	282, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 793, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 755, 0, 282, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 689, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 748, 0, 282, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 726, 0, 282, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 282, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 3802, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 282, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 812, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 811, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 809,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 282, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 3715, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 282, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 3691, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 3688,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 282, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 3640, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 282, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 3638, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 282, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 3626, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 282, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 3623, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 404, 0, 405, 406, 407, 408, 409, 410, 3222,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 282, 0, 0, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 670, 671, 0, 308, 672,
	309, 673, 0, 674, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 675, 676, 677, 0, 317, 318,
	678, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	679, 680, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	681, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 682, 683, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 684, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 685, 686, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 687, 0, 688, 404, 0, 405,
	406, 407, 408, 409, 410, 689, 690, 691, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 692,
	693, 0, 694, 0, 422, 423, 0, 695, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 696,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 697, 496, 698, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	699, 0, 509, 0, 700, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	701, 523, 524, 525, 702, 526, 527, 528, 703, 529,
	704, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 705, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 706, 572, 0, 573,
	574, 793, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 0,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 707, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 708, 615,
	616, 617, 618, 709, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 710, 711, 712, 713, 0, 644, 0,
	635, 636, 637, 638, 714, 639, 715, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 716, 717, 718, 0, 659, 658, 660, 661, 719,
	662, 663, 282, 0, 0, 0, 664, 665, 720, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 669, 0, 2439, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 670, 671, 0, 308, 672, 309, 673, 0, 674,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	675, 676, 677, 0, 317, 318, 678, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 679, 680, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 681, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 682, 683,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 684, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 685, 686, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	687, 0, 688, 404, 0, 405, 406, 407, 408, 409,
	410, 689, 690, 691, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 692, 693, 0, 694, 0,
	422, 423, 0, 695, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 696, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 697, 496, 698,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 699, 0, 509, 0,
	700, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 701, 523, 524, 525,
	702, 526, 527, 528, 703, 529, 704, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 705, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 706, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 0, 0, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	707, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 708, 615, 616, 617, 618, 709,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 710,
	711, 712, 713, 0, 644, 0, 635, 636, 637, 638,
	714, 639, 715, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 716, 717, 718,
	0, 659, 658, 660, 661, 719, 662, 663, 282, 0,
	0, 0, 664, 665, 720, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 670, 671, 0,
	308, 672, 309, 673, 0, 674, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 675, 676, 677, 0,
	317, 318, 678, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 679, 680, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 681, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 682, 683, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 684, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 685, 686, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 687, 0, 688, 404,
	0, 405, 406, 407, 408, 409, 410, 1359, 690, 691,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 692, 693, 0, 694, 0, 422, 423, 0, 695,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 696, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 697, 496, 698, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 699, 0, 509, 0, 700, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 701, 523, 524, 525, 702, 526, 527, 528,
	703, 529, 704, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 705, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 706, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 0, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 707, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	708, 615, 616, 617, 618, 709, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 710, 711, 712, 713, 0,
	644, 0, 635, 636, 637, 638, 714, 639, 715, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 716, 717, 718, 0, 659, 658, 660,
	661, 719, 662, 663, 282, 0, 0, 0, 664, 665,
	720, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 670, 671, 0, 308, 672, 309, 673,
	0, 674, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 675, 676, 677, 0, 317, 318, 678, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 679, 680,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 681, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	682, 683, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 684, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 685,
	686, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 687, 0, 688, 404, 0, 405, 406, 407,
	408, 409, 410, 689, 690, 691, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 692, 693, 0,
	694, 0, 422, 423, 0, 695, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 696, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 697,
	496, 698, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 699, 0,
	509, 0, 700, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 701, 523,
	524, 525, 702, 526, 527, 528, 703, 529, 704, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 705, 542, 543, 1288, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 706, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 0, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 707, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 708, 615, 616, 617,
	618, 709, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 710, 711, 712, 713, 0, 644, 0, 635, 636,
	637, 638, 714, 639, 715, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 716,
	717, 718, 0, 659, 658, 660, 661, 719, 662, 663,
	282, 0, 0, 0, 664, 665, 720, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 670,
	671, 0, 308, 672, 309, 673, 0, 674, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 675, 676,
	677, 0, 317, 318, 678, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 679, 680, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 681, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 682, 683, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 684,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 685, 686, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 687, 0,
	688, 0, 0, 405, 406, 407, 408, 409, 410, 689,
	690, 691, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 692, 693, 0, 694, 0, 422, 423,
	0, 695, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 696, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 697, 496, 698, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 699, 0, 509, 0, 700, 510,
	511, 503, 512, 513, 0, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 701, 523, 524, 525, 702, 526,
	527, 528, 703, 529, 704, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 0, 540, 541, 705,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	706, 0, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 0, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 707, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 708, 615, 616, 617, 618, 709, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 710, 711, 712,
	713, 0, 644, 0, 635, 636, 637, 638, 714, 639,
	715, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 716, 717, 718, 0, 659,
	658, 660, 661, 719, 662, 663, 1688, 0, 1404, 0,
	664, 665, 720, 666, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 299, 300, 0,
	301, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 0, 0, 0, 0,
	317, 318, 0, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 0, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 1406, 344, 345, 346, 347, 348, 0,
	349, 351, 0, 0, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 0, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 0, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 0, 0, 0, 404,
	0, 405, 406, 407, 408, 409, 410, 1687, 0, 0,
	497, 0, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 0, 498,
	421, 0, 0, 0, 0, 0, 422, 423, 0, 0,
	0, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 0, 0, 438, 439, 0, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 0, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 0, 491, 479, 0, 0, 0, 493,
	494, 495, 0, 0, 496, 0, 499, 500, 0, 0,
	501, 0, 502, 0, 0, 504, 505, 506, 0, 0,
	507, 508, 0, 0, 509, 0, 0, 510, 511, 503,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 0, 526, 527, 528,
	0, 529, 0, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 540, 541, 0, 542, 543,
	545, 544, 546, 0, 547, 0, 548, 549, 550, 0,
	0, 0, 0, 0, 551, 552, 554, 0, 555, 556,
	557, 558, 553, 559, 560, 561, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 0, 572,
	0, 573, 574, 581, 582, 583, 575, 576, 577, 584,
	585, 586, 587, 588, 0, 590, 591, 589, 592, 593,
	594, 1407, 595, 596, 578, 579, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 0, 0, 606, 0,
	607, 608, 609, 610, 611, 613, 580, 614, 619, 620,
	0, 615, 616, 617, 618, 0, 622, 623, 0, 624,
	625, 0, 621, 612, 0, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 634, 0, 0, 0, 0, 0,
	644, 0, 635, 636, 637, 638, 0, 639, 0, 0,
	640, 641, 642, 643, 0, 645, 646, 0, 0, 647,
	648, 649, 651, 652, 650, 653, 0, 654, 0, 0,
	655, 656, 657, 0, 0, 0, 0, 659, 658, 660,
	661, 0, 662, 663, 1610, 0, 1404, 0, 664, 665,
	0, 666, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 0, 0, 0, 0, 317, 318,
	0, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 1406, 344, 345, 346, 347, 348, 0, 349, 351,
	0, 0, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	0, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 0, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 0, 0, 0, 404, 0, 405,
	406, 407, 408, 409, 410, 1609, 0, 0, 497, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 498, 421, 0,
	0, 0, 0, 0, 422, 423, 0, 0, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 0,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	0, 0, 496, 0, 499, 500, 0, 0, 501, 0,
	502, 0, 0, 504, 505, 506, 0, 0, 507, 508,
	0, 0, 509, 0, 0, 510, 511, 503, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 0, 526, 527, 528, 0, 529,
	0, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 540, 541, 0, 542, 543, 545, 544,
	546, 0, 547, 0, 548, 549, 550, 0, 0, 0,
	0, 0, 551, 552, 554, 0, 555, 556, 557, 558,
	553, 559, 560, 561, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 0, 572, 0, 573,
	574, 581, 582, 583, 575, 576, 577, 584, 585, 586,
	587, 588, 0, 590, 591, 589, 592, 593, 594, 1407,
	595, 596, 578, 579, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 0, 0, 606, 0, 607, 608,
	609, 610, 611, 613, 580, 614, 619, 620, 0, 615,
	616, 617, 618, 0, 622, 623, 0, 624, 625, 0,
	621, 612, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 634, 0, 0, 0, 0, 0, 644, 0,
	635, 636, 637, 638, 0, 639, 0, 0, 640, 641,
	642, 643, 0, 645, 646, 0, 0, 647, 648, 649,
	651, 652, 650, 653, 0, 654, 0, 0, 655, 656,
	657, 0, 0, 0, 0, 659, 658, 660, 661, 0,
	662, 663, 1402, 0, 1404, 0, 664, 665, 0, 666,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 0, 0, 0, 0, 317, 318, 0, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 1406,
	344, 345, 346, 347, 348, 0, 349, 351, 0, 0,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 0, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 0, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 0, 0, 0, 404, 0, 405, 406, 407,
	408, 409, 410, 1401, 0, 0, 497, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 498, 421, 0, 0, 0,
	0, 0, 422, 423, 0, 0, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 0, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 0, 0,
	496, 0, 499, 500, 0, 0, 501, 0, 502, 0,
	0, 504, 505, 506, 0, 0, 507, 508, 0, 0,
	509, 0, 0, 510, 511, 503, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 0, 526, 527, 528, 0, 529, 0, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 540, 541, 0, 542, 543, 545, 544, 546, 0,
	547, 0, 548, 549, 550, 0, 0, 0, 0, 0,
	551, 552, 554, 0, 555, 556, 557, 558, 553, 559,
	560, 561, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 0, 572, 0, 573, 574, 581,
	582, 583, 575, 576, 577, 584, 585, 586, 587, 588,
	0, 590, 591, 589, 592, 593, 594, 1407, 595, 596,
	578, 579, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 0, 0, 606, 0, 607, 608, 609, 610,
	611, 613, 580, 614, 619, 620, 0, 615, 616, 617,
	618, 0, 622, 623, 0, 624, 625, 0, 621, 612,
	0, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	634, 0, 0, 0, 0, 0, 644, 0, 635, 636,
	637, 638, 0, 639, 0, 0, 640, 641, 642, 643,
	0, 645, 646, 0, 0, 647, 648, 649, 651, 652,
	650, 653, 0, 654, 0, 0, 655, 656, 657, 0,
	0, 0, 0, 659, 658, 660, 661, 0, 662, 663,
	2202, 0, 1404, 0, 664, 665, 0, 666, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	0, 0, 0, 0, 317, 318, 0, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 1406, 344, 345,
	346, 347, 348, 0, 349, 351, 0, 0, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 0, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 0, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	0, 0, 0, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 0, 0, 497, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 0, 498, 421, 0, 0, 0, 0, 0,
	422, 423, 0, 0, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 0, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 0, 0, 493, 494, 495, 0, 0, 496, 0,
	499, 500, 0, 0, 501, 0, 502, 0, 0, 504,
	505, 506, 0, 0, 507, 508, 0, 0, 509, 0,
	0, 510, 511, 503, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	0, 526, 527, 528, 0, 529, 0, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 540,
	541, 0, 542, 543, 545, 544, 546, 0, 547, 0,
	548, 549, 550, 0, 0, 0, 0, 0, 551, 552,
	554, 0, 555, 556, 557, 558, 553, 559, 560, 561,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 0, 572, 0, 573, 574, 581, 582, 583,
	575, 576, 577, 584, 585, 586, 587, 588, 0, 590,
	591, 589, 592, 593, 594, 1407, 595, 596, 578, 579,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	0, 0, 606, 0, 607, 608, 609, 610, 611, 613,
	580, 614, 619, 620, 0, 615, 616, 617, 618, 0,
	622, 623, 0, 624, 625, 0, 621, 612, 0, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 634, 0,
	0, 0, 0, 0, 644, 0, 635, 636, 637, 638,
	0, 639, 0, 0, 640, 641, 642, 643, 0, 645,
	646, 0, 0, 647, 648, 649, 651, 652, 650, 653,
	0, 654, 0, 0, 655, 656, 657, 0, 0, 0,
	0, 659, 658, 660, 661, 0, 662, 663, 2169, 0,
	1404, 0, 664, 665, 0, 666, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 0, 0,
	0, 0, 317, 318, 0, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 1406, 344, 345, 346, 347,
	348, 0, 349, 351, 0, 0, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 0, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 0,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 0, 0,
	0, 404, 0, 405, 406, 407, 408, 409, 410, 0,
	0, 0, 497, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 498, 421, 0, 0, 0, 0, 0, 422, 423,
	0, 0, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 0, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 0, 0, 496, 0, 499, 500,
	0, 0, 501, 0, 502, 0, 0, 504, 505, 506,
	0, 0, 507, 508, 0, 0, 509, 0, 0, 510,
	511, 503, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 0, 526,
	527, 528, 0, 529, 0, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 540, 541, 0,
	542, 543, 545, 544, 546, 0, 547, 0, 548, 549,
	550, 0, 0, 0, 0, 0, 551, 552, 554, 0,
	555, 556, 557, 558, 553, 559, 560, 561, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	0, 572, 0, 573, 574, 581, 582, 583, 575, 576,
	577, 584, 585, 586, 587, 588, 0, 590, 591, 589,
	592, 593, 594, 1407, 595, 596, 578, 579, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 0, 0,
	606, 0, 607, 608, 609, 610, 611, 613, 580, 614,
	619, 620, 0, 615, 616, 617, 618, 0, 622, 623,
	0, 624, 625, 0, 621, 612, 0, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 634, 0, 0, 0,
	0, 0, 644, 0, 635, 636, 637, 638, 0, 639,
	0, 0, 640, 641, 642, 643, 0, 645, 646, 0,
	0, 647, 648, 649, 651, 652, 650, 653, 0, 654,
	0, 0, 655, 656, 657, 0, 0, 0, 0, 659,
	658, 660, 661, 1404, 662, 663, 0, 0, 0, 0,
	664, 665, 0, 666, 667, 668, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 0, 309, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 0, 0, 0, 0, 317, 318, 0, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 1406, 344,
	345, 346, 347, 348, 0, 349, 351, 0, 0, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 0, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 0,
	0, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 0, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 0, 0, 0, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 0, 0, 497, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 498, 421, 0, 0, 0, 0,
	0, 422, 423, 0, 0, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 0, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 0, 0, 496,
	0, 499, 500, 0, 0, 501, 0, 502, 0, 0,
	504, 505, 506, 0, 0, 507, 508, 0, 0, 509,
	0, 0, 510, 511, 503, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 0, 526, 527, 528, 0, 529, 0, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	540, 541, 0, 542, 543, 545, 544, 546, 0, 547,
	0, 548, 549, 550, 0, 0, 0, 0, 0, 551,
	552, 554, 0, 555, 556, 557, 558, 553, 559, 560,
	561, 562, 563, 0, 564, 565, 566, 0, 567, 568,
	569, 570, 571, 0, 572, 0, 573, 574, 581, 582,
	583, 575, 576, 577, 584, 585, 586, 587, 588, 0,
	590, 591, 589, 592, 593, 594, 1407, 595, 596, 578,
	579, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 0, 0, 606, 0, 607, 608, 609, 610, 611,
	613, 580, 614, 619, 620, 0, 615, 616, 617, 618,
	0, 622, 623, 0, 624, 625, 0, 621, 612, 0,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 634,
	0, 0, 0, 0, 0, 644, 0, 635, 636, 637,
	638, 0, 639, 0, 0, 640, 641, 642, 643, 0,
	645, 646, 0, 0, 647, 648, 649, 651, 652, 650,
	653, 0, 654, 0, 0, 655, 656, 657, 0, 0,
	0, 0, 659, 658, 660, 661, 0, 662, 663, 0,
	0, 0, 0, 664, 665, 0, 666, 667, 668, 1903,
	1904, 0, 1936, 1937, 1938, 1947, 1948, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 1934, 0, 0, 0, 0, 0, 1903,
	1904, 1906, 1936, 1937, 1938, 1947, 1948, 1949, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 1934, 0, 0, 0, 0, 1959, 0,
	0, 1906, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 1925, 0, 0,
	0, 0, 0, 0, 0, 0, 1922, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 0,
	0, 0, 0, 0, 0, 0, 1922, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1928, 1929, 1930, 1931, 0, 0,
	0, 0, 0, 0, 1911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1928, 1929, 1930, 1931, 0, 0,
	0, 0, 0, 0, 1911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 1933, 1935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 1951, 1944, 0, 0, 1954, 0,
	0, 1920, 1921, 0, 0, 1933, 1935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1942,
	0, 0, 1950, 0, 1951, 0, 0, 0, 0, 0,
	0, 1920, 1921, 0, 1926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1942,
	0, 1903, 1904, 0, 1936, 1937, 1938, 1947, 1948, 1949,
	0, 0, 0, 0, 1926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 1934, 0, 0, 0, 0,
	0, 0, 1952, 1906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 1941, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 1952, 1956, 0, 0, 0, 0, 0, 1905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 1941, 0, 0, 0, 0, 0, 1922, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 1929, 1930, 1931,
	0, 0, 1945, 0, 1927, 0, 1911, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1903, 1904, 0, 1936, 1937, 1938, 1947, 1948,
	1949, 0, 1945, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1940, 1934, 1944, 0, 0,
	1954, 0, 0, 0, 1906, 0, 0, 1933, 1935, 0,
	0, 0, 0, 0, 1953, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 1951, 0, 0, 0,
	0, 1959, 0, 1920, 1921, 0, 0, 0, 0, 0,
	1905, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1925, 1942, 0, 0, 0, 0, 0, 0, 1943, 1922,
	0, 0, 0, 0, 0, 0, 1926, 0, 1917, 1918,
	1924, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908,
	1909, 1910, 1912, 1913, 0, 0, 0, 0, 1943, 4815,
	0, 0, 0, 0, 0, 0, 0, 0, 1917, 1918,
	1924, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908,
	1909, 1910, 1912, 1913, 1952, 0, 0, 0, 0, 4767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 1928, 1929, 1930,
	1931, 0, 0, 0, 0, 1956, 0, 1911, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1903, 1904, 0,
	1936, 1937, 1938, 1947, 1948, 1949, 0, 0, 1944, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 1933, 1935,
	1940, 1934, 0, 1932, 0, 0, 0, 0, 0, 1906,
	0, 0, 0, 0, 0, 1950, 0, 1951, 0, 1953,
	0, 0, 0, 0, 1920, 1921, 1927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 1942, 0, 0, 1905, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 1925, 0, 1926, 0, 0,
	0, 0, 0, 0, 1922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 1928, 1929, 1930, 1931, 0, 0, 0, 0,
	0, 0, 1911, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 0, 0,
	0, 4766, 0, 1944, 1932, 0, 1954, 0, 0, 0,
	0, 0, 0, 1933, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1927, 0, 0,
	1950, 0, 1951, 0, 0, 0, 0, 0, 0, 1920,
	1921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 0, 1942, 0, 1903,
	1904, 0, 1936, 1937, 1938, 1947, 1948, 1949, 0, 0,
	0, 0, 1926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 1934, 0, 0, 0, 0, 1958, 0,
	0, 1906, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	1952, 0, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 0,
	1941, 0, 0, 0, 0, 0, 1922, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914,
	1915, 1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 0,
	0, 0, 4576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1928, 1929, 1930, 1931, 0, 0,
	0, 0, 1927, 0, 1911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1903,
	1904, 0, 1936, 1937, 1938, 1947, 1948, 1949, 0, 0,
	1945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 1934, 0, 1944, 0, 0, 1954, 0,
	0, 1906, 0, 0, 0, 1933, 1935, 0, 0, 0,
	0, 1953, 0, 1958, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 1951, 0, 0, 0, 1959, 0,
	0, 1920, 1921, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 1942,
	0, 0, 0, 0, 0, 0, 1922, 0, 0, 0,
	0, 0, 0, 0, 1926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1917, 1918, 1924, 1946,
	1923, 1919, 0, 1916, 1914, 1915, 1907, 1908, 1909, 1910,
	1912, 1913, 1952, 0, 0, 0, 0, 4403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1941, 0, 1928, 1929, 1930, 1931, 0, 0,
	0, 0, 0, 1956, 1911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 1933, 1935, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 1951, 0, 0, 0, 0, 0,
	0, 1920, 1921, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1942,
	0, 1903, 1904, 0, 1936, 1937, 1938, 1947, 1948, 1949,
	0, 0, 1945, 0, 1926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 1934, 0, 0, 0, 0,
	0, 0, 0, 1906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 1952, 0, 0, 0, 0, 0, 0, 1905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 1941, 0, 0, 0, 0, 0, 1922, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1917, 1918,
	1924, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908,
	1909, 1910, 1912, 1913, 0, 0, 0, 0, 0, 4317,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 1929, 1930, 1931,
	0, 0, 0, 0, 1927, 0, 1911, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1903, 1904, 0, 1936, 1937, 1938, 1947, 1948, 1949,
	0, 0, 1945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 1934, 0, 1944, 0, 0,
	1954, 0, 0, 1906, 0, 0, 0, 1933, 1935, 0,
	0, 0, 0, 1953, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 1951, 0, 0, 0,
	1959, 0, 0, 1920, 1921, 0, 0, 0, 0, 1905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 1942, 0, 0, 0, 0, 0, 0, 1922, 0,
	0, 0, 0, 0, 0, 0, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1917, 1918,
	1924, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908,
	1909, 1910, 1912, 1913, 1952, 0, 0, 0, 0, 4316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 1928, 1929, 1930, 1931,
	0, 0, 0, 0, 0, 1956, 1911, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 1933, 1935, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 1951, 0, 0, 0,
	0, 0, 0, 1920, 1921, 0, 1927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1942, 0, 1903, 1904, 0, 1936, 1937, 1938, 1947,
	1948, 1949, 0, 0, 1945, 0, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1940, 1934, 0, 0,
	0, 0, 0, 0, 0, 1906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 1952, 0, 0, 0, 0, 0,
	0, 1905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1925, 0, 0, 1941, 0, 0, 0, 0, 0,
	1922, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 0, 0,
	0, 4315, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1928, 1929,
	1930, 1931, 0, 0, 0, 0, 1927, 0, 1911, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1903, 1904, 0, 1936, 1937, 1938, 1947,
	1948, 1949, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1940, 1934, 0, 1944,
	0, 0, 1954, 0, 0, 1906, 0, 0, 0, 1933,
	1935, 0, 0, 0, 0, 1953, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 1951, 0,
	0, 0, 1959, 0, 0, 1920, 1921, 0, 0, 0,
	0, 1905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1925, 0, 1942, 0, 0, 0, 0, 0, 0,
	1922, 0, 0, 0, 0, 0, 0, 0, 1926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 1952, 0, 0, 0,
	0, 3946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 0, 1928, 1929,
	1930, 1931, 0, 0, 0, 0, 0, 1956, 1911, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 1933,
	1935, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 1951, 0,
	0, 0, 0, 0, 0, 1920, 1921, 0, 1927, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1942, 0, 1903, 1904, 0, 1936, 1937,
	1938, 1947, 1948, 1949, 0, 0, 1945, 0, 1926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 1934,
	0, 0, 0, 0, 0, 0, 0, 1906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 1952, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 0, 0, 1941, 0, 0, 0,
	0, 0, 1922, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1917, 1918, 1924, 1946, 1923, 1919, 0, 1916,
	1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913, 0, 0,
	0, 0, 0, 3425, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 1929, 1930, 1931, 0, 0, 0, 0, 1927, 0,
	1911, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1903, 1904, 0, 1936, 1937,
	1938, 1947, 1948, 1949, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 1934,
	0, 1944, 0, 0, 1954, 0, 0, 1906, 0, 0,
	0, 1933, 1935, 0, 0, 0, 0, 1953, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	1951, 0, 0, 0, 1959, 0, 0, 1920, 1921, 0,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 0, 1942, 0, 0, 0, 0,
	0, 0, 1922, 0, 0, 0, 0, 0, 0, 0,
	1926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1917, 1918, 1924, 1946, 1923, 1919, 0, 1916,
	1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913, 1952, 0,
	0, 0, 0, 3424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1941, 0,
	1928, 1929, 1930, 1931, 0, 0, 0, 0, 0, 1956,
	1911, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 1933, 1935, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	1951, 0, 0, 0, 0, 0, 0, 1920, 1921, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1942, 0, 1903, 1904, 0,
	1936, 1937, 1938, 1947, 1948, 1949, 0, 0, 1945, 0,
	1926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 1934, 0, 0, 0, 0, 0, 0, 0, 1906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 1958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 1952, 0,
	0, 0, 0, 0, 0, 1905, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 1941, 0,
	0, 0, 0, 0, 1922, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1917, 1918, 1924, 1946, 1923, 1919,
	0, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913,
	0, 0, 0, 0, 0, 3423, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1928, 1929, 1930, 1931, 0, 0, 0, 0,
	1927, 0, 1911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1903, 1904, 0,
	1936, 1937, 1938, 1947, 1948, 1949, 0, 0, 1945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 1934, 0, 1944, 0, 0, 1954, 0, 0, 1906,
	0, 0, 0, 1933, 1935, 0, 0, 0, 0, 1953,
	0, 1958, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 1951, 0, 0, 0, 1959, 0, 0, 1920,
	1921, 0, 0, 0, 0, 1905, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1925, 0, 1942, 0, 2281,
	0, 0, 0, 0, 1922, 0, 0, 0, 0, 0,
	0, 0, 1926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1917, 1918, 1924, 1946, 1923, 1919,
	0, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913,
	1952, 0, 0, 0, 0, 3422, 0, 0, 0, 0,
	0, 2279, 0, 0, 0, 0, 0, 0, 0, 0,
	1941, 0, 1928, 1929, 1930, 1931, 0, 0, 0, 0,
	0, 1956, 1911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 1933, 1935, 0, 0, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 1951, 0, 0, 0, 0, 0, 0, 1920,
	1921, 0, 1927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1942, 0, 1903,
	1904, 0, 1936, 1937, 1938, 1947, 1948, 1949, 0, 0,
	1945, 0, 1926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 1934, 0, 0, 0, 0, 0, 0,
	0, 1906, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 1958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	1952, 0, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 0,
	1941, 0, 0, 0, 0, 0, 1922, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1917, 1918, 1924, 1946,
	1923, 1919, 0, 1916, 1914, 1915, 1907, 1908, 1909, 1910,
	1912, 1913, 0, 0, 0, 3387, 0, 0, 2280, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1928, 1929, 1930, 1931, 0, 0,
	0, 0, 1927, 0, 1911, 5066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1903,
	1904, 0, 1936, 1937, 1938, 1947, 1948, 1949, 0, 0,
	1945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 1934, 0, 1944, 0, 0, 1954, 0,
	0, 1906, 0, 0, 0, 1933, 1935, 0, 0, 0,
	0, 1953, 0, 1958, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 2278, 1951, 0, 0, 0, 1959, 0,
	0, 1920, 1921, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 1942,
	0, 0, 0, 0, 0, 0, 1922, 0, 0, 0,
	0, 0, 0, 0, 1926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1917, 1918, 1924, 1946,
	1923, 1919, 0, 1916, 1914, 1915, 1907, 1908, 1909, 1910,
	1912, 1913, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1941, 0, 1928, 1929, 1930, 1931, 0, 0,
	0, 0, 0, 1956, 1911, 0, 3487, 0, 0, 0,
	0, 0, 3486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 1933, 1935, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 1951, 0, 0, 0, 0, 0,
	0, 1920, 1921, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 0, 1926, 0, 0, 1903, 1904, 0,
	1936, 1937, 1938, 1947, 1948, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 1934, 0, 0, 0, 1958, 3358, 0, 0, 1906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 1941, 0, 0, 1905, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 1922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1917, 1918,
	1924, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908,
	1909, 1910, 1912, 1913, 3359, 0, 0, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 1928, 1929, 1930, 1931, 0, 0, 0, 0,
	0, 0, 1911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2882, 0, 0, 0, 0,
	0, 0, 1903, 1904, 0, 1936, 1937, 1938, 1947, 1948,
	1949, 0, 0, 1944, 0, 1958, 1954, 0, 0, 0,
	0, 0, 0, 1933, 1935, 1940, 1934, 0, 0, 0,
	2881, 0, 0, 0, 1906, 0, 0, 0, 0, 0,
	1950, 0, 1951, 0, 1953, 0, 0, 0, 0, 1920,
	1921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 1942, 0, 0,
	1905, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1925, 0, 1926, 0, 0, 0, 0, 0, 1943, 1922,
	0, 0, 0, 0, 0, 0, 0, 0, 1917, 1918,
	1924, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908,
	1909, 1910, 1912, 1913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 1928, 1929, 1930,
	1931, 0, 0, 0, 0, 0, 0, 1911, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1903, 1904, 0, 1936, 1937, 1938, 1947,
	1948, 1949, 0, 0, 0, 0, 0, 2348, 0, 0,
	0, 0, 0, 0, 0, 0, 1940, 1934, 1944, 1932,
	0, 1954, 0, 0, 0, 1906, 0, 0, 1933, 1935,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 1927, 0, 0, 1950, 0, 1951, 0, 0,
	0, 0, 1959, 0, 1920, 1921, 0, 0, 0, 0,
	0, 1905, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1925, 1942, 0, 0, 0, 0, 0, 0, 0,
	1922, 0, 0, 0, 0, 0, 0, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2349, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 0, 0, 1928, 1929,
	1930, 1931, 0, 0, 0, 0, 1956, 0, 1911, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1917, 1918, 1924, 1946,
	1923, 1919, 0, 1916, 1914, 1915, 1907, 1908, 1909, 1910,
	1912, 1913, 0, 0, 0, 0, 0, 0, 0, 1944,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 1933,
	1935, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 1951, 0,
	0, 0, 0, 0, 0, 1920, 1921, 1927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1942, 0, 1903, 1904, 0, 1936, 1937,
	1938, 1947, 1948, 1949, 0, 1945, 0, 0, 1926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 1934,
	0, 0, 0, 0, 0, 1903, 1904, 1906, 1936, 1937,
	1938, 1947, 1948, 1949, 0, 0, 0, 1953, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 1934,
	0, 0, 0, 0, 1959, 0, 1952, 1906, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 1925, 0, 0, 1941, 0, 0, 0,
	0, 0, 1922, 0, 1959, 0, 0, 1956, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 0, 0, 0, 0, 0, 0,
	0, 1943, 1922, 0, 0, 0, 0, 0, 0, 0,
	0, 1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914,
	1915, 1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 0,
	0, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 1929, 1930, 1931, 0, 0, 0, 0, 1927, 0,
	1911, 0, 4671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 1929, 1930, 1931, 0, 0, 1945, 0, 0, 0,
	1911, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 1933, 1935, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	1951, 1944, 0, 0, 1954, 0, 0, 1920, 1921, 0,
	0, 1933, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1942, 0, 0, 1950, 0,
	1951, 0, 0, 0, 0, 0, 0, 1920, 1921, 0,
	1926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	1926, 0, 1917, 1918, 1924, 1946, 1923, 1919, 0, 1916,
	1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1941, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1941, 1142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 0,
	1927, 1903, 1904, 0, 1936, 1937, 1938, 1947, 1948, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 1934, 0, 0, 1945, 0,
	0, 1958, 0, 1906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1958, 0, 0, 0, 0, 0, 0, 0, 1905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 0, 0, 0, 0, 0, 0, 1922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1917, 1918, 1924, 1946, 1923, 1919,
	0, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1917, 1918, 1924, 1946, 1923, 1919,
	0, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913,
	0, 0, 0, 0, 0, 0, 1928, 1929, 1930, 1931,
	0, 0, 0, 0, 0, 0, 1911, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1903, 1904, 0, 1936, 1937, 1938, 1947, 1948, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 1934, 0, 1944, 0, 0,
	1954, 0, 0, 1906, 0, 0, 0, 1933, 1935, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 1951, 0, 0, 0,
	1959, 0, 0, 1920, 1921, 0, 0, 0, 0, 1905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 1942, 0, 0, 0, 0, 0, 0, 1922, 0,
	0, 0, 0, 0, 0, 0, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1903, 1904, 0, 1936, 1937, 1938,
	1947, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1940, 1934, 0,
	0, 0, 0, 0, 1952, 0, 1906, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 1928, 1929, 1930, 1931,
	0, 0, 0, 1959, 0, 1956, 1911, 0, 0, 0,
	0, 0, 1905, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1925, 0, 0, 0, 0, 0, 0, 0,
	0, 1922, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 1933, 1935, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 1951, 0, 0, 0,
	0, 0, 0, 1920, 1921, 0, 1927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 1928,
	1929, 1930, 1931, 0, 1945, 0, 1926, 0, 0, 1911,
	0, 4139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1903, 1904, 0, 1936, 1937, 1938,
	1947, 1948, 1949, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1940, 1934, 0,
	1944, 0, 0, 1954, 1952, 4448, 1906, 0, 0, 0,
	1933, 1935, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 1950, 0, 1951,
	0, 0, 0, 1959, 0, 1956, 1920, 1921, 0, 0,
	0, 0, 1905, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1925, 0, 1942, 0, 0, 0, 0, 0,
	1943, 1922, 0, 0, 0, 0, 0, 0, 0, 1926,
	1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1927, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1941, 0, 1928,
	1929, 1930, 1931, 0, 1945, 0, 0, 0, 1956, 1911,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 0, 0, 1954, 0, 4140, 0, 0, 0, 0,
	1933, 1935, 0, 0, 0, 0, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1950, 0, 1951,
	0, 0, 0, 0, 0, 0, 1920, 1921, 0, 1927,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 1945, 0, 1926,
	1917, 1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915,
	1907, 1908, 1909, 1910, 1912, 1913, 0, 1903, 1904, 0,
	1936, 1937, 1938, 1947, 1948, 1949, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 1934, 0, 0, 0, 0, 0, 1952, 0, 1906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 1956, 0,
	0, 0, 0, 0, 0, 1905, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 1943, 1922, 0, 0, 0, 0, 0,
	0, 0, 0, 1917, 1918, 1924, 1946, 1923, 1919, 0,
	1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913, 0,
	0, 0, 0, 0, 0, 0, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1927,
	0, 0, 0, 0, 0, 0, 0, 1903, 1904, 0,
	1936, 1937, 1938, 1947, 1948, 1949, 0, 0, 0, 0,
	0, 0, 1928, 1929, 1930, 1931, 0, 1945, 0, 0,
	1940, 1934, 1911, 0, 0, 3488, 0, 0, 0, 1906,
	3493, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 3927, 1944, 0, 1905, 1954, 0, 0, 0,
	0, 0, 0, 1933, 1935, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 1922, 0, 0, 0, 0, 0,
	1950, 0, 1951, 0, 0, 0, 0, 0, 0, 1920,
	1921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1942, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 1926, 1917, 1918, 1924, 1946, 1923, 1919, 0,
	1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1928, 1929, 1930, 1931, 0, 0, 0, 0,
	0, 0, 1911, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 1944, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 1933, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 1951, 0, 0, 0, 0, 0, 0, 1920,
	1921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1942, 0, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1926, 0, 0, 0, 0, 0, 0, 0,
	1903, 1904, 1927, 1936, 1937, 1938, 1947, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1940, 1934, 0, 0, 0, 0, 0,
	1945, 0, 1906, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1941, 0, 0, 1958, 0, 0, 0, 0, 1905, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 1925, 0,
	0, 0, 0, 0, 0, 0, 0, 1922, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1917, 1918, 1924, 1946,
	1923, 1919, 1927, 1916, 1914, 1915, 1907, 1908, 1909, 1910,
	1912, 1913, 0, 0, 0, 1928, 1929, 1930, 1931, 0,
	0, 0, 0, 0, 0, 1911, 0, 0, 0, 0,
	1945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 0, 0, 1944, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 1933, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1950, 0, 1951, 0, 0, 0, 0,
	0, 0, 1920, 1921, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1926, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1917, 1918, 1924, 1946,
	1923, 1919, 0, 1916, 1914, 1915, 1907, 1908, 1909, 1910,
	1912, 1913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1903,
	1904, 0, 1936, 1937, 1938, 1947, 1948, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 1934, 0, 0, 0, 3426, 0, 0,
	0, 1906, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 1903, 1904, 1959, 1936,
	1937, 1938, 1947, 1948, 1949, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 1940,
	1934, 0, 0, 1945, 0, 0, 1922, 0, 1906, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1958, 0, 0, 0,
	0, 0, 0, 0, 1905, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1925, 0, 0, 0, 0, 0,
	0, 0, 0, 1922, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1928, 1929, 1930, 1931, 0, 0,
	0, 0, 0, 0, 1911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1917,
	1918, 1924, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907,
	1908, 1909, 1910, 1912, 1913, 1944, 0, 0, 1954, 0,
	0, 1928, 1929, 1930, 1931, 1933, 1935, 0, 0, 0,
	0, 1911, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 1951, 0, 0, 0, 0, 0,
	0, 1920, 1921, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1942,
	0, 0, 1944, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 1933, 1935, 1926, 0, 0, 1903, 1904, 0,
	1936, 1937, 1938, 1947, 1948, 1949, 0, 0, 0, 1950,
	0, 1951, 0, 0, 0, 0, 0, 0, 1920, 1921,
	1940, 1934, 0, 0, 0, 0, 0, 0, 0, 1906,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 1953,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 1926, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 1941, 0, 0, 1905, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 1922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 1928, 1929, 1930, 1931, 0, 0, 0, 0,
	0, 0, 1911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1927, 0, 1944, 0, 1958, 1954, 0, 0, 0,
	0, 0, 0, 1933, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1945,
	1950, 0, 1951, 0, 0, 0, 0, 0, 0, 1920,
	1921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1942, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1926, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1917, 1918,
	1924, 1946, 1923, 1919, 0, 1916, 1914, 1915, 1907, 1908,
	1909, 1910, 1912, 1913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 2452, 0,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	1941, 0, 0, 0, 0, 1917, 1918, 1924, 1946, 1923,
	1919, 1956, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912,
	1913, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1903, 1904, 0, 1936,
	1937, 1938, 1947, 1948, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1940,
	1934, 0, 0, 0, 0, 0, 0, 0, 1906, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1927, 1903, 1904, 1959, 1936, 1937, 1938, 1947,
	1948, 1949, 0, 0, 1905, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1925, 0, 0, 1934, 0, 0,
	1945, 0, 0, 1922, 0, 1906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1958, 0, 0, 0, 0, 0, 0,
	0, 1905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1925, 0, 0, 0, 0, 0, 0, 0, 0,
	1922, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 1929, 1930, 1931, 0, 0, 0, 0, 0,
	0, 1911, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1917, 1918, 1924, 1946,
	1923, 1919, 0, 1916, 1914, 1915, 1907, 1908, 1909, 1910,
	1912, 1913, 1944, 0, 0, 1954, 0, 0, 1928, 1929,
	1930, 1931, 1933, 1935, 0, 0, 0, 0, 1911, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 1951, 0, 0, 0, 0, 0, 0, 1920, 1921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 1944,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 1933,
	1935, 1926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 1951, 0,
	0, 0, 0, 0, 0, 1920, 1921, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1942, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1927, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1945,
	0, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1917, 1918, 1924, 1946, 1923,
	1919, 0, 1916, 1914, 1915, 1907, 1908, 1909, 1910, 1912,
	1913, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1917, 1918, 1924, 1946, 1923, 1919, 0, 1916,
	1914, 1915, 1907, 1908, 1909, 1910, 1912, 1913,
}

var sqlPact = [...]int{
	14337, -1000, -1000, -1000, -1000, 172, -1000, -1000, 171, 167,
	165, 163, 159, 158, 157, 156, 155, 154, 153, -1000,
	-1000, 152, 150, 149, -1000, -1000, 148, -1000, -1000, 147,
	-1000, 146, 145, 144, -1000, -1000, 140, -1000, 139, -1000,
	-1000, -1000, -1000, 135, 134, 132, 96098, 95520, 96674, 2342,
	122070, 104750, 2303, 85128, 121492, 84550, 120914, 2132, 11044, 120336,
	2840, 131, -1000, 119758, 129, 128, 127, -1000, 104172, 119180,
	101862, 1926, -1000, 126, -1000, 2370, 74100, 125, 124, 118,
	117, 3138, 116, -1000, 114, 112, -1000, -1000, 111, -1000,
	12545, 1532, -1000, 109, 108, -1000, 5320, 101284, 107, 106,
	105, 2736, 103, 102, 71215, 101, 100, 95, 2665, 2968,
	-1000, -1000, 2151, -1000, -1000, 94, 93, 92, 87, 85,
	84, 83, 82, 81, 80, 75, 73, 71, -1000, 70,
	68, 65, 64, 63, -1000, 61, 60, 56, -1000, 53,
	-1000, 52, 49, 48, 47, 45, 44, 40, 39, 37,
	36, 35, 34, 33, 32, 31, 18498, -1000, -1000, 28,
	1884, 1692, 1691, 1690, 1689, 1682, 967, 27, 25, 24,
	23, 22, 21, 20, 19, 17, 14, 13, 12, 11,
	9, 6, 5, 3, 2, 0, -4, 133, -7, -8,
	-9, -10, -15, -17, -21, 5376, 3620, -1000, 1520, 938,
	32965, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 130710, 122646,
	-23, -97, -24, -1000, 3412, 1015, 59026, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 219, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 434, 2802, 702, -1000, -1000, -1000, 118602,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2341, -67,
	-1000, 2032, -1000, -1000, -1000, -1000, -1000, 699, -1000, 2340,
	2259, 340, 2255, -1000, -1000, -1000, 3485, 2515, 3889, 3888,
	3887, 3885, 3881, 130134, 1925, 3878, 2590, 3877, 3875, 3874,
	3867, 3865, 3864, 3863, -1000, 94942, 1063, 94364, 93786, 3505,
	118026, 93208, 117448, 133020, 50791, 846, 3482, -1000, -1000, -1000,
	-1000, -1000, -1000, 122646, -1000, 1061, -1000, -1000, 3862, 2184,
	698, 103594, -1000, -1000, 116870, 2225, -1000, -1000, -1000, 906,
	1175, 35329, 35329, 35329, 217, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3495, -1000, -1000, -1000, -1000, 122646, 2791, 2791,
	1364, 1369, 1369, 2791, 2791, -1000, -1000, -1000, -1000, -1000,
	-1000, 3861, 3857, 3856, 3854, 3853, -1000, -1000, 83972, 25680,
	83394, 82816, 116292, 50200, 92630, 92052, 3852, 3851, 3850, 49609,
	78770, 115714, 132442, 3619, 3613, 1059, 2029, 1497, -1000, -1000,
	-1000, -1000, -1000, -1000, -45, 75828, 3667, 122646, -1000, 215,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 49018, 671, 48427,
	607, 47836, 381, 115136, -1000, -1000, -1000, -1000, 78182, -1000,
	114558, 2514, 3849, 3843, 1140, 3841, 3347, 1757, 3840, 1905,
	1225, 3835, 3834, 3828, 3827, 3826, 3824, 3823, 1447, 113980,
	3042, 1549, 113402, 1754, 131864, 1058, 91474, 96674, 2702, 112824,
	1377, 1352, -1000, -1000, -1000, -1000, 3156, 2929, 2920, 1342,
	-1000, -1000, -1000, -1000, 62511, 9060, 8358, -1000, -1000, 11931,
	112246, 65441, 96674, 96674, -1000, -1000, -1000, -1000, -1000, -1000,
	47245, 605, 46654, 814, 111668, -1000, -1000, 63097, 2994, 1095,
	-1000, -1000, -1000, -1000, -1000, 111090, 46063, 476, 45472, 725,
	122646, -1000, 3041, 1887, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2715, 1645, 3659, 2784, 77594, 2110, 1459,
	3449, 3149, 3141, 1547, 1999, 3139, 3822, 2622, 3133, 3122,
	3121, 3120, 3095, 1350, 2652, 451, 2649, 32374, 3032, 1739,
	44881, 1522, 1523, 3089, 3056, 3691, 1967, 2078, 2106, 2070,
	82238, 3821, 3815, 3419, 3055, 3048, 2836, 3046, -1000, 2993,
	1376, 214, -1000, -1000, -1000, -1000, -1000, -1000, 1469, -1000,
	-1000, -1000, -1000, -1000, 86856, -1000, -1000, 1393, -1000, -1000,
	1393, -1000, -1000, -1000, -1000, -1000, 1300, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1520, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2680, -1000, 2135, -1000, -1000, -1000, 2547, 3366,
	3366, 3366, 3481, 409, 408, -1000, 133, -1000, -1000, 142146,
	-1000, -1000, 51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382,
	2142, -1000, 695, -1000, -1000, 737, -1000, 694, 616, 544,
	-1000, -1000, -1000, -1000, -1000, -1000, 693, -1000, -1000, -1000,
	-1000, -1000, -1000, 3667, -1000, 28691, -1000, -1000, -1000, 443,
	691, 51382, -1000, -1000, 3711, 3710, 961, -1000, 212, 950,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3040, 687, 686, -1000, 684, 682, 681, 672,
	670, -1000, 669, -1000, 668, 662, 651, 650, 644, 639,
	638, 637, -1000, 2055, -1000, -1000, -1000, -1000, -1000, -1000,
	603, 602, 602, 602, -1000, 1049, -1000, -1000, -1000, 308,
	589, 257, 582, 574, 573, -1000, 635, 632, 631, 630,
	629, 628, 627, 626, 622, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1048, -1000, -1000, -1000, -1000, -46, 122646, -1000,
	434, -46, -1000, -1000, 619, -1000, 37120, 37120, 37120, -1000,
	-1000, 2338, 51382, -1000, 2704, -1000, -37, -37, 873, 60760,
	-1000, 57870, 873, 304, 756, 66597, -1000, 2987, -1000, -1000,
	618, 210, -1000, -1000, -1000, -1000, 26266, 2983, 122646, 122646,
	122646, 96674, 96674, 96674, 122646, 3814, 3813, 3233, 51382, -1000,
	-1000, 73522, 134749, 97250, -1000, -1000, 3597, 71791, 72946, 3038,
	134749, 3037, 134176, 3812, -1000, -1000, -1000, -1000, -1000, 3207,
	3808, 3806, 3803, -1000, 122646, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 241, 3202, -1000, -1000, 100706, 241, 3201, -1000,
	241, 3200, -1000, 100130, -1000, -1000, 2280, 3198, -1000, -1000,
	258, 3197, -1000, -1000, -1000, 244, 3194, -1000, -1000, 207,
	-137, 3190, -1000, -1000, -1000, -1000, -1000, -1000, 142146, -1000,
	-1000, -1000, 133598, -1000, 3411, -1000, 122646, -1000, 51382, -1000,
	-1000, 3596, 1495, 3406, 3525, -1000, -1000, -54, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2565, 2578, 1139, 2391, -1000,
	3242, 1567, 35329, 3335, -1000, -1000, -1000, -1000, -1000, 206,
	26266, 2928, -1000, -1000, 122646, -1000, 122646, 2791, 2791, -1000,
	-1000, -1000, 3683, 3682, 2791, 2791, 122646, 122646, -1000, -1000,
	-1000, -1000, -1000, -1000, 4036, 3187, 1569, -1000, 2385, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2013, 3186,
	-1000, 2460, 3182, 1922, -1000, -1000, 1737, -1000, 138336, 1384,
	-1000, -1000, -1000, -1000, 2227, 3181, -36, -1000, -1000, 2315,
	-1000, -1000, -1000, -1000, 139482, -1000, 2974, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1981, -1000, 1283, 3180,
	-1000, 2783, 2783, 90896, 3195, 64855, 63097, 75828, -49, -1000,
	-1000, -1000, -1000, -255, -1000, 25088, 142146, -1000, -1000, -1000,
	-1000, 1791, 142146, 888, -1000, -1000, 3178, -1000, 142146, 882,
	-1000, -1000, 3174, -1000, 2651, -1000, 3036, -1000, -1000, 2458,
	2457, 1000, -1000, 3802, -1000, -1000, 3801, -1000, 3800, 3799,
	3798, -1000, 1628, 2016, 3796, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 90320, 2337, -1000, -1000, 88586, 3035, -1000,
	2455, 3523, -1000, 89742, 1057, -1000, 982, 2453, -1000, 99554,
	998, 2452, -1000, 3793, 3502, 2738, 982, 2450, -1000, -1000,
	-1000, -1000, -1000, 987, -1000, 68905, -1000, 68905, -1000, 1623,
	-1000, 129558, -37, 96674, 3667, -1000, -92, -1000, -1000, -1000,
	1015, -1000, 61933, -1000, 61933, 103016, 79356, 971, 2980, 70637,
	141915, -1000, 997, -1000, -1000, 142146, -1000, -1000, -1000, 2650,
	-1000, -179, 2782, -1000, 79356, 64269, 2978, 2644, -1000, 142146,
	-1000, -1000, -1000, -1000, 142146, -1000, -1000, -1000, 79356, 88586,
	-1000, 110512, 89164, -1000, -1000, 1373, 2626, -1000, -1000, -1000,
	79356, 1289, 79356, 79356, 79356, -1000, 109934, -1000, -1000, 2125,
	1306, 3401, 2097, 96674, -1000, 1886, -1000, -1000, -1000, 3436,
	3191, 122646, -1000, -1000, 3033, -1000, 75252, 98978, -1000, 98402,
	-1000, 97826, -1000, 96674, -1000, 96674, -1000, 3791, 3790, 3789,
	-1000, -1000, 3788, -1000, 3787, 3426, -1000, 717, 44290, 142146,
	3424, -1000, 3786, 2020, 3032, 142146, -1000, 3166, 1696, 1694,
	122646, -1000, -1000, 122646, -1000, 122646, -1000, -1000, -1000, 1554,
	-1000, -1000, 2556, -1000, -1000, -1000, 996, -1000, -1000, 96674,
	96674, 96674, 96674, 1211, -1000, 43699, -1000, -1000, 3078, 3785,
	1643, -1000, 1861, -1000, 2975, 3414, -1000, 1348, 1801, 203,
	3714, -1000, -1000, 259, -1000, -1000, -54, -1000, 128982, -1000,
	2547, -1000, 122646, -1000, 2558, 3018, 3029, 1697, 2371, 2657,
	-1000, 43108, 2620, 54928, 2382, 133, -1000, -1000, 133, 133,
	34147, -1000, -1000, 71791, 71791, 26266, 1287, 51382, 51382, 51382,
	51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382,
	51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382,
	51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382,
	51382, 51382, 51382, 2141, 51382, 1297, 51382, 51382, 51382, 51382,
	1977, -1000, -1000, 1978, 464, 2069, 616, -1000, -1000, -1000,
	3660, 3660, 3660, 2264, 2264, 2264, 142592, 142592, 578, 3783,
	737, -1000, 51382, -1000, 69, 61338, 51382, 26854, -1000, 408,
	7730, 2473, -1000, 404, 27475, -1000, -1000, -1000, 28691, 544,
	42487, 51382, 1023, 142146, -1000, -1000, 1594, 3679, 24496, 3019,
	2829, 615, 841, 836, 31753, 31132, 30511, 29890, 833, 831,
	51382, 51382, 51382, 51382, 51382, 51382, 51382, 51382, -1000, -1000,
	3681, -1000, 3679, -1000, -1000, -1000, -1000, 3679, 1280, 1277,
	3679, -1000, 3679, 3679, 9782, 9782, 41896, 41305, 40714, 55519,
	40123, 51382, 29299, 39532, 38941, -1000, 122646, -46, 3595, 51382,
	255, -1000, 139291, -1000, 255, 255, 614, -98, 142146, 2597,
	2597, 59604, 2513, 2158, 2158, 2158, -1000, 873, 19130, 873,
	108206, 2169, 873, 873, 201, 234, 402, 57292, 2704, 108206,
	719, 612, -25, -26, -28, -1000, -1000, -30, -31, -1000,
	-1000, 96674, 611, 26854, 26266, 198, 2065, -101, 2667, 2666,
	-1000, 2663, 2662, -1000, 2660, 2333, -1000, -1000, -1000, 1845,
	-103, 1292, 96674, 122646, 1336, 3781, -106, -1000, 8263, -104,
	-1000, 1343, 195, 3679, -1000, -1000, -1000, -1000, -1000, 3780,
	3779, -1000, 1041, 609, 604, 501, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 603, 602, 602, 602, -1000, 308,
	589, 257, 582, 574, 573, -1000, -1000, -1000, -1000, -1000,
	2972, 96674, 122646, 1323, 3778, 85704, -137, 97250, -88, -1000,
	-1000, 122646, -1000, -1000, -1000, 3777, -1000, 96674, -1000, -1000,
	96674, 241, 3172, -1000, 96674, -1000, 96674, 240, 3171, -1000,
	-1000, 122646, -1000, 96674, 96674, -1000, 122646, 122646, 122646, 134749,
	134749, 233, -1000, 96674, 854, -109, 1151, -54, -1000, -1000,
	-1000, -1000, 1393, -1000, 1762, -1000, -1000, -1000, -1000, -1000,
	-1000, 1453, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	961, -1000, -1000, -1000, -1000, 3677, 3671, -47, -1000, -1000,
	26266, -1000, 1873, -1000, -1000, -1000, -1000, 122646, 122646, -1000,
	-1000, 122646, 122646, -1000, -1000, -58, 1655, 532, 1285, -1000,
	81660, 2387, 3417, 3775, 2731, 3388, 1615, -1000, 1553, 564,
	-1000, 3511, 86856, 3536, 3577, 1309, -1000, 2971, -1000, -1000,
	-1000, 905, 1635, 1781, 1281, 1279, 86856, 2460, -1000, 71791,
	-1000, 2691, 3479, 1369, 1417, 1369, 1369, 1414, -1000, 86856,
	1779, 1278, 1274, 1253, -1000, -1000, 1951, 1942, -1000, -1000,
	109358, -1000, 1252, 1249, 3612, 2680, 2220, 769, 1936, -1000,
	1316, 1248, 2969, -1000, -1000, -60, 3535, 3576, 1309, -1000,
	2965, 1246, -1000, -1000, -1000, 3478, 96674, 26266, 1600, 1599,
	1593, 1774, 1244, -48, -1000, 3532, 3255, -1000, 88586, 88586,
	3627, 79356, -1000, 2484, 1241, 1235, -1000, 1042, 6613, 3293,
	-1000, 134749, 1042, 1042, 1883, 3167, 2767, 1634, -1000, 2776,
	837, 2775, -1000, -1000, -1000, 837, -49, 75828, 122646, 189,
	-1000, 69, 51382, 51382, 69, 51382, 69, -1000, 3510, 3163,
	3161, 3773, -1000, -1000, -1000, -1000, -1000, 3772, 1964, 2582,
	-1000, -1000, 561, 2447, 2955, 122646, 2695, -51, 96674, -1000,
	74676, 3155, 134749, 2460, 2445, -1000, -1000, 88010, -1000, 3152,
	434, 2437, -1000, 663, 3771, 3151, -1000, 128406, -1000, 3411,
	1319, 3146, 1093, 613, 3593, -1000, 613, 69481, -1000, 122646,
	-1000, -37, 6452, 80508, -110, -111, 401, -1000, 108782, 122646,
	122646, 3323, 1979, 1968, -1000, 977, 63097, -1000, 63097, -112,
	-1000, -179, 2774, 1525, 63097, -1000, 971, 971, 837, -1000,
	837, -1000, 96674, 3027, -1000, -1000, 79356, 971, 971, 971,
	-1000, -1000, -1000, -1000, 3769, 3768, 3765, 3764, -1000, -1000,
	980, 96674, 122646, 96674, -1000, -1000, 1625, -1000, 186, -1000,
	134749, -1000, 134749, 122646, 96674, -1000, 980, 122646, 980, 122646,
	980, 122646, 980, 980, -1000, -1000, -1000, -1000, -1000, 69,
	-1000, -1000, 142146, -1000, 51382, -1000, -1000, 1550, 3763, 1647,
	-1000, 3025, -1000, 3021, -1000, 8, -1000, -1000, 1890, -1000,
	3709, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3761,
	142146, -1000, 2100, -1000, -1000, -1000, -1000, 96674, 96674, 96674,
	96674, 122646, 3290, -1000, 122646, 3282, 96674, -1000, 3713, -1000,
	-1000, 86856, -1000, 2558, 3018, -1000, -1000, -1000, -1000, -1000,
	-1000, 1577, 2276, -1000, 2627, -1000, 1579, -1000, -1000, -1000,
	142146, 56110, -1000, -1000, 142146, 1825, -1000, 54337, 53746, -1000,
	-1000, 1734, 96674, 2701, -1000, 2701, -89, -1000, 139086, 2624,
	96674, -1000, -1000, -1000, -1000, -1000, 904, 654, 654, 1421,
	1421, 1421, 1421, 3517, 748, 1250, 345, 6188, 6188, 7420,
	7420, 7420, 7420, 7420, 6188, 666, 2264, 2264, 666, 666,
	666, 666, 666, 2264, 2264, 2264, 6188, 6188, 6188, 2264,
	142592, 142535, 9965, 51382, 51382, 1233, 1962, 464, 9901, 51382,
	11092, 11092, 11092, 11092, -1000, 2121, -1000, -1000, -1000, -1000,
	2951, 560, 55519, 55519, -1000, -1000, -1000, -1000, 28083, 51382,
	-1000, -1000, -1000, -1000, 38320, -1000, -1000, 138146, -327, 398,
	-1000, 183, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 397, -87, -13, -1000, 51382,
	51382, 51382, 388, -1000, 181, 51382, 122646, -1000, 17150, 716,
	-132, -1000, -117, 1439, -1000, 51382, -1000, -1000, 1231, -1000,
	1228, 1226, 1221, -1000, 559, 387, -1000, 180, -1000, 2146,
	558, 557, 51382, -1000, -1000, -1000, -1000, -1000, 137874, -1000,
	-1000, 137684, -1000, -1000, 137412, -1000, -1000, 137222, -1000, -1000,
	-1000, -1000, -1000, 141858, 17120, 16434, 15350, 7457, 13560, 11596,
	-118, 386, -119, 383, 902, 901, 382, 379, 374, -120,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -125, 373, -1000, 2948, -87, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 372, -1000, 369, -1000, 141469,
	-87, 363, 8561, -1000, 55519, 55519, 55519, 55519, -1000, 362,
	-1000, 138798, -1000, 141176, 37729, 37729, 37729, 361, 141026, 51382,
	-87, -126, -1000, -127, -1000, -1000, 511, -135, 1001, 37120,
	58448, 26266, -1000, 1001, 1001, 51382, -1000, 51382, 2642, -1000,
	-1000, -1000, -1000, 2635, 2480, 2597, 59604, -1000, -1000, -1000,
	-1000, 108206, -1000, 3667, 3115, -1000, 108206, -1000, -1000, 122646,
	434, -1000, 108206, 108206, 26266, 873, -1000, 873, 108206, 623,
	-1000, -1000, -1000, -1000, -1000, 357, 67753, -13, 178, 26266,
	982, -1000, -1000, 2746, 2746, 2746, 2746, 2746, 96674, -1000,
	-1000, 134749, 1219, -52, -181, 2773, -1000, 3624, -1000, 2072,
	-1000, 71791, -1000, 736, 1085, 26266, -1000, -1000, -1000, 555,
	-1000, 3679, 3679, -1000, 3679, 134749, 2940, 239, 2772, -1000,
	2332, -50, 185, 134749, 3760, -1000, -1000, 241, -1000, 96674,
	241, 241, -1000, 96674, 96674, 2280, -1000, 258, -1000, 244,
	-1000, -1000, -137, -1000, 995, 35329, -1000, 1393, -1000, -1000,
	1587, -1000, 1983, -1000, 1254, -1000, -1000, 35329, -1000, 3326,
	-1000, 1786, -1000, -1000, -1000, -1000, 5174, 122646, 122646, 96674,
	-1000, 106478, 122646, -1000, 2181, 134749, -1000, 2436, 127830, 2413,
	127254, 71791, -1000, -1000, 553, 924, 2619, 2604, 1089, 122646,
	122646, 2603, 126678, 126102, -1000, 3757, 122646, 2037, 51382, 106478,
	3476, 2288, 3630, 69, 69, -1000, 69, -1000, -1000, 552,
	1229, 96674, 96674, 122646, 134749, 96674, 1811, -1000, -1000, -1000,
	-1000, -1000, 87432, -1000, -1000, 1369, -1000, -1000, -1000, 1369,
	2460, 1773, 122646, 134749, 96674, 134749, 125526, 124950, -1000, -1000,
	1772, 122646, -1000, -1000, -1000, -1000, 1437, -1000, 769, 1218,
	2936, 51382, 51382, 2085, 69, 69, -1000, 69, 550, 26266,
	1976, -1000, 3012, 122646, 3708, 124374, 3707, 122646, 122646, 122646,
	134749, 3360, 122646, -1000, -1000, -1000, -1000, 3627, -1000, 821,
	122646, 134749, -1000, 123798, 6613, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2080, 77006, 1099, 122646, 1283, -1000, -1000, 1741, 1215, 1207,
	86856, 2160, 1738, 1878, 134749, 63097, 978, 63097, 2745, -1000,
	-1000, 23904, -1000, 142146, 142146, -1000, 142146, -1000, 74676, 79356,
	122646, -1000, -1000, 1055, 122646, 81084, 943, 3145, 68329, -255,
	971, 79356, 96674, -51, 2695, 122646, -1000, -1000, 2460, 3144,
	434, 2435, -1000, 134749, 3592, 3137, 549, 3755, 3752, -1000,
	96674, 2324, 2434, -1000, -1000, 123222, 3205, 769, 122646, 1001,
	59604, 1972, -1000, 66019, 1073, 122646, 1879, 182, -1000, -1000,
	-1000, -12, 122646, -1000, 755, -1000, -1000, 6452, 6452, 971,
	-272, 547, -1000, 819, 812, 63683, -136, -1000, 175, 545,
	810, 809, -1000, 5448, -1000, -179, -1000, 79356, 977, 63097,
	2932, -179, 2771, 2914, -1000, -1000, 994, -1000, 1347, 971,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -39, 1876, 122646, -137, -137, -65, -52, -1000, 980,
	-1000, 980, -1000, 980, -1000, -1000, -1000, 142146, -1000, -1000,
	-1000, 1639, 1627, 122646, -1000, -1000, 122646, -1000, -1000, 26266,
	122646, 96674, 26266, 96674, 3015, 3013, -1000, -1000, -1000, 122646,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1114, -1000,
	1825, 2274, -1000, 544, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2531, -1000, -53, 34147, 844, -1000, -1000,
	96674, -40, 51382, 51382, 9670, 9054, 51382, 55519, 55519, -1000,
	51382, 6453, -1000, -1000, -1000, -1000, -1000, 2906, 543, 51382,
	71791, 6970, 6143, -1000, 355, 10614, 666, -1000, 51382, -1000,
	535, -1000, 354, 36529, -1000, 139784, -29, -145, -1000, 19736,
	-87, -146, -1000, -1000, 734, -1000, 3148, -1000, 51382, 140723,
	2504, 2027, 1866, 1662, 3679, 3706, 23312, -1000, 70059, 1003,
	2172, 136950, -1000, -1000, -1000, -1000, 71791, 71791, 51382, 51382,
	-1000, 51382, 51382, 51382, -1000, -1000, -1000, 3679, 891, -1000,
	-1000, -1000, 891, -1000, -1000, 1369, -1000, 1369, -1000, 51382,
	-1000, -1000, 2905, 51382, -1000, 71791, 71791, 55519, 55519, 55519,
	55519, 55519, 55519, 55519, 55519, 55519, 55519, 55519, 55519, 55519,
	55519, 55519, 55519, 55519, 55519, 55519, 55519, 2584, 55519, 3654,
	3654, 3654, 835, -1000, 3008, 2905, 51382, 51382, 71791, 353,
	351, 348, -1000, 51382, -87, -1000, -1000, 10892, 541, -1000,
	2523, -1000, 2825, -1000, 51382, -1000, -152, -1000, 2704, -1000,
	-1000, 2825, 2825, -151, 142146, 59604, 59604, -1000, 531, 51382,
	2625, -1000, -1000, 714, -328, -1000, 807, -1000, -1000, -1000,
	-1000, -1000, -1000, 803, -1000, 434, -1000, -1000, -1000, 174,
	108206, 108206, 713, -1000, -156, -1000, -1000, -158, -1000, 3590,
	346, 26266, -1000, 1001, 2796, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2659, -279, 134749, 134749, 1733, 2250, 3705, -1000,
	3680, 728, 712, 142, 3679, 330, 328, 326, -137, 134749,
	134749, 1730, 72370, 134749, -1000, -1000, -1000, 241, -1000, -1000,
	-1000, 240, -1000, -1000, -1000, -1000, 2685, -1000, -54, -1000,
	-1000, -1000, 51382, -1000, 946, -1000, -1000, 3400, 514, 1206,
	1205, -1000, -159, -1000, 802, -1000, -1000, -1000, -1000, 2923,
	-1000, 3132, -1000, 2432, -1000, 1080, 2429, 1630, -1000, 51382,
	510, 2737, 509, 508, 3751, 2168, 3750, 1091, 3129, 2280,
	3128, 2280, -1000, -1000, -1000, 918, -1000, 142146, -161, -1000,
	2288, -1000, 506, 500, -1000, -58, 1648, 467, 1204, 990,
	-1000, -1000, 51382, 51382, 107630, -1000, 473, 3402, -43, -1000,
	-1000, -1000, 1715, 1198, 1193, -1000, -1000, -1000, -1000, 2460,
	1707, 1187, 1186, -1000, -1000, -1000, -1000, -1000, 2424, -1000,
	-1000, 3127, 986, -1000, 3066, 3065, 900, 122646, 51382, 51382,
	140533, 140420, -1000, 985, -1000, -1000, 51382, -1000, -60, 1184,
	3526, 2420, 96674, -1000, 2280, 3124, 1180, -1000, 1178, -1000,
	-1000, -1000, 3531, 3520, 1201, 3627, 63097, -1000, -1000, -1000,
	79356, -1000, -1000, 76420, -1000, -1000, 1042, 122646, 134749, 96674,
	1710, -1000, -1000, 85704, 86280, 122646, 2767, -137, 837, -1000,
	2483, 837, 978, 2902, -1000, 2689, -1000, 984, 96674, 3748,
	322, -164, -61, 71791, -1000, -1000, -1000, -1000, 2413, 96674,
	122646, 1273, 2734, 122646, 122646, 3589, -1000, 2364, 592, 96674,
	889, -1000, 3667, -1000, -1000, -1000, 983, -1000, 3522, 96674,
	3588, 3117, 982, 69, 96674, 3689, -1000, -1000, 3586, 96674,
	3111, 2319, 2417, 2573, 769, 79932, 982, 2171, -77, -1000,
	1879, 35920, 3361, -166, -1000, -1000, -1000, 1001, 69481, 59604,
	51382, 3747, -169, -1000, -1000, -1000, -1000, -1000, 105326, 105326,
	79356, 79356, 79356, 971, 122646, 122646, 3746, 79356, 79356, 79356,
	-62, 499, -1000, 800, 799, 798, -1000, -1000, -1000, -1000,
	-1000, -1000, 797, 793, 790, 977, -1000, -1000, -179, 63097,
	977, 63097, 69, -1000, 2187, 96674, -1000, 22720, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 980, -255, -1000, -1000, -1000,
	2088, 2375, 2088, 1868, 1864, -1000, -1000, 2272, -1000, -1000,
	-1000, -1000, 2690, 3362, 26266, 3519, 11092, 51382, 51382, 5424,
	5711, 999, 11092, 51382, 51382, 71791, 8379, -171, 51382, 51382,
	-1000, 51382, 711, 142146, -1000, 3700, 51382, 318, 315, -1000,
	-1000, -1000, 3675, -1000, -1000, -1000, 142146, 51382, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 314, -1000, 120, -1000, -1000,
	-1000, 131286, -1000, 51382, 312, 3475, -1000, 310, 302, 9345,
	305, 136760, 136488, 136298, 301, -1000, -1000, 290, 277, 142146,
	3008, 142146, -1000, -1000, 976, 976, 1353, 1353, 1353, 1353,
	3654, 1189, 2092, 930, 1946, 1946, 1946, 1817, 835, 835,
	1946, 1946, 1946, 835, 2898, 2599, 495, 8637, -1000, -1000,
	142146, 142146, 273, -1000, -1000, -1000, -87, 270, 10892, -1000,
	2820, 3472, 142146, -1000, 59604, 2820, 2820, -1000, -1000, 2480,
	122646, 142146, 59604, -1000, 3115, -1000, 20938, 20340, -1000, 26266,
	-1000, -1000, -1000, -1000, 3667, -1000, 67753, -1000, 494, -1000,
	-11, -1000, 2796, -1000, 789, -1000, -1000, 79356, 79356, 2746,
	-1000, 2830, -279, -153, 122646, -1000, -1000, 709, 3745, 723,
	26266, 268, -1000, -1000, -1000, -137, -137, 122646, 2893, 96674,
	122646, 1286, -137, -1000, -1000, -1000, 3320, 142146, 3003, 2809,
	2808, 122646, 122646, -1000, 106478, 35329, 1501, 107054, 122646, 3107,
	-1000, 3106, -1000, 1089, 5237, 136026, 60182, -1000, 60182, 122646,
	-1000, -1000, -1000, -1000, 1985, 1511, 3744, 1133, -1000, 3440,
	122646, -1000, 122646, -1000, -1000, -1000, 106478, -1000, 122646, 122646,
	96674, 122646, -1000, 134749, 3091, -182, 142146, -63, -1000, 788,
	-1000, 1354, -1000, 22128, 122646, 134749, 96674, 122646, 134749, 96674,
	3104, 122646, 2128, -1000, -1000, 3061, -1000, 142146, 140230, 69,
	51382, 3085, -183, 26266, -1000, 3699, 3697, 3103, 3446, -1000,
	122646, 3693, 122646, 96674, 3317, 979, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1701, 1174, 1173, 2312, 2298, 2249, -65,
	2160, 978, -68, 493, -1000, 786, -1000, -1000, 785, 783,
	978, -1000, 79356, 63097, 3742, 434, -1000, 2717, -1000, 102438,
	81084, 2269, -1000, -1000, 492, 122646, 122646, 491, -1000, 69,
	-1000, 3739, 106478, 490, -1000, 2176, -1000, 706, -1000, 2490,
	134749, 2460, 69, 96674, -1000, 974, 434, 264, -69, -1000,
	3126, 1087, 26266, 96674, 3102, 2581, 769, 79932, -1000, 1319,
	2657, -1000, -70, -1000, 676, 69, 2171, -1000, -77, 142146,
	-1000, 778, -1000, -185, -1000, -1000, 261, -1000, 3315, -1000,
	-1000, -190, -1000, -1000, 3359, 3359, 79356, 63097, 79356, 79356,
	79356, 63097, -1000, 977, 837, -1000, -179, -1000, 2402, -1000,
	-1000, -1000, -1000, -1000, 26266, 1632, -1000, 489, 488, -1000,
	-1000, -1000, -1000, 3362, 11092, 11092, 51382, 51382, 51382, 11092,
	8379, -193, -1000, 11092, 11092, -87, -1000, -1000, 139784, -1000,
	-1000, -1000, 142146, -1000, 21536, 2101, -1000, 135821, -1000, 34147,
	-1000, -1000, 51382, 51382, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 55519, 2888, 485, 71791, -1000, -1000, 260, 968,
	51382, 53155, 2704, 968, 968, -1000, -196, -1000, -1000, -1000,
	3667, -1000, 3667, -11, -1000, -1000, 3738, 26266, -1000, 79356,
	-1000, -1000, -1000, 2223, -1000, -1000, 3044, -191, 718, -1000,
	3736, -1000, -1000, 141, 134749, 2868, 121, 2763, -1000, 69,
	-1000, -1000, -1000, -1000, -1000, -1000, 2760, 3585, -1000, 1935,
	-1000, 122646, 122646, -1000, 122646, -1000, 26266, 122646, 2848, 1276,
	-1000, 924, 2598, 484, 55519, 1112, 96674, 876, 2798, 2794,
	-1000, 3609, 3471, 2800, -198, -1000, 122646, 51382, 122646, -199,
	-204, 2397, -1000, -1000, 1111, 1272, 51382, 1109, -1000, -1000,
	-1000, 71791, 481, 2280, 2280, -1000, -205, -213, -1000, -1000,
	-1000, 51382, 1172, 122646, 34738, -1000, 3735, 3402, -1000, -1000,
	-1000, -1000, -1000, -1000, 122646, -1000, 122646, -1000, 51382, -1000,
	139754, 51382, 1168, -1000, -1000, -1000, 3692, 2280, 26266, 2280,
	-1000, 2280, 3446, 1128, 2355, 122646, 134749, 96674, 1613, 1613,
	2926, -1000, -1000, -1000, 2537, 2537, 79356, 63097, 63097, -1000,
	-78, 978, -1000, 3582, 2094, 3734, -1000, -1000, -1000, -1000,
	2596, -1000, -1000, -1000, 122646, 2595, 2827, 60182, 480, 478,
	122646, 972, -1000, -214, 81084, 943, 925, -1000, -79, 475,
	-1000, 777, -1000, -1000, -1000, -1000, 434, -1000, 2684, 3571,
	-1000, 3690, 472, 471, 122646, 2297, 470, 26266, 3395, 769,
	79932, -1000, 3205, 1879, -1000, 2410, 122646, 3353, -1000, 2657,
	464, -1000, 971, 462, 971, -1000, -215, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 977, -80, -1000, 850, 847,
	-1000, -1000, 96674, 96674, 51382, 51382, -1000, 11092, 11092, 11092,
	-1000, 253, -1000, -1000, 2171, 3464, -1000, -81, 135630, 135358,
	606, 55519, 71791, -216, -1000, -1000, 122646, 142146, -84, -1000,
	142146, 459, 458, 396, -1000, -1000, -1000, 704, 624, -1000,
	-1000, -1000, -1000, 134749, 3733, -1000, 134749, -137, 134749, 134749,
	1699, -1000, 105902, 122646, -1000, -1000, 1630, 2310, -1000, -1000,
	-1000, 122646, 2414, -1000, -1000, -1000, 969, 51382, 8637, 55519,
	456, 51382, -1000, 454, 452, 3570, 3273, -1000, 2720, 2892,
	1960, 60182, -1000, 3362, -1000, 135328, -1000, 1084, 1955, -1000,
	-1000, -1000, -1000, 142146, 55519, 3446, 60182, -1000, -1000, 450,
	449, 142146, 447, 776, 2867, -1000, -1000, -1000, -1000, -1000,
	142146, 69, 142146, 446, 3526, -1000, -1000, -1000, -1000, 2280,
	96674, 774, -1000, -1000, -1000, 1166, -1000, -1000, -1000, -1000,
	3730, 3728, 2862, 85704, -1000, -221, -1000, -1000, -1000, 1958,
	69, 943, -1000, -1000, 2269, 445, -1000, 952, 2740, 2740,
	-223, 60182, 60182, -224, 2270, 2683, -1000, 247, 3569, 925,
	-1000, 3650, -1000, 3264, 3264, 51382, 3563, 3304, -1000, 69,
	-1000, 3689, 60182, -1000, 96674, 60182, 2281, 2050, 2549, 79932,
	-1000, 2573, -1000, -1000, -226, 122646, 1879, -1000, -1000, 79356,
	-1000, -1000, -1000, 2402, -1000, 122646, -1000, 122646, -1000, -1000,
	-229, -232, -1000, 2131, 51382, 34147, -1000, -1000, 606, -234,
	-1000, -85, -1000, 3560, 53155, 3727, 3726, 3724, -1000, -1000,
	-279, -1000, -137, -137, -137, 122646, -1000, 1920, -1000, 2413,
	-1000, -1000, 3100, -1000, 2816, 438, 18328, 8637, 2525, 122646,
	17867, 2460, 2460, -1000, 3543, 2883, -1000, -1000, 2085, 437,
	-1000, -1000, -1000, -1000, 844, 122646, 952, 2814, 96674, 8637,
	1088, -235, 2088, 2088, 51382, 33556, 2114, -1000, 51382, -1000,
	-1000, 3446, 63097, 134749, -1000, -1000, 134749, 2279, -1000, 2852,
	3668, -1000, 2270, 122646, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1084, -240, -243, -1000,
	-1000, 3433, -1000, 3296, 2717, 69, -1000, -1000, -1000, -248,
	142146, 69, 3723, 974, 236, -253, 1087, -254, 96674, 1929,
	-1000, 769, -1000, 2581, 1001, 3206, -1000, -256, -1000, -259,
	-261, -1000, -1000, 235, 52564, 52564, 52564, -87, -89, -1000,
	122646, 436, -1000, -1000, -1000, -1000, -1000, 119, -1000, -1000,
	3058, 867, -1000, 832, 1938, 224, 1050, 223, -27, -1000,
	-1000, -1000, 2800, -1000, 122646, -1000, -1000, -1000, 867, 434,
	-1000, 51382, 1084, -262, -1000, 1071, -270, -1000, 1070, -276,
	-1000, 2859, -1000, -278, 2280, -1000, -279, 233, 1613, 973,
	3507, -1000, -1000, -1000, 2536, -283, -1000, -1000, 1960, 1084,
	2085, 2328, -1000, 2094, 972, -1000, -1000, -1000, -1000, -1000,
	1084, 433, 1960, 430, 1510, 769, -1000, -1000, 1369, 3395,
	3154, 1322, 971, -1000, -1000, -1000, 3140, -1000, 56701, 2284,
	1862, 138608, 3140, 3140, -1000, -1000, 134749, 122646, 952, 3491,
	-1000, 843, 838, 1528, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1001, -284, -1000, 2525, 142146, 952, -1000, 2088,
	2757, -1000, 2088, 2858, -1000, 2112, -1000, -1000, -1000, -1000,
	2857, -1000, 1776, 3646, -1000, -1000, 952, 122646, 2085, 1960,
	952, 1814, 1807, 3721, 943, 2270, 1960, 60182, 2085, 60182,
	2071, -1000, 122646, -1000, 2050, 1318, -1000, 1609, -1000, -1000,
	1998, 3581, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -137,
	-1000, -1000, 771, -1000, 3239, -1000, 1108, 2185, 2185, -1000,
	-1000, 832, -1000, -1000, 427, -1000, 419, -1000, 134749, 2175,
	-1000, -1000, -1000, -1000, 952, 2085, 1001, -1000, 3717, -1000,
	2270, -1000, 2085, -291, 952, -292, 2134, -1000, -1000, -255,
	1929, -1000, 1598, 69481, 1818, -1000, -1000, 2167, 51973, 51382,
	-1000, 3634, -1000, -1000, 2609, -1000, 2800, 51382, 51382, 233,
	67175, 1001, 952, -1000, -1000, 2536, 952, 1084, 1001, 1960,
	-1000, 769, 1510, 69481, -275, -1000, -1000, -1000, 142146, -1000,
	-1000, -1000, -1000, -293, -294, -1000, -272, 105326, -1000, 1001,
	-1000, 1001, 1960, -1000, 2085, 134749, 2071, -275, -1000, 2085,
	1160, -307, -1000, -1000, 2085, 952, -1000, -1000, -1000, -1000,
	-1000, 416, -1000, 952, 1001, 51382, 1001, -1000, -316, -1000,
	2085, -1000,
}

var sqlPgo = [...]int{
	0, 4600, 4599, 4593, 4592, 4591, 4590, 4589, 4588, 4580,
	4579, 4575, 4572, 4571, 4570, 157, 4569, 4567, 4563, 4561,
	4560, 4559, 4558, 4557, 4556, 4555, 4554, 4552, 4548, 4547,
	4536, 4535, 4530, 4529, 4527, 4526, 4524, 4523, 4522, 4521,
	4520, 4519, 4518, 4517, 4515, 4512, 4509, 4508, 4505, 4504,
	4503, 4502, 4501, 4500, 4499, 4497, 4496, 4495, 4494, 4492,
	4491, 4488, 4486, 4485, 4484, 4483, 4480, 4476, 4474, 59,
	4469, 4468, 4466, 4464, 4463, 4462, 4461, 4457, 4456, 4455,
	4454, 4445, 4443, 4441, 4440, 4439, 4437, 4434, 4430, 4428,
	67, 4425, 284, 4424, 4423, 4421, 4419, 4418, 4416, 4415,
	4413, 4411, 4409, 4407, 4406, 283, 4404, 149, 171, 4403,
	4402, 3907, 4399, 4397, 282, 4396, 4394, 4392, 4390, 4389,
	294, 4388, 4386, 4385, 4384, 4383, 4380, 4379, 4377, 4370,
	4369, 4368, 4367, 95, 135, 4366, 4364, 1321, 4363, 4361,
	4360, 4354, 4351, 4349, 4347, 4346, 4344, 4342, 4341, 262,
	184, 4339, 281, 4336, 4335, 4334, 4333, 4330, 4329, 4328,
	4327, 4324, 4322, 4321, 4320, 4319, 4304, 4303, 4302, 4300,
	4299, 4298, 4297, 4296, 4295, 4284, 4283, 4280, 4274, 4270,
	4268, 4264, 4263, 4255, 4254, 4252, 4251, 4249, 4248, 4247,
	4246, 4244, 4243, 265, 217, 138, 4242, 4241, 280, 279,
	4240, 4239, 4236, 4234, 4233, 4232, 4226, 4222, 4220, 4218,
	4216, 4214, 4213, 4212, 134, 5, 51, 4210, 4205, 104,
	89, 92, 109, 97, 100, 4204, 123, 4202, 143, 120,
	4201, 117, 112, 19, 6, 258, 260, 13446, 249, 4199,
	4198, 4195, 259, 208, 4194, 254, 4193, 4191, 4190, 4189,
	4188, 4186, 75, 52, 216, 4181, 4180, 155, 183, 195,
	192, 189, 187, 82, 42, 110, 88, 60, 43, 16,
	98, 215, 22, 7, 275, 4179, 271, 12, 151, 10,
	30, 4177, 4173, 4172, 4170, 4098, 114, 4166, 277, 264,
	172, 4165, 4164, 4163, 765, 4161, 4157, 50, 232, 202,
	85, 111, 165, 141, 4139, 169, 182, 38, 4136, 179,
	68, 4131, 4127, 99, 94, 9964, 11915, 4125, 4123, 137,
	71, 144, 4537, 173, 162, 210, 96, 180, 176, 61,
	223, 218, 190, 204, 4121, 263, 4120, 3559, 83, 200,
	170, 6411, 4117, 4116, 4115, 93, 4113, 102, 4112, 4111,
	70, 21, 1, 2, 148, 36, 31, 20, 4110, 34,
	133, 47, 25, 4109, 32, 4107, 4105, 4104, 4101, 55,
	4100, 33, 178, 4099, 4097, 298, 4096, 106, 53, 212,
	4095, 163, 233, 4094, 242, 146, 4093, 4091, 269, 213,
	227, 4090, 79, 245, 4088, 4086, 4085, 4082, 4081, 4080,
	142, 3, 145, 4079, 4078, 156, 4077, 49, 255, 207,
	4074, 63, 4073, 4072, 193, 57, 164, 286, 136, 237,
	132, 241, 199, 243, 4071, 4070, 4068, 251, 4067, 4065,
	229, 177, 4063, 4062, 256, 296, 90, 46, 86, 253,
	87, 206, 174, 4060, 211, 4059, 4058, 293, 196, 225,
	35, 11, 13, 108, 118, 4057, 9, 246, 161, 240,
	128, 4056, 8518, 2157, 2651, 4055, 4054, 159, 131, 84,
	153, 167, 276, 116, 4053, 4052, 3391, 4050, 4049, 4048,
	4047, 203, 4046, 4045, 4044, 160, 191, 238, 4043, 121,
	76, 56, 23, 127, 290, 292, 124, 235, 175, 268,
	4042, 4041, 4040, 197, 4037, 80, 126, 188, 209, 270,
	65, 4036, 129, 4035, 166, 944, 72, 158, 4034, 231,
	4033, 4032, 4031, 4030, 4029, 4028, 4026, 530, 252, 4025,
	4023, 4021, 37, 198, 4015, 274, 185, 248, 103, 58,
	4014, 107, 361, 4011, 492, 221, 64, 4, 4010, 73,
	4009, 3521, 62, 4007, 0, 14395, 8868, 12530, 13810, 4006,
	3133, 4003, 4002, 4000, 228, 81, 3999, 3998, 3995, 122,
	3994, 91, 3993, 3992, 78, 3990, 26, 17, 18, 27,
	28, 690, 445, 3989, 3988, 48, 152, 139, 3982, 285,
	244, 3979, 3975, 3974, 3973, 113, 3972, 54, 3971, 44,
	3968, 3967, 45, 14, 39, 3960, 3953, 168, 3952, 125,
	222, 3951, 181, 3950, 74, 147, 3943, 3942, 3941, 69,
	66, 266, 220, 226, 101, 3938, 291, 3937, 219, 3936,
	3935, 24, 3934, 3933, 257, 119, 115, 40, 261, 154,
	41, 194, 224, 3932, 3931, 186, 3930, 3929, 3926, 288,
	3925, 3533, 272, 3924, 29, 3923, 3922, 3918, 15, 3916,
	3915, 214, 3259, 3902, 3897, 8, 3892, 205,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	13, 13, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 53, 53, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 39, 41, 40, 34, 34, 35,
	35, 36, 37, 37, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 42, 42, 22,
	22, 44, 44, 23, 23, 45, 45, 621, 621, 621,
	622, 622, 623, 623, 623, 26, 47, 19, 20, 20,
	20, 20, 624, 624, 624, 624, 38, 27, 48, 31,
	31, 31, 31, 31, 217, 217, 217, 217, 25, 25,
	43, 43, 260, 260, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 617, 617, 262, 262, 261, 249,
	249, 250, 250, 251, 251, 625, 625, 263, 263, 263,
	264, 264, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 516, 516, 516, 547, 547, 547, 547, 549,
	549, 644, 644, 645, 645, 645, 645, 645, 136, 136,
	413, 413, 413, 57, 57, 57, 57, 57, 612, 612,
	219, 219, 219, 221, 221, 220, 220, 220, 220, 220,
	81, 81, 631, 631, 630, 629, 629, 629, 632, 632,
	632, 218, 218, 218, 132, 132, 132, 132, 132, 132,
	132, 132, 133, 133, 134, 134, 222, 222, 222, 224,
	224, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 228, 18, 18, 18, 115, 115, 115,
	115, 115, 115, 115, 110, 110, 551, 551, 552, 552,
	213, 213, 214, 214, 214, 214, 215, 215, 216, 216,
	216, 72, 72, 225, 225, 227, 227, 226, 226, 226,
	226, 226, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 60, 60, 60, 60, 60, 61, 61, 61, 61,
	61, 61, 62, 62, 62, 62, 62, 62, 63, 63,
	70, 70, 70, 70, 70, 70, 70, 70, 195, 195,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 78, 78, 78, 78, 78, 646, 646,
	646, 646, 646, 646, 646, 646, 646, 646, 646, 646,
	646, 646, 646, 646, 646, 646, 646, 647, 647, 648,
	648, 649, 649, 650, 650, 650, 650, 650, 650, 650,
	650, 650, 650, 650, 650, 650, 650, 650, 650, 650,
	650, 650, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 87,
	87, 373, 373, 336, 336, 88, 88, 88, 89, 89,
	90, 90, 74, 74, 610, 610, 389, 389, 507, 507,
	75, 618, 618, 618, 620, 620, 619, 619, 92, 92,
	412, 412, 93, 93, 93, 93, 93, 93, 94, 94,
	94, 94, 94, 94, 94, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 102,
	102, 102, 102, 102, 103, 103, 103, 100, 100, 100,
	97, 97, 97, 96, 96, 96, 101, 101, 101, 609,
	325, 325, 99, 99, 99, 98, 98, 98, 390, 390,
	104, 104, 104, 104, 337, 105, 105, 105, 105, 105,
	105, 105, 105, 108, 108, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 509, 509,
	4, 4, 255, 255, 254, 254, 5, 5, 5, 258,
	258, 257, 256, 106, 106, 106, 474, 474, 111, 111,
	111, 428, 428, 112, 112, 112, 112, 112, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 614,
	614, 382, 382, 288, 288, 288, 288, 124, 124, 124,
	124, 125, 125, 125, 125, 126, 126, 200, 200, 142,
	142, 142, 142, 141, 141, 141, 141, 141, 141, 141,
	141, 64, 64, 64, 65, 65, 66, 66, 67, 67,
	68, 68, 69, 69, 69, 69, 69, 145, 145, 641,
	641, 147, 144, 144, 144, 144, 144, 143, 143, 146,
	146, 146, 146, 148, 150, 150, 150, 150, 150, 149,
	149, 149, 149, 149, 151, 151, 541, 541, 398, 398,
	539, 539, 561, 561, 540, 540, 343, 343, 343, 343,
	343, 344, 344, 344, 550, 550, 550, 550, 550, 550,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 201, 201, 201, 202, 202,
	206, 206, 207, 207, 207, 208, 208, 208, 205, 205,
	205, 203, 203, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 211, 211, 209, 209, 210, 210, 652,
	652, 651, 651, 212, 212, 212, 212, 212, 177, 177,
	177, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 399, 399, 180, 180, 180, 164, 164, 153,
	153, 153, 153, 153, 153, 153, 158, 158, 158, 158,
	158, 158, 158, 158, 154, 154, 166, 166, 166, 166,
	166, 159, 159, 160, 160, 160, 161, 161, 161, 161,
	188, 188, 163, 163, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 155, 155, 155, 155, 168, 168, 168,
	168, 435, 435, 435, 193, 193, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 191, 191, 191, 191, 191, 191, 633, 633,
	634, 634, 634, 184, 184, 184, 184, 184, 184, 488,
	488, 178, 178, 178, 178, 183, 183, 183, 183, 186,
	186, 186, 186, 418, 418, 175, 175, 175, 176, 176,
	176, 181, 181, 182, 374, 374, 179, 179, 185, 185,
	185, 185, 187, 187, 187, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 157, 157, 157, 157, 189, 189,
	174, 174, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 653, 653, 170, 170, 170, 169, 169,
	169, 169, 172, 172, 173, 173, 173, 173, 173, 173,
	171, 162, 192, 611, 611, 607, 607, 607, 607, 607,
	607, 607, 607, 608, 608, 608, 608, 613, 613, 116,
	116, 116, 116, 116, 116, 116, 127, 127, 127, 127,
	127, 127, 127, 130, 130, 117, 117, 117, 117, 117,
	117, 117, 120, 120, 118, 118, 118, 118, 119, 119,
	82, 82, 82, 82, 82, 17, 17, 17, 83, 83,
	279, 279, 233, 233, 233, 361, 361, 234, 234, 351,
	351, 351, 351, 229, 229, 230, 230, 231, 232, 232,
	84, 84, 654, 654, 654, 626, 626, 626, 627, 627,
	627, 627, 627, 627, 345, 345, 346, 346, 454, 454,
	454, 454, 454, 349, 349, 349, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 359, 360, 360, 352, 352,
	358, 357, 357, 356, 356, 355, 355, 353, 354, 354,
	354, 363, 363, 362, 365, 365, 364, 453, 570, 570,
	572, 572, 572, 572, 572, 572, 572, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 436, 436, 655, 655, 656, 657,
	568, 568, 568, 569, 564, 564, 565, 565, 565, 565,
	565, 347, 347, 348, 348, 348, 348, 566, 567, 380,
	380, 492, 571, 571, 573, 573, 575, 658, 658, 658,
	658, 658, 658, 659, 659, 659, 452, 452, 451, 451,
	450, 450, 371, 371, 576, 576, 576, 576, 577, 577,
	577, 577, 577, 580, 579, 578, 578, 578, 578, 578,
	86, 86, 86, 415, 415, 414, 414, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 197, 197, 291, 291, 291, 80, 80, 80,
	14, 14, 14, 14, 14, 14, 14, 306, 306, 15,
	15, 15, 628, 628, 628, 85, 85, 85, 85, 85,
	85, 369, 369, 369, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 616, 616,
	615, 615, 292, 292, 661, 661, 91, 91, 91, 91,
	91, 91, 91, 91, 510, 510, 511, 511, 79, 79,
	79, 79, 79, 437, 437, 434, 434, 433, 433, 379,
	379, 490, 490, 490, 491, 296, 296, 297, 297, 252,
	252, 252, 33, 32, 24, 24, 28, 28, 29, 29,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 30,
	30, 50, 50, 50, 50, 51, 51, 51, 51, 54,
	54, 55, 55, 49, 49, 49, 49, 52, 52, 46,
	46, 56, 56, 56, 56, 56, 635, 637, 637, 636,
	636, 640, 640, 640, 640, 640, 640, 638, 638, 639,
	639, 642, 642, 643, 643, 123, 123, 128, 128, 128,
	128, 128, 129, 129, 129, 129, 131, 131, 131, 131,
	140, 140, 196, 196, 196, 196, 196, 196, 196, 58,
	58, 58, 58, 71, 71, 71, 71, 138, 663, 663,
	663, 139, 139, 139, 662, 662, 289, 289, 447, 447,
	448, 448, 664, 664, 449, 449, 449, 449, 449, 282,
	281, 283, 283, 284, 284, 77, 77, 77, 272, 272,
	271, 273, 273, 274, 274, 269, 269, 553, 553, 276,
	276, 276, 277, 277, 265, 265, 266, 266, 267, 267,
	268, 268, 280, 280, 548, 548, 665, 665, 114, 114,
	114, 199, 199, 335, 335, 335, 444, 444, 444, 372,
	372, 303, 303, 446, 446, 446, 446, 446, 411, 411,
	411, 198, 198, 387, 387, 401, 401, 402, 402, 504,
	504, 403, 121, 121, 122, 122, 137, 137, 237, 237,
	235, 235, 235, 235, 235, 235, 235, 235, 242, 242,
	243, 243, 244, 244, 245, 246, 246, 246, 246, 391,
	391, 247, 247, 247, 236, 236, 236, 238, 238, 238,
	238, 238, 238, 238, 241, 241, 241, 241, 248, 248,
	248, 240, 240, 587, 587, 587, 589, 589, 591, 591,
	590, 590, 586, 586, 588, 588, 660, 660, 417, 417,
	417, 368, 370, 366, 366, 367, 367, 377, 377, 375,
	376, 376, 378, 378, 489, 489, 489, 253, 253, 253,
	408, 408, 408, 408, 409, 409, 440, 440, 438, 438,
	438, 438, 439, 439, 441, 441, 441, 442, 442, 443,
	443, 405, 405, 406, 406, 407, 407, 407, 407, 470,
	470, 239, 239, 239, 384, 384, 384, 385, 385, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	461, 461, 459, 459, 459, 459, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 494, 495, 495, 386, 386,
	496, 445, 445, 605, 605, 605, 606, 606, 487, 487,
	497, 497, 497, 497, 497, 497, 485, 485, 486, 486,
	505, 506, 506, 421, 421, 421, 421, 419, 419, 422,
	422, 422, 422, 422, 420, 420, 498, 498, 498, 498,
	410, 410, 499, 499, 499, 499, 500, 501, 501, 502,
	502, 455, 456, 456, 512, 512, 512, 512, 514, 383,
	383, 383, 383, 383, 563, 562, 562, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 529, 529,
	529, 529, 529, 529, 529, 515, 515, 515, 515, 515,
	519, 519, 519, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 520, 520, 525, 525, 526, 526,
	526, 521, 522, 527, 527, 527, 527, 666, 666, 531,
	531, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	517, 517, 517, 524, 524, 524, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 429,
	429, 431, 431, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 464, 464, 464, 464, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 581, 581, 581, 581, 581, 581, 581,
	581, 466, 466, 584, 584, 585, 585, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 592, 592,
	593, 593, 595, 595, 596, 596, 597, 598, 598, 598,
	599, 600, 600, 594, 594, 601, 601, 601, 601, 602,
	602, 603, 603, 603, 603, 603, 604, 604, 604, 604,
	604, 476, 476, 477, 477, 483, 483, 483, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 342, 342, 341, 293, 293, 293, 293,
	293, 293, 396, 396, 394, 394, 394, 397, 397, 395,
	395, 393, 393, 392, 392, 473, 473, 471, 471, 475,
	475, 423, 423, 530, 530, 530, 530, 530, 530, 530,
	530, 424, 424, 424, 432, 425, 425, 426, 426, 426,
	426, 426, 467, 468, 427, 427, 427, 469, 469, 478,
	482, 482, 481, 480, 480, 479, 479, 457, 457, 458,
	458, 404, 404, 667, 667, 400, 400, 503, 503, 503,
	503, 339, 339, 388, 388, 338, 338, 330, 330, 331,
	331, 331, 331, 381, 381, 484, 484, 532, 532, 533,
	533, 534, 534, 535, 535, 536, 537, 538, 472, 472,
	314, 313, 300, 301, 312, 311, 310, 299, 302, 307,
	308, 309, 304, 305, 321, 320, 319, 270, 275, 326,
	327, 327, 329, 329, 328, 328, 316, 317, 318, 508,
	298, 332, 332, 333, 333, 333, 334, 334, 334, 334,
	294, 294, 295, 295, 322, 322, 323, 324, 324, 315,
	315, 315, 285, 285, 285, 286, 286, 287, 287, 546,
	546, 543, 543, 543, 544, 544, 544, 545, 545, 545,
	545, 542, 542, 542, 542, 542, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 555,
	555, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 557,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	560, 560,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 0,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 4, 6, 9, 6,
	8, 4, 4, 5, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 3, 3, 3, 6, 4, 9,
	7, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 5, 2, 0, 1, 2, 3, 1, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 6, 3, 8, 5, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	4, 3, 1, 2, 2, 2, 4, 6, 3, 1,
	2, 2, 7, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 7, 4,
	7, 8, 8, 9, 11, 5, 2, 6, 9, 4,
	7, 7, 10, 7, 10, 10, 13, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 2, 2, 2, 9, 2,
	1, 0, 1, 1, 0, 1, 2, 0, 2, 2,
	0, 2, 2, 1, 2, 3, 3, 4, 4, 4,
	4, 3, 3, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 3, 5, 7, 3, 3, 3, 4,
	4, 6, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 6, 4, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 5, 3, 5, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 3, 4,
	3, 4, 3, 5, 3, 4, 4, 3, 4, 5,
	3, 4, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 3, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 3,
	4, 4, 5, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 5, 2, 0, 3, 3, 4, 3,
	3, 3, 5, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 3, 4, 5, 4, 4, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 7, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 12, 15,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 1, 1, 1, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 3, 6, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	10, 11, 9, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 6, 1,
	3, 1, 2, 0, 1, 2, 3, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 3, 0,
	4, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 3, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 1, 1, 1, 8, 10, 11, 8, 11,
	5, 4, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 16, 19,
	15, 18, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 6, 8, 8, 4, 7, 3, 0, 7,
	10, 1, 1, 1, 1, 2, 2, 3, 0, 3,
	0, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 14, 16, 3, 1, 0,
	4, 1, 0, 2, 2, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 7, 10, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 623, -107, -104, -72, -70, -111, -112,
	-93, -113, -106, -135, -140, -121, -122, -123, -136, -142,
	-196, -201, -202, -203, -212, -3, -57, -59, -73, -92,
	-94, -105, -115, -114, -116, -124, -132, -127, -110, -64,
	-137, -141, -152, -197, -198, -199, 33, 32, 103, 83,
	159, 132, 141, 210, 399, 447, 459, 415, 146, 438,
	420, -146, -147, 478, -58, -71, -139, -138, 76, 133,
	175, 430, -6, -14, -18, 30, 48, -60, -61, -62,
	-63, 65, -80, -76, -87, -81, -74, -75, -78, -646,
	105, -588, -95, -98, -131, -650, 167, 229, -117, -118,
	-119, 381, -125, -126, 440, -128, -129, -130, 443, 168,
	-66, -65, 161, -235, -237, -144, -143, -145, -200, -153,
	-154, -155, -156, -157, -158, -159, -161, -188, -162, -163,
	-164, -165, -166, -167, -171, -191, -168, -169, -170, -173,
	-172, -174, -179, -175, -176, -177, -178, -180, -181, -183,
	-184, -185, -186, -187, -189, -190, 483, -182, -192, -160,
	546, 52, 499, 85, 151, 451, 21, -7, -8, -9,
	-10, -11, -12, -13, -17, -16, -56, -4, -5, -77,
	-79, -82, -83, -84, -91, -85, -86, -587, -96, -97,
	-100, -102, -103, -99, -101, 439, 596, -238, -236, 620,
	561, -21, -26, -22, -23, -25, -27, -24, -28, -29,
	-30, -42, -47, -44, -45, -43, -46, -48, -49, -50,
	-51, -52, -53, -54, -55, -32, -38, -39, -33, -34,
	-35, -36, -37, -40, -41, -19, -20, -31, 583, 592,
	-241, -239, -240, -248, 470, 569, 520, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, -337, 2, -316, -322, -323, -324, -315, -285,
	-557, -560, 4, -554, -558, 174, 239, 343, 21, 22,
	24, 23, 25, 26, 27, 28, 30, 31, 41, 43,
	44, 46, 47, 48, 49, 50, 51, 52, 56, 58,
	62, 63, 64, 65, 66, 67, 71, 76, 77, 82,
	83, 84, 85, 86, 87, 88, 94, 91, 92, 93,
	95, 97, 99, 100, 101, 102, 103, 104, 106, 107,
	108, 110, 111, 112, 120, 121, 122, 123, 124, 126,
	132, 127, 133, 136, 131, 135, 137, 139, 140, 141,
	144, 145, 146, 148, 149, 150, 152, 153, 154, 156,
	157, 159, 160, 161, 164, 162, 165, 163, 166, 167,
	168, 169, 172, 180, 181, 182, 187, 189, 190, 191,
	193, 196, 197, 198, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 211, 215, 217, 218, 219, 220, 221,
	222, 228, 229, 231, 232, 233, 234, 235, 240, 241,
	242, 246, 252, 253, 257, 258, 259, 261, 265, 266,
	267, 268, 269, 270, 272, 274, 273, 276, 279, 280,
	283, 284, 285, 286, 287, 288, 292, 293, 289, 294,
	295, 297, 298, 301, 299, 302, 303, 300, 304, 306,
	307, 308, 309, 310, 311, 312, 313, 314, 315, 316,
	317, 305, 320, 318, 322, 323, 324, 325, 326, 341,
	336, 337, 338, 330, 331, 327, 332, 328, 329, 333,
	334, 340, 335, 345, 346, 347, 350, 226, 245, 352,
	353, 356, 358, 375, 361, 362, 363, 366, 367, 370,
	373, 374, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 386, 387, 389, 390, 391, 393, 394, 395, 397,
	399, 400, 402, 403, 404, 406, 407, 408, 409, 410,
	411, 412, 414, 415, 417, 416, 418, 420, 422, 423,
	424, 430, 431, 438, 432, 434, 435, 436, 437, 439,
	440, 441, 442, 443, 445, 446, 447, 449, 450, 451,
	452, 453, 455, 457, 458, 462, 463, 464, 480, 481,
	502, 459, 460, 461, 465, 466, 467, 468, 469, 473,
	471, 472, 474, 475, 476, 478, 479, 482, 483, 485,
	486, 487, 488, 489, 490, 491, 494, 496, 497, 498,
	499, 500, 519, 501, 503, 507, 508, 509, 510, 504,
	505, 518, 512, 513, 515, 516, 521, 522, 523, 524,
	525, 526, 527, 528, 530, 538, 539, 540, 541, 543,
	546, 547, 548, 549, 536, 551, 552, 555, 556, 557,
	560, 558, 559, 561, 563, 566, 567, 568, 574, 573,
	575, 576, 578, 579, 584, 585, 587, 588, 589, 37,
	53, 54, 57, 59, 61, 72, 73, 74, 78, 128,
	129, 158, 170, 171, 183, 199, 200, 212, 214, 223,
	224, 225, 247, 248, 250, 255, 277, 349, 351, 368,
	372, 388, 392, 396, 398, 413, 454, 492, 506, 511,
	531, 532, 533, 534, 542, 544, 569, 570, 571, 577,
	586, -337, 2, -316, 359, -309, 2, -285, -285, 399,
	29, 2, 29, 387, 472, 523, 525, 2, -614, -382,
	2, 29, -288, -285, 105, 210, 470, -309, 2, -614,
	210, -382, 26, 2, -285, 2, 373, 23, 28, 69,
	80, 101, 144, 169, 192, 196, -649, 375, 407, 457,
	474, 518, 528, 543, 2, 573, 298, 471, 520, 239,
	123, 548, 465, -628, 462, 463, 373, 405, 449, 213,
	562, -289, 2, 459, -285, 298, 2, 623, 97, 77,
	454, 475, -149, 2, 288, 539, -150, -151, -148, 531,
	-541, 465, 449, 320, -285, 623, 623, 623, 29, -298,
	2, -285, -298, 2, -204, 2, -298, -651, -211, -210,
	-209, 22, 431, 182, 270, 194, 230, 325, 402, 193,
	50, 520, 239, 465, 123, 516, 623, 2, 520, 378,
	573, 471, 123, 410, 239, 548, 196, 144, 28, 71,
	48, 465, -628, 597, 598, 298, 130, -612, 2, -607,
	4, -558, -554, -331, -330, 520, 526, 123, -324, -315,
	612, -323, 623, 623, 623, 623, 2, 258, 259, 409,
	408, 475, 476, 29, 623, 623, 623, 623, 462, 2,
	169, 23, 28, 69, 96, 101, 130, 192, 196, 364,
	-647, 375, 407, 474, 518, 522, 528, 543, -627, 501,
	71, 437, 465, -626, -628, 298, 548, 144, -433, 123,
	288, 208, 556, 525, 523, 554, 136, 246, 559, 558,
	623, 623, -108, 2, 620, 33, 32, -107, -111, 146,
	478, -228, 520, 251, 2, -285, 623, 623, 623, 2,
	258, 259, 462, 463, 29, 623, 623, 194, -607, 516,
	2, 623, 623, 623, 2, 29, 258, 259, 462, 463,
	251, 2, 71, 467, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 2, -194, 475, 501, 219, 49, 48, 77, 29,
	406, 82, 379, 124, 130, 153, 549, 211, 239, 240,
	266, 96, 97, -435, 46, 259, 71, 258, 463, -633,
	462, -488, 521, 466, 472, 515, 270, 459, 539, 541,
	105, 563, 450, 589, 410, 411, 513, 424, 289, 162,
	195, 4, 123, 320, 449, 477, 274, 273, 531, 288,
	458, 382, 87, 623, -660, 2, 520, -662, 2, 539,
	539, 2, -662, 2, -662, 2, -662, 2, -663, 539,
	586, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, -236, -238, -237, 623, 623, 623, 623, 623, 623,
	623, -194, 475, 2, 77, 29, 29, -375, -377, 553,
	249, 155, 365, -235, -237, 2, -587, -539, 2, -462,
	-561, -464, 610, 611, 603, 517, 70, -341, 342, 590,
	-476, 130, 554, 359, -560, -465, -478, 158, 375, 454,
	-397, 8, 9, 5, 6, 7, -294, -466, -472, 545,
	173, 348, -334, 624, 10, 620, -584, -237, -477, 38,
	214, 68, -543, -333, -295, -515, 250, -332, -315, -581,
	-582, 4, -554, -555, -544, -518, -526, -522, -523, -529,
	-285, -557, 80, 114, 115, 113, 118, 117, 291, 290,
	119, 116, 477, 562, 69, 37, 223, 224, 255, 349,
	225, 78, -583, 145, -556, 247, 248, 492, 54, 413,
	183, 129, 128, 351, 59, 57, 570, -527, 125, 531,
	532, 533, 534, 199, 200, 61, 170, 171, 372, 396,
	511, 542, 544, 212, 277, 45, 109, 195, 244, 227,
	254, 256, 260, 278, 281, 321, 339, 344, 369, 371,
	448, 484, -666, 571, 506, 72, 73, -589, 416, -590,
	-309, -589, 623, 623, 625, 623, -366, -368, -370, 2,
	29, 142, 620, 2, -493, 2, -494, -498, -237, 271,
	-497, 620, -495, 618, -316, 360, -585, 455, -581, -582,
	-294, -315, -333, 4, -554, -556, 622, -371, 620, 123,
	465, 520, 81, 239, 96, 169, 196, -428, 620, -285,
	29, 359, 535, 625, -367, 404, -474, 620, 359, 362,
	194, 362, 63, 302, 2, 2, 2, 2, 2, 223,
	-285, 520, 122, 2, 269, 2, 2, 2, 2, 2,
	2, 2, -390, 223, 2, -316, 573, -390, 223, 2,
	-390, 223, 2, -434, 2, 90, -299, 223, 2, -285,
	-325, 223, 2, -320, -322, -329, 223, 2, -327, -285,
	-549, 223, 2, -547, 4, -554, 119, 477, -462, 2,
	-137, 2, 63, -285, 573, 2, 480, 2, 620, -149,
	2, 74, 539, 45, 475, -150, 2, -448, 2, -449,
	-281, -282, -283, -505, -284, 257, 403, 412, 593, 134,
	342, 589, -641, 194, 602, 535, -539, -539, -539, -398,
	622, -206, 56, -298, -652, -651, -652, -537, 29, -532,
	8, -533, 610, 611, -537, -537, -652, -652, 2, 2,
	2, 2, 2, 2, -498, 223, -316, 2, -313, -542,
	4, -554, -558, -555, -559, -557, 29, 32, 33, 34,
	36, 38, 39, 40, 42, 60, 68, 69, 75, 79,
	81, 90, 96, 105, 113, 114, 116, 115, 117, 118,
	119, 130, 134, 138, 142, 143, 147, 151, 155, 173,
	175, 188, 192, 194, 210, 213, 216, 230, 243, 249,
	251, 271, 275, 282, 290, 291, 342, 348, 354, 359,
	360, 364, 365, 385, 401, 419, 444, 470, 477, 495,
	514, 520, 529, 535, 537, 545, 553, 554, 562, 564,
	572, 580, 581, 582, 583, -560, 80, 2, -498, 223,
	2, -319, 223, -498, -322, 2, -299, 2, -462, -621,
	527, 165, 432, 2, -338, 223, -316, -318, -322, -320,
	2, 2, 2, 2, -462, 2, -551, 2, -546, 10,
	-545, 5, 4, -554, -558, -555, -327, 2, -547, 223,
	2, 29, 29, 573, 404, 251, 535, 625, -388, -330,
	-331, -538, 8, -381, -285, 622, -462, 2, -137, -120,
	2, 188, -462, 223, 2, -137, 223, 2, -462, 223,
	2, -137, 223, 2, -285, 2, -629, 2, -551, 223,
	223, -285, 2, 302, 2, 2, 543, 2, 101, 520,
	122, 2, 436, -648, 457, 547, 2, 2, 2, 2,
	2, 2, 2, 520, -304, 2, -285, 188, 504, -327,
	223, -328, 2, 471, -661, 416, -547, 223, 2, 573,
	-320, 223, 2, -320, 239, 253, -299, 223, 2, 525,
	523, 525, 523, 194, 2, 251, 2, 251, 2, -499,
	2, -500, -494, -501, 618, 360, -509, 2, -508, -545,
	569, -108, 620, -108, 620, 475, 620, -551, -316, -316,
	-462, 2, -137, -120, 2, -462, 2, -137, 2, -285,
	2, -134, -551, -133, 620, 194, 563, -285, 2, -462,
	2, -137, -120, 2, -462, 2, -137, 2, -228, 188,
	2, 123, 520, -194, 2, 188, 564, 2, 8, 2,
	230, -551, 466, 411, 180, 2, 480, 2, 481, 77,
	-435, 589, 77, 194, 2, 194, 2, -418, 2, 583,
	404, 194, 2, 2, -611, 2, 359, 194, 2, 194,
	2, 194, 2, 194, 2, 194, 2, -193, 476, 540,
	519, 408, 259, 2, -137, 580, -120, 259, 258, -462,
	580, 2, -634, 188, 463, -462, 2, 538, 268, 163,
	194, -418, 2, 194, 2, 194, 2, 5, 2, 409,
	502, 2, 257, 403, 502, 2, 500, 2, -316, 520,
	573, 471, 123, 29, 2, 462, 2, 2, 91, 92,
	194, 2, 194, 2, 209, 194, 2, 194, 520, -399,
	622, 589, 2, -410, -498, -447, -448, -447, 535, -375,
	-377, -194, 480, 2, -242, -408, -244, 188, -438, -439,
	-245, 282, 175, 354, -246, -417, 29, 142, -417, -417,
	63, 621, 621, 11, 12, 79, 43, 610, 611, 612,
	613, 186, 614, 615, 608, 609, 607, 600, 601, 605,
	263, 264, 98, 604, 602, 89, 296, 456, 176, 177,
	178, 179, 433, 237, 35, 238, 14, 15, 16, -341,
	34, 364, 281, 590, 227, 484, 603, 17, 18, 19,
	254, 256, 344, 53, 230, -293, 375, -340, 517, 70,
	-462, -462, -462, -462, -462, -462, -462, -462, 371, 620,
	-404, -457, 618, -237, 620, 620, 620, 620, -538, -237,
	-462, -476, 621, -395, 620, -237, -476, -471, 620, 454,
	618, 620, -479, -462, 5, 5, 5, 620, 622, -592,
	584, 188, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 398, -520,
	620, -519, 620, -519, -519, 574, -517, 620, 592, 585,
	620, -517, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 574, 625, -589, -371, 620,
	-400, -503, -462, 612, -400, -400, 359, -392, -462, 109,
	-421, 260, 321, 195, 278, 448, 244, -459, 624, -459,
	-487, 592, -237, -495, -315, -237, -497, 620, -493, -487,
	-109, -538, -92, -105, -114, -137, -152, -198, -199, 612,
	-316, 620, 194, 620, 622, -542, 194, -381, -299, -326,
	-285, -316, -332, -333, -338, -310, -285, 2, 2, 141,
	-392, -607, 548, 465, 29, 471, -549, -288, 39, -473,
	-512, -513, -563, 624, -562, -515, -525, -521, -524, 388,
	392, -544, 57, 570, -527, 250, 4, -554, -556, 247,
	248, 492, 54, 413, 183, 129, 128, 351, 59, 531,
	532, 533, 534, 199, 200, 61, 571, 506, 72, 73,
	-607, 548, 465, 29, 471, 188, -549, 188, -549, 2,
	2, 158, 2, 2, 2, -285, -263, 625, 67, 441,
	158, -390, 223, -263, 158, -263, 158, -339, 223, -338,
	-263, 158, -263, 625, 158, -263, 625, 158, 622, 625,
	158, -549, 2, -434, -541, -392, 39, -448, 2, 130,
	4, 5, -664, 625, 280, -344, 295, 341, 218, 360,
	587, 352, 134, -550, 5, 4, -472, -484, 130, 288,
	250, -532, -534, 9, -535, 610, 611, -540, -539, 112,
	622, -542, -207, 245, 41, -298, -298, -652, -652, 8,
	8, -652, -652, -298, -298, -260, 434, 478, 374, -259,
	25, 30, 146, 241, 326, 567, 164, -356, 242, 439,
	-353, 378, 158, 496, 557, -621, -624, 461, 527, 165,
	432, 93, 352, 478, 374, 434, 158, -414, -416, 39,
	121, 326, 373, 64, 233, 300, 301, 499, 577, 158,
	478, 374, 434, 374, -15, -274, 25, 146, -276, -271,
	478, -624, 102, 434, 596, 439, 384, 512, 401, -624,
	-621, 276, -623, 579, 340, -262, 496, 557, -621, -624,
	461, 434, -261, -358, -353, 378, 158, 624, 25, 146,
	434, 478, 374, -644, -645, 30, -255, -254, 25, 146,
	-258, 230, -257, 25, 434, 374, -615, -306, -586, 230,
	583, 158, -306, -306, -498, 223, -638, 188, 2, -631,
	-133, 272, 5, 10, -551, -133, -388, 625, 625, -542,
	612, 463, 462, 158, 158, 158, 158, 259, 188, 342,
	342, 583, 2, 2, 2, 2, 2, 196, -626, -649,
	2, 2, -316, 223, -373, 359, -610, -389, 520, -316,
	188, 342, 45, -319, 223, 2, -322, 573, -615, 342,
	-321, 223, -316, 39, 620, 342, 2, -434, 2, 239,
	-586, 342, -499, -335, -316, -494, -335, 478, -309, 39,
	-459, -316, 621, 625, -509, -509, -551, -216, 583, 194,
	620, -228, 583, 583, 259, -506, 625, -505, 230, -552,
	-551, -134, -551, 437, 194, 259, -551, -610, -299, 2,
	-316, 2, 520, 261, -551, -216, 230, -551, -551, -551,
	-541, 29, 481, 2, -193, 476, 540, 92, 481, 2,
	-316, 520, 123, 239, 83, -638, 188, 2, -285, -613,
	188, -608, 449, 465, 548, -607, -316, 123, -316, 123,
	-316, 123, -316, -316, 2, 2, 2, 2, 2, 88,
	2, -137, -462, 2, 88, 2, 48, 497, -634, 188,
	2, 538, 2, 538, 2, -285, -285, -285, 501, 280,
	583, -316, -316, -316, -317, -322, 466, 521, 549, 463,
	-462, 2, -653, 2, 194, 188, 2, 520, 239, 520,
	239, 123, 194, 77, 123, 29, 520, 460, 622, 4,
	-263, 625, -289, -242, -408, -541, -409, -408, -243, -242,
	-245, 188, 412, 558, 326, 482, 265, -439, -438, 29,
	-462, -443, 182, 325, -462, -441, -464, 610, 611, -533,
	-535, -391, 352, -236, -236, -236, -378, -489, -462, 401,
	239, -514, -512, -512, -314, -542, 531, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, 281, 227, 484, 53, 230, -462, 535,
	-462, -462, -462, -462, 318, 342, 348, 545, 173, 555,
	142, 352, -667, 514, 42, -469, -237, -396, 620, -483,
	36, 495, 29, -476, 620, 2, -457, -462, -458, -342,
	-340, -285, 610, 611, 612, 613, 614, 615, 600, 601,
	602, 14, 15, 16, 605, 609, 607, 608, 186, 98,
	604, 296, 456, 89, 176, 177, 178, 179, 263, 264,
	17, 18, 19, 35, 603, -393, -392, -392, 621, 572,
	29, 142, 612, 2, 621, 625, 39, 621, -462, -393,
	-475, -471, -392, -482, -481, 580, -429, -430, 588, 305,
	126, 221, 303, -431, 469, -536, 8, -542, 612, -593,
	181, 213, 620, 621, 2, 621, 2, 621, -462, 2,
	621, -462, 2, 621, -462, 2, 621, -462, 2, 621,
	2, 621, 2, -462, -462, -462, -462, -462, -462, -462,
	-392, 8, -536, -536, 531, 531, -536, -536, -536, -528,
	388, 389, 390, 391, 283, 284, 285, 286, 392, 393,
	394, 395, 310, 311, 312, 313, 306, 307, 308, 309,
	314, 315, 316, 317, 204, 205, 206, 207, 200, 201,
	202, 203, -528, -423, 2, -530, -392, 4, 588, 305,
	126, 221, 303, 469, 5, -423, 2, -424, 2, -462,
	-392, -425, -463, -464, 610, 611, 603, -341, -476, -426,
	2, -462, -393, -462, 60, 275, 537, -427, -462, 194,
	-392, -392, 2, -392, 2, -590, 39, -392, -384, 625,
	194, 39, 4, -384, -384, 620, 621, 625, -422, 217,
	299, 294, 253, -422, -493, -421, 260, -419, 369, -419,
	-419, -487, -300, 618, 626, -542, -487, -486, -485, 39,
	-309, 366, -487, -487, 622, 621, -486, 619, -605, 620,
	623, 623, 623, 623, 623, -316, 620, -392, -542, 622,
	503, 2, 621, 254, 254, 254, 254, 254, 359, 455,
	621, 535, -609, -325, -329, 521, 2, 583, -107, 361,
	621, 625, -383, 38, 618, 622, -536, 2, 2, -531,
	574, 620, 620, -430, 620, 194, -609, -329, 521, 2,
	-614, -382, -382, 535, -285, 2, -316, -390, -263, 158,
	-390, -390, -263, 625, 158, -299, -320, -325, -327, -329,
	-285, -547, -549, -263, -321, -641, 621, 539, -449, -343,
	412, 494, 435, 473, 516, 9, 9, 625, -542, -208,
	464, 326, -298, -298, -298, -298, 625, -642, 96, 535,
	81, 620, 465, -278, 289, 535, -453, 223, 81, -564,
	96, -302, -565, -285, 75, 554, 401, 192, 156, -642,
	96, 401, -642, 96, 2, 241, 96, 478, 501, 620,
	29, 63, -498, 43, 43, 29, -622, -623, 276, 194,
	589, 520, 239, 465, 535, 535, -498, -416, -512, 121,
	300, 301, 63, -537, -537, 63, -537, -537, -537, 583,
	-319, -498, 465, 535, 535, 535, 422, 422, -271, -150,
	535, 535, 29, -194, 442, 130, -665, 602, 422, 276,
	-623, 535, 194, 625, 43, 43, 29, -622, 194, 535,
	-338, -300, 568, 44, 568, 44, 568, 535, 44, 465,
	535, 625, 44, -254, -610, -610, -257, -551, -256, 324,
	535, 535, -15, 478, -616, -290, 108, 332, 293, 333,
	100, 329, 99, 328, 106, 330, 107, 331, 575, 345,
	576, 346, 66, 327, 304, 334, 498, 335, -291, -292,
	149, 380, 566, 123, -547, -15, -15, 478, 374, 434,
	158, -639, 230, 29, -628, 230, -506, 230, -506, -330,
	-285, 622, -137, -462, -462, -137, -462, -137, 48, 158,
	158, 2, 2, -661, 269, 620, -347, 342, 194, -381,
	-507, 251, 625, -389, -607, 158, -547, -415, -414, 342,
	-321, 223, 2, 158, -371, 342, 152, 620, 410, 2,
	158, -301, 223, -286, -285, -434, -265, 524, 158, -412,
	564, -444, -137, 620, 130, 39, -444, -401, -402, -504,
	-403, -302, 620, -309, -459, -108, -508, 621, 621, 621,
	-215, 363, -214, -285, 5, -228, -372, -303, -302, 122,
	414, 414, -222, 583, -133, -134, 621, 625, -506, 230,
	504, -134, -551, -216, -216, -506, -506, -316, 188, -551,
	-216, -216, -216, 2, 2, 2, 2, -418, -316, -299,
	-338, -316, 29, 622, -549, -549, -329, -325, -418, -299,
	-418, -299, -418, -299, -418, -418, -137, -462, 501, 2,
	475, 188, 188, 622, -418, -374, 444, 5, 2, 410,
	123, 520, 378, 239, -316, -338, -316, -338, -299, 123,
	-299, 124, -316, 4, -498, -409, -243, 360, 265, 482,
	-441, -442, -464, 454, 455, -442, 454, 455, 8, 9,
	8, 9, -247, 486, 347, -390, 625, -252, 40, 138,
	265, -316, 589, 154, -462, -462, 535, -667, 514, -469,
	154, -462, 318, 348, 545, 173, 555, 142, 352, 194,
	620, -463, -463, 621, -394, -462, -462, 619, 628, 621,
	622, 621, -377, 625, -375, -462, -392, -392, 621, 622,
	-392, -381, 619, 619, 625, 621, -480, -481, 147, -462,
	535, 535, 535, 535, 620, 621, 622, -598, 370, 620,
	620, -462, 621, 621, 621, 621, 39, 625, 625, 625,
	621, 625, 625, 625, 621, 621, 621, 625, 621, 589,
	589, 621, 621, 621, 621, 625, 621, 625, 621, 194,
	621, 621, -432, 385, 621, 11, 12, 610, 611, 612,
	613, 186, 614, 615, 608, 609, 607, 600, 601, 602,
	89, 296, 456, 14, 15, 16, -341, 254, 230, -463,
	-463, -463, -463, 621, -467, -468, 194, 188, 39, -427,
	-427, -427, 621, 194, -392, 621, 621, 620, -591, 298,
	342, 621, -456, -455, 581, -503, -385, 2, -493, -311,
	-542, -456, -456, -392, -462, 260, 260, -420, 564, 359,
	-422, -493, -486, -538, -461, -460, 190, 40, 138, 336,
	337, 338, 226, 191, -486, -309, -371, -486, -486, -542,
	-487, -487, -485, 621, -606, -538, 621, -386, -496, -585,
	-377, 622, -542, -225, -586, -195, 5, 348, -195, -195,
	-195, -195, -316, -549, 535, 535, 230, 26, 386, -512,
	618, 619, 8, -542, 620, -536, -536, -536, -549, 194,
	194, 230, 359, 194, -547, 2, -263, -390, -263, -263,
	-338, -339, -263, -263, -263, -413, 583, -539, -448, 552,
	86, 412, 531, -539, 120, 464, -259, 434, 478, -302,
	-302, -316, -232, -231, -229, -285, 5, -326, 208, 423,
	-547, 342, -453, 223, -264, 342, 223, -310, -512, 620,
	-436, 585, 265, 265, 564, -302, -310, 265, 223, -302,
	223, -310, 2, -310, -617, 412, 353, -462, -230, -229,
	63, -354, 287, 410, 343, -260, 434, 478, 374, -137,
	-137, -137, 620, -641, 564, 141, -316, -338, -316, -326,
	-547, -321, 478, 374, 434, 339, -332, -537, -537, -414,
	478, 374, 434, -326, -547, -319, -547, -270, 223, -285,
	-270, 223, 465, -299, 422, 589, 47, -665, 535, 194,
	-462, -462, -261, -137, -137, -137, 620, -300, -262, 434,
	5, 223, -302, 5, -302, 223, 5, -285, -302, -326,
	-547, -645, 25, 146, -302, -258, 602, -326, -547, -290,
	380, -551, 348, 560, -299, -615, -306, 465, 535, 535,
	-498, -635, -636, 210, 447, 465, 450, -549, -133, -219,
	583, -133, -213, 234, 612, -612, -551, -285, 573, -285,
	-345, -348, -346, -302, -454, -453, -568, -569, -564, 281,
	239, 554, 253, 174, 96, -233, -234, 585, 583, 158,
	-336, -316, 618, -216, -551, -316, -507, -327, -328, 158,
	-371, 342, -547, 39, 158, 620, 2, 2, -320, 359,
	342, -301, 223, -266, 148, -665, -299, -456, -385, -411,
	-446, 444, 359, -372, 569, -309, -411, -387, 625, 194,
	602, 622, -372, -502, 612, -108, -108, -216, 625, 620,
	602, 602, 620, -551, 621, 625, 622, 620, 602, 602,
	-224, 363, -223, 150, 267, 252, 488, 489, 490, 491,
	140, 487, 127, 323, 235, -506, -551, -222, -134, 194,
	-506, 230, 194, -67, 583, 520, -216, 624, 450, -285,
	-418, -418, -418, 475, 475, -285, -381, -312, -542, -299,
	-316, -313, -338, 188, 188, -299, 558, -442, 360, 292,
	-489, -253, 591, -316, 624, -462, -462, 154, 154, -462,
	-463, -463, -462, 154, 194, 620, -462, -473, 34, 34,
	621, 625, -458, -462, -340, 621, 572, -377, -377, 621,
	612, -542, 624, 621, -471, 151, -462, 529, 305, 221,
	303, -431, 303, -431, -431, -536, 5, -542, 612, -599,
	-305, 620, -285, 581, -376, 365, 621, -514, -512, -462,
	-462, -462, -462, -462, -536, -517, -517, -532, -532, -462,
	-467, -462, -514, -512, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, 142, 342, 352, -463, -468, -467,
	-462, -462, -512, 621, 621, 621, -392, -107, 620, 298,
	-405, 213, -462, -506, 625, -405, -405, 621, -493, -493,
	620, -462, 260, 619, 625, 627, 602, 602, -371, 622,
	-485, -486, 619, 621, 625, 621, 625, -445, 39, 621,
	-542, -456, -227, -226, 139, 56, 110, 137, 348, 254,
	-637, 583, -549, -549, 465, 362, 5, 8, 618, 619,
	622, -536, 621, 621, 621, -549, -549, 465, -607, 548,
	465, 29, -549, -263, -263, 122, 326, -462, -205, 583,
	585, 535, 535, 621, 625, 602, 63, 230, 158, 342,
	566, 342, -565, 156, -570, -462, 620, 239, 620, 620,
	2, -249, -250, -251, 146, 478, 25, -643, 2, 564,
	158, -263, 158, -263, 587, 621, 625, -354, 620, 620,
	535, 465, -278, 535, 583, -392, -462, -217, 130, -541,
	-624, 624, -624, 624, 465, 535, 535, 465, 535, 535,
	342, 158, 583, 172, 172, 589, -270, -462, -462, 188,
	535, 583, -392, 535, -516, 51, 27, 342, -320, -263,
	158, 535, 535, 548, 478, -133, -551, -551, 348, -15,
	-326, -547, -321, 478, 374, 434, -614, -614, 210, -329,
	-639, -506, -221, 363, -220, 150, 446, 140, 267, 235,
	-506, -219, 194, 251, 583, -321, 2, 621, 621, 625,
	625, -571, -264, -316, -301, 239, 239, -308, -286, 39,
	356, 356, 620, -316, -88, 583, -505, -538, -618, 583,
	45, -319, 39, 158, -615, -137, -321, -510, -511, 5,
	39, -316, 158, 359, 342, -267, 274, -665, -546, -586,
	-377, -411, -400, 343, 94, 621, -456, -402, -385, -462,
	2, 621, -214, -215, -551, -551, -551, -216, -228, -303,
	2, -552, -551, -551, 625, 620, 602, 602, 602, 602,
	602, 602, -222, -506, -133, -222, -134, -137, 363, -316,
	612, -418, -360, -359, 378, 352, -360, 454, 454, 360,
	182, 270, -252, -300, -462, -462, 154, 34, 34, -462,
	-462, -473, 621, -462, -462, -392, 619, 5, -462, 621,
	621, 8, -462, 621, 622, -600, -285, -462, 621, 63,
	621, 621, 625, 625, 621, 621, 621, 621, 621, 621,
	621, -468, 194, 142, 352, 620, 621, 621, -107, -470,
	216, 63, -493, -470, -470, -420, -381, -493, -460, -300,
	618, -300, 618, -542, -538, -496, 620, 622, -226, 602,
	-551, -551, -195, 210, -637, -637, 583, -329, 619, 2,
	618, -542, 621, -329, 194, -609, -329, 521, 122, 188,
	220, 220, -302, -302, -231, -539, 520, 454, -270, 401,
	-453, 158, 158, -572, 96, -574, 79, 174, 105, 342,
	348, 554, 401, 75, 130, 359, 419, -655, -656, -657,
	39, 594, 595, 621, -379, -490, -585, 620, -285, -379,
	-381, 342, 509, 130, 359, 342, 130, 359, 578, 122,
	2, 548, 82, -302, -310, -229, -381, -381, -316, -326,
	-547, 166, 621, 625, 602, 2, 612, 612, -326, -547,
	-321, -326, -547, -319, 158, -270, 376, 172, 535, -137,
	-462, 166, 621, -300, 5, 5, 158, -297, 79, -302,
	5, -302, -320, 122, 583, 465, 535, 535, 359, 359,
	362, -635, -636, -219, 625, 620, 602, 602, 602, -219,
	-552, -133, 2, -371, -361, 241, -302, -569, -566, -567,
	401, -454, -573, -575, 174, 401, -349, 620, -301, -286,
	620, -137, 2, -232, 620, -347, 363, 619, -620, 363,
	-619, 120, 140, -547, -415, -137, -321, -369, 583, -371,
	621, 625, 152, -437, 564, -300, -316, 158, -268, 273,
	-665, -546, -265, -440, -438, 143, 620, 359, -137, -377,
	602, 621, 621, 122, 621, -223, -224, -551, -133, -551,
	-551, -551, -133, -222, -506, -506, -68, -69, 239, 96,
	383, -313, 520, 239, 620, 620, -252, -462, -462, -462,
	621, -377, -542, 612, -594, 378, 621, -489, -462, -462,
	-463, 194, 620, -473, 621, -595, 582, -462, -406, -407,
	-462, 452, 111, 214, -595, -595, 621, -538, -538, 2,
	-551, 362, 2, 535, 618, 2, 194, -549, 194, 194,
	230, -137, 230, 39, 422, -453, -310, -310, -314, -307,
	-285, 174, 223, 348, 578, -436, 265, 620, -463, 558,
	-316, 620, 2, 222, 222, 31, 63, -658, 134, 243,
	621, 625, -491, -296, -285, -462, -491, 621, 621, 348,
	558, 348, 578, -462, 558, -512, 620, -263, -263, 621,
	621, -462, 535, -541, 103, -539, 2, -624, -270, -299,
	-462, 188, -462, 535, 5, -263, -314, -263, -263, -297,
	548, 358, -326, -547, -321, -640, 521, 472, 549, 466,
	197, 453, -640, 188, -220, -221, -551, -133, -133, -219,
	39, -355, -356, 2, -571, 265, -307, 265, 232, 157,
	-379, 620, 620, -381, -654, 583, 621, -345, -233, -89,
	-90, 536, -505, 625, 620, 602, -371, 326, 122, 39,
	5, 620, 620, -285, 359, 620, -300, -280, 95, -665,
	-546, -266, -411, 343, -381, 96, -440, -469, -216, 620,
	-216, 621, -222, 625, 29, 620, 29, 620, -316, -338,
	-392, -392, 621, -377, 63, 625, 621, 621, -463, -473,
	621, -596, -597, -305, 625, 620, 620, 479, 619, 619,
	-549, 2, -549, -549, -549, 465, -270, 401, -285, -565,
	-574, -307, 342, -234, 564, 583, -462, -463, -287, 620,
	-462, 620, 620, 39, 130, 243, 135, 228, -452, -659,
	104, 510, 231, -490, -252, 621, -451, 564, 419, -463,
	-297, -379, 620, 620, 620, 602, 194, -137, 620, -516,
	-263, -320, 602, 535, 2, 2, 194, -614, 621, -630,
	417, -137, -233, 620, -234, -350, 84, 97, 131, 222,
	198, 240, 501, 507, 29, -350, 621, -379, -379, 621,
	-351, 359, 122, 326, 621, 39, -90, 9, -619, -620,
	-462, 39, 122, -137, -510, -379, -316, -379, 359, -272,
	-271, 282, -546, -267, 621, -310, -411, -552, -69, -381,
	-381, 621, 621, -601, 410, 455, 215, -392, -378, 621,
	625, 39, -407, 2, 2, 2, -637, -329, 422, -264,
	158, 217, 621, -576, 297, -285, 621, -415, -415, 39,
	135, 228, -357, -353, 620, -253, -491, -234, 217, -316,
	-625, 564, 621, -363, -362, -359, -365, -364, -359, -392,
	-539, 103, 376, -392, -297, -133, -549, -549, 359, -632,
	195, -631, 5, 10, -351, -380, -492, -302, -451, 621,
	621, 85, 122, -361, -137, 621, -137, 2, -369, 621,
	621, -437, 621, -316, -269, -553, 422, 424, -665, -268,
	-456, 143, 621, 621, 621, 621, -602, -603, 53, 551,
	112, -462, -602, -602, -597, -599, 194, 174, -450, 592,
	-577, -580, -579, 599, 485, 195, 377, 621, 509, 577,
	621, 621, -658, -381, -450, -371, -462, -451, 621, 625,
	569, 621, 625, 569, 621, 194, 621, -263, -637, -263,
	-640, -218, 583, 48, -279, -278, 621, 625, -452, -451,
	-357, 400, 136, 146, -355, -654, -451, 620, -452, 620,
	-277, -276, -665, -532, -280, 143, 343, 558, -216, -604,
	156, -603, 397, 187, 454, 397, 187, -604, -604, -549,
	-307, -234, 58, -579, 599, -580, 599, 558, 136, -456,
	621, -576, -234, -362, 230, -364, 194, 376, 194, 462,
	-631, 31, -234, -492, -357, -452, -234, 455, 455, 2,
	-233, -351, -452, -379, -357, -379, -273, -274, -275, -381,
	-272, 343, 558, 478, 112, 213, 530, 326, 34, 602,
	-578, 326, 441, 67, 478, -578, -577, 620, 620, -549,
	363, -234, -357, -456, 2, -351, -357, 621, -234, 621,
	-548, 374, -269, 478, -401, 454, 367, -603, -462, 24,
	348, 130, -658, -392, -392, -263, -215, 620, -456, -234,
	-279, -234, -451, -456, -452, -665, -277, -401, -456, 621,
	621, -215, -456, -456, -452, -357, -547, -273, -456, -352,
	-353, 535, 621, -357, -234, 620, -234, -456, -392, -456,
	621, -352,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 575, 576, 578, 579, 580,
	582, 583, 585, 587, 589, 590, 591, 593, 594, 596,
	597, 598, 599, 600, 602, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 689, 691, 0, 1512, 1514, 1516, 1518, 0, 0,
	-2, 0, 40, 41, 43, 0, -2, 352, 354, 356,
	358, 0, 390, 392, 393, 395, 397, 398, 399, 401,
	-2, 0, 508, 509, 511, 513, -2, 0, 1099, 1101,
	1103, 0, 677, 679, 0, 1106, 1108, 1110, 0, 0,
	701, 702, 0, 1626, -2, 693, 695, 697, 699, 770,
	772, 774, 776, 778, 780, 782, 784, 786, 788, 789,
	791, 793, 795, 797, 799, 800, 802, 804, 806, 807,
	809, 810, 812, 814, 816, 818, 820, 822, 824, 826,
	828, 830, 832, 834, 836, 838, -2, 841, 842, 843,
	-2, -2, 0, -2, -2, -2, 1530, 45, 47, 49,
	51, 53, 55, 57, 59, 61, 63, 65, 67, 452,
	454, 456, 458, 460, 463, 465, 467, 1684, 515, 517,
	519, 521, 523, 525, 527, 0, 0, -2, 1698, 0,
	0, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 117, 118, 119, 120, 121, 122, 123, 82, 83,
	84, 86, 87, 88, 89, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 114, 115, 80, 0, 0,
	1657, 1659, 1661, 1663, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 33,
	35, 37, 577, 581, 584, 586, 588, 592, 595, 601,
	603, 605, 560, 561, 564, 2396, 2414, 2415, 2416, 2419,
	2420, 2421, 2422, 2423, 2424, 2899, 2980, 2981, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
	2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
	2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817,
	2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827,
	2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837,
	2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847,
	2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857,
	2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867,
	2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877,
	2878, 562, 563, 1293, 0, 642, 640, 2381, 643, 2688,
	645, 647, 502, 503, 504, 505, 506, 507, 0, 670,
	656, 1696, 671, 673, 674, 675, 676, 637, 635, 0,
	675, 670, 2451, 668, 1510, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 431, 1352, 1353,
	1354, 1495, 1496, 2739, 1537, 0, 249, 690, -2, -2,
	2864, -2, 724, 725, -2, -2, 739, 743, 734, 2868,
	0, 2742, 2725, -2, 746, 1513, 1515, 1517, 845, 846,
	847, 2400, 851, 849, 861, 862, 863, 0, 880, -2,
	0, 2447, 2710, -2, -2, 881, 882, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 42, 44, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 259,
	-2, -2, -2, -2, 0, 0, 2789, 2505, 2349, 2416,
	2352, 2347, 353, 355, 357, 359, 360, 0, 0, 0,
	0, 0, 0, 0, 391, 394, 396, 400, -2, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 1173, 1165, 1166, 1417, 0, 0, 0, -2,
	510, 512, 565, 566, 0, 1685, 1685, 573, 574, -2,
	0, 0, 0, 0, 323, 313, 1100, 1102, 1104, 1105,
	0, 0, 0, 0, 0, 678, 680, 0, 0, 2783,
	291, 1107, 1109, 1111, 1112, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 694, 696, 698, 700, 771, 773,
	775, 777, 779, 781, 783, 785, 787, 790, 792, 794,
	796, 798, 801, 803, 805, 808, 811, 813, 815, 817,
	819, 821, 823, 825, 827, 829, 831, 833, 835, 837,
	839, 840, 888, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 990, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 1080, 0,
	0, 891, 894, 895, 896, 897, 898, 899, 0, 963,
	988, 989, 999, 844, 0, 1333, 1686, 1539, 1520, 1534,
	1539, 1522, 1523, 1524, 1525, 1526, 1531, 1533, 1527, 1528,
	1529, 46, 48, 50, 52, 54, 56, 58, 60, 62,
	64, 66, 68, 453, 455, 457, 459, 461, 464, 466,
	468, -2, 1655, 1656, 516, 518, 520, 522, 524, 526,
	528, 681, 0, 684, 0, 893, 683, -2, 0, 1690,
	1690, 1690, 0, 0, 1656, 1654, 0, 687, 688, 750,
	751, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	2223, 2051, 0, 752, -2, 2084, 2086, 2839, 2661, 2864,
	2222, 2088, 2089, 2090, 2091, 2092, 0, 2094, 2095, 2096,
	2097, 2098, 2099, 0, 2101, 0, 2106, 2107, 2108, 0,
	2846, 2326, 2410, -2, 0, 0, 2852, 2406, 0, 2189,
	2124, -2, -2, 2433, 2412, 1895, 1896, 1897, 1898, 1899,
	-2, -2, 2882, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 0, 2827, 2847, 2848, 2853, 2855,
	2849, 2836, 2149, 2519, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1922, 1931, -2,
	-2, -2, -2, -2, -2, -2, 2840, 2841, 2858, 2861,
	2867, 2872, 2873, 2845, 2854, 2881, 2883, 2884, 2885, 2886,
	2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896,
	2897, 2898, 1923, -2, -2, -2, -2, 1673, 2703, 1676,
	1293, 1674, 1658, 1660, 0, 1662, 0, 0, 0, 1667,
	1693, 1691, 0, 1742, 1671, 1672, 1765, 1765, 1789, 0,
	1770, 0, 1789, 1685, 1816, 0, 1776, 2730, 2125, 2126,
	0, 2416, 2411, -2, -2, 2879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 0, 644,
	646, 0, 0, 0, 669, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 435, 436, 437, 438, 2847,
	0, 0, 0, 443, 0, 445, 446, 447, 448, 449,
	450, 451, 219, 2847, 533, 558, 0, 219, 2847, 536,
	219, 2847, 539, 0, 542, 1415, 219, 2847, 545, 2377,
	219, 2847, 548, 550, 2385, 219, 2847, 554, 2392, 2390,
	555, 0, 557, 239, 235, 236, 237, 238, 1506, 1507,
	1508, 1509, 0, 1536, 1416, 692, 0, 718, 0, 722,
	723, 2835, -2, 0, 2751, 727, 728, -2, 730, 1540,
	1544, 1545, 1546, 1547, 1548, 0, 0, 0, 0, 1553,
	0, 0, 0, 0, 719, 720, 737, 738, 744, 747,
	0, 854, 850, 864, 0, 879, 0, 880, 880, 2366,
	2357, 2358, 0, 0, 880, 880, 0, 0, 883, 884,
	885, 886, 887, 79, 0, 2847, 1816, 81, 0, 2371,
	2441, 2442, 2443, 2444, 2445, 2880, 2900, 2901, 2902, 2903,
	2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913,
	2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923,
	2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933,
	2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943,
	2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953,
	2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963,
	2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973,
	2974, 2975, 2976, 2977, 2978, 2979, 2882, 85, 0, 2847,
	90, 0, 2847, 0, -2, 103, 0, 116, 0, 143,
	-2, -2, -2, 124, 0, 2847, 0, 2346, -2, 0,
	231, 314, 315, 316, 0, 621, 0, 628, 326, 327,
	2429, 2430, 2437, 2438, 2439, 2440, 0, 1137, -2, 0,
	1346, 1348, 1348, 0, -2, 0, 0, 0, 1090, 2343,
	2348, 1091, 2367, 1092, 2353, 0, 361, 362, 363, 364,
	365, 0, 366, 2847, 368, 369, 0, 371, 372, 2847,
	374, 375, 0, 377, 0, 379, 0, 271, 275, 2847,
	2847, 404, 407, 0, 409, 410, 0, 412, 0, 0,
	0, 416, -2, 432, 0, 429, 419, 420, 422, 423,
	424, 425, 426, 0, 472, 470, 2382, 0, 0, -2,
	2847, 0, 1134, 0, 0, 1395, -2, 0, 1339, 0,
	1402, 2847, 1398, 0, -2, 0, 1683, 2847, 1557, 1169,
	1170, 1171, 1172, 1828, 499, 0, 1590, 0, 1592, 0,
	1612, 1822, 1765, 0, 0, 1827, 0, -2, 618, 2399,
	-2, 568, 0, 569, 0, -2, 0, 340, 0, 0,
	1115, 1117, 1118, 1120, 1121, 1124, 1125, 1126, 1127, 0,
	1129, 1802, 292, 294, 0, 0, 0, 0, 1114, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 0, 0,
	703, 0, 0, 889, 890, 0, 0, 906, 907, 908,
	0, 340, 2743, 2698, 2541, 915, 0, 918, 921, -2,
	0, 0, 0, 0, 925, 0, 930, 931, 932, 0,
	-2, 0, 939, 941, 1098, 943, 0, 0, 945, 0,
	949, 0, 952, 0, 954, 0, 956, -2, -2, -2,
	964, 965, -2, 970, -2, 0, 974, -2, 0, 977,
	0, 980, -2, 0, 990, 986, 987, 0, 0, 0,
	0, 1007, 1008, 0, 1017, 0, 1020, 1021, 1022, 0,
	1026, 1027, 0, 1029, 1030, 1031, 1033, 1034, 1035, 0,
	2817, 2748, 2505, 0, 1043, -2, 1049, 1051, 0, -2,
	0, 1067, 0, 1071, 0, 0, 1079, 0, 0, 892,
	0, 900, 901, 219, 1820, 1519, -2, 1521, 0, -2,
	0, 682, 0, 686, 1715, 1641, 1638, 0, 1712, 1713,
	1642, 0, 0, 0, 1649, 0, 1688, 1689, 0, 0,
	0, 1628, 1629, 0, 0, 0, 0, 2228, 2229, 2230,
	2231, 2244, 2232, 2233, 2243, 2241, 2242, 2234, 2235, 2240,
	2254, 2255, 2245, 2246, 2236, 2249, 2247, 2248, 2250, 2251,
	2252, 2253, 0, 0, 2259, 0, 2237, 2238, 2239, 2267,
	0, 0, 2268, 0, 2270, 0, 2260, 2256, 2257, 2258,
	0, 2030, 2032, 2334, 0, 0, 0, 2266, 2261, 2262,
	1968, 1969, 1970, 1971, 1972, 2005, 2009, 2010, 0, 0,
	2085, 2331, 2330, 2087, 0, 0, 2282, 0, 2100, -2,
	0, 2223, 2277, 0, 0, 2109, 2110, 2111, 0, 0,
	2282, 0, 0, 2325, 2121, 2122, 1960, 0, 0, 2191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1909, 1908,
	0, 1910, 0, 1911, 1912, 1919, 1932, 0, 0, 0,
	0, 1936, 0, 0, 0, 0, 0, 0, 0, 2306,
	-2, 0, 0, 0, 0, 1924, 0, 1675, 0, 0,
	1746, 2335, 2339, 2340, 1746, 1746, 0, 0, 2283, 1813,
	1813, 0, 0, 1808, 1808, 1808, 1806, 1789, 0, 1789,
	1799, 0, 1789, 1789, 0, -2, 1770, 0, 0, 1799,
	0, 1783, 606, 608, 610, 612, 613, 614, 616, 1817,
	1818, 0, 0, 0, 0, 2417, 0, 0, 0, 0,
	2389, 0, 0, 2402, 0, 0, 2376, 386, 387, 0,
	0, 0, 2800, 2742, 0, -2, 649, 672, 1685, 0,
	2285, 1843, 1847, 0, 1849, 1850, 1851, 1852, 1853, 0,
	0, 1844, -2, 1920, 1922, 1943, 2434, 2435, 2436, 1903,
	1904, 1905, 1906, 1907, 1915, 1902, 1902, 1902, 1913, 1942,
	1934, 1942, 1938, 1888, 1889, 1890, 1925, 1926, 1927, 1928,
	0, 2800, 2742, 0, -2, 0, 659, 0, 0, 1623,
	433, 0, 440, 441, 442, 0, 529, 0, 217, 218,
	0, 219, 2847, 534, 0, 537, 0, 219, 2847, 2341,
	543, 0, 546, 0, 0, 552, 0, 0, 0, 0,
	0, 219, 1625, 0, 0, 0, 0, -2, 732, 740,
	741, 742, 0, 1542, 0, 1549, 761, 762, 763, 1551,
	1552, 0, 1554, 735, 764, 765, 766, 767, 768, 769,
	0, 2355, 2356, 2361, 2362, 0, 0, 733, 754, 736,
	0, 748, 857, 852, 853, 865, 866, 0, 0, 2359,
	2360, 0, 0, 871, 872, 125, 1492, 0, 0, 172,
	0, 1492, 1492, 0, 0, 0, 0, 200, 0, 0,
	1203, 0, 0, 0, 0, 143, 157, 168, 137, 138,
	139, 0, 0, 0, 0, 0, 0, 91, 1315, 0,
	1318, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	0, 0, 0, 0, 105, 106, 0, 0, 111, 112,
	0, 156, 0, 0, 0, 0, 0, 1587, 0, 147,
	143, 0, 0, 142, 144, 127, 0, 0, 143, 158,
	170, 0, 206, 208, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 241, 0, 620, 622, 0, 0,
	626, 0, 629, 0, 0, 0, 1340, 0, 0, 0,
	1682, 0, 0, 0, 0, 2847, 1490, 0, 1475, 0,
	1802, 2592, -2, -2, 292, 1802, 1089, 0, 0, 2417,
	2351, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	0, 0, 408, 411, 413, 414, 415, 0, 1394, 0,
	421, 462, 1262, 2847, 0, 0, 489, 484, 0, 486,
	0, 0, 0, 1314, 2847, 1312, 2386, 0, 1337, 0,
	1293, 2847, 2384, 0, 0, 0, 1403, 2426, 1412, 1416,
	1575, 0, 501, 0, 1593, 1595, 0, 0, 1823, 0,
	1825, 1765, 1685, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 1128, 298, 0, 1801, 0, 0,
	328, 1802, 292, 2716, 0, 1113, 340, 340, 1802, 705,
	1802, 707, 0, 0, 909, 910, 0, 340, 340, 340,
	916, 917, 919, 920, -2, -2, -2, -2, 922, 923,
	1014, 0, 0, 0, 1013, 933, 0, 935, 938, 942,
	0, 1083, 2725, 2742, 2800, 1096, 1014, 2505, 1014, 2505,
	1014, 2505, 1014, 1014, 958, 1002, 1010, 969, 976, 0,
	971, 975, 978, 981, 0, 983, 991, 0, -2, 0,
	994, 0, 996, 0, 998, 1014, 1015, 1018, 1025, 1028,
	0, 1036, 1037, 1038, 1039, 2397, 1040, 1041, 1042, -2,
	1046, 1047, 0, 1058, 1063, 1064, 1060, 0, 0, 0,
	0, 0, 0, 1074, 1075, 0, 0, 1082, 0, 902,
	1332, 0, 1532, 1715, 1641, 685, 1632, 1714, 1633, 1640,
	1643, 0, 0, 1645, 0, 1647, 0, 1710, 1711, 1718,
	1719, 0, 1729, 1730, 1722, 0, -2, 0, 0, 1725,
	1726, 1651, 0, 1668, 1669, 1670, 1699, 1702, 1431, 0,
	2980, 1964, 1838, 1965, 1966, 2370, 0, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, -2, -2, -2,
	-2, -2, -2, -2, -2, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, -2, -2, -2, 2006,
	2007, 2008, -2, 2269, 2271, 0, 2334, 0, -2, 0,
	-2, -2, -2, -2, 2027, 0, 2029, 2034, 2036, 2038,
	0, 0, 0, 0, 2333, 2048, 2317, 2318, 0, 0,
	2225, 2226, 2227, 2033, 0, 2052, 2332, 2329, 0, 0,
	2263, 0, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 0, 2281, 1698, 2113, 0,
	0, 0, 0, 2120, 2105, 2279, 0, 2278, 0, 0,
	0, 2289, 0, 2324, 2320, 0, 2368, 1959, 1946, 1947,
	1948, 1949, 1950, 1951, 1961, 0, 2365, 2403, 2409, 2199,
	0, 0, 0, 2150, 2151, 2152, 2153, 2154, 0, 2156,
	2157, 0, 2159, 2160, 0, 2162, 2163, 0, 2165, 2166,
	2167, 2168, 2169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 0, 0, 2171, 0, 2292, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2173, 0, 2175, 2283,
	2303, 0, 0, 2053, 0, 0, 0, 0, 2223, 0,
	2178, 2283, 2311, 0, 0, 0, 0, 0, 2283, 0,
	2316, 0, 2185, 0, 2187, 1677, 0, 0, 1833, 0,
	0, 0, 2338, 1833, 1833, 0, 1741, 0, 0, 1809,
	1810, 1811, 1812, 0, 0, 1813, 0, 1803, 1807, 1804,
	1805, 1799, 1762, 0, 0, 2372, 1799, 1768, 1798, 0,
	1293, 1788, 1799, 1799, 0, -2, 1772, 1789, 0, 0,
	607, 609, 611, 615, 617, 0, 0, 1698, -2, 0,
	-2, 342, 1292, 0, 0, 0, 0, 0, 0, 639,
	641, 0, 0, 549, 0, 0, 655, 0, 633, 0,
	636, 0, 1834, 1837, 0, 0, 1848, 1854, 1855, 0,
	-2, 0, 0, 1944, 0, 0, 0, 0, 0, 667,
	0, 670, 0, 0, 0, 444, 559, 219, 531, 0,
	219, 219, 540, 0, 0, 219, 551, 219, 2393, 219,
	2391, 240, 556, 1624, 252, 0, 721, 0, 1541, 1550,
	0, 758, 0, 760, 0, 2363, 2364, 0, 749, 0,
	855, 0, 867, 868, 869, 870, 0, 0, 0, 0,
	1491, 0, 0, 1438, 0, 0, 176, 2847, 0, 221,
	0, 0, 1255, 2378, 0, 1245, 0, 0, 2527, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 140, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 1317, 1319,
	1326, 1328, 0, 1322, 1323, 0, 1325, 1327, 1329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 1349,
	0, 0, 1350, 1351, 1563, 1564, 0, 1586, 1587, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 2345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 623, 624, 625, 630, 0, 631, 0,
	0, 0, 1342, 0, 1390, 1388, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	0, 0, 0, 0, -2, 1344, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 331, 2344,
	2354, 0, 1122, 1123, 367, 370, 373, 376, 258, 0,
	0, 406, 417, 0, 0, 1175, 1147, 0, 0, 471,
	340, 0, 0, 485, 489, 2395, 1132, 1310, 1313, 0,
	1293, 2847, 1360, 0, 0, 0, 0, 0, 0, 1401,
	0, 0, 2847, 2373, 2425, 2426, 1577, 1587, 0, 1833,
	0, 1610, 1596, 0, 0, 0, 1610, 1614, 1615, 1617,
	1618, 0, 0, 1824, 1830, 567, 619, 1685, 1685, 340,
	338, 2664, 336, 333, 335, 0, 0, 1599, 1601, 0,
	0, 0, 284, 0, 295, 1802, 293, 0, 298, 0,
	0, 1802, 292, 0, 483, 704, 709, 904, 0, 340,
	912, 913, 914, 960, 1004, 1012, 1062, 924, 926, 927,
	928, 0, 0, 0, 1097, 1093, 1094, 1095, 944, 1014,
	947, 1014, 950, 1014, 953, 955, 973, 979, 992, 985,
	993, 0, 0, 0, 1006, 1023, 0, 1032, 1045, 0,
	0, 0, 0, 0, 0, 0, 1068, 1069, 1070, 1072,
	1077, 1076, 1081, 903, 1821, 1636, 1637, 1639, 0, 1648,
	0, 0, 1724, -2, -2, 1723, 1727, 1728, -2, -2,
	-2, -2, 1644, 0, 1653, 1650, 0, 1709, 1429, 1430,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 2049,
	0, -2, 2028, 2031, 2035, 2037, 2039, 0, 0, 0,
	0, 0, 0, 2272, 0, 2274, 2050, 2327, 2330, 2265,
	0, 2221, 0, 0, 1697, 1698, 1698, 0, 2119, 0,
	2280, 0, 2287, 2288, 0, 2112, 0, 2321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2123, 0, 0,
	0, 0, 2155, 2158, 2161, 2164, 0, 0, 0, 0,
	2144, 0, 0, 0, 2148, 1914, 1900, 0, 1942, 1940,
	1941, 1935, 1942, 1939, 1892, 0, 1891, 0, 2170, 0,
	2172, 2174, 0, 0, 2176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2056,
	2057, 2058, 2078, 2177, 2309, 2310, 0, 0, 0, 0,
	0, 0, 2183, 0, 2315, 2184, 2186, 1685, 0, 1678,
	0, 1743, 1732, 1832, 0, 2336, 1802, 1745, 1747, 2337,
	2375, 1732, 1732, 0, 2284, 0, 0, 1793, 0, 0,
	0, 1795, 1766, 0, 0, 1760, 0, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1767, 1293, 1797, 1769, 1773, 2403,
	0, 1799, 0, 1784, 0, 1786, 1819, 0, 1778, 1781,
	0, 0, 2418, 1833, 0, 380, 388, 389, 381, 382,
	383, 384, 0, 1478, 0, 0, 0, 0, 0, 2286,
	0, 1839, 0, 1845, 0, 0, 0, 0, 657, 0,
	0, 0, 0, 0, 1622, 439, 530, 219, 535, 538,
	2342, 219, 544, 547, 553, 248, 0, 717, -2, 756,
	757, 759, 0, 755, 860, 856, 173, 1492, 0, 0,
	0, 1434, 0, 1158, 0, 1153, 1154, 1436, 1440, 1446,
	1449, 0, 178, 2847, 190, 0, 2847, 0, 1219, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 2847, 219,
	2847, 219, 194, 196, 199, 0, 205, 201, 0, 1155,
	0, 1207, 0, 0, 1210, 126, 1492, 0, 0, 129,
	133, 145, 0, 0, 0, 155, 0, 0, 0, 1451,
	1455, 1463, 0, 0, 0, 1320, 1321, 1324, 1330, 92,
	0, 0, 0, 1459, 1461, 1467, 104, 107, 2847, 2387,
	109, 2847, 0, 1433, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 131, 135, 146, 0, 1469, 128, 0,
	234, 0, 0, 224, 219, 2847, 0, 226, 0, 227,
	228, 242, 0, 0, 0, 627, 0, 1135, 1136, 1389,
	0, 1335, 1336, 0, 1347, 1341, 0, 0, 0, 0,
	0, 1471, 1472, 0, 0, 0, 1490, 1487, 1802, 254,
	0, 1802, 262, 0, 2350, 0, 276, 403, 0, 0,
	0, 0, 1174, 1273, 1176, 1178, 1179, 1180, 221, 0,
	2426, 1245, 2581, 2426, 0, 0, 1142, 0, 0, 0,
	477, 473, 0, 482, 488, 487, 493, -2, 0, 0,
	0, 0, -2, 0, 0, 1405, 1399, 1400, 0, 0,
	0, 0, 2847, 1579, 1587, 0, 1683, 1698, 500, 1588,
	1610, 0, 0, 0, 1598, 1594, 1591, 1833, 0, 0,
	0, 0, 0, 1826, 1829, 570, 571, 317, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	296, 0, 299, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 0, 0, 0, 298, 329, 286, 1802, 0,
	298, 0, 0, 706, 0, 0, 911, 0, 934, 937,
	946, 948, 951, 995, 997, 1014, 1024, 1052, 2374, 1053,
	1197, 0, 1197, 0, 0, 1073, 1646, 0, 1721, 1652,
	1703, 1704, 0, 1431, 0, 1967, 2012, 0, 0, -2,
	0, 0, 2016, 0, 0, 0, -2, 0, 0, 0,
	2273, 2275, 0, 2329, 2264, 2114, 0, 0, 0, 2118,
	2102, 2103, 0, 2224, 2290, 2319, 2323, 0, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 0, 2369, 2404, 2408, 2197,
	2198, 2202, 2383, 0, 0, 0, 2127, 0, 0, 0,
	0, 0, 0, 0, 0, 1933, 1937, 0, 0, 2291,
	2302, 2304, 2054, 2055, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, -2, -2, -2, 2072, 2073, 2074,
	-2, -2, -2, 2079, 0, 0, 0, 2305, 2307, 2308,
	2312, 2313, 0, 2180, 2181, 2182, 2314, 0, 1685, 1679,
	1740, 0, 1831, 1744, 0, 1740, 1740, 1692, 1791, 0,
	0, 1815, 0, 1763, 0, 1764, 0, 0, 1796, 0,
	1771, 1774, 1775, 1785, 0, 1777, 0, 1780, 0, 2114,
	-2, 341, 343, 345, 0, 348, 349, 0, 0, 0,
	648, 0, 1478, 1478, 0, 650, 634, 0, 0, 1841,
	0, 0, 1917, 1921, 1945, 661, 663, 0, 0, 2800,
	2742, 0, 660, 532, 541, 250, 0, 1800, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	220, 0, 1254, 0, 1217, 0, 0, 1244, 0, 0,
	1260, 180, 181, 182, 0, 0, 0, 0, 192, 0,
	0, 188, 0, 198, 204, 203, 0, 1204, 0, 0,
	0, 0, 1439, 0, 0, 0, 152, 153, 154, 0,
	159, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 1570, 0, 1560, 149, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 1428, 244,
	0, 0, 0, 0, 0, 0, 1334, 1392, 1393, 1343,
	1452, 1456, 1464, 0, 0, 0, 0, 0, 675, 1489,
	0, 262, 260, 0, 263, 0, 266, 267, 0, 0,
	262, 256, 0, 0, 0, 1293, 418, 1145, 1261, 0,
	0, 1263, 1181, 1185, 0, 2426, 2426, 0, 2380, 0,
	1143, 0, 0, 1262, 469, 0, 476, 0, 490, 0,
	0, 1314, 0, 0, 1338, 1363, 1293, 0, 1404, 1406,
	0, 1414, 0, 0, 0, 1581, 1587, 0, 1574, 1575,
	1717, 1589, 1608, -2, 0, 0, 1698, 1616, 1613, 1619,
	1620, 0, 337, 0, 332, 334, 0, 320, 0, 1600,
	1602, 0, 1116, 1119, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 298, 1802, 288, 1802, 324, 0, 905,
	929, 1005, 1054, 1196, 0, 0, 1056, 0, 0, 1720,
	1707, 1708, 1705, 1431, 2014, 2018, 0, 0, 0, 2020,
	-2, 0, 2042, -2, -2, 2276, 2328, 2093, 1698, 2115,
	2117, 2104, 2322, 1962, 0, 2204, 2201, 0, 2188, 0,
	2139, 2140, 0, 0, 2143, 2145, 2146, 2147, 1901, 1894,
	1893, 2301, 0, 0, 0, 0, 2179, 1680, 0, 2193,
	0, 0, 1748, 2193, 2193, 1792, 0, 1794, 1761, 1749,
	0, 1758, 0, 2404, 1787, 1779, 0, 0, 346, 0,
	350, 351, 385, 0, 651, 652, 0, 0, 1835, 1840,
	0, 1846, 1916, 0, 0, 0, 0, 0, 251, 0,
	858, 859, 174, 175, 1159, 1157, 1443, 1447, 1444, 0,
	177, 0, 0, 1218, 0, 1221, 0, 0, 0, 0,
	1228, 1245, 0, 0, 0, 0, 0, 0, 1247, 0,
	1246, 0, 0, 1277, 0, 1419, 1426, 0, -2, 0,
	0, 0, 184, 210, 0, 0, 0, 0, 213, 1493,
	186, 0, 0, 219, 219, 1156, 0, 0, 1435, 1437,
	1450, 0, 0, 0, 0, 162, 0, 0, 1453, 1457,
	1465, 1460, 1462, 1468, 0, 110, 0, 1571, 0, 148,
	0, 0, 0, 1470, 232, 233, 0, 219, 0, 219,
	225, 219, 1428, 0, 0, 0, 0, 0, 0, 0,
	0, 1473, 1474, 253, 0, 0, 0, 0, 0, 255,
	330, 262, 405, 0, 1206, 0, 1273, 1265, 1266, 1267,
	0, 1177, 1272, 1274, 0, 0, 1182, 0, 0, 0,
	0, 1162, 1144, 0, 1175, 1147, 0, 474, 491, 0,
	494, 0, 497, 1133, 1311, 1355, 1293, 1358, 0, 0,
	1396, 0, 0, 0, 0, 0, 0, 0, 1583, 1587,
	0, 1576, 1577, 1610, 1716, 0, 0, 0, 1597, 1717,
	0, 339, 340, 0, 340, 300, 0, 301, 302, 303,
	310, 311, 312, 287, 290, 298, 708, 710, 0, 0,
	716, 1195, 0, 0, 0, 0, 1706, 2022, -2, -2,
	2043, 0, 2405, 2407, 1698, 0, 2190, 1700, 0, 0,
	-2, 0, 0, 0, 1681, 1664, 0, 1739, 1731, 1733,
	1735, 2728, 2500, 2846, 1665, 1666, 1814, 0, 0, 1782,
	347, 1477, 653, 0, 0, 1842, 0, 658, 0, 0,
	0, 848, 0, 0, 1445, 179, 0, 0, 1222, 1223,
	2379, 1225, 0, 1227, 1229, 1230, 1147, 0, 1234, 0,
	2428, 0, 1239, 1242, 1243, 0, 0, 1256, 1278, 0,
	1287, 0, 1421, 1431, 1425, 0, 1423, 1289, 0, 183,
	212, 185, 214, 209, 0, 1428, 0, 187, 197, 0,
	0, 130, 0, 0, 2494, 165, 163, 161, 108, 1432,
	151, 0, 132, 0, 234, 243, 1427, 245, 229, 219,
	0, 0, 1454, 1458, 1466, 0, 1481, 1482, 1483, 1484,
	0, 0, 0, 0, 264, 0, 265, 268, 269, 0,
	0, 1147, 1205, 1146, 1264, 0, 1275, 1147, 0, 0,
	0, 0, 0, 0, 1149, 0, 1148, 0, 0, 475,
	478, 0, 481, 0, 0, 0, 0, 0, 1362, 0,
	1407, 1405, 0, 1413, 0, 0, 0, 1559, 0, 0,
	1578, 1579, 498, 1603, 0, 0, 1610, 1621, 319, 0,
	322, 297, 289, 0, 712, 0, 714, 0, 1055, 1057,
	0, 0, 2116, 2208, 0, 0, 2141, 2142, -2, 0,
	2082, 2192, 2194, 0, 0, 0, 0, 0, 1750, 1759,
	1478, 1836, 665, 662, 664, 0, 1441, 0, 1448, 221,
	1220, 1224, 0, 1231, 0, 0, 0, 1235, 1297, 0,
	0, 1314, 1314, 1248, 0, 0, 1281, 1282, 1202, 0,
	1283, 1284, 1285, 1420, 1709, 1426, 1147, 0, 0, 211,
	216, 0, 0, 0, 0, 0, 0, 150, 0, 223,
	246, 1428, 0, 0, 1485, 1486, 0, 0, 261, 280,
	0, 1356, 1149, 0, 1276, 1183, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1184, 1289, 0, 0, 1253,
	1160, 0, 1163, 0, 1145, 0, 479, 480, 495, 0,
	496, 0, 0, 1363, 0, 0, 1414, 0, 0, 1566,
	1558, 1587, 1580, 1581, 1833, 0, 1611, 0, 711, 0,
	0, 1065, 1066, 0, 0, 0, 0, 2203, 1701, 2083,
	0, 0, 1734, 1736, 1737, 1738, 654, 0, 1442, 191,
	0, 1291, 1233, 1302, 0, 0, 0, 0, 0, 1249,
	1279, 1280, 1277, 1201, 0, 1424, 1422, 1258, 1291, 1293,
	189, 0, 1289, 0, 1211, 0, 0, 1214, 0, 0,
	166, 2494, 164, 0, 219, 632, 1478, 219, 0, 283,
	0, 274, 272, 273, 1141, 0, 1269, 1271, 1287, 1289,
	1202, 0, 1164, 1206, 1162, 492, 1357, 1361, 1359, 1397,
	1289, 0, 1287, 0, 1573, 1587, 1567, 1568, 0, 1583,
	0, 0, 340, 713, 715, 2200, 2220, 2209, -2, 2803,
	2501, 0, 2220, 2220, 2195, 2196, 0, 0, 1147, 0,
	1236, 1298, 1299, 0, 1294, 1295, 1296, 2427, 1237, 1238,
	1240, 1241, 1833, 0, 1288, 1297, 215, 1147, 1208, 0,
	0, 1209, 0, 0, 169, 0, 171, 247, 1476, 1479,
	0, 270, 0, 0, 1138, 1140, 1147, 0, 1202, 1287,
	1147, 0, 0, 0, 1147, 1149, 1287, 0, 1202, 0,
	1562, 1572, 0, 1582, 1559, 0, 1606, 0, 321, 2205,
	0, 0, 2211, 2212, 2213, 2214, 2215, 2206, 2207, 666,
	1226, 1232, 0, 1300, 0, 1301, 0, 0, 0, 1257,
	1286, 1302, 195, 1212, 0, 1215, 0, 167, 0, 0,
	278, 279, 1268, 1270, 1147, 1202, 1833, 1150, 0, 1152,
	1149, 1161, 1202, 0, 1147, 0, 1585, 1561, 1565, 2388,
	1566, 1604, 0, 0, 0, 2217, 2218, 0, 0, 0,
	1303, 0, 1306, 1307, 0, 1304, 1277, 0, 0, 219,
	0, 1833, 1147, 1252, 1151, 1141, 1147, 1289, 1833, 1287,
	1555, 1587, 1573, 0, 1833, 2216, 2219, 2210, 1290, 1305,
	1308, 1309, 1259, 0, 0, 1480, 281, 0, 1250, 1833,
	1139, 1833, 1287, 1410, 1202, 0, 1562, 1833, 1607, 1199,
	0, 0, 1251, 1408, 1202, 1147, 1584, 1556, 1605, 1213,
	1198, 0, 282, 1147, 1833, 0, 1833, 1411, 0, 1409,
	1199, 1216,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 608, 3, 614, 609, 3,
	620, 621, 612, 610, 625, 611, 622, 613, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 628, 3,
	600, 602, 601, 605, 624, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 618, 3, 619, 615, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 626, 607, 627, 603,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 604, 57943, 606, 57944, 616,
	57945, 617, 57946, 623, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1544
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1546
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1549
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1550
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1551
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1552
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1553
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1555
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1556
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1558
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1559
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1562
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1567
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "ALTER")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1653
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1752
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1775
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1864
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1896
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1920
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1929
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1950
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1958
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1994
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2005
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2017
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2038
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2100
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2109
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2120
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2128
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2139
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2149
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2159
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2168
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2179
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2185
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2211
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2216
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2231
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2307
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2351
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2361
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2364
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2370
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2415
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2422
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2435
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = nil
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = true
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = false
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2617
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2621
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2624
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2708
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2805
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2813
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2840
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2967
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2991
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = nil
		}
	case 284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3124
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3168
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3232
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3277
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3286
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3292
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3297
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3302
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3306
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = nil
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3410
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3478
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3606
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3632
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3637
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3649
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3651
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3655
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3657
		{
			return helpWith(sqllex, "CREATE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3671
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3674
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3680
		{
			return unimplemented(sqllex, "create access method")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			return unimplemented(sqllex, "create cast")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3683
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3685
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3686
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3687
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3689
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3690
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			return unimplemented(sqllex, "create publication")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3693
		{
			return unimplemented(sqllex, "create rule")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			return unimplemented(sqllex, "create server")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3698
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3702
		{
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3705
		{
		}
	case 430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3706
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3709
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3710
		{
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3713
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3714
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3715
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3716
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3717
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3718
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3719
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			return unimplemented(sqllex, "drop server")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3738
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3857
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3892
		{

			sqlVAL.union.val = nil
		}
	case 490:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3939
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "DELETE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3978
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3979
		{
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4003
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4005
		{
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4006
		{
			return helpWith(sqllex, "DROP")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4009
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4015
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4071
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4078
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4194
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4198
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4205
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4271
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4279
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4287
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4295
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4303
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4314
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4325
		{
			return helpWith(sqllex, "DELETE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4327
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4328
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4329
		{
			return helpWith(sqllex, "INSERT")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4342
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "DELETE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "INSERT")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4480
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4513
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4623
		{
			return helpWith(sqllex, "GRANT")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4716
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4719
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4729
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4757
		{
			return helpWith(sqllex, "RESET")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "RESET")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "USE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4807
		{
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4808
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "USE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4929
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4980
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5005
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5033
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5037
		{
			return unimplemented(sqllex, "set from current")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5076
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5081
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = tree.Low
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = tree.Normal
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = tree.High
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "SHOW")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = true
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = false
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = true
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = false
		}
	case 860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = false
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = sqlDollar[2].union.fetchCursor()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "FETCH")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5394
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = int64(1)
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = int64(-1)
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = int64(1)
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = int64(1)
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = int64(-1)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5449
		{
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5450
		{
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5453
		{
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5454
		{
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5458
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5478
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.str = "client_encoding"
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.str = "timezone"
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5512
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5540
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5544
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5555
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5563
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5603
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5612
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5620
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5637
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5642
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5651
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5685
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5742
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5752
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5765
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5784
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5797
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5806
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5817
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5833
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5838
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = true
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = true
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = false
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5867
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5874
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5875
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5876
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5893
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5920
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5936
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5944
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5952
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5988
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5993
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5995
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5999
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = true
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = false
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6014
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6019
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6027
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6050
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6060
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6065
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = true
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = false
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6083
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6097
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6104
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6108
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6112
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6123
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6145
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6150
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6173
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6189
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6194
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6199
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6204
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6220
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6238
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6278
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6286
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6307
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6312
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6317
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6321
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6330
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6344
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6353
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6434
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6447
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6580
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6623
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6632
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6681
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6682
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6684
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6694
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6695
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6697
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6708
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6736
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6749
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6781
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6789
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6800
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6836
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6864
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6900
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6915
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6943
		{

			sqlVAL.union.val = nil
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6949
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.str = ""
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6959
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = nil
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6982
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6986
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7022
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7035
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7049
		{
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7050
		{
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7051
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7106
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7143
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7146
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7149
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.str = ""
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7288
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7395
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7440
		{

			sqlVAL.union.val = true
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = false
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7450
		{
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7454
		{
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7457
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7554
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7565
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7582
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7592
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7607
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7675
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7676
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7677
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7678
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7679
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7680
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7847
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7856
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7864
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7875
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7888
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7898
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7900
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7904
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7907
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7910
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7912
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7925
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7929
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7956
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7990
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.str = ""
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = true
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8024
		{

			sqlVAL.union.val = true
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = false
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8039
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8053
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8065
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8077
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8087
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8097
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8101
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = true
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = true
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = nil
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8236
		{
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8237
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8262
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8264
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8266
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8268
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8270
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8272
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8307
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8324
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8342
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8358
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8374
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8378
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = false
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = true
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = false
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = true
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = false
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8432
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8438
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8444
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8452
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.str = ""
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.str = ""
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8511
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8517
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8742
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8748
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8760
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8766
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8780
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8786
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8845
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = true
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = false
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = tree.Types
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8905
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8909
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8933
		{
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8934
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8938
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8967
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8997
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9005
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9026
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9045
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9050
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9051
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9093
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9102
		{
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9103
		{
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9104
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9121
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9124
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9125
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9166
		{
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9168
		{
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9172
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.str = ""
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9290
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9307
		{

		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9322
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.str = ""
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.str = ""
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.str = ""
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.str = ""
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9377
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9402
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9403
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9432
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9450
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9512
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9557
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9648
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9663
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9807
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9842
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9843
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9844
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9905
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9949
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9965
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = true
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = false
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10019
		{
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = nil
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10033
		{
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = true
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = false
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = false
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = true
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10062
		{
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10063
		{
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10066
		{
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10067
		{
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10108
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10120
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10125
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10151
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10184
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10240
		{
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10278
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10280
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10310
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10312
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10327
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10349
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10396
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10408
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10427
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10469
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10479
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10514
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10525
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10555
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10588
		{
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = nil
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = true
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = false
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.str = tree.AstFull
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.str = tree.AstRight
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.str = tree.AstInner
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10707
		{
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10708
		{
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.str = tree.AstHash
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.str = ""
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10777
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10782
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10800
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10806
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10812
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10822
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = true
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = false
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = true
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = false
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10871
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10884
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10892
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10893
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10911
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10913
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10921
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10934
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10941
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10950
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10990
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11002
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11003
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = types.Geography
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11052
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11060
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11086
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11094
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = nil
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = types.Int2
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = types.Int
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = types.Float4
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = types.Float
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11137
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11145
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11153
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = types.Bool
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = types.Float
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11186
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11192
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11214
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = types.String
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = true
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = false
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = types.Date
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11263
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11271
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11285
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11294
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11302
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11319
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = true
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = false
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = false
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = types.Interval
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11343
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11427
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = nil
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11472
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11532
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11681
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11689
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11810
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11876
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12006
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12014
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12110
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12115
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12141
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12165
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12199
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12210
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12211
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12226
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12235
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12301
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12426
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12431
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12433
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12440
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12449
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12458
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12467
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12472
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12477
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12482
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12487
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12492
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12501
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12502
		{
			return unimplemented(sqllex, "treat")
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12523
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12528
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12575
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.str = ""
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12664
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12677
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12741
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12745
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12774
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12794
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12813
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12817
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12818
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12821
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12826
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12833
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12835
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12844
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12850
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12873
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12874
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12903
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12938
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12942
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12955
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13036
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13112
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13151
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13190
		{
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13191
		{
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13214
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13218
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13222
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13234
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13263
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13271
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13303
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13307
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13311
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13340
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13344
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13356
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13360
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13369
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13380
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13389
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13397
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13414
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13499
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13507
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13511
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13517
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13529
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13556
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13563
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13571
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13585
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13589
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13593
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13606
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13615
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13633
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13646
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13653
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13678
		{
			sqlVAL.str = ""
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13684
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13688
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
