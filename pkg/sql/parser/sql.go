// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}

//line sql-gen.y:960
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15138

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 5,
	-2, 1819,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	281, 517,
	-2, 0,
	-1, 75,
	8, 975,
	29, 975,
	642, 975,
	643, 975,
	-2, 0,
	-1, 76,
	8, 975,
	29, 975,
	642, 975,
	643, 975,
	-2, 0,
	-1, 78,
	1, 1669,
	139, 1669,
	269, 1669,
	356, 1669,
	419, 1669,
	429, 1669,
	623, 1669,
	655, 1669,
	-2, 0,
	-1, 79,
	1, 1669,
	655, 1669,
	-2, 0,
	-1, 85,
	262, 270,
	561, 270,
	-2, 0,
	-1, 99,
	203, 439,
	248, 1546,
	264, 1546,
	281, 439,
	421, 439,
	433, 1289,
	477, 439,
	492, 1289,
	545, 1289,
	574, 439,
	601, 1289,
	-2, 0,
	-1, 105,
	141, 1819,
	257, 1819,
	585, 1819,
	586, 1819,
	-2, 0,
	-1, 123,
	160, 1790,
	181, 1790,
	194, 1790,
	260, 1790,
	295, 1790,
	369, 1790,
	380, 1790,
	580, 1790,
	-2, 1761,
	-1, 165,
	168, 1109,
	280, 1109,
	424, 1070,
	497, 1070,
	544, 1070,
	564, 1109,
	566, 1070,
	-2, 0,
	-1, 170,
	4, 1821,
	21, 1821,
	22, 1821,
	23, 1821,
	24, 1821,
	25, 1821,
	26, 1821,
	27, 1821,
	28, 1821,
	30, 1821,
	31, 1821,
	37, 1821,
	41, 1821,
	43, 1821,
	44, 1821,
	45, 1821,
	47, 1821,
	48, 1821,
	49, 1821,
	50, 1821,
	51, 1821,
	52, 1821,
	53, 1821,
	54, 1821,
	55, 1821,
	57, 1821,
	58, 1821,
	59, 1821,
	60, 1821,
	62, 1821,
	63, 1821,
	64, 1821,
	65, 1821,
	66, 1821,
	67, 1821,
	68, 1821,
	69, 1821,
	73, 1821,
	74, 1821,
	75, 1821,
	76, 1821,
	78, 1821,
	79, 1821,
	80, 1821,
	84, 1821,
	85, 1821,
	86, 1821,
	87, 1821,
	88, 1821,
	89, 1821,
	90, 1821,
	91, 1821,
	94, 1821,
	95, 1821,
	96, 1821,
	97, 1821,
	98, 1821,
	100, 1821,
	102, 1821,
	103, 1821,
	104, 1821,
	105, 1821,
	106, 1821,
	107, 1821,
	108, 1821,
	110, 1821,
	111, 1821,
	112, 1821,
	114, 1821,
	115, 1821,
	116, 1821,
	124, 1821,
	125, 1821,
	126, 1821,
	127, 1821,
	128, 1821,
	130, 1821,
	131, 1821,
	132, 1821,
	133, 1821,
	135, 1821,
	136, 1821,
	137, 1821,
	138, 1821,
	140, 1821,
	141, 1821,
	142, 1821,
	144, 1821,
	145, 1821,
	146, 1821,
	149, 1821,
	150, 1821,
	151, 1821,
	153, 1821,
	154, 1821,
	155, 1821,
	157, 1821,
	158, 1821,
	159, 1821,
	161, 1821,
	162, 1821,
	163, 1821,
	164, 1821,
	165, 1821,
	166, 1821,
	167, 1821,
	168, 1821,
	169, 1821,
	170, 1821,
	171, 1821,
	172, 1821,
	173, 1821,
	174, 1821,
	175, 1821,
	176, 1821,
	177, 1821,
	178, 1821,
	180, 1821,
	186, 1821,
	187, 1821,
	188, 1821,
	189, 1821,
	193, 1821,
	195, 1821,
	196, 1821,
	197, 1821,
	199, 1821,
	200, 1821,
	203, 1821,
	204, 1821,
	205, 1821,
	206, 1821,
	207, 1821,
	208, 1821,
	209, 1821,
	210, 1821,
	211, 1821,
	212, 1821,
	213, 1821,
	214, 1821,
	215, 1821,
	216, 1821,
	218, 1821,
	219, 1821,
	221, 1821,
	222, 1821,
	224, 1821,
	225, 1821,
	226, 1821,
	227, 1821,
	228, 1821,
	229, 1821,
	230, 1821,
	231, 1821,
	232, 1821,
	233, 1821,
	234, 1821,
	236, 1821,
	237, 1821,
	238, 1821,
	240, 1821,
	241, 1821,
	242, 1821,
	243, 1821,
	244, 1821,
	248, 1821,
	249, 1821,
	250, 1821,
	251, 1821,
	254, 1821,
	255, 1821,
	256, 1821,
	257, 1821,
	258, 1821,
	259, 1821,
	261, 1821,
	263, 1821,
	264, 1821,
	265, 1821,
	267, 1821,
	269, 1821,
	270, 1821,
	271, 1821,
	273, 1821,
	277, 1821,
	278, 1821,
	279, 1821,
	280, 1821,
	281, 1821,
	282, 1821,
	284, 1821,
	285, 1821,
	286, 1821,
	288, 1821,
	289, 1821,
	290, 1821,
	292, 1821,
	293, 1821,
	296, 1821,
	297, 1821,
	298, 1821,
	299, 1821,
	300, 1821,
	301, 1821,
	302, 1821,
	305, 1821,
	306, 1821,
	307, 1821,
	308, 1821,
	310, 1821,
	311, 1821,
	312, 1821,
	313, 1821,
	314, 1821,
	315, 1821,
	316, 1821,
	317, 1821,
	318, 1821,
	319, 1821,
	320, 1821,
	321, 1821,
	322, 1821,
	323, 1821,
	324, 1821,
	325, 1821,
	326, 1821,
	327, 1821,
	328, 1821,
	329, 1821,
	330, 1821,
	331, 1821,
	332, 1821,
	334, 1821,
	336, 1821,
	337, 1821,
	338, 1821,
	339, 1821,
	340, 1821,
	341, 1821,
	342, 1821,
	343, 1821,
	344, 1821,
	345, 1821,
	346, 1821,
	347, 1821,
	348, 1821,
	349, 1821,
	350, 1821,
	351, 1821,
	352, 1821,
	354, 1821,
	355, 1821,
	357, 1821,
	359, 1821,
	360, 1821,
	361, 1821,
	362, 1821,
	364, 1821,
	365, 1821,
	366, 1821,
	367, 1821,
	368, 1821,
	371, 1821,
	373, 1821,
	375, 1821,
	376, 1821,
	377, 1821,
	378, 1821,
	381, 1821,
	382, 1821,
	383, 1821,
	385, 1821,
	387, 1821,
	388, 1821,
	389, 1821,
	390, 1821,
	391, 1821,
	392, 1821,
	393, 1821,
	394, 1821,
	395, 1821,
	396, 1821,
	397, 1821,
	398, 1821,
	399, 1821,
	400, 1821,
	402, 1821,
	403, 1821,
	404, 1821,
	405, 1821,
	406, 1821,
	407, 1821,
	408, 1821,
	409, 1821,
	410, 1821,
	411, 1821,
	412, 1821,
	413, 1821,
	414, 1821,
	415, 1821,
	416, 1821,
	418, 1821,
	419, 1821,
	420, 1821,
	422, 1821,
	423, 1821,
	424, 1821,
	425, 1821,
	426, 1821,
	427, 1821,
	428, 1821,
	429, 1821,
	430, 1821,
	431, 1821,
	432, 1821,
	433, 1821,
	434, 1821,
	435, 1821,
	437, 1821,
	439, 1821,
	440, 1821,
	441, 1821,
	447, 1821,
	448, 1821,
	449, 1821,
	451, 1821,
	452, 1821,
	453, 1821,
	454, 1821,
	455, 1821,
	456, 1821,
	457, 1821,
	458, 1821,
	459, 1821,
	460, 1821,
	461, 1821,
	463, 1821,
	464, 1821,
	465, 1821,
	466, 1821,
	467, 1821,
	469, 1821,
	470, 1821,
	471, 1821,
	472, 1821,
	473, 1821,
	474, 1821,
	475, 1821,
	477, 1821,
	478, 1821,
	479, 1821,
	480, 1821,
	481, 1821,
	482, 1821,
	483, 1821,
	484, 1821,
	485, 1821,
	486, 1821,
	487, 1821,
	488, 1821,
	489, 1821,
	490, 1821,
	492, 1821,
	493, 1821,
	494, 1821,
	495, 1821,
	496, 1821,
	497, 1821,
	499, 1821,
	500, 1821,
	501, 1821,
	502, 1821,
	503, 1821,
	504, 1821,
	505, 1821,
	507, 1821,
	508, 1821,
	509, 1821,
	510, 1821,
	511, 1821,
	512, 1821,
	513, 1821,
	514, 1821,
	516, 1821,
	518, 1821,
	519, 1821,
	520, 1821,
	521, 1821,
	522, 1821,
	523, 1821,
	524, 1821,
	525, 1821,
	526, 1821,
	527, 1821,
	528, 1821,
	529, 1821,
	530, 1821,
	531, 1821,
	532, 1821,
	533, 1821,
	534, 1821,
	535, 1821,
	536, 1821,
	537, 1821,
	538, 1821,
	540, 1821,
	541, 1821,
	543, 1821,
	544, 1821,
	546, 1821,
	547, 1821,
	548, 1821,
	549, 1821,
	550, 1821,
	551, 1821,
	553, 1821,
	554, 1821,
	556, 1821,
	557, 1821,
	558, 1821,
	559, 1821,
	560, 1821,
	562, 1821,
	564, 1821,
	565, 1821,
	566, 1821,
	567, 1821,
	568, 1821,
	569, 1821,
	570, 1821,
	571, 1821,
	573, 1821,
	574, 1821,
	575, 1821,
	576, 1821,
	577, 1821,
	578, 1821,
	579, 1821,
	582, 1821,
	583, 1821,
	584, 1821,
	585, 1821,
	586, 1821,
	587, 1821,
	588, 1821,
	589, 1821,
	591, 1821,
	594, 1821,
	595, 1821,
	596, 1821,
	597, 1821,
	598, 1821,
	599, 1821,
	601, 1821,
	602, 1821,
	603, 1821,
	604, 1821,
	605, 1821,
	606, 1821,
	607, 1821,
	608, 1821,
	609, 1821,
	614, 1821,
	615, 1821,
	616, 1821,
	617, 1821,
	618, 1821,
	619, 1821,
	-2, 0,
	-1, 172,
	1, 1669,
	655, 1669,
	658, 1669,
	-2, 0,
	-1, 173,
	1, 1669,
	561, 1669,
	655, 1669,
	658, 1669,
	-2, 0,
	-1, 206,
	160, 1789,
	181, 1789,
	194, 1789,
	260, 1789,
	295, 1789,
	369, 1789,
	380, 1789,
	580, 1789,
	-2, 1764,
	-1, 258,
	4, 1828,
	5, 1828,
	6, 1828,
	7, 1828,
	8, 1828,
	9, 1828,
	10, 1828,
	21, 1828,
	22, 1828,
	23, 1828,
	24, 1828,
	25, 1828,
	26, 1828,
	27, 1828,
	28, 1828,
	30, 1828,
	31, 1828,
	37, 1828,
	38, 1828,
	41, 1828,
	43, 1828,
	44, 1828,
	45, 1828,
	46, 1828,
	47, 1828,
	48, 1828,
	49, 1828,
	50, 1828,
	51, 1828,
	52, 1828,
	53, 1828,
	54, 1828,
	55, 1828,
	57, 1828,
	58, 1828,
	59, 1828,
	60, 1828,
	62, 1828,
	63, 1828,
	64, 1828,
	65, 1828,
	66, 1828,
	67, 1828,
	68, 1828,
	69, 1828,
	70, 1828,
	71, 1828,
	72, 1828,
	73, 1828,
	74, 1828,
	75, 1828,
	76, 1828,
	78, 1828,
	79, 1828,
	80, 1828,
	82, 1828,
	84, 1828,
	85, 1828,
	86, 1828,
	87, 1828,
	88, 1828,
	89, 1828,
	90, 1828,
	91, 1828,
	94, 1828,
	95, 1828,
	96, 1828,
	97, 1828,
	98, 1828,
	100, 1828,
	102, 1828,
	103, 1828,
	104, 1828,
	105, 1828,
	106, 1828,
	107, 1828,
	108, 1828,
	110, 1828,
	111, 1828,
	112, 1828,
	113, 1828,
	114, 1828,
	115, 1828,
	116, 1828,
	117, 1828,
	118, 1828,
	119, 1828,
	120, 1828,
	121, 1828,
	122, 1828,
	123, 1828,
	124, 1828,
	125, 1828,
	126, 1828,
	127, 1828,
	128, 1828,
	129, 1828,
	130, 1828,
	131, 1828,
	132, 1828,
	133, 1828,
	134, 1828,
	135, 1828,
	136, 1828,
	137, 1828,
	138, 1828,
	140, 1828,
	141, 1828,
	142, 1828,
	144, 1828,
	145, 1828,
	146, 1828,
	149, 1828,
	150, 1828,
	151, 1828,
	153, 1828,
	154, 1828,
	155, 1828,
	157, 1828,
	158, 1828,
	159, 1828,
	161, 1828,
	162, 1828,
	163, 1828,
	164, 1828,
	165, 1828,
	166, 1828,
	167, 1828,
	168, 1828,
	169, 1828,
	170, 1828,
	171, 1828,
	172, 1828,
	173, 1828,
	174, 1828,
	175, 1828,
	176, 1828,
	177, 1828,
	178, 1828,
	179, 1828,
	180, 1828,
	186, 1828,
	187, 1828,
	188, 1828,
	189, 1828,
	193, 1828,
	195, 1828,
	196, 1828,
	197, 1828,
	199, 1828,
	200, 1828,
	202, 1828,
	203, 1828,
	204, 1828,
	205, 1828,
	206, 1828,
	207, 1828,
	208, 1828,
	209, 1828,
	210, 1828,
	211, 1828,
	212, 1828,
	213, 1828,
	214, 1828,
	215, 1828,
	216, 1828,
	218, 1828,
	219, 1828,
	221, 1828,
	222, 1828,
	224, 1828,
	225, 1828,
	226, 1828,
	227, 1828,
	228, 1828,
	229, 1828,
	230, 1828,
	231, 1828,
	232, 1828,
	233, 1828,
	234, 1828,
	235, 1828,
	236, 1828,
	237, 1828,
	238, 1828,
	240, 1828,
	241, 1828,
	242, 1828,
	243, 1828,
	244, 1828,
	248, 1828,
	249, 1828,
	250, 1828,
	251, 1828,
	253, 1828,
	254, 1828,
	255, 1828,
	256, 1828,
	257, 1828,
	258, 1828,
	259, 1828,
	261, 1828,
	263, 1828,
	264, 1828,
	265, 1828,
	266, 1828,
	267, 1828,
	268, 1828,
	269, 1828,
	270, 1828,
	271, 1828,
	272, 1828,
	273, 1828,
	277, 1828,
	278, 1828,
	279, 1828,
	280, 1828,
	281, 1828,
	282, 1828,
	284, 1828,
	285, 1828,
	286, 1828,
	288, 1828,
	289, 1828,
	290, 1828,
	291, 1828,
	292, 1828,
	293, 1828,
	294, 1828,
	296, 1828,
	297, 1828,
	298, 1828,
	299, 1828,
	300, 1828,
	301, 1828,
	302, 1828,
	303, 1828,
	304, 1828,
	305, 1828,
	306, 1828,
	307, 1828,
	308, 1828,
	310, 1828,
	311, 1828,
	312, 1828,
	313, 1828,
	314, 1828,
	315, 1828,
	316, 1828,
	317, 1828,
	318, 1828,
	319, 1828,
	320, 1828,
	321, 1828,
	322, 1828,
	323, 1828,
	324, 1828,
	325, 1828,
	326, 1828,
	327, 1828,
	328, 1828,
	329, 1828,
	330, 1828,
	331, 1828,
	332, 1828,
	334, 1828,
	335, 1828,
	336, 1828,
	337, 1828,
	338, 1828,
	339, 1828,
	340, 1828,
	341, 1828,
	342, 1828,
	343, 1828,
	344, 1828,
	345, 1828,
	346, 1828,
	347, 1828,
	348, 1828,
	349, 1828,
	350, 1828,
	351, 1828,
	352, 1828,
	353, 1828,
	354, 1828,
	355, 1828,
	356, 1828,
	357, 1828,
	358, 1828,
	359, 1828,
	360, 1828,
	361, 1828,
	362, 1828,
	363, 1828,
	364, 1828,
	365, 1828,
	366, 1828,
	367, 1828,
	368, 1828,
	371, 1828,
	373, 1828,
	376, 1828,
	377, 1828,
	378, 1828,
	381, 1828,
	382, 1828,
	383, 1828,
	384, 1828,
	385, 1828,
	386, 1828,
	387, 1828,
	388, 1828,
	389, 1828,
	390, 1828,
	391, 1828,
	392, 1828,
	393, 1828,
	394, 1828,
	395, 1828,
	396, 1828,
	397, 1828,
	398, 1828,
	399, 1828,
	400, 1828,
	402, 1828,
	403, 1828,
	404, 1828,
	405, 1828,
	406, 1828,
	407, 1828,
	408, 1828,
	409, 1828,
	410, 1828,
	411, 1828,
	412, 1828,
	413, 1828,
	414, 1828,
	415, 1828,
	416, 1828,
	418, 1828,
	419, 1828,
	420, 1828,
	422, 1828,
	423, 1828,
	424, 1828,
	425, 1828,
	426, 1828,
	427, 1828,
	428, 1828,
	429, 1828,
	430, 1828,
	431, 1828,
	432, 1828,
	433, 1828,
	434, 1828,
	435, 1828,
	437, 1828,
	439, 1828,
	440, 1828,
	441, 1828,
	447, 1828,
	448, 1828,
	449, 1828,
	451, 1828,
	452, 1828,
	453, 1828,
	454, 1828,
	455, 1828,
	456, 1828,
	457, 1828,
	458, 1828,
	459, 1828,
	460, 1828,
	461, 1828,
	463, 1828,
	464, 1828,
	465, 1828,
	466, 1828,
	467, 1828,
	468, 1828,
	469, 1828,
	470, 1828,
	471, 1828,
	472, 1828,
	473, 1828,
	474, 1828,
	475, 1828,
	477, 1828,
	478, 1828,
	479, 1828,
	480, 1828,
	481, 1828,
	482, 1828,
	483, 1828,
	484, 1828,
	485, 1828,
	486, 1828,
	487, 1828,
	488, 1828,
	489, 1828,
	490, 1828,
	492, 1828,
	493, 1828,
	494, 1828,
	495, 1828,
	496, 1828,
	497, 1828,
	498, 1828,
	499, 1828,
	500, 1828,
	501, 1828,
	502, 1828,
	503, 1828,
	504, 1828,
	505, 1828,
	506, 1828,
	507, 1828,
	508, 1828,
	509, 1828,
	510, 1828,
	511, 1828,
	512, 1828,
	513, 1828,
	514, 1828,
	516, 1828,
	518, 1828,
	519, 1828,
	520, 1828,
	521, 1828,
	522, 1828,
	523, 1828,
	524, 1828,
	525, 1828,
	526, 1828,
	527, 1828,
	528, 1828,
	529, 1828,
	530, 1828,
	531, 1828,
	532, 1828,
	533, 1828,
	534, 1828,
	535, 1828,
	536, 1828,
	537, 1828,
	538, 1828,
	540, 1828,
	541, 1828,
	542, 1828,
	543, 1828,
	544, 1828,
	546, 1828,
	547, 1828,
	548, 1828,
	549, 1828,
	550, 1828,
	551, 1828,
	553, 1828,
	554, 1828,
	556, 1828,
	557, 1828,
	558, 1828,
	559, 1828,
	560, 1828,
	562, 1828,
	564, 1828,
	565, 1828,
	566, 1828,
	567, 1828,
	568, 1828,
	569, 1828,
	570, 1828,
	571, 1828,
	572, 1828,
	573, 1828,
	574, 1828,
	575, 1828,
	576, 1828,
	577, 1828,
	578, 1828,
	579, 1828,
	581, 1828,
	582, 1828,
	583, 1828,
	584, 1828,
	585, 1828,
	586, 1828,
	587, 1828,
	588, 1828,
	589, 1828,
	590, 1828,
	591, 1828,
	594, 1828,
	595, 1828,
	596, 1828,
	597, 1828,
	598, 1828,
	599, 1828,
	601, 1828,
	602, 1828,
	603, 1828,
	604, 1828,
	605, 1828,
	606, 1828,
	607, 1828,
	608, 1828,
	609, 1828,
	614, 1828,
	615, 1828,
	616, 1828,
	617, 1828,
	618, 1828,
	619, 1828,
	620, 1828,
	635, 1828,
	642, 1828,
	643, 1828,
	644, 1828,
	652, 1828,
	656, 1828,
	-2, 0,
	-1, 828,
	4, 1544,
	21, 1544,
	22, 1544,
	23, 1544,
	24, 1544,
	25, 1544,
	26, 1544,
	27, 1544,
	28, 1544,
	30, 1544,
	31, 1544,
	37, 1544,
	41, 1544,
	43, 1544,
	44, 1544,
	45, 1544,
	47, 1544,
	48, 1544,
	49, 1544,
	50, 1544,
	51, 1544,
	52, 1544,
	53, 1544,
	54, 1544,
	55, 1544,
	57, 1544,
	58, 1544,
	59, 1544,
	60, 1544,
	62, 1544,
	63, 1544,
	64, 1544,
	65, 1544,
	66, 1544,
	67, 1544,
	68, 1544,
	69, 1544,
	73, 1544,
	74, 1544,
	75, 1544,
	76, 1544,
	78, 1544,
	79, 1544,
	80, 1544,
	84, 1544,
	85, 1544,
	86, 1544,
	87, 1544,
	88, 1544,
	89, 1544,
	90, 1544,
	91, 1544,
	94, 1544,
	95, 1544,
	96, 1544,
	97, 1544,
	98, 1544,
	100, 1544,
	102, 1544,
	103, 1544,
	104, 1544,
	105, 1544,
	106, 1544,
	107, 1544,
	108, 1544,
	110, 1544,
	111, 1544,
	112, 1544,
	114, 1544,
	115, 1544,
	116, 1544,
	124, 1544,
	125, 1544,
	126, 1544,
	127, 1544,
	128, 1544,
	130, 1544,
	131, 1544,
	132, 1544,
	133, 1544,
	135, 1544,
	136, 1544,
	137, 1544,
	138, 1544,
	140, 1544,
	141, 1544,
	142, 1544,
	144, 1544,
	145, 1544,
	146, 1544,
	149, 1544,
	150, 1544,
	151, 1544,
	153, 1544,
	154, 1544,
	155, 1544,
	157, 1544,
	158, 1544,
	159, 1544,
	161, 1544,
	162, 1544,
	163, 1544,
	164, 1544,
	165, 1544,
	166, 1544,
	167, 1544,
	168, 1544,
	169, 1544,
	170, 1544,
	171, 1544,
	172, 1544,
	173, 1544,
	174, 1544,
	175, 1544,
	176, 1544,
	177, 1544,
	178, 1544,
	180, 1544,
	186, 1544,
	187, 1544,
	188, 1544,
	189, 1544,
	193, 1544,
	195, 1544,
	196, 1544,
	197, 1544,
	199, 1544,
	200, 1544,
	203, 1544,
	204, 1544,
	205, 1544,
	206, 1544,
	207, 1544,
	208, 1544,
	209, 1544,
	210, 1544,
	211, 1544,
	212, 1544,
	213, 1544,
	214, 1544,
	215, 1544,
	216, 1544,
	218, 1544,
	219, 1544,
	221, 1544,
	222, 1544,
	224, 1544,
	225, 1544,
	226, 1544,
	227, 1544,
	228, 1544,
	229, 1544,
	230, 1544,
	231, 1544,
	232, 1544,
	233, 1544,
	234, 1544,
	236, 1544,
	237, 1544,
	238, 1544,
	240, 1544,
	241, 1544,
	242, 1544,
	243, 1544,
	244, 1544,
	248, 1544,
	249, 1544,
	250, 1544,
	251, 1544,
	254, 1544,
	255, 1544,
	256, 1544,
	257, 1544,
	258, 1544,
	259, 1544,
	261, 1544,
	263, 1544,
	264, 1544,
	265, 1544,
	267, 1544,
	269, 1544,
	270, 1544,
	271, 1544,
	273, 1544,
	277, 1544,
	278, 1544,
	279, 1544,
	280, 1544,
	281, 1544,
	282, 1544,
	284, 1544,
	285, 1544,
	286, 1544,
	288, 1544,
	289, 1544,
	290, 1544,
	292, 1544,
	293, 1544,
	296, 1544,
	297, 1544,
	298, 1544,
	299, 1544,
	300, 1544,
	301, 1544,
	302, 1544,
	305, 1544,
	306, 1544,
	307, 1544,
	308, 1544,
	310, 1544,
	311, 1544,
	312, 1544,
	313, 1544,
	314, 1544,
	315, 1544,
	316, 1544,
	317, 1544,
	318, 1544,
	319, 1544,
	320, 1544,
	321, 1544,
	322, 1544,
	323, 1544,
	324, 1544,
	325, 1544,
	326, 1544,
	327, 1544,
	328, 1544,
	329, 1544,
	330, 1544,
	331, 1544,
	332, 1544,
	334, 1544,
	336, 1544,
	337, 1544,
	338, 1544,
	339, 1544,
	340, 1544,
	341, 1544,
	342, 1544,
	343, 1544,
	344, 1544,
	345, 1544,
	346, 1544,
	347, 1544,
	348, 1544,
	349, 1544,
	350, 1544,
	351, 1544,
	352, 1544,
	354, 1544,
	355, 1544,
	357, 1544,
	359, 1544,
	360, 1544,
	361, 1544,
	362, 1544,
	364, 1544,
	365, 1544,
	366, 1544,
	367, 1544,
	368, 1544,
	371, 1544,
	373, 1544,
	376, 1544,
	377, 1544,
	378, 1544,
	381, 1544,
	382, 1544,
	383, 1544,
	385, 1544,
	387, 1544,
	388, 1544,
	389, 1544,
	390, 1544,
	391, 1544,
	392, 1544,
	393, 1544,
	394, 1544,
	395, 1544,
	396, 1544,
	397, 1544,
	398, 1544,
	399, 1544,
	400, 1544,
	402, 1544,
	403, 1544,
	404, 1544,
	405, 1544,
	406, 1544,
	407, 1544,
	408, 1544,
	409, 1544,
	410, 1544,
	411, 1544,
	412, 1544,
	413, 1544,
	414, 1544,
	415, 1544,
	416, 1544,
	418, 1544,
	419, 1544,
	420, 1544,
	422, 1544,
	423, 1544,
	424, 1544,
	425, 1544,
	426, 1544,
	427, 1544,
	428, 1544,
	429, 1544,
	430, 1544,
	431, 1544,
	432, 1544,
	433, 1544,
	434, 1544,
	435, 1544,
	437, 1544,
	439, 1544,
	440, 1544,
	441, 1544,
	447, 1544,
	448, 1544,
	449, 1544,
	451, 1544,
	452, 1544,
	453, 1544,
	454, 1544,
	455, 1544,
	456, 1544,
	457, 1544,
	458, 1544,
	459, 1544,
	460, 1544,
	461, 1544,
	463, 1544,
	464, 1544,
	465, 1544,
	466, 1544,
	467, 1544,
	469, 1544,
	470, 1544,
	471, 1544,
	472, 1544,
	473, 1544,
	474, 1544,
	475, 1544,
	477, 1544,
	478, 1544,
	479, 1544,
	480, 1544,
	481, 1544,
	482, 1544,
	483, 1544,
	484, 1544,
	485, 1544,
	486, 1544,
	487, 1544,
	488, 1544,
	489, 1544,
	490, 1544,
	492, 1544,
	493, 1544,
	494, 1544,
	495, 1544,
	496, 1544,
	497, 1544,
	499, 1544,
	500, 1544,
	501, 1544,
	502, 1544,
	503, 1544,
	504, 1544,
	505, 1544,
	507, 1544,
	508, 1544,
	509, 1544,
	510, 1544,
	511, 1544,
	512, 1544,
	513, 1544,
	514, 1544,
	516, 1544,
	518, 1544,
	519, 1544,
	520, 1544,
	521, 1544,
	522, 1544,
	523, 1544,
	524, 1544,
	525, 1544,
	526, 1544,
	527, 1544,
	528, 1544,
	529, 1544,
	530, 1544,
	531, 1544,
	532, 1544,
	533, 1544,
	534, 1544,
	535, 1544,
	536, 1544,
	537, 1544,
	538, 1544,
	540, 1544,
	541, 1544,
	543, 1544,
	544, 1544,
	546, 1544,
	547, 1544,
	548, 1544,
	549, 1544,
	550, 1544,
	551, 1544,
	553, 1544,
	554, 1544,
	556, 1544,
	557, 1544,
	558, 1544,
	559, 1544,
	560, 1544,
	562, 1544,
	564, 1544,
	565, 1544,
	566, 1544,
	567, 1544,
	568, 1544,
	569, 1544,
	570, 1544,
	571, 1544,
	573, 1544,
	574, 1544,
	575, 1544,
	576, 1544,
	577, 1544,
	578, 1544,
	579, 1544,
	582, 1544,
	583, 1544,
	584, 1544,
	585, 1544,
	586, 1544,
	587, 1544,
	588, 1544,
	589, 1544,
	591, 1544,
	594, 1544,
	595, 1544,
	596, 1544,
	597, 1544,
	598, 1544,
	599, 1544,
	601, 1544,
	602, 1544,
	603, 1544,
	604, 1544,
	605, 1544,
	606, 1544,
	607, 1544,
	608, 1544,
	609, 1544,
	614, 1544,
	615, 1544,
	616, 1544,
	617, 1544,
	618, 1544,
	619, 1544,
	-2, 0,
	-1, 847,
	201, 2631,
	561, 2631,
	634, 2631,
	654, 2631,
	-2, 0,
	-1, 848,
	201, 2617,
	561, 2617,
	634, 2617,
	654, 2617,
	-2, 0,
	-1, 850,
	201, 2910,
	561, 2910,
	634, 2910,
	654, 2910,
	-2, 0,
	-1, 853,
	201, 2754,
	561, 2754,
	634, 2754,
	654, 2754,
	-2, 0,
	-1, 854,
	201, 2957,
	561, 2957,
	634, 2957,
	654, 2957,
	-2, 0,
	-1, 862,
	201, 2782,
	561, 2782,
	634, 2782,
	654, 2782,
	-2, 841,
	-1, 878,
	8, 974,
	29, 974,
	642, 974,
	643, 974,
	-2, 979,
	-1, 882,
	1, 2688,
	655, 2688,
	658, 2688,
	-2, 979,
	-1, 883,
	1, 2741,
	655, 2741,
	658, 2741,
	-2, 979,
	-1, 886,
	1, 2787,
	655, 2787,
	658, 2787,
	-2, 972,
	-1, 887,
	1, 2844,
	655, 2844,
	658, 2844,
	-2, 973,
	-1, 888,
	1, 2693,
	655, 2693,
	658, 2693,
	-2, 976,
	-1, 889,
	1, 2603,
	655, 2603,
	658, 2603,
	-2, 977,
	-1, 929,
	654, 2560,
	657, 2560,
	-2, 1205,
	-1, 930,
	654, 2562,
	657, 2562,
	-2, 1206,
	-1, 931,
	654, 2561,
	657, 2561,
	-2, 1207,
	-1, 932,
	657, 2484,
	-2, 1208,
	-1, 958,
	194, 290,
	-2, 0,
	-1, 980,
	46, 2533,
	-2, 0,
	-1, 981,
	601, 1522,
	-2, 1290,
	-1, 998,
	4, 1962,
	21, 1962,
	22, 1962,
	23, 1962,
	24, 1962,
	25, 1962,
	26, 1962,
	27, 1962,
	28, 1962,
	30, 1962,
	31, 1962,
	37, 1962,
	41, 1962,
	43, 1962,
	44, 1962,
	45, 1962,
	47, 1962,
	48, 1962,
	49, 1962,
	50, 1962,
	51, 1962,
	52, 1962,
	53, 1962,
	54, 1962,
	55, 1962,
	57, 1962,
	58, 1962,
	59, 1962,
	60, 1962,
	62, 1962,
	63, 1962,
	64, 1962,
	65, 1962,
	66, 1962,
	67, 1962,
	68, 1962,
	69, 1962,
	73, 1962,
	74, 1962,
	75, 1962,
	76, 1962,
	78, 1962,
	79, 1962,
	80, 1962,
	84, 1962,
	85, 1962,
	86, 1962,
	87, 1962,
	88, 1962,
	89, 1962,
	90, 1962,
	91, 1962,
	94, 1962,
	95, 1962,
	96, 1962,
	97, 1962,
	98, 1962,
	100, 1962,
	102, 1962,
	103, 1962,
	104, 1962,
	105, 1962,
	106, 1962,
	107, 1962,
	108, 1962,
	110, 1962,
	111, 1962,
	112, 1962,
	114, 1962,
	115, 1962,
	116, 1962,
	124, 1962,
	125, 1962,
	126, 1962,
	127, 1962,
	128, 1962,
	130, 1962,
	131, 1962,
	132, 1962,
	133, 1962,
	135, 1962,
	136, 1962,
	137, 1962,
	138, 1962,
	140, 1962,
	141, 1962,
	142, 1962,
	144, 1962,
	145, 1962,
	146, 1962,
	149, 1962,
	150, 1962,
	151, 1962,
	153, 1962,
	154, 1962,
	155, 1962,
	157, 1962,
	158, 1962,
	159, 1962,
	161, 1962,
	162, 1962,
	163, 1962,
	164, 1962,
	165, 1962,
	166, 1962,
	167, 1962,
	168, 1962,
	169, 1962,
	170, 1962,
	171, 1962,
	172, 1962,
	173, 1962,
	174, 1962,
	175, 1962,
	176, 1962,
	177, 1962,
	178, 1962,
	180, 1962,
	186, 1962,
	187, 1962,
	188, 1962,
	189, 1962,
	193, 1962,
	195, 1962,
	196, 1962,
	197, 1962,
	199, 1962,
	200, 1962,
	203, 1962,
	204, 1962,
	205, 1962,
	206, 1962,
	207, 1962,
	208, 1962,
	209, 1962,
	210, 1962,
	211, 1962,
	212, 1962,
	213, 1962,
	214, 1962,
	215, 1962,
	216, 1962,
	218, 1962,
	219, 1962,
	221, 1962,
	222, 1962,
	224, 1962,
	225, 1962,
	226, 1962,
	227, 1962,
	228, 1962,
	229, 1962,
	230, 1962,
	231, 1962,
	232, 1962,
	233, 1962,
	234, 1962,
	236, 1962,
	237, 1962,
	238, 1962,
	240, 1962,
	241, 1962,
	242, 1962,
	243, 1962,
	244, 1962,
	248, 1962,
	249, 1962,
	250, 1962,
	251, 1962,
	254, 1962,
	255, 1962,
	256, 1962,
	257, 1962,
	258, 1962,
	259, 1962,
	261, 1962,
	263, 1962,
	264, 1962,
	265, 1962,
	267, 1962,
	269, 1962,
	270, 1962,
	271, 1962,
	273, 1962,
	277, 1962,
	278, 1962,
	279, 1962,
	280, 1962,
	281, 1962,
	282, 1962,
	284, 1962,
	285, 1962,
	286, 1962,
	288, 1962,
	289, 1962,
	290, 1962,
	292, 1962,
	293, 1962,
	296, 1962,
	297, 1962,
	298, 1962,
	299, 1962,
	300, 1962,
	301, 1962,
	302, 1962,
	305, 1962,
	306, 1962,
	307, 1962,
	308, 1962,
	310, 1962,
	311, 1962,
	312, 1962,
	313, 1962,
	314, 1962,
	315, 1962,
	316, 1962,
	317, 1962,
	318, 1962,
	319, 1962,
	320, 1962,
	321, 1962,
	322, 1962,
	323, 1962,
	324, 1962,
	325, 1962,
	326, 1962,
	327, 1962,
	328, 1962,
	329, 1962,
	330, 1962,
	331, 1962,
	332, 1962,
	334, 1962,
	336, 1962,
	337, 1962,
	338, 1962,
	339, 1962,
	340, 1962,
	341, 1962,
	342, 1962,
	343, 1962,
	344, 1962,
	345, 1962,
	346, 1962,
	347, 1962,
	348, 1962,
	349, 1962,
	350, 1962,
	351, 1962,
	352, 1962,
	354, 1962,
	355, 1962,
	357, 1962,
	359, 1962,
	360, 1962,
	361, 1962,
	362, 1962,
	364, 1962,
	365, 1962,
	366, 1962,
	367, 1962,
	368, 1962,
	371, 1962,
	373, 1962,
	376, 1962,
	377, 1962,
	378, 1962,
	381, 1962,
	382, 1962,
	383, 1962,
	385, 1962,
	387, 1962,
	388, 1962,
	389, 1962,
	390, 1962,
	391, 1962,
	392, 1962,
	393, 1962,
	394, 1962,
	395, 1962,
	396, 1962,
	397, 1962,
	398, 1962,
	399, 1962,
	400, 1962,
	402, 1962,
	403, 1962,
	404, 1962,
	405, 1962,
	406, 1962,
	407, 1962,
	408, 1962,
	409, 1962,
	410, 1962,
	411, 1962,
	412, 1962,
	413, 1962,
	414, 1962,
	415, 1962,
	416, 1962,
	418, 1962,
	419, 1962,
	420, 1962,
	422, 1962,
	423, 1962,
	424, 1962,
	425, 1962,
	426, 1962,
	427, 1962,
	428, 1962,
	429, 1962,
	430, 1962,
	431, 1962,
	432, 1962,
	433, 1962,
	434, 1962,
	435, 1962,
	437, 1962,
	439, 1962,
	440, 1962,
	441, 1962,
	447, 1962,
	448, 1962,
	449, 1962,
	451, 1962,
	452, 1962,
	453, 1962,
	454, 1962,
	455, 1962,
	456, 1962,
	457, 1962,
	458, 1962,
	459, 1962,
	460, 1962,
	461, 1962,
	463, 1962,
	464, 1962,
	465, 1962,
	466, 1962,
	467, 1962,
	469, 1962,
	470, 1962,
	471, 1962,
	472, 1962,
	473, 1962,
	474, 1962,
	475, 1962,
	477, 1962,
	478, 1962,
	479, 1962,
	480, 1962,
	481, 1962,
	482, 1962,
	483, 1962,
	484, 1962,
	485, 1962,
	486, 1962,
	487, 1962,
	488, 1962,
	489, 1962,
	490, 1962,
	492, 1962,
	493, 1962,
	494, 1962,
	495, 1962,
	496, 1962,
	497, 1962,
	499, 1962,
	500, 1962,
	501, 1962,
	502, 1962,
	503, 1962,
	504, 1962,
	505, 1962,
	507, 1962,
	508, 1962,
	509, 1962,
	510, 1962,
	511, 1962,
	512, 1962,
	513, 1962,
	514, 1962,
	516, 1962,
	518, 1962,
	519, 1962,
	520, 1962,
	521, 1962,
	522, 1962,
	523, 1962,
	524, 1962,
	525, 1962,
	526, 1962,
	527, 1962,
	528, 1962,
	529, 1962,
	530, 1962,
	531, 1962,
	532, 1962,
	533, 1962,
	534, 1962,
	535, 1962,
	536, 1962,
	537, 1962,
	538, 1962,
	540, 1962,
	541, 1962,
	543, 1962,
	544, 1962,
	546, 1962,
	547, 1962,
	548, 1962,
	549, 1962,
	550, 1962,
	551, 1962,
	553, 1962,
	554, 1962,
	556, 1962,
	557, 1962,
	558, 1962,
	559, 1962,
	560, 1962,
	562, 1962,
	564, 1962,
	565, 1962,
	566, 1962,
	567, 1962,
	568, 1962,
	569, 1962,
	570, 1962,
	571, 1962,
	573, 1962,
	574, 1962,
	575, 1962,
	576, 1962,
	577, 1962,
	578, 1962,
	579, 1962,
	582, 1962,
	583, 1962,
	584, 1962,
	585, 1962,
	586, 1962,
	587, 1962,
	588, 1962,
	589, 1962,
	591, 1962,
	594, 1962,
	595, 1962,
	596, 1962,
	597, 1962,
	598, 1962,
	599, 1962,
	601, 1962,
	602, 1962,
	603, 1962,
	604, 1962,
	605, 1962,
	606, 1962,
	607, 1962,
	608, 1962,
	609, 1962,
	614, 1962,
	615, 1962,
	616, 1962,
	617, 1962,
	618, 1962,
	619, 1962,
	-2, 0,
	-1, 1008,
	281, 517,
	-2, 0,
	-1, 1086,
	201, 1018,
	-2, 0,
	-1, 1087,
	424, 1071,
	497, 1071,
	544, 1071,
	566, 1071,
	-2, 0,
	-1, 1088,
	424, 1070,
	497, 1070,
	544, 1070,
	566, 1070,
	-2, 992,
	-1, 1092,
	1, 1123,
	651, 1123,
	653, 1123,
	655, 1123,
	658, 1123,
	-2, 0,
	-1, 1094,
	1, 1045,
	651, 1045,
	653, 1045,
	655, 1045,
	658, 1045,
	-2, 0,
	-1, 1095,
	1, 1049,
	651, 1049,
	653, 1049,
	655, 1049,
	658, 1049,
	-2, 0,
	-1, 1096,
	1, 1196,
	194, 1196,
	651, 1196,
	653, 1196,
	655, 1196,
	658, 1196,
	-2, 0,
	-1, 1104,
	1, 1076,
	651, 1076,
	653, 1076,
	655, 1076,
	658, 1076,
	-2, 0,
	-1, 1111,
	1, 1123,
	651, 1123,
	653, 1123,
	655, 1123,
	658, 1123,
	-2, 0,
	-1, 1112,
	1, 1125,
	651, 1125,
	653, 1125,
	655, 1125,
	658, 1125,
	-2, 0,
	-1, 1113,
	1, 1128,
	651, 1128,
	653, 1128,
	655, 1128,
	658, 1128,
	-2, 0,
	-1, 1121,
	1, 1159,
	651, 1159,
	653, 1159,
	655, 1159,
	658, 1159,
	-2, 0,
	-1, 1122,
	1, 1161,
	651, 1161,
	653, 1161,
	655, 1161,
	658, 1161,
	-2, 0,
	-1, 1127,
	1, 1189,
	651, 1189,
	653, 1189,
	655, 1189,
	658, 1189,
	-2, 0,
	-1, 1178,
	181, 1832,
	194, 1832,
	295, 1832,
	369, 1832,
	-2, 1768,
	-1, 1194,
	181, 1831,
	194, 1831,
	295, 1831,
	369, 1831,
	-2, 1765,
	-1, 1223,
	654, 2559,
	-2, 849,
	-1, 1252,
	5, 2551,
	652, 2549,
	-2, 2540,
	-1, 1260,
	5, 2572,
	652, 2569,
	-2, 2560,
	-1, 1261,
	5, 2573,
	652, 2570,
	-2, 2561,
	-1, 1269,
	654, 2557,
	-2, 2539,
	-1, 1270,
	652, 3067,
	-2, 2558,
	-1, 1293,
	5, 2574,
	38, 2574,
	134, 2574,
	634, 2574,
	650, 2574,
	653, 2574,
	654, 2574,
	657, 2574,
	-2, 3066,
	-1, 1294,
	5, 2037,
	-2, 3036,
	-1, 1295,
	5, 2038,
	-2, 3037,
	-1, 1296,
	5, 2039,
	-2, 3052,
	-1, 1297,
	5, 2040,
	-2, 3014,
	-1, 1298,
	5, 2041,
	-2, 3049,
	-1, 1299,
	5, 2049,
	-2, 3027,
	-1, 1300,
	5, 2036,
	-2, 3023,
	-1, 1301,
	5, 2036,
	-2, 3022,
	-1, 1302,
	5, 2036,
	-2, 3042,
	-1, 1303,
	5, 2047,
	-2, 3016,
	-1, 1304,
	5, 2052,
	-2, 3015,
	-1, 1305,
	5, 2054,
	-2, 3062,
	-1, 1308,
	5, 2076,
	-2, 3055,
	-1, 1309,
	5, 2068,
	-2, 3056,
	-1, 1310,
	5, 2076,
	-2, 3057,
	-1, 1311,
	5, 2072,
	-2, 3058,
	-1, 1312,
	5, 2022,
	-2, 3028,
	-1, 1313,
	5, 2023,
	-2, 3029,
	-1, 1314,
	5, 2024,
	-2, 3017,
	-1, 1342,
	5, 2059,
	-2, 3063,
	-1, 1343,
	5, 2060,
	-2, 3053,
	-1, 1344,
	5, 2061,
	602, 2061,
	-2, 3018,
	-1, 1345,
	5, 2062,
	602, 2062,
	-2, 3019,
	-1, 1383,
	652, 2569,
	-2, 2560,
	-1, 1384,
	652, 2570,
	-2, 2561,
	-1, 1485,
	201, 2957,
	561, 2957,
	634, 2957,
	654, 2957,
	-2, 0,
	-1, 1490,
	1, 825,
	655, 825,
	658, 825,
	-2, 1677,
	-1, 1537,
	1, 1672,
	655, 1672,
	658, 1672,
	-2, 1677,
	-1, 1639,
	389, 2534,
	451, 2534,
	499, 2534,
	644, 2534,
	-2, 2522,
	-1, 1645,
	201, 149,
	288, 149,
	354, 149,
	609, 149,
	-2, 2952,
	-1, 1646,
	201, 150,
	288, 150,
	354, 150,
	609, 150,
	-2, 2678,
	-1, 1647,
	201, 151,
	288, 151,
	354, 151,
	609, 151,
	-2, 2867,
	-1, 1653,
	656, 2534,
	-2, 2536,
	-1, 1677,
	1, 1519,
	456, 1473,
	499, 1473,
	626, 1473,
	631, 1473,
	651, 1519,
	653, 1519,
	655, 1519,
	658, 1519,
	-2, 1817,
	-1, 1683,
	217, 1616,
	239, 1616,
	467, 1616,
	-2, 0,
	-1, 1751,
	46, 2532,
	-2, 1252,
	-1, 1758,
	1, 1519,
	651, 1519,
	653, 1519,
	655, 1519,
	658, 1519,
	-2, 1817,
	-1, 1761,
	433, 1289,
	601, 1289,
	-2, 438,
	-1, 1767,
	4, 1544,
	21, 1544,
	22, 1544,
	23, 1544,
	24, 1544,
	25, 1544,
	26, 1544,
	27, 1544,
	28, 1544,
	30, 1544,
	31, 1544,
	37, 1544,
	41, 1544,
	43, 1544,
	44, 1544,
	45, 1544,
	47, 1544,
	48, 1544,
	49, 1544,
	50, 1544,
	51, 1544,
	52, 1544,
	53, 1544,
	54, 1544,
	55, 1544,
	57, 1544,
	58, 1544,
	59, 1544,
	60, 1544,
	62, 1544,
	63, 1544,
	64, 1544,
	65, 1544,
	66, 1544,
	67, 1544,
	68, 1544,
	69, 1544,
	73, 1544,
	74, 1544,
	75, 1544,
	76, 1544,
	78, 1544,
	79, 1544,
	80, 1544,
	84, 1544,
	85, 1544,
	86, 1544,
	87, 1544,
	88, 1544,
	89, 1544,
	90, 1544,
	91, 1544,
	94, 1544,
	95, 1544,
	96, 1544,
	97, 1544,
	98, 1544,
	100, 1544,
	102, 1544,
	103, 1544,
	104, 1544,
	105, 1544,
	106, 1544,
	107, 1544,
	108, 1544,
	110, 1544,
	111, 1544,
	112, 1544,
	114, 1544,
	115, 1544,
	116, 1544,
	124, 1544,
	125, 1544,
	126, 1544,
	127, 1544,
	128, 1544,
	130, 1544,
	131, 1544,
	132, 1544,
	133, 1544,
	135, 1544,
	136, 1544,
	137, 1544,
	138, 1544,
	140, 1544,
	141, 1544,
	142, 1544,
	144, 1544,
	145, 1544,
	146, 1544,
	149, 1544,
	150, 1544,
	151, 1544,
	153, 1544,
	154, 1544,
	155, 1544,
	157, 1544,
	158, 1544,
	159, 1544,
	161, 1544,
	162, 1544,
	163, 1544,
	164, 1544,
	165, 1544,
	166, 1544,
	167, 1544,
	168, 1544,
	169, 1544,
	170, 1544,
	171, 1544,
	172, 1544,
	173, 1544,
	174, 1544,
	175, 1544,
	176, 1544,
	177, 1544,
	178, 1544,
	186, 1544,
	187, 1544,
	188, 1544,
	189, 1544,
	193, 1544,
	195, 1544,
	196, 1544,
	197, 1544,
	199, 1544,
	200, 1544,
	203, 1544,
	204, 1544,
	205, 1544,
	206, 1544,
	207, 1544,
	208, 1544,
	209, 1544,
	210, 1544,
	211, 1544,
	212, 1544,
	213, 1544,
	214, 1544,
	215, 1544,
	216, 1544,
	218, 1544,
	219, 1544,
	221, 1544,
	222, 1544,
	224, 1544,
	225, 1544,
	226, 1544,
	227, 1544,
	228, 1544,
	229, 1544,
	230, 1544,
	231, 1544,
	232, 1544,
	233, 1544,
	234, 1544,
	236, 1544,
	237, 1544,
	238, 1544,
	240, 1544,
	241, 1544,
	242, 1544,
	243, 1544,
	244, 1544,
	249, 1544,
	250, 1544,
	251, 1544,
	254, 1544,
	255, 1544,
	256, 1544,
	257, 1544,
	258, 1544,
	259, 1544,
	261, 1544,
	263, 1544,
	264, 1544,
	265, 1544,
	267, 1544,
	269, 1544,
	270, 1544,
	271, 1544,
	273, 1544,
	277, 1544,
	278, 1544,
	279, 1544,
	280, 1544,
	281, 1544,
	282, 1544,
	284, 1544,
	285, 1544,
	286, 1544,
	288, 1544,
	289, 1544,
	290, 1544,
	292, 1544,
	293, 1544,
	296, 1544,
	297, 1544,
	298, 1544,
	299, 1544,
	300, 1544,
	301, 1544,
	302, 1544,
	305, 1544,
	306, 1544,
	307, 1544,
	308, 1544,
	310, 1544,
	311, 1544,
	312, 1544,
	313, 1544,
	314, 1544,
	315, 1544,
	316, 1544,
	317, 1544,
	318, 1544,
	319, 1544,
	320, 1544,
	321, 1544,
	322, 1544,
	323, 1544,
	324, 1544,
	325, 1544,
	326, 1544,
	327, 1544,
	328, 1544,
	329, 1544,
	330, 1544,
	331, 1544,
	332, 1544,
	334, 1544,
	336, 1544,
	337, 1544,
	338, 1544,
	339, 1544,
	340, 1544,
	341, 1544,
	342, 1544,
	343, 1544,
	344, 1544,
	345, 1544,
	346, 1544,
	347, 1544,
	348, 1544,
	349, 1544,
	350, 1544,
	351, 1544,
	352, 1544,
	354, 1544,
	355, 1544,
	359, 1544,
	360, 1544,
	361, 1544,
	362, 1544,
	364, 1544,
	365, 1544,
	366, 1544,
	367, 1544,
	368, 1544,
	371, 1544,
	373, 1544,
	374, 1544,
	376, 1544,
	377, 1544,
	378, 1544,
	381, 1544,
	382, 1544,
	383, 1544,
	385, 1544,
	387, 1544,
	388, 1544,
	389, 1544,
	390, 1544,
	391, 1544,
	392, 1544,
	393, 1544,
	394, 1544,
	395, 1544,
	396, 1544,
	397, 1544,
	398, 1544,
	399, 1544,
	400, 1544,
	402, 1544,
	403, 1544,
	404, 1544,
	405, 1544,
	406, 1544,
	407, 1544,
	408, 1544,
	409, 1544,
	410, 1544,
	411, 1544,
	412, 1544,
	413, 1544,
	414, 1544,
	415, 1544,
	416, 1544,
	418, 1544,
	419, 1544,
	420, 1544,
	422, 1544,
	423, 1544,
	424, 1544,
	425, 1544,
	426, 1544,
	427, 1544,
	428, 1544,
	429, 1544,
	430, 1544,
	431, 1544,
	432, 1544,
	433, 1544,
	434, 1544,
	435, 1544,
	437, 1544,
	439, 1544,
	440, 1544,
	441, 1544,
	447, 1544,
	448, 1544,
	449, 1544,
	451, 1544,
	452, 1544,
	453, 1544,
	454, 1544,
	455, 1544,
	456, 1544,
	457, 1544,
	458, 1544,
	459, 1544,
	460, 1544,
	461, 1544,
	463, 1544,
	464, 1544,
	465, 1544,
	466, 1544,
	467, 1544,
	469, 1544,
	470, 1544,
	471, 1544,
	472, 1544,
	473, 1544,
	474, 1544,
	475, 1544,
	477, 1544,
	478, 1544,
	479, 1544,
	480, 1544,
	481, 1544,
	482, 1544,
	483, 1544,
	484, 1544,
	485, 1544,
	486, 1544,
	487, 1544,
	488, 1544,
	489, 1544,
	490, 1544,
	492, 1544,
	493, 1544,
	494, 1544,
	495, 1544,
	496, 1544,
	497, 1544,
	499, 1544,
	500, 1544,
	501, 1544,
	502, 1544,
	503, 1544,
	504, 1544,
	505, 1544,
	507, 1544,
	508, 1544,
	509, 1544,
	510, 1544,
	511, 1544,
	512, 1544,
	513, 1544,
	514, 1544,
	516, 1544,
	518, 1544,
	519, 1544,
	520, 1544,
	521, 1544,
	522, 1544,
	523, 1544,
	524, 1544,
	525, 1544,
	526, 1544,
	527, 1544,
	528, 1544,
	529, 1544,
	530, 1544,
	531, 1544,
	532, 1544,
	533, 1544,
	534, 1544,
	535, 1544,
	536, 1544,
	537, 1544,
	538, 1544,
	540, 1544,
	541, 1544,
	543, 1544,
	544, 1544,
	546, 1544,
	547, 1544,
	548, 1544,
	549, 1544,
	550, 1544,
	551, 1544,
	553, 1544,
	554, 1544,
	556, 1544,
	557, 1544,
	558, 1544,
	559, 1544,
	560, 1544,
	562, 1544,
	564, 1544,
	565, 1544,
	566, 1544,
	567, 1544,
	568, 1544,
	569, 1544,
	570, 1544,
	571, 1544,
	573, 1544,
	574, 1544,
	575, 1544,
	576, 1544,
	577, 1544,
	578, 1544,
	579, 1544,
	582, 1544,
	583, 1544,
	584, 1544,
	585, 1544,
	586, 1544,
	587, 1544,
	588, 1544,
	589, 1544,
	591, 1544,
	594, 1544,
	595, 1544,
	596, 1544,
	597, 1544,
	598, 1544,
	599, 1544,
	601, 1544,
	602, 1544,
	603, 1544,
	604, 1544,
	605, 1544,
	606, 1544,
	607, 1544,
	608, 1544,
	609, 1544,
	614, 1544,
	615, 1544,
	616, 1544,
	617, 1544,
	618, 1544,
	619, 1544,
	-2, 0,
	-1, 1790,
	1, 655,
	651, 655,
	653, 655,
	655, 655,
	658, 655,
	-2, 1788,
	-1, 1793,
	4, 3061,
	11, 3061,
	12, 3061,
	14, 3061,
	15, 3061,
	16, 3061,
	17, 3061,
	18, 3061,
	19, 3061,
	21, 3061,
	22, 3061,
	23, 3061,
	24, 3061,
	25, 3061,
	26, 3061,
	27, 3061,
	28, 3061,
	30, 3061,
	31, 3061,
	34, 3061,
	35, 3061,
	37, 3061,
	39, 3061,
	41, 3061,
	43, 3061,
	44, 3061,
	45, 3061,
	47, 3061,
	48, 3061,
	49, 3061,
	50, 3061,
	51, 3061,
	52, 3061,
	53, 3061,
	54, 3061,
	55, 3061,
	57, 3061,
	58, 3061,
	59, 3061,
	60, 3061,
	62, 3061,
	63, 3061,
	64, 3061,
	65, 3061,
	66, 3061,
	67, 3061,
	68, 3061,
	69, 3061,
	72, 3061,
	73, 3061,
	74, 3061,
	75, 3061,
	76, 3061,
	78, 3061,
	79, 3061,
	80, 3061,
	81, 3061,
	84, 3061,
	85, 3061,
	86, 3061,
	87, 3061,
	88, 3061,
	89, 3061,
	90, 3061,
	91, 3061,
	92, 3061,
	94, 3061,
	95, 3061,
	96, 3061,
	97, 3061,
	98, 3061,
	100, 3061,
	101, 3061,
	102, 3061,
	103, 3061,
	104, 3061,
	105, 3061,
	106, 3061,
	107, 3061,
	108, 3061,
	110, 3061,
	111, 3061,
	112, 3061,
	113, 3061,
	114, 3061,
	115, 3061,
	116, 3061,
	124, 3061,
	125, 3061,
	126, 3061,
	127, 3061,
	128, 3061,
	130, 3061,
	131, 3061,
	132, 3061,
	133, 3061,
	135, 3061,
	136, 3061,
	137, 3061,
	138, 3061,
	140, 3061,
	141, 3061,
	142, 3061,
	144, 3061,
	145, 3061,
	146, 3061,
	149, 3061,
	150, 3061,
	151, 3061,
	153, 3061,
	154, 3061,
	155, 3061,
	157, 3061,
	158, 3061,
	159, 3061,
	161, 3061,
	162, 3061,
	163, 3061,
	164, 3061,
	165, 3061,
	166, 3061,
	167, 3061,
	168, 3061,
	169, 3061,
	170, 3061,
	171, 3061,
	172, 3061,
	173, 3061,
	174, 3061,
	175, 3061,
	176, 3061,
	177, 3061,
	178, 3061,
	182, 3061,
	183, 3061,
	184, 3061,
	185, 3061,
	186, 3061,
	187, 3061,
	188, 3061,
	189, 3061,
	192, 3061,
	193, 3061,
	195, 3061,
	196, 3061,
	197, 3061,
	199, 3061,
	200, 3061,
	202, 3061,
	203, 3061,
	204, 3061,
	205, 3061,
	206, 3061,
	207, 3061,
	208, 3061,
	209, 3061,
	210, 3061,
	211, 3061,
	212, 3061,
	213, 3061,
	214, 3061,
	215, 3061,
	216, 3061,
	218, 3061,
	219, 3061,
	221, 3061,
	222, 3061,
	224, 3061,
	225, 3061,
	226, 3061,
	227, 3061,
	228, 3061,
	229, 3061,
	230, 3061,
	231, 3061,
	232, 3061,
	233, 3061,
	234, 3061,
	235, 3061,
	236, 3061,
	237, 3061,
	238, 3061,
	239, 3061,
	240, 3061,
	241, 3061,
	242, 3061,
	243, 3061,
	244, 3061,
	246, 3061,
	247, 3061,
	249, 3061,
	250, 3061,
	251, 3061,
	253, 3061,
	254, 3061,
	255, 3061,
	256, 3061,
	257, 3061,
	258, 3061,
	259, 3061,
	261, 3061,
	263, 3061,
	264, 3061,
	265, 3061,
	266, 3061,
	267, 3061,
	268, 3061,
	269, 3061,
	270, 3061,
	271, 3061,
	272, 3061,
	273, 3061,
	275, 3061,
	276, 3061,
	277, 3061,
	278, 3061,
	279, 3061,
	280, 3061,
	281, 3061,
	282, 3061,
	284, 3061,
	285, 3061,
	286, 3061,
	288, 3061,
	289, 3061,
	290, 3061,
	291, 3061,
	292, 3061,
	293, 3061,
	294, 3061,
	296, 3061,
	297, 3061,
	298, 3061,
	299, 3061,
	300, 3061,
	301, 3061,
	302, 3061,
	305, 3061,
	306, 3061,
	307, 3061,
	308, 3061,
	309, 3061,
	310, 3061,
	311, 3061,
	312, 3061,
	313, 3061,
	314, 3061,
	315, 3061,
	316, 3061,
	317, 3061,
	318, 3061,
	319, 3061,
	320, 3061,
	321, 3061,
	322, 3061,
	323, 3061,
	324, 3061,
	325, 3061,
	326, 3061,
	327, 3061,
	328, 3061,
	329, 3061,
	330, 3061,
	331, 3061,
	332, 3061,
	334, 3061,
	335, 3061,
	336, 3061,
	337, 3061,
	338, 3061,
	339, 3061,
	340, 3061,
	341, 3061,
	342, 3061,
	343, 3061,
	344, 3061,
	345, 3061,
	346, 3061,
	347, 3061,
	348, 3061,
	349, 3061,
	350, 3061,
	351, 3061,
	352, 3061,
	354, 3061,
	355, 3061,
	358, 3061,
	359, 3061,
	360, 3061,
	361, 3061,
	362, 3061,
	364, 3061,
	365, 3061,
	366, 3061,
	367, 3061,
	368, 3061,
	371, 3061,
	373, 3061,
	376, 3061,
	377, 3061,
	378, 3061,
	379, 3061,
	381, 3061,
	382, 3061,
	383, 3061,
	385, 3061,
	387, 3061,
	388, 3061,
	389, 3061,
	390, 3061,
	391, 3061,
	392, 3061,
	393, 3061,
	394, 3061,
	395, 3061,
	396, 3061,
	397, 3061,
	398, 3061,
	399, 3061,
	400, 3061,
	402, 3061,
	403, 3061,
	404, 3061,
	405, 3061,
	406, 3061,
	407, 3061,
	408, 3061,
	409, 3061,
	410, 3061,
	411, 3061,
	412, 3061,
	413, 3061,
	414, 3061,
	415, 3061,
	416, 3061,
	418, 3061,
	419, 3061,
	420, 3061,
	422, 3061,
	423, 3061,
	424, 3061,
	425, 3061,
	426, 3061,
	427, 3061,
	428, 3061,
	429, 3061,
	430, 3061,
	431, 3061,
	432, 3061,
	433, 3061,
	434, 3061,
	435, 3061,
	437, 3061,
	439, 3061,
	440, 3061,
	441, 3061,
	447, 3061,
	448, 3061,
	449, 3061,
	450, 3061,
	451, 3061,
	452, 3061,
	453, 3061,
	454, 3061,
	455, 3061,
	456, 3061,
	457, 3061,
	458, 3061,
	459, 3061,
	460, 3061,
	461, 3061,
	463, 3061,
	464, 3061,
	465, 3061,
	466, 3061,
	467, 3061,
	468, 3061,
	469, 3061,
	470, 3061,
	471, 3061,
	472, 3061,
	473, 3061,
	474, 3061,
	475, 3061,
	476, 3061,
	477, 3061,
	478, 3061,
	479, 3061,
	480, 3061,
	481, 3061,
	482, 3061,
	483, 3061,
	484, 3061,
	485, 3061,
	486, 3061,
	487, 3061,
	488, 3061,
	489, 3061,
	490, 3061,
	492, 3061,
	493, 3061,
	494, 3061,
	495, 3061,
	496, 3061,
	497, 3061,
	499, 3061,
	500, 3061,
	501, 3061,
	502, 3061,
	503, 3061,
	504, 3061,
	505, 3061,
	506, 3061,
	507, 3061,
	508, 3061,
	509, 3061,
	510, 3061,
	511, 3061,
	512, 3061,
	513, 3061,
	514, 3061,
	516, 3061,
	518, 3061,
	519, 3061,
	520, 3061,
	521, 3061,
	522, 3061,
	523, 3061,
	524, 3061,
	525, 3061,
	526, 3061,
	527, 3061,
	528, 3061,
	529, 3061,
	530, 3061,
	531, 3061,
	532, 3061,
	533, 3061,
	534, 3061,
	535, 3061,
	536, 3061,
	537, 3061,
	538, 3061,
	540, 3061,
	541, 3061,
	542, 3061,
	543, 3061,
	544, 3061,
	546, 3061,
	547, 3061,
	548, 3061,
	549, 3061,
	550, 3061,
	551, 3061,
	553, 3061,
	554, 3061,
	556, 3061,
	557, 3061,
	558, 3061,
	559, 3061,
	560, 3061,
	562, 3061,
	564, 3061,
	565, 3061,
	566, 3061,
	567, 3061,
	568, 3061,
	569, 3061,
	570, 3061,
	571, 3061,
	573, 3061,
	574, 3061,
	575, 3061,
	576, 3061,
	577, 3061,
	578, 3061,
	579, 3061,
	582, 3061,
	583, 3061,
	584, 3061,
	585, 3061,
	586, 3061,
	587, 3061,
	588, 3061,
	589, 3061,
	591, 3061,
	594, 3061,
	595, 3061,
	596, 3061,
	597, 3061,
	598, 3061,
	599, 3061,
	601, 3061,
	602, 3061,
	603, 3061,
	604, 3061,
	605, 3061,
	606, 3061,
	607, 3061,
	608, 3061,
	609, 3061,
	614, 3061,
	615, 3061,
	616, 3061,
	617, 3061,
	618, 3061,
	619, 3061,
	620, 3061,
	622, 3061,
	632, 3061,
	633, 3061,
	634, 3061,
	635, 3061,
	636, 3061,
	637, 3061,
	639, 3061,
	640, 3061,
	641, 3061,
	642, 3061,
	643, 3061,
	644, 3061,
	645, 3061,
	646, 3061,
	647, 3061,
	650, 3061,
	653, 3061,
	654, 3061,
	656, 3061,
	657, 3061,
	-2, 0,
	-1, 1798,
	201, 2910,
	561, 2910,
	634, 2910,
	654, 2910,
	-2, 0,
	-1, 1846,
	201, 1019,
	-2, 2901,
	-1, 1847,
	201, 1020,
	-2, 2686,
	-1, 1848,
	201, 1021,
	-2, 2853,
	-1, 1853,
	424, 1071,
	497, 1071,
	544, 1071,
	566, 1071,
	-2, 0,
	-1, 1864,
	1, 1616,
	239, 1616,
	651, 1616,
	653, 1616,
	655, 1616,
	658, 1616,
	-2, 0,
	-1, 1881,
	1, 1066,
	651, 1066,
	653, 1066,
	655, 1066,
	658, 1066,
	-2, 0,
	-1, 1882,
	1, 1110,
	651, 1110,
	653, 1110,
	655, 1110,
	658, 1110,
	-2, 0,
	-1, 1883,
	1, 1118,
	651, 1118,
	653, 1118,
	655, 1118,
	658, 1118,
	-2, 0,
	-1, 1886,
	1, 1075,
	651, 1075,
	653, 1075,
	655, 1075,
	658, 1075,
	-2, 0,
	-1, 1888,
	1, 1081,
	651, 1081,
	653, 1081,
	655, 1081,
	658, 1081,
	-2, 0,
	-1, 1891,
	1, 1077,
	651, 1077,
	653, 1077,
	655, 1077,
	658, 1077,
	-2, 0,
	-1, 1896,
	1, 1091,
	651, 1091,
	653, 1091,
	655, 1091,
	658, 1091,
	-2, 0,
	-1, 1931,
	1, 2891,
	651, 2891,
	653, 2891,
	654, 2891,
	655, 2891,
	658, 2891,
	-2, 0,
	-1, 1935,
	1, 1170,
	651, 1170,
	653, 1170,
	655, 1170,
	658, 1170,
	-2, 0,
	-1, 1955,
	181, 1831,
	194, 1831,
	295, 1831,
	369, 1831,
	-2, 1769,
	-1, 2057,
	160, 1790,
	181, 1790,
	194, 1790,
	260, 1790,
	295, 1790,
	369, 1790,
	380, 1790,
	580, 1790,
	-2, 2241,
	-1, 2118,
	653, 2416,
	-2, 0,
	-1, 2154,
	160, 1790,
	181, 1790,
	194, 1790,
	260, 1790,
	295, 1790,
	369, 1790,
	380, 1790,
	580, 1790,
	-2, 1923,
	-1, 2193,
	654, 2560,
	657, 2560,
	-2, 1197,
	-1, 2194,
	654, 2562,
	657, 2562,
	-2, 1198,
	-1, 2195,
	654, 2561,
	657, 2561,
	-2, 1199,
	-1, 2196,
	657, 2484,
	-2, 1200,
	-1, 2218,
	652, 2064,
	-2, 2052,
	-1, 2250,
	201, 2907,
	654, 2907,
	657, 2907,
	-2, 0,
	-1, 2294,
	1, 827,
	655, 827,
	658, 827,
	-2, 1677,
	-1, 2471,
	239, 284,
	-2, 2568,
	-1, 2472,
	239, 285,
	-2, 346,
	-1, 2588,
	1, 1068,
	651, 1068,
	653, 1068,
	655, 1068,
	658, 1068,
	-2, 0,
	-1, 2589,
	1, 1112,
	651, 1112,
	653, 1112,
	655, 1112,
	658, 1112,
	-2, 0,
	-1, 2590,
	1, 1120,
	651, 1120,
	653, 1120,
	655, 1120,
	658, 1120,
	-2, 0,
	-1, 2591,
	1, 1172,
	651, 1172,
	653, 1172,
	655, 1172,
	658, 1172,
	-2, 0,
	-1, 2632,
	1, 1093,
	651, 1093,
	653, 1093,
	655, 1093,
	658, 1093,
	-2, 0,
	-1, 2655,
	1, 1155,
	651, 1155,
	653, 1155,
	655, 1155,
	658, 1155,
	-2, 0,
	-1, 2703,
	474, 1858,
	475, 1858,
	-2, 2097,
	-1, 2736,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2117,
	-1, 2737,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2118,
	-1, 2738,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2119,
	-1, 2739,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2120,
	-1, 2740,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2121,
	-1, 2741,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2122,
	-1, 2742,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2123,
	-1, 2743,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2124,
	-1, 2755,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2136,
	-1, 2756,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2137,
	-1, 2757,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2138,
	-1, 2761,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2145,
	-1, 2767,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2149,
	-1, 2769,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2157,
	-1, 2770,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2158,
	-1, 2771,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2159,
	-1, 2772,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2160,
	-1, 2946,
	5, 2572,
	201, 2427,
	652, 2569,
	-2, 2560,
	-1, 2947,
	201, 2428,
	-2, 2992,
	-1, 2948,
	201, 2429,
	-2, 2780,
	-1, 2949,
	201, 2430,
	-2, 2650,
	-1, 2950,
	201, 2431,
	-2, 2714,
	-1, 2951,
	201, 2432,
	-2, 2765,
	-1, 2952,
	201, 2433,
	-2, 2904,
	-1, 2953,
	201, 2434,
	-2, 2224,
	-1, 3045,
	1, 1924,
	2, 1924,
	113, 1924,
	160, 1924,
	181, 1924,
	194, 1924,
	202, 1924,
	220, 1924,
	223, 1924,
	253, 1924,
	260, 1924,
	272, 1924,
	291, 1924,
	295, 1924,
	335, 1924,
	369, 1924,
	374, 1924,
	380, 1924,
	462, 1924,
	468, 1924,
	580, 1924,
	592, 1924,
	611, 1924,
	612, 1924,
	613, 1924,
	623, 1924,
	651, 1924,
	653, 1924,
	655, 1924,
	657, 1924,
	658, 1924,
	-2, 1923,
	-1, 3058,
	652, 2541,
	-2, 2555,
	-1, 3060,
	1, 363,
	611, 363,
	658, 363,
	-2, 1817,
	-1, 3095,
	652, 2063,
	-2, 2053,
	-1, 3314,
	1, 1519,
	456, 1473,
	499, 1473,
	626, 1473,
	631, 1473,
	651, 1519,
	653, 1519,
	655, 1519,
	658, 1519,
	-2, 1817,
	-1, 3498,
	375, 1861,
	-2, 3050,
	-1, 3499,
	375, 1862,
	-2, 2888,
	-1, 3503,
	474, 2495,
	475, 2495,
	-2, 2222,
	-1, 3504,
	474, 2499,
	475, 2499,
	-2, 2223,
	-1, 3505,
	474, 2496,
	475, 2496,
	-2, 2222,
	-1, 3506,
	474, 2500,
	475, 2500,
	-2, 2223,
	-1, 3520,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2147,
	-1, 3521,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2151,
	-1, 3527,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2153,
	-1, 3759,
	1, 822,
	651, 822,
	653, 822,
	655, 822,
	658, 822,
	-2, 1677,
	-1, 3944,
	38, 2572,
	134, 2572,
	634, 2572,
	650, 2572,
	653, 2572,
	654, 2572,
	657, 2572,
	-2, 2569,
	-1, 3945,
	38, 2573,
	134, 2573,
	634, 2573,
	650, 2573,
	653, 2573,
	654, 2573,
	657, 2573,
	-2, 2570,
	-1, 3976,
	46, 2532,
	-2, 1253,
	-1, 3981,
	1, 1519,
	651, 1519,
	653, 1519,
	655, 1519,
	658, 1519,
	-2, 1817,
	-1, 4091,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2155,
	-1, 4098,
	266, 0,
	268, 0,
	358, 0,
	-2, 2174,
	-1, 4166,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2203,
	-1, 4167,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2204,
	-1, 4168,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2205,
	-1, 4172,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2209,
	-1, 4173,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2210,
	-1, 4174,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2211,
	-1, 4222,
	652, 2542,
	-2, 2556,
	-1, 4451,
	654, 3168,
	-2, 1743,
	-1, 4510,
	266, 0,
	268, 0,
	358, 0,
	-2, 2175,
	-1, 4513,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2178,
	-1, 4514,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2180,
	-1, 4638,
	654, 2557,
	-2, 1554,
	-1, 4805,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2179,
	-1, 4806,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2181,
	-1, 4817,
	266, 0,
	-2, 2214,
	-1, 5014,
	266, 0,
	-2, 2215,
	-1, 5260,
	54, 0,
	235, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 3013,
}

const sqlPrivate = 57344

const sqlLast = 155780

var sqlAct = [...]int{
	300, 3389, 5175, 5174, 1466, 3658, 5483, 5401, 3268, 5065,
	3238, 1203, 196, 5339, 5057, 4879, 5259, 5323, 3963, 5307,
	1006, 6, 5246, 5415, 5272, 5110, 5128, 5229, 1007, 10,
	4, 5189, 5186, 3962, 2468, 5165, 5273, 4959, 5274, 4423,
	4493, 2314, 5206, 5270, 1522, 2354, 4982, 4946, 4929, 5348,
	4131, 3726, 5018, 5258, 4763, 4752, 4721, 4758, 4884, 3786,
	4826, 4634, 4083, 2511, 4689, 2713, 2160, 4793, 3358, 3999,
	2562, 4435, 4443, 2560, 5095, 4965, 2978, 1663, 1456, 3789,
	4348, 1387, 785, 2325, 3512, 3937, 931, 4615, 4635, 3168,
	1816, 2276, 2784, 3993, 4768, 2723, 1964, 4406, 3409, 3167,
	2205, 1195, 1366, 3792, 3921, 2537, 4381, 3952, 4379, 4822,
	3850, 4026, 3378, 859, 931, 3947, 1543, 196, 4028, 3346,
	1458, 2558, 2524, 3375, 2714, 3951, 3773, 3954, 1251, 3711,
	3253, 3775, 3072, 3914, 3933, 1636, 2363, 3373, 3774, 3913,
	4225, 3673, 3704, 797, 3641, 3664, 3681, 1376, 1463, 4492,
	3440, 1010, 3404, 3390, 1814, 3662, 4549, 2129, 3321, 2392,
	2457, 2455, 3269, 3935, 1689, 2444, 5324, 3936, 3813, 2375,
	2189, 4192, 1688, 3640, 2720, 5019, 2065, 2104, 1693, 2862,
	2035, 3496, 3403, 2797, 1753, 1461, 3037, 294, 3038, 926,
	2434, 3040, 2508, 855, 1449, 1001, 2442, 2864, 3283, 2415,
	3778, 2422, 1861, 2456, 3359, 2342, 2346, 1505, 1259, 3077,
	1256, 1261, 2274, 1537, 3018, 2975, 2130, 2853, 1435, 2781,
	2324, 2702, 2685, 3073, 2321, 832, 1524, 1367, 2683, 1791,
	3383, 1749, 2507, 1756, 1081, 3192, 1665, 2437, 5129, 1492,
	3955, 1405, 2099, 2149, 2146, 3153, 2856, 772, 2988, 1370,
	932, 795, 3193, 3027, 2908, 1349, 2834, 2139, 933, 293,
	2942, 1384, 2049, 206, 1965, 1446, 1224, 1966, 207, 2684,
	2686, 1896, 2465, 937, 1520, 851, 840, 122, 932, 1881,
	1789, 126, 1782, 981, 2446, 112, 933, 1644, 1237, 790,
	50, 875, 49, 5340, 1206, 815, 5402, 47, 38, 36,
	786, 937, 799, 34, 1372, 1517, 1347, 3550, 1536, 1718,
	921, 1971, 1946, 1699, 2263, 1102, 4206, 3544, 2265, 4207,
	2265, 3660, 1252, 5475, 3727, 982, 2265, 2265, 2265, 5268,
	5494, 4852, 3611, 3612, 3017, 3629, 3630, 3631, 5486, 2265,
	5473, 4845, 3892, 5472, 3017, 940, 5437, 3017, 5435, 5369,
	4883, 4844, 4883, 2477, 5325, 4508, 5298, 5296, 5326, 5293,
	3017, 3017, 4849, 5294, 4848, 868, 871, 4008, 2286, 4745,
	5290, 5256, 5255, 940, 5291, 2477, 2477, 5254, 5244, 5242,
	5233, 3414, 4883, 4883, 4883, 5232, 5184, 5150, 5143, 4883,
	4883, 3086, 3017, 1692, 5142, 4009, 5133, 5109, 3017, 1002,
	2477, 2477, 1501, 5106, 5087, 5016, 1364, 4883, 4706, 3086,
	4996, 4961, 4902, 3626, 4468, 4275, 2477, 4901, 4890, 4889,
	4882, 2477, 2477, 4883, 4883, 1199, 4583, 84, 4833, 1005,
	1004, 4807, 2477, 1501, 4778, 3086, 2559, 2283, 3414, 1188,
	3721, 3892, 1199, 1750, 1350, 1350, 85, 2283, 1981, 1982,
	2477, 2014, 2015, 2016, 2025, 2026, 2027, 4746, 4684, 4662,
	1179, 3892, 3017, 3017, 90, 1178, 2512, 4196, 3744, 1379,
	2286, 2018, 2012, 4512, 4459, 4453, 3740, 3086, 4021, 4021,
	1984, 4403, 3109, 4306, 4274, 4404, 1200, 4307, 4275, 4217,
	4215, 2031, 4199, 4218, 4216, 4115, 3017, 3559, 4111, 2477,
	4020, 1887, 3017, 3560, 4021, 2286, 99, 1826, 3657, 2037,
	3351, 3081, 3017, 3617, 1402, 1194, 3652, 3651, 1983, 3602,
	3017, 3017, 3600, 3603, 3592, 2990, 3601, 3590, 3593, 2003,
	3561, 3017, 1412, 3413, 3017, 3400, 2283, 3414, 2000, 2547,
	3511, 3017, 3399, 3132, 1981, 1982, 2547, 3017, 1008, 3085,
	3070, 5151, 3062, 3086, 3017, 2286, 2477, 105, 3016, 258,
	1351, 55, 3017, 121, 1353, 5020, 1354, 2546, 2012, 105,
	118, 2547, 5011, 4999, 3414, 4196, 1984, 2989, 2286, 4756,
	4706, 2283, 4663, 1382, 4468, 4405, 4393, 3633, 3245, 2368,
	3152, 2300, 2476, 3143, 2264, 2280, 3351, 3263, 2859, 3078,
	1807, 1981, 1982, 2125, 1403, 2037, 1686, 4324, 4086, 1863,
	1403, 4055, 2147, 260, 1983, 2427, 3054, 3053, 3052, 2006,
	2007, 2008, 2009, 4010, 3051, 2012, 3050, 1713, 1355, 1989,
	3627, 1352, 258, 1984, 1187, 106, 2810, 2811, 2812, 2829,
	2830, 2831, 1186, 4011, 2891, 1185, 1184, 1183, 1182, 1181,
	3466, 3368, 1177, 1176, 3611, 3612, 1175, 2832, 1174, 1173,
	1172, 1171, 2037, 1170, 1169, 259, 1168, 1167, 1166, 1165,
	1164, 1983, 2022, 1163, 1162, 1161, 2032, 1160, 1159, 1158,
	1145, 252, 2003, 2011, 2013, 1079, 260, 1078, 1077, 1076,
	253, 2000, 1075, 1701, 2037, 1074, 1073, 2860, 1072, 1701,
	1692, 1071, 3017, 2028, 1070, 2029, 1069, 1068, 2266, 1067,
	2266, 2034, 1998, 1999, 2822, 1066, 2266, 2266, 2266, 3549,
	208, 1065, 1064, 2818, 1063, 1989, 1062, 1061, 1060, 2266,
	1059, 2020, 1058, 1057, 1056, 3626, 1055, 1054, 259, 1053,
	1052, 1051, 1050, 1049, 3611, 3612, 2004, 1048, 1047, 4506,
	1046, 1045, 1044, 1043, 1032, 1031, 1030, 1025, 1024, 1017,
	3611, 3612, 1016, 3629, 3630, 3631, 1015, 1000, 999, 957,
	1258, 956, 2006, 2007, 2008, 2009, 955, 954, 953, 2011,
	2013, 944, 1989, 4507, 2861, 2283, 2858, 2283, 943, 942,
	941, 903, 1701, 208, 110, 2030, 4567, 3628, 902, 866,
	865, 864, 846, 288, 2823, 2824, 2825, 2826, 287, 286,
	285, 2624, 284, 283, 2817, 282, 2019, 281, 2283, 280,
	2283, 279, 278, 2067, 277, 2989, 276, 2034, 275, 274,
	1707, 273, 272, 1468, 1261, 3617, 2011, 2013, 3351, 271,
	3943, 3626, 2004, 270, 269, 268, 267, 266, 265, 3386,
	264, 4008, 263, 204, 262, 113, 1712, 261, 117, 4524,
	4250, 1261, 1261, 1261, 4211, 1998, 1999, 3611, 3612, 4059,
	1404, 4022, 3707, 3572, 3555, 3546, 258, 3443, 3160, 3331,
	3090, 3059, 4770, 3044, 1414, 2889, 2875, 2010, 258, 2675,
	165, 1235, 2327, 2285, 2173, 2873, 1009, 2827, 2828, 2004,
	2076, 1947, 165, 3655, 2150, 5283, 2286, 1546, 3119, 1695,
	1513, 1261, 5023, 2005, 2264, 2283, 2280, 1261, 1668, 1261,
	3160, 3370, 1468, 2034, 1403, 3617, 1677, 2678, 1496, 5282,
	260, 2820, 2283, 1386, 5279, 1978, 5257, 5241, 5114, 5008,
	5002, 3617, 260, 2023, 1509, 1510, 1511, 1261, 3656, 1261,
	5000, 1261, 3627, 3623, 3624, 3625, 4821, 2863, 4776, 1668,
	3622, 3620, 3621, 3613, 3614, 3615, 3616, 3618, 3619, 2107,
	170, 1496, 4874, 1981, 1982, 4755, 2106, 2107, 4591, 2036,
	2034, 2989, 259, 1468, 2106, 4547, 210, 1758, 1403, 4546,
	258, 1654, 4540, 4539, 259, 4538, 258, 2012, 252, 2068,
	1700, 2066, 1690, 1649, 1668, 1984, 2110, 253, 4531, 2005,
	252, 1668, 4530, 4528, 2105, 3633, 196, 196, 4523, 253,
	1261, 4520, 1261, 205, 4519, 4416, 4402, 1668, 209, 4392,
	4254, 1378, 4253, 2034, 2037, 4252, 1261, 208, 1261, 4221,
	2010, 4187, 4186, 1983, 260, 1440, 1443, 1488, 3617, 1003,
	260, 4185, 4107, 4102, 1453, 3702, 3648, 2021, 3627, 1706,
	3639, 4312, 3610, 2069, 1763, 1766, 2005, 1830, 1490, 1995,
	1996, 2002, 2024, 2001, 1997, 2036, 1994, 1992, 1993, 1985,
	1986, 1987, 1988, 1990, 1991, 3607, 2857, 1668, 3606, 258,
	4534, 3604, 3599, 3598, 4533, 3597, 259, 3594, 2821, 3591,
	3571, 1785, 259, 3158, 1641, 3554, 1675, 1261, 4772, 1889,
	1261, 3547, 252, 1811, 3545, 3401, 258, 3045, 252, 3628,
	3099, 253, 937, 2034, 1474, 2074, 1482, 253, 2846, 1978,
	2067, 1363, 2036, 1539, 2527, 1633, 1638, 1202, 2484, 2034,
	2482, 1977, 5489, 260, 1687, 3732, 3369, 5423, 5422, 4322,
	5338, 208, 1380, 5336, 1989, 1527, 1528, 208, 1388, 4133,
	5176, 4417, 5093, 5077, 2036, 3627, 1751, 5073, 1516, 5072,
	260, 5071, 1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990,
	1991, 3611, 3612, 1769, 1519, 1671, 5051, 5050, 1529, 1530,
	5048, 1831, 1701, 5022, 940, 259, 5021, 4994, 2787, 4980,
	1794, 1796, 4977, 3611, 3612, 4976, 258, 4957, 2011, 2013,
	4956, 252, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261,
	253, 4898, 259, 1496, 4869, 3628, 2001, 1997, 3157, 1994,
	1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 252, 4819,
	1792, 4802, 1783, 4801, 3653, 1261, 2034, 253, 4741, 4737,
	208, 1261, 4734, 4707, 2807, 2808, 2809, 2833, 2819, 2813,
	260, 2815, 2816, 2814, 2801, 2802, 2803, 2804, 2805, 2806,
	3157, 2004, 1981, 1982, 4665, 4566, 4545, 208, 1981, 1982,
	1956, 1200, 3622, 3620, 3621, 3613, 3614, 3615, 3616, 3618,
	3619, 4469, 4310, 4309, 1788, 2890, 2012, 4290, 4289, 4287,
	258, 3157, 4202, 4190, 1984, 4097, 4417, 2054, 2793, 2056,
	1984, 4023, 259, 3985, 1905, 3975, 3872, 1836, 3824, 258,
	3791, 3734, 3576, 3575, 3570, 3536, 3345, 3343, 252, 3185,
	2113, 2112, 3628, 2037, 1806, 2111, 2108, 253, 2100, 2098,
	3097, 3096, 1983, 3056, 5025, 3699, 3049, 3015, 1983, 45,
	1825, 2871, 2034, 2003, 260, 2053, 2172, 1261, 1261, 1261,
	2128, 2122, 3617, 1261, 2121, 2120, 2119, 3385, 2118, 2117,
	1384, 2116, 1384, 260, 1952, 3613, 3614, 3615, 3616, 3618,
	3619, 3623, 3624, 3625, 3617, 196, 4771, 1546, 3622, 3620,
	3621, 3613, 3614, 3615, 3616, 3618, 3619, 2115, 2114, 1261,
	2095, 5024, 2195, 1468, 1854, 2094, 259, 2093, 2092, 2091,
	2223, 2195, 1979, 1468, 2090, 2089, 1468, 2088, 1890, 2087,
	2086, 2085, 252, 2084, 1957, 259, 2083, 2082, 2081, 2080,
	2069, 253, 2127, 2055, 2052, 2047, 1481, 1409, 2005, 2136,
	1398, 252, 4744, 2006, 2007, 2008, 2009, 4587, 4516, 4249,
	253, 4214, 1948, 1989, 4205, 3558, 3088, 3047, 1953, 1989,
	4846, 208, 1981, 1982, 4589, 1961, 1960, 1179, 4248, 2068,
	3730, 2050, 1178, 1523, 2183, 2188, 1468, 3611, 3612, 3627,
	208, 4014, 1261, 2168, 1508, 2182, 1955, 3239, 2109, 258,
	1506, 5414, 1523, 2320, 1984, 3622, 3620, 3621, 3613, 3614,
	3615, 3616, 3618, 3619, 2036, 5081, 1261, 2011, 2013, 1974,
	1975, 5074, 4775, 4710, 1546, 2133, 2134, 2157, 1501, 4709,
	1981, 1982, 1200, 4708, 1523, 4664, 1523, 5275, 1523, 3211,
	1523, 4569, 1983, 4476, 4475, 4474, 2888, 2874, 4394, 4473,
	1350, 4472, 2357, 260, 2101, 2102, 2872, 1521, 4471, 2318,
	4470, 2201, 1984, 2405, 4276, 5365, 258, 1507, 2292, 1496,
	2034, 2252, 4209, 5003, 2255, 4208, 2196, 2176, 4025, 1787,
	2004, 4024, 3896, 5001, 2198, 2196, 2178, 3894, 1379, 3893,
	1379, 2246, 5363, 2198, 2177, 5271, 4966, 4420, 2150, 937,
	1983, 1950, 4084, 2291, 2107, 259, 3281, 1501, 937, 4339,
	3596, 2106, 258, 2180, 1985, 1986, 1987, 1988, 1990, 1991,
	260, 252, 2148, 258, 3595, 1788, 2158, 1156, 3518, 3196,
	253, 2155, 4873, 1504, 2288, 2306, 258, 2090, 4305, 2090,
	2312, 2311, 3793, 5043, 1523, 2320, 3965, 1853, 3964, 4270,
	1862, 4271, 2078, 1906, 5044, 2512, 3628, 1501, 3862, 1200,
	208, 2034, 2424, 4960, 5044, 2126, 260, 5304, 2268, 4753,
	3410, 940, 259, 3922, 2167, 1502, 2166, 260, 1157, 4410,
	940, 2165, 2163, 2162, 2152, 2458, 2579, 2161, 252, 4696,
	260, 1863, 2459, 2295, 4391, 1668, 1668, 253, 4345, 4336,
	3827, 4315, 1382, 2202, 1382, 4051, 1546, 3757, 2645, 2294,
	2556, 1989, 2492, 4823, 3660, 4135, 2854, 4893, 259, 3564,
	5280, 2010, 3095, 3982, 4865, 2181, 2123, 208, 2103, 259,
	2520, 4281, 1668, 2404, 252, 1762, 3194, 1682, 2403, 2859,
	3257, 4649, 259, 253, 1477, 252, 3241, 2005, 5295, 4646,
	2411, 1439, 3260, 2290, 253, 5292, 4677, 2528, 252, 4675,
	4004, 1668, 1840, 5066, 3255, 2270, 4759, 253, 2272, 5183,
	2315, 3796, 1819, 208, 2277, 4300, 3382, 3905, 2279, 5366,
	4896, 3442, 2075, 2282, 208, 2469, 2474, 5367, 2400, 4892,
	2409, 1362, 4871, 4078, 5281, 1980, 2419, 208, 3731, 3761,
	4358, 2368, 2414, 2313, 1205, 1498, 1668, 1725, 1668, 2438,
	1668, 4924, 2414, 2036, 4651, 2655, 2414, 1732, 2652, 2332,
	1903, 2333, 3613, 3614, 3615, 3616, 3618, 3619, 1668, 1668,
	1502, 2340, 2341, 3133, 5406, 5345, 2334, 2335, 2860, 2362,
	1154, 1152, 1668, 2338, 2339, 5485, 3615, 3616, 3618, 3619,
	1198, 2374, 1904, 5082, 1668, 1150, 3156, 1668, 1668, 1668,
	1508, 4917, 4997, 4904, 901, 898, 4699, 2638, 2636, 1141,
	3156, 4698, 3154, 4356, 2551, 2366, 4357, 2307, 2653, 995,
	1684, 2195, 4355, 4347, 937, 1204, 3154, 4330, 4329, 1785,
	2397, 2539, 1503, 2539, 2461, 2462, 2540, 2317, 4327, 3323,
	1787, 2516, 4326, 1261, 4314, 4273, 2475, 2412, 2654, 2034,
	1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 2580,
	2463, 1987, 1988, 1990, 1991, 2861, 4666, 2858, 4272, 3911,
	2521, 3910, 1902, 1507, 3864, 2439, 3720, 2316, 3569, 4630,
	2534, 2410, 1261, 3568, 2577, 2396, 3567, 2418, 2393, 3566,
	1197, 1263, 3522, 3279, 1838, 1499, 940, 3278, 3262, 3251,
	1498, 4894, 3243, 2448, 2554, 1500, 2448, 2447, 4866, 2451,
	2447, 4645, 838, 3232, 2584, 3379, 3231, 4623, 1261, 3223,
	1261, 3222, 3221, 2564, 3201, 3200, 2542, 1261, 3161, 4647,
	1261, 3071, 2223, 2223, 1546, 996, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261,
	1261, 1261, 2495, 1261, 4624, 1261, 1261, 1261, 1261, 2571,
	2544, 2489, 1792, 2531, 1792, 2196, 3793, 1503, 4395, 3860,
	2768, 2609, 2203, 2198, 1954, 2523, 3763, 2413, 2904, 2459,
	2512, 1261, 5407, 5346, 2903, 1261, 1261, 2413, 937, 2536,
	1199, 2413, 2695, 1261, 2725, 2570, 2124, 1261, 3089, 1261,
	1261, 1727, 2682, 1200, 1482, 1200, 2548, 1546, 2549, 4597,
	838, 1491, 3170, 1261, 1261, 1261, 1261, 4800, 2863, 1261,
	1261, 1261, 1261, 1261, 1261, 1261, 1261, 993, 1991, 992,
	1499, 1775, 1773, 1774, 1772, 1508, 1736, 1525, 1526, 1425,
	1500, 2779, 895, 3619, 4607, 1261, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 2693, 1261, 2322, 2323, 3104, 1261,
	940, 2835, 2836, 3217, 2588, 3215, 3826, 2599, 2667, 1147,
	1378, 1384, 1378, 2777, 2367, 2835, 2851, 1885, 1546, 1501,
	1885, 1985, 1986, 1987, 1988, 1990, 1991, 1384, 1525, 1526,
	1525, 1526, 1525, 1526, 1525, 1526, 4284, 2854, 1728, 1685,
	2632, 4934, 2899, 1261, 1546, 3075, 2364, 1855, 1507, 4052,
	3198, 3103, 2138, 2664, 1473, 4606, 2783, 2691, 2719, 2510,
	2673, 2945, 2945, 2959, 2707, 2835, 2706, 784, 2979, 2981,
	2718, 2575, 1945, 3173, 1468, 2987, 1901, 1744, 1949, 3140,
	2407, 837, 4648, 2360, 2693, 3417, 196, 2857, 1502, 3861,
	2589, 5366, 2783, 1882, 779, 3083, 2681, 2680, 3076, 2694,
	2687, 2679, 3461, 893, 2799, 1179, 3061, 3226, 1179, 1179,
	2710, 3224, 3533, 2711, 2712, 2850, 4619, 3230, 2365, 3057,
	2206, 1863, 3494, 4620, 1863, 1468, 3611, 3612, 3259, 2666,
	1196, 1380, 1920, 1380, 4625, 3184, 2677, 1884, 2322, 2323,
	1884, 2142, 1306, 2440, 3531, 1833, 1254, 2691, 3032, 2361,
	3760, 3256, 1916, 2643, 2630, 3509, 3024, 1468, 1468, 2590,
	3474, 3127, 1883, 3258, 2593, 1922, 2773, 1698, 2901, 1705,
	2596, 1711, 2157, 2902, 1501, 3254, 2905, 4622, 2906, 2907,
	5418, 2795, 3074, 998, 997, 3611, 3612, 1350, 4945, 5059,
	2774, 5409, 2145, 5441, 4311, 2848, 4626, 2775, 1546, 837,
	1200, 2780, 839, 3227, 3106, 1851, 2587, 3225, 3155, 2168,
	1200, 2140, 1839, 2791, 1200, 3046, 2452, 5277, 1498, 1379,
	2789, 2692, 3082, 4643, 3023, 2961, 1480, 5408, 1959, 3122,
	2143, 2441, 4371, 3183, 2541, 1379, 2689, 2449, 2941, 3102,
	1805, 3844, 1810, 1496, 4064, 2970, 2954, 2223, 2765, 3080,
	3101, 2985, 3013, 3014, 4799, 937, 1824, 937, 1829, 4063,
	3031, 2983, 3036, 899, 899, 3042, 3043, 3029, 3030, 3025,
	1834, 4297, 3835, 3108, 2141, 3125, 2155, 3091, 1149, 3079,
	2450, 3477, 3463, 3130, 4630, 2109, 2376, 899, 899, 2637,
	2635, 2597, 3172, 5316, 4372, 5410, 4124, 3528, 1546, 3974,
	2863, 3508, 2690, 3845, 1200, 1503, 3128, 3617, 937, 3318,
	4935, 2692, 2380, 3675, 1668, 1757, 1041, 5034, 4697, 3766,
	839, 5061, 4623, 4933, 1888, 3162, 4616, 940, 3529, 940,
	4931, 1468, 3534, 1382, 3836, 3314, 3136, 1898, 3098, 3124,
	894, 4621, 4370, 3121, 4614, 2101, 2102, 3197, 4328, 1382,
	2663, 3843, 1261, 1261, 4618, 1261, 3113, 4325, 2347, 3138,
	3116, 4258, 3117, 2348, 1132, 3107, 3617, 2674, 1499, 3131,
	4257, 3319, 2377, 4243, 1755, 3123, 4242, 4056, 1500, 4624,
	940, 3159, 3834, 4930, 4631, 4632, 1468, 3917, 3252, 1192,
	3357, 3354, 2690, 3218, 3909, 1735, 896, 4295, 1424, 1917,
	892, 3139, 3858, 3261, 3220, 5378, 2776, 2144, 5278, 3134,
	3199, 2481, 2480, 4932, 3203, 5412, 2778, 5393, 1668, 3317,
	2368, 5392, 4121, 3137, 3627, 4617, 2665, 3476, 196, 2763,
	1668, 5147, 1668, 2766, 3069, 3147, 2389, 5443, 1668, 5308,
	3501, 3502, 2428, 5353, 2371, 4641, 4498, 2435, 4497, 1668,
	1668, 5416, 4057, 3114, 3918, 4715, 3171, 3188, 3165, 3118,
	3473, 3326, 3229, 4644, 3175, 3178, 3328, 3233, 780, 2863,
	3915, 3202, 4001, 3129, 3470, 1468, 3366, 1468, 3273, 1761,
	1943, 945, 2265, 3627, 2349, 3219, 3280, 1133, 2762, 2381,
	3272, 3315, 3316, 4002, 2366, 2454, 3148, 3149, 2390, 1261,
	3150, 3151, 2353, 3420, 3421, 2034, 2372, 3228, 952, 4122,
	3235, 3393, 3237, 3361, 2425, 3428, 3429, 3430, 5160, 3329,
	3411, 3780, 5276, 3405, 3249, 3209, 3210, 3212, 3213, 3214,
	3216, 3674, 4857, 3242, 937, 3857, 3856, 3530, 4384, 3853,
	3427, 3266, 3267, 5067, 3265, 1757, 2388, 3532, 4382, 1918,
	5089, 1392, 1148, 3524, 2370, 3349, 3415, 2453, 781, 3438,
	2382, 2383, 3324, 3422, 2034, 3423, 3240, 1394, 2429, 1261,
	5417, 3875, 1501, 3408, 3402, 1261, 1261, 2347, 3475, 3146,
	3407, 4001, 2348, 2350, 2355, 3762, 3412, 2378, 2595, 2782,
	1261, 3628, 3418, 2164, 5248, 1389, 5249, 1914, 3446, 836,
	1864, 4619, 3808, 1683, 3156, 3395, 940, 1407, 4620, 3350,
	5419, 3814, 3397, 782, 5060, 783, 1837, 4731, 1132, 4625,
	3176, 4642, 2408, 3444, 2631, 3445, 3479, 3365, 3481, 2096,
	3060, 5411, 5352, 1261, 1261, 2379, 5145, 4386, 4384, 1261,
	3728, 3388, 1395, 1192, 2142, 1138, 1137, 3398, 4382, 4577,
	3628, 2406, 1261, 1261, 1792, 1919, 4578, 3900, 1261, 1261,
	3396, 3437, 4622, 3807, 1261, 2592, 2425, 3435, 3816, 3377,
	2449, 1396, 4385, 2351, 4795, 1915, 3452, 4494, 3454, 2358,
	3456, 4626, 2863, 3451, 5146, 3453, 1921, 3455, 1835, 3457,
	3458, 4812, 2721, 2722, 1134, 2145, 3324, 1033, 5331, 5376,
	2764, 2790, 3450, 2349, 2385, 1850, 1852, 2586, 5332, 1261,
	1261, 1261, 3467, 2450, 3026, 1261, 1393, 5194, 2425, 4576,
	3916, 2353, 3820, 2138, 1034, 1261, 1479, 2358, 1958, 3525,
	1042, 4678, 3482, 2143, 5439, 3484, 805, 4386, 3815, 2845,
	2046, 1133, 1261, 1018, 3574, 4296, 3781, 3028, 4400, 946,
	947, 5444, 3041, 1199, 3500, 3620, 3621, 3613, 3614, 3615,
	3616, 3618, 3619, 4137, 5111, 5425, 4743, 4483, 5104, 2384,
	1023, 4380, 4385, 2367, 3491, 2421, 3489, 4702, 4586, 3490,
	4244, 1378, 1413, 1411, 3818, 4499, 3552, 3553, 5384, 2356,
	3495, 3556, 5314, 2707, 4080, 2706, 3492, 1378, 3510, 5200,
	1869, 5127, 2350, 2355, 4979, 2420, 2432, 4701, 3548, 4700,
	3517, 4925, 2142, 1969, 4441, 3621, 3613, 3614, 3615, 3616,
	3618, 3619, 3989, 4794, 3743, 5096, 4621, 3068, 2506, 1135,
	2135, 1410, 3819, 1401, 1261, 1261, 1261, 1261, 3236, 5097,
	771, 4415, 2416, 1261, 1261, 1261, 1968, 2642, 1261, 5309,
	4543, 4495, 5351, 2386, 4732, 3523, 2709, 2369, 1136, 4383,
	1261, 1384, 1546, 2145, 2308, 5428, 5383, 5315, 2430, 4631,
	4632, 4891, 2266, 3712, 5098, 4176, 4840, 2365, 2347, 3903,
	1968, 4988, 2140, 2348, 3904, 3787, 1261, 5449, 1261, 3667,
	3668, 5041, 2351, 1963, 3557, 2305, 4442, 1384, 4351, 1138,
	1137, 2143, 1380, 949, 948, 4331, 4282, 4280, 2417, 3990,
	2144, 3980, 3783, 5112, 3367, 1546, 2431, 1140, 1380, 3360,
	3347, 2535, 2529, 2522, 3650, 2514, 2491, 1384, 2352, 2488,
	1546, 2699, 4973, 3276, 4120, 1200, 1729, 1139, 3177, 4266,
	3563, 2345, 1468, 3019, 5100, 2141, 2358, 1416, 1134, 4191,
	3205, 5166, 845, 1390, 1210, 4081, 3160, 2223, 1968, 4383,
	1967, 1546, 3669, 5130, 2644, 1035, 1036, 2301, 5319, 5099,
	3679, 1468, 4444, 5330, 4796, 950, 951, 2303, 4764, 3344,
	1468, 4952, 1427, 3022, 3745, 4500, 3701, 4950, 5101, 4868,
	3799, 3795, 3692, 3794, 1967, 3515, 2576, 3493, 4204, 3672,
	4238, 3671, 1261, 2343, 2349, 1892, 1891, 2568, 2356, 2557,
	4390, 1019, 1020, 1391, 1261, 2486, 1886, 3067, 3066, 1767,
	5385, 3065, 2353, 5317, 2304, 2357, 3021, 3064, 3683, 3706,
	3063, 3020, 1468, 1219, 1969, 1768, 3782, 5460, 2223, 1781,
	1748, 1197, 3677, 1779, 2331, 1040, 5427, 5054, 4411, 4038,
	4880, 2344, 4722, 3181, 3925, 1261, 4288, 2533, 3645, 3646,
	3647, 2357, 4954, 4036, 3714, 3715, 3716, 3717, 1969, 1379,
	4544, 1468, 1967, 4029, 3705, 3832, 3661, 1496, 2144, 4501,
	2445, 3751, 2700, 1135, 4177, 3758, 2046, 3204, 3678, 5373,
	3719, 3710, 1468, 3690, 1468, 4178, 3847, 3764, 3849, 3693,
	3694, 3691, 4277, 2350, 2355, 1379, 884, 3698, 1750, 4855,
	3676, 2625, 1136, 4876, 1261, 1261, 5448, 4853, 2424, 3738,
	3441, 3863, 1546, 3770, 3771, 2424, 3798, 5113, 3322, 3803,
	4053, 3684, 3805, 1468, 4048, 1379, 937, 3886, 3206, 3207,
	3742, 4953, 3784, 3741, 885, 3797, 4972, 2352, 3801, 5386,
	1468, 3723, 5318, 4267, 3898, 3722, 3416, 3876, 3724, 3696,
	3829, 3697, 4040, 4881, 3735, 3736, 3327, 3737, 3325, 2561,
	2458, 1140, 1870, 1843, 2394, 5172, 5055, 1037, 1038, 2399,
	4601, 4031, 4863, 1382, 3682, 3689, 4875, 3811, 4600, 5180,
	5163, 1139, 4550, 2351, 3833, 1468, 1668, 4030, 1668, 4193,
	3891, 2870, 1546, 3752, 3748, 1940, 4843, 3854, 940, 931,
	1668, 1668, 4245, 5202, 3945, 5377, 3901, 3759, 1942, 1382,
	1939, 2217, 3688, 1021, 1022, 3878, 1937, 3880, 3848, 3767,
	3884, 3713, 5375, 4864, 3890, 1468, 4937, 3902, 1910, 3981,
	5297, 2659, 2634, 1908, 4038, 2368, 5085, 2358, 5075, 1382,
	4851, 4818, 3873, 1384, 2401, 4039, 4599, 3997, 4036, 2330,
	3995, 844, 4594, 5102, 3817, 1880, 4542, 4389, 4029, 5103,
	3831, 5173, 5056, 1668, 3825, 1878, 1876, 4278, 1874, 1872,
	1866, 196, 196, 3642, 3970, 1668, 3920, 1668, 3923, 3838,
	4096, 3846, 4049, 3842, 2443, 4046, 4027, 3859, 3747, 1780,
	2395, 3749, 3750, 1778, 3768, 1039, 3753, 3865, 3754, 2356,
	3755, 1860, 1858, 3979, 3643, 3950, 3739, 3868, 1777, 3605,
	3535, 3988, 3874, 3348, 3887, 3250, 3244, 3195, 4006, 3100,
	2672, 2668, 3885, 2578, 2567, 4017, 2552, 2254, 3685, 3686,
	3687, 3895, 3942, 3919, 1546, 3229, 3907, 1546, 2175, 3897,
	4075, 3899, 3769, 2601, 2171, 3405, 3839, 4040, 1944, 1818,
	3840, 4054, 3841, 4074, 3405, 4066, 2467, 1963, 3465, 3464,
	3425, 2688, 1897, 932, 2604, 2487, 4031, 2253, 3906, 2251,
	2079, 933, 1261, 3877, 4044, 3991, 1832, 1346, 3908, 1261,
	1261, 5269, 4030, 1261, 1261, 1261, 937, 1261, 3927, 3203,
	2869, 2181, 3973, 4679, 4042, 4338, 1261, 2223, 3998, 4337,
	4047, 3977, 3976, 4683, 3971, 1261, 4661, 1941, 3912, 1938,
	1261, 4245, 5162, 4762, 4688, 1936, 1546, 4037, 4032, 4033,
	4034, 4035, 4674, 2661, 2633, 1261, 5349, 1909, 4003, 4073,
	2660, 4045, 1907, 1546, 4612, 3996, 4611, 4012, 2352, 4005,
	4039, 4440, 4430, 2223, 2223, 1261, 1261, 4354, 1261, 1261,
	1261, 1379, 4333, 4072, 1879, 4015, 4016, 4303, 940, 4041,
	4301, 4279, 4757, 3035, 1877, 1875, 1261, 1873, 1871, 1865,
	1261, 3984, 2223, 2223, 1261, 1261, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261, 1261,
	1261, 1261, 1261, 1261, 897, 1261, 4082, 4099, 3978, 3966,
	1859, 1857, 3380, 1261, 1261, 2223, 4149, 1776, 4150, 4067,
	1261, 3372, 3364, 4109, 4110, 4060, 3356, 4061, 3341, 4062,
	3339, 1261, 3320, 1200, 3120, 196, 3115, 2485, 2391, 4070,
	2483, 2460, 1384, 1384, 4189, 2600, 1261, 4079, 4076, 2406,
	2426, 4077, 2220, 2387, 2373, 1190, 2211, 1132, 2466, 2359,
	2287, 2284, 2281, 2278, 2273, 2271, 2408, 2267, 2258, 4117,
	3994, 5344, 3888, 5253, 1359, 1382, 2187, 2435, 1546, 3513,
	5367, 1972, 1192, 2309, 900, 4223, 2297, 2298, 5053, 3485,
	3486, 1468, 1468, 3483, 2671, 3313, 4188, 4106, 4104, 5235,
	2402, 1360, 5121, 4777, 4695, 2405, 4598, 4116, 3406, 3765,
	1468, 1468, 2326, 928, 2195, 1468, 1734, 4123, 4125, 4126,
	4132, 3156, 4037, 4032, 4033, 4034, 4035, 4139, 4990, 3156,
	3182, 1378, 1191, 4983, 1261, 1721, 4227, 3154, 4127, 4452,
	2368, 4239, 4147, 4210, 2669, 3179, 4148, 1448, 2398, 1934,
	1935, 2591, 4152, 2532, 4195, 4180, 4154, 1447, 2628, 2623,
	5234, 4146, 1261, 2598, 4041, 4652, 4690, 1378, 3277, 1191,
	1856, 5010, 1981, 1982, 4878, 1981, 1982, 1151, 1153, 873,
	1133, 4551, 3514, 3186, 4529, 4181, 2407, 4200, 4201, 3812,
	3187, 3208, 2670, 4228, 1976, 1261, 1261, 1378, 3889, 1973,
	3332, 1475, 1415, 3335, 1984, 3337, 1518, 5361, 4350, 4197,
	4198, 5305, 3338, 1515, 4427, 289, 2296, 2515, 3187, 1361,
	1486, 4229, 3257, 4226, 3255, 3264, 5381, 1027, 3246, 3189,
	1913, 5171, 4237, 4349, 5152, 1261, 1261, 5119, 4235, 4240,
	4241, 5115, 1983, 1261, 1448, 1983, 5052, 3248, 1448, 4283,
	1379, 1379, 1380, 4974, 4213, 4212, 890, 3384, 4255, 4256,
	3384, 3247, 4971, 4263, 1668, 1668, 4856, 1668, 768, 4790,
	4438, 4316, 1269, 3191, 4236, 2404, 1668, 4429, 2196, 4232,
	2403, 1468, 876, 876, 4259, 4368, 2198, 3190, 1380, 4414,
	4220, 3983, 3387, 2217, 2217, 3353, 3340, 3729, 2986, 2293,
	2204, 937, 4251, 5413, 4233, 4363, 3945, 2223, 4877, 3234,
	4320, 1681, 1680, 1674, 1193, 3725, 2445, 5447, 1380, 4346,
	1692, 2223, 3611, 3612, 296, 296, 296, 4352, 774, 775,
	5117, 791, 774, 791, 803, 4321, 4323, 843, 1138, 1137,
	4521, 863, 2865, 3459, 4340, 1261, 870, 870, 870, 870,
	3903, 4308, 1981, 1982, 4426, 3904, 4313, 4362, 296, 2337,
	3142, 4247, 3903, 3468, 1382, 1382, 1668, 3904, 4373, 4374,
	2336, 3141, 1261, 940, 2900, 4445, 5380, 2337, 3790, 1014,
	1384, 1261, 3203, 4454, 5138, 4407, 296, 1134, 1692, 1668,
	2336, 4397, 4399, 5312, 1668, 1668, 1668, 1842, 1691, 4388,
	5432, 4437, 1692, 1841, 4369, 4975, 4422, 1912, 4376, 4918,
	1911, 4421, 4378, 4692, 4687, 4387, 4686, 1668, 4579, 1668,
	4575, 4574, 4517, 4491, 1668, 4359, 1546, 4246, 4128, 3882,
	3879, 3273, 3471, 4264, 3942, 2073, 2072, 4265, 4366, 3488,
	4449, 2676, 4230, 4446, 5394, 5239, 5156, 4377, 5155, 5154,
	4231, 5084, 1673, 4461, 4413, 5083, 5029, 1546, 5026, 4948,
	1261, 1261, 4908, 4847, 4465, 4409, 1261, 1261, 2223, 4448,
	4398, 1261, 1261, 4396, 1261, 4432, 4842, 4434, 3393, 1261,
	4367, 4841, 4839, 4838, 4428, 4836, 4302, 4739, 4304, 4714,
	1261, 3405, 4650, 4588, 4573, 4572, 4464, 4458, 4401, 4299,
	4291, 3987, 4425, 3986, 3804, 4234, 1261, 4479, 3746, 3472,
	3462, 4477, 3434, 4431, 4485, 3433, 4480, 3432, 3431, 3371,
	3342, 3180, 1135, 1378, 3111, 774, 774, 4447, 3093, 4450,
	3092, 2794, 4455, 296, 2662, 4456, 2629, 4478, 2622, 2621,
	4502, 2620, 4462, 2619, 4463, 2618, 2530, 2501, 2500, 1189,
	4515, 1136, 2499, 2498, 2497, 2496, 2261, 2260, 2259, 2257,
	2186, 2185, 1933, 1932, 1867, 4353, 1743, 1384, 4511, 1742,
	1741, 1740, 196, 4481, 1739, 1384, 1738, 1737, 4488, 1546,
	1546, 4548, 1546, 1733, 1731, 1730, 1658, 4503, 1379, 1384,
	1657, 1656, 1535, 4496, 1534, 1533, 1532, 1531, 1478, 1434,
	1668, 1668, 1433, 1432, 1431, 1430, 1429, 1428, 1426, 1421,
	1140, 1420, 1419, 1418, 1417, 1341, 2299, 1155, 1146, 5058,
	4629, 1546, 4628, 4627, 2220, 2220, 2658, 4487, 2211, 2211,
	1139, 2509, 104, 1726, 98, 2433, 4298, 5306, 4490, 5426,
	5456, 2493, 5211, 5205, 1380, 5204, 5090, 1261, 3934, 3932,
	3931, 5311, 4944, 4564, 962, 4789, 1108, 5201, 1384, 5088,
	1384, 1716, 4581, 4582, 977, 5182, 3806, 4541, 3282, 2603,
	1868, 4968, 2605, 3700, 3048, 5144, 4525, 3573, 5017, 4811,
	2868, 2077, 3654, 100, 1245, 1468, 1291, 4730, 2217, 4660,
	4729, 4613, 4285, 3953, 4726, 1546, 4725, 1468, 2208, 2210,
	1468, 4669, 1382, 1209, 4672, 1549, 2992, 2994, 5247, 4559,
	4561, 2310, 4552, 4555, 5438, 1261, 2319, 3094, 1546, 2944,
	4557, 4639, 1268, 4558, 4553, 4554, 1265, 2212, 2214, 1267,
	4605, 4565, 1266, 4584, 4585, 4568, 3705, 2213, 4580, 2097,
	1264, 2207, 4602, 4603, 4436, 3972, 3391, 2206, 4592, 4593,
	4013, 4556, 4596, 4654, 1786, 1784, 1110, 4610, 2788, 4608,
	1668, 1668, 2852, 4595, 3945, 1261, 1261, 2223, 3562, 2223,
	2070, 4653, 1225, 1247, 2849, 1379, 1408, 1236, 2059, 3680,
	3659, 4000, 2064, 1379, 4604, 4219, 2698, 987, 3608, 2855,
	1397, 2967, 2960, 2721, 4140, 2956, 3756, 1379, 1468, 3381,
	1951, 4825, 4747, 2048, 3392, 4636, 4694, 4636, 1512, 4655,
	1229, 1546, 1378, 1378, 4676, 2786, 1668, 2061, 3540, 2708,
	4670, 4007, 2721, 4155, 4691, 4765, 4693, 3703, 3087, 5228,
	4712, 4136, 3469, 2505, 1358, 1357, 4673, 1406, 1356, 4640,
	5188, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 4685, 5185,
	2423, 4713, 4719, 4705, 4720, 4184, 4733, 3948, 4656, 4657,
	3949, 2302, 4711, 3135, 2798, 1546, 1379, 4748, 1379, 3967,
	1241, 3447, 3448, 1652, 4723, 2649, 4068, 1261, 1261, 1261,
	1544, 4704, 3665, 4659, 4751, 4412, 4754, 4703, 1745, 1382,
	4885, 1253, 3942, 4766, 2033, 1546, 4668, 1382, 4716, 4671,
	1261, 4728, 4724, 1261, 1261, 4736, 3309, 3308, 4742, 3821,
	3822, 1382, 3823, 1261, 4740, 4769, 2223, 5047, 4735, 4797,
	1497, 1261, 1261, 4750, 1495, 1494, 4774, 1493, 5403, 3275,
	4767, 2436, 4782, 1380, 1380, 4294, 4786, 4293, 1546, 2473,
	1668, 4760, 4292, 257, 3507, 1970, 1962, 4788, 254, 256,
	255, 4780, 3810, 4224, 3709, 1844, 5303, 4779, 4803, 4318,
	3924, 27, 877, 878, 879, 1468, 3869, 3870, 3145, 3871,
	2329, 1514, 4269, 4791, 26, 25, 24, 23, 127, 48,
	1382, 4798, 1382, 29, 28, 5, 22, 1546, 169, 167,
	4808, 144, 164, 163, 136, 1261, 162, 4834, 161, 4835,
	160, 159, 158, 166, 157, 156, 151, 155, 1261, 154,
	153, 152, 150, 148, 149, 143, 4820, 1261, 147, 2220,
	146, 145, 2223, 2211, 4814, 142, 141, 4862, 140, 139,
	138, 137, 1261, 4831, 4832, 1261, 135, 168, 134, 133,
	211, 132, 131, 130, 129, 128, 856, 857, 67, 1399,
	66, 1261, 124, 125, 1261, 21, 46, 16, 71, 72,
	791, 1546, 4859, 20, 4860, 15, 41, 4888, 103, 1468,
	116, 115, 114, 4927, 791, 292, 42, 111, 40, 1668,
	1668, 1668, 4861, 19, 18, 1423, 17, 109, 108, 4858,
	107, 39, 37, 13, 2357, 4867, 11, 296, 43, 296,
	296, 2159, 1452, 296, 1462, 1384, 14, 7, 201, 200,
	203, 199, 202, 4850, 102, 1476, 198, 197, 4907, 101,
	4936, 35, 12, 863, 192, 4964, 863, 4419, 93, 4923,
	195, 194, 193, 1546, 191, 190, 1668, 4947, 189, 94,
	91, 4951, 188, 97, 96, 4984, 4963, 4905, 187, 870,
	1378, 92, 95, 33, 8, 4910, 4920, 70, 9, 4792,
	4050, 3790, 119, 120, 44, 89, 4955, 88, 87, 86,
	4941, 4942, 1261, 1261, 4909, 32, 69, 31, 296, 184,
	296, 296, 1452, 4938, 296, 296, 4939, 4967, 4943, 1261,
	2223, 4949, 4928, 1462, 235, 234, 233, 232, 231, 230,
	229, 228, 4970, 223, 227, 225, 224, 296, 4987, 1694,
	4993, 3950, 4995, 4985, 226, 1468, 1468, 222, 2539, 1468,
	1468, 4969, 1468, 1468, 4911, 1714, 4912, 4962, 248, 247,
	246, 4986, 245, 244, 1723, 238, 237, 243, 4992, 4991,
	1261, 4769, 1261, 4913, 1261, 242, 241, 240, 5006, 5007,
	239, 1747, 4636, 1462, 1384, 236, 251, 5042, 296, 296,
	4998, 1452, 5005, 4981, 82, 221, 220, 1261, 4926, 1384,
	219, 1380, 217, 5040, 213, 216, 218, 215, 214, 212,
	250, 249, 863, 5009, 296, 296, 4958, 83, 182, 183,
	5015, 81, 181, 180, 179, 178, 1812, 177, 176, 175,
	80, 186, 185, 30, 2, 1, 0, 1820, 2206, 0,
	0, 0, 1014, 1379, 0, 2223, 0, 0, 5039, 5038,
	4989, 0, 0, 0, 0, 0, 0, 1384, 1384, 0,
	5070, 0, 5069, 0, 0, 0, 5035, 1378, 4899, 4900,
	5063, 5094, 5062, 0, 5118, 1378, 0, 0, 1384, 0,
	5092, 1384, 0, 0, 0, 1668, 0, 0, 0, 1378,
	2174, 0, 0, 5027, 5028, 1668, 0, 5030, 5031, 5078,
	5032, 5033, 0, 5080, 4919, 0, 4921, 0, 4922, 0,
	0, 1261, 1261, 0, 0, 0, 0, 0, 5107, 5108,
	5086, 1261, 0, 296, 0, 0, 0, 0, 2217, 5105,
	5091, 4636, 0, 0, 0, 0, 0, 0, 4967, 5124,
	5116, 0, 5126, 0, 0, 0, 4636, 0, 5123, 296,
	0, 0, 0, 0, 2703, 0, 0, 1382, 1378, 5132,
	1378, 5135, 5131, 0, 5137, 5136, 0, 5139, 0, 0,
	5134, 0, 0, 0, 1261, 1261, 0, 5149, 1261, 5157,
	5158, 5153, 1668, 1468, 5179, 0, 1468, 5148, 1380, 0,
	0, 0, 1379, 0, 0, 0, 1380, 0, 5161, 0,
	0, 0, 0, 0, 4636, 4636, 0, 1379, 0, 2217,
	1380, 0, 5187, 5190, 0, 0, 5231, 2328, 5227, 5169,
	5170, 0, 0, 5178, 5203, 4636, 5177, 0, 4636, 0,
	0, 0, 0, 0, 0, 0, 0, 3537, 3538, 5252,
	0, 5250, 0, 0, 0, 5196, 1261, 1261, 1261, 0,
	5191, 0, 0, 0, 5195, 5159, 0, 0, 5192, 0,
	0, 0, 0, 0, 0, 1379, 1379, 0, 0, 0,
	0, 5236, 5197, 0, 0, 0, 0, 0, 5240, 1380,
	5140, 1380, 5141, 5243, 1261, 0, 1379, 5251, 0, 1379,
	5284, 0, 0, 5230, 5289, 0, 0, 0, 0, 0,
	5264, 5265, 2962, 5267, 5266, 0, 1382, 0, 0, 1668,
	2792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1382, 0, 0, 5286, 0, 2059, 0, 0, 0,
	0, 5198, 0, 0, 5199, 0, 0, 5329, 5079, 2357,
	0, 0, 5328, 0, 0, 0, 5327, 0, 5310, 5302,
	5300, 774, 5335, 0, 0, 0, 0, 0, 5341, 5337,
	0, 1261, 0, 5287, 5320, 5321, 0, 2318, 2318, 1468,
	0, 0, 296, 0, 296, 5334, 0, 5350, 296, 1382,
	1382, 1673, 4947, 0, 5333, 2217, 5313, 0, 1673, 5360,
	5368, 1694, 1452, 1462, 296, 5342, 296, 2184, 5343, 2478,
	1382, 0, 0, 1382, 296, 0, 791, 0, 5371, 5359,
	1261, 5364, 5362, 296, 5356, 5357, 0, 0, 5347, 3635,
	3636, 3637, 3638, 5370, 5372, 0, 5374, 0, 0, 0,
	2262, 5389, 5187, 4433, 0, 5190, 0, 1384, 0, 1384,
	5379, 5399, 296, 5390, 5387, 0, 0, 0, 5391, 296,
	5397, 0, 0, 0, 5388, 5285, 0, 0, 0, 2220,
	5396, 0, 0, 2211, 0, 0, 0, 5395, 0, 0,
	5405, 0, 0, 0, 0, 0, 0, 0, 1468, 0,
	0, 0, 863, 0, 0, 0, 2206, 0, 0, 0,
	0, 5420, 0, 0, 5430, 5421, 0, 5431, 5398, 4482,
	5400, 5434, 0, 0, 0, 0, 0, 0, 5429, 0,
	5442, 0, 0, 0, 1261, 1261, 0, 5358, 5436, 0,
	870, 5433, 870, 1261, 1261, 0, 5230, 0, 5440, 0,
	5445, 0, 870, 870, 5454, 5461, 0, 5450, 196, 0,
	2220, 0, 5466, 5470, 2211, 5465, 5459, 6, 5471, 5462,
	5468, 5463, 5467, 5464, 5469, 10, 0, 5458, 0, 0,
	0, 0, 0, 0, 5474, 0, 0, 0, 5476, 1468,
	5477, 5479, 0, 5480, 0, 5484, 5482, 5481, 2217, 0,
	5478, 0, 5487, 0, 4636, 0, 4636, 1661, 0, 0,
	1261, 0, 4897, 0, 5491, 0, 5493, 5484, 5488, 5451,
	5452, 5495, 0, 0, 0, 1378, 5490, 0, 3393, 0,
	0, 5299, 0, 0, 5301, 0, 0, 0, 0, 0,
	5404, 0, 0, 0, 2217, 2217, 5424, 0, 1719, 298,
	0, 0, 0, 0, 0, 0, 1457, 0, 0, 0,
	0, 3393, 0, 0, 0, 1379, 0, 1379, 0, 0,
	0, 0, 0, 2217, 2217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 296, 2217, 2724, 0, 296,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 0, 2220, 1653, 1457, 0,
	2211, 0, 0, 0, 0, 0, 1380, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 0, 0, 0, 1378, 0, 1845, 0, 296, 1382,
	2206, 1382, 0, 0, 0, 296, 0, 0, 0, 1378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2866, 296, 0, 296, 0, 0, 0, 774, 0, 296,
	0, 1457, 1457, 4681, 0, 0, 0, 0, 0, 0,
	0, 863, 0, 0, 0, 1014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1378, 1378, 0,
	0, 0, 0, 0, 0, 0, 0, 1452, 296, 5453,
	1223, 0, 0, 0, 0, 0, 0, 0, 1378, 0,
	0, 1378, 0, 863, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 4738, 0, 0, 0, 2602, 0,
	0, 0, 0, 296, 296, 1380, 296, 3058, 296, 4749,
	296, 0, 296, 3497, 0, 0, 0, 0, 0, 0,
	1380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4773, 0, 0, 0, 2639, 0, 2220,
	2640, 0, 2641, 2211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 296, 296,
	296, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1380, 1380,
	0, 0, 0, 0, 0, 2220, 2220, 843, 0, 2211,
	2211, 863, 1673, 0, 904, 0, 2962, 2962, 0, 1380,
	0, 0, 1380, 0, 0, 0, 0, 2217, 2217, 4092,
	4093, 84, 0, 0, 2220, 2220, 0, 0, 2211, 2211,
	915, 0, 2217, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 917, 0, 0, 0, 0, 0, 2220, 90, 0,
	0, 2211, 0, 0, 3611, 3612, 0, 3629, 3630, 3631,
	0, 3144, 0, 0, 0, 916, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1673, 1673, 4101, 0, 4854,
	0, 0, 0, 0, 0, 0, 2800, 0, 0, 0,
	99, 0, 0, 0, 0, 0, 0, 0, 0, 4156,
	4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166,
	4167, 4168, 4169, 4170, 4171, 4172, 4173, 4174, 4175, 909,
	4179, 0, 0, 0, 0, 0, 925, 0, 0, 0,
	0, 0, 1008, 0, 0, 3626, 0, 0, 0, 0,
	0, 914, 0, 0, 0, 55, 0, 121, 0, 0,
	0, 0, 0, 105, 118, 0, 0, 0, 774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2217,
	0, 0, 0, 296, 0, 0, 0, 0, 2962, 2962,
	2962, 2962, 774, 0, 0, 0, 0, 0, 0, 296,
	0, 774, 0, 0, 0, 913, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 838, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 296, 1462, 0, 0, 0, 0, 1653,
	296, 0, 296, 1694, 0, 3617, 0, 1378, 0, 1378,
	911, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 1673, 1673,
	1673, 0, 0, 0, 3611, 3612, 0, 3629, 3630, 3631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 1462, 1653, 296, 791, 0, 791, 0, 0, 0,
	0, 3110, 0, 0, 0, 0, 0, 296, 0, 0,
	296, 0, 0, 924, 296, 0, 296, 0, 0, 3633,
	0, 1452, 0, 296, 296, 0, 1462, 1462, 3126, 0,
	0, 0, 0, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2220, 2220,
	0, 0, 2211, 2211, 0, 3626, 0, 0, 0, 0,
	0, 0, 3627, 2220, 0, 0, 0, 2211, 1380, 0,
	1380, 0, 0, 0, 0, 0, 0, 870, 870, 0,
	0, 870, 870, 0, 0, 0, 0, 0, 110, 0,
	3169, 0, 0, 0, 0, 0, 906, 0, 0, 0,
	0, 0, 296, 0, 0, 5076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 3611,
	3612, 0, 3629, 3630, 3631, 0, 0, 0, 0, 910,
	296, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 4100, 2034, 0, 0, 863, 204, 0, 113,
	0, 0, 117, 0, 0, 3617, 0, 0, 0, 0,
	2513, 5120, 0, 0, 5122, 0, 0, 0, 0, 296,
	0, 837, 0, 0, 0, 2217, 0, 0, 2217, 0,
	2217, 0, 258, 3270, 1694, 0, 0, 920, 0, 0,
	1009, 0, 0, 0, 908, 0, 165, 0, 0, 0,
	3626, 0, 3611, 3612, 0, 3629, 3630, 3631, 0, 2550,
	2220, 0, 0, 0, 2211, 0, 0, 0, 0, 296,
	3330, 0, 0, 0, 0, 0, 0, 2563, 2565, 3628,
	1223, 1223, 1223, 0, 0, 0, 260, 0, 0, 0,
	0, 2569, 0, 0, 0, 0, 0, 905, 0, 1694,
	0, 0, 296, 918, 0, 3270, 2581, 2582, 2583, 0,
	0, 0, 0, 296, 170, 0, 0, 0, 0, 0,
	0, 2494, 3627, 0, 3376, 0, 1630, 912, 0, 0,
	210, 0, 0, 3626, 3169, 0, 774, 0, 259, 0,
	0, 0, 839, 0, 0, 1014, 3169, 0, 0, 0,
	3617, 2519, 0, 907, 252, 5237, 0, 0, 0, 5238,
	0, 0, 0, 253, 0, 0, 0, 205, 296, 0,
	0, 0, 209, 0, 0, 0, 0, 2217, 0, 922,
	923, 0, 919, 0, 0, 0, 0, 0, 296, 1452,
	296, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	3449, 296, 0, 2034, 1452, 0, 1452, 0, 1452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3633, 0, 0, 0, 0, 0,
	0, 0, 0, 3617, 0, 3623, 3624, 3625, 0, 0,
	0, 0, 3622, 3620, 3621, 3613, 3614, 3615, 3616, 3618,
	3619, 0, 0, 0, 0, 0, 296, 296, 296, 296,
	1452, 0, 0, 1452, 0, 0, 296, 3627, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	3634, 0, 0, 2217, 0, 3666, 0, 0, 0, 3628,
	0, 0, 0, 0, 0, 0, 0, 0, 2962, 2962,
	0, 0, 296, 0, 0, 0, 0, 3633, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2650, 2651, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	3627, 0, 0, 3708, 0, 0, 2220, 0, 0, 2220,
	2211, 2220, 0, 2211, 0, 2211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 1673, 0,
	0, 0, 0, 0, 3733, 0, 0, 0, 2962, 2962,
	2962, 2962, 2962, 2962, 2962, 2962, 2962, 2962, 2962, 2962,
	2962, 2962, 2962, 2962, 2962, 2962, 2962, 2962, 0, 2962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2034, 0, 0, 3628, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 3623, 3624, 3625, 0, 0,
	0, 2217, 3622, 3620, 3621, 3613, 3614, 3615, 3616, 3618,
	3619, 0, 0, 0, 0, 0, 0, 1673, 1673, 1673,
	1673, 1673, 1673, 1673, 1673, 1673, 1673, 1673, 1673, 1673,
	1673, 1673, 1673, 1673, 1673, 1673, 1673, 0, 1673, 0,
	0, 1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 2220, 1981,
	1982, 0, 2211, 0, 0, 2012, 0, 3628, 0, 0,
	0, 0, 0, 1984, 0, 0, 3611, 3612, 0, 3629,
	3630, 3631, 0, 2012, 2031, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 2003, 0, 0, 0, 2217, 0, 0, 1983,
	0, 2000, 0, 296, 0, 0, 1457, 0, 4817, 0,
	3623, 3624, 3625, 0, 0, 0, 0, 3622, 3620, 3621,
	3613, 3614, 3615, 3616, 3618, 3619, 1630, 3626, 0, 0,
	0, 0, 0, 0, 2220, 0, 0, 0, 2211, 296,
	0, 0, 0, 0, 774, 3708, 0, 0, 0, 774,
	0, 0, 774, 0, 0, 774, 774, 0, 0, 0,
	0, 774, 0, 1457, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 2006, 2007, 2008, 2009, 0, 0, 0, 0,
	4870, 296, 1989, 3623, 3624, 3625, 1457, 1457, 0, 0,
	3622, 3620, 3621, 3613, 3614, 3615, 3616, 3618, 3619, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3274, 0, 0, 0, 3617, 296, 0,
	0, 0, 296, 296, 0, 2022, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 1223, 2011, 2013, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 2013, 3169, 3169, 296, 0,
	3776, 3779, 174, 0, 0, 1998, 1999, 3169, 0, 2184,
	0, 84, 0, 52, 51, 0, 0, 4069, 3169, 2184,
	1544, 3169, 2184, 0, 2020, 2184, 0, 0, 3776, 0,
	85, 3633, 2220, 1639, 78, 0, 2211, 0, 0, 2004,
	296, 296, 3779, 0, 296, 0, 0, 0, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 2004, 0, 73,
	0, 0, 0, 3779, 0, 296, 54, 3852, 172, 3852,
	0, 0, 1653, 0, 3627, 1452, 0, 3419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 3426, 0,
	99, 0, 0, 0, 0, 0, 0, 0, 3169, 4113,
	3169, 0, 3883, 3169, 3779, 0, 0, 3169, 0, 0,
	0, 0, 0, 0, 5014, 0, 4129, 0, 56, 74,
	2034, 3779, 0, 0, 863, 0, 0, 57, 0, 0,
	0, 0, 63, 0, 0, 0, 0, 79, 2034, 0,
	0, 0, 0, 0, 0, 55, 0, 121, 0, 0,
	0, 0, 0, 105, 118, 2034, 1452, 2220, 0, 0,
	0, 2211, 75, 296, 0, 1630, 0, 5046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 296, 0, 0, 3930, 0, 0, 3946, 3169, 0,
	0, 296, 5068, 0, 0, 0, 0, 0, 58, 1462,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 106,
	3376, 0, 0, 1452, 2005, 296, 0, 0, 3169, 0,
	774, 0, 0, 0, 0, 0, 2023, 3169, 0, 0,
	0, 3628, 0, 1653, 0, 0, 1981, 1982, 0, 0,
	0, 4222, 0, 0, 1457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2012, 0, 2036, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 4058, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 0, 0, 0, 2037, 0, 4065,
	1653, 0, 1653, 1694, 0, 0, 1983, 1452, 296, 0,
	296, 0, 0, 0, 0, 0, 1452, 0, 0, 1452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2021, 0, 0, 0, 0, 0, 0, 5207, 296, 0,
	0, 0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994,
	1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 110, 0,
	0, 0, 0, 0, 5212, 0, 0, 0, 1992, 1993,
	1985, 1986, 1987, 1988, 1990, 1991, 59, 3623, 3624, 3625,
	0, 0, 0, 0, 3622, 3620, 3621, 3613, 3614, 3615,
	3616, 3618, 3619, 62, 0, 0, 0, 4134, 65, 0,
	0, 0, 0, 0, 0, 5222, 0, 1989, 77, 0,
	0, 0, 0, 0, 0, 0, 64, 204, 0, 113,
	0, 0, 117, 0, 0, 0, 0, 0, 60, 1223,
	0, 0, 173, 1630, 0, 0, 0, 0, 0, 0,
	61, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	68, 2011, 2013, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 5218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 774,
	774, 0, 0, 0, 2004, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 170, 5215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2962, 0, 0,
	210, 0, 0, 174, 0, 0, 0, 0, 259, 0,
	0, 0, 84, 0, 52, 51, 296, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 5208,
	0, 85, 0, 253, 0, 0, 0, 205, 5220, 0,
	0, 0, 209, 0, 0, 0, 0, 1630, 0, 90,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	73, 0, 0, 208, 0, 0, 3, 54, 0, 172,
	0, 0, 2137, 1630, 0, 0, 1673, 0, 0, 2962,
	0, 0, 0, 0, 0, 0, 0, 0, 53, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 863,
	0, 0, 0, 0, 5221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	74, 0, 0, 0, 0, 0, 4332, 0, 57, 4334,
	4335, 0, 0, 63, 0, 0, 3852, 0, 5457, 5226,
	0, 2005, 0, 0, 0, 0, 55, 0, 121, 0,
	0, 296, 0, 0, 105, 118, 0, 0, 1673, 0,
	0, 0, 0, 75, 0, 3270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3779, 0, 296, 4563, 0, 0, 791, 791,
	1462, 0, 0, 0, 0, 1653, 1653, 0, 0, 58,
	0, 0, 0, 0, 0, 0, 0, 2036, 0, 0,
	0, 0, 5213, 0, 0, 0, 2017, 0, 0, 0,
	106, 0, 0, 5223, 4590, 0, 84, 1630, 0, 296,
	3376, 0, 0, 3376, 2184, 0, 0, 0, 5219, 296,
	0, 0, 0, 0, 0, 85, 4424, 5225, 3270, 0,
	0, 296, 0, 0, 0, 296, 0, 296, 0, 0,
	0, 0, 296, 90, 0, 0, 0, 0, 0, 5216,
	0, 0, 0, 2962, 1653, 0, 5214, 0, 0, 3928,
	3929, 3169, 296, 1208, 5224, 0, 0, 0, 0, 0,
	0, 0, 0, 1014, 3169, 0, 0, 0, 2519, 0,
	0, 76, 0, 0, 0, 99, 1993, 1985, 1986, 1987,
	1988, 1990, 1991, 0, 0, 0, 5209, 0, 0, 0,
	0, 84, 0, 0, 0, 296, 2962, 1630, 0, 3779,
	0, 0, 3126, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 4019, 0, 0, 0, 0, 1008, 0, 0,
	0, 2962, 1673, 0, 4043, 0, 5217, 0, 90, 0,
	5210, 0, 121, 0, 0, 0, 0, 0, 105, 118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	99, 0, 0, 0, 0, 1673, 4526, 0, 0, 0,
	0, 0, 0, 0, 62, 0, 0, 0, 0, 65,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	1673, 0, 0, 0, 106, 0, 0, 64, 204, 0,
	113, 0, 1008, 117, 0, 5309, 0, 0, 1457, 60,
	0, 3300, 0, 173, 0, 55, 0, 121, 0, 1246,
	123, 61, 0, 105, 118, 0, 0, 0, 1544, 296,
	0, 0, 0, 258, 0, 1694, 0, 296, 0, 2017,
	0, 68, 0, 0, 0, 3290, 3288, 165, 0, 0,
	0, 296, 0, 3292, 3294, 3284, 0, 0, 4809, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1462, 1462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 106,
	1462, 1462, 0, 296, 1462, 0, 0, 3310, 0, 0,
	0, 4809, 0, 0, 0, 3169, 3169, 0, 3776, 0,
	0, 3852, 3169, 1653, 0, 170, 0, 0, 0, 0,
	4638, 0, 4638, 1694, 0, 123, 0, 0, 0, 0,
	0, 210, 3084, 0, 3169, 0, 2184, 0, 0, 259,
	3776, 0, 1694, 1694, 296, 3779, 0, 0, 0, 0,
	2724, 0, 0, 110, 0, 252, 0, 0, 3779, 0,
	296, 3779, 0, 296, 253, 0, 3852, 0, 205, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 3169, 0, 3169,
	296, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 204, 0, 113, 0, 1180, 117, 0, 0,
	0, 0, 0, 0, 2724, 0, 0, 2017, 1201, 0,
	0, 0, 0, 0, 0, 0, 0, 3169, 3169, 0,
	0, 0, 0, 3376, 3376, 0, 0, 258, 110, 3286,
	3776, 0, 0, 0, 0, 1009, 0, 0, 0, 0,
	3302, 165, 0, 296, 2017, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 296, 0, 2017, 0, 0, 0,
	1368, 0, 0, 0, 3301, 3291, 3289, 3293, 3295, 3285,
	3287, 3303, 3305, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 3297, 3299, 3307, 0, 0, 204, 0, 113,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3311,
	0, 0, 258, 0, 0, 210, 0, 0, 0, 0,
	1009, 0, 0, 259, 0, 84, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 2017, 0, 0, 85, 0, 2017, 0, 253, 0,
	0, 0, 205, 0, 0, 0, 0, 209, 0, 0,
	2017, 0, 90, 4360, 4361, 2017, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 4364, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 3169, 2184, 0, 2184, 259, 0,
	4424, 1630, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 2017, 0, 3304, 252, 0, 1471, 2017, 0, 4886,
	0, 4886, 0, 253, 0, 0, 1008, 205, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 55,
	0, 121, 0, 1208, 1208, 1208, 863, 105, 118, 0,
	0, 0, 0, 1797, 1630, 0, 0, 3852, 1694, 0,
	1694, 1452, 0, 0, 1457, 0, 0, 0, 4460, 1630,
	0, 0, 0, 2563, 4466, 4467, 0, 0, 0, 0,
	3779, 0, 296, 0, 0, 0, 0, 3312, 0, 0,
	0, 0, 0, 1643, 0, 0, 3296, 3298, 3306, 1659,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 4424, 0, 0, 4638, 0, 0,
	1694, 0, 0, 0, 3169, 0, 0, 0, 296, 1696,
	0, 1702, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 1223, 4978, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 1694, 0, 2017, 2017, 2017, 2017,
	2017, 2017, 2017, 2017, 2519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 296, 296, 0, 0, 0, 0, 0, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 1808, 0, 4134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2966, 0, 0, 3852, 5037,
	0, 0, 0, 0, 0, 0, 4424, 0, 0, 2017,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 4638, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 0, 0, 0, 4570,
	4571, 4638, 0, 0, 0, 0, 0, 0, 0, 1893,
	0, 0, 1899, 0, 0, 0, 0, 1981, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	791, 2012, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 204, 0, 113, 0, 0, 117, 0, 0, 4638,
	4638, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	4638, 0, 296, 4638, 0, 0, 258, 1983, 0, 0,
	0, 0, 0, 2184, 1009, 0, 0, 0, 2003, 0,
	165, 0, 0, 0, 1694, 0, 1694, 2000, 0, 0,
	0, 0, 0, 0, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1462, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 5167, 0, 2071, 0, 0, 0, 0, 0, 2563,
	0, 0, 0, 0, 0, 4095, 1457, 4886, 170, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 2006, 2007,
	2008, 2009, 259, 0, 0, 0, 3169, 0, 1989, 0,
	0, 0, 0, 1630, 0, 0, 1630, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 205, 0, 0, 0, 0, 209, 0, 0, 0,
	296, 0, 0, 0, 0, 0, 2519, 123, 0, 123,
	4781, 123, 4783, 4784, 4785, 0, 4787, 1795, 0, 0,
	0, 0, 2011, 2013, 4134, 0, 0, 0, 0, 2131,
	2131, 2131, 0, 1457, 0, 0, 0, 0, 2937, 2938,
	2939, 2940, 2933, 2934, 2935, 2936, 0, 0, 0, 1694,
	0, 1998, 1999, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 1201, 123, 123, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 123, 0, 0, 2004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 5322, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2913, 2914, 2915,
	2916, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4424, 0, 0, 0, 0, 0, 0, 0,
	0, 2925, 2926, 2927, 2928, 2921, 2922, 2923, 2924, 2929,
	2930, 2931, 2932, 0, 123, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3169,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 4638,
	0, 4638, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 0, 0, 0,
	0, 0, 0, 0, 2017, 2909, 2910, 2911, 2912, 2917,
	2918, 2919, 2920, 0, 0, 0, 0, 0, 4940, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1180, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3169, 0, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3270, 0,
	0, 0, 0, 0, 2057, 2017, 0, 0, 2063, 2017,
	0, 0, 0, 0, 3169, 0, 0, 0, 2036, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 3270, 0,
	0, 0, 0, 0, 2017, 2017, 2017, 2017, 2017, 2017,
	2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
	2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
	2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
	0, 0, 0, 0, 0, 2017, 0, 2017, 2017, 2017,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 2966,
	2966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2017, 0, 0, 0, 0, 0,
	0, 0, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986,
	1987, 1988, 1990, 1991, 0, 0, 0, 0, 0, 2151,
	0, 2154, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 2017, 0,
	0, 2017, 0, 0, 2017, 0, 0, 0, 0, 0,
	2017, 2017, 2017, 2017, 2017, 2017, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 1982, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2626, 2017, 0, 0, 3632,
	2012, 2966, 2966, 2966, 2966, 0, 0, 2017, 1984, 2017,
	0, 0, 0, 0, 2017, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1457, 0, 0, 0, 2656, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	2697, 0, 2701, 0, 0, 0, 0, 0, 0, 2715,
	0, 0, 1208, 0, 0, 0, 0, 0, 2726, 2727,
	2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 4090, 2767, 0, 2769, 2770, 2771,
	2772, 0, 0, 0, 0, 0, 0, 0, 1630, 1630,
	0, 1630, 0, 0, 0, 0, 0, 2006, 2007, 2008,
	2009, 0, 0, 2796, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 2058, 0, 0, 0, 2847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 2877, 2880, 2883, 2886, 0,
	0, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 0, 0,
	0, 0, 0, 0, 0, 0, 1223, 0, 0, 0,
	84, 2011, 2013, 0, 0, 0, 0, 0, 0, 2958,
	0, 2969, 2971, 2976, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 1999, 0, 0, 0, 0, 0, 90, 0, 1981,
	1982, 0, 0, 0, 1630, 2025, 2026, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2012, 2004, 0, 0, 1630, 0, 0,
	0, 1984, 0, 0, 0, 1201, 0, 1201, 0, 99,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2003, 1008, 0, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 0, 105, 118, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 2017, 2017, 0, 2017, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 0, 0, 106, 0,
	2006, 2007, 2008, 2009, 1630, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 1180, 0, 0, 1180, 1180, 0, 0, 0, 0,
	0, 0, 0, 2022, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 2011, 2013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 2017, 0,
	0, 0, 0, 0, 0, 0, 0, 2036, 0, 0,
	0, 0, 0, 1998, 1999, 0, 0, 0, 0, 0,
	0, 0, 2785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1201, 0, 0, 0, 1630, 2004, 0, 0,
	0, 0, 2057, 0, 0, 0, 2057, 0, 2017, 2017,
	0, 2966, 2966, 0, 0, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3632, 3632, 110, 0, 2017,
	2017, 0, 0, 0, 3333, 3334, 0, 3336, 0, 2017,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 2001, 1997, 2017, 1994, 1992, 1993, 1985, 1986, 1987,
	1988, 1990, 1991, 0, 0, 2017, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	1368, 0, 0, 0, 0, 0, 204, 0, 113, 0,
	0, 117, 0, 0, 0, 0, 2154, 0, 0, 0,
	0, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966,
	2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966,
	2966, 258, 2966, 3632, 3632, 3632, 3632, 0, 0, 1009,
	0, 0, 0, 0, 0, 165, 0, 0, 2010, 0,
	0, 0, 1630, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2017, 0,
	0, 1385, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 3460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 205, 2038, 2039, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 3520, 3521, 0, 0, 0,
	0, 3527, 0, 2024, 2001, 1997, 0, 1994, 1992, 1993,
	1985, 1986, 1987, 1988, 1990, 1991, 0, 0, 0, 0,
	3541, 3542, 0, 0, 1257, 0, 2847, 0, 0, 0,
	0, 0, 0, 0, 2017, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3551, 0, 0, 0, 0, 295, 295, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 3565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 0, 123, 3577, 123, 0, 0, 0, 0,
	938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	123, 0, 0, 0, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2976, 2976, 2976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	3670, 0, 0, 0, 0, 2017, 2017, 0, 0, 2017,
	3632, 3632, 2017, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1381, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2017,
	2017, 2017, 2017, 2017, 0, 0, 0, 0, 0, 2017,
	0, 2017, 0, 0, 3632, 3632, 3632, 3632, 3632, 3632,
	3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632,
	3632, 3632, 3632, 3632, 0, 0, 0, 3632, 0, 0,
	2017, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 1208, 0, 0, 0, 0, 0,
	0, 2017, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3866, 3867, 0, 0,
	0, 1981, 1982, 0, 0, 2017, 0, 1385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 0, 0, 2012, 0, 0, 0, 2017,
	2017, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1385,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2003, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 4089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 2006, 2007, 2008, 2009, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 1385, 0, 0,
	0, 0, 2017, 2017, 0, 0, 0, 2017, 2017, 0,
	0, 2017, 2017, 0, 0, 0, 2017, 0, 0, 0,
	2017, 0, 0, 0, 0, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2966, 0, 0, 0, 0, 0, 2011, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2715, 1998, 1999, 0, 0, 0,
	0, 4087, 4088, 0, 0, 4091, 0, 0, 0, 4094,
	0, 0, 0, 0, 0, 0, 0, 0, 4098, 0,
	0, 0, 0, 0, 0, 0, 0, 4105, 0, 2004,
	0, 0, 3670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2966, 0, 0, 0, 0, 4118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	123, 0, 123, 0, 0, 0, 0, 4141, 4142, 0,
	4143, 4144, 4145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4151, 0,
	0, 0, 4153, 0, 0, 0, 0, 0, 0, 295,
	2017, 295, 295, 0, 0, 295, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 123, 123, 0, 123,
	0, 0, 0, 0, 0, 4182, 4183, 0, 0, 0,
	0, 0, 0, 0, 0, 2017, 2017, 0, 0, 0,
	0, 0, 0, 4194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 295, 295, 0, 0, 295, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	1385, 0, 1385, 0, 0, 0, 0, 0, 0, 938,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 0,
	0, 0, 2017, 2017, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 2017, 3632, 2966, 0, 0, 0,
	2224, 0, 2017, 0, 0, 2017, 4268, 0, 0, 0,
	0, 0, 1368, 0, 0, 1201, 0, 0, 0, 0,
	295, 295, 2036, 0, 0, 0, 0, 0, 0, 123,
	123, 0, 0, 0, 4286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 295, 3632, 2966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 4317, 0,
	0, 0, 0, 2017, 2966, 0, 0, 0, 0, 0,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 4341, 4342, 823,
	0, 0, 0, 0, 0, 0, 2001, 1997, 0, 1994,
	1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 0,
	806, 0, 0, 0, 0, 807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 808, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 809,
	0, 0, 3632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 0, 0, 2131, 0, 0,
	0, 0, 0, 2017, 3632, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2131, 0, 3632, 0, 0, 0,
	0, 0, 0, 4457, 0, 0, 811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1385, 1385, 0, 0, 0,
	0, 812, 0, 123, 0, 0, 1385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1368, 1368, 0, 0, 813, 0, 0, 0, 0,
	814, 0, 1385, 1981, 1982, 0, 2014, 2015, 2016, 2025,
	2026, 2027, 0, 0, 0, 0, 0, 838, 0, 0,
	0, 0, 4504, 4505, 0, 0, 2018, 2012, 4509, 4510,
	0, 1385, 0, 4513, 4514, 1984, 0, 0, 0, 0,
	0, 4518, 0, 0, 0, 828, 2031, 0, 0, 0,
	0, 0, 4522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 4527, 0,
	0, 0, 0, 1983, 0, 0, 1385, 0, 1385, 0,
	1385, 0, 0, 0, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 2000, 2153, 0, 1381, 0, 1385, 1385,
	295, 0, 0, 0, 0, 0, 0, 0, 825, 0,
	0, 0, 1385, 0, 0, 0, 295, 2153, 295, 0,
	0, 0, 0, 0, 1385, 0, 938, 1385, 1385, 1385,
	0, 2017, 0, 0, 0, 938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 2006, 2007, 2008, 2009, 0, 0,
	0, 0, 0, 0, 1989, 835, 0, 816, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 836, 0,
	817, 0, 0, 0, 0, 0, 0, 2022, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 2011, 2013,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	2029, 0, 2224, 2224, 1385, 0, 837, 1998, 1999, 0,
	0, 0, 0, 0, 818, 0, 0, 4682, 0, 833,
	834, 0, 831, 0, 0, 0, 2020, 0, 0, 826,
	0, 0, 819, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4717, 4718, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	820, 0, 827, 0, 0, 0, 0, 0, 0, 0,
	2030, 821, 0, 0, 0, 0, 0, 1385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 822, 0, 123,
	0, 2019, 830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 0, 0, 0, 0, 839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 824, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	0, 938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 4804,
	4805, 4806, 2010, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 2715, 0, 0, 4815, 4816, 0, 2005, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 4824, 4827, 0, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 0,
	0, 0, 0, 295, 0, 295, 0, 0, 0, 0,
	123, 295, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4887, 0, 0, 0, 0, 0, 0, 0, 0, 4895,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4903, 938, 295, 1208, 295, 0,
	295, 0, 295, 0, 295, 0, 0, 0, 1385, 0,
	0, 0, 2021, 4914, 0, 0, 4916, 0, 0, 0,
	0, 0, 0, 0, 1995, 1996, 2002, 2024, 2001, 1997,
	0, 1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991,
	0, 0, 0, 0, 0, 5168, 0, 0, 0, 295,
	295, 295, 295, 295, 0, 0, 0, 2224, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 2993, 0, 0, 0, 0, 0, 0, 1981, 1982,
	0, 2014, 2015, 2016, 2025, 2026, 2027, 0, 0, 0,
	0, 0, 5045, 0, 0, 0, 5049, 0, 0, 0,
	0, 2018, 2012, 0, 0, 0, 2991, 0, 0, 0,
	1984, 2995, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	1385, 0, 1385, 2996, 0, 0, 0, 0, 1385, 2037,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 1385,
	1385, 0, 0, 0, 0, 1381, 0, 0, 0, 2003,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 1381, 0, 0, 2997, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2998, 0, 295, 0, 0, 0, 123,
	0, 0, 938, 0, 938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2715, 0, 0, 0, 0, 0,
	0, 0, 2999, 4827, 0, 0, 0, 0, 0, 2006,
	2007, 2008, 2009, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 295, 0, 0, 938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	0, 0, 295, 0, 0, 0, 295, 0, 295, 0,
	0, 0, 0, 0, 0, 295, 295, 1208, 0, 0,
	0, 0, 2022, 0, 3000, 295, 2032, 0, 0, 0,
	0, 0, 0, 2011, 2013, 0, 0, 0, 0, 0,
	0, 0, 3001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3002, 2028, 0, 2029, 0, 0, 0, 0,
	0, 0, 1998, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3003, 0, 0,
	0, 2020, 0, 0, 0, 0, 0, 0, 5263, 5263,
	5263, 0, 0, 0, 295, 0, 2004, 0, 0, 0,
	0, 0, 0, 0, 0, 2785, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 5288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 0, 0, 2019, 960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 3004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 963, 0,
	0, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5263, 0, 0, 0, 0, 0, 0,
	0, 938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 965, 2010, 979, 0,
	0, 0, 0, 0, 295, 123, 0, 0, 0, 0,
	3005, 3006, 5382, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 2005, 966, 0, 0, 0, 0, 967,
	0, 0, 0, 0, 0, 0, 0, 3007, 0, 0,
	0, 1385, 1385, 0, 0, 0, 0, 3012, 1981, 1982,
	0, 0, 988, 2023, 0, 0, 0, 0, 0, 968,
	0, 123, 0, 0, 123, 0, 0, 0, 3008, 0,
	295, 0, 2012, 0, 986, 0, 0, 1385, 0, 0,
	1984, 0, 0, 3009, 0, 0, 0, 0, 0, 2036,
	295, 0, 295, 0, 0, 1385, 0, 0, 0, 961,
	959, 0, 0, 295, 0, 0, 0, 1385, 0, 2037,
	1385, 0, 0, 0, 0, 3010, 5263, 5446, 1983, 0,
	0, 0, 0, 969, 0, 0, 0, 0, 0, 2003,
	0, 0, 0, 0, 0, 0, 0, 2224, 2000, 0,
	990, 1385, 0, 0, 0, 838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3011, 0, 0, 295, 295,
	295, 295, 0, 0, 0, 0, 0, 2021, 295, 0,
	0, 0, 0, 295, 0, 0, 0, 0, 0, 1995,
	1996, 2002, 2024, 2001, 1997, 0, 1994, 1992, 1993, 1985,
	1986, 1987, 1988, 1990, 1991, 0, 3526, 0, 0, 0,
	0, 0, 0, 0, 295, 123, 0, 0, 0, 123,
	0, 0, 295, 0, 0, 0, 0, 0, 2224, 2006,
	2007, 2008, 2009, 0, 0, 0, 989, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 1982, 0, 2014, 2015, 2016,
	2025, 2026, 2027, 2011, 2013, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2018, 2012, 0,
	0, 0, 1385, 0, 983, 0, 1984, 0, 0, 0,
	0, 0, 1998, 1999, 0, 970, 0, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 297,
	297, 297, 0, 0, 1983, 0, 2004, 0, 971, 0,
	0, 0, 0, 0, 0, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 1385, 0, 1385, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 0, 0,
	1385, 1385, 0, 0, 837, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 958, 0, 0,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	972, 0, 0, 0, 0, 0, 0, 2034, 0, 0,
	0, 0, 0, 1385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 2007, 2008, 2009, 978,
	0, 0, 0, 1385, 301, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1385, 0, 1385, 973, 0,
	0, 0, 974, 993, 0, 992, 0, 0, 0, 975,
	0, 0, 0, 0, 0, 1381, 0, 2010, 0, 0,
	0, 0, 0, 0, 0, 976, 0, 0, 2022, 0,
	985, 0, 2032, 0, 0, 0, 994, 0, 991, 2011,
	2013, 0, 0, 2005, 0, 839, 123, 0, 0, 0,
	0, 1381, 0, 0, 1385, 0, 0, 1385, 0, 2028,
	0, 2029, 0, 0, 0, 0, 0, 0, 1998, 1999,
	930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2153, 0, 0, 0, 0, 0, 2020, 0, 0,
	0, 0, 0, 295, 0, 0, 0, 0, 930, 0,
	0, 0, 2004, 938, 0, 0, 0, 0, 0, 2036,
	0, 0, 0, 0, 0, 0, 0, 2224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1385, 0, 0, 0,
	295, 0, 0, 0, 295, 295, 0, 0, 0, 0,
	0, 2030, 0, 1385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2224, 2224, 0, 0, 0, 0, 0,
	0, 0, 2019, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 2034, 0, 0, 0, 0, 0, 0,
	0, 0, 2224, 2224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 1997, 0, 1994, 1992, 1993, 1985,
	1986, 1987, 1988, 1990, 1991, 0, 0, 1981, 1982, 0,
	0, 0, 295, 295, 0, 2224, 295, 0, 0, 0,
	1981, 1982, 0, 2153, 0, 0, 0, 0, 0, 0,
	0, 2012, 0, 2010, 0, 0, 0, 295, 0, 1984,
	0, 0, 1385, 1385, 2012, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 2005,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 1385, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 2003, 2023,
	1983, 0, 0, 0, 0, 0, 0, 2000, 0, 0,
	0, 2003, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2036, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 938, 0, 3519, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 2007,
	2008, 2009, 0, 0, 0, 0, 0, 295, 1989, 0,
	0, 2006, 2007, 2008, 2009, 0, 0, 1381, 0, 0,
	0, 1989, 0, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1995, 1996, 2002, 2024, 2001,
	1997, 0, 1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990,
	1991, 0, 0, 0, 0, 0, 3586, 0, 0, 0,
	3587, 0, 2011, 2013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2011, 2013, 0, 0, 0,
	0, 0, 0, 0, 1385, 1385, 0, 1385, 0, 0,
	0, 1998, 1999, 0, 0, 0, 1385, 0, 0, 0,
	0, 0, 823, 0, 1998, 1999, 0, 0, 0, 0,
	295, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 806, 0, 2004, 0, 2224, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2004, 0,
	0, 2224, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 809, 0, 0, 0, 1385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1385, 0, 0, 0, 810, 0, 2034, 0, 0, 1385,
	0, 0, 0, 0, 1385, 1385, 1385, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 1385,
	0, 0, 0, 0, 1385, 0, 1385, 0, 0, 811,
	0, 0, 297, 0, 297, 297, 0, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 2010, 0, 0, 0,
	0, 0, 0, 0, 812, 0, 0, 1385, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 2224, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 813, 0,
	0, 0, 0, 814, 0, 2005, 1381, 1381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 1550, 297, 297, 0, 0, 297,
	297, 0, 0, 0, 0, 1550, 0, 0, 828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2036, 0,
	0, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 0, 938, 0,
	0, 0, 0, 0, 0, 0, 1550, 1385, 0, 0,
	0, 0, 0, 0, 0, 1385, 0, 0, 0, 1385,
	1385, 0, 1385, 0, 0, 0, 0, 0, 0, 1385,
	0, 825, 0, 297, 297, 0, 0, 0, 0, 0,
	1385, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 0, 0, 1550, 297,
	297, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 0, 2001, 1997, 1550, 1994, 1992, 1993, 1985, 1986,
	1987, 1988, 1990, 1991, 0, 2001, 1997, 0, 1994, 1992,
	1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 1385, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1669, 295, 1550, 1385, 0, 0, 0, 0,
	0, 836, 0, 817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 297, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 837,
	0, 0, 0, 0, 297, 0, 0, 818, 0, 0,
	1385, 1385, 833, 834, 0, 831, 0, 2224, 0, 2224,
	0, 295, 826, 0, 0, 819, 0, 0, 1669, 0,
	0, 295, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 0, 295, 0, 295,
	0, 1669, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 0, 1385, 0, 0, 0,
	0, 0, 0, 820, 1381, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 821, 0, 0, 0, 0, 0,
	0, 1385, 1385, 1385, 1385, 1385, 1385, 1385, 0, 0,
	822, 0, 0, 0, 0, 830, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 1385, 0, 295, 0, 0,
	839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 1385, 0, 0,
	0, 0, 0, 0, 1550, 0, 0, 0, 0, 297,
	297, 297, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 1381, 0, 0, 0, 0, 0, 0, 297, 1381,
	0, 0, 2224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 1385,
	1385, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2153, 0, 2153, 1385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 1385, 0, 0, 1385, 0, 0, 0,
	0, 0, 295, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 2194, 0, 0, 0,
	0, 0, 0, 0, 0, 2194, 0, 0, 0, 0,
	2224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	297, 0, 1550, 1550, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 1385, 1550,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1374, 0, 1385, 0,
	0, 1385, 297, 0, 0, 1385, 0, 0, 1550, 0,
	0, 0, 0, 297, 0, 1385, 0, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 297, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 291, 291,
	770, 0, 0, 1550, 0, 1550, 0, 1550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1550, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1550,
	0, 295, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 1550, 1385, 0, 1550, 1550, 1550, 0, 0, 1669,
	1669, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	1547, 0, 0, 0, 0, 0, 0, 0, 297, 297,
	0, 297, 0, 297, 0, 297, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 297, 297, 297, 297, 297, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1670, 2153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 1669, 0, 1669, 0, 0, 0, 0, 1385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1670,
	0, 1550, 1669, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 295, 295, 0, 0, 1669, 0,
	0, 1669, 1669, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 2194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2153, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 1385,
	0, 0, 0, 2153, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1550, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2153, 2153, 0, 0, 0, 0, 0, 297, 0,
	0, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2153, 0, 295, 2153, 0, 0, 297, 0,
	0, 0, 0, 0, 0, 297, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 297, 0, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 297, 0, 0, 0, 297,
	0, 297, 295, 0, 0, 0, 0, 0, 297, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 2018, 2012, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 1550, 0, 0, 0, 0,
	0, 0, 295, 0, 2031, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 297, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 2003, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 1550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 2007, 2008, 2009, 0, 0, 0, 0,
	0, 0, 1989, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 297, 2032,
	0, 0, 0, 0, 0, 0, 2011, 2013, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 2153, 0, 2153, 0, 1550, 2028, 0, 2029, 0,
	0, 0, 0, 0, 0, 1998, 1999, 1550, 0, 1550,
	0, 1438, 0, 1438, 1438, 1550, 0, 0, 0, 0,
	0, 0, 0, 297, 2020, 0, 1550, 1550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 1547, 297, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 1669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2030, 0,
	0, 0, 1541, 0, 0, 0, 0, 0, 1651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2019,
	0, 297, 297, 297, 297, 0, 0, 0, 0, 0,
	2034, 297, 0, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1670, 1670, 297, 0, 0,
	0, 0, 1669, 0, 0, 297, 1548, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 1669, 0, 0, 0,
	2010, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1670, 1669, 1669, 0, 0, 0, 1801, 1802,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1670, 0, 1670, 0,
	1670, 0, 2036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1670, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 1923, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 1670, 1670, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994,
	1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 0,
	0, 0, 0, 2843, 0, 0, 0, 2844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1550, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1550, 0,
	0, 0, 0, 0, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2169, 297, 0, 0, 0, 297, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2179, 0,
	1651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 1547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 1438, 0, 0, 0,
	0, 0, 0, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 297, 297, 0, 0, 297,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 1547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 0, 1547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1550,
	0, 0, 0, 0, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 0, 0, 1550, 0, 1550, 0, 0, 0, 1550,
	0, 0, 0, 0, 0, 0, 297, 1550, 1550, 0,
	0, 1550, 0, 0, 0, 0, 297, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1550, 0, 1550, 0, 1547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 1550, 0, 297, 1550, 297, 0, 0, 0, 0,
	0, 2503, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 1669, 0, 0, 0, 1547, 0, 0, 2526,
	0, 0, 0, 930, 1669, 1669, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 2538, 0, 2538, 0, 0,
	0, 0, 0, 2545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1669, 1670, 0,
	1550, 0, 2573, 0, 0, 0, 0, 0, 0, 1669,
	1670, 1669, 1670, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 2594, 0, 0, 0, 0, 1670,
	1670, 0, 0, 0, 0, 0, 0, 0, 2610, 0,
	2612, 0, 2614, 0, 2616, 0, 2617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2646, 2647, 2648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1550, 1550, 0, 1550, 0, 0, 0, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 3055, 2194, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 0,
	297, 0, 297, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 3112, 0, 0, 1438, 0, 0, 0, 1438, 0,
	1438, 0, 1548, 0, 0, 0, 1550, 0, 0, 0,
	0, 1550, 1550, 1550, 0, 0, 0, 2526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1550, 0, 1550, 0, 0, 0,
	297, 1550, 0, 1550, 0, 0, 0, 0, 1669, 1669,
	0, 1669, 0, 0, 0, 1548, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 0, 0, 0, 1550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 1669, 1669,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1550, 1550, 0, 1550,
	0, 1669, 0, 1669, 0, 0, 0, 0, 1669, 0,
	1547, 0, 0, 0, 0, 0, 0, 1550, 1550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3352, 0, 1550, 0,
	0, 1547, 0, 0, 0, 0, 0, 2526, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 3424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1550, 0, 0, 297, 0, 0, 297, 0,
	0, 0, 3436, 0, 3439, 1981, 1982, 0, 2014, 2015,
	2016, 2025, 2026, 2027, 0, 1550, 1670, 0, 1670, 0,
	0, 0, 1548, 0, 0, 297, 0, 0, 2018, 2012,
	1670, 1670, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 1547, 1547, 0, 1547, 0, 2031, 0,
	0, 0, 0, 0, 0, 0, 0, 1550, 1550, 0,
	0, 1550, 0, 0, 1669, 1669, 2037, 0, 0, 0,
	3478, 1651, 3480, 1651, 0, 1983, 0, 0, 0, 0,
	3487, 0, 0, 0, 0, 1547, 2003, 0, 0, 0,
	0, 0, 0, 1670, 0, 2000, 0, 0, 297, 0,
	0, 0, 0, 0, 0, 1670, 0, 1670, 1550, 297,
	0, 0, 0, 1550, 0, 0, 1438, 0, 0, 0,
	0, 0, 0, 0, 3516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1550, 1550,
	1550, 1550, 1550, 1550, 1550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1547,
	0, 0, 1550, 0, 1548, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 2007, 2008, 2009,
	0, 0, 1547, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 1550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 1669, 0, 0, 0, 2022,
	0, 0, 0, 2032, 0, 1550, 0, 1550, 0, 0,
	2011, 2013, 0, 0, 0, 0, 1548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 2029, 1548, 0, 0, 0, 0, 0, 1998,
	1999, 0, 0, 0, 0, 1547, 0, 0, 0, 0,
	1669, 0, 0, 0, 1550, 0, 0, 0, 2020, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 1669, 1669, 1669, 1669, 1669,
	1669, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 0, 1550, 1547,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 2019, 0, 0, 1550, 1550, 1550, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 1547, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1550, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 297, 0,
	2005, 0, 0, 0, 0, 3718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1438, 0, 0, 1547, 1651, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 2036, 0, 0, 0,
	0, 0, 0, 1669, 1669, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 1670, 0, 1670, 0, 0,
	0, 0, 297, 0, 0, 0, 1670, 1547, 0, 0,
	1669, 0, 0, 0, 3828, 3830, 0, 0, 2526, 0,
	0, 0, 0, 0, 2021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1995, 1996, 2002, 2024,
	2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987, 1988,
	1990, 1991, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 4532, 1550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1670,
	0, 0, 0, 0, 1670, 1670, 1670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 1670, 0, 1670,
	0, 0, 0, 0, 1670, 0, 1548, 0, 0, 1550,
	0, 0, 0, 0, 0, 3968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 0, 2018, 2012, 0, 0, 0, 0, 1669,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	0, 2003, 4071, 0, 1651, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 1548,
	1548, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	1670, 1670, 4085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 2007, 2008, 2009, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 2022, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 2011, 2013, 0, 1548, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 2029, 0, 0,
	0, 0, 0, 0, 1998, 1999, 0, 0, 0, 1981,
	1982, 0, 2014, 2015, 2016, 2025, 2026, 2027, 0, 0,
	1670, 1670, 0, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 2018, 2012, 0, 0, 0, 0, 2004, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 1548, 0, 0, 0, 0, 1670, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	2003, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	0, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 2019, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	2006, 2007, 2008, 2009, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	1670, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2022, 0, 2023, 0, 2032, 0, 0,
	0, 0, 0, 0, 2011, 2013, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2526, 0,
	0, 0, 0, 0, 2028, 0, 2029, 0, 0, 0,
	0, 2036, 0, 1998, 1999, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4408, 0, 0, 0, 2004, 0, 0,
	0, 0, 0, 4418, 0, 0, 0, 0, 0, 0,
	0, 1548, 0, 0, 0, 0, 0, 0, 0, 2526,
	0, 2526, 0, 0, 0, 0, 4439, 0, 0, 1670,
	1670, 1670, 0, 0, 0, 0, 0, 0, 0, 2021,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994, 1992,
	1993, 1985, 1986, 1987, 1988, 1990, 1991, 2019, 0, 0,
	0, 0, 0, 0, 0, 0, 4103, 0, 2034, 0,
	0, 0, 0, 1548, 0, 0, 1670, 0, 0, 4484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 1982, 0, 2014,
	2015, 2016, 2025, 2026, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2010, 2018,
	2012, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 2007, 2008,
	2009, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 1670, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 1670, 0, 0, 0, 0,
	1995, 1996, 2002, 2024, 2001, 1997, 0, 1994, 1992, 1993,
	1985, 1986, 1987, 1988, 1990, 1991, 0, 0, 0, 0,
	2022, 0, 0, 0, 2032, 3589, 0, 0, 4658, 0,
	0, 2011, 2013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2526, 0, 0, 0, 0, 0,
	0, 2028, 0, 2029, 0, 0, 0, 0, 0, 0,
	1998, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 1981, 1982, 0, 2014,
	2015, 2016, 2025, 2026, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2018,
	2012, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 2030, 0, 0, 0, 2526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 4761, 0,
	0, 0, 0, 0, 2019, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 0, 2006, 2007, 2008,
	2009, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 0, 0, 0, 2032, 0, 0, 2036, 0, 0,
	0, 2011, 2013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4872, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 2029, 0, 0, 0, 0, 0, 0,
	1998, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2526, 1995, 1996, 2002,
	2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987,
	1988, 1990, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3588, 2030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2538, 0, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5004, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5125, 0, 0, 0,
	0, 0, 0, 0, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 1996, 2002,
	2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987,
	1988, 1990, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1545, 0, 0, 0,
	0, 0, 0, 0, 5181, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 308, 307, 309, 310, 311,
	312, 1551, 313, 314, 1552, 1553, 1554, 0, 1555, 714,
	1556, 1557, 1558, 315, 1559, 316, 317, 318, 1324, 319,
	320, 321, 322, 323, 324, 325, 715, 716, 0, 326,
	717, 327, 718, 1560, 719, 328, 329, 330, 331, 332,
	333, 334, 1561, 1562, 5245, 335, 720, 721, 722, 1563,
	336, 337, 723, 1564, 1631, 1565, 338, 339, 340, 341,
	342, 343, 344, 345, 0, 1566, 347, 348, 349, 346,
	350, 1567, 351, 0, 352, 353, 354, 355, 356, 357,
	358, 1568, 359, 360, 361, 1325, 362, 363, 364, 1569,
	1570, 1572, 1571, 1573, 1574, 1575, 365, 366, 367, 368,
	369, 0, 370, 372, 724, 725, 1576, 375, 377, 371,
	373, 1577, 376, 374, 378, 1578, 379, 380, 381, 1579,
	1580, 382, 383, 384, 1581, 385, 386, 387, 1582, 388,
	389, 390, 1583, 391, 392, 726, 393, 394, 395, 397,
	399, 396, 398, 400, 401, 402, 403, 404, 727, 728,
	405, 1584, 302, 1585, 0, 0, 0, 0, 406, 407,
	408, 729, 0, 0, 0, 409, 1586, 410, 411, 412,
	1587, 413, 414, 1588, 1326, 415, 416, 417, 730, 731,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 1589,
	427, 732, 1590, 733, 428, 1591, 429, 430, 431, 432,
	433, 434, 435, 734, 735, 736, 528, 1328, 436, 437,
	438, 1592, 439, 440, 441, 442, 443, 0, 0, 0,
	303, 444, 445, 446, 1593, 1327, 737, 447, 529, 448,
	738, 739, 1594, 740, 1595, 449, 450, 452, 1329, 741,
	1330, 451, 453, 454, 1331, 455, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 1596, 462, 464, 463, 1597,
	466, 742, 465, 1332, 467, 468, 1333, 1598, 469, 470,
	471, 472, 473, 474, 477, 1599, 1600, 475, 476, 478,
	479, 0, 480, 481, 483, 486, 482, 484, 485, 487,
	500, 501, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 503, 0, 502, 1334, 504, 505,
	506, 507, 508, 515, 517, 518, 513, 514, 516, 519,
	520, 522, 510, 511, 512, 1335, 521, 509, 1601, 304,
	1336, 523, 524, 525, 526, 1602, 743, 527, 744, 530,
	531, 1603, 0, 532, 0, 533, 1604, 1605, 535, 536,
	537, 1606, 1607, 538, 539, 745, 1337, 540, 1338, 746,
	541, 542, 534, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 1608, 553, 554, 747, 555, 556, 557,
	748, 558, 559, 560, 749, 561, 750, 562, 563, 1609,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 751, 575, 576, 578, 577, 579, 1610, 580,
	0, 581, 582, 583, 0, 0, 0, 0, 0, 584,
	585, 587, 0, 588, 589, 590, 591, 586, 592, 593,
	594, 595, 596, 597, 1611, 599, 600, 598, 601, 602,
	1339, 603, 604, 605, 606, 607, 752, 608, 0, 609,
	610, 617, 618, 619, 611, 612, 613, 620, 621, 622,
	623, 624, 625, 1612, 627, 628, 626, 629, 630, 631,
	1613, 632, 753, 633, 614, 615, 634, 635, 1340, 636,
	637, 638, 639, 640, 641, 642, 754, 0, 643, 1614,
	644, 645, 646, 647, 648, 649, 651, 616, 652, 657,
	658, 755, 653, 654, 655, 656, 756, 660, 661, 662,
	663, 1615, 664, 665, 0, 659, 650, 1616, 666, 667,
	668, 669, 670, 671, 0, 672, 673, 1617, 674, 757,
	758, 759, 760, 1618, 686, 1619, 675, 677, 678, 679,
	680, 761, 681, 762, 1620, 682, 683, 684, 685, 676,
	687, 688, 1621, 1622, 689, 690, 692, 694, 695, 691,
	693, 696, 1623, 697, 1624, 0, 698, 699, 700, 763,
	764, 765, 1625, 702, 701, 703, 704, 705, 766, 706,
	707, 708, 1626, 1627, 1628, 1629, 709, 710, 767, 711,
	712, 713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1545, 0, 0, 0, 0,
	0, 0, 3033, 0, 0, 0, 0, 0, 0, 0,
	0, 3034, 305, 306, 308, 307, 309, 310, 311, 312,
	1551, 313, 314, 1552, 1553, 1554, 0, 1555, 714, 1556,
	1557, 1558, 315, 1559, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 1560, 719, 328, 329, 330, 331, 332, 333,
	334, 1561, 1562, 0, 335, 720, 721, 722, 1563, 336,
	337, 723, 1564, 1631, 1565, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 1566, 347, 348, 349, 346, 350,
	1567, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	1568, 359, 360, 361, 1325, 362, 363, 364, 1569, 1570,
	1572, 1571, 1573, 1574, 1575, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 1576, 375, 377, 371, 373,
	1577, 376, 374, 378, 1578, 379, 380, 381, 1579, 1580,
	382, 383, 384, 1581, 385, 386, 387, 1582, 388, 389,
	390, 1583, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	1584, 302, 1585, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 1586, 410, 411, 412, 1587,
	413, 414, 1588, 1326, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 1589, 427,
	732, 1590, 733, 428, 1591, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 1328, 436, 437, 438,
	1592, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 1593, 1327, 737, 447, 529, 448, 738,
	739, 1594, 740, 1595, 449, 450, 452, 1329, 741, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 1596, 462, 464, 463, 1597, 466,
	742, 465, 1332, 467, 468, 1333, 1598, 469, 470, 471,
	472, 473, 474, 477, 1599, 1600, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 1601, 304, 1336,
	523, 524, 525, 526, 1602, 743, 527, 744, 530, 531,
	1603, 0, 532, 0, 533, 1604, 1605, 535, 536, 537,
	1606, 1607, 538, 539, 745, 1337, 540, 1338, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 1608, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 1609, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 1610, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 1611, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 1612, 627, 628, 626, 629, 630, 631, 1613,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 1614, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	1615, 664, 665, 0, 659, 650, 1616, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 1617, 674, 757, 758,
	759, 760, 1618, 686, 1619, 675, 677, 678, 679, 680,
	761, 681, 762, 1620, 682, 683, 684, 685, 676, 687,
	688, 1621, 1622, 689, 690, 692, 694, 695, 691, 693,
	696, 1623, 697, 1624, 0, 698, 699, 700, 763, 764,
	765, 1625, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 1626, 1627, 1628, 1629, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 4112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4114, 305, 306,
	308, 307, 309, 310, 311, 312, 1551, 313, 314, 1552,
	1553, 1554, 0, 1555, 714, 1556, 1557, 1558, 315, 1559,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 1560, 719,
	328, 329, 330, 331, 332, 333, 334, 1561, 1562, 0,
	335, 720, 721, 722, 1563, 336, 337, 723, 1564, 1631,
	1565, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	1566, 347, 348, 349, 346, 350, 1567, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 1568, 359, 360, 361,
	1325, 362, 363, 364, 1569, 1570, 1572, 1571, 1573, 1574,
	1575, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 1576, 375, 377, 371, 373, 1577, 376, 374, 378,
	1578, 379, 380, 381, 1579, 1580, 382, 383, 384, 1581,
	385, 386, 387, 1582, 388, 389, 390, 1583, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 1584, 302, 1585, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 1586, 410, 411, 412, 1587, 413, 414, 1588, 1326,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 1589, 427, 732, 1590, 733, 428,
	1591, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 1328, 436, 437, 438, 1592, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 1593,
	1327, 737, 447, 529, 448, 738, 739, 1594, 740, 1595,
	449, 450, 452, 1329, 741, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	1596, 462, 464, 463, 1597, 466, 742, 465, 1332, 467,
	468, 1333, 1598, 469, 470, 471, 472, 473, 474, 477,
	1599, 1600, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 1601, 304, 1336, 523, 524, 525, 526,
	1602, 743, 527, 744, 530, 531, 1603, 0, 532, 0,
	533, 1604, 1605, 535, 536, 537, 1606, 1607, 538, 539,
	745, 1337, 540, 1338, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 1608, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 1609, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 1610, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 1611,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 1612, 627,
	628, 626, 629, 630, 631, 1613, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 1614, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 1615, 664, 665, 0,
	659, 650, 1616, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 1617, 674, 757, 758, 759, 760, 1618, 686,
	1619, 675, 677, 678, 679, 680, 761, 681, 762, 1620,
	682, 683, 684, 685, 676, 687, 688, 1621, 1622, 689,
	690, 692, 694, 695, 691, 693, 696, 1623, 697, 1624,
	0, 698, 699, 700, 763, 764, 765, 1625, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1626, 1627, 1628,
	1629, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4562, 305, 306,
	308, 307, 309, 310, 311, 312, 1551, 313, 314, 1552,
	1553, 1554, 0, 1555, 714, 1556, 1557, 1558, 315, 1559,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 1560, 719,
	328, 329, 330, 331, 332, 333, 334, 1561, 1562, 0,
	335, 720, 721, 722, 1563, 336, 337, 723, 1564, 1631,
	1565, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	1566, 347, 348, 349, 346, 350, 1567, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 1568, 359, 360, 361,
	1325, 362, 363, 364, 1569, 1570, 1572, 1571, 1573, 1574,
	1575, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 1576, 375, 377, 371, 373, 1577, 376, 374, 378,
	1578, 379, 380, 381, 1579, 1580, 382, 383, 384, 1581,
	385, 386, 387, 1582, 388, 389, 390, 1583, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 1584, 302, 1585, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 1586, 410, 411, 412, 1587, 413, 414, 1588, 1326,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 1589, 427, 732, 1590, 733, 428,
	1591, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 1328, 436, 437, 438, 1592, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 1593,
	1327, 737, 447, 529, 448, 738, 739, 1594, 740, 1595,
	449, 450, 452, 1329, 741, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	1596, 462, 464, 463, 1597, 466, 742, 465, 1332, 467,
	468, 1333, 1598, 469, 470, 471, 472, 473, 474, 477,
	1599, 1600, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 1601, 304, 1336, 523, 524, 525, 526,
	1602, 743, 527, 744, 530, 531, 1603, 0, 532, 0,
	533, 1604, 1605, 535, 536, 537, 1606, 1607, 538, 539,
	745, 1337, 540, 1338, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 1608, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 1609, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 1610, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 1611,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 1612, 627,
	628, 626, 629, 630, 631, 1613, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 1614, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 1615, 664, 665, 0,
	659, 650, 1616, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 1617, 674, 757, 758, 759, 760, 1618, 686,
	1619, 675, 677, 678, 679, 680, 761, 681, 762, 1620,
	682, 683, 684, 685, 676, 687, 688, 1621, 1622, 689,
	690, 692, 694, 695, 691, 693, 696, 1623, 697, 1624,
	0, 698, 699, 700, 763, 764, 765, 1625, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1626, 1627, 1628,
	1629, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4560, 305, 306,
	308, 307, 309, 310, 311, 312, 1551, 313, 314, 1552,
	1553, 1554, 0, 1555, 714, 1556, 1557, 1558, 315, 1559,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 1560, 719,
	328, 329, 330, 331, 332, 333, 334, 1561, 1562, 0,
	335, 720, 721, 722, 1563, 336, 337, 723, 1564, 1631,
	1565, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	1566, 347, 348, 349, 346, 350, 1567, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 1568, 359, 360, 361,
	1325, 362, 363, 364, 1569, 1570, 1572, 1571, 1573, 1574,
	1575, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 1576, 375, 377, 371, 373, 1577, 376, 374, 378,
	1578, 379, 380, 381, 1579, 1580, 382, 383, 384, 1581,
	385, 386, 387, 1582, 388, 389, 390, 1583, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 1584, 302, 1585, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 1586, 410, 411, 412, 1587, 413, 414, 1588, 1326,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 1589, 427, 732, 1590, 733, 428,
	1591, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 1328, 436, 437, 438, 1592, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 1593,
	1327, 737, 447, 529, 448, 738, 739, 1594, 740, 1595,
	449, 450, 452, 1329, 741, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	1596, 462, 464, 463, 1597, 466, 742, 465, 1332, 467,
	468, 1333, 1598, 469, 470, 471, 472, 473, 474, 477,
	1599, 1600, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 1601, 304, 1336, 523, 524, 525, 526,
	1602, 743, 527, 744, 530, 531, 1603, 0, 532, 0,
	533, 1604, 1605, 535, 536, 537, 1606, 1607, 538, 539,
	745, 1337, 540, 1338, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 1608, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 1609, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 1610, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 1611,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 1612, 627,
	628, 626, 629, 630, 631, 1613, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 1614, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 1615, 664, 665, 0,
	659, 650, 1616, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 1617, 674, 757, 758, 759, 760, 1618, 686,
	1619, 675, 677, 678, 679, 680, 761, 681, 762, 1620,
	682, 683, 684, 685, 676, 687, 688, 1621, 1622, 689,
	690, 692, 694, 695, 691, 693, 696, 1623, 697, 1624,
	0, 698, 699, 700, 763, 764, 765, 1625, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1626, 1627, 1628,
	1629, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4810, 305, 306, 308, 307, 309, 310, 311, 312,
	1551, 313, 314, 1552, 1553, 1554, 0, 1555, 714, 1556,
	1557, 1558, 315, 1559, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 1560, 719, 328, 329, 330, 331, 332, 333,
	334, 1561, 1562, 0, 335, 720, 721, 722, 1563, 336,
	337, 723, 1564, 1631, 1565, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 1566, 347, 348, 349, 346, 350,
	1567, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	1568, 359, 360, 361, 1325, 362, 363, 364, 1569, 1570,
	1572, 1571, 1573, 1574, 1575, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 1576, 375, 377, 371, 373,
	1577, 376, 374, 378, 1578, 379, 380, 381, 1579, 1580,
	382, 383, 384, 1581, 385, 386, 387, 1582, 388, 389,
	390, 1583, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	1584, 302, 1585, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 1586, 410, 411, 412, 1587,
	413, 414, 1588, 1326, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 1589, 427,
	732, 1590, 733, 428, 1591, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 1328, 436, 437, 438,
	1592, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 1593, 1327, 737, 447, 529, 448, 738,
	739, 1594, 740, 1595, 449, 450, 452, 1329, 741, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 1596, 462, 464, 463, 1597, 466,
	742, 465, 1332, 467, 468, 1333, 1598, 469, 470, 471,
	472, 473, 474, 477, 1599, 1600, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 1601, 304, 1336,
	523, 524, 525, 526, 1602, 743, 527, 744, 530, 531,
	1603, 0, 532, 0, 533, 1604, 1605, 535, 536, 537,
	1606, 1607, 538, 539, 745, 1337, 540, 1338, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 1608, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 1609, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 1610, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 1611, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 1612, 627, 628, 626, 629, 630, 631, 1613,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 1614, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	1615, 664, 665, 0, 659, 650, 1616, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 1617, 674, 757, 758,
	759, 760, 1618, 686, 1619, 675, 677, 678, 679, 680,
	761, 681, 762, 1620, 682, 683, 684, 685, 676, 687,
	688, 1621, 1622, 689, 690, 692, 694, 695, 691, 693,
	696, 1623, 697, 1624, 0, 698, 699, 700, 763, 764,
	765, 1625, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 1626, 1627, 1628, 1629, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4667, 305, 306, 308, 307,
	309, 310, 311, 312, 1551, 313, 314, 1552, 1553, 1554,
	0, 1555, 714, 1556, 1557, 1558, 315, 1559, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 1560, 719, 328, 329,
	330, 331, 332, 333, 334, 1561, 1562, 0, 335, 720,
	721, 722, 1563, 336, 337, 723, 1564, 1631, 1565, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 1566, 347,
	348, 349, 346, 350, 1567, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 1568, 359, 360, 361, 1325, 362,
	363, 364, 1569, 1570, 1572, 1571, 1573, 1574, 1575, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 1576,
	375, 377, 371, 373, 1577, 376, 374, 378, 1578, 379,
	380, 381, 1579, 1580, 382, 383, 384, 1581, 385, 386,
	387, 1582, 388, 389, 390, 1583, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 1584, 302, 1585, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 1586,
	410, 411, 412, 1587, 413, 414, 1588, 1326, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 1589, 427, 732, 1590, 733, 428, 1591, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	1328, 436, 437, 438, 1592, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 1593, 1327, 737,
	447, 529, 448, 738, 739, 1594, 740, 1595, 449, 450,
	452, 1329, 741, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 1596, 462,
	464, 463, 1597, 466, 742, 465, 1332, 467, 468, 1333,
	1598, 469, 470, 471, 472, 473, 474, 477, 1599, 1600,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 1601, 304, 1336, 523, 524, 525, 526, 1602, 743,
	527, 744, 530, 531, 1603, 0, 532, 0, 533, 1604,
	1605, 535, 536, 537, 1606, 1607, 538, 539, 745, 1337,
	540, 1338, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 1608, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 1609, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 1610, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 1611, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 1612, 627, 628, 626,
	629, 630, 631, 1613, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 1614, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 1615, 664, 665, 0, 659, 650,
	1616, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	1617, 674, 757, 758, 759, 760, 1618, 686, 1619, 675,
	677, 678, 679, 680, 761, 681, 762, 1620, 682, 683,
	684, 685, 676, 687, 688, 1621, 1622, 689, 690, 692,
	694, 695, 691, 693, 696, 1623, 697, 1624, 0, 698,
	699, 700, 763, 764, 765, 1625, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 1626, 1627, 1628, 1629, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 1545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4486,
	305, 306, 308, 307, 309, 310, 311, 312, 1551, 313,
	314, 1552, 1553, 1554, 0, 1555, 714, 1556, 1557, 1558,
	315, 1559, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	1560, 719, 328, 329, 330, 331, 332, 333, 334, 1561,
	1562, 0, 335, 720, 721, 722, 1563, 336, 337, 723,
	1564, 1631, 1565, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 1566, 347, 348, 349, 346, 350, 1567, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 1568, 359,
	360, 361, 1325, 362, 363, 364, 1569, 1570, 1572, 1571,
	1573, 1574, 1575, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 1576, 375, 377, 371, 373, 1577, 376,
	374, 378, 1578, 379, 380, 381, 1579, 1580, 382, 383,
	384, 1581, 385, 386, 387, 1582, 388, 389, 390, 1583,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 1584, 302,
	1585, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 1586, 410, 411, 412, 1587, 413, 414,
	1588, 1326, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 1589, 427, 732, 1590,
	733, 428, 1591, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 1328, 436, 437, 438, 1592, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 1593, 1327, 737, 447, 529, 448, 738, 739, 1594,
	740, 1595, 449, 450, 452, 1329, 741, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 1596, 462, 464, 463, 1597, 466, 742, 465,
	1332, 467, 468, 1333, 1598, 469, 470, 471, 472, 473,
	474, 477, 1599, 1600, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 1601, 304, 1336, 523, 524,
	525, 526, 1602, 743, 527, 744, 530, 531, 1603, 0,
	532, 0, 533, 1604, 1605, 535, 536, 537, 1606, 1607,
	538, 539, 745, 1337, 540, 1338, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	1608, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 1609, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 1610, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 1611, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	1612, 627, 628, 626, 629, 630, 631, 1613, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 1614, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 1615, 664,
	665, 0, 659, 650, 1616, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 1617, 674, 757, 758, 759, 760,
	1618, 686, 1619, 675, 677, 678, 679, 680, 761, 681,
	762, 1620, 682, 683, 684, 685, 676, 687, 688, 1621,
	1622, 689, 690, 692, 694, 695, 691, 693, 696, 1623,
	697, 1624, 0, 698, 699, 700, 763, 764, 765, 1625,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 1626,
	1627, 1628, 1629, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4130, 305, 306, 308, 307, 309, 310,
	311, 312, 1551, 313, 314, 1552, 1553, 1554, 0, 1555,
	714, 1556, 1557, 1558, 315, 1559, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 1560, 719, 328, 329, 330, 331,
	332, 333, 334, 1561, 1562, 0, 335, 720, 721, 722,
	1563, 336, 337, 723, 1564, 1631, 1565, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 1566, 347, 348, 349,
	346, 350, 1567, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 1568, 359, 360, 361, 1325, 362, 363, 364,
	1569, 1570, 1572, 1571, 1573, 1574, 1575, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 1576, 375, 377,
	371, 373, 1577, 376, 374, 378, 1578, 379, 380, 381,
	1579, 1580, 382, 383, 384, 1581, 385, 386, 387, 1582,
	388, 389, 390, 1583, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 1584, 302, 1585, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 1586, 410, 411,
	412, 1587, 413, 414, 1588, 1326, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	1589, 427, 732, 1590, 733, 428, 1591, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 1328, 436,
	437, 438, 1592, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 1593, 1327, 737, 447, 529,
	448, 738, 739, 1594, 740, 1595, 449, 450, 452, 1329,
	741, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 1596, 462, 464, 463,
	1597, 466, 742, 465, 1332, 467, 468, 1333, 1598, 469,
	470, 471, 472, 473, 474, 477, 1599, 1600, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 1601,
	304, 1336, 523, 524, 525, 526, 1602, 743, 527, 744,
	530, 531, 1603, 0, 532, 0, 533, 1604, 1605, 535,
	536, 537, 1606, 1607, 538, 539, 745, 1337, 540, 1338,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 1608, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	1609, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 1610,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 1611, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 1612, 627, 628, 626, 629, 630,
	631, 1613, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	1614, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 1615, 664, 665, 0, 659, 650, 1616, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 1617, 674,
	757, 758, 759, 760, 1618, 686, 1619, 675, 677, 678,
	679, 680, 761, 681, 762, 1620, 682, 683, 684, 685,
	676, 687, 688, 1621, 1622, 689, 690, 692, 694, 695,
	691, 693, 696, 1623, 697, 1624, 0, 698, 699, 700,
	763, 764, 765, 1625, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 1626, 1627, 1628, 1629, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3926, 305, 306,
	308, 307, 309, 310, 311, 312, 1551, 313, 314, 1552,
	1553, 1554, 0, 1555, 714, 1556, 1557, 1558, 315, 1559,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 1560, 719,
	328, 329, 330, 331, 332, 333, 334, 1561, 1562, 0,
	335, 720, 721, 722, 1563, 336, 337, 723, 1564, 1631,
	1565, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	1566, 347, 348, 349, 346, 350, 1567, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 1568, 359, 360, 361,
	1325, 362, 363, 364, 1569, 1570, 1572, 1571, 1573, 1574,
	1575, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 1576, 375, 377, 371, 373, 1577, 376, 374, 378,
	1578, 379, 380, 381, 1579, 1580, 382, 383, 384, 1581,
	385, 386, 387, 1582, 388, 389, 390, 1583, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 1584, 302, 1585, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 1586, 410, 411, 412, 1587, 413, 414, 1588, 1326,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 1589, 427, 732, 1590, 733, 428,
	1591, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 1328, 436, 437, 438, 1592, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 1593,
	1327, 737, 447, 529, 448, 738, 739, 1594, 740, 1595,
	449, 450, 452, 1329, 741, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	1596, 462, 464, 463, 1597, 466, 742, 465, 1332, 467,
	468, 1333, 1598, 469, 470, 471, 472, 473, 474, 477,
	1599, 1600, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 1601, 304, 1336, 523, 524, 525, 526,
	1602, 743, 527, 744, 530, 531, 1603, 0, 532, 0,
	533, 1604, 1605, 535, 536, 537, 1606, 1607, 538, 539,
	745, 1337, 540, 1338, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 1608, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 1609, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 1610, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 1611,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 1612, 627,
	628, 626, 629, 630, 631, 1613, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 1614, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 1615, 664, 665, 0,
	659, 650, 1616, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 1617, 674, 757, 758, 759, 760, 1618, 686,
	1619, 675, 677, 678, 679, 680, 761, 681, 762, 1620,
	682, 683, 684, 685, 676, 687, 688, 1621, 1622, 689,
	690, 692, 694, 695, 691, 693, 696, 1623, 697, 1624,
	0, 698, 699, 700, 763, 764, 765, 1625, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1626, 1627, 1628,
	1629, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2867, 305, 306, 308, 307, 309, 310, 311, 312,
	1551, 313, 314, 1552, 1553, 1554, 0, 1555, 714, 1556,
	1557, 1558, 315, 1559, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 1560, 719, 328, 329, 330, 331, 332, 333,
	334, 1561, 1562, 0, 335, 720, 721, 722, 1563, 336,
	337, 723, 1564, 1631, 1565, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 1566, 347, 348, 349, 346, 350,
	1567, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	1568, 359, 360, 361, 1325, 362, 363, 364, 1569, 1570,
	1572, 1571, 1573, 1574, 1575, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 1576, 375, 377, 371, 373,
	1577, 376, 374, 378, 1578, 379, 380, 381, 1579, 1580,
	382, 383, 384, 1581, 385, 386, 387, 1582, 388, 389,
	390, 1583, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	1584, 302, 1585, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 1586, 410, 411, 412, 1587,
	413, 414, 1588, 1326, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 1589, 427,
	732, 1590, 733, 428, 1591, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 1328, 436, 437, 438,
	1592, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 1593, 1327, 737, 447, 529, 448, 738,
	739, 1594, 740, 1595, 449, 450, 452, 1329, 741, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 1596, 462, 464, 463, 1597, 466,
	742, 465, 1332, 467, 468, 1333, 1598, 469, 470, 471,
	472, 473, 474, 477, 1599, 1600, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 1601, 304, 1336,
	523, 524, 525, 526, 1602, 743, 527, 744, 530, 531,
	1603, 0, 532, 0, 533, 1604, 1605, 535, 536, 537,
	1606, 1607, 538, 539, 745, 1337, 540, 1338, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 1608, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 1609, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 1610, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 1611, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 1612, 627, 628, 626, 629, 630, 631, 1613,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 1614, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	1615, 664, 665, 0, 659, 650, 1616, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 1617, 674, 757, 758,
	759, 760, 1618, 686, 1619, 675, 677, 678, 679, 680,
	761, 681, 762, 1620, 682, 683, 684, 685, 676, 687,
	688, 1621, 1622, 689, 690, 692, 694, 695, 691, 693,
	696, 1623, 697, 1624, 0, 698, 699, 700, 763, 764,
	765, 1625, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 1626, 1627, 1628, 1629, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 1542, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2479, 305, 306, 308, 307,
	309, 310, 311, 312, 1551, 313, 314, 1552, 1553, 1554,
	0, 1555, 714, 1556, 1557, 1558, 315, 1559, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 1560, 719, 328, 329,
	330, 331, 332, 333, 334, 1561, 1562, 0, 335, 720,
	721, 722, 1563, 336, 337, 723, 1564, 1631, 1565, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 1566, 347,
	348, 349, 346, 350, 1567, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 1568, 359, 360, 361, 1325, 362,
	363, 364, 1569, 1570, 1572, 1571, 1573, 1574, 1575, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 1576,
	375, 377, 371, 373, 1577, 376, 374, 378, 1578, 379,
	380, 381, 1579, 1580, 382, 383, 384, 1581, 385, 386,
	387, 1582, 388, 389, 390, 1583, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 1584, 302, 1585, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 1586,
	410, 411, 412, 1587, 413, 414, 1588, 1326, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 1589, 427, 732, 1590, 733, 428, 1591, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	1328, 436, 437, 438, 1592, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 1593, 1327, 737,
	447, 529, 448, 738, 739, 1594, 740, 1595, 449, 450,
	452, 1329, 741, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 1596, 462,
	464, 463, 1597, 466, 742, 465, 1332, 467, 468, 1333,
	1598, 469, 470, 471, 472, 473, 474, 477, 1599, 1600,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 1601, 304, 1336, 523, 524, 525, 526, 1602, 743,
	527, 744, 530, 531, 1603, 0, 532, 0, 533, 1604,
	1605, 535, 536, 537, 1606, 1607, 538, 539, 745, 1337,
	540, 1338, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 1608, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 1609, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 1610, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 1611, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 1612, 627, 628, 626,
	629, 630, 631, 1613, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 1614, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 1615, 664, 665, 0, 659, 650,
	1616, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	1617, 674, 757, 758, 759, 760, 1618, 686, 1619, 675,
	677, 678, 679, 680, 761, 681, 762, 1620, 682, 683,
	684, 685, 676, 687, 688, 1621, 1622, 689, 690, 692,
	694, 695, 691, 693, 696, 1623, 697, 1624, 0, 698,
	699, 700, 763, 764, 765, 1625, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 1626, 1627, 1628, 1629, 709,
	710, 767, 711, 712, 713, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	1551, 313, 314, 1552, 1553, 1554, 0, 1555, 714, 1556,
	1557, 1558, 315, 1559, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 1560, 719, 328, 329, 330, 331, 332, 333,
	334, 1561, 1562, 0, 335, 720, 721, 722, 1563, 336,
	337, 723, 1564, 1631, 1565, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 1566, 347, 348, 349, 346, 350,
	1567, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	1568, 359, 360, 361, 1325, 362, 363, 364, 1569, 1570,
	1572, 1571, 1573, 1574, 1575, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 1576, 375, 377, 371, 373,
	1577, 376, 374, 378, 1578, 379, 380, 381, 1579, 1580,
	382, 383, 384, 1581, 385, 386, 387, 1582, 388, 389,
	390, 1583, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	1584, 302, 1585, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 1586, 410, 411, 412, 1587,
	413, 414, 1588, 1326, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 1589, 427,
	732, 1590, 733, 428, 1591, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 1328, 436, 437, 438,
	1592, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 1593, 1327, 737, 447, 529, 448, 738,
	739, 1594, 740, 1595, 449, 450, 452, 1329, 741, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 1596, 462, 464, 463, 1597, 466,
	742, 465, 1332, 467, 468, 1333, 1598, 469, 470, 471,
	472, 473, 474, 477, 1599, 1600, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 1601, 304, 1336,
	523, 524, 525, 526, 1602, 743, 527, 744, 530, 531,
	1603, 0, 532, 0, 533, 1604, 1605, 535, 536, 537,
	1606, 1607, 538, 539, 745, 1337, 540, 1338, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 1608, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 1609, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 1610, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 1611, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 1612, 627, 628, 626, 629, 630, 631, 1613,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 1614, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	1615, 664, 665, 0, 659, 650, 1616, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 1617, 674, 757, 758,
	759, 760, 1618, 686, 1619, 675, 677, 678, 679, 680,
	761, 681, 762, 1620, 682, 683, 684, 685, 676, 687,
	688, 1621, 1622, 689, 690, 692, 694, 695, 691, 693,
	696, 1623, 697, 1624, 0, 698, 699, 700, 763, 764,
	765, 1625, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 1626, 1627, 1628, 1629, 709, 710, 767, 711, 712,
	713, 2842, 0, 1260, 1232, 1233, 1234, 1230, 1231, 1243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 2839, 313,
	314, 0, 0, 0, 0, 0, 1284, 1248, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 1297, 0, 326, 1304, 327, 1303,
	0, 1314, 328, 329, 330, 331, 332, 333, 334, 1250,
	1283, 1215, 335, 1344, 1345, 722, 0, 336, 337, 1290,
	0, 1271, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280,
	1276, 1275, 1279, 365, 366, 367, 368, 369, 1307, 370,
	372, 1301, 1300, 1220, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 2840, 0, 382, 1292,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 1226, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 1315, 1316, 405, 1239, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 1299, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 1312, 1313, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 1322, 0,
	1249, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1285, 1286, 1289, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 1294, 1295, 0,
	1255, 0, 449, 450, 452, 1329, 1287, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 1323, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 1278, 1277, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 1217, 304, 1336, 523, 524,
	525, 526, 1240, 1288, 527, 1302, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 1317, 541, 542, 1227,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 1318, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 1298,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 1228, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1281, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 1296, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 1343, 653,
	654, 655, 656, 1319, 660, 661, 662, 663, 0, 664,
	665, 1214, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 1308, 1309, 1310, 1311,
	0, 686, 0, 675, 677, 678, 679, 680, 1320, 681,
	1321, 1238, 682, 683, 684, 685, 676, 687, 688, 0,
	1221, 689, 690, 692, 694, 695, 691, 693, 696, 1282,
	697, 0, 0, 698, 699, 700, 763, 1305, 1342, 2838,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 1218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1213, 0, 0, 0, 0, 0,
	0, 1211, 1212, 2841, 0, 0, 0, 0, 0, 0,
	0, 1244, 2837, 0, 1202, 1242, 1260, 1232, 1233, 1234,
	1230, 1231, 1243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 308, 307, 309, 310, 311,
	312, 0, 313, 314, 0, 0, 0, 0, 0, 1284,
	1248, 0, 0, 315, 0, 316, 317, 318, 1324, 319,
	320, 321, 322, 323, 324, 325, 715, 1297, 0, 326,
	1304, 327, 1303, 0, 1314, 328, 329, 330, 331, 332,
	333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0,
	336, 337, 1290, 0, 1271, 0, 338, 339, 340, 341,
	342, 343, 344, 345, 0, 0, 347, 348, 349, 346,
	350, 0, 351, 0, 352, 353, 354, 355, 356, 357,
	358, 0, 359, 360, 361, 1325, 362, 363, 364, 1274,
	1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368,
	369, 1307, 370, 372, 1301, 1300, 1220, 375, 377, 371,
	373, 0, 376, 374, 378, 0, 379, 380, 381, 0,
	0, 382, 1292, 384, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 1226, 393, 394, 395, 397,
	399, 396, 398, 400, 401, 402, 403, 404, 1315, 1316,
	405, 1239, 302, 0, 0, 0, 0, 0, 406, 407,
	408, 1299, 0, 0, 0, 409, 0, 410, 411, 412,
	0, 413, 414, 0, 1326, 415, 416, 417, 1312, 1313,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 1322, 0, 1249, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1285, 1286, 1289, 528, 1328, 436, 437,
	438, 0, 439, 440, 441, 442, 443, 0, 0, 0,
	303, 444, 445, 446, 0, 1327, 737, 447, 529, 448,
	1294, 1295, 0, 1255, 0, 449, 450, 452, 1329, 1287,
	1330, 451, 453, 454, 1331, 455, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 0, 462, 464, 463, 0,
	466, 1323, 465, 1332, 467, 468, 1333, 0, 469, 470,
	471, 472, 473, 474, 477, 1278, 1277, 475, 476, 478,
	479, 0, 480, 481, 483, 486, 482, 484, 485, 487,
	500, 501, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 503, 0, 502, 1334, 504, 505,
	506, 507, 508, 515, 517, 518, 513, 514, 516, 519,
	520, 522, 510, 511, 512, 1335, 521, 509, 1217, 304,
	1336, 523, 524, 525, 526, 1240, 1288, 527, 1302, 530,
	531, 0, 0, 532, 0, 533, 0, 0, 535, 536,
	537, 0, 0, 538, 539, 745, 1337, 540, 1338, 1317,
	541, 542, 1227, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 0, 553, 554, 747, 555, 556, 557,
	748, 558, 559, 560, 1318, 561, 750, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 1298, 575, 576, 578, 577, 579, 0, 580,
	0, 581, 582, 583, 0, 0, 0, 0, 0, 584,
	585, 587, 0, 588, 589, 590, 591, 586, 592, 593,
	594, 595, 596, 597, 0, 599, 600, 598, 601, 602,
	1339, 603, 604, 605, 606, 607, 1228, 608, 0, 609,
	610, 617, 618, 619, 611, 612, 613, 620, 621, 622,
	623, 624, 625, 258, 627, 628, 626, 629, 630, 631,
	1281, 632, 753, 633, 614, 615, 634, 635, 1340, 636,
	637, 638, 639, 640, 641, 642, 1296, 0, 643, 0,
	644, 645, 646, 647, 648, 649, 651, 616, 652, 657,
	658, 1343, 653, 654, 655, 656, 1319, 660, 661, 662,
	663, 0, 664, 665, 1214, 659, 650, 260, 666, 667,
	668, 669, 670, 671, 0, 672, 673, 0, 674, 1308,
	1309, 1310, 1311, 0, 686, 0, 675, 677, 678, 679,
	680, 1320, 681, 1321, 1238, 682, 683, 684, 685, 676,
	687, 688, 0, 1221, 689, 690, 692, 694, 695, 691,
	693, 696, 1282, 697, 0, 0, 698, 699, 700, 1793,
	1305, 1342, 0, 702, 701, 703, 704, 705, 766, 706,
	707, 708, 0, 0, 0, 252, 709, 710, 767, 711,
	712, 713, 1218, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1213, 0, 0,
	0, 0, 0, 0, 1211, 1212, 1260, 1232, 1233, 1234,
	1230, 1231, 1243, 0, 2062, 2060, 0, 0, 1242, 0,
	0, 0, 0, 305, 306, 308, 307, 309, 310, 311,
	312, 0, 313, 314, 0, 0, 0, 0, 0, 1284,
	1248, 0, 0, 315, 0, 316, 317, 318, 1324, 319,
	320, 321, 322, 323, 324, 325, 715, 1297, 0, 326,
	1304, 327, 1303, 0, 1314, 328, 329, 330, 331, 332,
	333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0,
	336, 337, 1290, 0, 1271, 0, 338, 339, 340, 341,
	342, 343, 344, 345, 0, 0, 347, 348, 349, 346,
	350, 0, 351, 0, 352, 353, 354, 355, 356, 357,
	358, 0, 359, 360, 361, 1325, 362, 363, 364, 1274,
	1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368,
	369, 1307, 370, 372, 1301, 1300, 1220, 375, 377, 371,
	373, 0, 376, 374, 378, 0, 379, 380, 381, 0,
	0, 382, 1292, 384, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 1226, 393, 394, 395, 397,
	399, 396, 398, 400, 401, 402, 403, 404, 1315, 1316,
	405, 1239, 302, 0, 0, 0, 0, 0, 406, 407,
	408, 1299, 0, 0, 0, 409, 0, 410, 411, 412,
	0, 413, 414, 0, 1326, 415, 416, 417, 1312, 1313,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 1322, 0, 1249, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1285, 1286, 1289, 528, 1328, 436, 437,
	438, 0, 439, 440, 441, 442, 443, 0, 0, 0,
	303, 444, 445, 446, 0, 1327, 737, 447, 529, 448,
	1294, 1295, 0, 1255, 0, 449, 450, 452, 1329, 1287,
	1330, 451, 453, 454, 1331, 455, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 0, 462, 464, 463, 0,
	466, 1323, 465, 1332, 467, 468, 1333, 0, 469, 470,
	471, 472, 473, 474, 477, 1278, 1277, 475, 476, 478,
	479, 0, 480, 481, 483, 486, 482, 484, 485, 487,
	500, 501, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 503, 0, 502, 1334, 504, 505,
	506, 507, 508, 515, 517, 518, 513, 514, 516, 519,
	520, 522, 510, 511, 512, 1335, 521, 509, 1217, 304,
	1336, 523, 524, 525, 526, 1240, 1288, 527, 1302, 530,
	531, 0, 0, 532, 0, 533, 0, 0, 535, 536,
	537, 0, 0, 538, 539, 745, 1337, 540, 1338, 1317,
	541, 542, 1227, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 0, 553, 554, 747, 555, 556, 557,
	748, 558, 559, 560, 1318, 561, 750, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 1298, 575, 576, 578, 577, 579, 0, 580,
	0, 581, 582, 583, 0, 0, 0, 0, 0, 584,
	585, 587, 0, 588, 589, 590, 591, 586, 592, 593,
	594, 595, 596, 597, 0, 599, 600, 598, 601, 602,
	1339, 603, 604, 605, 606, 607, 1228, 608, 0, 609,
	610, 617, 618, 619, 611, 612, 613, 620, 621, 622,
	623, 624, 625, 258, 627, 628, 626, 629, 630, 631,
	1281, 632, 753, 633, 614, 615, 634, 635, 1340, 636,
	637, 638, 639, 640, 641, 642, 1296, 0, 643, 0,
	644, 645, 646, 647, 648, 649, 651, 616, 652, 657,
	658, 1343, 653, 654, 655, 656, 1319, 660, 661, 662,
	663, 0, 664, 665, 1214, 659, 650, 260, 666, 667,
	668, 669, 670, 671, 0, 672, 673, 0, 674, 1308,
	1309, 1310, 1311, 0, 686, 0, 675, 677, 678, 679,
	680, 1320, 681, 1321, 1238, 682, 683, 684, 685, 676,
	687, 688, 0, 1221, 689, 690, 692, 694, 695, 691,
	693, 696, 1282, 697, 0, 0, 698, 699, 700, 1793,
	1305, 1342, 0, 702, 701, 703, 704, 705, 766, 706,
	707, 708, 0, 0, 0, 252, 709, 710, 767, 711,
	712, 713, 1218, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1213, 0, 0,
	0, 0, 0, 0, 1211, 1212, 1260, 1232, 1233, 1234,
	1230, 1231, 1243, 0, 2062, 3539, 0, 0, 1242, 0,
	0, 0, 0, 305, 306, 308, 307, 309, 310, 311,
	312, 0, 313, 314, 0, 0, 0, 0, 0, 1284,
	1248, 0, 0, 315, 0, 316, 317, 318, 1324, 319,
	320, 321, 322, 323, 324, 325, 715, 1297, 0, 326,
	1304, 327, 1303, 0, 1314, 328, 329, 330, 331, 332,
	333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0,
	336, 337, 1290, 0, 1271, 0, 338, 339, 340, 341,
	342, 343, 344, 345, 0, 0, 347, 348, 349, 346,
	350, 0, 351, 0, 352, 353, 354, 355, 356, 357,
	358, 0, 359, 360, 361, 1325, 362, 363, 364, 1274,
	1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368,
	369, 1307, 370, 372, 1301, 1300, 1220, 375, 377, 371,
	373, 0, 376, 374, 378, 0, 379, 380, 381, 0,
	0, 382, 1292, 384, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 1226, 393, 394, 395, 397,
	399, 396, 398, 400, 401, 402, 403, 404, 1315, 1316,
	405, 1239, 302, 0, 0, 0, 0, 0, 406, 407,
	408, 1299, 0, 0, 0, 409, 0, 410, 411, 412,
	0, 413, 414, 0, 1326, 415, 416, 417, 1312, 1313,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 1322, 0, 1249, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1285, 1286, 1289, 528, 1328, 436, 437,
	438, 0, 439, 440, 441, 442, 443, 0, 0, 0,
	303, 444, 445, 446, 0, 1327, 737, 447, 529, 448,
	1294, 1295, 0, 1255, 0, 449, 450, 452, 1329, 1287,
	1330, 451, 453, 454, 1331, 455, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 0, 462, 464, 463, 0,
	466, 1323, 465, 1332, 467, 468, 1333, 0, 469, 470,
	471, 472, 473, 474, 477, 1278, 1277, 475, 476, 478,
	479, 0, 480, 481, 483, 486, 482, 484, 485, 487,
	500, 501, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 503, 0, 502, 1334, 504, 505,
	506, 507, 508, 515, 517, 518, 513, 514, 516, 519,
	520, 522, 510, 511, 512, 1335, 521, 509, 1217, 304,
	1336, 523, 524, 525, 526, 1240, 1288, 527, 1302, 530,
	531, 0, 0, 532, 0, 533, 0, 0, 535, 536,
	537, 0, 0, 538, 539, 745, 1337, 540, 1338, 1317,
	541, 542, 1227, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 0, 553, 554, 747, 555, 556, 557,
	748, 558, 559, 560, 1318, 561, 750, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 1298, 575, 576, 578, 577, 579, 0, 580,
	0, 581, 582, 583, 0, 0, 0, 0, 0, 584,
	585, 587, 0, 588, 589, 590, 591, 586, 592, 593,
	594, 595, 596, 597, 0, 599, 600, 598, 601, 602,
	1339, 603, 604, 605, 606, 607, 1228, 608, 0, 609,
	610, 617, 618, 619, 611, 612, 613, 620, 621, 622,
	623, 624, 625, 258, 627, 628, 626, 629, 630, 631,
	1281, 632, 753, 633, 614, 615, 634, 635, 1340, 636,
	637, 638, 639, 640, 641, 642, 1296, 0, 643, 0,
	644, 645, 646, 647, 648, 649, 651, 616, 652, 657,
	658, 1343, 653, 654, 655, 656, 1319, 660, 661, 662,
	663, 0, 664, 665, 1214, 659, 650, 260, 666, 667,
	668, 669, 670, 671, 0, 672, 673, 0, 674, 1308,
	1309, 1310, 1311, 0, 686, 0, 675, 677, 678, 679,
	680, 1320, 681, 1321, 1238, 682, 683, 684, 685, 676,
	687, 688, 0, 1221, 689, 690, 692, 694, 695, 691,
	693, 696, 1282, 697, 0, 0, 698, 699, 700, 1793,
	1305, 1342, 0, 702, 701, 703, 704, 705, 766, 706,
	707, 708, 0, 0, 0, 252, 709, 710, 767, 711,
	712, 713, 1218, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1213, 0, 0,
	0, 0, 0, 0, 1211, 1212, 1260, 1232, 1233, 1234,
	1230, 1231, 1243, 0, 2062, 2060, 0, 0, 1242, 0,
	0, 0, 0, 305, 306, 308, 307, 309, 310, 311,
	312, 0, 313, 314, 0, 0, 0, 0, 0, 1284,
	1248, 0, 0, 315, 0, 316, 317, 318, 1324, 319,
	320, 321, 322, 323, 324, 325, 715, 1297, 0, 326,
	1304, 327, 1303, 2972, 1314, 328, 329, 330, 331, 332,
	333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0,
	336, 337, 1290, 0, 1271, 0, 338, 339, 340, 341,
	342, 343, 344, 345, 0, 0, 347, 348, 349, 346,
	350, 0, 351, 0, 352, 353, 354, 355, 356, 357,
	358, 0, 359, 360, 361, 1325, 362, 363, 364, 1274,
	1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368,
	369, 1307, 370, 372, 1301, 1300, 1220, 375, 377, 371,
	373, 0, 376, 374, 378, 0, 379, 380, 381, 0,
	0, 382, 1292, 384, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 1226, 393, 394, 395, 397,
	399, 396, 398, 400, 401, 402, 403, 404, 1315, 1316,
	405, 1239, 302, 0, 0, 0, 0, 0, 406, 407,
	408, 1299, 0, 0, 0, 409, 0, 410, 411, 412,
	0, 413, 414, 2977, 1326, 415, 416, 417, 1312, 1313,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 1322, 0, 1249, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1285, 1286, 1289, 528, 1328, 436, 437,
	438, 0, 439, 440, 441, 442, 443, 0, 0, 0,
	303, 444, 445, 446, 0, 1327, 737, 447, 529, 448,
	1294, 1295, 0, 1255, 0, 449, 450, 452, 1329, 1287,
	1330, 451, 453, 454, 1331, 455, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 0, 462, 464, 463, 2973,
	466, 1323, 465, 1332, 467, 468, 1333, 0, 469, 470,
	471, 472, 473, 474, 477, 1278, 1277, 475, 476, 478,
	479, 0, 480, 481, 483, 486, 482, 484, 485, 487,
	500, 501, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 503, 0, 502, 1334, 504, 505,
	506, 507, 508, 515, 517, 518, 513, 514, 516, 519,
	520, 522, 510, 511, 512, 1335, 521, 509, 1217, 304,
	1336, 523, 524, 525, 526, 1240, 1288, 527, 1302, 530,
	531, 0, 0, 532, 0, 533, 0, 0, 535, 536,
	537, 0, 0, 538, 539, 745, 1337, 540, 1338, 1317,
	541, 542, 1227, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 0, 553, 554, 747, 555, 556, 557,
	748, 558, 559, 560, 1318, 561, 750, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 1298, 575, 576, 578, 577, 579, 0, 580,
	0, 581, 582, 583, 0, 0, 0, 0, 0, 584,
	585, 587, 0, 588, 589, 590, 591, 586, 592, 593,
	594, 595, 596, 597, 0, 599, 600, 598, 601, 602,
	1339, 603, 604, 605, 606, 607, 1228, 608, 0, 609,
	610, 617, 618, 619, 611, 612, 613, 620, 621, 622,
	623, 624, 625, 0, 627, 628, 626, 629, 630, 631,
	1281, 632, 753, 633, 614, 615, 634, 635, 1340, 636,
	637, 638, 639, 640, 641, 642, 1296, 0, 643, 0,
	644, 645, 646, 647, 648, 649, 651, 616, 652, 657,
	658, 1343, 653, 654, 655, 656, 1319, 660, 661, 662,
	663, 0, 664, 665, 1214, 659, 650, 0, 666, 667,
	668, 669, 670, 671, 0, 672, 673, 0, 674, 1308,
	1309, 1310, 1311, 0, 686, 2974, 675, 677, 678, 679,
	680, 1320, 681, 1321, 1238, 682, 683, 684, 685, 676,
	687, 688, 0, 1221, 689, 690, 692, 694, 695, 691,
	693, 696, 1282, 697, 0, 0, 698, 699, 700, 763,
	1305, 1342, 0, 702, 701, 703, 704, 705, 766, 706,
	707, 708, 0, 0, 0, 0, 709, 710, 767, 711,
	712, 713, 1218, 0, 0, 0, 0, 2887, 0, 1260,
	1232, 1233, 1234, 1230, 1231, 1243, 0, 1213, 0, 0,
	0, 0, 0, 0, 1211, 1212, 305, 306, 308, 307,
	309, 310, 311, 312, 1244, 313, 314, 0, 1242, 0,
	0, 0, 1284, 1248, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	1297, 0, 326, 1304, 327, 1303, 0, 1314, 328, 329,
	330, 331, 332, 333, 334, 1250, 1283, 1215, 335, 1344,
	1345, 722, 0, 336, 337, 1290, 0, 1271, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365,
	366, 367, 368, 369, 1307, 370, 372, 1301, 1300, 1220,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 1292, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 1226, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 1315, 1316, 405, 1239, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 1299, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 1312, 1313, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 1322, 0, 1249, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1285, 1286, 1289, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 1327, 737,
	447, 529, 448, 1294, 1295, 0, 1255, 0, 449, 450,
	452, 1329, 1287, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 1323, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 1278, 1277,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 1217, 304, 1336, 523, 524, 525, 526, 1240, 1288,
	527, 1302, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 1337,
	540, 1338, 1317, 541, 542, 1227, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 1318, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 1298, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 1228,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 1281, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 1296,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 1343, 653, 654, 655, 656, 1319,
	660, 661, 662, 663, 0, 664, 665, 1214, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 1308, 1309, 1310, 1311, 0, 686, 0, 675,
	677, 678, 679, 680, 1320, 681, 1321, 1238, 682, 683,
	684, 685, 676, 687, 688, 0, 1221, 689, 690, 692,
	694, 695, 691, 693, 696, 1282, 697, 0, 0, 698,
	699, 700, 763, 1305, 1342, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 1218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 0, 0, 0, 0, 1211, 1212, 0,
	0, 0, 0, 0, 0, 0, 0, 1244, 2885, 0,
	2884, 1242, 1260, 1232, 1233, 1234, 1230, 1231, 1243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 308, 307, 309, 310, 311, 312, 0, 313, 314,
	0, 0, 0, 0, 0, 1284, 1248, 0, 0, 315,
	0, 316, 317, 318, 1324, 319, 320, 321, 322, 323,
	324, 325, 715, 1297, 0, 326, 1304, 327, 1303, 0,
	1314, 328, 329, 330, 331, 332, 333, 334, 1250, 1283,
	1215, 335, 1344, 1345, 722, 0, 336, 337, 1290, 0,
	1271, 0, 338, 339, 340, 341, 342, 343, 344, 345,
	0, 0, 347, 348, 349, 346, 350, 0, 351, 0,
	352, 353, 354, 355, 356, 357, 358, 0, 359, 360,
	361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280, 1276,
	1275, 1279, 365, 366, 367, 368, 369, 1307, 370, 372,
	1301, 1300, 1220, 375, 377, 371, 373, 0, 376, 374,
	378, 0, 379, 380, 381, 0, 0, 382, 1292, 384,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 1226, 393, 394, 395, 397, 399, 396, 398, 400,
	401, 402, 403, 404, 1315, 1316, 405, 1239, 302, 0,
	0, 0, 0, 0, 406, 407, 408, 1299, 0, 0,
	0, 409, 0, 410, 411, 412, 0, 413, 414, 0,
	1326, 415, 416, 417, 1312, 1313, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 1322, 0, 1249,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1285,
	1286, 1289, 528, 1328, 436, 437, 438, 0, 439, 440,
	441, 442, 443, 0, 0, 0, 303, 444, 445, 446,
	0, 1327, 737, 447, 529, 448, 1294, 1295, 0, 1255,
	0, 449, 450, 452, 1329, 1287, 1330, 451, 453, 454,
	1331, 455, 0, 0, 0, 456, 457, 458, 459, 460,
	461, 0, 462, 464, 463, 0, 466, 1323, 465, 1332,
	467, 468, 1333, 0, 469, 470, 471, 472, 473, 474,
	477, 1278, 1277, 475, 476, 478, 479, 0, 480, 481,
	483, 486, 482, 484, 485, 487, 500, 501, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	503, 0, 502, 1334, 504, 505, 506, 507, 508, 515,
	517, 518, 513, 514, 516, 519, 520, 522, 510, 511,
	512, 1335, 521, 509, 1217, 304, 1336, 523, 524, 525,
	526, 1240, 1288, 527, 1302, 530, 531, 0, 0, 532,
	0, 533, 0, 0, 535, 536, 537, 0, 0, 538,
	539, 745, 1337, 540, 1338, 1317, 541, 542, 1227, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 0,
	553, 554, 747, 555, 556, 557, 748, 558, 559, 560,
	1318, 561, 750, 562, 563, 0, 564, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 574, 1298, 575,
	576, 578, 577, 579, 0, 580, 0, 581, 582, 583,
	0, 0, 0, 0, 0, 584, 585, 587, 0, 588,
	589, 590, 591, 586, 592, 593, 594, 595, 596, 597,
	0, 599, 600, 598, 601, 602, 1339, 603, 604, 605,
	606, 607, 1228, 608, 0, 609, 610, 617, 618, 619,
	611, 612, 613, 620, 621, 622, 623, 624, 625, 0,
	627, 628, 626, 629, 630, 631, 1281, 632, 753, 633,
	614, 615, 634, 635, 1340, 636, 637, 638, 639, 640,
	641, 642, 1296, 0, 643, 0, 644, 645, 646, 647,
	648, 649, 651, 616, 652, 657, 658, 1343, 653, 654,
	655, 656, 1319, 660, 661, 662, 663, 0, 664, 665,
	1214, 659, 650, 0, 666, 667, 668, 669, 670, 671,
	0, 672, 673, 0, 674, 1308, 1309, 1310, 1311, 0,
	686, 0, 675, 677, 678, 679, 680, 1320, 681, 1321,
	1238, 682, 683, 684, 685, 676, 687, 688, 0, 1221,
	689, 690, 692, 694, 695, 691, 693, 696, 1282, 697,
	0, 0, 698, 699, 700, 763, 1305, 1342, 0, 702,
	701, 703, 704, 705, 766, 706, 707, 708, 0, 0,
	0, 0, 709, 710, 767, 711, 712, 713, 1218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1213, 0, 0, 0, 0, 0, 0,
	1211, 1212, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 2882, 0, 2881, 1242, 1260, 1232, 1233, 1234, 1230,
	1231, 1243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 1284, 1248,
	0, 0, 315, 0, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 1297, 0, 326, 1304,
	327, 1303, 0, 1314, 328, 329, 330, 331, 332, 333,
	334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0, 336,
	337, 1290, 0, 1271, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 1325, 362, 363, 364, 1274, 1272,
	1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368, 369,
	1307, 370, 372, 1301, 1300, 1220, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 1292, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 1226, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 1315, 1316, 405,
	1239, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	1299, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 1326, 415, 416, 417, 1312, 1313, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	1322, 0, 1249, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1285, 1286, 1289, 528, 1328, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 1327, 737, 447, 529, 448, 1294,
	1295, 0, 1255, 0, 449, 450, 452, 1329, 1287, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	1323, 465, 1332, 467, 468, 1333, 0, 469, 470, 471,
	472, 473, 474, 477, 1278, 1277, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 1217, 304, 1336,
	523, 524, 525, 526, 1240, 1288, 527, 1302, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 1337, 540, 1338, 1317, 541,
	542, 1227, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 1318, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 1298, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 1228, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 1281,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 1296, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	1343, 653, 654, 655, 656, 1319, 660, 661, 662, 663,
	0, 664, 665, 1214, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 1308, 1309,
	1310, 1311, 0, 686, 0, 675, 677, 678, 679, 680,
	1320, 681, 1321, 1238, 682, 683, 684, 685, 676, 687,
	688, 0, 1221, 689, 690, 692, 694, 695, 691, 693,
	696, 1282, 697, 0, 0, 698, 699, 700, 763, 1305,
	1342, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 0, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 1218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1213, 0, 0, 0,
	0, 0, 0, 1211, 1212, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 2879, 0, 2878, 1242, 1260, 1232,
	1233, 1234, 1230, 1231, 1243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 308, 307, 309,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 1284, 1248, 0, 0, 315, 0, 316, 317, 318,
	1324, 319, 320, 321, 322, 323, 324, 325, 715, 1297,
	0, 326, 1304, 327, 1303, 0, 1314, 328, 329, 330,
	331, 332, 333, 334, 1250, 1283, 1215, 335, 1344, 1345,
	722, 0, 336, 337, 1290, 0, 1271, 0, 338, 339,
	340, 341, 342, 343, 344, 345, 0, 0, 347, 348,
	349, 346, 350, 0, 351, 0, 352, 353, 354, 355,
	356, 357, 358, 0, 359, 360, 361, 1325, 362, 363,
	364, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366,
	367, 368, 369, 1307, 370, 372, 1301, 1300, 1220, 375,
	377, 371, 373, 0, 376, 374, 378, 0, 379, 380,
	381, 0, 0, 382, 1292, 384, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 1226, 393, 394,
	395, 397, 399, 396, 398, 400, 401, 402, 403, 404,
	1315, 1316, 405, 1239, 302, 0, 0, 0, 0, 0,
	406, 407, 408, 1299, 0, 0, 0, 409, 0, 410,
	411, 412, 0, 413, 414, 0, 1326, 415, 416, 417,
	1312, 1313, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 1322, 0, 1249, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1285, 1286, 1289, 528, 1328,
	436, 437, 438, 0, 439, 440, 441, 442, 443, 0,
	0, 0, 303, 444, 445, 446, 0, 1327, 737, 447,
	529, 448, 1294, 1295, 0, 1255, 0, 449, 450, 452,
	1329, 1287, 1330, 451, 453, 454, 1331, 455, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 0, 462, 464,
	463, 0, 466, 1323, 465, 1332, 467, 468, 1333, 0,
	469, 470, 471, 472, 473, 474, 477, 1278, 1277, 475,
	476, 478, 479, 0, 480, 481, 483, 486, 482, 484,
	485, 487, 500, 501, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 503, 0, 502, 1334,
	504, 505, 506, 507, 508, 515, 517, 518, 513, 514,
	516, 519, 520, 522, 510, 511, 512, 1335, 521, 509,
	1217, 304, 1336, 523, 524, 525, 526, 1240, 1288, 527,
	1302, 530, 531, 0, 0, 532, 0, 533, 0, 0,
	535, 536, 537, 0, 0, 538, 539, 745, 1337, 540,
	1338, 1317, 541, 542, 1227, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 0, 553, 554, 747, 555,
	556, 557, 748, 558, 559, 560, 1318, 561, 750, 562,
	563, 0, 564, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 574, 1298, 575, 576, 578, 577, 579,
	0, 580, 0, 581, 582, 583, 0, 0, 0, 0,
	0, 584, 585, 587, 0, 588, 589, 590, 591, 586,
	592, 593, 594, 595, 596, 597, 0, 599, 600, 598,
	601, 602, 1339, 603, 604, 605, 606, 607, 1228, 608,
	0, 609, 610, 617, 618, 619, 611, 612, 613, 620,
	621, 622, 623, 624, 625, 0, 627, 628, 626, 629,
	630, 631, 1281, 632, 753, 633, 614, 615, 634, 635,
	1340, 636, 637, 638, 639, 640, 641, 642, 1296, 0,
	643, 0, 644, 645, 646, 647, 648, 649, 651, 616,
	652, 657, 658, 1343, 653, 654, 655, 656, 1319, 660,
	661, 662, 663, 0, 664, 665, 1214, 659, 650, 0,
	666, 667, 668, 669, 670, 671, 0, 672, 673, 0,
	674, 1308, 1309, 1310, 1311, 0, 686, 0, 675, 677,
	678, 679, 680, 1320, 681, 1321, 1238, 682, 683, 684,
	685, 676, 687, 688, 0, 1221, 689, 690, 692, 694,
	695, 691, 693, 696, 1282, 697, 0, 0, 698, 699,
	700, 763, 1305, 1342, 0, 702, 701, 703, 704, 705,
	766, 706, 707, 708, 0, 0, 0, 0, 709, 710,
	767, 711, 712, 713, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1213,
	0, 0, 0, 0, 0, 0, 1211, 1212, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 2876, 0, 1895,
	1242, 1260, 1232, 1233, 1234, 1230, 1231, 1243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 1284, 1248, 0, 0, 315, 0,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 1297, 0, 326, 1304, 327, 1303, 0, 1314,
	328, 329, 330, 331, 332, 333, 334, 1250, 1283, 1215,
	335, 1344, 1345, 722, 0, 336, 337, 1290, 0, 1271,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	1325, 362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275,
	1279, 365, 366, 367, 368, 369, 1307, 370, 372, 1301,
	1300, 1220, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 1292, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	1226, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 1315, 1316, 405, 1239, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 1299, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 1326,
	415, 416, 417, 1312, 1313, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 1322, 0, 1249, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1285, 1286,
	1289, 528, 1328, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	1327, 737, 447, 529, 448, 1294, 1295, 0, 1255, 0,
	449, 450, 452, 1329, 1287, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 1323, 465, 1332, 467,
	468, 1333, 0, 469, 470, 471, 472, 473, 474, 477,
	1278, 1277, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 1217, 304, 1336, 523, 524, 525, 526,
	1240, 1288, 527, 1302, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 1337, 540, 1338, 1317, 541, 542, 1227, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 1318,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 1298, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 1228, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 1281, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 1296, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 1343, 653, 654, 655,
	656, 1319, 660, 661, 662, 663, 0, 664, 665, 1214,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 1308, 1309, 1310, 1311, 0, 686,
	0, 675, 677, 678, 679, 680, 1320, 681, 1321, 1238,
	682, 683, 684, 685, 676, 687, 688, 0, 1221, 689,
	690, 692, 694, 695, 691, 693, 696, 1282, 697, 0,
	0, 698, 699, 700, 763, 1305, 1342, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1894, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 1218, 0, 0,
	0, 0, 1207, 0, 1260, 1232, 1233, 1234, 1230, 1231,
	1243, 0, 1213, 0, 0, 0, 0, 0, 0, 1211,
	1212, 305, 306, 308, 307, 309, 310, 311, 312, 1244,
	313, 314, 0, 1242, 0, 0, 0, 1284, 1248, 0,
	0, 315, 0, 316, 317, 318, 1324, 319, 320, 321,
	322, 323, 324, 325, 715, 1297, 0, 326, 1304, 327,
	1303, 0, 1314, 328, 329, 330, 331, 332, 333, 334,
	1250, 1283, 1215, 335, 1344, 1345, 722, 0, 336, 337,
	1290, 0, 1271, 0, 338, 339, 340, 341, 342, 343,
	344, 345, 0, 0, 347, 348, 349, 346, 350, 0,
	351, 0, 352, 353, 354, 355, 356, 357, 358, 0,
	359, 360, 361, 1325, 362, 363, 364, 1274, 1272, 1273,
	1280, 1276, 1275, 1279, 365, 366, 367, 368, 369, 1307,
	370, 372, 1301, 1300, 1220, 375, 377, 371, 373, 0,
	376, 374, 378, 0, 379, 380, 381, 0, 0, 382,
	1292, 384, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 1226, 393, 394, 395, 397, 399, 396,
	398, 400, 401, 402, 403, 404, 1315, 1316, 405, 1239,
	302, 0, 0, 0, 0, 0, 406, 407, 408, 1299,
	0, 0, 0, 409, 0, 410, 411, 412, 0, 413,
	414, 0, 1326, 415, 416, 417, 1312, 1313, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 1322,
	0, 1249, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1285, 1286, 1289, 528, 1328, 436, 437, 438, 0,
	439, 440, 441, 442, 443, 0, 0, 0, 303, 444,
	445, 446, 0, 1327, 737, 447, 529, 448, 1294, 1295,
	0, 1255, 0, 449, 450, 452, 1329, 1287, 1330, 451,
	453, 454, 1331, 455, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 0, 462, 464, 463, 0, 466, 1323,
	465, 1332, 467, 468, 1333, 0, 469, 470, 471, 472,
	473, 474, 477, 1278, 1277, 475, 476, 478, 479, 0,
	480, 481, 483, 486, 482, 484, 485, 487, 500, 501,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 503, 0, 502, 1334, 504, 505, 506, 507,
	508, 515, 517, 518, 513, 514, 516, 519, 520, 522,
	510, 511, 512, 1335, 521, 509, 1217, 304, 1336, 523,
	524, 525, 526, 1240, 1288, 527, 1302, 530, 531, 0,
	0, 532, 0, 533, 1222, 0, 535, 536, 537, 0,
	0, 538, 539, 745, 1337, 540, 1338, 1317, 541, 542,
	1227, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 0, 553, 554, 747, 555, 556, 557, 748, 558,
	559, 560, 1318, 561, 750, 562, 563, 0, 564, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	1298, 575, 576, 578, 577, 579, 0, 580, 0, 581,
	582, 583, 0, 0, 0, 0, 0, 584, 585, 587,
	0, 588, 589, 590, 591, 586, 592, 593, 594, 595,
	596, 597, 0, 599, 600, 598, 601, 602, 1339, 603,
	604, 605, 606, 607, 1228, 608, 0, 609, 610, 617,
	618, 619, 611, 612, 613, 620, 621, 622, 623, 624,
	625, 0, 627, 628, 626, 629, 630, 631, 1281, 632,
	753, 633, 614, 615, 634, 635, 1340, 636, 637, 638,
	639, 640, 641, 642, 1296, 0, 643, 0, 644, 645,
	646, 647, 648, 649, 651, 616, 652, 657, 658, 1343,
	653, 654, 655, 656, 1319, 660, 661, 662, 663, 0,
	664, 665, 1214, 659, 650, 0, 666, 667, 668, 669,
	670, 671, 0, 672, 673, 0, 674, 1308, 1309, 1310,
	1311, 0, 686, 0, 675, 677, 678, 679, 680, 1320,
	681, 1321, 1238, 682, 683, 684, 685, 676, 687, 688,
	0, 1221, 689, 690, 692, 694, 695, 691, 693, 696,
	1282, 697, 0, 0, 698, 699, 700, 763, 1305, 1342,
	0, 702, 701, 703, 704, 705, 766, 706, 707, 708,
	0, 0, 0, 0, 709, 710, 767, 711, 712, 713,
	1218, 0, 0, 0, 0, 0, 0, 1260, 1232, 1233,
	1234, 1230, 1231, 1243, 0, 1213, 0, 0, 0, 0,
	0, 0, 1211, 1212, 305, 306, 308, 307, 309, 310,
	311, 312, 1244, 313, 314, 0, 1242, 0, 0, 0,
	1284, 1248, 0, 0, 315, 0, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 1297, 0,
	326, 1304, 327, 1303, 0, 1314, 328, 329, 330, 331,
	332, 333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722,
	0, 336, 337, 1290, 0, 1271, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 5193,
	357, 358, 0, 359, 360, 361, 1325, 362, 363, 364,
	1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367,
	368, 369, 1307, 370, 372, 1301, 1300, 1220, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 1292, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 1226, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 1315,
	1316, 405, 1239, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 1299, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 1326, 415, 416, 417, 1312,
	1313, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 1322, 0, 1249, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1285, 1286, 1289, 528, 1328, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 1327, 737, 447, 529,
	448, 1294, 1295, 0, 1255, 0, 449, 450, 452, 1329,
	1287, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 1323, 465, 1332, 467, 468, 1333, 0, 469,
	470, 471, 472, 473, 474, 477, 1278, 1277, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 1217,
	304, 1336, 523, 524, 525, 526, 1240, 1288, 527, 1302,
	530, 531, 0, 0, 532, 0, 533, 1222, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 1337, 540, 1338,
	1317, 541, 542, 1227, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 1318, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 1298, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 1228, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 1281, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 1296, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 1343, 653, 654, 655, 656, 1319, 660, 661,
	662, 663, 0, 664, 665, 1214, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	1308, 1309, 1310, 1311, 0, 686, 0, 675, 677, 678,
	679, 680, 1320, 681, 1321, 1238, 682, 683, 684, 685,
	676, 687, 688, 0, 1221, 689, 690, 692, 694, 695,
	691, 693, 696, 1282, 697, 0, 0, 698, 699, 700,
	763, 1305, 1342, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 1218, 0, 0, 0, 0, 0, 0,
	1260, 1232, 1233, 1234, 1230, 1231, 1243, 0, 1213, 0,
	0, 0, 0, 0, 0, 1211, 1212, 305, 306, 308,
	307, 309, 310, 311, 312, 1244, 313, 314, 0, 1242,
	0, 0, 0, 1284, 1248, 0, 0, 315, 0, 316,
	317, 318, 1324, 319, 320, 321, 322, 323, 324, 325,
	715, 1297, 0, 326, 1304, 327, 1303, 0, 1314, 328,
	329, 330, 331, 332, 333, 334, 1250, 1283, 1215, 335,
	1344, 1345, 722, 0, 336, 337, 1290, 0, 1271, 0,
	338, 339, 340, 341, 342, 343, 344, 345, 0, 0,
	347, 348, 349, 346, 350, 0, 351, 0, 352, 353,
	354, 355, 356, 357, 358, 0, 359, 360, 361, 1325,
	362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279,
	365, 366, 367, 368, 369, 1307, 370, 372, 1301, 1300,
	1220, 375, 377, 371, 373, 0, 376, 374, 378, 0,
	379, 380, 381, 0, 0, 382, 1292, 384, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 1226,
	393, 394, 395, 397, 399, 396, 398, 400, 401, 402,
	403, 404, 1315, 1316, 405, 1239, 302, 0, 0, 0,
	0, 0, 406, 407, 408, 1299, 0, 0, 0, 409,
	0, 410, 411, 412, 0, 413, 414, 0, 1326, 415,
	416, 417, 1312, 1313, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 1322, 0, 1249, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1285, 1286, 1289,
	528, 1328, 436, 437, 438, 0, 439, 440, 441, 442,
	443, 0, 0, 0, 2717, 444, 445, 446, 0, 1327,
	737, 447, 529, 448, 1294, 1295, 0, 1255, 0, 449,
	450, 452, 1329, 1287, 1330, 451, 453, 454, 1331, 455,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 0,
	462, 464, 463, 0, 466, 1323, 465, 1332, 467, 468,
	1333, 0, 469, 470, 471, 472, 473, 474, 477, 1278,
	1277, 475, 476, 478, 479, 0, 480, 481, 483, 486,
	482, 484, 485, 487, 500, 501, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 503, 0,
	502, 1334, 504, 505, 506, 507, 508, 515, 517, 518,
	513, 514, 516, 519, 520, 522, 510, 511, 512, 1335,
	521, 509, 1217, 304, 1336, 523, 524, 525, 526, 1240,
	1288, 527, 1302, 530, 531, 0, 0, 532, 0, 533,
	0, 0, 535, 536, 537, 0, 0, 538, 539, 745,
	1337, 540, 1338, 1317, 541, 542, 1227, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 0, 553, 554,
	747, 555, 556, 557, 748, 558, 559, 560, 1318, 561,
	750, 562, 563, 2716, 564, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 1298, 575, 576, 578,
	577, 579, 0, 580, 0, 581, 582, 583, 0, 0,
	0, 0, 0, 584, 585, 587, 0, 588, 589, 590,
	591, 586, 592, 593, 594, 595, 596, 597, 0, 599,
	600, 598, 601, 602, 1339, 603, 604, 605, 606, 607,
	1228, 608, 0, 609, 610, 617, 618, 619, 611, 612,
	613, 620, 621, 622, 623, 624, 625, 0, 627, 628,
	626, 629, 630, 631, 1281, 632, 753, 633, 614, 615,
	634, 635, 1340, 636, 637, 638, 639, 640, 641, 642,
	1296, 0, 643, 0, 644, 645, 646, 647, 648, 649,
	651, 616, 652, 657, 658, 1343, 653, 654, 655, 656,
	1319, 660, 661, 662, 663, 0, 664, 665, 1214, 659,
	650, 0, 666, 667, 668, 669, 670, 671, 0, 672,
	673, 0, 674, 1308, 1309, 1310, 1311, 0, 686, 0,
	675, 677, 678, 679, 680, 1320, 681, 1321, 1238, 682,
	683, 684, 685, 676, 687, 688, 0, 1221, 689, 690,
	692, 694, 695, 691, 693, 696, 1282, 697, 0, 0,
	698, 699, 700, 763, 1305, 1342, 0, 702, 701, 703,
	704, 705, 766, 706, 707, 708, 0, 0, 0, 0,
	709, 710, 767, 711, 712, 713, 1218, 0, 0, 0,
	0, 0, 0, 1260, 1232, 1233, 1234, 1230, 1231, 1243,
	0, 1213, 0, 0, 0, 0, 0, 0, 1211, 1212,
	305, 306, 308, 307, 309, 310, 311, 312, 1244, 313,
	314, 0, 1242, 0, 0, 0, 1284, 1248, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 1297, 0, 326, 1304, 327, 1303,
	0, 1314, 328, 329, 330, 331, 332, 333, 334, 1250,
	1283, 1215, 335, 1344, 1345, 722, 0, 336, 337, 1290,
	0, 1271, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 4906, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280,
	1276, 1275, 1279, 365, 366, 367, 368, 369, 1307, 370,
	372, 1301, 1300, 1220, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 1292,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 1226, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 1315, 1316, 405, 1239, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 1299, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 1312, 1313, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 1322, 0,
	1249, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1285, 1286, 1289, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 1294, 1295, 0,
	1255, 0, 449, 450, 452, 1329, 1287, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 1323, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 1278, 1277, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 1217, 304, 1336, 523, 524,
	525, 526, 1240, 1288, 527, 1302, 530, 531, 0, 0,
	532, 0, 533, 1222, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 1317, 541, 542, 1227,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 1318, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 1298,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 1228, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1281, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 1296, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 1343, 653,
	654, 655, 656, 1319, 660, 661, 662, 663, 0, 664,
	665, 1214, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 1308, 1309, 1310, 1311,
	0, 686, 0, 675, 677, 678, 679, 680, 1320, 681,
	1321, 1238, 682, 683, 684, 685, 676, 687, 688, 0,
	1221, 689, 690, 692, 694, 695, 691, 693, 696, 1282,
	697, 0, 0, 698, 699, 700, 763, 1305, 1342, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 1218,
	0, 0, 0, 0, 0, 0, 1260, 1232, 1233, 1234,
	1230, 1231, 1243, 0, 1213, 0, 0, 0, 0, 0,
	0, 1211, 1212, 305, 306, 308, 307, 309, 310, 311,
	312, 1244, 313, 314, 0, 1242, 0, 0, 0, 1284,
	1248, 0, 0, 315, 0, 316, 317, 318, 1324, 319,
	320, 321, 322, 323, 324, 325, 715, 1297, 0, 326,
	1304, 327, 1303, 0, 1314, 328, 329, 330, 331, 332,
	333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0,
	336, 337, 1290, 0, 1271, 0, 338, 339, 340, 341,
	342, 343, 344, 345, 0, 0, 347, 348, 349, 346,
	350, 0, 351, 0, 352, 353, 354, 355, 356, 357,
	358, 0, 359, 360, 361, 1325, 362, 363, 364, 1274,
	1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368,
	369, 1307, 370, 372, 1301, 1300, 1220, 375, 377, 371,
	373, 0, 376, 374, 378, 0, 379, 380, 381, 0,
	0, 382, 1292, 384, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 1226, 393, 394, 395, 397,
	399, 396, 398, 400, 401, 402, 403, 404, 1315, 1316,
	405, 1239, 302, 0, 0, 0, 0, 0, 406, 407,
	408, 1299, 0, 0, 0, 409, 0, 410, 411, 412,
	0, 413, 414, 0, 1326, 415, 416, 417, 1312, 1313,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 1322, 0, 1249, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1285, 1286, 1289, 528, 1328, 436, 437,
	438, 0, 439, 440, 441, 442, 443, 0, 0, 0,
	303, 444, 445, 446, 0, 1327, 737, 447, 529, 448,
	1294, 1295, 0, 1255, 0, 449, 450, 452, 1329, 1287,
	1330, 451, 453, 454, 1331, 455, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 0, 462, 464, 463, 0,
	466, 1323, 465, 1332, 467, 468, 1333, 0, 469, 470,
	471, 472, 473, 474, 477, 1278, 1277, 475, 476, 478,
	479, 0, 480, 481, 483, 486, 482, 484, 485, 487,
	500, 501, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 503, 0, 502, 1334, 504, 505,
	506, 507, 508, 515, 517, 518, 513, 514, 516, 519,
	520, 522, 510, 511, 512, 1335, 521, 509, 1217, 304,
	1336, 523, 524, 525, 526, 1240, 1288, 527, 1302, 530,
	531, 0, 0, 532, 0, 533, 1222, 0, 535, 536,
	537, 0, 0, 538, 539, 745, 1337, 540, 1338, 1317,
	541, 542, 1227, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 0, 553, 554, 747, 555, 556, 557,
	748, 558, 559, 560, 1318, 561, 750, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 1298, 575, 576, 578, 577, 579, 0, 580,
	0, 581, 582, 583, 0, 0, 0, 0, 0, 584,
	585, 587, 0, 588, 589, 590, 591, 586, 592, 593,
	594, 595, 596, 597, 0, 599, 600, 598, 601, 602,
	1339, 603, 604, 605, 606, 607, 1228, 608, 0, 609,
	610, 617, 618, 619, 611, 612, 613, 620, 621, 622,
	623, 624, 625, 0, 627, 628, 626, 629, 630, 631,
	1281, 632, 753, 633, 614, 615, 634, 635, 1340, 636,
	637, 638, 639, 640, 641, 642, 1296, 0, 643, 0,
	644, 645, 646, 647, 648, 649, 651, 616, 652, 657,
	658, 1343, 653, 654, 655, 656, 1319, 660, 661, 662,
	663, 0, 664, 665, 1214, 659, 650, 0, 666, 667,
	668, 669, 670, 671, 0, 672, 673, 0, 674, 1308,
	1309, 1310, 1311, 0, 686, 0, 675, 677, 678, 679,
	680, 1320, 681, 1321, 1238, 682, 683, 684, 685, 676,
	687, 688, 0, 1221, 689, 690, 692, 694, 695, 691,
	693, 696, 1282, 697, 0, 0, 698, 699, 700, 763,
	1305, 1342, 0, 702, 701, 703, 704, 705, 766, 706,
	707, 708, 0, 0, 0, 0, 709, 710, 767, 711,
	712, 713, 1218, 0, 0, 0, 0, 0, 0, 1260,
	1232, 1233, 1234, 1230, 1231, 1243, 0, 1213, 0, 0,
	0, 0, 0, 0, 1211, 1212, 305, 306, 308, 307,
	309, 310, 311, 312, 1244, 313, 314, 0, 1242, 0,
	0, 0, 1284, 1248, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	1297, 0, 326, 1304, 327, 1303, 0, 1314, 328, 329,
	330, 331, 332, 333, 334, 1250, 1283, 1215, 335, 1344,
	1345, 722, 0, 336, 337, 1290, 0, 1271, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365,
	366, 367, 368, 369, 1307, 370, 372, 1301, 1300, 1220,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 1292, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 1226, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 1315, 1316, 405, 1239, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 1299, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 1312, 1313, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 1322, 0, 1249, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1285, 1286, 1289, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 1327, 737,
	447, 529, 448, 1294, 1295, 0, 1255, 0, 449, 450,
	452, 1329, 1287, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 1323, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 1278, 1277,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 1217, 4451, 1336, 523, 524, 525, 526, 1240, 1288,
	527, 1302, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 1337,
	540, 1338, 1317, 541, 542, 1227, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 1318, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 1298, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 1228,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 1281, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 1296,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 1343, 653, 654, 655, 656, 1319,
	660, 661, 662, 663, 0, 664, 665, 1214, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 1308, 1309, 1310, 1311, 0, 686, 0, 675,
	677, 678, 679, 680, 1320, 681, 1321, 1238, 682, 683,
	684, 685, 676, 687, 688, 0, 1221, 689, 690, 692,
	694, 695, 691, 693, 696, 1282, 697, 0, 0, 698,
	699, 700, 763, 1305, 1342, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 1218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 0, 0, 0, 0, 1211, 1212, 2132,
	1260, 1232, 1233, 1234, 1230, 1231, 1243, 1244, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 305, 306, 308,
	307, 309, 310, 311, 312, 0, 313, 314, 0, 0,
	0, 0, 0, 1284, 1248, 0, 0, 315, 0, 316,
	317, 318, 1324, 319, 320, 321, 322, 323, 324, 325,
	715, 1297, 0, 326, 1304, 327, 1303, 0, 1314, 328,
	329, 330, 331, 332, 333, 334, 1250, 1283, 1215, 335,
	1344, 1345, 722, 0, 336, 337, 1290, 0, 1271, 0,
	338, 339, 340, 341, 342, 343, 344, 345, 0, 0,
	347, 348, 349, 346, 350, 0, 351, 0, 352, 353,
	354, 355, 356, 357, 358, 0, 359, 360, 361, 1325,
	362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279,
	365, 366, 367, 368, 369, 1307, 370, 372, 1301, 1300,
	1220, 375, 377, 371, 373, 0, 376, 374, 378, 0,
	379, 380, 381, 0, 0, 382, 1292, 384, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 1226,
	393, 394, 395, 397, 399, 396, 398, 400, 401, 402,
	403, 404, 1315, 1316, 405, 1239, 302, 0, 0, 0,
	0, 0, 406, 407, 408, 1299, 0, 0, 0, 409,
	0, 410, 411, 412, 0, 413, 414, 0, 1326, 415,
	416, 417, 1312, 1313, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 1322, 0, 1249, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1285, 1286, 1289,
	528, 1328, 436, 437, 438, 0, 439, 440, 441, 442,
	443, 0, 0, 0, 303, 444, 445, 446, 0, 1327,
	737, 447, 529, 448, 1294, 1295, 0, 1255, 0, 449,
	450, 452, 1329, 1287, 1330, 451, 453, 454, 1331, 455,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 0,
	462, 464, 463, 0, 466, 1323, 465, 1332, 467, 468,
	1333, 0, 469, 470, 471, 472, 473, 474, 477, 1278,
	1277, 475, 476, 478, 479, 0, 480, 481, 483, 486,
	482, 484, 485, 487, 500, 501, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 503, 0,
	502, 1334, 504, 505, 506, 507, 508, 515, 517, 518,
	513, 514, 516, 519, 520, 522, 510, 511, 512, 1335,
	521, 509, 1217, 304, 1336, 523, 524, 525, 526, 1240,
	1288, 527, 1302, 530, 531, 0, 0, 532, 0, 533,
	0, 0, 535, 536, 537, 0, 0, 538, 539, 745,
	1337, 540, 1338, 1317, 541, 542, 1227, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 0, 553, 554,
	747, 555, 556, 557, 748, 558, 559, 560, 1318, 561,
	750, 562, 563, 0, 564, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 1298, 575, 576, 578,
	577, 579, 0, 580, 0, 581, 582, 583, 0, 0,
	0, 0, 0, 584, 585, 587, 0, 588, 589, 590,
	591, 586, 592, 593, 594, 595, 596, 597, 0, 599,
	600, 598, 601, 602, 1339, 603, 604, 605, 606, 607,
	1228, 608, 0, 609, 610, 617, 618, 619, 611, 612,
	613, 620, 621, 622, 623, 624, 625, 0, 627, 628,
	626, 629, 630, 631, 1281, 632, 753, 633, 614, 615,
	634, 635, 1340, 636, 637, 638, 639, 640, 641, 642,
	1296, 0, 643, 0, 644, 645, 646, 647, 648, 649,
	651, 616, 652, 657, 658, 1343, 653, 654, 655, 656,
	1319, 660, 661, 662, 663, 0, 664, 665, 1214, 659,
	650, 0, 666, 667, 668, 669, 670, 671, 0, 672,
	673, 0, 674, 1308, 1309, 1310, 1311, 0, 686, 0,
	675, 677, 678, 679, 680, 1320, 681, 1321, 1238, 682,
	683, 684, 685, 676, 687, 688, 0, 1221, 689, 690,
	692, 694, 695, 691, 693, 696, 1282, 697, 0, 0,
	698, 699, 700, 763, 1305, 1342, 0, 702, 701, 703,
	704, 705, 766, 706, 707, 708, 0, 0, 0, 0,
	709, 710, 767, 711, 712, 713, 1218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1213, 0, 0, 0, 0, 0, 0, 1211, 1212,
	2132, 1260, 1232, 1233, 1234, 1230, 1231, 1243, 1244, 0,
	0, 0, 1242, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 1284, 1248, 0, 0, 315, 0,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 1297, 0, 326, 1304, 327, 1303, 0, 1314,
	328, 329, 330, 331, 332, 333, 334, 1250, 1283, 1215,
	335, 1344, 1345, 722, 0, 336, 337, 1290, 0, 1271,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	1325, 362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275,
	1279, 365, 366, 367, 368, 369, 1307, 370, 372, 1301,
	1300, 1220, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 1292, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	1226, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 1315, 1316, 405, 1239, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 1299, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 1326,
	415, 416, 417, 1312, 1313, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 1322, 0, 1249, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1285, 1286,
	1289, 528, 1328, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	1327, 737, 447, 529, 448, 1294, 1295, 0, 1255, 0,
	449, 450, 452, 1329, 1287, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 1323, 465, 1332, 467,
	468, 1333, 0, 469, 470, 471, 472, 473, 474, 477,
	1278, 1277, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 1217, 304, 1336, 523, 524, 525, 526,
	1240, 1288, 527, 1302, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 1337, 540, 1338, 1317, 541, 542, 1227, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 1318,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 1298, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 1228, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 1281, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 1296, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 1343, 653, 654, 655,
	656, 1319, 660, 661, 662, 663, 0, 664, 665, 1214,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 1308, 1309, 1310, 1311, 0, 686,
	0, 675, 677, 678, 679, 680, 1320, 681, 1321, 1238,
	682, 683, 684, 685, 676, 687, 688, 0, 1221, 689,
	690, 692, 694, 695, 691, 693, 696, 1282, 697, 0,
	0, 698, 699, 700, 763, 1305, 1342, 4108, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 0, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 1218, 0, 0,
	0, 0, 0, 0, 1260, 1232, 1233, 1234, 1230, 1231,
	1243, 0, 1213, 0, 0, 0, 0, 0, 0, 1211,
	1212, 305, 306, 308, 307, 309, 310, 311, 312, 1244,
	313, 314, 0, 1242, 0, 0, 0, 1284, 1248, 0,
	0, 315, 0, 316, 317, 318, 1324, 319, 320, 321,
	322, 323, 324, 325, 715, 1297, 0, 326, 1304, 327,
	1303, 0, 1314, 328, 329, 330, 331, 332, 333, 334,
	1250, 1283, 1215, 335, 1344, 1345, 722, 0, 336, 337,
	1290, 0, 1271, 0, 338, 339, 340, 341, 342, 343,
	344, 345, 0, 0, 347, 348, 349, 346, 350, 0,
	351, 0, 352, 353, 354, 355, 356, 357, 358, 0,
	359, 360, 361, 1325, 362, 363, 364, 1274, 1272, 1273,
	1280, 1276, 1275, 1279, 365, 366, 367, 368, 369, 1307,
	370, 372, 1301, 1300, 1220, 375, 377, 371, 373, 0,
	376, 374, 378, 0, 379, 380, 381, 0, 0, 382,
	1292, 384, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 1226, 393, 394, 395, 397, 399, 396,
	398, 400, 401, 402, 403, 404, 1315, 1316, 405, 1239,
	302, 0, 0, 0, 0, 0, 406, 407, 408, 1299,
	0, 0, 0, 409, 0, 410, 411, 412, 0, 413,
	414, 2977, 1326, 415, 416, 417, 1312, 1313, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 1322,
	0, 1249, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1285, 1286, 1289, 528, 1328, 436, 437, 438, 0,
	439, 440, 441, 442, 443, 0, 0, 0, 303, 444,
	445, 446, 0, 1327, 737, 447, 529, 448, 1294, 1295,
	0, 1255, 0, 449, 450, 452, 1329, 1287, 1330, 451,
	453, 454, 1331, 455, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 0, 462, 464, 463, 0, 466, 1323,
	465, 1332, 467, 468, 1333, 0, 469, 470, 471, 472,
	473, 474, 477, 1278, 1277, 475, 476, 478, 479, 0,
	480, 481, 483, 486, 482, 484, 485, 487, 500, 501,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 503, 0, 502, 1334, 504, 505, 506, 507,
	508, 515, 517, 518, 513, 514, 516, 519, 520, 522,
	510, 511, 512, 1335, 521, 509, 1217, 304, 1336, 523,
	524, 525, 526, 1240, 1288, 527, 1302, 530, 531, 0,
	0, 532, 0, 533, 0, 0, 535, 536, 537, 0,
	0, 538, 539, 745, 1337, 540, 1338, 1317, 541, 542,
	1227, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 0, 553, 554, 747, 555, 556, 557, 748, 558,
	559, 560, 1318, 561, 750, 562, 563, 0, 564, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	1298, 575, 576, 578, 577, 579, 0, 580, 0, 581,
	582, 583, 0, 0, 0, 0, 0, 584, 585, 587,
	0, 588, 589, 590, 591, 586, 592, 593, 594, 595,
	596, 597, 0, 599, 600, 598, 601, 602, 1339, 603,
	604, 605, 606, 607, 1228, 608, 0, 609, 610, 617,
	618, 619, 611, 612, 613, 620, 621, 622, 623, 624,
	625, 0, 627, 628, 626, 629, 630, 631, 1281, 632,
	753, 633, 614, 615, 634, 635, 1340, 636, 637, 638,
	639, 640, 641, 642, 1296, 0, 643, 0, 644, 645,
	646, 647, 648, 649, 651, 616, 652, 657, 658, 1343,
	653, 654, 655, 656, 1319, 660, 661, 662, 663, 0,
	664, 665, 1214, 659, 650, 0, 666, 667, 668, 669,
	670, 671, 0, 672, 673, 0, 674, 1308, 1309, 1310,
	1311, 0, 686, 0, 675, 677, 678, 679, 680, 1320,
	681, 1321, 1238, 682, 683, 684, 685, 676, 687, 688,
	0, 1221, 689, 690, 692, 694, 695, 691, 693, 696,
	1282, 697, 0, 0, 698, 699, 700, 763, 1305, 1342,
	0, 702, 701, 703, 704, 705, 766, 706, 707, 708,
	0, 0, 0, 0, 709, 710, 767, 711, 712, 713,
	1218, 0, 0, 0, 0, 0, 0, 1260, 1232, 1233,
	1234, 1230, 1231, 1243, 0, 1213, 0, 0, 0, 0,
	0, 0, 1211, 1212, 305, 306, 308, 307, 309, 310,
	311, 312, 1244, 313, 314, 0, 1242, 0, 0, 0,
	1284, 1248, 0, 0, 315, 0, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 1297, 0,
	326, 1304, 327, 1303, 0, 1314, 328, 329, 330, 331,
	332, 333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722,
	0, 336, 337, 1290, 0, 1271, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 1325, 362, 363, 364,
	1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367,
	368, 369, 1307, 370, 372, 1301, 1300, 1220, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 1292, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 1226, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 1315,
	1316, 405, 1239, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 1299, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 1326, 415, 416, 417, 1312,
	1313, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 1322, 0, 1249, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1285, 1286, 1289, 528, 1328, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 1327, 737, 447, 529,
	448, 1294, 1295, 0, 1255, 0, 449, 450, 452, 1329,
	1287, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 1323, 465, 1332, 467, 468, 1333, 0, 469,
	470, 471, 472, 473, 474, 477, 1278, 1277, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 1217,
	304, 1336, 523, 524, 525, 526, 1240, 1288, 527, 1302,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 1337, 540, 1338,
	1317, 541, 542, 1227, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 1318, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 1298, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 1228, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 1281, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 1296, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 1343, 653, 654, 655, 656, 1319, 660, 661,
	662, 663, 0, 664, 665, 1214, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	1308, 1309, 1310, 1311, 0, 686, 0, 675, 677, 678,
	679, 680, 1320, 681, 1321, 1238, 682, 683, 684, 685,
	676, 687, 688, 0, 1221, 689, 690, 692, 694, 695,
	691, 693, 696, 1282, 697, 0, 0, 698, 699, 700,
	763, 1305, 1342, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 1218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1213, 0,
	0, 0, 0, 0, 0, 1211, 1212, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 2060, 0, 2982, 1242,
	1260, 1232, 1233, 1234, 1230, 1231, 1243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 308,
	307, 309, 310, 311, 312, 0, 313, 314, 0, 0,
	0, 0, 0, 1284, 1248, 0, 0, 315, 0, 316,
	317, 318, 1324, 319, 320, 321, 322, 323, 324, 325,
	715, 1297, 0, 326, 1304, 327, 1303, 0, 1314, 328,
	329, 330, 331, 332, 333, 334, 1250, 1283, 1215, 335,
	1344, 1345, 722, 0, 336, 337, 1290, 0, 1271, 0,
	338, 339, 340, 341, 342, 343, 344, 345, 0, 0,
	347, 348, 349, 346, 350, 0, 351, 0, 352, 353,
	354, 355, 356, 357, 358, 0, 359, 360, 361, 1325,
	362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279,
	365, 366, 367, 368, 369, 1307, 370, 372, 1301, 1300,
	1220, 375, 377, 371, 373, 0, 376, 374, 378, 0,
	379, 380, 381, 0, 0, 382, 1292, 384, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 1226,
	393, 394, 395, 397, 399, 396, 398, 400, 401, 402,
	403, 404, 1315, 1316, 405, 1239, 302, 0, 0, 0,
	0, 0, 406, 407, 408, 1299, 0, 0, 0, 409,
	0, 410, 411, 412, 0, 413, 414, 0, 1326, 415,
	416, 417, 1312, 1313, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 1322, 0, 1249, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1285, 1286, 1289,
	528, 1328, 436, 437, 438, 0, 439, 440, 441, 442,
	443, 0, 0, 0, 303, 444, 445, 446, 0, 1327,
	737, 447, 529, 448, 1294, 1295, 0, 1255, 0, 449,
	450, 452, 1329, 1287, 1330, 451, 453, 454, 1331, 455,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 0,
	462, 464, 463, 0, 466, 1323, 465, 1332, 467, 468,
	1333, 0, 469, 470, 471, 472, 473, 474, 477, 1278,
	1277, 475, 476, 478, 479, 0, 480, 481, 483, 486,
	482, 484, 485, 487, 500, 501, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 503, 0,
	502, 1334, 504, 505, 506, 507, 508, 515, 517, 518,
	513, 514, 516, 519, 520, 522, 510, 511, 512, 1335,
	521, 509, 1217, 304, 1336, 523, 524, 525, 526, 1240,
	1288, 527, 1302, 530, 531, 0, 0, 532, 0, 533,
	0, 0, 535, 536, 537, 0, 0, 538, 539, 745,
	1337, 540, 1338, 1317, 541, 542, 1227, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 0, 553, 554,
	747, 555, 556, 557, 748, 558, 559, 560, 1318, 561,
	750, 562, 563, 0, 564, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 1298, 575, 576, 578,
	577, 579, 0, 580, 0, 581, 582, 583, 0, 0,
	0, 0, 0, 584, 585, 587, 0, 588, 589, 590,
	591, 586, 592, 593, 594, 595, 596, 597, 0, 599,
	600, 598, 601, 602, 1339, 603, 604, 605, 606, 607,
	1228, 608, 0, 609, 610, 617, 618, 619, 611, 612,
	613, 620, 621, 622, 623, 624, 625, 0, 627, 628,
	626, 629, 630, 631, 1281, 632, 753, 633, 614, 615,
	634, 635, 1340, 636, 637, 638, 639, 640, 641, 642,
	1296, 0, 643, 0, 644, 645, 646, 647, 648, 649,
	651, 616, 652, 657, 658, 1343, 653, 654, 655, 656,
	1319, 660, 661, 662, 663, 0, 664, 665, 1214, 659,
	650, 0, 666, 667, 668, 669, 670, 671, 0, 672,
	673, 0, 674, 1308, 1309, 1310, 1311, 0, 686, 0,
	675, 677, 678, 679, 680, 1320, 681, 1321, 1238, 682,
	683, 684, 685, 676, 687, 688, 0, 1221, 689, 690,
	692, 694, 695, 691, 693, 696, 1282, 697, 0, 0,
	698, 699, 700, 763, 1305, 1342, 0, 702, 701, 703,
	704, 705, 766, 706, 707, 708, 0, 0, 0, 0,
	709, 710, 767, 711, 712, 713, 1218, 0, 0, 0,
	0, 2980, 0, 1260, 1232, 1233, 1234, 1230, 1231, 1243,
	0, 1213, 0, 0, 0, 0, 0, 0, 1211, 1212,
	305, 306, 308, 307, 309, 310, 311, 312, 1244, 313,
	314, 0, 1242, 0, 0, 0, 1284, 1248, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 1297, 0, 326, 1304, 327, 1303,
	0, 1314, 328, 329, 330, 331, 332, 333, 334, 1250,
	1283, 1215, 335, 1344, 1345, 722, 0, 336, 337, 1290,
	0, 1271, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280,
	1276, 1275, 1279, 365, 366, 367, 368, 369, 1307, 370,
	372, 1301, 1300, 1220, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 1292,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 1226, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 1315, 1316, 405, 1239, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 1299, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 1312, 1313, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 1322, 0,
	1249, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1285, 1286, 1289, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 1294, 1295, 0,
	1255, 0, 449, 450, 452, 1329, 1287, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 1323, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 1278, 1277, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 1217, 304, 1336, 523, 524,
	525, 526, 1240, 1288, 527, 1302, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 1317, 541, 542, 1227,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 1318, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 1298,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 1228, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1281, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 1296, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 1343, 653,
	654, 655, 656, 1319, 660, 661, 662, 663, 0, 664,
	665, 1214, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 1308, 1309, 1310, 1311,
	0, 686, 0, 675, 677, 678, 679, 680, 1320, 681,
	1321, 1238, 682, 683, 684, 685, 676, 687, 688, 0,
	1221, 689, 690, 692, 694, 695, 691, 693, 696, 1282,
	697, 0, 0, 698, 699, 700, 763, 1305, 1342, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 1218,
	0, 0, 0, 0, 2968, 0, 1260, 1232, 1233, 1234,
	1230, 1231, 1243, 0, 1213, 0, 0, 0, 0, 0,
	0, 1211, 1212, 305, 306, 308, 307, 309, 310, 311,
	312, 1244, 313, 314, 0, 1242, 0, 0, 0, 1284,
	1248, 0, 0, 315, 0, 316, 317, 318, 1324, 319,
	320, 321, 322, 323, 324, 325, 715, 1297, 0, 326,
	1304, 327, 1303, 0, 1314, 328, 329, 330, 331, 332,
	333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0,
	336, 337, 1290, 0, 1271, 0, 338, 339, 340, 341,
	342, 343, 344, 345, 0, 0, 347, 348, 349, 346,
	350, 0, 351, 0, 352, 353, 354, 355, 356, 357,
	358, 0, 359, 360, 361, 1325, 362, 363, 364, 1274,
	1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368,
	369, 1307, 370, 372, 1301, 1300, 1220, 375, 377, 371,
	373, 0, 376, 374, 378, 0, 379, 380, 381, 0,
	0, 382, 1292, 384, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 1226, 393, 394, 395, 397,
	399, 396, 398, 400, 401, 402, 403, 404, 1315, 1316,
	405, 1239, 302, 0, 0, 0, 0, 0, 406, 407,
	408, 1299, 0, 0, 0, 409, 0, 410, 411, 412,
	0, 413, 414, 0, 1326, 415, 416, 417, 1312, 1313,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 1322, 0, 1249, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1285, 1286, 1289, 528, 1328, 436, 437,
	438, 0, 439, 440, 441, 442, 443, 0, 0, 0,
	303, 444, 445, 446, 0, 1327, 737, 447, 529, 448,
	1294, 1295, 0, 1255, 0, 449, 450, 452, 1329, 1287,
	1330, 451, 453, 454, 1331, 455, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 0, 462, 464, 463, 0,
	466, 1323, 465, 1332, 467, 468, 1333, 0, 469, 470,
	471, 472, 473, 474, 477, 1278, 1277, 475, 476, 478,
	479, 0, 480, 481, 483, 486, 482, 484, 485, 487,
	500, 501, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 503, 0, 502, 1334, 504, 505,
	506, 507, 508, 515, 517, 518, 513, 514, 516, 519,
	520, 522, 510, 511, 512, 1335, 521, 509, 1217, 304,
	1336, 523, 524, 525, 526, 1240, 1288, 527, 1302, 530,
	531, 0, 0, 532, 0, 533, 0, 0, 535, 536,
	537, 0, 0, 538, 539, 745, 1337, 540, 1338, 1317,
	541, 542, 1227, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 0, 553, 554, 747, 555, 556, 557,
	748, 558, 559, 560, 1318, 561, 750, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 1298, 575, 576, 578, 577, 579, 0, 580,
	0, 581, 582, 583, 0, 0, 0, 0, 0, 584,
	585, 587, 0, 588, 589, 590, 591, 586, 592, 593,
	594, 595, 596, 597, 0, 599, 600, 598, 601, 602,
	1339, 603, 604, 605, 606, 607, 1228, 608, 0, 609,
	610, 617, 618, 619, 611, 612, 613, 620, 621, 622,
	623, 624, 625, 0, 627, 628, 626, 629, 630, 631,
	1281, 632, 753, 633, 614, 615, 634, 635, 1340, 636,
	637, 638, 639, 640, 641, 642, 1296, 0, 643, 0,
	644, 645, 646, 647, 648, 649, 651, 616, 652, 657,
	658, 1343, 653, 654, 655, 656, 1319, 660, 661, 662,
	663, 0, 664, 665, 1214, 659, 650, 0, 666, 667,
	668, 669, 670, 671, 0, 672, 673, 0, 674, 1308,
	1309, 1310, 1311, 0, 686, 0, 675, 677, 678, 679,
	680, 1320, 681, 1321, 1238, 682, 683, 684, 685, 676,
	687, 688, 0, 1221, 689, 690, 692, 694, 695, 691,
	693, 696, 1282, 697, 0, 0, 698, 699, 700, 763,
	1305, 1342, 0, 702, 701, 703, 704, 705, 766, 706,
	707, 708, 0, 0, 0, 0, 709, 710, 767, 711,
	712, 713, 1218, 0, 0, 0, 0, 2957, 0, 1260,
	1232, 1233, 1234, 1230, 1231, 1243, 0, 1213, 0, 0,
	0, 0, 0, 0, 1211, 1212, 305, 306, 308, 307,
	309, 310, 311, 312, 1244, 313, 314, 0, 1242, 0,
	0, 0, 1284, 1248, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	1297, 0, 326, 1304, 327, 1303, 0, 1314, 328, 329,
	330, 331, 332, 333, 334, 1250, 1283, 1215, 335, 1344,
	1345, 722, 0, 336, 337, 1290, 0, 1271, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365,
	366, 367, 368, 369, 1307, 370, 372, 1301, 1300, 1220,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 1292, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 1226, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 1315, 1316, 405, 1239, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 1299, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 1312, 1313, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 1322, 0, 1249, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1285, 1286, 1289, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 1327, 737,
	447, 529, 448, 1294, 1295, 0, 1255, 0, 449, 450,
	452, 1329, 1287, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 1323, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 1278, 1277,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 1217, 304, 1336, 523, 524, 525, 526, 1240, 1288,
	527, 1302, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 1337,
	540, 1338, 1317, 541, 542, 1227, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 1318, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 1298, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 1228,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 1281, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 1296,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 1343, 653, 654, 655, 656, 1319,
	660, 661, 662, 663, 0, 664, 665, 1214, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 1308, 1309, 1310, 1311, 0, 686, 0, 675,
	677, 678, 679, 680, 1320, 681, 1321, 1238, 682, 683,
	684, 685, 676, 687, 688, 0, 1221, 689, 690, 692,
	694, 695, 691, 693, 696, 1282, 697, 0, 0, 698,
	699, 700, 763, 1305, 1342, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 1218, 0, 0, 0, 0,
	2955, 0, 2946, 2953, 1233, 1234, 1230, 1231, 1243, 0,
	1213, 0, 0, 0, 0, 0, 0, 1211, 1212, 305,
	306, 308, 307, 309, 310, 311, 312, 1244, 313, 314,
	0, 1242, 0, 0, 0, 1284, 1248, 0, 0, 315,
	0, 316, 317, 318, 1324, 319, 320, 321, 322, 323,
	324, 325, 715, 1297, 0, 326, 1304, 327, 1303, 0,
	1314, 328, 329, 330, 331, 332, 333, 334, 1250, 1283,
	1215, 335, 1344, 1345, 722, 0, 336, 337, 1290, 0,
	1271, 0, 338, 339, 340, 341, 342, 343, 344, 345,
	0, 0, 347, 348, 349, 346, 350, 0, 351, 0,
	352, 353, 354, 355, 356, 357, 358, 0, 359, 360,
	361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280, 1276,
	1275, 1279, 365, 366, 367, 368, 369, 1307, 2949, 372,
	1301, 1300, 1220, 375, 377, 371, 373, 0, 376, 374,
	378, 0, 379, 380, 381, 0, 0, 382, 1292, 384,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 1226, 393, 394, 395, 397, 399, 396, 398, 400,
	401, 402, 403, 404, 1315, 1316, 405, 1239, 302, 0,
	0, 0, 0, 0, 406, 407, 408, 1299, 0, 0,
	0, 409, 0, 410, 411, 412, 0, 413, 414, 0,
	1326, 415, 416, 417, 1312, 1313, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 1322, 0, 1249,
	428, 0, 429, 430, 431, 432, 433, 2950, 435, 1285,
	1286, 1289, 528, 1328, 436, 437, 438, 0, 439, 440,
	441, 442, 443, 0, 0, 0, 303, 444, 445, 446,
	0, 1327, 737, 447, 529, 448, 1294, 1295, 0, 1255,
	0, 449, 450, 452, 1329, 1287, 1330, 451, 453, 454,
	1331, 455, 0, 0, 0, 456, 457, 458, 459, 460,
	461, 0, 462, 464, 463, 0, 466, 1323, 465, 1332,
	467, 468, 1333, 0, 469, 470, 471, 472, 473, 474,
	477, 1278, 1277, 475, 476, 478, 479, 0, 480, 481,
	483, 486, 482, 484, 2951, 487, 2948, 501, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	503, 0, 502, 1334, 504, 505, 506, 507, 508, 515,
	517, 518, 513, 514, 516, 519, 520, 522, 510, 511,
	512, 1335, 521, 509, 1217, 304, 1336, 523, 524, 525,
	526, 1240, 1288, 527, 1302, 530, 531, 0, 0, 532,
	0, 533, 0, 0, 535, 536, 537, 0, 0, 538,
	539, 745, 1337, 540, 1338, 1317, 541, 542, 1227, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 0,
	553, 554, 747, 555, 556, 557, 748, 558, 559, 560,
	1318, 561, 750, 562, 563, 0, 564, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 574, 1298, 575,
	576, 578, 577, 579, 0, 580, 0, 581, 582, 583,
	0, 0, 0, 0, 0, 584, 585, 587, 0, 588,
	589, 590, 591, 586, 592, 593, 594, 595, 596, 597,
	0, 599, 600, 598, 601, 602, 1339, 603, 604, 605,
	606, 607, 1228, 608, 0, 609, 610, 617, 618, 619,
	611, 612, 613, 620, 621, 622, 623, 2952, 625, 0,
	627, 628, 626, 629, 630, 631, 1281, 632, 753, 633,
	614, 615, 634, 635, 1340, 636, 637, 638, 639, 640,
	641, 642, 1296, 0, 643, 0, 644, 645, 646, 647,
	648, 649, 651, 616, 652, 657, 658, 1343, 653, 654,
	655, 656, 1319, 660, 661, 662, 663, 0, 664, 665,
	1214, 659, 650, 0, 666, 667, 668, 669, 670, 671,
	0, 672, 673, 0, 674, 1308, 1309, 1310, 1311, 0,
	686, 0, 675, 677, 678, 679, 680, 1320, 681, 1321,
	1238, 682, 683, 684, 685, 676, 687, 688, 0, 1221,
	689, 690, 692, 694, 695, 691, 693, 696, 1282, 697,
	0, 0, 698, 699, 700, 763, 1305, 1342, 0, 702,
	701, 703, 704, 705, 766, 706, 707, 708, 0, 0,
	0, 0, 709, 710, 767, 711, 2947, 713, 1218, 0,
	0, 0, 0, 2943, 0, 2946, 2953, 1233, 1234, 1230,
	1231, 1243, 0, 1213, 0, 0, 0, 0, 0, 0,
	1211, 1212, 305, 306, 308, 307, 309, 310, 311, 312,
	1244, 313, 314, 0, 1242, 0, 0, 0, 1284, 1248,
	0, 0, 315, 0, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 1297, 0, 326, 1304,
	327, 1303, 0, 1314, 328, 329, 330, 331, 332, 333,
	334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0, 336,
	337, 1290, 0, 1271, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 1325, 362, 363, 364, 1274, 1272,
	1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368, 369,
	1307, 2949, 372, 1301, 1300, 1220, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 1292, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 1226, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 1315, 1316, 405,
	1239, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	1299, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 1326, 415, 416, 417, 1312, 1313, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	1322, 0, 1249, 428, 0, 429, 430, 431, 432, 433,
	2950, 435, 1285, 1286, 1289, 528, 1328, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 1327, 737, 447, 529, 448, 1294,
	1295, 0, 1255, 0, 449, 450, 452, 1329, 1287, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	1323, 465, 1332, 467, 468, 1333, 0, 469, 470, 471,
	472, 473, 474, 477, 1278, 1277, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 2951, 487, 2948,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 1217, 304, 1336,
	523, 524, 525, 526, 1240, 1288, 527, 1302, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 1337, 540, 1338, 1317, 541,
	542, 1227, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 1318, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 1298, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 1228, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	2952, 625, 0, 627, 628, 626, 629, 630, 631, 1281,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 1296, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	1343, 653, 654, 655, 656, 1319, 660, 661, 662, 663,
	0, 664, 665, 1214, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 1308, 1309,
	1310, 1311, 0, 686, 0, 675, 677, 678, 679, 680,
	1320, 681, 1321, 1238, 682, 683, 684, 685, 676, 687,
	688, 0, 1221, 689, 690, 692, 694, 695, 691, 693,
	696, 1282, 697, 0, 0, 698, 699, 700, 763, 1305,
	1342, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 0, 0, 0, 0, 709, 710, 767, 711, 2947,
	713, 1218, 0, 0, 0, 0, 0, 0, 1260, 1232,
	1233, 1234, 1230, 1231, 1243, 0, 1213, 0, 0, 0,
	0, 0, 0, 1211, 1212, 305, 306, 308, 307, 309,
	310, 311, 312, 1244, 313, 314, 0, 1242, 0, 0,
	0, 1284, 1248, 0, 0, 315, 0, 316, 317, 318,
	1324, 319, 320, 321, 322, 323, 324, 325, 715, 1297,
	0, 326, 1304, 327, 1303, 0, 1314, 328, 329, 330,
	331, 332, 333, 334, 1250, 1283, 1215, 335, 1344, 1345,
	722, 0, 336, 337, 1290, 0, 1271, 0, 338, 339,
	340, 341, 342, 343, 344, 345, 0, 0, 347, 348,
	349, 346, 350, 0, 351, 0, 352, 353, 354, 355,
	356, 357, 358, 0, 359, 360, 361, 1325, 362, 363,
	364, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366,
	367, 368, 369, 1307, 370, 372, 1301, 1300, 1220, 375,
	377, 371, 373, 0, 376, 374, 378, 0, 379, 380,
	381, 0, 0, 382, 1292, 384, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 1226, 393, 394,
	395, 397, 399, 396, 398, 400, 401, 402, 403, 404,
	1315, 1316, 405, 1239, 302, 0, 0, 0, 0, 0,
	406, 407, 408, 1299, 0, 0, 0, 409, 0, 410,
	411, 412, 0, 413, 414, 0, 1326, 415, 416, 417,
	1312, 1313, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 1322, 0, 1249, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1285, 1286, 1289, 528, 1328,
	436, 437, 438, 0, 439, 440, 441, 442, 443, 0,
	0, 0, 303, 444, 445, 446, 0, 1327, 737, 447,
	529, 448, 1294, 1295, 0, 1255, 0, 449, 450, 452,
	1329, 1287, 1330, 451, 453, 454, 1331, 455, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 0, 462, 464,
	463, 0, 466, 1323, 465, 1332, 467, 468, 1333, 0,
	469, 470, 471, 472, 473, 474, 477, 1278, 1277, 475,
	476, 478, 479, 0, 480, 481, 483, 486, 482, 484,
	485, 487, 500, 501, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 503, 0, 502, 1334,
	504, 505, 506, 507, 508, 515, 517, 518, 513, 514,
	516, 519, 520, 522, 510, 511, 512, 1335, 521, 509,
	1217, 304, 1336, 523, 524, 525, 526, 1240, 1288, 527,
	1302, 530, 531, 0, 0, 532, 0, 533, 0, 0,
	535, 536, 537, 0, 0, 538, 539, 745, 1337, 540,
	1338, 1317, 541, 542, 1227, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 0, 553, 554, 747, 555,
	556, 557, 748, 558, 559, 560, 1318, 561, 750, 562,
	563, 0, 564, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 574, 1298, 575, 576, 578, 577, 579,
	0, 580, 0, 581, 582, 583, 0, 0, 0, 0,
	0, 584, 585, 587, 0, 588, 589, 590, 591, 586,
	592, 593, 594, 595, 596, 597, 0, 599, 600, 598,
	601, 602, 1339, 603, 604, 605, 606, 607, 1228, 608,
	0, 609, 610, 617, 618, 619, 611, 612, 613, 620,
	621, 622, 623, 624, 625, 0, 627, 628, 626, 629,
	630, 631, 1281, 632, 753, 633, 614, 615, 634, 635,
	1340, 636, 637, 638, 639, 640, 641, 642, 1296, 0,
	643, 0, 644, 645, 646, 647, 648, 649, 651, 616,
	652, 657, 658, 1343, 653, 654, 655, 656, 1319, 660,
	661, 662, 663, 0, 664, 665, 1214, 659, 650, 0,
	666, 667, 668, 669, 670, 671, 0, 672, 673, 0,
	674, 1308, 1309, 1310, 1311, 0, 686, 0, 675, 677,
	678, 679, 680, 1320, 681, 1321, 1238, 682, 683, 684,
	685, 676, 687, 688, 0, 1221, 689, 690, 692, 694,
	695, 691, 693, 696, 1282, 697, 0, 0, 698, 699,
	700, 763, 1305, 1342, 0, 702, 701, 703, 704, 705,
	766, 706, 707, 708, 0, 0, 0, 0, 709, 710,
	767, 711, 712, 713, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1213,
	0, 0, 0, 0, 0, 0, 1211, 1212, 0, 0,
	0, 0, 0, 0, 2068, 0, 1244, 0, 0, 0,
	1242, 1260, 1232, 1233, 1234, 1230, 1231, 1243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 2696, 313, 314, 0,
	0, 0, 0, 0, 1284, 1248, 0, 0, 315, 0,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 1297, 0, 326, 1304, 327, 1303, 0, 1314,
	328, 329, 330, 331, 332, 333, 334, 1250, 1283, 1215,
	335, 1344, 1345, 722, 0, 336, 337, 1290, 0, 1271,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	1325, 362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275,
	1279, 365, 366, 367, 368, 369, 1307, 370, 372, 1301,
	1300, 1220, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 1292, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	1226, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 1315, 1316, 405, 1239, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 1299, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 1326,
	415, 416, 417, 1312, 1313, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 1322, 0, 1249, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1285, 1286,
	1289, 528, 1328, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	1327, 737, 447, 529, 448, 1294, 1295, 0, 1255, 0,
	449, 450, 452, 1329, 1287, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 1323, 465, 1332, 467,
	468, 1333, 0, 469, 470, 471, 472, 473, 474, 477,
	1278, 1277, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 1217, 304, 1336, 523, 524, 525, 526,
	1240, 1288, 527, 1302, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 1337, 540, 1338, 1317, 541, 542, 1227, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 1318,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 1298, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 1228, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 1281, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 1296, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 1343, 653, 654, 655,
	656, 1319, 660, 661, 662, 663, 0, 664, 665, 1214,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 1308, 1309, 1310, 1311, 0, 686,
	0, 675, 677, 678, 679, 680, 1320, 681, 1321, 1238,
	682, 683, 684, 685, 676, 687, 688, 0, 1221, 689,
	690, 692, 694, 695, 691, 693, 696, 1282, 697, 0,
	0, 698, 699, 700, 763, 1305, 1342, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 0, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 1218, 0, 0,
	0, 0, 2657, 0, 1260, 1232, 1233, 1234, 1230, 1231,
	1243, 0, 1213, 0, 0, 0, 0, 0, 0, 1211,
	1212, 305, 306, 308, 307, 309, 310, 311, 312, 1244,
	313, 314, 0, 1242, 0, 0, 0, 1284, 1248, 0,
	0, 315, 0, 316, 317, 318, 1324, 319, 320, 321,
	322, 323, 324, 325, 715, 1297, 0, 326, 1304, 327,
	1303, 0, 1314, 328, 329, 330, 331, 332, 333, 334,
	1250, 1283, 1215, 335, 1344, 1345, 722, 0, 336, 337,
	1290, 0, 1271, 0, 338, 339, 340, 341, 342, 343,
	344, 345, 0, 0, 347, 348, 349, 346, 350, 0,
	351, 0, 352, 353, 354, 355, 356, 357, 358, 0,
	359, 360, 361, 1325, 362, 363, 364, 1274, 1272, 1273,
	1280, 1276, 1275, 1279, 365, 366, 367, 368, 369, 1307,
	370, 372, 1301, 1300, 1220, 375, 377, 371, 373, 0,
	376, 374, 378, 0, 379, 380, 381, 0, 0, 382,
	1292, 384, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 1226, 393, 394, 395, 397, 399, 396,
	398, 400, 401, 402, 403, 404, 1315, 1316, 405, 1239,
	302, 0, 0, 0, 0, 0, 406, 407, 408, 1299,
	0, 0, 0, 409, 0, 410, 411, 412, 0, 413,
	414, 0, 1326, 415, 416, 417, 1312, 1313, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 1322,
	0, 1249, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1285, 1286, 1289, 528, 1328, 436, 437, 438, 0,
	439, 440, 441, 442, 443, 0, 0, 0, 303, 444,
	445, 446, 0, 1327, 737, 447, 529, 448, 1294, 1295,
	0, 1255, 0, 449, 450, 452, 1329, 1287, 1330, 451,
	453, 454, 1331, 455, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 0, 462, 464, 463, 0, 466, 1323,
	465, 1332, 467, 468, 1333, 0, 469, 470, 471, 472,
	473, 474, 477, 1278, 1277, 475, 476, 478, 479, 0,
	480, 481, 483, 486, 482, 484, 485, 487, 500, 501,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 503, 0, 502, 1334, 504, 505, 506, 507,
	508, 515, 517, 518, 513, 514, 516, 519, 520, 522,
	510, 511, 512, 1335, 521, 509, 1217, 304, 1336, 523,
	524, 525, 526, 1240, 1288, 527, 1302, 530, 531, 0,
	0, 532, 0, 533, 0, 0, 535, 536, 537, 0,
	0, 538, 539, 745, 1337, 540, 1338, 1317, 541, 542,
	1227, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 0, 553, 554, 747, 555, 556, 557, 748, 558,
	559, 560, 1318, 561, 750, 562, 563, 0, 564, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	1298, 575, 576, 578, 577, 579, 0, 580, 0, 581,
	582, 583, 0, 0, 0, 0, 0, 584, 585, 587,
	0, 588, 589, 590, 591, 586, 592, 593, 594, 595,
	596, 597, 0, 599, 600, 598, 601, 602, 1339, 603,
	604, 605, 606, 607, 1228, 608, 0, 609, 610, 617,
	618, 619, 611, 612, 613, 620, 621, 622, 623, 624,
	625, 0, 627, 628, 626, 629, 630, 631, 1281, 632,
	753, 633, 614, 615, 634, 635, 1340, 636, 637, 638,
	639, 640, 641, 642, 1296, 0, 643, 0, 644, 645,
	646, 647, 648, 649, 651, 616, 652, 657, 658, 1343,
	653, 654, 655, 656, 1319, 660, 661, 662, 663, 0,
	664, 665, 1214, 659, 650, 0, 666, 667, 668, 669,
	670, 671, 0, 672, 673, 0, 674, 1308, 1309, 1310,
	1311, 0, 686, 0, 675, 677, 678, 679, 680, 1320,
	681, 1321, 1238, 682, 683, 684, 685, 676, 687, 688,
	0, 1221, 689, 690, 692, 694, 695, 691, 693, 696,
	1282, 697, 0, 0, 698, 699, 700, 763, 1305, 1342,
	0, 702, 701, 703, 704, 705, 766, 706, 707, 708,
	0, 0, 0, 0, 709, 710, 767, 711, 712, 713,
	1218, 0, 0, 0, 0, 2627, 0, 1260, 1232, 1233,
	1234, 1230, 1231, 1243, 0, 1213, 0, 0, 0, 0,
	0, 0, 1211, 1212, 305, 306, 308, 307, 309, 310,
	311, 312, 1244, 313, 314, 0, 1242, 0, 0, 0,
	1284, 1248, 0, 0, 315, 0, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 1297, 0,
	326, 1304, 327, 1303, 0, 1314, 328, 329, 330, 331,
	332, 333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722,
	0, 336, 337, 1290, 0, 1271, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 1325, 362, 363, 364,
	1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367,
	368, 369, 1307, 370, 372, 1301, 1300, 1220, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 1292, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 1226, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 1315,
	1316, 405, 1239, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 1299, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 1326, 415, 416, 417, 1312,
	1313, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 1322, 0, 1249, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1285, 1286, 1289, 528, 1328, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 1327, 737, 447, 529,
	448, 1294, 1295, 0, 1255, 0, 449, 450, 452, 1329,
	1287, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 1323, 465, 1332, 467, 468, 1333, 0, 469,
	470, 471, 472, 473, 474, 477, 1278, 1277, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 1217,
	304, 1336, 523, 524, 525, 526, 1240, 1288, 527, 1302,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 1337, 540, 1338,
	1317, 541, 542, 1227, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 1318, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 1298, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 1228, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 1281, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 1296, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 1343, 653, 654, 655, 656, 1319, 660, 661,
	662, 663, 0, 664, 665, 1214, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	1308, 1309, 1310, 1311, 0, 686, 0, 675, 677, 678,
	679, 680, 1320, 681, 1321, 1238, 682, 683, 684, 685,
	676, 687, 688, 0, 1221, 689, 690, 692, 694, 695,
	691, 693, 696, 1282, 697, 0, 0, 698, 699, 700,
	763, 1305, 1342, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 1218, 0, 0, 0, 0, 1900, 0,
	1260, 1232, 1233, 1234, 1230, 1231, 1243, 0, 1213, 0,
	0, 0, 0, 0, 0, 1211, 1212, 305, 306, 308,
	307, 309, 310, 311, 312, 1244, 313, 314, 0, 1242,
	0, 0, 0, 1284, 1248, 0, 0, 315, 0, 316,
	317, 318, 1324, 319, 320, 321, 322, 323, 324, 325,
	715, 1297, 0, 326, 1304, 327, 1303, 0, 1314, 328,
	329, 330, 331, 332, 333, 334, 1250, 1283, 1215, 335,
	1344, 1345, 722, 0, 336, 337, 1290, 0, 1271, 0,
	338, 339, 340, 341, 342, 343, 344, 345, 0, 0,
	347, 348, 349, 346, 350, 0, 351, 0, 352, 353,
	354, 355, 356, 357, 358, 0, 359, 360, 361, 1325,
	362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279,
	365, 366, 367, 368, 369, 1307, 370, 372, 1301, 1300,
	1220, 375, 377, 371, 373, 0, 376, 374, 378, 0,
	379, 380, 381, 0, 0, 382, 1292, 384, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 1226,
	393, 394, 395, 397, 399, 396, 398, 400, 401, 402,
	403, 404, 1315, 1316, 405, 1239, 302, 0, 0, 0,
	0, 0, 406, 407, 408, 1299, 0, 0, 0, 409,
	0, 410, 411, 412, 0, 413, 414, 0, 1326, 415,
	416, 417, 1312, 1313, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 1322, 0, 1249, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1285, 1286, 1289,
	528, 1328, 436, 437, 438, 0, 439, 440, 441, 442,
	443, 0, 0, 0, 303, 444, 445, 446, 0, 1327,
	737, 447, 529, 448, 1294, 1295, 0, 1255, 0, 449,
	450, 452, 1329, 1287, 1330, 451, 453, 454, 1331, 455,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 0,
	462, 464, 463, 0, 466, 1323, 465, 1332, 467, 468,
	1333, 0, 469, 470, 471, 472, 473, 474, 477, 1278,
	1277, 475, 476, 478, 479, 0, 480, 481, 483, 486,
	482, 484, 485, 487, 500, 501, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 503, 0,
	502, 1334, 504, 505, 506, 507, 508, 515, 517, 518,
	513, 514, 516, 519, 520, 522, 510, 511, 512, 1335,
	521, 509, 1217, 304, 1336, 523, 524, 525, 526, 1240,
	1288, 527, 1302, 530, 531, 0, 0, 532, 0, 533,
	0, 0, 535, 536, 537, 0, 0, 538, 539, 745,
	1337, 540, 1338, 1317, 541, 542, 1227, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 0, 553, 554,
	747, 555, 556, 557, 748, 558, 559, 560, 1318, 561,
	750, 562, 563, 0, 564, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 1298, 575, 576, 578,
	577, 579, 0, 580, 0, 581, 582, 583, 0, 0,
	0, 0, 0, 584, 585, 587, 0, 588, 589, 590,
	591, 586, 592, 593, 594, 595, 596, 597, 0, 599,
	600, 598, 601, 602, 1339, 603, 604, 605, 606, 607,
	1228, 608, 0, 609, 610, 617, 618, 619, 611, 612,
	613, 620, 621, 622, 623, 624, 625, 0, 627, 628,
	626, 629, 630, 631, 1281, 632, 753, 633, 614, 615,
	634, 635, 1340, 636, 637, 638, 639, 640, 641, 642,
	1296, 0, 643, 0, 644, 645, 646, 647, 648, 649,
	651, 616, 652, 657, 658, 1343, 653, 654, 655, 656,
	1319, 660, 661, 662, 663, 0, 664, 665, 1214, 659,
	650, 0, 666, 667, 668, 669, 670, 671, 0, 672,
	673, 0, 674, 1308, 1309, 1310, 1311, 0, 686, 0,
	675, 677, 678, 679, 680, 1320, 681, 1321, 1238, 682,
	683, 684, 685, 676, 687, 688, 0, 1221, 689, 690,
	692, 694, 695, 691, 693, 696, 1282, 697, 0, 0,
	698, 699, 700, 763, 1305, 1342, 0, 702, 701, 703,
	704, 705, 766, 706, 707, 708, 0, 0, 0, 0,
	709, 710, 767, 711, 712, 713, 1218, 0, 0, 0,
	0, 1828, 0, 1260, 1232, 1233, 1234, 1230, 1231, 1243,
	0, 1213, 0, 0, 0, 0, 0, 0, 1211, 1212,
	305, 306, 308, 307, 309, 310, 311, 312, 1244, 313,
	314, 0, 1242, 0, 0, 0, 1284, 1248, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 1297, 0, 326, 1304, 327, 1303,
	0, 1314, 328, 329, 330, 331, 332, 333, 334, 1250,
	1283, 1215, 335, 1344, 1345, 722, 0, 336, 337, 1290,
	0, 1271, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280,
	1276, 1275, 1279, 365, 366, 367, 368, 369, 1307, 370,
	372, 1301, 1300, 1220, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 1292,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 1226, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 1315, 1316, 405, 1239, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 1299, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 1312, 1313, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 1322, 0,
	1249, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1285, 1286, 1289, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 1294, 1295, 0,
	1255, 0, 449, 450, 452, 1329, 1287, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 1323, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 1278, 1277, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 1217, 304, 1336, 523, 524,
	525, 526, 1240, 1288, 527, 1302, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 1317, 541, 542, 1227,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 1318, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 1298,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 1228, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1281, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 1296, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 1343, 653,
	654, 655, 656, 1319, 660, 661, 662, 663, 0, 664,
	665, 1214, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 1308, 1309, 1310, 1311,
	0, 686, 0, 675, 677, 678, 679, 680, 1320, 681,
	1321, 1238, 682, 683, 684, 685, 676, 687, 688, 0,
	1221, 689, 690, 692, 694, 695, 691, 693, 696, 1282,
	697, 0, 0, 698, 699, 700, 763, 1305, 1342, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 1218,
	0, 0, 0, 0, 1823, 0, 1260, 1232, 1233, 1234,
	1230, 1231, 1243, 0, 1213, 0, 0, 0, 0, 0,
	0, 1211, 1212, 305, 306, 308, 307, 309, 310, 311,
	312, 1244, 313, 314, 0, 1242, 0, 0, 0, 1284,
	1248, 0, 0, 315, 0, 316, 317, 318, 1324, 319,
	320, 321, 322, 323, 324, 325, 715, 1297, 0, 326,
	1304, 327, 1303, 0, 1314, 328, 329, 330, 331, 332,
	333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0,
	336, 337, 1290, 0, 1271, 0, 338, 339, 340, 341,
	342, 343, 344, 345, 0, 0, 347, 348, 349, 346,
	350, 0, 351, 0, 352, 353, 354, 355, 356, 357,
	358, 0, 359, 360, 361, 1325, 362, 363, 364, 1274,
	1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368,
	369, 1307, 370, 372, 1301, 1300, 1220, 375, 377, 371,
	373, 0, 376, 374, 378, 0, 379, 380, 381, 0,
	0, 382, 1292, 384, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 1226, 393, 394, 395, 397,
	399, 396, 398, 400, 401, 402, 403, 404, 1315, 1316,
	405, 1239, 302, 0, 0, 0, 0, 0, 406, 407,
	408, 1299, 0, 0, 0, 409, 0, 410, 411, 412,
	0, 413, 414, 0, 1326, 415, 416, 417, 1312, 1313,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 1322, 0, 1249, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1285, 1286, 1289, 528, 1328, 436, 437,
	438, 0, 439, 440, 441, 442, 443, 0, 0, 0,
	303, 444, 445, 446, 0, 1327, 737, 447, 529, 448,
	1294, 1295, 0, 1255, 0, 449, 450, 452, 1329, 1287,
	1330, 451, 453, 454, 1331, 455, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 0, 462, 464, 463, 0,
	466, 1323, 465, 1332, 467, 468, 1333, 0, 469, 470,
	471, 472, 473, 474, 477, 1278, 1277, 475, 476, 478,
	479, 0, 480, 481, 483, 486, 482, 484, 485, 487,
	500, 501, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 503, 0, 502, 1334, 504, 505,
	506, 507, 508, 515, 517, 518, 513, 514, 516, 519,
	520, 522, 510, 511, 512, 1335, 521, 509, 1217, 304,
	1336, 523, 524, 525, 526, 1240, 1288, 527, 1302, 530,
	531, 0, 0, 532, 0, 533, 0, 0, 535, 536,
	537, 0, 0, 538, 539, 745, 1337, 540, 1338, 1317,
	541, 542, 1227, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 0, 553, 554, 747, 555, 556, 557,
	748, 558, 559, 560, 1318, 561, 750, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 1298, 575, 576, 578, 577, 579, 0, 580,
	0, 581, 582, 583, 0, 0, 0, 0, 0, 584,
	585, 587, 0, 588, 589, 590, 591, 586, 592, 593,
	594, 595, 596, 597, 0, 599, 600, 598, 601, 602,
	1339, 603, 604, 605, 606, 607, 1228, 608, 0, 609,
	610, 617, 618, 619, 611, 612, 613, 620, 621, 622,
	623, 624, 625, 0, 627, 628, 626, 629, 630, 631,
	1281, 632, 753, 633, 614, 615, 634, 635, 1340, 636,
	637, 638, 639, 640, 641, 642, 1296, 0, 643, 0,
	644, 645, 646, 647, 648, 649, 651, 616, 652, 657,
	658, 1343, 653, 654, 655, 656, 1319, 660, 661, 662,
	663, 0, 664, 665, 1214, 659, 650, 0, 666, 667,
	668, 669, 670, 671, 0, 672, 673, 0, 674, 1308,
	1309, 1310, 1311, 0, 686, 0, 675, 677, 678, 679,
	680, 1320, 681, 1321, 1238, 682, 683, 684, 685, 676,
	687, 688, 0, 1221, 689, 690, 692, 694, 695, 691,
	693, 696, 1282, 697, 0, 0, 698, 699, 700, 763,
	1305, 1342, 0, 702, 701, 703, 704, 705, 766, 706,
	707, 708, 0, 0, 0, 0, 709, 710, 767, 711,
	712, 713, 1218, 0, 0, 0, 0, 1809, 0, 1260,
	1232, 1233, 1234, 1230, 1231, 1243, 0, 1213, 0, 0,
	0, 0, 0, 0, 1211, 1212, 305, 306, 308, 307,
	309, 310, 311, 312, 1244, 313, 314, 0, 1242, 0,
	0, 0, 1284, 1248, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	1297, 0, 326, 1304, 327, 1303, 0, 1314, 328, 329,
	330, 331, 332, 333, 334, 1250, 1283, 1215, 335, 1344,
	1345, 722, 0, 336, 337, 1290, 0, 1271, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365,
	366, 367, 368, 369, 1307, 370, 372, 1301, 1300, 1220,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 1292, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 1226, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 1315, 1316, 405, 1239, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 1299, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 1312, 1313, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 1322, 0, 1249, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1285, 1286, 1289, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 1327, 737,
	447, 529, 448, 1294, 1295, 0, 1255, 0, 449, 450,
	452, 1329, 1287, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 1323, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 1278, 1277,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 1217, 304, 1336, 523, 524, 525, 526, 1240, 1288,
	527, 1302, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 1337,
	540, 1338, 1317, 541, 542, 1227, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 1318, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 1298, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 1228,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 1281, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 1296,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 1343, 653, 654, 655, 656, 1319,
	660, 661, 662, 663, 0, 664, 665, 1214, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 1308, 1309, 1310, 1311, 0, 686, 0, 675,
	677, 678, 679, 680, 1320, 681, 1321, 1238, 682, 683,
	684, 685, 676, 687, 688, 0, 1221, 689, 690, 692,
	694, 695, 691, 693, 696, 1282, 697, 0, 0, 698,
	699, 700, 763, 1305, 1342, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 1218, 0, 0, 0, 0,
	1804, 0, 1260, 1232, 1233, 1234, 1230, 1231, 1243, 0,
	1213, 0, 0, 0, 0, 0, 0, 1211, 1212, 305,
	306, 308, 307, 309, 310, 311, 312, 1244, 313, 314,
	0, 1242, 0, 0, 0, 1284, 1248, 0, 0, 315,
	0, 316, 317, 318, 1324, 319, 320, 321, 322, 323,
	324, 325, 715, 1297, 0, 326, 1304, 327, 1303, 0,
	1314, 328, 329, 330, 331, 332, 333, 334, 1250, 1283,
	1215, 335, 1344, 1345, 722, 0, 336, 337, 1290, 0,
	1271, 0, 338, 339, 340, 341, 342, 343, 344, 345,
	0, 0, 347, 348, 349, 346, 350, 0, 351, 0,
	352, 353, 354, 355, 356, 357, 358, 0, 359, 360,
	361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280, 1276,
	1275, 1279, 365, 366, 367, 368, 369, 1307, 370, 372,
	1301, 1300, 1220, 375, 377, 371, 373, 0, 376, 374,
	378, 0, 379, 380, 381, 0, 0, 382, 1292, 384,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 1226, 393, 394, 395, 397, 399, 396, 398, 400,
	401, 402, 403, 404, 1315, 1316, 405, 1239, 302, 0,
	0, 0, 0, 0, 406, 407, 408, 1299, 0, 0,
	0, 409, 0, 410, 411, 412, 0, 413, 414, 0,
	1326, 415, 416, 417, 1312, 1313, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 1322, 0, 1249,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1285,
	1286, 1289, 528, 1328, 436, 437, 438, 0, 439, 440,
	441, 442, 443, 0, 0, 0, 303, 444, 445, 446,
	0, 1327, 737, 447, 529, 448, 1294, 1295, 0, 1255,
	0, 449, 450, 452, 1329, 1287, 1330, 451, 453, 454,
	1331, 455, 0, 0, 0, 456, 457, 458, 459, 460,
	461, 0, 462, 464, 463, 0, 466, 1323, 465, 1332,
	467, 468, 1333, 0, 469, 470, 471, 472, 473, 474,
	477, 1278, 1277, 475, 476, 478, 479, 0, 480, 481,
	483, 486, 482, 484, 485, 487, 500, 501, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	503, 0, 502, 1334, 504, 505, 506, 507, 508, 515,
	517, 518, 513, 514, 516, 519, 520, 522, 510, 511,
	512, 1335, 521, 509, 1217, 304, 1336, 523, 524, 525,
	526, 1240, 1288, 527, 1302, 530, 531, 0, 0, 532,
	0, 533, 0, 0, 535, 536, 537, 0, 0, 538,
	539, 745, 1337, 540, 1338, 1317, 541, 542, 1227, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 0,
	553, 554, 747, 555, 556, 557, 748, 558, 559, 560,
	1318, 561, 750, 562, 563, 0, 564, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 574, 1298, 575,
	576, 578, 577, 579, 0, 580, 0, 581, 582, 583,
	0, 0, 0, 0, 0, 584, 585, 587, 0, 588,
	589, 590, 591, 586, 592, 593, 594, 595, 596, 597,
	0, 599, 600, 598, 601, 602, 1339, 603, 604, 605,
	606, 607, 1228, 608, 0, 609, 610, 617, 618, 619,
	611, 612, 613, 620, 621, 622, 623, 624, 625, 0,
	627, 628, 626, 629, 630, 631, 1281, 632, 753, 633,
	614, 615, 634, 635, 1340, 636, 637, 638, 639, 640,
	641, 642, 1296, 0, 643, 0, 644, 645, 646, 647,
	648, 649, 651, 616, 652, 657, 658, 1343, 653, 654,
	655, 656, 1319, 660, 661, 662, 663, 0, 664, 665,
	1214, 659, 650, 0, 666, 667, 668, 669, 670, 671,
	0, 672, 673, 0, 674, 1308, 1309, 1310, 1311, 0,
	686, 0, 675, 677, 678, 679, 680, 1320, 681, 1321,
	1238, 682, 683, 684, 685, 676, 687, 688, 0, 1221,
	689, 690, 692, 694, 695, 691, 693, 696, 1282, 697,
	0, 0, 698, 699, 700, 763, 1305, 1342, 0, 702,
	701, 703, 704, 705, 766, 706, 707, 708, 0, 0,
	0, 0, 709, 710, 767, 711, 712, 713, 1218, 0,
	0, 0, 0, 1710, 0, 1260, 1232, 1233, 1234, 1230,
	1231, 1243, 0, 1213, 0, 0, 0, 0, 0, 0,
	1211, 1212, 305, 306, 308, 307, 309, 310, 311, 312,
	1244, 313, 314, 0, 1242, 0, 0, 0, 1284, 1248,
	0, 0, 315, 0, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 1297, 0, 326, 1304,
	327, 1303, 0, 1314, 328, 329, 330, 331, 332, 333,
	334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0, 336,
	337, 1290, 0, 1271, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 1325, 362, 363, 364, 1274, 1272,
	1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368, 369,
	1307, 370, 372, 1301, 1300, 1220, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 1292, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 1226, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 1315, 1316, 405,
	1239, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	1299, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 1326, 415, 416, 417, 1312, 1313, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	1322, 0, 1249, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1709, 1286, 1289, 528, 1328, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 1327, 737, 447, 529, 448, 1294,
	1295, 0, 1255, 0, 449, 450, 452, 1329, 1287, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	1323, 465, 1332, 467, 468, 1333, 0, 469, 470, 471,
	472, 473, 474, 477, 1278, 1277, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 1217, 304, 1336,
	523, 524, 525, 526, 1240, 1288, 527, 1302, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 1337, 540, 1338, 1317, 541,
	542, 1227, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 1318, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 1298, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 1228, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 1281,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 1296, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	1343, 653, 654, 655, 656, 1319, 660, 661, 662, 663,
	0, 664, 665, 1214, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 1308, 1309,
	1310, 1311, 0, 686, 0, 675, 677, 678, 679, 680,
	1320, 681, 1321, 1238, 682, 683, 684, 685, 676, 687,
	688, 0, 1221, 689, 690, 692, 694, 695, 691, 693,
	696, 1282, 697, 0, 0, 698, 699, 700, 763, 1305,
	1342, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 0, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 1218, 0, 0, 0, 0, 1704, 0, 1260, 1232,
	1233, 1234, 1230, 1231, 1243, 0, 1213, 0, 0, 0,
	0, 0, 0, 1211, 1212, 305, 306, 308, 307, 309,
	310, 311, 312, 1244, 313, 314, 0, 1242, 0, 0,
	0, 1284, 1248, 0, 0, 315, 0, 316, 317, 318,
	1324, 319, 320, 321, 322, 323, 324, 325, 715, 1297,
	0, 326, 1304, 327, 1303, 0, 1314, 328, 329, 330,
	331, 332, 333, 334, 1250, 1283, 1215, 335, 1344, 1345,
	722, 0, 336, 337, 1290, 0, 1271, 0, 338, 339,
	340, 341, 342, 343, 344, 345, 0, 0, 347, 348,
	349, 346, 350, 0, 351, 0, 352, 353, 354, 355,
	356, 357, 358, 0, 359, 360, 361, 1325, 362, 363,
	364, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366,
	367, 368, 369, 1307, 370, 372, 1301, 1300, 1220, 375,
	377, 371, 373, 0, 376, 374, 378, 0, 379, 380,
	381, 0, 0, 382, 1292, 384, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 1226, 393, 394,
	395, 397, 399, 396, 398, 400, 401, 402, 403, 404,
	1315, 1316, 405, 1239, 302, 0, 0, 0, 0, 0,
	406, 407, 408, 1299, 0, 0, 0, 409, 0, 410,
	411, 412, 0, 413, 414, 0, 1326, 415, 416, 417,
	1312, 1313, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 1322, 0, 1249, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1703, 1286, 1289, 528, 1328,
	436, 437, 438, 0, 439, 440, 441, 442, 443, 0,
	0, 0, 303, 444, 445, 446, 0, 1327, 737, 447,
	529, 448, 1294, 1295, 0, 1255, 0, 449, 450, 452,
	1329, 1287, 1330, 451, 453, 454, 1331, 455, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 0, 462, 464,
	463, 0, 466, 1323, 465, 1332, 467, 468, 1333, 0,
	469, 470, 471, 472, 473, 474, 477, 1278, 1277, 475,
	476, 478, 479, 0, 480, 481, 483, 486, 482, 484,
	485, 487, 500, 501, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 503, 0, 502, 1334,
	504, 505, 506, 507, 508, 515, 517, 518, 513, 514,
	516, 519, 520, 522, 510, 511, 512, 1335, 521, 509,
	1217, 304, 1336, 523, 524, 525, 526, 1240, 1288, 527,
	1302, 530, 531, 0, 0, 532, 0, 533, 0, 0,
	535, 536, 537, 0, 0, 538, 539, 745, 1337, 540,
	1338, 1317, 541, 542, 1227, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 0, 553, 554, 747, 555,
	556, 557, 748, 558, 559, 560, 1318, 561, 750, 562,
	563, 0, 564, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 574, 1298, 575, 576, 578, 577, 579,
	0, 580, 0, 581, 582, 583, 0, 0, 0, 0,
	0, 584, 585, 587, 0, 588, 589, 590, 591, 586,
	592, 593, 594, 595, 596, 597, 0, 599, 600, 598,
	601, 602, 1339, 603, 604, 605, 606, 607, 1228, 608,
	0, 609, 610, 617, 618, 619, 611, 612, 613, 620,
	621, 622, 623, 624, 625, 0, 627, 628, 626, 629,
	630, 631, 1281, 632, 753, 633, 614, 615, 634, 635,
	1340, 636, 637, 638, 639, 640, 641, 642, 1296, 0,
	643, 0, 644, 645, 646, 647, 648, 649, 651, 616,
	652, 657, 658, 1343, 653, 654, 655, 656, 1319, 660,
	661, 662, 663, 0, 664, 665, 1214, 659, 650, 0,
	666, 667, 668, 669, 670, 671, 0, 672, 673, 0,
	674, 1308, 1309, 1310, 1311, 0, 686, 0, 675, 677,
	678, 679, 680, 1320, 681, 1321, 1238, 682, 683, 684,
	685, 676, 687, 688, 0, 1221, 689, 690, 692, 694,
	695, 691, 693, 696, 1282, 697, 0, 0, 698, 699,
	700, 763, 1305, 1342, 0, 702, 701, 703, 704, 705,
	766, 706, 707, 708, 0, 0, 0, 0, 709, 710,
	767, 711, 712, 713, 1218, 0, 0, 0, 0, 1697,
	0, 1260, 1232, 1233, 1234, 1230, 1231, 1243, 0, 1213,
	0, 0, 0, 0, 0, 0, 1211, 1212, 305, 306,
	308, 307, 309, 310, 311, 312, 1244, 313, 314, 0,
	1242, 0, 0, 0, 1284, 1248, 0, 0, 315, 0,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 1297, 0, 326, 1304, 327, 1303, 0, 1314,
	328, 329, 330, 331, 332, 333, 334, 1250, 1283, 1215,
	335, 1344, 1345, 722, 0, 336, 337, 1290, 0, 1271,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	1325, 362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275,
	1279, 365, 366, 367, 368, 369, 1307, 370, 372, 1301,
	1300, 1220, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 1292, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	1226, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 1315, 1316, 405, 1239, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 1299, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 1326,
	415, 416, 417, 1312, 1313, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 1322, 0, 1249, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1285, 1286,
	1289, 528, 1328, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	1327, 737, 447, 529, 448, 1294, 1295, 0, 1255, 0,
	449, 450, 452, 1329, 1287, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 1323, 465, 1332, 467,
	468, 1333, 0, 469, 470, 471, 472, 473, 474, 477,
	1278, 1277, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 1217, 304, 1336, 523, 524, 525, 526,
	1240, 1288, 527, 1302, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 1337, 540, 1338, 1317, 541, 542, 1227, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 1318,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 1298, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 1228, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 1281, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 1296, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 1343, 653, 654, 655,
	656, 1319, 660, 661, 662, 663, 0, 664, 665, 1214,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 1308, 1309, 1310, 1311, 0, 686,
	0, 675, 677, 678, 679, 680, 1320, 681, 1321, 1238,
	682, 683, 684, 685, 676, 687, 688, 0, 1221, 689,
	690, 692, 694, 695, 691, 693, 696, 1282, 697, 0,
	0, 698, 699, 700, 763, 1305, 1342, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 0, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 1218, 0, 0,
	0, 0, 1660, 0, 1260, 1232, 1233, 1234, 1230, 1231,
	1243, 0, 1213, 0, 0, 0, 0, 0, 0, 1211,
	1212, 305, 306, 308, 307, 309, 310, 311, 312, 1244,
	313, 314, 0, 1242, 0, 0, 0, 1284, 1248, 0,
	0, 315, 0, 316, 317, 318, 1324, 319, 320, 321,
	322, 323, 324, 325, 715, 1297, 0, 326, 1304, 327,
	1303, 0, 1314, 328, 329, 330, 331, 332, 333, 334,
	1250, 1283, 1215, 335, 1344, 1345, 722, 0, 336, 337,
	1290, 0, 1271, 0, 338, 339, 340, 341, 342, 343,
	344, 345, 0, 0, 347, 348, 349, 346, 350, 0,
	351, 0, 352, 353, 354, 355, 356, 357, 358, 0,
	359, 360, 361, 1325, 362, 363, 364, 1274, 1272, 1273,
	1280, 1276, 1275, 1279, 365, 366, 367, 368, 369, 1307,
	370, 372, 1301, 1300, 1220, 375, 377, 371, 373, 0,
	376, 374, 378, 0, 379, 380, 381, 0, 0, 382,
	1292, 384, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 1226, 393, 394, 395, 397, 399, 396,
	398, 400, 401, 402, 403, 404, 1315, 1316, 405, 1239,
	302, 0, 0, 0, 0, 0, 406, 407, 408, 1299,
	0, 0, 0, 409, 0, 410, 411, 412, 0, 413,
	414, 0, 1326, 415, 416, 417, 1312, 1313, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 1322,
	0, 1249, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1285, 1286, 1289, 528, 1328, 436, 437, 438, 0,
	439, 440, 441, 442, 443, 0, 0, 0, 303, 444,
	445, 446, 0, 1327, 737, 447, 529, 448, 1294, 1295,
	0, 1255, 0, 449, 450, 452, 1329, 1287, 1330, 451,
	453, 454, 1331, 455, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 0, 462, 464, 463, 0, 466, 1323,
	465, 1332, 467, 468, 1333, 0, 469, 470, 471, 472,
	473, 474, 477, 1278, 1277, 475, 476, 478, 479, 0,
	480, 481, 483, 486, 482, 484, 485, 487, 500, 501,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 503, 0, 502, 1334, 504, 505, 506, 507,
	508, 515, 517, 518, 513, 514, 516, 519, 520, 522,
	510, 511, 512, 1335, 521, 509, 1217, 304, 1336, 523,
	524, 525, 526, 1240, 1288, 527, 1302, 530, 531, 0,
	0, 532, 0, 533, 0, 0, 535, 536, 537, 0,
	0, 538, 539, 745, 1337, 540, 1338, 1317, 541, 542,
	1227, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 0, 553, 554, 747, 555, 556, 557, 748, 558,
	559, 560, 1318, 561, 750, 562, 563, 0, 564, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	1298, 575, 576, 578, 577, 579, 0, 580, 0, 581,
	582, 583, 0, 0, 0, 0, 0, 584, 585, 587,
	0, 588, 589, 590, 591, 586, 592, 593, 594, 595,
	596, 597, 0, 599, 600, 598, 601, 602, 1339, 603,
	604, 605, 606, 607, 1228, 608, 0, 609, 610, 617,
	618, 619, 611, 612, 613, 620, 621, 622, 623, 624,
	625, 0, 627, 628, 626, 629, 630, 631, 1281, 632,
	753, 633, 614, 615, 634, 635, 1340, 636, 637, 638,
	639, 640, 641, 642, 1296, 0, 643, 0, 644, 645,
	646, 647, 648, 649, 651, 616, 652, 657, 658, 1343,
	653, 654, 655, 656, 1319, 660, 661, 662, 663, 0,
	664, 665, 1214, 659, 650, 0, 666, 667, 668, 669,
	670, 671, 0, 672, 673, 0, 674, 1308, 1309, 1310,
	1311, 0, 686, 0, 675, 677, 678, 679, 680, 1320,
	681, 1321, 1238, 682, 683, 684, 685, 676, 687, 688,
	0, 1221, 689, 690, 692, 694, 695, 691, 693, 696,
	1282, 697, 0, 0, 698, 699, 700, 763, 1305, 1342,
	0, 702, 701, 703, 704, 705, 766, 706, 707, 708,
	0, 0, 0, 0, 709, 710, 767, 711, 712, 713,
	1218, 0, 0, 0, 0, 1642, 0, 1260, 1232, 1233,
	1234, 1230, 1231, 1243, 0, 1213, 0, 0, 0, 0,
	0, 0, 1211, 1212, 305, 306, 308, 307, 309, 310,
	311, 312, 1244, 313, 314, 0, 1242, 0, 0, 0,
	1284, 1248, 0, 0, 315, 0, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 1297, 0,
	326, 1304, 327, 1303, 0, 1314, 328, 329, 330, 331,
	332, 333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722,
	0, 336, 337, 1290, 0, 1271, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 1325, 362, 363, 364,
	1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367,
	368, 369, 1307, 370, 372, 1301, 1300, 1220, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 1292, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 1226, 393, 394, 395,
	397, 399, 396, 1646, 400, 401, 402, 403, 404, 1315,
	1316, 405, 1239, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 1299, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 1326, 415, 416, 417, 1312,
	1313, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 1322, 0, 1249, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1285, 1286, 1289, 528, 1328, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 1327, 737, 447, 529,
	448, 1294, 1295, 0, 1255, 0, 449, 450, 452, 1329,
	1287, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 1323, 465, 1332, 467, 468, 1333, 0, 469,
	470, 471, 472, 473, 474, 477, 1278, 1277, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 1217,
	304, 1336, 523, 524, 525, 526, 1240, 1288, 527, 1302,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 1337, 540, 1338,
	1317, 541, 542, 1227, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 1318, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 1298, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 1647, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 1228, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 1281, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 1296, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 1343, 653, 654, 655, 656, 1319, 660, 661,
	662, 663, 0, 664, 665, 1214, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 1645, 673, 0, 674,
	1308, 1309, 1310, 1311, 0, 686, 0, 675, 677, 678,
	679, 680, 1320, 681, 1321, 1238, 682, 683, 684, 685,
	676, 687, 688, 0, 1221, 689, 690, 692, 694, 695,
	691, 693, 696, 1282, 697, 0, 0, 698, 699, 700,
	763, 1305, 1342, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 1218, 0, 0, 0, 0, 1472, 0,
	1260, 1232, 1233, 1234, 1230, 1231, 1243, 0, 1213, 0,
	0, 0, 0, 0, 0, 1211, 1212, 305, 306, 308,
	307, 309, 310, 311, 312, 1244, 313, 314, 0, 1242,
	0, 0, 0, 1284, 1248, 0, 0, 315, 0, 316,
	317, 318, 1324, 319, 320, 321, 322, 323, 324, 325,
	715, 1297, 0, 326, 1304, 327, 1303, 0, 1314, 328,
	329, 330, 331, 332, 333, 334, 1250, 1283, 1215, 335,
	1344, 1345, 722, 0, 336, 337, 1290, 0, 1271, 0,
	338, 339, 340, 341, 342, 343, 344, 345, 0, 0,
	347, 348, 349, 346, 350, 0, 351, 0, 352, 353,
	354, 355, 356, 357, 358, 0, 359, 360, 361, 1325,
	362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279,
	365, 366, 367, 368, 369, 1307, 370, 372, 1301, 1300,
	1220, 375, 377, 371, 373, 0, 376, 374, 378, 0,
	379, 380, 381, 0, 0, 382, 1292, 384, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 1226,
	393, 394, 395, 397, 399, 396, 398, 400, 401, 402,
	403, 404, 1315, 1316, 405, 1239, 302, 0, 0, 0,
	0, 0, 406, 407, 408, 1299, 0, 0, 0, 409,
	0, 410, 411, 412, 0, 413, 414, 0, 1326, 415,
	416, 417, 1312, 1313, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 1322, 0, 1249, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1285, 1286, 1289,
	528, 1328, 436, 437, 438, 0, 439, 440, 441, 442,
	443, 0, 0, 0, 303, 444, 445, 446, 0, 1327,
	737, 447, 529, 448, 1294, 1295, 0, 1255, 0, 449,
	450, 452, 1329, 1287, 1330, 451, 453, 454, 1331, 455,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 0,
	462, 464, 463, 0, 466, 1323, 465, 1332, 467, 468,
	1333, 0, 469, 470, 471, 472, 473, 474, 477, 1278,
	1277, 475, 476, 478, 479, 0, 480, 481, 483, 486,
	482, 484, 485, 487, 500, 501, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 503, 0,
	502, 1334, 504, 505, 506, 507, 508, 515, 517, 518,
	513, 514, 516, 519, 520, 522, 510, 511, 512, 1335,
	521, 509, 1217, 304, 1336, 523, 524, 525, 526, 1240,
	1288, 527, 1302, 530, 531, 0, 0, 532, 0, 533,
	0, 0, 535, 536, 537, 0, 0, 538, 539, 745,
	1337, 540, 1338, 1317, 541, 542, 1227, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 0, 553, 554,
	747, 555, 556, 557, 748, 558, 559, 560, 1318, 561,
	750, 562, 563, 0, 564, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 1298, 575, 576, 578,
	577, 579, 0, 580, 0, 581, 582, 583, 0, 0,
	0, 0, 0, 584, 585, 587, 0, 588, 589, 590,
	591, 586, 592, 593, 594, 595, 596, 597, 0, 599,
	600, 598, 601, 602, 1339, 603, 604, 605, 606, 607,
	1228, 608, 0, 609, 610, 617, 618, 619, 611, 612,
	613, 620, 621, 622, 623, 624, 625, 0, 627, 628,
	626, 629, 630, 631, 1281, 632, 753, 633, 614, 615,
	634, 635, 1340, 636, 637, 638, 639, 640, 641, 642,
	1296, 0, 643, 0, 644, 645, 646, 647, 648, 649,
	651, 616, 652, 657, 658, 1343, 653, 654, 655, 656,
	1319, 660, 661, 662, 663, 0, 664, 665, 1214, 659,
	650, 0, 666, 667, 668, 669, 670, 671, 0, 672,
	673, 0, 674, 1308, 1309, 1310, 1311, 0, 686, 0,
	675, 677, 678, 679, 680, 1320, 681, 1321, 1238, 682,
	683, 684, 685, 676, 687, 688, 0, 1221, 689, 690,
	692, 694, 695, 691, 693, 696, 1282, 697, 0, 0,
	698, 699, 700, 763, 1305, 1342, 0, 702, 701, 703,
	704, 705, 766, 706, 707, 708, 0, 0, 0, 0,
	709, 710, 767, 711, 712, 713, 1218, 0, 0, 0,
	0, 0, 0, 1260, 1232, 1233, 1234, 1230, 1231, 1243,
	0, 1213, 0, 0, 0, 0, 0, 0, 1211, 1212,
	305, 306, 308, 307, 309, 310, 311, 312, 1244, 313,
	314, 0, 1242, 0, 0, 0, 1284, 1248, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 1297, 0, 326, 1304, 327, 1303,
	0, 1314, 328, 329, 330, 331, 332, 333, 334, 1250,
	1283, 1215, 335, 1344, 1345, 722, 0, 336, 337, 1290,
	0, 1271, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280,
	1276, 1275, 1279, 365, 366, 367, 368, 369, 1307, 370,
	372, 1301, 1300, 1220, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 1292,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 1226, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 1315, 1316, 405, 1239, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 1299, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 1312, 1313, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 1322, 0,
	1249, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1285, 1286, 1289, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 1294, 1295, 0,
	1255, 0, 449, 450, 452, 1329, 1287, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 1323, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 1278, 1277, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 1217, 304, 1336, 523, 524,
	525, 526, 1240, 1288, 527, 1302, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 1317, 541, 542, 1227,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 1318, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 1298,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 1228, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1281, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 1296, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 1343, 653,
	654, 655, 656, 1319, 660, 661, 662, 663, 0, 664,
	665, 1214, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 1308, 1309, 1310, 1311,
	0, 686, 0, 675, 677, 678, 679, 680, 1320, 681,
	1321, 1238, 682, 683, 684, 685, 676, 687, 688, 0,
	1221, 689, 690, 692, 694, 695, 691, 693, 696, 1282,
	697, 0, 0, 698, 699, 700, 763, 1305, 1342, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 1218,
	0, 0, 0, 0, 0, 0, 1260, 1232, 1233, 1234,
	1230, 1231, 1243, 0, 1213, 0, 0, 0, 0, 0,
	0, 1211, 1212, 305, 306, 308, 307, 309, 310, 311,
	312, 1244, 313, 314, 0, 1242, 0, 0, 0, 1284,
	1248, 0, 0, 315, 0, 316, 317, 318, 1324, 319,
	320, 321, 322, 323, 324, 325, 715, 1297, 0, 326,
	1304, 327, 1303, 0, 1314, 328, 329, 330, 331, 332,
	333, 334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0,
	336, 337, 1290, 0, 1271, 0, 338, 339, 340, 341,
	342, 343, 344, 345, 0, 0, 347, 348, 349, 346,
	350, 0, 351, 0, 352, 353, 354, 355, 356, 357,
	358, 0, 359, 360, 361, 1325, 362, 363, 5262, 1274,
	1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368,
	369, 1307, 370, 372, 1301, 1300, 1220, 375, 377, 371,
	373, 0, 376, 374, 378, 0, 379, 380, 381, 0,
	0, 382, 1292, 384, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 1226, 393, 394, 395, 397,
	399, 396, 398, 400, 401, 402, 403, 404, 1315, 1316,
	405, 1239, 302, 0, 0, 0, 0, 0, 406, 407,
	408, 1299, 0, 0, 0, 409, 0, 410, 411, 412,
	0, 413, 414, 0, 1326, 415, 416, 417, 1312, 1313,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	427, 1322, 0, 1249, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1285, 1286, 1289, 528, 1328, 436, 437,
	438, 0, 439, 440, 441, 442, 443, 0, 0, 0,
	303, 444, 445, 446, 0, 1327, 737, 447, 529, 448,
	1294, 1295, 0, 1255, 0, 449, 450, 452, 1329, 1287,
	1330, 451, 453, 454, 1331, 455, 0, 0, 0, 456,
	457, 458, 459, 460, 461, 0, 462, 464, 463, 0,
	466, 1323, 465, 1332, 467, 468, 1333, 0, 469, 470,
	471, 472, 473, 474, 477, 1278, 1277, 475, 476, 478,
	479, 0, 480, 481, 483, 486, 482, 484, 485, 487,
	500, 501, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 503, 0, 502, 1334, 504, 505,
	506, 507, 508, 515, 517, 518, 513, 514, 516, 519,
	520, 522, 510, 511, 512, 1335, 521, 509, 1217, 304,
	1336, 523, 524, 525, 526, 1240, 1288, 527, 1302, 530,
	531, 0, 0, 532, 0, 533, 0, 0, 535, 536,
	537, 0, 0, 538, 539, 745, 1337, 540, 1338, 1317,
	541, 542, 1227, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 0, 553, 554, 747, 555, 556, 557,
	748, 558, 559, 560, 1318, 561, 750, 562, 563, 0,
	564, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 1298, 575, 576, 578, 577, 579, 0, 580,
	0, 581, 582, 583, 0, 0, 0, 0, 0, 584,
	585, 587, 0, 588, 589, 590, 591, 586, 592, 593,
	594, 595, 596, 597, 0, 599, 600, 598, 601, 602,
	1339, 603, 604, 605, 606, 607, 1228, 608, 0, 609,
	610, 617, 618, 619, 611, 612, 613, 620, 621, 622,
	623, 624, 625, 0, 627, 628, 626, 629, 630, 631,
	1281, 632, 753, 633, 614, 615, 634, 635, 1340, 636,
	637, 638, 639, 640, 641, 642, 1296, 0, 643, 0,
	644, 645, 646, 647, 648, 649, 651, 616, 652, 657,
	658, 1343, 653, 654, 655, 656, 1319, 660, 661, 662,
	663, 0, 664, 665, 1214, 659, 650, 0, 666, 667,
	668, 669, 670, 671, 0, 672, 673, 0, 674, 1308,
	1309, 1310, 1311, 0, 686, 0, 675, 677, 678, 679,
	680, 1320, 681, 1321, 1238, 682, 683, 684, 685, 676,
	5261, 688, 0, 1221, 689, 690, 692, 694, 695, 691,
	693, 696, 1282, 697, 0, 0, 698, 699, 700, 763,
	1305, 1342, 0, 702, 701, 703, 704, 705, 766, 706,
	707, 708, 0, 0, 0, 0, 709, 710, 767, 711,
	712, 713, 1218, 0, 0, 0, 0, 0, 0, 1260,
	1232, 1233, 1234, 1230, 1231, 1243, 0, 1213, 0, 0,
	0, 0, 0, 0, 1211, 1212, 305, 306, 308, 307,
	309, 310, 311, 312, 1244, 313, 314, 0, 1242, 0,
	0, 0, 1284, 1248, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 5260,
	1297, 0, 326, 1304, 327, 1303, 0, 1314, 328, 329,
	330, 331, 332, 333, 334, 1250, 1283, 1215, 335, 1344,
	1345, 722, 0, 336, 337, 1290, 0, 1271, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 5262, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365,
	366, 367, 368, 369, 1307, 370, 372, 1301, 1300, 1220,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 1292, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 1226, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 1315, 1316, 405, 1239, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 1299, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 1312, 1313, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 1322, 0, 1249, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1285, 1286, 1289, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 1327, 737,
	447, 529, 448, 1294, 1295, 0, 1255, 0, 449, 450,
	452, 1329, 1287, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 1323, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 1278, 1277,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 1217, 304, 1336, 523, 524, 525, 526, 1240, 1288,
	527, 1302, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 1337,
	540, 1338, 1317, 541, 542, 1227, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 1318, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 1298, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 1228,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 1281, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 1296,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 1343, 653, 654, 655, 656, 1319,
	660, 661, 662, 663, 0, 664, 665, 1214, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 1308, 1309, 1310, 1311, 0, 686, 0, 675,
	677, 678, 679, 680, 1320, 681, 1321, 1238, 682, 683,
	684, 685, 676, 5261, 688, 0, 1221, 689, 690, 692,
	694, 695, 691, 693, 696, 1282, 697, 0, 0, 698,
	699, 700, 763, 1305, 1342, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 1218, 0, 0, 0, 0,
	0, 0, 1260, 1232, 1233, 1234, 1230, 1231, 1243, 0,
	1213, 0, 0, 0, 0, 0, 0, 1211, 1212, 305,
	306, 308, 307, 309, 310, 311, 312, 1244, 313, 314,
	0, 1242, 0, 0, 0, 1284, 1248, 0, 0, 315,
	0, 316, 317, 318, 1324, 319, 320, 321, 322, 323,
	324, 325, 715, 1297, 0, 326, 1304, 327, 1303, 0,
	1314, 328, 329, 330, 331, 332, 333, 334, 1250, 1283,
	1215, 335, 1344, 1345, 722, 0, 336, 337, 1290, 0,
	1271, 0, 338, 339, 340, 341, 342, 343, 344, 345,
	0, 0, 347, 348, 349, 346, 350, 0, 351, 0,
	352, 353, 354, 355, 356, 357, 358, 0, 359, 360,
	361, 1325, 362, 4829, 364, 1274, 1272, 1273, 1280, 1276,
	1275, 1279, 365, 366, 367, 368, 369, 1307, 370, 372,
	1301, 1300, 1220, 375, 377, 371, 373, 0, 376, 374,
	378, 0, 379, 380, 381, 0, 0, 382, 1292, 384,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 1226, 393, 394, 395, 397, 399, 396, 398, 400,
	401, 402, 403, 404, 1315, 1316, 405, 1239, 302, 0,
	0, 0, 0, 0, 406, 407, 408, 1299, 0, 0,
	0, 409, 0, 410, 411, 412, 0, 413, 414, 0,
	1326, 415, 416, 417, 1312, 1313, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 0, 427, 1322, 0, 4830,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1285,
	1286, 1289, 528, 1328, 436, 437, 438, 0, 439, 440,
	441, 442, 443, 0, 0, 0, 303, 444, 445, 446,
	0, 1327, 737, 447, 529, 448, 1294, 1295, 0, 1255,
	0, 449, 450, 452, 1329, 1287, 1330, 451, 453, 454,
	1331, 455, 0, 0, 0, 456, 457, 458, 459, 460,
	461, 0, 462, 464, 463, 0, 466, 1323, 465, 1332,
	467, 468, 1333, 0, 469, 470, 471, 472, 473, 474,
	477, 1278, 1277, 475, 476, 478, 479, 0, 480, 481,
	483, 486, 482, 484, 485, 487, 500, 501, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	503, 0, 502, 1334, 504, 505, 506, 507, 508, 515,
	517, 518, 513, 514, 516, 519, 520, 522, 510, 511,
	512, 1335, 521, 509, 1217, 304, 1336, 523, 524, 525,
	526, 1240, 1288, 527, 1302, 530, 531, 0, 0, 532,
	0, 533, 0, 0, 535, 536, 537, 0, 0, 538,
	539, 745, 1337, 540, 1338, 1317, 541, 542, 1227, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 0,
	553, 554, 747, 555, 556, 557, 748, 558, 559, 560,
	1318, 561, 750, 562, 563, 0, 564, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 574, 1298, 575,
	576, 578, 577, 579, 0, 580, 0, 581, 582, 583,
	0, 0, 0, 0, 0, 584, 585, 587, 0, 588,
	589, 590, 591, 586, 592, 593, 594, 595, 596, 597,
	0, 599, 600, 598, 601, 602, 1339, 603, 604, 605,
	4828, 607, 1228, 608, 0, 609, 610, 617, 618, 619,
	611, 612, 613, 620, 621, 622, 623, 624, 625, 0,
	627, 628, 626, 629, 630, 631, 1281, 632, 753, 633,
	614, 615, 634, 635, 1340, 636, 637, 638, 639, 640,
	641, 642, 1296, 0, 643, 0, 644, 645, 646, 647,
	648, 649, 651, 616, 652, 657, 658, 1343, 653, 654,
	655, 656, 1319, 660, 661, 662, 663, 0, 664, 665,
	1214, 659, 650, 0, 666, 667, 668, 669, 670, 671,
	0, 672, 673, 0, 674, 1308, 1309, 1310, 1311, 0,
	686, 0, 675, 677, 678, 679, 680, 1320, 681, 1321,
	1238, 682, 683, 684, 685, 676, 687, 688, 0, 1221,
	689, 690, 692, 694, 695, 691, 693, 696, 1282, 697,
	0, 0, 698, 699, 700, 763, 1305, 1342, 0, 702,
	701, 703, 704, 705, 766, 706, 707, 708, 0, 0,
	0, 0, 709, 710, 767, 711, 712, 713, 1218, 0,
	0, 0, 0, 0, 0, 1260, 1232, 1233, 1234, 3505,
	3506, 1243, 0, 1213, 0, 0, 0, 0, 0, 0,
	1211, 1212, 305, 306, 308, 307, 309, 310, 311, 312,
	1244, 313, 314, 0, 1242, 0, 0, 0, 1284, 1248,
	0, 0, 315, 0, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 1297, 0, 326, 1304,
	327, 1303, 0, 1314, 328, 329, 330, 331, 332, 333,
	334, 1250, 1283, 1215, 335, 1344, 1345, 722, 0, 336,
	337, 1290, 0, 1271, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 1325, 362, 363, 364, 1274, 1272,
	1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368, 369,
	1307, 370, 372, 1301, 1300, 1220, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 1292, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 1226, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 1315, 1316, 405,
	1239, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	1299, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 1326, 415, 416, 417, 1312, 1313, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	1322, 0, 1249, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1285, 1286, 1289, 528, 1328, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 1327, 737, 447, 529, 448, 1294,
	1295, 0, 1255, 0, 449, 450, 452, 1329, 1287, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	1323, 465, 1332, 467, 468, 1333, 0, 469, 470, 471,
	472, 473, 474, 477, 1278, 1277, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 1217, 304, 1336,
	523, 524, 525, 526, 1240, 1288, 527, 1302, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 1337, 540, 1338, 1317, 541,
	542, 1227, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 1318, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 1298, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 1228, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 1281,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 1296, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	1343, 653, 654, 655, 656, 1319, 660, 661, 662, 663,
	0, 664, 665, 1214, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 1308, 1309,
	1310, 1311, 0, 686, 0, 675, 677, 678, 679, 680,
	1320, 681, 1321, 1238, 682, 683, 684, 685, 676, 687,
	688, 0, 1221, 689, 690, 692, 694, 695, 691, 693,
	696, 1282, 697, 0, 0, 698, 699, 700, 763, 1305,
	1342, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 0, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 1218, 0, 0, 0, 0, 0, 0, 1260, 1232,
	1233, 1234, 3503, 3504, 1243, 0, 1213, 0, 0, 0,
	0, 0, 0, 1211, 1212, 305, 306, 308, 307, 309,
	310, 311, 312, 1244, 313, 314, 0, 1242, 0, 0,
	0, 1284, 1248, 0, 0, 315, 0, 316, 317, 318,
	1324, 319, 320, 321, 322, 323, 324, 325, 715, 1297,
	0, 326, 1304, 327, 1303, 0, 1314, 328, 329, 330,
	331, 332, 333, 334, 1250, 1283, 1215, 335, 1344, 1345,
	722, 0, 336, 337, 1290, 0, 1271, 0, 338, 339,
	340, 341, 342, 343, 344, 345, 0, 0, 347, 348,
	349, 346, 350, 0, 351, 0, 352, 353, 354, 355,
	356, 357, 358, 0, 359, 360, 361, 1325, 362, 363,
	364, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366,
	367, 368, 369, 1307, 370, 372, 1301, 1300, 1220, 375,
	377, 371, 373, 0, 376, 374, 378, 0, 379, 380,
	381, 0, 0, 382, 1292, 384, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 1226, 393, 394,
	395, 397, 399, 396, 398, 400, 401, 402, 403, 404,
	1315, 1316, 405, 1239, 302, 0, 0, 0, 0, 0,
	406, 407, 408, 1299, 0, 0, 0, 409, 0, 410,
	411, 412, 0, 413, 414, 0, 1326, 415, 416, 417,
	1312, 1313, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 1322, 0, 1249, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1285, 1286, 1289, 528, 1328,
	436, 437, 438, 0, 439, 440, 441, 442, 443, 0,
	0, 0, 303, 444, 445, 446, 0, 1327, 737, 447,
	529, 448, 1294, 1295, 0, 1255, 0, 449, 450, 452,
	1329, 1287, 1330, 451, 453, 454, 1331, 455, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 0, 462, 464,
	463, 0, 466, 1323, 465, 1332, 467, 468, 1333, 0,
	469, 470, 471, 472, 473, 474, 477, 1278, 1277, 475,
	476, 478, 479, 0, 480, 481, 483, 486, 482, 484,
	485, 487, 500, 501, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 503, 0, 502, 1334,
	504, 505, 506, 507, 508, 515, 517, 518, 513, 514,
	516, 519, 520, 522, 510, 511, 512, 1335, 521, 509,
	1217, 304, 1336, 523, 524, 525, 526, 1240, 1288, 527,
	1302, 530, 531, 0, 0, 532, 0, 533, 0, 0,
	535, 536, 537, 0, 0, 538, 539, 745, 1337, 540,
	1338, 1317, 541, 542, 1227, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 0, 553, 554, 747, 555,
	556, 557, 748, 558, 559, 560, 1318, 561, 750, 562,
	563, 0, 564, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 574, 1298, 575, 576, 578, 577, 579,
	0, 580, 0, 581, 582, 583, 0, 0, 0, 0,
	0, 584, 585, 587, 0, 588, 589, 590, 591, 586,
	592, 593, 594, 595, 596, 597, 0, 599, 600, 598,
	601, 602, 1339, 603, 604, 605, 606, 607, 1228, 608,
	0, 609, 610, 617, 618, 619, 611, 612, 613, 620,
	621, 622, 623, 624, 625, 0, 627, 628, 626, 629,
	630, 631, 1281, 632, 753, 633, 614, 615, 634, 635,
	1340, 636, 637, 638, 639, 640, 641, 642, 1296, 0,
	643, 0, 644, 645, 646, 647, 648, 649, 651, 616,
	652, 657, 658, 1343, 653, 654, 655, 656, 1319, 660,
	661, 662, 663, 0, 664, 665, 1214, 659, 650, 0,
	666, 667, 668, 669, 670, 671, 0, 672, 673, 0,
	674, 1308, 1309, 1310, 1311, 0, 686, 0, 675, 677,
	678, 679, 680, 1320, 681, 1321, 1238, 682, 683, 684,
	685, 676, 687, 688, 0, 1221, 689, 690, 692, 694,
	695, 691, 693, 696, 1282, 697, 0, 0, 698, 699,
	700, 763, 1305, 1342, 0, 702, 701, 703, 704, 705,
	766, 706, 707, 708, 0, 0, 0, 0, 709, 710,
	767, 711, 712, 713, 1218, 0, 0, 0, 0, 0,
	0, 1260, 1232, 1233, 1234, 1230, 1231, 1243, 0, 1213,
	0, 0, 0, 0, 0, 0, 1211, 1212, 305, 306,
	308, 307, 309, 310, 311, 312, 1244, 313, 314, 0,
	1242, 0, 0, 0, 1284, 1248, 0, 0, 315, 0,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 1297, 0, 326, 1304, 327, 1303, 0, 1314,
	328, 329, 330, 331, 332, 333, 334, 1250, 1283, 1215,
	335, 1344, 1345, 722, 0, 336, 337, 1290, 0, 1271,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	1325, 362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275,
	1279, 365, 366, 367, 368, 369, 1307, 370, 372, 1301,
	1300, 1220, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 1292, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	1226, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 1315, 1316, 405, 1239, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 1299, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 1326,
	415, 416, 417, 1312, 1313, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 1322, 0, 1249, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1285, 1286,
	1289, 528, 1328, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	1327, 737, 447, 529, 448, 1294, 1295, 0, 1255, 0,
	449, 450, 452, 1329, 1287, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 1323, 465, 1332, 467,
	468, 1333, 0, 469, 470, 471, 472, 473, 474, 477,
	1278, 1277, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 1217, 304, 1336, 523, 524, 525, 526,
	1240, 1288, 527, 1302, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 1337, 540, 1338, 1317, 541, 542, 1227, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 1318,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 1298, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 1228, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 1281, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 1296, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 1343, 653, 654, 655,
	656, 1319, 660, 661, 662, 663, 0, 664, 665, 1214,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 1308, 1309, 1310, 1311, 0, 686,
	0, 675, 677, 678, 679, 680, 1320, 681, 1321, 1238,
	682, 683, 684, 685, 676, 687, 688, 0, 1221, 689,
	690, 692, 694, 695, 691, 693, 696, 1282, 697, 0,
	0, 698, 699, 700, 763, 1305, 1342, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 0, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 1218, 0, 0,
	0, 0, 0, 0, 1260, 1232, 1233, 1234, 1230, 1231,
	1243, 0, 1213, 0, 0, 0, 0, 0, 0, 2704,
	2705, 305, 306, 308, 307, 309, 310, 311, 312, 1244,
	313, 314, 0, 1242, 0, 0, 0, 1284, 1248, 0,
	0, 315, 0, 316, 317, 318, 1324, 319, 320, 321,
	322, 323, 324, 325, 715, 1297, 0, 326, 1304, 327,
	1303, 0, 1314, 328, 329, 330, 331, 332, 333, 334,
	1250, 1283, 0, 335, 1344, 1345, 722, 0, 336, 337,
	1290, 0, 1271, 0, 338, 339, 340, 341, 342, 343,
	344, 345, 0, 0, 347, 348, 349, 346, 350, 0,
	351, 0, 352, 353, 354, 355, 356, 357, 358, 0,
	359, 360, 361, 1325, 362, 363, 364, 1274, 1272, 1273,
	1280, 1276, 1275, 1279, 365, 366, 367, 368, 369, 1307,
	370, 372, 1301, 1300, 0, 375, 377, 371, 373, 0,
	376, 374, 378, 0, 379, 380, 381, 0, 0, 382,
	1292, 384, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 1226, 393, 394, 395, 397, 399, 396,
	398, 400, 401, 402, 403, 404, 1315, 1316, 405, 1239,
	302, 0, 0, 0, 0, 0, 406, 407, 408, 1299,
	0, 0, 0, 409, 0, 410, 411, 412, 0, 413,
	414, 0, 1326, 415, 416, 417, 1312, 1313, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 0, 427, 1322,
	0, 1249, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1285, 1286, 1289, 528, 1328, 436, 437, 438, 0,
	439, 440, 441, 442, 443, 0, 0, 0, 303, 444,
	445, 446, 0, 1327, 737, 447, 529, 448, 1294, 1295,
	0, 1255, 0, 449, 450, 452, 1329, 1287, 1330, 451,
	453, 454, 1331, 455, 0, 0, 0, 456, 457, 458,
	459, 460, 461, 0, 462, 464, 463, 0, 466, 1323,
	465, 1332, 467, 468, 1333, 0, 469, 470, 471, 472,
	473, 474, 477, 1278, 1277, 475, 476, 478, 479, 0,
	480, 481, 483, 486, 482, 484, 485, 487, 500, 501,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 503, 0, 502, 1334, 504, 505, 506, 507,
	508, 515, 517, 518, 513, 514, 516, 519, 520, 522,
	510, 511, 512, 1335, 521, 509, 0, 304, 1336, 523,
	524, 525, 526, 1240, 1288, 527, 1302, 530, 531, 0,
	0, 532, 0, 533, 0, 0, 535, 536, 537, 0,
	0, 538, 539, 745, 1337, 540, 1338, 1317, 541, 542,
	1227, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 0, 553, 554, 747, 555, 556, 557, 748, 558,
	559, 560, 1318, 561, 750, 562, 563, 0, 564, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	1298, 575, 576, 578, 577, 579, 0, 580, 0, 581,
	582, 583, 0, 0, 0, 0, 0, 584, 585, 587,
	0, 588, 589, 590, 591, 586, 592, 593, 594, 595,
	596, 597, 0, 599, 600, 598, 601, 602, 1339, 603,
	604, 605, 606, 607, 1228, 608, 0, 609, 610, 617,
	618, 619, 611, 612, 613, 620, 621, 622, 623, 624,
	625, 0, 627, 628, 626, 629, 630, 631, 1281, 632,
	753, 633, 614, 615, 634, 635, 1340, 636, 637, 638,
	639, 640, 641, 642, 1296, 0, 643, 0, 644, 645,
	646, 647, 648, 649, 651, 616, 652, 657, 658, 1343,
	653, 654, 655, 656, 1319, 660, 661, 662, 663, 0,
	664, 665, 0, 659, 650, 0, 666, 667, 668, 669,
	670, 671, 0, 672, 673, 0, 674, 1308, 1309, 1310,
	1311, 0, 686, 0, 675, 677, 678, 679, 680, 1320,
	681, 1321, 1238, 682, 683, 684, 685, 676, 687, 688,
	0, 0, 689, 690, 692, 694, 695, 691, 693, 696,
	1282, 697, 0, 0, 698, 699, 700, 763, 1305, 1342,
	0, 702, 701, 703, 704, 705, 766, 706, 707, 708,
	0, 0, 0, 0, 709, 710, 767, 711, 712, 713,
	0, 0, 0, 0, 0, 0, 0, 1260, 1232, 1233,
	1234, 1230, 1231, 1243, 0, 2965, 0, 0, 0, 0,
	0, 0, 2963, 2964, 305, 306, 308, 307, 309, 310,
	311, 312, 1244, 313, 314, 0, 1242, 0, 0, 0,
	1284, 1248, 0, 0, 315, 0, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 1297, 0,
	326, 1304, 327, 1303, 0, 1314, 328, 329, 330, 331,
	332, 333, 334, 1250, 1283, 0, 335, 1344, 1345, 722,
	0, 336, 337, 1290, 0, 1271, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 1325, 362, 363, 364,
	1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367,
	368, 369, 1307, 370, 372, 1301, 1300, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 1292, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 1226, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 1315,
	1316, 405, 1239, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 1299, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 1326, 415, 416, 417, 1312,
	1313, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 1322, 0, 1249, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1285, 1286, 1289, 528, 1328, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 1327, 737, 447, 529,
	448, 1294, 1295, 0, 1255, 0, 449, 450, 452, 1329,
	1287, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 1323, 465, 1332, 467, 468, 1333, 0, 469,
	470, 471, 472, 473, 474, 477, 1278, 1277, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 0,
	304, 1336, 523, 524, 525, 526, 1240, 1288, 527, 1302,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 1337, 540, 1338,
	1317, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 1318, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 1298, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 3498, 3499, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 1281, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 1296, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 1343, 653, 654, 655, 656, 1319, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	1308, 1309, 1310, 1311, 0, 686, 0, 675, 677, 678,
	679, 680, 1320, 681, 1321, 1238, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 1282, 697, 0, 0, 698, 699, 700,
	763, 1305, 1342, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	1260, 1232, 1233, 1234, 1230, 1231, 1243, 0, 0, 0,
	0, 0, 0, 0, 0, 2322, 2323, 305, 306, 308,
	307, 309, 310, 311, 312, 1244, 313, 314, 0, 1242,
	0, 0, 0, 1284, 1248, 0, 0, 315, 0, 316,
	317, 318, 1324, 319, 320, 321, 322, 323, 324, 325,
	0, 1297, 0, 326, 1304, 327, 1303, 0, 1314, 328,
	329, 330, 331, 332, 333, 334, 1250, 1283, 1215, 335,
	1344, 1345, 722, 0, 336, 337, 1290, 0, 1271, 0,
	338, 339, 340, 341, 342, 343, 344, 345, 0, 0,
	347, 348, 349, 346, 350, 0, 351, 0, 352, 353,
	354, 355, 356, 357, 358, 0, 359, 360, 361, 1325,
	362, 363, 5262, 1274, 1272, 1273, 1280, 1276, 1275, 1279,
	365, 366, 367, 368, 369, 1307, 370, 372, 1301, 1300,
	1220, 375, 377, 371, 373, 0, 376, 374, 378, 0,
	379, 380, 381, 0, 0, 382, 1292, 384, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 1226,
	393, 394, 395, 397, 399, 396, 398, 400, 401, 402,
	403, 404, 1315, 1316, 405, 1239, 302, 0, 0, 0,
	0, 0, 406, 407, 408, 1299, 0, 0, 0, 409,
	0, 410, 411, 412, 0, 413, 414, 0, 1326, 415,
	416, 417, 1312, 1313, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 0, 427, 1322, 0, 1249, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1285, 1286, 1289,
	528, 0, 436, 437, 438, 0, 439, 440, 441, 442,
	443, 0, 0, 0, 303, 444, 445, 446, 0, 1327,
	737, 447, 529, 448, 1294, 1295, 0, 1255, 0, 449,
	450, 452, 0, 1287, 0, 451, 453, 454, 1331, 455,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 0,
	462, 464, 463, 0, 466, 1323, 465, 1332, 467, 468,
	0, 0, 469, 470, 471, 472, 473, 474, 477, 1278,
	1277, 475, 476, 478, 479, 0, 480, 481, 483, 486,
	482, 484, 485, 487, 500, 501, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 503, 0,
	502, 1334, 504, 505, 506, 507, 508, 515, 517, 518,
	513, 514, 516, 519, 520, 522, 510, 511, 512, 1335,
	521, 509, 1217, 304, 0, 523, 524, 525, 526, 1240,
	1288, 527, 1302, 530, 531, 0, 0, 532, 0, 533,
	0, 0, 535, 536, 537, 0, 0, 538, 539, 745,
	1337, 540, 1338, 1317, 541, 542, 1227, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 0, 553, 554,
	747, 555, 556, 557, 748, 558, 559, 560, 1318, 561,
	750, 562, 563, 0, 564, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 1298, 575, 576, 578,
	577, 579, 0, 580, 0, 581, 582, 583, 0, 0,
	0, 0, 0, 584, 585, 587, 0, 588, 589, 590,
	591, 586, 592, 593, 594, 595, 596, 597, 0, 599,
	600, 598, 601, 602, 1339, 603, 604, 605, 606, 607,
	1228, 608, 0, 609, 610, 617, 618, 619, 611, 612,
	613, 620, 621, 622, 623, 624, 625, 0, 627, 628,
	626, 629, 630, 631, 1281, 632, 753, 633, 614, 615,
	634, 635, 0, 636, 637, 638, 639, 640, 641, 642,
	1296, 0, 643, 0, 644, 645, 646, 647, 648, 649,
	651, 616, 652, 657, 658, 1343, 653, 654, 655, 656,
	1319, 660, 661, 662, 663, 0, 664, 665, 1214, 659,
	650, 0, 666, 667, 668, 669, 670, 671, 0, 672,
	673, 0, 674, 1308, 1309, 1310, 1311, 0, 686, 0,
	675, 677, 678, 679, 680, 1320, 681, 1321, 1238, 682,
	683, 684, 685, 676, 5261, 688, 0, 1221, 689, 690,
	692, 694, 695, 691, 693, 696, 1282, 697, 0, 0,
	698, 699, 700, 763, 1305, 1342, 0, 702, 701, 703,
	704, 705, 766, 706, 707, 708, 0, 0, 0, 0,
	709, 710, 767, 711, 712, 713, 0, 0, 0, 0,
	0, 2984, 0, 1260, 1232, 1233, 1234, 1230, 1231, 1243,
	0, 0, 0, 0, 0, 0, 0, 0, 1211, 1212,
	305, 306, 308, 307, 309, 310, 311, 312, 1244, 313,
	314, 0, 1242, 0, 0, 0, 1284, 1248, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 1297, 0, 326, 1304, 327, 1303,
	0, 1314, 328, 329, 330, 331, 332, 333, 334, 0,
	1283, 0, 335, 1344, 1345, 722, 0, 336, 337, 1290,
	0, 1271, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280,
	1276, 1275, 1279, 365, 366, 367, 368, 369, 1307, 370,
	372, 1301, 1300, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 1292,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 1315, 1316, 405, 1239, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 1299, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 1312, 1313, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 1322, 0,
	1249, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1285, 1286, 1289, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 1294, 1295, 0,
	1255, 0, 449, 450, 452, 1329, 1287, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 1323, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 1278, 1277, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 0, 304, 1336, 523, 524,
	525, 526, 1240, 1288, 527, 1302, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 1317, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 1318, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 1298,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 1228, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1281, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 1296, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 1343, 653,
	654, 655, 656, 1319, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 1308, 1309, 1310, 1311,
	0, 686, 0, 675, 677, 678, 679, 680, 1320, 681,
	1321, 1238, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 1282,
	697, 0, 0, 698, 699, 700, 763, 1305, 1342, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 1672, 0, 1260, 1232, 1233, 1234, 1230, 1231, 1243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 1244, 0, 0, 0, 1242, 1284, 1248, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 1297, 0, 326, 1304, 327, 1303,
	0, 1314, 328, 329, 330, 331, 332, 333, 334, 0,
	1283, 0, 335, 1344, 1345, 722, 0, 336, 337, 1290,
	0, 1271, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280,
	1276, 1275, 1279, 365, 366, 367, 368, 369, 1307, 370,
	372, 1301, 1300, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 1292,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 1315, 1316, 405, 1239, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 1299, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 1312, 1313, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 1322, 0,
	1249, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1285, 1286, 1289, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 1294, 1295, 0,
	1255, 0, 449, 450, 452, 1329, 1287, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 1323, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 1278, 1277, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 0, 304, 1336, 523, 524,
	525, 526, 1240, 1288, 527, 1302, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 1317, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 1318, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 1298,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 1228, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1281, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 1296, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 1343, 653,
	654, 655, 656, 1319, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 1308, 1309, 1310, 1311,
	0, 686, 0, 675, 677, 678, 679, 680, 1320, 681,
	1321, 1238, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 1282,
	697, 0, 0, 698, 699, 700, 763, 1305, 1342, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 1202,
	0, 1383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 1244, 0, 0, 1284, 1242, 0, 0, 315, 0,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 1283, 0,
	335, 720, 721, 722, 0, 336, 337, 1290, 0, 1271,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	1325, 362, 363, 364, 1274, 1272, 1273, 1280, 1276, 1275,
	1279, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 1315, 1316, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 1326,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 1322, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1285, 1286,
	1289, 528, 1328, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	1327, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 1329, 1287, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	1369, 462, 464, 463, 0, 466, 1323, 465, 1332, 467,
	468, 1333, 0, 469, 470, 471, 472, 473, 474, 477,
	1278, 1277, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 0, 304, 1336, 523, 524, 525, 526,
	0, 1288, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 1375, 535, 536, 537, 0, 0, 538, 539,
	745, 1337, 540, 1338, 1317, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 1318,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 752, 1377, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 258, 627,
	628, 626, 629, 630, 631, 1281, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 1319, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 260, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 1320, 681, 1321, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 1282, 697, 0,
	0, 698, 699, 700, 1793, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 0, 0, 0,
	252, 709, 710, 767, 711, 712, 713, 1383, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 1373, 0, 2156,
	1284, 0, 0, 0, 315, 0, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 1283, 0, 335, 720, 721, 722,
	0, 336, 337, 1290, 0, 1271, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 1325, 362, 363, 364,
	1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 1315,
	1316, 405, 0, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 1326, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 1322, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1285, 1286, 1289, 528, 1328, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 1327, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 1329,
	1287, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 1369, 462, 464, 463,
	0, 466, 1323, 465, 1332, 467, 468, 1333, 0, 469,
	470, 471, 472, 473, 474, 477, 1278, 1277, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 0,
	304, 1336, 523, 524, 525, 526, 0, 1288, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 1375, 535,
	536, 537, 0, 0, 538, 539, 745, 1337, 540, 1338,
	1317, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 1318, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 752, 1377, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 258, 627, 628, 626, 629, 630,
	631, 1281, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 1319, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 260, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 1320, 681, 1321, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 1282, 697, 0, 0, 698, 699, 700,
	1793, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 252, 709, 710, 767,
	711, 712, 713, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3663, 0, 1383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1373, 0, 2156, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 1284, 0, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 1283, 0, 335, 720,
	721, 722, 0, 336, 337, 1290, 0, 1271, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 1315, 1316, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 1322, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1285, 1286, 1289, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 1327, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 1329, 1287, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 1369, 462,
	464, 463, 0, 466, 1323, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 1278, 1277,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 0, 304, 1336, 523, 524, 525, 526, 0, 1288,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	1375, 535, 536, 537, 0, 0, 538, 539, 745, 1337,
	540, 1338, 1317, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 1318, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 752,
	1377, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 1281, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 1319,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 1320, 681, 1321, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 1282, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 1365, 0, 1383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 1373, 0, 1371, 0, 0,
	1284, 0, 0, 0, 315, 0, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 1283, 0, 335, 720, 721, 722,
	0, 336, 337, 1290, 0, 1271, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 1325, 362, 363, 364,
	1274, 1272, 1273, 1280, 1276, 1275, 1279, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 1315,
	1316, 405, 0, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 1326, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 1322, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1285, 1286, 1289, 528, 1328, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 1327, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 1329,
	1287, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 1369, 462, 464, 463,
	0, 466, 1323, 465, 1332, 467, 468, 1333, 0, 469,
	470, 471, 472, 473, 474, 477, 1278, 1277, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 0,
	304, 1336, 523, 524, 525, 526, 0, 1288, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 1375, 535,
	536, 537, 0, 0, 538, 539, 745, 1337, 540, 1338,
	1317, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 1318, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 752, 1377, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 1281, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 1319, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 1320, 681, 1321, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 1282, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 1383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 1373, 0, 1371, 1284, 0, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	1283, 0, 335, 720, 721, 722, 0, 336, 337, 1290,
	0, 1271, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280,
	1276, 1275, 1279, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 1315, 1316, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 1322, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1285, 1286, 1289, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 1329, 1287, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 1369, 462, 464, 463, 0, 466, 1323, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 1278, 1277, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 0, 304, 1336, 523, 524,
	525, 526, 0, 1288, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 1375, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 1317, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 1318, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 752, 1377, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1281, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 1319, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 1320, 681,
	1321, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 1282,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 1383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 1373,
	0, 1371, 1284, 0, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 1283, 0, 335, 720,
	721, 722, 0, 336, 337, 1290, 0, 1271, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 1274, 1272, 1273, 1280, 1276, 1275, 1279, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 1315, 1316, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 1322, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1285, 1286, 1289, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 1327, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 1329, 1287, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 1323, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 1278, 1277,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 0, 304, 1336, 523, 524, 525, 526, 0, 1288,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 1337,
	540, 1338, 1317, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 1318, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 1281, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 1319,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 1320, 681, 1321, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 1282, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 1383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 4637, 1284, 0,
	0, 0, 315, 0, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 1283, 0, 335, 720, 721, 722, 0, 336,
	337, 1290, 0, 1271, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 1325, 362, 363, 364, 1274, 1272,
	1273, 1280, 1276, 1275, 1279, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 1315, 1316, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 1326, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	1322, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1285, 1286, 1289, 528, 1328, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 1327, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 1329, 1287, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	1323, 465, 1332, 467, 468, 1333, 0, 469, 470, 471,
	472, 473, 474, 477, 1278, 1277, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 0, 304, 1336,
	523, 524, 525, 526, 0, 1288, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 1337, 540, 1338, 1317, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 1318, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 752, 1377, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 1281,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 1319, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	1320, 681, 1321, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 1282, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 299, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 2810, 2811, 2812, 2829, 2830, 2831, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 2832, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 2052, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 2037,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 2822,
	0, 347, 348, 349, 346, 350, 0, 351, 2818, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 2823,
	2824, 2825, 2826, 406, 407, 408, 729, 0, 0, 2817,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 2827, 2828, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 2820, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 2821, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 2036,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 0, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1202, 0, 1667, 2807,
	2808, 2809, 2833, 2819, 2813, 0, 2815, 2816, 2814, 2801,
	2802, 2803, 2804, 2805, 2806, 305, 306, 308, 307, 309,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 714, 0, 0, 0, 315, 0, 316, 317, 318,
	1324, 319, 320, 321, 322, 323, 324, 325, 715, 716,
	0, 326, 717, 327, 718, 0, 719, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 0, 335, 720, 721,
	722, 0, 336, 337, 723, 0, 1631, 0, 338, 339,
	340, 341, 342, 343, 344, 345, 0, 0, 347, 348,
	349, 346, 350, 0, 351, 0, 352, 353, 354, 355,
	356, 357, 358, 0, 359, 360, 361, 1325, 362, 363,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 368, 369, 0, 370, 372, 724, 725, 0, 375,
	377, 371, 373, 0, 376, 374, 378, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 726, 393, 394,
	395, 397, 399, 396, 398, 400, 401, 402, 403, 404,
	727, 728, 405, 0, 302, 0, 0, 0, 0, 0,
	406, 407, 408, 729, 0, 0, 0, 409, 0, 410,
	411, 412, 0, 413, 414, 0, 1326, 415, 416, 417,
	730, 731, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 0, 427, 732, 0, 733, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 734, 735, 736, 528, 1328,
	436, 437, 438, 0, 439, 440, 441, 442, 443, 0,
	0, 0, 0, 444, 445, 446, 0, 1327, 737, 447,
	529, 448, 738, 739, 0, 740, 0, 449, 450, 452,
	1329, 741, 1330, 451, 453, 454, 1331, 455, 0, 0,
	0, 456, 457, 458, 459, 460, 461, 0, 462, 464,
	463, 0, 466, 742, 465, 1332, 467, 468, 1333, 0,
	469, 470, 471, 472, 473, 474, 477, 0, 0, 475,
	476, 478, 479, 0, 480, 481, 483, 486, 482, 484,
	485, 487, 500, 501, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 503, 0, 502, 1334,
	504, 505, 506, 507, 508, 515, 517, 518, 513, 514,
	516, 519, 520, 522, 510, 511, 512, 1335, 521, 509,
	0, 0, 1336, 523, 524, 525, 526, 0, 743, 527,
	744, 530, 531, 0, 0, 532, 0, 533, 0, 0,
	535, 536, 537, 0, 0, 538, 539, 745, 1337, 540,
	1338, 746, 541, 542, 534, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 0, 553, 554, 747, 555,
	556, 557, 748, 558, 559, 560, 749, 561, 750, 562,
	563, 0, 564, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 574, 751, 575, 576, 578, 577, 579,
	0, 580, 0, 581, 582, 583, 0, 0, 0, 0,
	0, 584, 585, 587, 0, 588, 589, 590, 591, 586,
	592, 593, 594, 595, 596, 597, 0, 599, 600, 598,
	601, 602, 1339, 603, 604, 605, 606, 607, 752, 608,
	0, 609, 610, 617, 618, 619, 611, 612, 613, 620,
	621, 622, 623, 624, 625, 258, 627, 628, 626, 629,
	630, 631, 0, 632, 753, 633, 614, 615, 634, 635,
	1340, 636, 637, 638, 639, 640, 641, 642, 754, 0,
	643, 0, 644, 645, 646, 647, 648, 649, 651, 616,
	652, 657, 658, 755, 653, 654, 655, 656, 756, 660,
	661, 662, 663, 0, 664, 665, 0, 659, 650, 260,
	666, 667, 668, 669, 670, 671, 0, 672, 673, 0,
	674, 757, 758, 759, 760, 0, 686, 0, 675, 677,
	678, 679, 680, 761, 681, 762, 0, 682, 683, 684,
	685, 676, 687, 688, 0, 0, 689, 690, 692, 694,
	695, 691, 693, 696, 0, 697, 0, 0, 698, 699,
	700, 1793, 764, 765, 0, 702, 701, 703, 704, 705,
	766, 706, 707, 708, 0, 0, 0, 252, 709, 710,
	767, 711, 712, 713, 0, 1790, 253, 1667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 208, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 1631, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 1325, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 1326, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 1328, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 1327, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 1329,
	741, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 1332, 467, 468, 1333, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 0,
	0, 1336, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 1337, 540, 1338,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 258, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 260, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	1793, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 252, 709, 710, 767,
	711, 712, 713, 1667, 1666, 253, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 208, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 1631, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 1329, 741, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 0, 0, 1336, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 1667,
	1666, 0, 0, 0, 0, 1664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 1817, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 1631, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 1327, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 1329, 741, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 0, 0, 1336, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 1337,
	540, 1338, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 1667, 1666, 0, 0, 0,
	0, 1664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 4018, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 1631, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 1325, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 1326, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 1328, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 1327, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 1329, 741, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 1332, 467, 468, 1333, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 0, 0, 1336,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 1337, 540, 1338, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 2566, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 0, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 1667, 2471, 0, 0, 0, 0, 2472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 1817, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 1631,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	1325, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 1326,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 1328, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	1327, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 1329, 741, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 2470, 464, 463, 0, 466, 742, 465, 1332, 467,
	468, 1333, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 0, 0, 1336, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 1337, 540, 1338, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 0, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 1667, 1666, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 1817,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 1631, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 1325, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 1326, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 1328, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 1327, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 1329,
	741, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 1332, 467, 468, 1333, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 0,
	0, 1336, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 1337, 540, 1338,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 1202, 0, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 1799, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 258, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 260, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 1793, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 299, 0, 0, 252, 709, 710, 767, 711, 712,
	713, 0, 0, 253, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 208, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 304, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 3271, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 2170,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 5455, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 304, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 1787,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 304, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 0, 0, 299,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 3969, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 3944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 3394, 0, 0,
	0, 0, 315, 0, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 0, 2228, 0, 326, 2218,
	327, 2234, 0, 2241, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 2244, 2245, 0, 0, 336,
	337, 0, 0, 1631, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 1325, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	1307, 370, 372, 2232, 2231, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 1292, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 0, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 0, 0, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	2230, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 1326, 415, 416, 417, 2239, 2240, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 0, 0, 0, 528, 1328, 436, 437, 438,
	3938, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 1327, 3940, 447, 529, 448, 2225,
	2226, 0, 2221, 0, 449, 450, 452, 1329, 0, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	0, 465, 1332, 467, 468, 1333, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 0, 0, 1336,
	523, 524, 525, 526, 0, 0, 527, 2233, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 3939, 1337, 540, 1338, 0, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 2215, 555, 556, 557, 2216,
	558, 559, 560, 0, 561, 0, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 2229, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 0, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 0, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 2227, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	2243, 653, 654, 655, 656, 0, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 2235, 2236,
	2237, 2238, 0, 686, 0, 675, 677, 678, 679, 680,
	0, 681, 0, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 0, 2219,
	2242, 3941, 702, 701, 703, 704, 705, 0, 706, 707,
	708, 0, 0, 0, 0, 709, 710, 0, 711, 712,
	713, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 2209, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 4133,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 1383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 2553, 1284, 0, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	1283, 0, 335, 720, 721, 722, 0, 336, 337, 1290,
	0, 1271, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 1274, 1272, 1273, 1280,
	1276, 1275, 1279, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 1315, 1316, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 1322, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1285, 1286, 1289, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 1329, 1287, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 1323, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 1278, 1277, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 0, 304, 1336, 523, 524,
	525, 526, 0, 1288, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 1317, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 1318, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1281, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 1319, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 1320, 681,
	1321, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 1282,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 2222,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 0,
	2228, 0, 326, 2218, 327, 2234, 0, 2241, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 2244,
	2245, 0, 0, 336, 337, 0, 0, 1631, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 1307, 370, 372, 2232, 2231, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 1292, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 0, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 2230, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 2239, 2240, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 0, 0, 0, 528,
	1328, 436, 437, 438, 3938, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 1327, 3940,
	447, 529, 448, 2225, 2226, 0, 2221, 0, 449, 450,
	452, 1329, 0, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 0, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 0, 0, 1336, 523, 524, 525, 526, 0, 0,
	527, 2233, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 3939, 1337,
	540, 1338, 0, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 2215,
	555, 556, 557, 2216, 558, 559, 560, 0, 561, 0,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 2229, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 0,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 0, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 2227,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 2243, 653, 654, 655, 656, 0,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 2235, 2236, 2237, 2238, 0, 686, 0, 675,
	677, 678, 679, 680, 0, 681, 0, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 0, 2219, 2242, 3941, 702, 701, 703, 704,
	705, 0, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 0, 711, 712, 713, 1029, 0, 929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 2209, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	936, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 1026, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	304, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 1028, 0, 659, 650, 934, 666,
	667, 668, 669, 670, 935, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 2193, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 4262, 313,
	314, 0, 0, 0, 0, 0, 714, 939, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 2200, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 304, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 4261, 621, 622, 623, 624, 625,
	0, 2197, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 2199, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 4260, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 2193,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 2249, 313, 314, 0, 0, 0,
	0, 0, 714, 939, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 2200, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 304, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	2248, 621, 622, 623, 624, 625, 0, 2250, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	2199, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	2247, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 2193, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	2192, 313, 314, 0, 0, 0, 0, 0, 714, 939,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 2200, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 304, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 2191, 621, 622, 623,
	624, 625, 0, 2197, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 2199, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 2190, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 927, 0, 929, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 939, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 936, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 304, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 934, 666, 667, 668, 669, 670,
	935, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 3944,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 939, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 0,
	2228, 0, 326, 2218, 327, 2234, 0, 2241, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 2244,
	2245, 0, 0, 336, 337, 0, 0, 1631, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 1307, 370, 372, 2232, 2231, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 1292, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 0, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 0, 0, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 2230, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 2239, 2240, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 0, 0, 0, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 1327, 0,
	447, 529, 448, 2225, 2226, 0, 2221, 0, 449, 450,
	452, 1329, 0, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 0, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 0, 0, 1336, 523, 524, 525, 526, 0, 0,
	527, 2233, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 0, 1337,
	540, 1338, 0, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 2215,
	555, 556, 557, 2216, 558, 559, 560, 0, 561, 0,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 2229, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 0,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 0, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 2227,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 2243, 653, 654, 655, 656, 0,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 2235, 2236, 2237, 2238, 0, 686, 0, 675,
	677, 678, 679, 680, 0, 681, 0, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 0, 2219, 2242, 0, 702, 701, 703, 704,
	705, 0, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 0, 711, 712, 713, 929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 2209, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 936, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 304, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 934, 666, 667, 668,
	669, 670, 935, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 3105, 0, 299, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 939, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 304, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 2193,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 939, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 2200, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 304, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 2606, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	2607, 621, 622, 623, 624, 625, 0, 2197, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	2199, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	2608, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 2222, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 939,
	0, 0, 315, 0, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 0, 2228, 0, 326, 2218,
	327, 2234, 0, 2241, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 2244, 2245, 0, 0, 336,
	337, 0, 0, 1631, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 1325, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	1307, 370, 372, 2232, 2231, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 1292, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 0, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	2230, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 1326, 415, 416, 417, 2239, 2240, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 0, 0, 0, 528, 1328, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 1327, 0, 447, 529, 448, 2225,
	2226, 0, 2221, 0, 449, 450, 452, 1329, 0, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	0, 465, 1332, 467, 468, 1333, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 0, 0, 1336,
	523, 524, 525, 526, 0, 0, 527, 2233, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 0, 1337, 540, 1338, 0, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 2215, 555, 556, 557, 2216,
	558, 559, 560, 0, 561, 0, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 2229, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 0, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 0, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 2227, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	2243, 653, 654, 655, 656, 0, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 2235, 2236,
	2237, 2238, 0, 686, 0, 675, 677, 678, 679, 680,
	0, 681, 0, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 0, 2219,
	2242, 0, 702, 701, 703, 704, 705, 0, 706, 707,
	708, 0, 0, 0, 0, 709, 710, 0, 711, 712,
	713, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 2209, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 304, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 939, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 1666, 0, 0, 0, 0, 1664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4489, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 1631,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	1325, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 1326,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 1328, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	1327, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 1329, 741, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 1332, 467,
	468, 1333, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 0, 0, 1336, 523, 524, 525, 526,
	4365, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 1337, 540, 1338, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 0, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 2490, 0, 1667,
	1666, 0, 0, 0, 0, 1664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 1631, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1720, 735, 736, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 1327, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 1329, 741, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 0, 0, 1336, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 1337,
	540, 1338, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 0, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 1849, 0, 1667, 1666, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 1324,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 1631, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 1325, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 302, 0, 0, 0, 0, 0, 1847,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 1326, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 1328, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 1327, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 1329,
	741, 1330, 451, 453, 454, 1331, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 1332, 467, 468, 1333, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 1334, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 1335, 521, 509, 0,
	0, 1336, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 1337, 540, 1338,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 1848, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 1339, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 1846,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 1340,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 0, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 1717, 0, 1667, 1666, 0, 0, 0,
	0, 1664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 1631, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 1325, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 1326, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1720, 735, 736, 528, 1328, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 1327, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 1329, 741, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 1332, 467, 468, 1333, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 0, 0, 1336,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 1337, 540, 1338, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 0, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 1662, 0, 1667, 1666, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 1324, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 1631, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 1325, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 1326, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 1328, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 1327, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 1329, 741, 1330, 451, 453,
	454, 1331, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	1332, 467, 468, 1333, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 1334, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 1335, 521, 509, 0, 0, 1336, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 1337, 540, 1338, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 1339, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 1340, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 1667,
	1666, 0, 0, 0, 0, 1664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 1324, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 1631, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 1325, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 1326, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	1328, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 1327, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 1329, 741, 1330, 451, 453, 454, 1331, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 1332, 467, 468, 1333,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	1334, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 1335, 521,
	509, 0, 0, 1336, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 1337,
	540, 1338, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 1339, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 1340, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 1667, 1666, 0, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 1324, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 1631, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 1325, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 1326, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 1328, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 1327, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 1329, 741, 1330,
	451, 453, 454, 1331, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 1332, 467, 468, 1333, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 1334, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 1335, 521, 509, 0, 0, 1336,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 1337, 540, 1338, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 1339,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 1340, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 1667, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 1324, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 1631,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	1325, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 1326,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 1328, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	1327, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 1329, 741, 1330, 451, 453, 454, 1331,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 1332, 467,
	468, 1333, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 1334, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	1335, 521, 509, 0, 0, 1336, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 1337, 540, 1338, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 1339, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 1340, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	3170, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 3961, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 3174, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 3960, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 3173, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 3957, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 3959, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 3956, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	3172, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 3958, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 3170, 336, 337, 723,
	0, 0, 3164, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 3166, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	3174, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 3173, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	3163, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 3172, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	3171, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 1930,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 1929, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 1927, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	1928, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 304, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 1931,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 1926,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 1924, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 1925, 701,
	703, 704, 705, 766, 706, 707, 708, 1635, 0, 299,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1637, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 304, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	1375, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 1632, 0, 299, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1634, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	304, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 1375, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 1538, 0, 299, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1540, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 304, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 1375, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 802, 0, 299, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 800, 311, 312, 789, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 792, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 798, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	794, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	801, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 788,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 789, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 792, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 793, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 794, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 787, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 789, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 792, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	793, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 794, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 789, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 792, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 4375, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	794, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 299,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 304, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	1375, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 299, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 3837, 521, 509, 0, 304, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 3363, 0, 299, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	3362, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 304, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 2574,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 304, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 2518, 0, 299,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 2517, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 304, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 2502, 0, 299, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 2504, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	304, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	2464, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 304, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 1375, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 1765,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1764, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 304, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1655, 0, 299,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 304, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 1648, 0, 299, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1650, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	304, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 1455, 0, 299, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1454, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 304, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 1445, 0, 299, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1444, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 304, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 1442,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1441, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 304, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1437, 0, 299,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1436, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 304, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 769, 0, 299, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	304, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 290, 0, 299, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 304, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 299, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 304, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 792, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	793, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 794, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 2615, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 304, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 299,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 2613, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 302, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 303, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 304, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 299, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 2611, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 302, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 303,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 304, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 299, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 302, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 2525, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 303, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 304, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 302, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 2275, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 303, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	304, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 302,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	2269, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 303, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 304, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 1013,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 1012,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 1011, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 891, 0, 299,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 880, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 889, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 882, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 888, 414, 884, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 885, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 883, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 886, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 887, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 881, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 874, 0, 299, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 880, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 889, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 882, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 888, 414, 884, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 885, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 883, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 886, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 887, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 881, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 3960,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 4727, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 1483,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 1486, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 1484, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 862, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 861, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 860, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 1487, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 858, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1483, 0, 299,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 1486, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 1484, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 862,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 861, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	860, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 1487, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 858, 758, 759, 760, 0, 686, 0, 675,
	1485, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 869, 0, 299, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 867, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 778, 0, 299, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	777, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 776, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 299, 3271, 0, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	5036, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 3777, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 299,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 4609, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 299, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 4319, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 299, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 3039, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 3271, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 3355, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 2408, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 861, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 860, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 858, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 299,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 2585, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 2572, 0, 299, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 1821, 0, 299, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 1813, 0, 299, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 852,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 848, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 853, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 862, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 861, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 860, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 1798, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 858, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1771, 0, 299,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1770, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 1754, 0, 299, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1752, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 1746, 0, 299, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 1724, 0, 299, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1722, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 1715,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1676, 0, 299,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 1640, 0, 299, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 1489, 0, 299, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	861, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 860, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 858, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 1460, 0, 299, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1459, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 1451,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1450, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 1400, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 872, 0, 299, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 852, 0, 299, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 848, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 847,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	853, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 862, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 861, 604,
	605, 606, 607, 849, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 860, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 850, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 858, 758, 759, 760,
	0, 686, 0, 675, 854, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 841,
	0, 299, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 842, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 804, 0, 299,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 734, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 796, 0, 299, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 773, 0, 299, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 299, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 3992, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 861, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 860, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 858, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 299,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 3881, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 299, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 3855, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 299, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 3851, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 3802, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	3800, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 632, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 299,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 3788, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 299, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 3785, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 299, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 3374, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 299, 0, 0,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 715, 716, 0,
	326, 717, 327, 718, 0, 719, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 720, 721, 722,
	0, 336, 337, 723, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 0, 370, 372, 724, 725, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 726, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 727,
	728, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 729, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 730,
	731, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 732, 0, 733, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 734, 735, 736, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 737, 447, 529,
	448, 738, 739, 0, 740, 0, 449, 450, 452, 0,
	741, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 742, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 743, 527, 744,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 745, 0, 540, 0,
	746, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 747, 555, 556,
	557, 748, 558, 559, 560, 749, 561, 750, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 751, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 752, 608, 0,
	609, 610, 842, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 0, 632, 753, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 754, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 755, 653, 654, 655, 656, 756, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	757, 758, 759, 760, 0, 686, 0, 675, 677, 678,
	679, 680, 761, 681, 762, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	763, 764, 765, 0, 702, 701, 703, 704, 705, 766,
	706, 707, 708, 299, 0, 0, 0, 709, 710, 767,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 714, 0, 2543, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 715, 716, 0, 326, 717, 327, 718,
	0, 719, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 720, 721, 722, 0, 336, 337, 723,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 368, 369, 0, 370,
	372, 724, 725, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 726, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 727, 728, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 729, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 730, 731, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 732, 0,
	733, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	734, 735, 736, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 737, 447, 529, 448, 738, 739, 0,
	740, 0, 449, 450, 452, 0, 741, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 742, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 743, 527, 744, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 745, 0, 540, 0, 746, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 747, 555, 556, 557, 748, 558, 559,
	560, 749, 561, 750, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 751,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 752, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 0, 0, 753,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 754, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 755, 653,
	654, 655, 656, 756, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 757, 758, 759, 760,
	0, 686, 0, 675, 677, 678, 679, 680, 761, 681,
	762, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 763, 764, 765, 0,
	702, 701, 703, 704, 705, 766, 706, 707, 708, 299,
	0, 0, 0, 709, 710, 767, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 715,
	716, 0, 326, 717, 327, 718, 0, 719, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 720,
	721, 722, 0, 336, 337, 723, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 0, 370, 372, 724, 725, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 726, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 727, 728, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 729, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 730, 731, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 732, 0, 733, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1422, 735, 736, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 737,
	447, 529, 448, 738, 739, 0, 740, 0, 449, 450,
	452, 0, 741, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 742, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 743,
	527, 744, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 745, 0,
	540, 0, 746, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 747,
	555, 556, 557, 748, 558, 559, 560, 749, 561, 750,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 751, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 752,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 0, 632, 753, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 754,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 755, 653, 654, 655, 656, 756,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 757, 758, 759, 760, 0, 686, 0, 675,
	677, 678, 679, 680, 761, 681, 762, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 763, 764, 765, 0, 702, 701, 703, 704,
	705, 766, 706, 707, 708, 299, 0, 0, 0, 709,
	710, 767, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 715, 716, 0, 326, 717,
	327, 718, 0, 719, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 720, 721, 722, 0, 336,
	337, 723, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	0, 370, 372, 724, 725, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 726, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 727, 728, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	729, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 730, 731, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	732, 0, 733, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 734, 735, 736, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 737, 447, 529, 448, 738,
	739, 0, 740, 0, 449, 450, 452, 0, 741, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	742, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 743, 527, 744, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 745, 0, 540, 0, 746, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 747, 555, 556, 557, 748,
	558, 559, 560, 749, 561, 750, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 751, 575, 576, 1348, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 752, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 0,
	632, 753, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 754, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	755, 653, 654, 655, 656, 756, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 757, 758,
	759, 760, 0, 686, 0, 675, 677, 678, 679, 680,
	761, 681, 762, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 763, 764,
	765, 0, 702, 701, 703, 704, 705, 766, 706, 707,
	708, 299, 0, 0, 0, 709, 710, 767, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 715, 716, 0, 326, 717, 327, 718, 0, 719,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 720, 721, 722, 0, 336, 337, 723, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 368, 369, 0, 370, 372, 724,
	725, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	726, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 727, 728, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 729, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 730, 731, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 732, 0, 733, 0,
	0, 429, 430, 431, 432, 433, 434, 435, 734, 735,
	736, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 737, 447, 529, 448, 738, 739, 0, 740, 0,
	449, 450, 452, 0, 741, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 742, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 743, 527, 744, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	745, 0, 540, 0, 746, 541, 542, 534, 543, 544,
	545, 0, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 747, 555, 556, 557, 748, 558, 559, 560, 749,
	561, 750, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 0, 573, 574, 751, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 752, 0, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 0, 632, 753, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 754, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 755, 653, 654, 655,
	656, 756, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 757, 758, 759, 760, 0, 686,
	0, 675, 677, 678, 679, 680, 761, 681, 762, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 763, 764, 765, 0, 702, 701,
	703, 704, 705, 766, 706, 707, 708, 1760, 0, 1467,
	0, 709, 710, 767, 711, 712, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 308, 307,
	309, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 0, 326, 0, 327, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 0, 335, 0,
	0, 0, 0, 336, 337, 0, 0, 0, 0, 338,
	339, 340, 341, 342, 343, 344, 345, 0, 0, 347,
	348, 349, 346, 350, 0, 351, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 359, 360, 361, 0, 362,
	363, 364, 0, 0, 0, 0, 0, 0, 1469, 365,
	366, 367, 368, 369, 0, 370, 372, 0, 0, 0,
	375, 377, 371, 373, 0, 376, 374, 378, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 0, 393,
	394, 395, 397, 399, 396, 398, 400, 401, 402, 403,
	404, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 0, 0, 409, 0,
	410, 411, 412, 0, 413, 414, 0, 0, 415, 416,
	417, 0, 0, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1759, 0, 0, 528,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 443,
	0, 0, 0, 0, 444, 445, 446, 0, 0, 0,
	447, 529, 448, 0, 0, 0, 0, 0, 449, 450,
	452, 0, 0, 0, 451, 453, 454, 0, 455, 0,
	0, 0, 456, 457, 458, 459, 460, 461, 0, 462,
	464, 463, 0, 466, 0, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 472, 473, 474, 477, 0, 0,
	475, 476, 478, 479, 0, 480, 481, 483, 486, 482,
	484, 485, 487, 500, 501, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 503, 0, 502,
	0, 504, 505, 506, 507, 508, 515, 517, 518, 513,
	514, 516, 519, 520, 522, 510, 511, 512, 0, 521,
	509, 0, 0, 0, 523, 524, 525, 526, 0, 0,
	527, 0, 530, 531, 0, 0, 532, 0, 533, 0,
	0, 535, 536, 537, 0, 0, 538, 539, 0, 0,
	540, 0, 0, 541, 542, 534, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 0, 553, 554, 0,
	555, 556, 557, 0, 558, 559, 560, 0, 561, 0,
	562, 563, 0, 564, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 575, 576, 578, 577,
	579, 0, 580, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 584, 585, 587, 0, 588, 589, 590, 591,
	586, 592, 593, 594, 595, 596, 597, 0, 599, 600,
	598, 601, 602, 0, 603, 604, 605, 606, 607, 0,
	608, 0, 609, 610, 617, 618, 619, 611, 612, 613,
	620, 621, 622, 623, 624, 625, 0, 627, 628, 626,
	629, 630, 631, 1470, 632, 0, 633, 614, 615, 634,
	635, 0, 636, 637, 638, 639, 640, 641, 642, 0,
	0, 643, 0, 644, 645, 646, 647, 648, 649, 651,
	616, 652, 657, 658, 0, 653, 654, 655, 656, 0,
	660, 661, 662, 663, 0, 664, 665, 0, 659, 650,
	0, 666, 667, 668, 669, 670, 671, 0, 672, 673,
	0, 674, 0, 0, 0, 0, 0, 686, 0, 675,
	677, 678, 679, 680, 0, 681, 0, 0, 682, 683,
	684, 685, 676, 687, 688, 0, 0, 689, 690, 692,
	694, 695, 691, 693, 696, 0, 697, 0, 0, 698,
	699, 700, 0, 0, 0, 0, 702, 701, 703, 704,
	705, 0, 706, 707, 708, 1679, 0, 1467, 0, 709,
	710, 0, 711, 712, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 308, 307, 309, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 0,
	326, 0, 327, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 0, 335, 0, 0, 0,
	0, 336, 337, 0, 0, 0, 0, 338, 339, 340,
	341, 342, 343, 344, 345, 0, 0, 347, 348, 349,
	346, 350, 0, 351, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 359, 360, 361, 0, 362, 363, 364,
	0, 0, 0, 0, 0, 0, 1469, 365, 366, 367,
	368, 369, 0, 370, 372, 0, 0, 0, 375, 377,
	371, 373, 0, 376, 374, 378, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 0, 393, 394, 395,
	397, 399, 396, 398, 400, 401, 402, 403, 404, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 0, 0, 409, 0, 410, 411,
	412, 0, 413, 414, 0, 0, 415, 416, 417, 0,
	0, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1678, 0, 0, 528, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 443, 0, 0,
	0, 0, 444, 445, 446, 0, 0, 0, 447, 529,
	448, 0, 0, 0, 0, 0, 449, 450, 452, 0,
	0, 0, 451, 453, 454, 0, 455, 0, 0, 0,
	456, 457, 458, 459, 460, 461, 0, 462, 464, 463,
	0, 466, 0, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 472, 473, 474, 477, 0, 0, 475, 476,
	478, 479, 0, 480, 481, 483, 486, 482, 484, 485,
	487, 500, 501, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 503, 0, 502, 0, 504,
	505, 506, 507, 508, 515, 517, 518, 513, 514, 516,
	519, 520, 522, 510, 511, 512, 0, 521, 509, 0,
	0, 0, 523, 524, 525, 526, 0, 0, 527, 0,
	530, 531, 0, 0, 532, 0, 533, 0, 0, 535,
	536, 537, 0, 0, 538, 539, 0, 0, 540, 0,
	0, 541, 542, 534, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 0, 553, 554, 0, 555, 556,
	557, 0, 558, 559, 560, 0, 561, 0, 562, 563,
	0, 564, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 575, 576, 578, 577, 579, 0,
	580, 0, 581, 582, 583, 0, 0, 0, 0, 0,
	584, 585, 587, 0, 588, 589, 590, 591, 586, 592,
	593, 594, 595, 596, 597, 0, 599, 600, 598, 601,
	602, 0, 603, 604, 605, 606, 607, 0, 608, 0,
	609, 610, 617, 618, 619, 611, 612, 613, 620, 621,
	622, 623, 624, 625, 0, 627, 628, 626, 629, 630,
	631, 1470, 632, 0, 633, 614, 615, 634, 635, 0,
	636, 637, 638, 639, 640, 641, 642, 0, 0, 643,
	0, 644, 645, 646, 647, 648, 649, 651, 616, 652,
	657, 658, 0, 653, 654, 655, 656, 0, 660, 661,
	662, 663, 0, 664, 665, 0, 659, 650, 0, 666,
	667, 668, 669, 670, 671, 0, 672, 673, 0, 674,
	0, 0, 0, 0, 0, 686, 0, 675, 677, 678,
	679, 680, 0, 681, 0, 0, 682, 683, 684, 685,
	676, 687, 688, 0, 0, 689, 690, 692, 694, 695,
	691, 693, 696, 0, 697, 0, 0, 698, 699, 700,
	0, 0, 0, 0, 702, 701, 703, 704, 705, 0,
	706, 707, 708, 1465, 0, 1467, 0, 709, 710, 0,
	711, 712, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 308, 307, 309, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 0, 326, 0,
	327, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 335, 0, 0, 0, 0, 336,
	337, 0, 0, 0, 0, 338, 339, 340, 341, 342,
	343, 344, 345, 0, 0, 347, 348, 349, 346, 350,
	0, 351, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 359, 360, 361, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 0, 1469, 365, 366, 367, 368, 369,
	0, 370, 372, 0, 0, 0, 375, 377, 371, 373,
	0, 376, 374, 378, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 0, 393, 394, 395, 397, 399,
	396, 398, 400, 401, 402, 403, 404, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 0, 0, 409, 0, 410, 411, 412, 0,
	413, 414, 0, 0, 415, 416, 417, 0, 0, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1464, 0, 0, 528, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 443, 0, 0, 0, 0,
	444, 445, 446, 0, 0, 0, 447, 529, 448, 0,
	0, 0, 0, 0, 449, 450, 452, 0, 0, 0,
	451, 453, 454, 0, 455, 0, 0, 0, 456, 457,
	458, 459, 460, 461, 0, 462, 464, 463, 0, 466,
	0, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	472, 473, 474, 477, 0, 0, 475, 476, 478, 479,
	0, 480, 481, 483, 486, 482, 484, 485, 487, 500,
	501, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 503, 0, 502, 0, 504, 505, 506,
	507, 508, 515, 517, 518, 513, 514, 516, 519, 520,
	522, 510, 511, 512, 0, 521, 509, 0, 0, 0,
	523, 524, 525, 526, 0, 0, 527, 0, 530, 531,
	0, 0, 532, 0, 533, 0, 0, 535, 536, 537,
	0, 0, 538, 539, 0, 0, 540, 0, 0, 541,
	542, 534, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 0, 555, 556, 557, 0,
	558, 559, 560, 0, 561, 0, 562, 563, 0, 564,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 575, 576, 578, 577, 579, 0, 580, 0,
	581, 582, 583, 0, 0, 0, 0, 0, 584, 585,
	587, 0, 588, 589, 590, 591, 586, 592, 593, 594,
	595, 596, 597, 0, 599, 600, 598, 601, 602, 0,
	603, 604, 605, 606, 607, 0, 608, 0, 609, 610,
	617, 618, 619, 611, 612, 613, 620, 621, 622, 623,
	624, 625, 0, 627, 628, 626, 629, 630, 631, 1470,
	632, 0, 633, 614, 615, 634, 635, 0, 636, 637,
	638, 639, 640, 641, 642, 0, 0, 643, 0, 644,
	645, 646, 647, 648, 649, 651, 616, 652, 657, 658,
	0, 653, 654, 655, 656, 0, 660, 661, 662, 663,
	0, 664, 665, 0, 659, 650, 0, 666, 667, 668,
	669, 670, 671, 0, 672, 673, 0, 674, 0, 0,
	0, 0, 0, 686, 0, 675, 677, 678, 679, 680,
	0, 681, 0, 0, 682, 683, 684, 685, 676, 687,
	688, 0, 0, 689, 690, 692, 694, 695, 691, 693,
	696, 0, 697, 0, 0, 698, 699, 700, 0, 0,
	0, 0, 702, 701, 703, 704, 705, 0, 706, 707,
	708, 2289, 0, 1467, 0, 709, 710, 0, 711, 712,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 0, 326, 0, 327, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 0, 0, 0, 0, 336, 337, 0,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 1469, 365, 366, 367, 368, 369, 0, 370,
	372, 0, 0, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 0, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 0, 0, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	0, 0, 0, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 0, 447, 529, 448, 0, 0, 0,
	0, 0, 449, 450, 452, 0, 0, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 0, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 0, 527, 0, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 0, 0, 540, 0, 0, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 0, 555, 556, 557, 0, 558, 559,
	560, 0, 561, 0, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 0, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1470, 632, 0,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 0, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 0, 653,
	654, 655, 656, 0, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 0, 0, 0, 0,
	0, 686, 0, 675, 677, 678, 679, 680, 0, 681,
	0, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 0, 0, 0, 0,
	702, 701, 703, 704, 705, 0, 706, 707, 708, 2256,
	0, 1467, 0, 709, 710, 0, 711, 712, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	308, 307, 309, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 0, 326, 0, 327, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 0,
	335, 0, 0, 0, 0, 336, 337, 0, 0, 0,
	0, 338, 339, 340, 341, 342, 343, 344, 345, 0,
	0, 347, 348, 349, 346, 350, 0, 351, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 359, 360, 361,
	0, 362, 363, 364, 0, 0, 0, 0, 0, 0,
	1469, 365, 366, 367, 368, 369, 0, 370, 372, 0,
	0, 0, 375, 377, 371, 373, 0, 376, 374, 378,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	0, 393, 394, 395, 397, 399, 396, 398, 400, 401,
	402, 403, 404, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 408, 0, 0, 0, 0,
	409, 0, 410, 411, 412, 0, 413, 414, 0, 0,
	415, 416, 417, 0, 0, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 0, 427, 0, 0, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 0, 0,
	0, 528, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 443, 0, 0, 0, 0, 444, 445, 446, 0,
	0, 0, 447, 529, 448, 0, 0, 0, 0, 0,
	449, 450, 452, 0, 0, 0, 451, 453, 454, 0,
	455, 0, 0, 0, 456, 457, 458, 459, 460, 461,
	0, 462, 464, 463, 0, 466, 0, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 472, 473, 474, 477,
	0, 0, 475, 476, 478, 479, 0, 480, 481, 483,
	486, 482, 484, 485, 487, 500, 501, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 503,
	0, 502, 0, 504, 505, 506, 507, 508, 515, 517,
	518, 513, 514, 516, 519, 520, 522, 510, 511, 512,
	0, 521, 509, 0, 0, 0, 523, 524, 525, 526,
	0, 0, 527, 0, 530, 531, 0, 0, 532, 0,
	533, 0, 0, 535, 536, 537, 0, 0, 538, 539,
	0, 0, 540, 0, 0, 541, 542, 534, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 0, 553,
	554, 0, 555, 556, 557, 0, 558, 559, 560, 0,
	561, 0, 562, 563, 0, 564, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 575, 576,
	578, 577, 579, 0, 580, 0, 581, 582, 583, 0,
	0, 0, 0, 0, 584, 585, 587, 0, 588, 589,
	590, 591, 586, 592, 593, 594, 595, 596, 597, 0,
	599, 600, 598, 601, 602, 0, 603, 604, 605, 606,
	607, 0, 608, 0, 609, 610, 617, 618, 619, 611,
	612, 613, 620, 621, 622, 623, 624, 625, 0, 627,
	628, 626, 629, 630, 631, 1470, 632, 0, 633, 614,
	615, 634, 635, 0, 636, 637, 638, 639, 640, 641,
	642, 0, 0, 643, 0, 644, 645, 646, 647, 648,
	649, 651, 616, 652, 657, 658, 0, 653, 654, 655,
	656, 0, 660, 661, 662, 663, 0, 664, 665, 0,
	659, 650, 0, 666, 667, 668, 669, 670, 671, 0,
	672, 673, 0, 674, 0, 0, 0, 0, 0, 686,
	0, 675, 677, 678, 679, 680, 0, 681, 0, 0,
	682, 683, 684, 685, 676, 687, 688, 0, 0, 689,
	690, 692, 694, 695, 691, 693, 696, 0, 697, 0,
	0, 698, 699, 700, 0, 0, 0, 0, 702, 701,
	703, 704, 705, 1467, 706, 707, 708, 0, 0, 0,
	0, 709, 710, 0, 711, 712, 713, 0, 0, 0,
	305, 306, 308, 307, 309, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 0, 326, 0, 327, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 335, 0, 0, 0, 0, 336, 337, 0,
	0, 0, 0, 338, 339, 340, 341, 342, 343, 344,
	345, 0, 0, 347, 348, 349, 346, 350, 0, 351,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 359,
	360, 361, 0, 362, 363, 364, 0, 0, 0, 0,
	0, 0, 1469, 365, 366, 367, 368, 369, 0, 370,
	372, 0, 0, 0, 375, 377, 371, 373, 0, 376,
	374, 378, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 0, 393, 394, 395, 397, 399, 396, 398,
	400, 401, 402, 403, 404, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	0, 0, 409, 0, 410, 411, 412, 0, 413, 414,
	0, 0, 415, 416, 417, 0, 0, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	0, 0, 0, 528, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 443, 0, 0, 0, 0, 444, 445,
	446, 0, 0, 0, 447, 529, 448, 0, 0, 0,
	0, 0, 449, 450, 452, 0, 0, 0, 451, 453,
	454, 0, 455, 0, 0, 0, 456, 457, 458, 459,
	460, 461, 0, 462, 464, 463, 0, 466, 0, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 472, 473,
	474, 477, 0, 0, 475, 476, 478, 479, 0, 480,
	481, 483, 486, 482, 484, 485, 487, 500, 501, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 503, 0, 502, 0, 504, 505, 506, 507, 508,
	515, 517, 518, 513, 514, 516, 519, 520, 522, 510,
	511, 512, 0, 521, 509, 0, 0, 0, 523, 524,
	525, 526, 0, 0, 527, 0, 530, 531, 0, 0,
	532, 0, 533, 0, 0, 535, 536, 537, 0, 0,
	538, 539, 0, 0, 540, 0, 0, 541, 542, 534,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	0, 553, 554, 0, 555, 556, 557, 0, 558, 559,
	560, 0, 561, 0, 562, 563, 0, 564, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	575, 576, 578, 577, 579, 0, 580, 0, 581, 582,
	583, 0, 0, 0, 0, 0, 584, 585, 587, 0,
	588, 589, 590, 591, 586, 592, 593, 594, 595, 596,
	597, 0, 599, 600, 598, 601, 602, 0, 603, 604,
	605, 606, 607, 0, 608, 0, 609, 610, 617, 618,
	619, 611, 612, 613, 620, 621, 622, 623, 624, 625,
	0, 627, 628, 626, 629, 630, 631, 1470, 632, 0,
	633, 614, 615, 634, 635, 0, 636, 637, 638, 639,
	640, 641, 642, 0, 0, 643, 0, 644, 645, 646,
	647, 648, 649, 651, 616, 652, 657, 658, 0, 653,
	654, 655, 656, 0, 660, 661, 662, 663, 0, 664,
	665, 0, 659, 650, 0, 666, 667, 668, 669, 670,
	671, 0, 672, 673, 0, 674, 0, 0, 0, 0,
	0, 686, 0, 675, 677, 678, 679, 680, 0, 681,
	0, 0, 682, 683, 684, 685, 676, 687, 688, 0,
	0, 689, 690, 692, 694, 695, 691, 693, 696, 0,
	697, 0, 0, 698, 699, 700, 0, 0, 0, 0,
	702, 701, 703, 704, 705, 0, 706, 707, 708, 0,
	0, 0, 0, 709, 710, 0, 711, 712, 713, 1981,
	1982, 0, 2014, 2015, 2016, 2025, 2026, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2018, 2012, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 1981, 1982, 0, 2014, 2015, 2016, 2025,
	2026, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 2018, 2012, 0, 1983,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	2003, 0, 0, 0, 0, 0, 2031, 1981, 1982, 2000,
	2014, 2015, 2016, 2025, 2026, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	2018, 2012, 0, 1983, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 2003, 0, 0, 0, 0, 0,
	2031, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2003, 0,
	2006, 2007, 2008, 2009, 0, 0, 0, 2000, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2006, 2007, 2008, 2009, 0, 0,
	0, 0, 0, 2022, 1989, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 2011, 2013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 0, 2029, 0, 2006, 2007,
	2008, 2009, 0, 1998, 1999, 0, 0, 2022, 1989, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 2011, 2013,
	0, 0, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2004, 2028, 0,
	2029, 0, 0, 0, 0, 0, 0, 1998, 1999, 0,
	0, 2022, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 2011, 2013, 0, 0, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 2028, 0, 2029, 0, 2030, 0, 0, 0,
	0, 1998, 1999, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2019, 0, 0,
	2020, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	0, 0, 0, 0, 0, 2004, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2019, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 0,
	1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027, 0,
	0, 0, 0, 0, 0, 0, 2010, 0, 0, 0,
	2036, 0, 0, 2018, 2012, 0, 0, 0, 2023, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2005, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 2036, 0, 0, 0, 0, 0,
	1983, 0, 2023, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2036, 0,
	1995, 1996, 2002, 2024, 2001, 1997, 0, 1994, 1992, 1993,
	1985, 1986, 1987, 1988, 1990, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3584, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 1996, 2002, 2024, 2001, 1997,
	0, 1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991,
	0, 2006, 2007, 2008, 2009, 0, 0, 0, 0, 3583,
	0, 1989, 0, 0, 0, 0, 2021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 1996,
	2002, 2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986,
	1987, 1988, 1990, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2844, 2022, 0, 1981, 1982, 2032, 2014,
	2015, 2016, 2025, 2026, 2027, 2011, 2013, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2018,
	2012, 0, 0, 0, 0, 2028, 0, 2029, 1984, 0,
	0, 0, 0, 0, 1998, 1999, 0, 0, 0, 2031,
	1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027, 0,
	0, 0, 0, 2020, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 2018, 2012, 0, 1983, 0, 2004, 0,
	0, 0, 1984, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 0, 2031, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 2003, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 2019, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 2007, 2008,
	2009, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 2006, 2007, 2008, 2009, 0, 0, 0, 0, 0,
	2022, 1989, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 2011, 2013, 0, 0, 2005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 2029, 0, 0, 0, 0, 0, 0,
	1998, 1999, 0, 0, 2022, 2023, 1981, 1982, 2032, 2014,
	2015, 2016, 2025, 2026, 2027, 2011, 2013, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2018,
	2012, 0, 0, 0, 2004, 2028, 0, 2029, 1984, 0,
	0, 2036, 0, 0, 1998, 1999, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2020, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 2004, 0,
	0, 0, 0, 2030, 0, 0, 0, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 2021,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994, 1992,
	1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 2019, 0,
	0, 0, 5164, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 0, 2006, 2007, 2008,
	2009, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 2023, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 2011, 2013, 0, 0, 2005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 2029, 0, 0, 0, 2036, 0, 0,
	1998, 1999, 0, 0, 0, 2023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 0, 0, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 0, 0, 1995, 1996, 2002,
	2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987,
	1988, 1990, 1991, 0, 2019, 0, 0, 0, 5064, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 2021,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994, 1992,
	1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 0, 0,
	0, 0, 5013, 1981, 1982, 0, 2014, 2015, 2016, 2025,
	2026, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 2018, 2012, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	0, 1981, 1982, 1983, 2014, 2015, 2016, 2025, 2026, 2027,
	0, 2023, 0, 0, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 2000, 2018, 2012, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2003, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2006, 2007, 2008, 2009, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 1996, 2002,
	2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987,
	1988, 1990, 1991, 0, 0, 0, 0, 2022, 5012, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 2011, 2013,
	0, 0, 2006, 2007, 2008, 2009, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 2028, 0,
	2029, 0, 0, 0, 0, 0, 0, 1998, 1999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 0, 2032,
	0, 2004, 0, 0, 0, 0, 2011, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 2029, 0,
	0, 0, 0, 0, 0, 1998, 1999, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 2019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2019,
	0, 0, 2010, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 1982, 0, 2014, 2015, 2016,
	2025, 2026, 2027, 0, 0, 0, 0, 0, 2023, 0,
	0, 0, 0, 0, 0, 0, 0, 2018, 2012, 0,
	2010, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2031, 0, 0,
	0, 0, 0, 0, 2036, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 2023, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 1996, 2002, 2024, 2001, 1997,
	0, 1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991,
	0, 0, 0, 0, 0, 4813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 2007, 2008, 2009, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994,
	1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 2022, 0,
	0, 0, 2032, 4633, 0, 0, 0, 0, 0, 2011,
	2013, 0, 0, 1981, 1982, 0, 2014, 2015, 2016, 2025,
	2026, 2027, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 2029, 0, 0, 0, 0, 2018, 2012, 1998, 1999,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2004, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2019, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2006, 2007, 2008, 2009, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027,
	0, 0, 0, 2010, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 2012, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 2022, 0, 2005,
	0, 2032, 0, 0, 2031, 0, 0, 0, 2011, 2013,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 2028, 2023,
	2029, 1983, 0, 0, 0, 0, 0, 1998, 1999, 0,
	0, 0, 2003, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 0, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 2036, 0, 0, 0, 0,
	0, 2004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 2007, 2008, 2009, 0, 0, 0, 0,
	0, 2019, 1989, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 0, 0, 1995, 1996, 2002, 2024, 2001,
	1997, 0, 1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990,
	1991, 0, 0, 0, 0, 0, 4537, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 2011, 2013, 0, 0,
	1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027, 0,
	0, 0, 2010, 0, 0, 0, 2028, 0, 2029, 0,
	0, 0, 0, 2018, 2012, 1998, 1999, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 0, 2031, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 2037, 0, 0, 0, 0, 0, 0, 2023, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 0, 0, 0, 2030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 2007, 2008, 2009, 0, 0, 0, 0, 0,
	0, 1989, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 1996, 2002, 2024, 2001, 1997,
	2010, 1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991,
	0, 0, 0, 0, 0, 4536, 0, 0, 0, 0,
	0, 0, 0, 0, 2022, 0, 2005, 0, 2032, 0,
	0, 0, 0, 0, 0, 2011, 2013, 0, 0, 1981,
	1982, 0, 2014, 2015, 2016, 2025, 2026, 2027, 0, 0,
	0, 0, 0, 0, 0, 2028, 2023, 2029, 0, 0,
	0, 0, 2018, 2012, 1998, 1999, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 2004, 0,
	2037, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2003, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2019, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994,
	1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 0,
	0, 0, 0, 4535, 0, 0, 0, 0, 0, 0,
	2006, 2007, 2008, 2009, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 1981, 1982, 0,
	2014, 2015, 2016, 2025, 2026, 2027, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2018, 2012, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 2022, 0, 2005, 0, 2032, 0, 0,
	2031, 0, 0, 0, 2011, 2013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 2028, 2023, 2029, 1983, 0, 0,
	0, 0, 0, 1998, 1999, 0, 0, 0, 2003, 0,
	0, 0, 0, 0, 0, 0, 0, 2000, 0, 0,
	0, 0, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 2004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 2007,
	2008, 2009, 0, 0, 0, 0, 0, 2019, 1989, 2021,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994, 1992,
	1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 0, 0,
	0, 0, 4138, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 2011, 2013, 0, 0, 1981, 1982, 0, 2014,
	2015, 2016, 2025, 2026, 2027, 0, 0, 0, 2010, 0,
	0, 0, 2028, 0, 2029, 0, 0, 0, 0, 2018,
	2012, 1998, 1999, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 2031,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2004, 0, 2037, 0, 0,
	0, 0, 0, 0, 2023, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2036, 0, 0, 0, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 2007, 2008,
	2009, 0, 0, 0, 0, 0, 0, 1989, 2021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1995, 1996, 2002, 2024, 2001, 1997, 2010, 1994, 1992, 1993,
	1985, 1986, 1987, 1988, 1990, 1991, 0, 0, 0, 0,
	0, 3581, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 0, 2005, 0, 2032, 0, 0, 0, 0, 0,
	0, 2011, 2013, 0, 0, 1981, 1982, 0, 2014, 2015,
	2016, 2025, 2026, 2027, 0, 0, 0, 0, 0, 0,
	0, 2028, 2023, 2029, 0, 0, 0, 0, 2018, 2012,
	1998, 1999, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 2036, 0,
	0, 0, 0, 0, 2004, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2003, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2019, 0, 2021, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 1995, 1996,
	2002, 2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986,
	1987, 1988, 1990, 1991, 0, 0, 0, 0, 0, 3580,
	0, 0, 0, 0, 0, 0, 2006, 2007, 2008, 2009,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 1981, 1982, 0, 2014, 2015, 2016, 2025,
	2026, 2027, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2018, 2012, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 2022,
	0, 2005, 0, 2032, 0, 0, 2031, 0, 0, 0,
	2011, 2013, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	2028, 2023, 2029, 1983, 0, 0, 0, 0, 0, 1998,
	1999, 0, 0, 0, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 2000, 0, 0, 0, 0, 2020, 0,
	0, 0, 0, 0, 0, 0, 0, 2036, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2006, 2007, 2008, 2009, 0, 0,
	0, 0, 0, 2019, 1989, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 1995, 1996, 2002,
	2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987,
	1988, 1990, 1991, 0, 0, 0, 0, 0, 3579, 0,
	0, 0, 0, 0, 0, 0, 0, 2022, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 2011, 2013,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 2028, 0,
	2029, 0, 0, 0, 0, 0, 0, 1998, 1999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 1981, 1982, 0, 2014, 2015, 2016, 2025,
	2026, 2027, 0, 0, 0, 0, 0, 2438, 0, 0,
	0, 0, 0, 0, 0, 0, 2018, 2012, 0, 0,
	0, 0, 0, 0, 0, 1984, 2036, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2019, 0, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 2034, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1995, 1996, 2002, 2024,
	2001, 1997, 2010, 1994, 1992, 1993, 1985, 1986, 1987, 1988,
	1990, 1991, 0, 2439, 0, 0, 0, 3578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2006, 2007, 2008, 2009, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 2023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 1982, 0, 2014, 2015, 2016, 2025, 2026,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 2018, 2012, 2022, 0, 0,
	0, 2032, 0, 0, 1984, 0, 0, 0, 2011, 2013,
	0, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	2029, 0, 0, 2037, 0, 0, 0, 1998, 1999, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2003, 0, 0, 2020, 2368, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 1996, 2002, 2024, 2001, 1997,
	0, 1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991,
	0, 0, 0, 3543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2019, 0, 2006, 2007, 2008, 2009, 0, 0, 0,
	0, 0, 2034, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 2011, 2013, 0,
	0, 0, 2010, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 2029,
	0, 0, 0, 0, 0, 0, 1998, 1999, 2005, 0,
	0, 1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027,
	0, 0, 0, 0, 0, 2020, 0, 0, 0, 0,
	0, 2440, 0, 0, 2018, 2012, 0, 0, 2023, 0,
	2004, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 1981, 1982, 0, 2014, 2015,
	2016, 2025, 2026, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 2036, 0, 0, 0, 2018, 2012,
	0, 1983, 0, 0, 0, 0, 0, 1984, 0, 2030,
	0, 0, 2003, 0, 0, 0, 0, 0, 2031, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	2019, 0, 0, 0, 0, 0, 2037, 0, 0, 2441,
	0, 2034, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2003, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 1996, 2002, 2024, 2001, 1997,
	0, 1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991,
	2367, 2010, 2006, 2007, 2008, 2009, 0, 0, 0, 0,
	0, 0, 1989, 5355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 2007, 2008, 2009,
	0, 0, 0, 0, 0, 2022, 1989, 2023, 3643, 2032,
	0, 0, 0, 0, 0, 3642, 2011, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 2029, 0,
	0, 0, 0, 2036, 0, 1998, 1999, 0, 0, 2022,
	0, 0, 0, 2032, 2365, 0, 0, 0, 0, 0,
	2011, 2013, 0, 0, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	2028, 0, 2029, 0, 0, 0, 0, 0, 0, 1998,
	1999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2021, 0, 2004, 0, 0, 0, 0, 2030, 0,
	0, 0, 0, 1995, 1996, 2002, 2024, 2001, 1997, 0,
	1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 1981, 1982, 0,
	2014, 2015, 2016, 2025, 2026, 2027, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2018, 2012, 0, 0, 0, 0, 3513, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 2023, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2003, 0,
	2005, 0, 0, 0, 0, 0, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 2007,
	2008, 2009, 0, 0, 0, 0, 0, 0, 1989, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994,
	1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 0, 0, 2021, 2032, 0, 0, 0, 0,
	0, 0, 2011, 2013, 0, 0, 1995, 1996, 2002, 2024,
	2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987, 1988,
	1990, 1991, 2028, 0, 2029, 0, 0, 0, 0, 0,
	0, 1998, 1999, 0, 0, 0, 1981, 1982, 0, 2014,
	2015, 2016, 2025, 2026, 2027, 0, 0, 0, 0, 0,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 2018,
	2012, 0, 0, 0, 0, 2004, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 2018, 2012, 0, 1983, 0, 0, 0,
	0, 0, 1984, 0, 2030, 0, 0, 2003, 0, 0,
	0, 0, 0, 2031, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 2019, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 2034, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 2006, 2007, 2008,
	2009, 0, 0, 0, 0, 0, 0, 1989, 0, 4915,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 2007, 2008, 2009, 0, 0, 0, 0, 0,
	2022, 1989, 2023, 0, 2032, 0, 0, 0, 0, 0,
	0, 2011, 2013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 2029, 0, 0, 0, 0, 2036, 0,
	1998, 1999, 0, 0, 2022, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 2011, 2013, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 2028, 0, 2029, 0, 0,
	0, 0, 0, 0, 1998, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 2004, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 1995, 1996,
	2002, 2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986,
	1987, 1988, 1990, 1991, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2019, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 1981, 1982, 0, 2014, 2015, 2016, 2025, 2026,
	2027, 0, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2018, 2012, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 2023, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2003, 0, 2005, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 2007, 2008, 2009, 0, 0, 0,
	0, 0, 0, 1989, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 1996, 2002,
	2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987,
	1988, 1990, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 0, 0, 2021,
	2032, 0, 0, 0, 0, 0, 0, 2011, 2013, 0,
	0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994, 1992,
	1993, 1985, 1986, 1987, 1988, 1990, 1991, 2028, 0, 2029,
	0, 0, 0, 0, 0, 0, 1998, 1999, 0, 0,
	0, 1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027,
	0, 0, 0, 0, 0, 2020, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 2012, 0, 0, 0, 0,
	2004, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 1981, 1982, 0, 2014, 2015,
	2016, 2025, 2026, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 2018, 2012,
	0, 1983, 0, 0, 0, 0, 0, 1984, 0, 2030,
	0, 0, 2003, 0, 0, 0, 0, 0, 2031, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	2019, 0, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 2034, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2003, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 2006, 2007, 2008, 2009, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 2007, 2008, 2009,
	0, 0, 0, 0, 0, 2022, 1989, 2023, 4343, 2032,
	0, 0, 0, 0, 0, 0, 2011, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 2029, 0,
	0, 0, 0, 2036, 0, 1998, 1999, 0, 0, 2022,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	2011, 2013, 4680, 0, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	2028, 0, 2029, 0, 0, 0, 0, 0, 0, 1998,
	1999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2021, 0, 2004, 0, 0, 0, 0, 2030, 0,
	0, 0, 0, 1995, 1996, 2002, 2024, 2001, 1997, 0,
	1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 1981, 1982, 0,
	2014, 2015, 2016, 2025, 2026, 2027, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2018, 2012, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 2023, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2003, 0,
	2005, 0, 0, 0, 0, 0, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 2007,
	2008, 2009, 0, 0, 0, 0, 0, 0, 1989, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994,
	1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 0, 0, 2021, 2032, 0, 0, 0, 0,
	0, 0, 2011, 2013, 0, 0, 1995, 1996, 2002, 2024,
	2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987, 1988,
	1990, 1991, 2028, 0, 2029, 0, 0, 0, 0, 0,
	0, 1998, 1999, 0, 0, 0, 1981, 1982, 0, 2014,
	2015, 2016, 2025, 2026, 2027, 0, 0, 0, 0, 0,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 2018,
	2012, 0, 0, 0, 0, 2004, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 2018, 2012, 0, 1983, 0, 3644, 0,
	0, 0, 1984, 0, 2030, 0, 0, 2003, 0, 0,
	0, 0, 0, 2031, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 2019, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 2034, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 2006, 2007, 2008,
	2009, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 3649, 0, 0, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 2007, 2008, 2009, 0, 0, 0, 0, 0,
	2022, 1989, 2023, 0, 2032, 0, 0, 0, 0, 0,
	0, 2011, 2013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 2029, 0, 0, 0, 0, 2036, 0,
	1998, 1999, 0, 0, 2022, 0, 0, 0, 2032, 0,
	0, 4119, 0, 0, 0, 2011, 2013, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 2028, 0, 2029, 0, 0,
	0, 0, 0, 0, 1998, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 2004, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 1995, 1996,
	2002, 2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986,
	1987, 1988, 1990, 1991, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2019, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 1981, 1982, 0, 2014, 2015, 2016, 2025, 2026,
	2027, 0, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2018, 2012, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 2023, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2003, 0, 2005, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 2007, 2008, 2009, 0, 0, 0,
	0, 0, 0, 1989, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 1996, 2002,
	2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987,
	1988, 1990, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 0, 0, 2021,
	2032, 0, 0, 0, 0, 0, 0, 2011, 2013, 0,
	0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994, 1992,
	1993, 1985, 1986, 1987, 1988, 1990, 1991, 2028, 0, 2029,
	0, 0, 0, 0, 0, 0, 1998, 1999, 0, 0,
	0, 1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027,
	0, 0, 0, 0, 0, 2020, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 2012, 0, 0, 0, 3582,
	2004, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 1981, 1982, 0, 2014, 2015,
	2016, 2025, 2026, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 2018, 2012,
	0, 1983, 0, 0, 0, 0, 0, 1984, 0, 2030,
	0, 0, 2003, 0, 0, 0, 0, 0, 2031, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	2019, 0, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 2034, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 3609, 0, 0, 0, 2003, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 2006, 2007, 2008, 2009, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 2007, 2008, 2009,
	0, 0, 0, 0, 0, 2022, 1989, 2023, 0, 2032,
	0, 0, 0, 0, 0, 0, 2011, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 2029, 0,
	0, 0, 0, 2036, 0, 1998, 1999, 0, 0, 2022,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	2011, 2013, 0, 0, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	2028, 0, 2029, 0, 0, 0, 0, 0, 0, 1998,
	1999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2021, 0, 2004, 0, 0, 0, 0, 2030, 0,
	0, 0, 0, 1995, 1996, 2002, 2024, 2001, 1997, 0,
	1994, 1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 1981, 1982, 0,
	2014, 2015, 2016, 2025, 2026, 2027, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2018, 2012, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 2023, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2003, 0,
	2005, 0, 0, 0, 0, 0, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 2007,
	2008, 2009, 0, 0, 0, 0, 0, 0, 1989, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 1996, 2002, 2024, 2001, 1997, 0, 1994,
	1992, 1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2555, 0, 0,
	0, 2022, 0, 0, 2021, 2032, 0, 0, 0, 0,
	0, 0, 2011, 2013, 0, 0, 1995, 1996, 2002, 2024,
	2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987, 1988,
	1990, 1991, 2028, 0, 2029, 0, 0, 0, 0, 0,
	0, 1998, 1999, 0, 0, 0, 1981, 1982, 0, 2014,
	2015, 2016, 2025, 2026, 2027, 0, 0, 0, 0, 0,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 2018,
	2012, 0, 0, 0, 0, 2004, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	1981, 1982, 0, 2014, 2015, 2016, 2025, 2026, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 2012, 0, 1983, 0, 0, 0,
	0, 0, 1984, 0, 2030, 0, 0, 2003, 0, 0,
	0, 0, 0, 2031, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 2019, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 2034, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 2006, 2007, 2008,
	2009, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 2007, 2008, 2009, 0, 0, 0, 0, 0,
	2022, 1989, 2023, 0, 2032, 0, 0, 0, 0, 0,
	0, 2011, 2013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 2029, 0, 0, 0, 0, 2036, 0,
	1998, 1999, 0, 0, 2022, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 2011, 2013, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 2028, 0, 2029, 0, 0,
	0, 0, 0, 0, 1998, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 2004, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 1995, 1996,
	2002, 2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986,
	1987, 1988, 1990, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 1080, 0, 1132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 1103, 0, 1086,
	1085, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	0, 0, 0, 1105, 0, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 1090, 0, 0, 2036, 0, 1144,
	0, 1115, 0, 0, 0, 2023, 0, 0, 0, 1100,
	1101, 0, 0, 0, 0, 0, 0, 0, 0, 1120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1133, 1092, 0,
	0, 2036, 0, 0, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 0,
	0, 0, 0, 0, 0, 2021, 0, 1130, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 1996, 2002,
	2024, 2001, 1997, 0, 1994, 1992, 1993, 1985, 1986, 1987,
	1988, 1990, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1131, 0, 0, 0, 0, 0, 0, 2021,
	0, 0, 0, 0, 0, 0, 0, 0, 1096, 0,
	0, 1995, 1996, 2002, 2024, 2001, 1997, 1084, 1994, 1992,
	1993, 1985, 1986, 1987, 1988, 1990, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 1098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1106, 1104, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 1116, 0, 0, 1138, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1141, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1091, 0, 0, 1143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 1124, 1125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1135,
	1122, 0, 0, 0, 0, 0, 0, 0, 1142, 1117,
	0, 0, 1109, 1107, 0, 0, 1112, 0, 0, 0,
	0, 0, 0, 1113, 0, 0, 1082, 0, 1136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1128, 0, 0, 1126, 0,
	1114, 0, 0, 0, 0, 0, 1111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1140, 0, 0,
	0, 0, 0, 0, 0, 1118, 0, 1119, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 1139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
}

var sqlPact = [...]int{
	7041, -1000, -1000, -1000, -1000, -1000, -1000, 202, -1000, -1000,
	199, 197, 195, 193, 192, 191, 190, 189, 188, 184,
	177, -1000, -1000, 176, 174, 173, 171, -1000, 169, 167,
	-1000, 166, -1000, -1000, 164, -1000, 162, 160, 158, -1000,
	-1000, 157, -1000, 155, -1000, -1000, -1000, -1000, 154, 153,
	148, 104911, 104303, 105517, 2596, 132841, 114621, 2195, 93977, 132233,
	93369, 131625, 2478, 11567, 131017, 3080, 147, -1000, 130409, 146,
	145, 144, -1000, 114013, 129801, 111583, 110975, 1985, 1853, 1852,
	-1000, 143, 136, -1000, 5862, 79929, 135, 134, 133, 126,
	2609, 123, -1000, 122, 121, -1000, 116, 114, -1000, 12925,
	1728, -1000, 113, 112, -1000, 397, 110367, 111, 107, 104,
	2871, 103, 102, 77503, 101, 100, 99, 2825, 3173, -1000,
	-1000, 2373, -1000, -1000, 98, 97, 96, 95, 93, 92,
	88, 87, 86, 85, 84, 82, 81, -1000, 79, 78,
	77, 75, 73, -1000, 72, 71, 69, -1000, 67, -1000,
	66, 60, 54, 52, 51, 49, 46, 43, 41, 40,
	37, 34, 33, 32, 30, 155160, -1000, -1000, 25, -1000,
	2137, 1843, 1829, 1828, 1052, 24, 23, 22, 20, 19,
	18, 15, 14, 13, 12, 11, 9, 8, 6, 5,
	4, 3, 1, -2, -3, -1000, 141, -6, -7, -8,
	-9, -10, -13, -21, 3683, 3915, -1000, 1680, 1135, 1298,
	34650, 3323, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 141931, 133447, -24, -91, -27, -1000, 3702, 1129,
	63393, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 279, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	506, 2598, 788, -1000, -1000, -1000, 129193, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2589, -47, 94583, -1000, 2317,
	-1000, -1000, -1000, -1000, -1000, 785, -1000, 2587, 2536, 331,
	2535, 94583, -1000, -1000, -1000, 3768, 2762, 4242, 4241, 4240,
	4239, 4237, 141325, 1983, 4236, 2831, 4235, 4234, 4233, 4232,
	4231, 4230, 4227, -1000, 103695, 1140, 103087, 102479, 3785, 128587,
	101871, 127979, 144361, 53436, 1122, 3767, -1000, -1000, -1000, -1000,
	-1000, -1000, 133447, -1000, 1133, -1000, -1000, 4226, 2354, 784,
	113405, -1000, -1000, 127371, 2079, -1000, -1000, -1000, 1004, 1289,
	37142, 37142, 37142, 256, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3786, -1000, -1000, -1000, -1000, 133447, 3035, 3035, 1518,
	1516, 1516, 3035, 3035, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4225, 4224, 4223, 4222, 4220, 1526, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 92761, 26985, 92153, 91545, 126763,
	52813, 101263, 100655, 4219, 4218, 4214, 52190, 87289, 60909, 3914,
	126155, 143753, 3913, 3912, 1126, 2313, 1608, -1000, -1000, -1000,
	-1000, -1000, -1000, -51, 83587, 4024, 133447, -1000, 255, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 51567, 998, 50944, 828,
	50321, 625, 125547, -1000, -1000, -1000, -1000, -1000, 86671, 3667,
	-1000, 124939, 1594, 2751, 4213, 4212, 1237, 4211, 3642, 1980,
	4205, 4204, 4202, 4199, 4198, 4197, 4194, 1662, 124331, 2976,
	123723, 2012, 143145, 2156, 1124, 100047, 105517, 2901, 123115, 1554,
	1553, -1000, -1000, -1000, -1000, 3446, 3171, 3167, 1240, -1000,
	-1000, -1000, -1000, 67093, 8395, 7921, -1000, -1000, 13960, 122507,
	70173, 105517, 105517, -1000, -1000, -1000, -1000, -1000, -1000, 49698,
	598, 49075, 1111, 121899, -1000, -1000, 67709, 3288, 1171, -1000,
	-1000, -1000, -1000, -1000, 121291, 48452, 505, 47829, 1065, 133447,
	-1000, 3322, 2273, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2744, 1750, 4025, 3064, 86053, 2333, 1558, 3721,
	3440, 3439, 1638, 2310, 3408, 4192, 2928, 3407, 3406, 3404,
	3403, 3393, 1726, 2875, 499, 2865, 34027, 3308, 1984, 47206,
	1642, 1641, 3371, 3366, 4035, 3817, 2302, 2280, 2260, 2293,
	90937, 4191, 4190, 3685, 3354, 3348, 3119, 3346, 2169, -1000,
	3287, 1657, 247, -1000, -1000, -1000, -1000, -1000, -1000, 247,
	1589, -1000, -1000, -1000, -1000, -1000, 95795, -1000, -1000, 1526,
	-1000, -1000, -1000, 1483, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1680, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2490,
	-1000, 2356, -1000, -1000, -1000, 2829, 3682, 3682, 3682, 3760,
	488, 476, -1000, 141, 923, 1208, -1000, -1000, 154436, -1000,
	-1000, 54059, 54059, 54059, 54059, 54059, 54059, 54059, 54059, 2484,
	-1000, 783, -1000, -1000, 821, -1000, 782, 703, 655, -1000,
	-1000, -1000, -1000, -1000, -1000, 781, -1000, -1000, -1000, -1000,
	-1000, -1000, 3942, -1000, 30152, -1000, -1000, -1000, 349, 778,
	54059, -1000, -1000, 4061, 4060, 1120, -1000, 246, 1028, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3316, 777, 776, -1000, 775, 774, 771, 769, 768,
	-1000, 767, -1000, 765, 763, 762, 757, 756, 755, 753,
	748, -1000, 2345, -1000, -1000, -1000, -1000, -1000, -1000, 687,
	686, 686, 686, -1000, 1116, -1000, -1000, -1000, 362, 684,
	354, 683, 679, 678, -1000, 746, 745, 719, 717, 716,
	714, 713, 712, 709, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1114, -1000, -1000, -1000, -1000, 1515, -54, 133447, -1000,
	506, -54, -1000, -1000, 708, -1000, 38406, 38406, 38406, -1000,
	-1000, 2586, 54059, -1000, 2740, -1000, -44, -44, 966, 65241,
	-1000, 62143, 966, 385, 839, 71397, -1000, 3283, -1000, -1000,
	704, 240, -1000, -1000, -1000, -1000, 27601, 3277, 133447, 133447,
	133447, 105517, 105517, 105517, 133447, 4189, 4188, 3560, 54059, -1000,
	-1000, 79321, 146179, 106123, 1481, -53, -1000, -1000, 3891, 82971,
	78715, 3315, 146179, 3313, 3266, 145577, 4187, -1000, -1000, -1000,
	-1000, -1000, 3535, 4186, 4185, 4184, -1000, 133447, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 257, 3534, -1000, -1000, 109759,
	257, 3532, -1000, 257, 3531, -1000, 109153, -1000, -1000, 2543,
	3530, -1000, -1000, 259, 3529, -1000, -1000, -1000, 258, 3528,
	-1000, -1000, 239, -152, 3527, -1000, -1000, -1000, -1000, -1000,
	-1000, 154436, -1000, -1000, -1000, 144969, -1000, 3684, -1000, 133447,
	-1000, 54059, -1000, -1000, 3890, 1681, 3712, 3804, -1000, -1000,
	-66, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2804, 2799,
	1250, 2627, -1000, 3574, 1626, 37142, 3626, -1000, -1000, -1000,
	-1000, -1000, 238, 27601, 3133, -1000, -1000, 133447, -1000, 133447,
	3035, 3035, -1000, -1000, -1000, 4012, 3999, 3035, 3035, 133447,
	133447, -1000, -1000, -1000, -1000, -1000, -1000, -66, -1000, 2682,
	3526, 1695, -1000, 2620, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2185, 3521, -1000, 2377, 3520, 2177, -1000,
	-1000, 3279, -1000, 150961, 1452, -1000, -1000, -1000, -1000, 2454,
	3517, -41, -1000, -1000, 2547, -1000, -1000, -1000, -1000, 150762,
	-1000, 3185, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1911, -1000, -1000, 2344, 2236, -1000, 1436, 3508, -1000,
	3061, 3061, 99439, 3494, 69557, 67709, 83587, -65, -1000, -1000,
	-1000, -1000, -1000, -207, -1000, 26361, 154436, -1000, -1000, -1000,
	-1000, 2059, 154436, 977, -1000, -1000, 3507, -1000, 154436, 975,
	-1000, -1000, 3504, -1000, 2874, -1000, 3311, -1000, -1000, -1000,
	2703, 85435, 2700, 1089, -1000, 105517, 2308, 4183, -1000, 4182,
	-1000, -1000, 4181, -1000, 4180, 4176, 4175, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 98833, 2584, -1000, -1000, 1644, 1032,
	87905, -1000, 2699, 3801, -1000, 98225, 1119, -1000, 1069, 2697,
	-1000, 1549, 108547, 1095, 2696, -1000, 4174, 3781, 2939, 1069,
	2695, -1000, -1000, -1000, -1000, -1000, 919, -1000, 72609, -1000,
	72609, -1000, 1865, -1000, 140719, -44, 105517, 3942, -1000, -86,
	-1000, -1000, -1000, 1129, -1000, 66474, -1000, 66474, 112797, 87905,
	1032, 3265, 75663, 154054, -1000, 1087, -1000, -1000, 154436, -1000,
	-1000, -1000, 2868, -1000, -221, 3060, -1000, 87905, 68941, 3263,
	2866, -1000, 154436, -1000, -1000, -1000, -1000, 154436, -1000, -1000,
	-1000, 87905, 1644, -1000, 120683, 97617, -1000, -1000, 1656, 2853,
	-1000, -1000, -1000, 67709, 3262, 1437, 87905, 87905, 87905, -1000,
	120075, -1000, -1000, 2334, 1723, 3686, 2292, 105517, -1000, 2173,
	-1000, -1000, -1000, 3708, 3481, 133447, -1000, -1000, 3310, -1000,
	82365, 107941, -1000, 107335, -1000, 106729, -1000, 105517, -1000, 105517,
	-1000, 4173, 4171, 4169, -1000, -1000, 4167, -1000, 4166, 3699,
	-1000, 809, 46583, 154436, 3698, -1000, 4164, 2235, 3308, 154436,
	-1000, 3370, 1856, 1855, 133447, -1000, -1000, 133447, -1000, 133447,
	-1000, -1000, -1000, 2608, 1759, -1000, -1000, 2801, -1000, -1000,
	-1000, 1085, -1000, -1000, 105517, 105517, 105517, 105517, 105517, 1322,
	-1000, 45960, -1000, -1000, 3369, 4162, 1935, -1000, 2011, -1000,
	3260, 3695, -1000, 3259, 1645, 2017, 235, 4067, 235, -1000,
	-1000, 270, -1000, -1000, 140113, -1000, 2829, -1000, 133447, -1000,
	2795, 3303, 3307, 1937, 2574, 2907, -1000, 45337, 2873, 57797,
	2619, 141, -1000, -1000, 141, 141, 35896, -1000, -1000, 37142,
	923, 82971, 82971, 27601, 1507, 54059, 54059, 54059, 54059, 54059,
	54059, 54059, 54059, 54059, 54059, 54059, 54059, 54059, 54059, 54059,
	54059, 54059, 54059, 54059, 54059, 54059, 54059, 54059, 54059, 54059,
	54059, 54059, 54059, 54059, 54059, 54059, 54059, 54059, 54059, 54059,
	54059, 2324, 54059, 1479, 54059, 54059, 54059, 54059, 1964, -1000,
	-1000, 2180, 546, 2314, 703, -1000, -1000, -1000, 3971, 3971,
	3971, 1509, 1509, 1509, 154749, 154749, 656, 4159, 821, -1000,
	54059, -1000, 68, 65847, 54059, 28219, -1000, 476, 15570, 2830,
	-1000, 475, 28872, -1000, -1000, -1000, 30152, 655, 44684, 54059,
	1096, 154436, -1000, -1000, 1599, 3964, 25737, 3343, 3111, 699,
	893, 884, 33374, 32721, 32068, 31415, 883, 642, 54059, 54059,
	54059, 54059, 54059, 54059, 54059, 54059, -1000, -1000, 3996, -1000,
	3964, -1000, -1000, -1000, -1000, 3964, 1497, 1491, 3964, -1000,
	3964, 3964, 8861, 8861, 44061, 43438, 42815, 58420, 42192, 54059,
	30792, 41569, 40946, -1000, 60289, 133447, -54, 3889, 54059, 324,
	-1000, 12547, -1000, 324, 324, 695, -95, 154436, 2849, 2849,
	64009, 2572, 2493, 2493, 2493, -1000, 966, 20082, 966, 118257,
	2501, 966, 966, 229, 282, 464, 61527, 2740, 118257, 806,
	694, -29, -31, -37, -1000, -1000, -38, -39, -1000, -1000,
	105517, 691, 28219, 27601, 227, 2234, -101, 2894, 2891, 2885,
	2882, -1000, 2881, 2583, -1000, -1000, -1000, 2089, -103, 1420,
	105517, 133447, 1682, -1000, -1000, -1000, -1000, 83587, -58, 83587,
	133447, -102, -1000, 146179, 7826, -104, -1000, 1418, 226, 3964,
	-1000, -1000, -1000, -1000, -1000, 4158, 4156, -1000, 1110, 689,
	688, 468, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	687, 686, 686, 686, -1000, 362, 684, 354, 683, 679,
	678, -1000, -1000, -1000, -1000, -1000, 3258, 105517, 133447, 1635,
	81759, 94583, -152, 106123, 146179, -79, -1000, -1000, 133447, -1000,
	-1000, -1000, 4152, -1000, 105517, -1000, -1000, 105517, 257, 3503,
	-1000, 105517, -1000, 105517, 251, 3501, -1000, -1000, 133447, -1000,
	105517, 105517, -1000, 133447, 133447, 133447, 146179, 146179, 249, -1000,
	105517, 923, -110, 1258, -66, -1000, -1000, -1000, -1000, 1526,
	-1000, 2037, -1000, -1000, -1000, -1000, -1000, -1000, 1668, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1120, -1000, -1000,
	-1000, -1000, 3992, 3981, -64, -1000, -1000, 27601, -1000, 2225,
	-1000, -1000, -1000, -1000, 133447, 133447, -1000, -1000, 133447, 133447,
	-1000, -1000, -67, 1777, 618, 1417, -1000, 90329, 2651, 3676,
	4149, 2933, 3661, 1864, -1000, 1741, 677, -1000, 3784, 95795,
	3816, 3874, 1438, -1000, 3256, -1000, -1000, -1000, 1000, 1932,
	2055, 1414, 1413, 95795, 2377, -1000, 82971, -1000, 2955, 3757,
	1516, 1465, 1516, 1516, 1522, 1520, -1000, 95795, 2049, 1411,
	1410, 1408, -1000, -1000, 1802, 1798, -1000, -1000, 119469, 1712,
	-1000, 1405, 1402, 134659, 3910, 2490, 2508, 853, 2257, -1000,
	1448, 1391, 3255, -1000, -1000, -69, 3815, 3848, 1438, -1000,
	3254, 1388, -1000, -1000, -1000, 3756, 105517, 27601, 1709, 1685,
	1697, 2048, 1387, -60, -1000, 3810, 1774, -1000, 1644, 1644,
	115227, 133447, 3921, 87905, -1000, 2725, -1000, -1000, -1000, 3720,
	3719, -1000, -1000, 1386, 1382, -1000, 1097, 8013, 3598, -1000,
	146179, 1097, 1097, 2050, 3499, 3019, 1860, -1000, 3059, 895,
	3057, -1000, -1000, -1000, 895, -65, 83587, 133447, 225, -1000,
	68, 54059, 54059, 68, 54059, 68, -1000, 3793, 3497, 3887,
	-1000, 3495, 4148, 675, -1000, 2828, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 674, 2694, 3252, 133447, 181, -1000, 105517,
	-1000, 3886, 118863, -1000, 3493, 146179, 2377, 2693, -1000, -1000,
	97009, -1000, 3489, 2242, 506, 2688, -1000, 494, 4147, 3488,
	-1000, 139507, -1000, 3684, 1416, 3479, 1174, 715, 3883, -1000,
	715, 73825, -1000, 133447, -1000, -44, 5851, 89117, -111, -118,
	462, -1000, 133447, 133447, 3612, 2279, 2272, -1000, 1047, 67709,
	-1000, 67709, -120, -1000, -221, 3047, 1688, 67709, -1000, 1032,
	-147, 895, -1000, 895, -1000, 105517, 3306, -1000, 87905, 67709,
	-1000, 1032, 1032, 1032, -1000, -1000, -1000, -1000, 4146, 4145,
	4143, 4140, -1000, -1000, 1068, 105517, 133447, 105517, -1000, 3011,
	1742, -1000, 223, -1000, 146179, -1000, 146179, 133447, 105517, -1000,
	1068, 133447, 1068, 133447, 1068, 133447, 1068, 1068, -1000, -1000,
	-1000, -1000, -1000, 68, -1000, -1000, 154436, -1000, 54059, -1000,
	-1000, 1708, 4138, 1916, -1000, 3305, -1000, 3304, -1000, -4,
	-1000, -1000, 3985, 2142, -1000, 4057, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4137, 154436, -1000, 2163, -1000,
	-1000, -1000, -1000, 105517, 105517, 105517, 105517, 133447, 3596, -1000,
	133447, 3591, 3593, 105517, -1000, 4065, -1000, -1000, 95795, -1000,
	2795, 3303, -1000, -1000, -1000, -1000, -1000, -1000, 1847, 2551,
	-1000, 2850, -1000, 1748, -1000, -1000, -1000, 154436, 59043, -1000,
	-1000, 154436, 2096, -1000, 57174, 56551, -1000, -1000, 1923, 105517,
	2911, -1000, 2911, -117, -1000, 151656, 2848, 105517, -64, 37142,
	-1000, -1000, -1000, -1000, -1000, 999, 1267, 1267, 1451, 1451,
	1451, 1451, 3791, 7295, 962, 6808, 9838, 9838, 1261, 1261,
	1261, 1261, 1261, 9838, 533, 1509, 1509, 533, 533, 533,
	533, 533, 1509, 1509, 1509, 9838, 9838, 9838, 1509, 154749,
	154705, 13676, 54059, 54059, 1381, 2144, 546, 13037, 54059, 13689,
	13689, 13689, 13689, -1000, 2095, -1000, -1000, -1000, -1000, 3249,
	673, 58420, 58420, -1000, -1000, -1000, -1000, 29512, 54059, -1000,
	-1000, -1000, -1000, 40293, -1000, -1000, 150452, -344, 461, -1000,
	221, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 458, -116, 62, -1000, 54059, 54059,
	54059, 452, -1000, 220, 54059, 133447, -1000, 146876, 804, -154,
	-1000, -123, 1557, -1000, 54059, -1000, -1000, 1378, -1000, 1375,
	1372, 1367, -1000, 672, 447, -1000, 219, -1000, 2489, 671,
	670, 54059, -1000, -1000, -1000, -1000, -1000, 150264, -1000, -1000,
	150025, -1000, -1000, 149786, -1000, -1000, 149598, -1000, -1000, -1000,
	-1000, -1000, 154010, 146832, 146788, 19395, 13263, 19095, 18678, -126,
	446, -129, 444, 995, 981, 442, 440, 439, -131, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -134, 438, -1000, 3248, -116, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 435, -1000, 432, -1000, 153741, -116,
	409, 6351, -1000, 58420, 58420, 58420, 58420, 407, -1000, 151274,
	-1000, 153359, 39670, 39670, 39670, 403, 153315, 54059, -116, -136,
	-1000, -137, -1000, -1000, -1000, -1000, 592, -145, 1093, 38406,
	62775, 27601, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1093, 1093, 54059, -1000, 54059, 2859, -1000,
	-1000, -1000, -1000, 2857, 2069, 2849, 64009, -1000, -1000, -1000,
	-1000, 118257, -1000, 3942, 3118, -1000, 118257, -1000, -1000, 133447,
	506, -1000, 118257, 118257, 27601, 966, -1000, 966, 118257, 692,
	-1000, -1000, -1000, -1000, -1000, 402, 76279, 62, 218, 27601,
	1069, -1000, -1000, 2998, 2998, 2998, 2998, 2998, 105517, -1000,
	-1000, 146179, 1365, -62, -121, 3046, 3042, -65, 83587, -65,
	-207, 3919, -289, -1000, 2368, -1000, 82971, -1000, 820, 1137,
	27601, -1000, -1000, -1000, 669, -1000, 3964, 3964, -1000, 3964,
	146179, 3245, 275, 3034, 3031, -1000, 2580, 267, -152, 146179,
	4136, -1000, -1000, 257, -1000, 105517, 257, 257, -1000, 105517,
	105517, 2543, -1000, 259, -1000, 258, -1000, -1000, -152, -1000,
	1084, 37142, -1000, 1526, -1000, -1000, 1701, -1000, 2286, -1000,
	1489, -1000, -1000, 37142, -1000, 3615, -1000, 1965, -1000, -1000,
	-1000, -1000, 2983, 133447, 133447, 105517, -1000, 116439, 133447, -1000,
	2436, 146179, -1000, 2686, 138901, 2659, 138295, 82971, -1000, -1000,
	668, 1017, 2846, 2844, 1169, 133447, 133447, 2843, 137689, 137083,
	-1000, 4132, 133447, 2364, 54059, 116439, 3755, 2441, 2463, 68,
	68, -1000, 68, -1000, -1000, 666, 1544, 105517, 105517, 133447,
	146179, 105517, 2013, -1000, -1000, -1000, -1000, -1000, 96401, -1000,
	-1000, 1516, -1000, -1000, -1000, 1516, -1000, 1516, 2377, 1982,
	133447, 146179, 105517, 146179, 136477, 2230, 135871, 2227, -1000, -1000,
	2226, 2047, 133447, -1000, -1000, -1000, -1000, -1000, 1600, -1000,
	853, 1363, 3236, 54059, 54059, 2402, 68, 68, -1000, 68,
	664, 27601, 2250, -1000, 3282, 133447, 4055, 135265, 4054, 133447,
	133447, 133447, 146179, 3677, 133447, -1000, -147, -61, -216, -1000,
	945, 943, -207, -1000, 3921, -1000, 938, 2354, 133447, 146179,
	-1000, 134659, 8013, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2391, 3004, 1179, 133447, 1436, -1000, -1000, 2039, 1360, 1358,
	95795, 2383, 2032, 2114, 146179, 67709, 1050, 67709, 2941, -1000,
	-1000, 25113, -1000, 154436, 154436, -1000, 154436, -1000, 81151, 87905,
	87905, 133447, -1000, 74441, 133447, 89723, 1023, 3476, 73217, -207,
	1032, 1644, 3352, 1938, -216, 663, 133447, -1000, -1000, 2377,
	3475, 506, 2685, -1000, 146179, 1112, 3882, 3448, 661, 4131,
	4129, -1000, 105517, 2578, 2683, -1000, -1000, 134053, 3547, 853,
	133447, 1093, 64009, 2249, -1000, 70791, 1153, 133447, 2140, 194,
	-1000, -1000, -1000, -11, 133447, -1000, 837, -1000, -1000, 5851,
	5851, 1032, 68325, -153, -1000, 217, 659, 937, 934, -1000,
	3048, -1000, -221, -1000, 87905, 1047, 67709, 3224, -221, 3025,
	3221, -1000, -1000, 1082, -1000, 1634, 3021, 1032, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -45,
	-1000, 2022, 2112, 133447, -152, -152, -76, -1000, -1000, 215,
	-62, -1000, 1068, -1000, 1068, -1000, 1068, -1000, -1000, -1000,
	154436, -1000, -1000, -1000, 1893, 1878, 133447, -1000, 3301, -1000,
	133447, -1000, -1000, 27601, 133447, 105517, 27601, 105517, 3299, 3286,
	-1000, -1000, -1000, 133447, -1000, -1000, 133447, -1000, -1000, -1000,
	-1000, -1000, -1000, 1198, -1000, 2096, 2549, -1000, 655, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2780, -1000,
	-63, 35896, 971, -1000, -1000, 105517, -48, -64, 54059, 54059,
	10940, 9565, 54059, 58420, 58420, -1000, 54059, 8806, -1000, -1000,
	-1000, -1000, -1000, 3219, 653, 54059, 82971, 6268, 5913, -1000,
	400, 18409, 533, -1000, 54059, -1000, 622, -1000, 399, 39047,
	-1000, 151969, 45, -155, -1000, 20721, -116, -158, -1000, -1000,
	819, -1000, 3543, -1000, 54059, 153046, 2746, 2323, 2110, 1941,
	3964, 4053, 24489, -1000, 75057, 1094, 2513, 149359, -1000, -1000,
	-1000, -1000, 82971, 82971, 54059, 54059, -1000, 54059, 54059, 54059,
	-1000, -1000, -1000, 3964, 979, -1000, -1000, -1000, 979, -1000,
	-1000, 1516, -1000, 1516, -1000, 54059, -1000, -1000, 3212, 54059,
	-1000, 82971, 82971, 58420, 58420, 58420, 58420, 58420, 58420, 58420,
	58420, 58420, 58420, 58420, 58420, 58420, 58420, 58420, 58420, 58420,
	58420, 58420, 58420, 2858, 58420, 3941, 3941, 3941, 733, -1000,
	3250, 3212, 54059, 54059, 82971, 398, 389, 388, -1000, 54059,
	-116, -1000, -1000, 9780, 651, -1000, 2768, -1000, 3109, -1000,
	54059, -1000, -190, -1000, 2740, -1000, -1000, 3109, 3109, -161,
	154436, 64009, 64009, -1000, 650, 54059, 2856, -1000, -1000, 803,
	-341, -1000, 931, -1000, -1000, -1000, -1000, -1000, -1000, 928,
	-1000, 506, -1000, -1000, -1000, 210, 118257, 118257, 800, -1000,
	-163, -1000, -1000, -164, -1000, 3881, 386, 27601, -1000, 1093,
	3709, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2864, -289,
	146179, 146179, 2021, 2018, -65, 2533, -1000, 3125, 4052, -1000,
	3983, 818, 798, 206, 3964, 382, 379, 377, -152, 146179,
	146179, 2015, 2006, 78109, 146179, -1000, -1000, -1000, 257, -1000,
	-1000, -1000, 251, -1000, -1000, -1000, -1000, 2943, -1000, -66,
	-1000, -1000, -1000, 54059, -1000, 1026, -1000, -1000, 3668, 649,
	1357, 1334, -1000, -169, -1000, 920, -1000, -1000, -1000, -1000,
	-1000, 3168, -1000, 3438, -1000, 2681, -1000, 1127, 2680, 2005,
	-1000, 54059, 647, 2938, 646, 645, 4128, 2376, 4127, 1173,
	3437, 2543, 3434, 2543, -1000, -1000, -1000, 1011, -1000, 154436,
	-170, -1000, 2441, -1000, 641, 640, -1000, -67, 1763, 576,
	1333, 1078, -1000, -1000, 54059, 54059, 117651, -1000, 493, 3674,
	-49, -1000, -1000, -1000, 2002, 1331, 1327, -1000, -1000, -1000,
	-1000, -1000, 2377, 1993, 1317, 1316, -1000, -1000, -1000, -1000,
	-1000, 2679, -1000, 133447, -1000, 3429, 133447, 133447, 1076, -1000,
	3361, 3357, 980, 133447, 54059, 54059, 152664, 152620, -1000, 1075,
	-1000, -1000, 54059, -1000, -69, 1312, 3811, 2672, 105517, -1000,
	2543, 3424, 1311, -1000, 1302, -1000, -1000, -1000, 3809, 3807,
	1291, -1000, 115227, 87905, 87905, 3921, 67709, -1000, -1000, -1000,
	3987, -1000, -1000, -1000, -1000, 84817, -1000, -1000, 1097, 133447,
	146179, 105517, 1973, -1000, -1000, 94583, 95189, 133447, 3019, -152,
	895, -1000, 2523, 895, 1050, 3196, -1000, 2878, -1000, -1000,
	1071, 376, -71, -1000, 1404, 80535, 76885, -1000, 2495, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4126, 373, -172, -72,
	82971, -1000, -1000, -1000, -1000, 2659, 105517, 133447, 1421, 2930,
	133447, 133447, 3880, -1000, 2600, 654, 105517, 974, -1000, 3942,
	-1000, -1000, -1000, 133447, 38406, 115227, -1000, 3798, 105517, 3868,
	3419, 1069, 105517, 68, 105517, 4026, -1000, -1000, 3861, 105517,
	3418, 2570, 2670, 2816, 853, 88511, 1069, 2503, -82, -1000,
	2140, 37765, 3672, -178, -1000, -1000, -1000, 1093, 73825, 64009,
	54059, 4125, -179, -1000, -1000, -1000, -1000, -1000, 87905, 1032,
	133447, 133447, 4124, 87905, 87905, 87905, -73, 639, -1000, 916,
	914, 907, -1000, -1000, -1000, -1000, -1000, -1000, 905, 901,
	900, 899, 1047, -1000, -1000, -221, 67709, 1047, 67709, 68,
	-1000, 2519, 105517, 67709, -1000, 23865, 133447, 3011, -1000, 84193,
	-1000, -1000, -1000, -1000, -1000, 1068, 4048, -207, -1000, -1000,
	-1000, 2413, 2614, 2413, 2104, 2102, -1000, -1000, -1000, 2540,
	-1000, -1000, -1000, -1000, 2927, 3669, 27601, 3794, 13689, 54059,
	54059, 590, 749, 321, 13689, 54059, 54059, 82971, 6790, -180,
	54059, 54059, -1000, 54059, 797, 154436, -1000, 4047, 54059, 371,
	368, -1000, -1000, -1000, 3962, -1000, -1000, -1000, 154436, 54059,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 365, -1000, 205,
	-1000, -1000, -1000, 142537, -1000, 54059, 360, 3750, -1000, 359,
	355, 17614, 437, 149120, 148932, 148693, 342, -1000, -1000, 340,
	339, 154436, 3250, 154436, -1000, -1000, 1192, 1192, 1466, 1466,
	1466, 1466, 3941, 2304, 1170, 2245, 643, 643, 643, 856,
	733, 733, 643, 643, 643, 733, 3195, 2833, 624, 6825,
	-1000, -1000, 154436, 154436, 336, -1000, -1000, -1000, -116, 332,
	9780, -1000, 3099, 3747, 154436, -1000, 64009, 3099, 3099, -1000,
	-1000, 2069, 133447, 154436, 64009, -1000, 3118, -1000, 21987, 21357,
	-1000, 27601, -1000, -1000, -1000, -1000, 3942, -1000, 76279, -1000,
	623, -1000, 142, -1000, 3709, -1000, 897, -1000, -1000, 87905,
	87905, 4123, 4122, -1000, 4046, 4045, 2423, 4043, 2998, -1000,
	-289, -187, 133447, 133447, -1000, 2531, -1000, 796, 4121, 814,
	27601, 325, -1000, -1000, -1000, -152, -152, 133447, 133447, 3191,
	105517, 133447, 1533, -152, -1000, -1000, -1000, 3610, 154436, 3192,
	3090, 3082, 133447, 133447, -1000, 116439, 37142, 1640, 117045, 133447,
	3413, -1000, 3411, -1000, 1169, 2375, 148280, 64625, -1000, 64625,
	133447, -1000, -1000, -1000, -1000, 2219, 1605, 4120, 1229, -1000,
	3711, 133447, -1000, 133447, -1000, -1000, -1000, 116439, -1000, 133447,
	133447, 105517, 133447, -1000, 146179, 3375, -194, 154436, -75, -1000,
	891, -1000, 1272, -1000, 23241, 133447, 146179, 105517, 133447, 146179,
	105517, 3399, 1152, 133447, -1000, 1149, 2469, -1000, -1000, 3355,
	-1000, 154436, 152351, 68, 54059, 3372, -195, 27601, -1000, 4041,
	4039, 3391, 3715, -1000, 133447, 4038, 133447, 105517, 3608, -1000,
	-1000, -1000, 1066, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1963, 1300, 1295, 2565, 2563, 2530, -76, 2383, 1050, -77,
	601, -1000, 889, -1000, -1000, 885, 879, 1050, -1000, 87905,
	67709, 4117, 2121, 74441, 54059, 54059, 82971, -1000, 82971, -1000,
	-1000, -1000, 2932, -1000, 112189, 89723, 2567, -1000, -1000, 600,
	133447, 133447, 597, -1000, 68, -1000, 4115, 116439, 596, -1000,
	2518, -1000, 791, -1000, -1000, 168, -196, 146179, 2377, 68,
	105517, -1000, 506, 1046, 506, 322, -78, -1000, 3445, 1164,
	27601, 105517, 3390, 2823, 853, 88511, -1000, 1416, 2907, -1000,
	-80, -1000, 734, 68, 2503, -1000, -82, 154436, -1000, 878,
	305, -1000, 3607, -1000, -1000, -219, -1000, -1000, 3243, 3243,
	87905, 67709, 87905, 87905, 87905, 67709, 87905, -1000, 1047, 3860,
	-1000, -221, -1000, 2705, -1000, 1032, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 27601, 1839, -1000, 591, 589, -1000,
	-1000, -1000, -1000, 3669, 13689, 13689, 54059, 54059, 54059, 13689,
	6790, -222, -1000, 13689, 13689, -116, -1000, -1000, 151969, -1000,
	-1000, -1000, 154436, -1000, 22617, 2427, -1000, 148212, -1000, 35896,
	-1000, -1000, 54059, 54059, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 58420, 3180, 587, 82971, -1000, -1000, 303, 1091,
	54059, 55928, 2740, 1091, 1091, -1000, -225, -1000, -1000, -1000,
	3942, -1000, 3942, 142, -1000, -1000, 4113, 27601, -1000, 87905,
	-1000, -1000, -1000, -1000, -1000, 4111, 4110, 2643, 4109, 4104,
	-1000, -1000, -1000, 3334, -210, -220, -1000, 810, -1000, 4091,
	-1000, -1000, 163, 161, 146179, 3179, 130, 3008, -1000, 68,
	-1000, -1000, -1000, -1000, -1000, -1000, 3000, 3857, -1000, 2223,
	-1000, 133447, 133447, -1000, 133447, -1000, 27601, 133447, 3132, 1351,
	-1000, 1017, 2842, 572, 58420, 1197, 105517, 970, 3086, 3013,
	-1000, 3907, 3740, 3041, -233, -1000, 133447, 54059, 133447, -234,
	-235, 2638, -1000, -1000, 1194, 1344, 54059, 1185, -1000, -1000,
	-1000, 82971, 569, 2543, 2543, -1000, -236, -241, -1000, -1000,
	-1000, 54059, 1292, 133447, 36519, -1000, 4090, 3674, -1000, -1000,
	-1000, -1000, -1000, -1000, 133447, 133447, -1000, 133447, 133447, -1000,
	54059, -1000, 151925, 54059, 1290, -1000, -1000, -1000, 4034, 2543,
	27601, 2543, -1000, 2543, 3715, 1226, 2568, 133447, 146179, 105517,
	1967, 1967, 3172, -1000, -1000, -1000, 2623, 2623, 87905, 67709,
	67709, -1000, -83, 1050, -1000, 1818, -1000, 154436, 154436, -1000,
	-1000, 2415, 4087, -1000, -1000, -1000, -1000, 2840, -1000, -1000,
	-1000, 133447, 2834, 3030, 64625, 558, 555, 133447, 1040, -1000,
	-242, 89723, 1023, 1024, -1000, 72609, -1000, -1000, -1000, -1000,
	506, 3853, -1000, 2936, 3844, -1000, 4030, 553, 550, 133447,
	2560, 547, 27601, 3665, 853, 88511, -1000, 3547, 2140, -1000,
	2654, 133447, 3659, -1000, 2907, 546, 1032, 545, 1032, -1000,
	-243, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1301, 1047, -84, -1000, 921, 911, -1000, -1000, -1000, 105517,
	105517, 54059, 54059, -1000, 13689, 13689, 13689, -1000, 286, -1000,
	-1000, 2503, 3737, -1000, -85, 147795, 147569, 6123, 58420, 82971,
	-248, -1000, -1000, 133447, 154436, -92, -1000, 154436, 544, 541,
	411, -1000, -1000, -1000, 750, 693, -1000, -1000, -1000, -1000,
	4086, -1000, -1000, -1000, 146179, 146179, 4084, -1000, 146179, 146179,
	-152, 146179, 146179, 1962, -1000, 115833, 133447, -1000, -1000, 2005,
	1890, -1000, -1000, 133447, 2665, -1000, -1000, -1000, 1041, 54059,
	6825, 58420, 538, 54059, -1000, 535, 534, 3837, 3584, -1000,
	2925, 3166, 2211, 64625, -1000, 3669, -1000, 147525, -1000, 1161,
	2237, -1000, -1000, -1000, -1000, 154436, 58420, 3715, 64625, -1000,
	-1000, 519, 517, 154436, 515, 877, 3177, -1000, -1000, -1000,
	-1000, -207, -207, -1000, 154436, 68, 154436, 511, 3811, -1000,
	-1000, -1000, -1000, 2543, 105517, 871, -1000, -1000, -1000, 1282,
	-1000, -1000, -1000, -1000, 4083, 4079, 3175, 94583, -1000, -249,
	-1000, -1000, -1000, 2246, 82971, -1000, 1023, -1000, -1000, 2567,
	510, -1000, 1031, 2869, 2869, -250, 64625, 64625, -256, 2520,
	2917, -1000, 285, 3832, 1024, -1000, 3951, -1000, 1093, -1000,
	3828, 68, 3606, -1000, 68, -1000, 4026, 64625, -1000, 105517,
	64625, 2557, 2335, 2798, 88511, -1000, 2816, -1000, -1000, -257,
	133447, 2140, -1000, -1000, 87905, -1000, -1000, 4010, -1000, 2705,
	-1000, 133447, -1000, 133447, -1000, -1000, -259, -265, -1000, 2339,
	54059, 35896, -1000, -1000, 6123, -266, -1000, -106, -1000, 3825,
	55928, 4077, 4076, 4074, -1000, -1000, -1000, -289, -289, -1000,
	-152, -152, -152, -152, 133447, -1000, 2209, -1000, 2659, -1000,
	-1000, 3389, -1000, 3096, 509, 147299, 6825, 2771, 133447, 11762,
	2377, 2377, -1000, 3822, 3165, -1000, -1000, 2402, 508, -1000,
	-1000, -1000, -1000, 971, 133447, 1031, 3095, 105517, 6825, 1167,
	-267, 2413, 2413, 54059, 35273, 2455, -1000, 54059, -1000, -1000,
	3715, 67709, 146179, -1000, -1000, 146179, 2555, -1000, 3141, 3987,
	7378, -1000, 2520, 133447, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1161, -268, -273, -1000,
	-1000, 3703, -1000, 3603, 2932, 68, -1000, -1000, -1000, 68,
	-1000, 4073, 1046, 284, -274, 1164, -275, 105517, 2285, -1000,
	853, -1000, 2823, 1093, 3555, -1000, -276, -1000, -1000, -1000,
	-281, -282, -1000, -1000, 283, 55305, 55305, 55305, -116, -117,
	-1000, 133447, 507, -1000, -1000, -1000, -1000, -1000, -1000, 128,
	-1000, -1000, 3341, 963, -1000, 898, 2145, 281, 1178, 276,
	252, -1000, -1000, -1000, 3041, -1000, 133447, -1000, -1000, -1000,
	963, 506, -1000, 54059, 1161, -283, -1000, 1148, -294, -1000,
	1141, -296, -1000, 3169, -1000, -297, 2543, -1000, -289, 249,
	1967, 1044, 3792, -1000, 2516, 7378, -1000, 4018, 88511, -1000,
	-1000, -1000, 2548, 2634, -1000, -1000, -1000, -1000, 1933, 3017,
	-1000, 2808, 1484, 1484, 133447, -1000, -1000, 2784, -299, -1000,
	-1000, 2211, 1161, 2402, 2687, -1000, 2415, 1040, -1000, -1000,
	-1000, -1000, 1161, 501, 2211, 498, 1673, 853, -1000, -1000,
	1516, 3665, 3553, 1468, 1032, -1000, -1000, -1000, 3405, -1000,
	59666, 2569, 2099, 151230, 3405, 3405, -1000, -1000, 146179, 133447,
	1031, 3778, -1000, 953, 926, 1636, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1093, -304, -1000, 2771, 154436, 1031,
	-1000, 2413, 2980, -1000, 2413, 3161, -1000, 2437, -1000, -1000,
	-1000, -1000, 3144, -1000, 2053, 3975, -1000, -1000, 3812, 54059,
	-1000, -1000, -1000, -1000, 2633, 2544, 3014, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1031, 133447, 2402, 2211, 1031,
	2076, 2072, 4072, 1023, 2520, 2211, 64625, 2402, 64625, 2381,
	-1000, 133447, -1000, 2335, 1467, -1000, 1858, -1000, -1000, 2205,
	3899, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -152, -1000,
	-1000, 857, -1000, 3569, -1000, 1184, 2241, 2241, -1000, -1000,
	898, -1000, -1000, 496, -1000, 495, -1000, 146179, 2517, -1000,
	-1000, -1000, 154436, 2921, 2632, -1000, -1000, -1000, -1000, 1031,
	2402, 1093, -1000, 4028, -1000, 2520, -1000, 2402, -305, 1031,
	-307, 2475, -1000, -1000, -207, 2285, -1000, 1824, 73825, 2093,
	-1000, -1000, 2499, 54682, 54059, -1000, 3923, -1000, -1000, 2883,
	-1000, 3041, 54059, 54059, 249, 72003, 7612, -1000, 2912, 1093,
	1031, -1000, -1000, 2784, 1031, 1161, 1093, 2211, -1000, 853,
	1673, 73825, -290, -1000, -1000, -1000, 154436, -1000, -1000, -1000,
	-1000, -310, -313, -1000, -216, 115227, -335, -1000, -1000, -1000,
	-1000, -1000, 1093, -1000, 1093, 2211, -1000, 2402, 146179, 2381,
	-290, -1000, 2402, 1274, -315, -1000, -1000, -1000, 2402, 1031,
	-1000, -1000, -1000, -1000, -1000, 490, -1000, 1031, 1093, 54059,
	1093, -1000, -323, -1000, 2402, -1000,
}

var sqlPgo = [...]int{
	0, 4935, 4934, 30, 4933, 4932, 4931, 4930, 4929, 4928,
	4927, 4925, 4924, 4923, 4922, 4921, 159, 4919, 4918, 4917,
	4911, 4910, 4909, 4908, 4907, 4906, 4905, 4904, 4902, 4900,
	4896, 4895, 4894, 4886, 4885, 4880, 4877, 4876, 4875, 4867,
	4866, 4865, 4863, 4862, 4860, 4859, 4858, 4847, 4844, 4836,
	4835, 4834, 4833, 4831, 4830, 4829, 4828, 4827, 4826, 4825,
	4824, 4809, 4807, 4806, 4805, 4799, 4798, 4797, 4795, 4794,
	4793, 4792, 4790, 4789, 67, 4788, 4787, 4784, 4783, 4782,
	4781, 4778, 4774, 4773, 4772, 4770, 4769, 4768, 4765, 4764,
	4762, 4761, 4760, 4758, 4757, 4755, 75, 4754, 303, 4752,
	4751, 4749, 4747, 4746, 4744, 4742, 4741, 4740, 4739, 4738,
	4737, 299, 4736, 20, 195, 4731, 4728, 28, 4726, 4723,
	298, 4722, 4721, 4720, 4718, 4717, 313, 4716, 4714, 4713,
	4708, 4707, 285, 4706, 4702, 4701, 4700, 4698, 4696, 90,
	154, 4695, 4693, 1349, 4689, 4688, 4687, 4686, 4685, 4683,
	4682, 281, 284, 4680, 4678, 4677, 275, 193, 4676, 297,
	4675, 4674, 4673, 4672, 4671, 4670, 4669, 4668, 4667, 4666,
	4661, 4660, 4659, 4658, 4656, 4655, 4651, 4650, 4648, 4645,
	4644, 4643, 4642, 4641, 4640, 4639, 4637, 4636, 4635, 4634,
	4633, 4632, 4631, 4630, 4628, 4626, 4624, 4623, 4622, 4621,
	4619, 4618, 279, 234, 129, 4616, 4615, 4614, 4613, 4609,
	292, 290, 4608, 4607, 4606, 4605, 4604, 3809, 4602, 4601,
	4600, 4598, 4594, 4593, 4592, 4591, 4590, 162, 8, 63,
	4589, 4586, 104, 106, 108, 98, 118, 111, 4585, 4584,
	140, 4583, 151, 131, 4582, 138, 126, 33, 18, 277,
	268, 8089, 263, 4580, 4579, 4578, 270, 222, 4576, 267,
	4575, 4574, 4573, 4572, 4567, 4565, 84, 62, 237, 4561,
	4559, 165, 196, 206, 205, 201, 199, 314, 59, 112,
	93, 72, 54, 22, 110, 238, 26, 7, 296, 4558,
	293, 13, 166, 17, 46, 4557, 4555, 4554, 4550, 3902,
	123, 4547, 289, 276, 198, 4537, 4536, 4524, 891, 4521,
	4520, 64, 291, 194, 130, 137, 99, 152, 4518, 175,
	203, 39, 4515, 191, 79, 4512, 4506, 116, 95, 10494,
	15026, 4505, 4503, 135, 78, 122, 4705, 259, 187, 223,
	200, 150, 185, 184, 4502, 120, 4501, 172, 164, 210,
	322, 4500, 105, 4499, 3845, 91, 212, 180, 6637, 4494,
	4493, 4491, 115, 4490, 119, 4487, 4486, 74, 25, 6,
	2, 168, 47, 45, 3, 4480, 40, 149, 56, 32,
	4479, 31, 4470, 4468, 4467, 4465, 55, 4464, 81, 182,
	4463, 4462, 307, 4461, 101, 65, 61, 4459, 178, 241,
	4458, 248, 155, 4457, 4451, 209, 218, 4449, 76, 256,
	4448, 4447, 4445, 4440, 4438, 312, 157, 1, 153, 4434,
	4433, 171, 4431, 60, 269, 228, 4430, 69, 4429, 4426,
	204, 68, 169, 311, 202, 253, 141, 257, 214, 260,
	4425, 4422, 4421, 215, 4420, 4419, 246, 179, 4418, 4417,
	265, 315, 103, 57, 96, 264, 94, 221, 181, 4416,
	230, 4415, 4411, 308, 213, 239, 43, 9, 14, 107,
	125, 4410, 5, 262, 183, 244, 146, 4409, 7702, 2355,
	3084, 266, 4407, 173, 144, 92, 156, 176, 288, 100,
	4406, 4404, 3163, 4403, 4402, 4400, 4398, 217, 4392, 4388,
	41, 188, 186, 243, 4386, 124, 88, 58, 27, 145,
	102, 304, 142, 249, 227, 282, 4385, 4384, 4380, 216,
	4376, 73, 121, 231, 4375, 229, 280, 71, 4374, 840,
	4371, 174, 2276, 80, 177, 4370, 242, 4369, 4367, 4362,
	4359, 4358, 4357, 4356, 2272, 254, 4352, 4349, 4347, 44,
	226, 4346, 224, 197, 274, 66, 83, 220, 113, 3603,
	128, 1941, 236, 77, 4, 4344, 148, 4341, 4569, 70,
	4338, 0, 14310, 10050, 13287, 4337, 4336, 13454, 4335, 5529,
	4333, 4329, 4328, 240, 89, 4326, 4324, 4323, 127, 4322,
	97, 4321, 4320, 87, 4317, 35, 24, 23, 38, 36,
	770, 208, 4316, 4314, 147, 160, 11, 4313, 306, 255,
	4312, 4311, 4310, 4309, 109, 4308, 52, 4307, 50, 4306,
	4305, 53, 16, 49, 4304, 4303, 232, 192, 3743, 189,
	170, 4302, 132, 4301, 4300, 4299, 82, 161, 4298, 4296,
	287, 235, 252, 136, 4295, 283, 4294, 225, 4291, 4289,
	34, 4287, 4286, 271, 139, 133, 51, 272, 158, 48,
	4285, 4284, 4282, 167, 4281, 4280, 4279, 134, 4278, 4276,
	85, 4275, 4273, 42, 4272, 163, 4271, 19, 4270, 4269,
	4267, 309, 207, 245, 4266, 4265, 190, 4264, 4263, 295,
	4262, 4261, 3836, 305, 4256, 37, 4253, 4252, 4250, 15,
	4249, 4248, 233, 3634, 4247, 4246, 10, 4245, 219,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 14, 14, 10, 10,
	10, 10, 11, 11, 11, 11, 11, 58, 58, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 41, 43, 42, 36, 36, 37, 37,
	38, 39, 39, 44, 46, 45, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 22, 22, 47,
	47, 23, 23, 49, 49, 24, 24, 50, 50, 640,
	640, 640, 641, 641, 642, 642, 642, 27, 52, 20,
	21, 21, 21, 21, 643, 643, 643, 643, 40, 28,
	53, 33, 33, 33, 33, 33, 230, 230, 230, 230,
	26, 26, 48, 48, 274, 274, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 639, 639, 276, 276,
	275, 263, 263, 264, 264, 265, 265, 644, 644, 277,
	277, 277, 278, 278, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 533, 533, 533, 564, 564, 564,
	564, 566, 566, 685, 685, 686, 686, 686, 686, 686,
	142, 142, 429, 429, 429, 62, 62, 62, 62, 62,
	629, 629, 232, 232, 232, 234, 234, 233, 233, 233,
	233, 233, 86, 86, 650, 650, 649, 681, 681, 648,
	648, 651, 651, 651, 231, 231, 231, 83, 83, 138,
	138, 138, 138, 138, 138, 138, 138, 139, 139, 140,
	140, 660, 660, 660, 235, 235, 235, 237, 237, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 242, 19, 19, 19, 121, 121, 121, 121,
	121, 121, 121, 116, 116, 568, 568, 569, 569, 226,
	226, 227, 227, 227, 227, 228, 228, 229, 229, 229,
	77, 77, 239, 239, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 65,
	65, 65, 65, 65, 66, 66, 66, 66, 66, 66,
	67, 67, 67, 67, 67, 67, 68, 68, 75, 75,
	75, 75, 75, 75, 75, 75, 204, 204, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 82, 82, 82, 82, 82, 92, 661, 661,
	662, 662, 676, 665, 665, 666, 666, 667, 667, 667,
	668, 668, 668, 668, 668, 675, 675, 675, 675, 675,
	670, 669, 671, 671, 672, 672, 673, 673, 673, 673,
	673, 674, 674, 674, 674, 674, 674, 674, 674, 674,
	674, 674, 674, 674, 674, 674, 674, 674, 664, 677,
	678, 678, 679, 679, 680, 680, 680, 687, 687, 687,
	687, 687, 687, 687, 687, 687, 687, 687, 687, 687,
	687, 687, 687, 687, 688, 688, 689, 689, 690, 690,
	690, 690, 690, 690, 690, 690, 690, 690, 690, 690,
	690, 690, 690, 690, 690, 690, 690, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 93, 93, 390, 390, 353,
	353, 94, 94, 94, 95, 95, 96, 96, 79, 79,
	79, 626, 626, 627, 633, 691, 691, 524, 524, 523,
	523, 98, 98, 428, 428, 99, 99, 99, 99, 99,
	99, 100, 100, 100, 100, 100, 100, 100, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 108, 108, 108, 108, 108, 109, 109, 109,
	106, 106, 106, 103, 103, 103, 102, 102, 102, 107,
	107, 107, 632, 339, 339, 105, 105, 105, 104, 104,
	104, 406, 406, 110, 110, 110, 110, 354, 111, 111,
	111, 111, 111, 111, 111, 111, 114, 114, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 526, 526, 5, 5, 269, 269, 268, 268, 268,
	268, 6, 6, 6, 272, 272, 271, 270, 112, 112,
	112, 490, 490, 117, 117, 117, 444, 444, 118, 118,
	118, 118, 118, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 636, 636, 399,
	399, 302, 302, 302, 302, 130, 130, 130, 130, 131,
	131, 131, 131, 132, 132, 212, 212, 148, 148, 148,
	148, 147, 147, 147, 147, 147, 147, 147, 147, 69,
	69, 69, 70, 70, 71, 71, 72, 72, 73, 73,
	74, 74, 74, 74, 74, 151, 151, 32, 32, 32,
	32, 152, 152, 682, 682, 154, 150, 150, 150, 150,
	150, 150, 150, 149, 149, 153, 153, 153, 153, 155,
	157, 157, 157, 157, 157, 156, 156, 156, 156, 156,
	158, 158, 558, 558, 414, 414, 556, 556, 580, 580,
	557, 557, 360, 360, 360, 360, 360, 361, 361, 361,
	567, 567, 567, 567, 567, 567, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 213, 213, 213, 214, 214, 219, 219, 220,
	220, 220, 221, 221, 221, 218, 218, 218, 215, 215,
	216, 216, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 224, 224, 222, 222, 223, 223, 693, 693,
	692, 692, 225, 225, 225, 225, 225, 185, 185, 185,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 415, 415, 188, 188, 188, 172, 172,
	160, 160, 160, 160, 160, 160, 160, 160, 238, 238,
	238, 238, 165, 165, 165, 165, 165, 165, 165, 165,
	166, 166, 166, 161, 161, 174, 174, 174, 174, 174,
	167, 167, 168, 168, 168, 169, 169, 169, 169, 196,
	196, 171, 171, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 162, 162, 162, 162, 176, 176, 176, 176,
	451, 451, 451, 202, 202, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 199, 199, 199, 199, 199, 199, 652, 652, 653,
	653, 653, 192, 192, 192, 192, 192, 192, 504, 504,
	186, 186, 186, 186, 191, 191, 191, 191, 194, 194,
	194, 194, 434, 434, 183, 183, 183, 184, 184, 184,
	189, 189, 201, 190, 391, 391, 187, 187, 193, 193,
	193, 193, 195, 195, 195, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 164, 164, 164, 164, 197,
	197, 182, 182, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 694, 694, 178, 178, 178, 177,
	177, 177, 177, 180, 180, 181, 181, 181, 181, 181,
	181, 181, 179, 170, 200, 634, 634, 630, 630, 630,
	630, 630, 630, 630, 630, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 631, 631, 631, 631, 631, 635,
	635, 122, 122, 122, 122, 122, 122, 122, 133, 133,
	133, 133, 133, 133, 133, 136, 136, 123, 123, 123,
	123, 123, 123, 123, 126, 126, 124, 124, 124, 124,
	125, 125, 87, 87, 87, 87, 87, 18, 18, 18,
	88, 88, 293, 293, 247, 247, 247, 378, 378, 248,
	248, 368, 368, 368, 368, 243, 243, 244, 244, 245,
	246, 246, 89, 89, 695, 695, 695, 645, 645, 645,
	646, 646, 646, 646, 646, 646, 362, 362, 363, 363,
	470, 470, 470, 470, 470, 366, 366, 366, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 376, 377, 377,
	369, 369, 375, 374, 374, 373, 373, 372, 372, 370,
	371, 371, 371, 380, 380, 379, 382, 382, 381, 469,
	589, 589, 591, 591, 591, 591, 591, 591, 591, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 452, 452, 696, 696,
	697, 698, 587, 587, 587, 588, 583, 583, 584, 584,
	584, 584, 584, 364, 364, 365, 365, 365, 365, 585,
	586, 397, 397, 508, 590, 590, 592, 592, 594, 699,
	699, 699, 699, 699, 699, 700, 700, 700, 468, 468,
	467, 467, 466, 466, 388, 388, 595, 595, 595, 595,
	596, 596, 596, 596, 596, 599, 598, 597, 597, 597,
	597, 597, 91, 91, 91, 431, 431, 430, 430, 432,
	432, 432, 432, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 432, 432, 432, 432, 432, 209, 209, 305,
	305, 305, 85, 85, 85, 15, 15, 15, 15, 15,
	15, 15, 320, 320, 16, 16, 16, 16, 647, 647,
	647, 90, 90, 90, 90, 90, 90, 386, 386, 386,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 638, 638, 637, 637,
	306, 306, 702, 702, 97, 97, 97, 97, 97, 97,
	97, 97, 527, 527, 528, 528, 84, 84, 84, 84,
	84, 453, 453, 450, 450, 449, 449, 396, 396, 506,
	506, 506, 507, 310, 310, 311, 311, 266, 266, 266,
	35, 34, 25, 25, 29, 29, 30, 30, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 31, 31, 55,
	55, 55, 55, 56, 56, 56, 56, 59, 59, 60,
	60, 54, 54, 54, 54, 57, 57, 51, 51, 61,
	61, 61, 61, 61, 654, 656, 656, 655, 655, 659,
	659, 659, 659, 659, 659, 657, 657, 341, 341, 658,
	658, 683, 683, 684, 684, 129, 129, 134, 134, 134,
	134, 134, 135, 135, 135, 135, 137, 137, 137, 137,
	146, 146, 205, 205, 205, 205, 205, 205, 205, 63,
	63, 76, 76, 144, 704, 704, 704, 145, 145, 145,
	206, 206, 206, 206, 207, 207, 208, 208, 703, 703,
	303, 303, 463, 463, 464, 464, 705, 705, 465, 465,
	465, 465, 465, 296, 295, 297, 297, 298, 298, 81,
	81, 81, 286, 286, 285, 287, 287, 288, 288, 283,
	283, 570, 570, 290, 290, 290, 291, 291, 279, 279,
	280, 280, 281, 281, 282, 282, 294, 294, 565, 565,
	706, 706, 120, 120, 120, 211, 211, 352, 352, 352,
	460, 460, 460, 389, 389, 317, 317, 462, 462, 462,
	462, 462, 427, 427, 427, 210, 210, 404, 404, 417,
	417, 418, 418, 520, 520, 419, 127, 127, 128, 128,
	143, 143, 251, 251, 249, 249, 249, 249, 249, 249,
	249, 249, 256, 256, 257, 257, 258, 258, 259, 260,
	260, 260, 260, 407, 407, 261, 261, 261, 250, 250,
	250, 252, 252, 252, 252, 252, 252, 252, 255, 255,
	255, 255, 262, 262, 262, 254, 254, 606, 606, 606,
	608, 608, 610, 610, 609, 609, 605, 605, 607, 607,
	701, 701, 433, 433, 433, 385, 387, 383, 383, 384,
	384, 394, 394, 392, 393, 393, 395, 395, 505, 505,
	505, 267, 267, 267, 424, 424, 424, 424, 425, 425,
	456, 456, 454, 454, 454, 454, 455, 455, 457, 457,
	457, 458, 458, 459, 459, 421, 421, 422, 422, 423,
	423, 423, 423, 486, 486, 253, 253, 253, 401, 401,
	401, 402, 402, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 477, 477, 475, 475, 475, 475,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 510,
	511, 511, 403, 403, 512, 461, 461, 624, 624, 624,
	625, 625, 503, 503, 513, 513, 513, 513, 513, 513,
	501, 501, 502, 502, 521, 522, 522, 437, 437, 437,
	437, 435, 435, 438, 438, 438, 438, 438, 436, 436,
	514, 514, 514, 514, 426, 426, 515, 515, 515, 515,
	516, 517, 517, 518, 518, 471, 472, 472, 529, 529,
	529, 529, 531, 400, 400, 400, 400, 400, 582, 581,
	581, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 546, 546, 546, 546, 546, 546, 546, 532,
	532, 532, 532, 532, 536, 536, 536, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 537, 537,
	542, 542, 543, 543, 543, 538, 539, 544, 544, 544,
	544, 707, 707, 548, 548, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 534, 534, 534, 541, 541, 541,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 445, 445, 447, 447, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 480, 480,
	480, 480, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 600, 600, 600,
	600, 600, 600, 600, 600, 482, 482, 603, 603, 604,
	604, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 611, 611, 612, 612, 614, 614, 615, 615,
	616, 617, 617, 617, 618, 619, 619, 613, 613, 620,
	620, 620, 620, 621, 621, 622, 622, 622, 622, 622,
	623, 623, 623, 623, 623, 492, 492, 493, 493, 499,
	499, 499, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 359, 359, 358,
	307, 307, 307, 307, 307, 307, 412, 412, 410, 410,
	410, 413, 413, 411, 411, 409, 409, 408, 408, 489,
	489, 487, 487, 491, 491, 439, 439, 547, 547, 547,
	547, 547, 547, 547, 547, 440, 440, 440, 448, 441,
	441, 442, 442, 442, 442, 442, 483, 484, 443, 443,
	443, 485, 485, 494, 498, 498, 497, 496, 496, 495,
	495, 473, 473, 474, 474, 420, 420, 708, 708, 416,
	416, 519, 519, 519, 519, 576, 576, 356, 356, 405,
	405, 355, 355, 347, 347, 348, 348, 348, 348, 398,
	398, 500, 500, 549, 549, 550, 550, 551, 551, 552,
	552, 553, 554, 555, 488, 488, 328, 327, 314, 315,
	326, 325, 324, 313, 316, 321, 322, 323, 318, 319,
	335, 334, 333, 284, 289, 340, 342, 342, 345, 345,
	346, 344, 343, 343, 330, 331, 332, 525, 312, 349,
	349, 350, 350, 350, 351, 351, 351, 351, 308, 308,
	309, 309, 336, 336, 337, 338, 338, 329, 329, 329,
	299, 299, 299, 300, 300, 301, 301, 563, 563, 560,
	560, 560, 561, 561, 561, 663, 562, 562, 562, 562,
	559, 559, 559, 559, 559, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 572, 572, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 574, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 579, 579,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 4, 4, 6, 9, 6, 8,
	4, 4, 5, 9, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 4, 4, 2, 1, 1, 3,
	1, 3, 2, 4, 3, 2, 3, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 1, 1,
	1, 1, 3, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 3, 12, 3, 1, 1, 2, 1, 4, 1,
	0, 3, 3, 0, 4, 6, 0, 6, 4, 5,
	7, 6, 8, 7, 9, 8, 2, 1, 3, 1,
	3, 3, 3, 0, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 5, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 2, 2, 1, 2, 3, 3, 4, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 6, 3, 8, 5, 3, 12, 2, 0,
	1, 0, 1, 1, 0, 1, 3, 1, 3, 3,
	3, 3, 2, 2, 1, 1, 1, 1, 2, 1,
	1, 1, 1, 0, 1, 2, 2, 2, 1, 1,
	1, 4, 5, 1, 1, 1, 1, 3, 3, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 1, 2,
	1, 1, 3, 0, 1, 4, 0, 4, 3, 3,
	4, 3, 4, 4, 4, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 1, 0, 1, 0, 4, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 1, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 10,
	5, 1, 3, 3, 1, 1, 0, 2, 0, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 4, 3, 1, 2, 3, 2, 2,
	2, 4, 6, 3, 1, 2, 2, 7, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 7, 4, 7, 8, 8, 9, 11,
	11, 6, 2, 6, 9, 4, 7, 7, 10, 7,
	10, 10, 10, 13, 5, 5, 2, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 4, 4, 3,
	4, 1, 1, 1, 1, 5, 4, 5, 3, 3,
	2, 2, 6, 3, 3, 3, 3, 4, 4, 3,
	1, 3, 3, 2, 2, 1, 3, 3, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 1, 1,
	2, 1, 2, 2, 2, 9, 2, 1, 0, 1,
	1, 0, 1, 2, 0, 2, 2, 0, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 4, 4, 4,
	3, 3, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 3, 5, 7, 3, 3, 3,
	4, 8, 6, 4, 5, 5, 5, 3, 0, 1,
	1, 1, 4, 4, 3, 4, 4, 3, 4, 4,
	1, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 5, 7, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 5, 3, 5, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 7, 5, 2, 0, 3, 3, 4, 3,
	3, 3, 5, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 3, 4, 5, 4, 4, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	6, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 1, 1, 1, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 2, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 3, 6, 4, 2, 3, 5, 5,
	5, 2, 5, 5, 2, 2, 2, 0, 1, 1,
	3, 4, 10, 11, 9, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	6, 1, 3, 1, 2, 0, 1, 2, 3, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	3, 0, 4, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 2, 3, 1, 4, 2, 3,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 8, 11, 5, 4, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 16, 19, 15, 18,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 2, 2, 3, 0, 3, 0, 3,
	0, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 2, 1, 2, 3, 2, 2, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 14,
	16, 3, 1, 0, 4, 1, 0, 2, 2, 3,
	0, 1, 1, 4, 4, 5, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	7, 10, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 6, 4, 5, 4,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 655, -3, -206, -113, -110, -77, -75,
	-117, -118, -99, -119, -112, -141, -146, -127, -128, -129,
	-142, -148, -205, -213, -214, -215, -216, -225, -207, -208,
	-4, -62, -64, -78, -98, -100, -111, -121, -120, -122,
	-130, -138, -133, -116, -69, -143, -147, -159, -209, -210,
	-211, 33, 32, 106, 85, 164, 137, 146, 217, 415,
	467, 479, 432, 151, 455, 437, -153, -154, 499, -63,
	-76, -145, -144, 78, 138, 181, 319, 447, 53, 156,
	-7, -15, -32, -19, 30, 49, -65, -66, -67, -68,
	67, -85, -80, -93, -86, -79, -82, -83, -687, 109,
	-607, -101, -104, -137, -690, 172, 238, -123, -124, -125,
	397, -131, -132, 458, -134, -135, -136, 461, 173, -71,
	-70, 166, -249, -251, -150, -149, -151, -212, -160, -161,
	-162, -163, -164, -166, -167, -169, -196, -170, -171, -172,
	-173, -174, -175, -179, -199, -176, -177, -178, -181, -180,
	-182, -187, -183, -184, -185, -186, -188, -189, -191, -192,
	-193, -194, -195, -197, -198, 505, -190, -200, -168, -201,
	573, 522, 87, 471, 21, -8, -9, -10, -11, -12,
	-13, -14, -18, -17, -61, -5, -6, -81, -84, -87,
	-88, -89, -97, -90, -91, -92, -606, -102, -103, -106,
	-108, -109, -105, -107, 456, 626, -252, -250, 652, 631,
	589, -165, -22, -27, -23, -24, -26, -28, -25, -29,
	-30, -31, -47, -52, -49, -50, -48, -51, -53, -54,
	-55, -56, -57, -58, -59, -60, -34, -40, -41, -35,
	-36, -37, -38, -39, -42, -43, -44, -45, -46, -20,
	-21, -33, 613, 622, -255, -253, -254, -262, 491, 597,
	545, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, -354,
	2, -330, -336, -337, -338, -329, -299, -574, -579, 4,
	-571, -577, 180, 248, 357, 21, 22, 24, 23, 25,
	26, 27, 28, 30, 31, 41, 43, 44, 45, 47,
	48, 49, 50, 51, 52, 53, 57, 59, 63, 64,
	65, 66, 67, 68, 69, 73, 78, 79, 84, 85,
	86, 87, 88, 89, 90, 91, 97, 94, 95, 96,
	98, 100, 102, 103, 104, 105, 106, 107, 108, 110,
	111, 112, 114, 115, 116, 124, 125, 126, 127, 128,
	130, 137, 131, 138, 141, 135, 140, 136, 142, 144,
	145, 146, 149, 150, 151, 153, 154, 155, 157, 158,
	159, 161, 162, 164, 165, 166, 169, 167, 170, 168,
	171, 172, 173, 174, 175, 178, 186, 187, 188, 193,
	195, 196, 197, 199, 200, 203, 204, 205, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 218, 222, 224,
	225, 226, 227, 228, 229, 230, 236, 237, 238, 240,
	241, 242, 243, 244, 249, 250, 251, 255, 257, 263,
	264, 269, 265, 270, 271, 273, 277, 278, 279, 280,
	281, 282, 284, 286, 285, 290, 288, 292, 293, 296,
	297, 298, 299, 300, 301, 305, 306, 302, 307, 308,
	310, 311, 314, 312, 315, 316, 313, 317, 320, 321,
	322, 323, 324, 325, 326, 327, 328, 329, 330, 331,
	318, 319, 334, 332, 336, 337, 338, 339, 340, 355,
	350, 351, 352, 344, 345, 341, 346, 342, 343, 347,
	348, 354, 349, 359, 360, 361, 362, 365, 234, 256,
	367, 368, 371, 373, 390, 376, 377, 378, 381, 382,
	385, 388, 389, 391, 392, 393, 394, 395, 396, 397,
	398, 399, 400, 402, 403, 405, 406, 407, 409, 410,
	411, 413, 415, 416, 418, 419, 420, 422, 423, 424,
	425, 426, 427, 428, 429, 431, 432, 434, 433, 435,
	437, 439, 440, 441, 447, 448, 455, 449, 451, 452,
	453, 454, 456, 457, 458, 459, 460, 461, 465, 463,
	464, 466, 467, 469, 470, 471, 472, 473, 475, 477,
	478, 482, 483, 484, 502, 503, 525, 479, 480, 481,
	485, 486, 487, 488, 489, 490, 494, 492, 493, 495,
	496, 497, 499, 501, 504, 505, 507, 508, 509, 510,
	511, 512, 513, 516, 518, 519, 520, 521, 522, 523,
	544, 524, 526, 530, 531, 532, 533, 527, 528, 543,
	535, 536, 537, 538, 540, 541, 546, 547, 548, 549,
	550, 551, 553, 554, 556, 564, 577, 565, 566, 567,
	568, 570, 573, 574, 575, 576, 562, 578, 579, 582,
	583, 587, 584, 588, 585, 586, 589, 591, 594, 595,
	596, 602, 601, 603, 604, 605, 607, 608, 609, 614,
	615, 617, 618, 619, 37, 54, 55, 58, 60, 62,
	74, 75, 76, 80, 132, 133, 163, 176, 177, 189,
	206, 207, 219, 221, 231, 232, 233, 254, 258, 259,
	261, 267, 289, 364, 366, 383, 387, 404, 408, 412,
	414, 430, 474, 500, 514, 529, 534, 557, 558, 559,
	560, 569, 571, 597, 598, 599, 606, 616, -354, 2,
	-330, 374, -323, 2, -299, -299, 415, 29, 2, 29,
	403, 493, 548, 550, 2, -636, -399, 541, 2, 29,
	-302, -299, 109, 217, 491, -323, 2, -636, 217, -399,
	26, 541, 2, -299, 2, 388, 23, 28, 71, 82,
	104, 149, 174, 198, 203, -689, 390, 423, 477, 495,
	543, 554, 570, 2, 601, 311, 492, 545, 248, 127,
	575, 485, -647, 482, 483, 388, 421, 469, 220, 590,
	-303, 2, 479, -299, 311, 2, 655, 100, 79, 474,
	496, -156, 2, 301, 565, -157, -158, -155, 557, -558,
	485, 469, 334, -299, 655, 655, 655, 29, -312, 2,
	-299, -312, 2, -217, 2, -312, -692, -224, -223, -222,
	22, 448, 188, 282, 201, 239, 339, 418, 199, 51,
	-217, 2, 545, 248, 485, 127, 541, -703, 2, 565,
	-703, 2, 655, 655, 2, 545, 394, 601, 492, 127,
	427, 248, 575, 203, 149, 28, 73, 49, 551, 630,
	485, -647, 627, 628, 311, 134, -629, 2, -628, 4,
	-577, -571, -348, -347, 545, 551, 127, -338, -329, 644,
	-337, 655, 655, 655, 655, 2, 270, 271, 425, 424,
	496, 497, 29, 655, 655, 655, 655, 655, 482, 175,
	2, 174, -661, 23, 28, 71, 99, 104, 134, 198,
	390, 423, 495, 543, 547, 554, 570, -646, 524, 73,
	485, -645, -647, 379, 311, 575, 149, -449, 127, 301,
	215, 583, 550, 548, 581, 141, 257, 586, 585, 655,
	655, -114, 2, 652, 33, 32, -113, -117, 151, 499,
	-242, 545, 262, 2, -299, 655, 655, 655, 2, 270,
	271, 482, 483, 29, 655, 655, 201, -628, 541, 2,
	655, 655, 655, 2, 29, 270, 271, 482, 483, 262,
	2, 73, 487, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	2, -203, 496, 524, 227, 50, 49, 79, 29, 422,
	84, 395, 128, 134, 158, 576, 218, 248, 249, 278,
	99, 100, -451, 47, 271, 73, 270, 483, -652, 482,
	-504, 546, 486, 493, 540, 91, 282, 479, 565, 567,
	109, 591, 470, 619, 427, 428, 538, 441, 535, 302,
	167, 202, 4, 127, 334, 469, 498, 286, 285, 577,
	557, 301, 478, 398, 89, 655, -701, 2, 545, 565,
	2, -703, 2, -703, 2, -704, 565, 616, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, -250, -252,
	-251, 655, 655, 655, 655, 655, 655, 655, -203, 496,
	2, 79, 29, 29, -392, -394, 580, 260, 160, 380,
	-249, -251, 2, -606, 577, 496, -556, 2, -478, -580,
	-480, 642, 643, 635, 542, 72, -358, 356, 620, -492,
	134, 581, 374, -579, -481, -494, 163, 390, 474, -413,
	8, 9, 5, 6, 7, -308, -482, -488, 572, 179,
	363, -351, 656, 10, 652, -603, -251, -493, 38, 221,
	70, -560, -350, -309, -532, 261, -349, -329, -600, -601,
	4, -571, -572, -561, -535, -543, -539, -540, -546, -299,
	-574, 82, 118, 119, 117, 122, 121, 304, 303, 123,
	120, 498, 590, 71, 37, 231, 232, 267, 364, 233,
	80, -602, 150, -573, 258, 259, 514, 55, 430, 189,
	133, 132, 366, 60, 58, 598, -544, 129, 557, 558,
	559, 560, 206, 207, 62, 176, 177, 387, 412, 534,
	569, 571, 219, 289, 46, 113, 202, 253, 235, 266,
	268, 272, 291, 294, 335, 353, 358, 384, 386, 468,
	506, -707, 599, 529, 74, 75, 194, -608, 433, -609,
	-323, -608, 655, 655, 657, 655, -383, -385, -387, 2,
	29, 147, 652, 2, -509, 2, -510, -514, -251, 283,
	-513, 652, -511, 650, -330, 375, -604, 475, -600, -601,
	-308, -329, -350, 4, -571, -573, 654, -388, 652, 127,
	485, 545, 83, 248, 99, 174, 203, -444, 652, -299,
	29, 374, 561, 657, -636, -399, -384, 420, -490, 652,
	374, 377, 201, 377, -636, 64, 315, 2, 2, 2,
	2, 2, 231, -299, 545, 126, 2, 281, 2, 2,
	2, 2, 2, 2, 2, -406, 231, 2, -330, 601,
	-406, 231, 2, -406, 231, 2, -450, 2, 93, -313,
	231, 2, -299, -339, 231, 2, -334, -336, -345, 231,
	2, -342, -299, -566, 231, 2, -564, 4, -571, 123,
	498, -478, 2, -143, 2, 64, -299, 601, 2, 502,
	2, 652, -156, 2, 76, 565, 46, 496, -157, 2,
	-464, 2, -465, -295, -296, -297, -521, -298, 269, 419,
	429, 623, 139, 356, 619, -682, 201, 634, 561, -556,
	-556, -556, -414, 654, -219, 57, -312, -693, -692, -693,
	-554, 29, -549, 8, -550, 642, 643, -554, -554, -693,
	-693, 2, 2, 2, 2, 2, -463, -464, 2, -514,
	231, -330, 2, -327, -559, 4, -571, -577, -572, -578,
	-574, 29, 32, 33, 34, 36, 38, 39, 40, 42,
	61, 70, 71, 77, 81, 83, 93, 99, 109, 117,
	118, 120, 119, 121, 122, 123, 134, 139, 143, 147,
	148, 152, 156, 160, 179, 181, 194, 198, 201, 217,
	220, 223, 239, 252, 260, 262, 283, 287, 295, 303,
	304, 356, 363, 369, 374, 375, 379, 380, 401, 417,
	436, 462, 491, 498, 517, 539, 545, 555, 561, 563,
	572, 580, 581, 590, 592, 600, 610, 611, 612, 613,
	-579, 82, 2, -514, 231, 2, -333, 231, -514, -336,
	2, -313, 2, -478, -640, 553, 170, 449, 2, -355,
	231, -330, -332, -336, -334, 2, 2, 2, 2, -478,
	2, -568, 2, -563, 10, -562, 5, 4, -571, -577,
	-572, -481, 2, -492, 29, -342, 2, -564, 231, 2,
	29, 29, 601, 420, 262, 561, 657, -405, -347, -348,
	-555, 4, 8, -398, -299, 654, -478, 2, -143, -126,
	2, 194, -478, 231, 2, -143, 231, 2, -478, 231,
	2, -143, 231, 2, -299, 2, -648, 2, -681, -568,
	231, 98, 231, -299, 2, 203, -688, 477, 574, 315,
	2, 2, 570, 2, 104, 545, 126, 2, 2, 2,
	2, 2, 2, 2, 545, -318, 2, -299, 194, -523,
	262, -342, 231, -343, 2, 492, -702, 433, -564, 231,
	2, 453, 601, -334, 231, 2, -334, 248, 264, -313,
	231, 2, 550, 548, 550, 548, 201, 2, 262, 2,
	262, 2, -515, 2, -516, -510, -517, 650, 375, -526,
	2, -525, -562, 597, -114, 652, -114, 652, 496, 652,
	-568, -330, -330, -478, 2, -143, -126, 2, -478, 2,
	-143, 2, -299, 2, -140, -568, -139, 652, 201, 591,
	-299, 2, -478, 2, -143, -126, 2, -478, 2, -143,
	2, -242, 194, 2, 127, 545, -203, 2, 194, 592,
	2, 8, 2, 239, -238, -568, 486, 186, 428, 2,
	502, 2, 503, 79, -451, 619, 79, 201, 2, 201,
	2, -434, 2, 613, 420, 201, 2, 2, -634, 2,
	374, 201, 2, 201, 2, 201, 2, 201, 2, 201,
	2, -202, 497, 566, 544, 424, 271, 2, -143, 610,
	-126, 271, 270, -478, 610, 2, -653, 194, 483, -478,
	2, 564, 280, 168, 201, -434, 2, 201, 2, 201,
	2, 5, 2, 43, 425, 525, 2, 269, 419, 525,
	2, 523, 2, -330, 545, 601, 492, 127, 203, 29,
	2, 482, 2, 2, 94, 95, 201, 2, 201, 2,
	216, 201, 2, 441, 201, 545, -415, 654, -415, 619,
	2, -426, -514, -463, 561, -392, -394, -203, 502, 2,
	-256, -424, -258, 194, -454, -455, -259, 295, 181, 369,
	-260, -433, 29, 147, -433, -433, 64, 653, 653, -682,
	577, 11, 12, 81, 43, 642, 643, 644, 645, 192,
	646, 647, 640, 641, 639, 632, 633, 637, 275, 276,
	101, 636, 634, 92, 309, 476, 182, 183, 184, 185,
	450, 246, 35, 247, 14, 15, 16, -358, 34, 379,
	294, 620, 235, 506, 635, 17, 18, 19, 266, 268,
	358, 54, 239, -307, 390, -357, 542, 72, -478, -478,
	-478, -478, -478, -478, -478, -478, 386, 652, -420, -473,
	650, -251, 652, 652, 652, 652, -555, -251, -478, -492,
	653, -411, 652, -251, -492, -487, 652, 474, 650, 652,
	-495, -478, 5, 5, 5, 652, 654, -611, 614, 194,
	652, 652, 652, 652, 652, 652, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 414, -537, 652, -536,
	652, -536, -536, 602, -534, 652, 622, 615, 652, -534,
	652, 652, 652, 652, 652, 652, 652, 652, 652, 652,
	652, 652, 652, 602, 551, 657, -608, -388, 652, -416,
	-519, -478, 644, -416, -416, 374, -408, -478, 113, -437,
	272, 335, 202, 291, 468, 253, -475, 656, -475, -503,
	622, -251, -511, -329, -251, -513, 652, -509, -503, -115,
	-555, -98, -111, -120, -143, -159, -210, -211, 644, -330,
	652, 201, 652, 654, -559, 201, -398, -313, -342, -330,
	-349, -350, -355, -324, -299, 2, 2, 146, -408, -630,
	575, 485, 29, 4, -577, -571, -348, 492, -347, 545,
	127, -566, -302, 561, 39, -489, -529, -530, -582, 656,
	-581, -532, -542, -538, -541, 404, 408, -561, 58, 598,
	-544, 261, 4, -571, -573, 258, 259, 514, 55, 430,
	189, 133, 132, 366, 60, 557, 558, 559, 560, 206,
	207, 62, 599, 529, 74, 75, -630, 575, 485, 29,
	492, 194, -566, 194, 201, -566, 2, 2, 163, 2,
	2, 2, -299, -277, 657, 69, 459, 163, -406, 231,
	-277, 163, -277, 163, -356, 231, -355, -277, 163, -277,
	657, 163, -277, 657, 163, 654, 657, 163, -566, 2,
	-450, -558, -408, 39, -464, 2, 134, 4, 5, -705,
	657, 293, -361, 308, 355, 226, 375, 617, 367, 139,
	-567, 5, 4, -488, -500, 134, 301, 261, -549, -551,
	9, -552, 642, 643, -557, -556, 116, 654, -559, -220,
	256, 41, -312, -312, -693, -693, 8, 8, -693, -693,
	-312, -312, -274, 451, 499, 389, -273, 25, 30, 151,
	250, 340, 595, 169, -373, 251, 456, -370, 394, 163,
	518, 584, -640, -643, 481, 553, 170, 449, 96, 367,
	499, 389, 451, 163, -430, -432, 39, 125, 340, 388,
	65, 242, 313, 314, 522, 457, 606, 163, 499, 389,
	451, 389, -16, -288, 25, 151, -290, -285, 499, 30,
	-643, 105, 451, 631, 626, 456, 400, 537, 417, -643,
	-640, 288, -642, 609, 354, -276, 518, 584, -640, -643,
	481, 451, -275, -375, -370, 394, 163, 656, 25, 151,
	451, 499, 389, -685, -686, 30, -269, -268, 25, 151,
	499, 587, -272, 239, -271, 25, -152, -132, -151, 456,
	499, -152, 2, 451, 389, -637, -320, -605, 239, 613,
	163, -320, -320, -514, 231, -657, 194, 2, -650, -139,
	284, 5, 10, -568, -139, -405, 657, 657, -559, 644,
	483, 482, 163, 163, 163, 163, 271, 194, 356, -681,
	2, 356, 613, -676, -336, -689, 2, 2, 2, 2,
	2, 2, 2, -330, 231, -390, 374, -626, -627, -691,
	545, -229, 613, -568, 356, 46, -333, 231, 2, -336,
	601, -637, 356, -645, -335, 231, -330, 39, 652, 356,
	2, -450, 2, 248, -605, 356, -515, -352, -330, -510,
	-352, 499, -323, 39, -475, -330, 653, 657, -526, -526,
	-568, -229, 201, 652, -242, 613, 613, 271, -522, 657,
	-521, 239, -569, -568, -140, -568, 454, 201, 271, -568,
	-626, -313, 2, -330, 2, 545, 273, -139, 201, 239,
	-229, -568, -568, -568, -558, 29, 503, 2, -202, 497,
	566, 95, 503, 2, -330, 545, 127, 248, 85, -657,
	194, 2, -299, -635, 194, -631, 469, 485, 575, -630,
	-330, 127, -330, 127, -330, 127, -330, -330, 2, 2,
	2, 2, 2, 90, 2, -143, -478, 2, 90, 2,
	49, 519, -653, 194, 2, 564, 2, 564, 2, -299,
	-299, -299, 369, 524, 293, 613, -330, -330, -330, -331,
	-336, -336, 486, 546, 576, 483, -478, 2, -694, 2,
	201, 194, 2, 545, 248, 545, 248, 127, 201, 79,
	127, 29, 201, 545, 480, 654, 4, -277, 657, -303,
	-256, -424, -558, -425, -424, -257, -256, -259, 194, 429,
	585, 340, 504, 277, -455, -454, 29, -478, -459, 188,
	339, -478, -457, -480, 642, 643, -550, -552, -407, 367,
	-250, -250, -250, -395, -505, -478, 417, 248, -557, -682,
	-531, -529, -529, -328, -559, 557, -478, -478, -478, -478,
	-478, -478, -478, -478, -478, -478, -478, -478, -478, -478,
	-478, -478, -478, -478, -478, -478, -478, -478, -478, -478,
	-478, -478, -478, -478, -478, -478, -478, -478, -478, -478,
	-478, -478, 294, 235, 506, 54, 239, -478, 561, -478,
	-478, -478, -478, 332, 356, 363, 572, 179, 582, 147,
	367, -708, 539, 42, -485, -251, -412, 652, -499, 36,
	517, 29, -492, 652, 2, -473, -478, -474, -359, -357,
	-299, 642, 643, 644, 645, 646, 647, 632, 633, 634,
	14, 15, 16, 637, 641, 639, 640, 192, 101, 636,
	309, 476, 92, 182, 183, 184, 185, 275, 276, 17,
	18, 19, 35, 635, -409, -408, -408, 653, 600, 29,
	147, 644, 2, 653, 657, 39, 653, -478, -409, -491,
	-487, -408, -498, -497, 610, -445, -446, 618, 318, 130,
	229, 316, -447, 489, -553, 8, -559, 644, -612, 187,
	220, 652, 653, 2, 653, 2, 653, -478, 2, 653,
	-478, 2, 653, -478, 2, 653, -478, 2, 653, 2,
	653, 2, -478, -478, -478, -478, -478, -478, -478, -408,
	8, -553, -553, 557, 557, -553, -553, -553, -545, 404,
	405, 406, 407, 296, 297, 298, 299, 408, 409, 410,
	411, 324, 325, 326, 327, 320, 321, 322, 323, 328,
	329, 330, 331, 211, 212, 213, 214, 207, 208, 209,
	210, -545, -439, 2, -547, -408, 4, 618, 318, 130,
	229, 316, 489, 5, -439, 2, -440, 2, -478, -408,
	-441, -479, -480, 642, 643, 635, -358, -442, 2, -478,
	-409, -478, 61, 287, 563, -443, -478, 201, -408, -408,
	2, -408, 2, -481, 2, -609, 39, -408, -401, 657,
	201, 39, -576, 4, -575, 44, 66, 107, 136, 175,
	237, 255, 265, 290, 391, 463, 464, 490, 521, 536,
	568, 608, 500, -401, -401, 652, 653, 657, -438, 224,
	312, 307, 264, -438, -509, -437, 272, -435, 384, -435,
	-435, -503, -314, 650, 659, -559, -503, -502, -501, 39,
	-323, 381, -503, -503, 654, 653, -502, 651, -624, 652,
	655, 655, 655, 655, 655, -330, 652, -408, -559, 654,
	526, 2, 653, 266, 266, 266, 266, 266, 374, 475,
	653, 561, -632, -339, -345, 493, 546, -405, 657, -405,
	-398, 613, -566, -113, 376, 653, 657, -400, 38, 650,
	654, -553, 2, 2, -548, 602, 652, 652, -446, 652,
	201, -632, -345, 546, 493, 2, -636, -399, -566, 561,
	-299, 2, -330, -406, -277, 163, -406, -406, -277, 657,
	163, -313, -334, -339, -342, -345, -299, -564, -566, -277,
	-335, -682, 653, 565, -465, -360, 429, 516, 452, 494,
	541, 9, 9, 657, -559, -221, 484, 340, -312, -312,
	-312, -312, 657, -683, 99, 561, 83, 652, 485, -292,
	302, 561, -469, 231, 83, -583, 99, -316, -584, -299,
	77, 581, 417, 198, 161, -683, 99, 417, -683, 99,
	2, 250, 99, 499, 524, 652, 29, 64, -514, 43,
	43, 29, -641, -642, 288, 201, 619, 545, 248, 485,
	561, 561, -514, -432, -529, 125, 313, 314, 64, -554,
	-554, 64, -554, -554, -554, 613, -554, 613, -333, -514,
	485, 561, 561, 561, 439, 535, 439, 535, -285, -157,
	535, 561, 561, -157, 29, -203, 460, 134, -706, 634,
	439, 288, -642, 561, 201, 657, 43, 43, 29, -641,
	201, 561, -355, -314, 596, 45, 596, 45, 596, 561,
	45, 485, 561, 657, 45, -268, -626, -626, -228, -227,
	-299, 5, -398, -271, -568, -270, 338, 79, 561, 561,
	-16, 499, -638, -304, 112, 346, 306, 347, 103, 343,
	102, 342, 110, 344, 111, 345, 603, 359, 604, 360,
	68, 341, 317, 348, 520, 349, 605, 361, -305, -306,
	154, 396, 594, 127, -564, -16, -16, 499, 389, 451,
	163, -658, 239, 29, -647, 239, -522, 239, -522, -347,
	-299, 654, -143, -478, -478, -143, -478, -143, 49, 163,
	39, 163, 2, 652, 281, 652, -364, 356, 201, -398,
	-523, 657, -330, 39, -228, 378, 163, -564, -431, -430,
	356, -335, 231, 2, 163, -702, -388, 356, 157, 652,
	427, 2, 163, -315, 231, -300, -299, -450, -279, 549,
	163, -428, 592, -460, -143, 652, 134, 39, -460, -417,
	-418, -520, -419, -316, 652, -323, -475, -114, -525, 653,
	653, 653, -242, -389, -317, -316, 126, 431, 431, -235,
	613, -139, -140, 653, 657, -522, 239, 527, -140, -568,
	-229, -229, -522, -522, -330, 194, -568, -139, -229, -229,
	-229, 2, 2, 2, 2, -434, -330, -313, -355, -330,
	-341, 239, 29, 654, -566, -566, -345, -346, -344, -299,
	-339, -434, -313, -434, -313, -434, -313, -434, -434, -143,
	-478, 524, 2, 496, 194, 194, 654, -434, 8, -391,
	462, 5, 2, 427, 127, 545, 394, 248, -330, -355,
	-330, -355, -313, 127, -313, 128, 127, -330, 4, -514,
	-425, -257, 375, 277, 504, -457, -458, -480, 474, 475,
	-458, 474, 475, 8, 9, 8, 9, -261, 508, 362,
	-406, 657, -266, 40, 143, 277, -330, -557, 619, 159,
	-478, -478, 561, -708, 539, -485, 159, -478, 332, 363,
	572, 179, 582, 147, 367, 201, 652, -479, -479, 653,
	-410, -478, -478, 651, 661, 653, 654, 653, -394, 657,
	-392, -478, -408, -408, 653, 654, -408, -398, 651, 651,
	657, 653, -496, -497, 152, -478, 561, 561, 561, 561,
	652, 653, 654, -617, 385, 652, 652, -478, 653, 653,
	653, 653, 39, 657, 657, 657, 653, 657, 657, 657,
	653, 653, 653, 657, 653, 619, 619, 653, 653, 653,
	653, 657, 653, 657, 653, 201, 653, 653, -448, 401,
	653, 11, 12, 642, 643, 644, 645, 192, 646, 647,
	640, 641, 639, 632, 633, 634, 92, 309, 476, 14,
	15, 16, -358, 266, 239, -479, -479, -479, -479, 653,
	-483, -484, 201, 194, 39, -443, -443, -443, 653, 201,
	-408, 653, 653, 652, -610, 311, 356, 653, -472, -471,
	611, -519, -402, 2, -509, -325, -559, -472, -472, -408,
	-478, 272, 272, -436, 592, 374, -438, -509, -502, -555,
	-477, -476, 196, 40, 143, 350, 351, 352, 234, 197,
	-502, -323, -388, -502, -502, -559, -503, -503, -501, 653,
	-625, -555, 653, -403, -512, -604, -394, 654, -559, -239,
	-605, -204, 5, 363, -204, -204, -204, -204, -330, -566,
	561, 561, 239, 239, -405, 26, -656, 613, 402, -529,
	650, 651, 8, -559, 652, -553, -553, -553, -566, 201,
	201, 239, 239, 374, 201, -564, 2, -277, -406, -277,
	-277, -355, -356, -277, -277, -277, -429, 613, -556, -464,
	579, 88, 429, 557, -556, 124, 484, -273, 451, 499,
	-316, -316, -330, -246, -245, -243, -299, 5, -340, -299,
	215, 440, -564, 356, -469, 231, -278, 356, 231, -324,
	-529, 652, -452, 615, 277, 277, 592, -316, -324, 277,
	231, -316, 231, -324, 2, -324, -639, 429, 368, -478,
	-244, -243, 64, -371, 300, 427, 357, -274, 451, 499,
	389, -143, -143, -143, 652, -682, 592, 146, -330, -355,
	-330, -340, -564, -335, 499, 389, 451, 353, -349, -554,
	-554, -554, -430, 499, 389, 451, -340, -564, -333, -564,
	-284, 231, -299, 439, -284, 231, 439, 439, 485, -313,
	439, 619, 48, -706, 561, 201, -478, -478, -275, -143,
	-143, -143, 652, -314, -276, 451, 5, 231, -316, 5,
	-316, 231, 5, -299, -316, -340, -564, -686, 25, 151,
	-316, -229, 657, 634, 634, -272, 634, -340, -564, -304,
	396, -650, 363, 5, 10, 588, -313, -637, -320, 485,
	561, 561, -514, -654, -655, 217, 467, 485, 470, -566,
	-139, -232, 613, -139, -226, 243, 644, -629, -568, -568,
	-299, -665, -666, -667, -668, -675, -663, -670, 239, 383,
	254, 600, -560, -529, 4, -571, -299, -362, -365, -363,
	-316, -470, -469, -587, -588, -583, 294, 248, 581, 264,
	180, 99, -247, -248, 615, 613, 163, -353, -330, 650,
	-229, -627, -524, 180, 491, 652, -342, -343, 163, -388,
	356, -564, 601, 39, 163, 652, 2, 2, -334, 374,
	356, -315, 231, -280, 153, -706, -313, -472, -402, -427,
	-462, 462, 374, -389, 597, -323, -427, -404, 657, 201,
	634, 654, -389, -518, 644, -114, -114, -229, 652, -568,
	653, 657, 654, 652, 634, 634, -237, 378, -236, 155,
	279, 263, 510, 511, 512, 513, 145, 509, 131, 337,
	244, 551, -522, -568, -235, -140, 201, -522, 239, 201,
	-72, 613, 545, 239, -229, 656, 485, 470, -299, 654,
	-434, -434, -434, 496, 496, -299, 194, -398, -326, -559,
	-313, -330, -327, -355, 194, 194, -313, -313, 585, -458,
	375, 305, -505, -267, 621, -330, 656, -478, -478, 159,
	159, -478, -479, -479, -478, 159, 201, 652, -478, -489,
	34, 34, 653, 657, -474, -478, -357, 653, 600, -394,
	-394, 653, 644, -559, 656, 653, -487, 156, -478, 555,
	318, 229, 316, -447, 316, -447, -447, -553, 5, -559,
	644, -618, -319, 652, -299, 611, -393, 380, 653, -531,
	-529, -478, -478, -478, -478, -478, -553, -534, -534, -549,
	-549, -478, -483, -478, -531, -529, -479, -479, -479, -479,
	-479, -479, -479, -479, -479, -479, -479, -479, -479, -479,
	-479, -479, -479, -479, -479, -479, 147, 356, 367, -479,
	-484, -483, -478, -478, -529, 653, 653, 653, -408, -113,
	652, 311, -421, 220, -478, -522, 657, -421, -421, 653,
	-509, -509, 652, -478, 272, 651, 657, 660, 634, 634,
	-388, 654, -501, -502, 651, 653, 657, 653, 657, -461,
	39, 653, -559, -472, -241, -240, 144, 57, 114, 142,
	363, 371, 200, 225, 426, 159, 195, 153, 266, -656,
	-566, -566, 485, 485, 377, 217, 5, 8, 650, 651,
	654, -553, 653, 653, 653, -566, -566, 485, 485, -630,
	575, 485, 29, -566, -277, -277, 126, 340, -478, -218,
	613, 615, 561, 561, 653, 657, 634, 64, 239, 163,
	356, 594, 356, -584, 161, -589, -478, 652, 248, 652,
	652, 2, -263, -264, -265, 151, 499, 25, -684, 2,
	592, 163, -277, 163, -277, 617, 653, 657, -371, 652,
	652, 561, 485, -292, 561, 613, -408, -478, -230, 134,
	-558, -643, 656, -643, 656, 485, 561, 561, 485, 561,
	561, 356, -299, 163, -299, -299, 613, 178, 178, 619,
	-284, -478, -478, 194, 561, 613, -408, 561, -533, 52,
	27, 356, -334, -277, 163, 561, 561, 575, 499, -227,
	-568, -568, -139, -650, -568, 363, -16, -340, -564, -335,
	499, 389, 451, -636, -636, 217, -345, -658, -522, -234,
	378, -233, 155, 466, 145, 279, 244, -522, -232, 201,
	262, 613, 653, 657, 134, 634, -663, -670, -675, -670,
	383, 2, 653, 653, 657, 657, -590, -278, -330, -315,
	248, 248, -322, -300, 39, 371, 371, 652, -330, -94,
	613, -521, -555, -321, -299, -416, -228, 46, -333, 39,
	163, -637, -335, -143, -335, -527, -528, 5, 39, -330,
	163, 374, 356, -281, 286, -706, -563, -605, -394, -427,
	-416, 357, 97, 653, -472, -418, -402, -478, 2, 653,
	-568, -229, -242, -317, 2, -569, -568, -568, 657, 652,
	634, 634, 634, 634, 634, 634, 634, -235, -522, -139,
	-235, -140, -143, 378, -330, -139, 644, -340, -341, 644,
	-434, 5, -377, -376, 394, 367, -377, 474, 474, 375,
	188, 282, -266, -314, -478, -478, 159, 34, 34, -478,
	-478, -489, 653, -478, -478, -408, 651, 5, -478, 653,
	653, 8, -478, 653, 654, -619, -299, -478, 653, 64,
	653, 653, 657, 657, 653, 653, 653, 653, 653, 653,
	653, -484, 201, 147, 367, 652, 653, 653, -113, -486,
	223, 64, -509, -486, -486, -436, -398, -509, -476, -314,
	650, -314, 650, -559, -555, -512, 652, 654, -240, 634,
	-568, -568, 2, 2, 5, 5, 426, 356, 363, 5,
	-204, -656, -656, 613, -345, -345, 377, 651, 2, 650,
	-559, 653, -345, -345, 201, -632, -345, 546, 126, 194,
	228, 228, -316, -316, -245, -556, 545, 474, -284, 417,
	-469, 163, 163, -591, 99, -593, 81, 180, 109, 356,
	363, 581, 417, 77, 134, 374, 436, -696, -697, -698,
	39, 624, 625, 653, -396, -506, -604, 652, -299, -396,
	-398, 356, 532, 134, 374, 356, 134, 374, 607, 126,
	2, 575, 84, -316, -324, -243, -398, -398, -330, -340,
	-564, 171, 653, 657, 634, 2, 644, 644, -340, -564,
	-335, -340, -564, -333, 163, 597, -284, 597, 392, 178,
	561, -143, -478, 171, 653, -314, 5, 5, 163, -311,
	81, -316, 5, -316, -334, 126, 613, 485, 561, 561,
	374, 374, 377, -654, -655, -232, 657, 652, 634, 634,
	634, -232, -569, -139, 2, 464, -667, -478, -478, -670,
	-670, -378, 250, -316, -588, -585, -586, 417, -470, -592,
	-594, 180, 417, -366, 652, -315, -300, 652, -143, 2,
	-246, 652, -364, 378, 651, 201, 653, -564, -431, -143,
	-335, -388, -386, 613, -388, 653, 657, 157, -453, 592,
	-314, -330, 163, -282, 285, -706, -563, -279, -456, -454,
	148, 652, 374, -143, -394, 634, 653, 126, 653, -236,
	-237, -568, -139, -568, -568, -568, -139, -568, -235, -660,
	39, -522, -73, -74, 248, 99, 399, -229, -327, 545,
	248, 652, 652, -266, -478, -478, -478, 653, -394, -559,
	644, -613, 394, 653, -505, -478, -478, -479, 201, 652,
	-489, 653, -614, 612, -478, -422, -423, -478, 472, 115,
	221, -614, -614, 653, -555, -555, 2, -568, 2, 2,
	363, 2, 2, 2, 561, 561, 650, 2, 201, 201,
	-566, 201, 201, 239, -143, 239, 39, 439, -469, -324,
	-324, -328, -321, 180, 231, 363, 607, -452, 277, 652,
	-479, 585, -330, 652, 2, 230, 230, 31, 64, -699,
	139, 252, 653, 657, -507, -310, -299, -478, -507, 653,
	653, 363, 585, 363, 607, -478, 585, -529, 652, -277,
	-277, 653, 653, -478, 561, -558, 106, -556, 2, -643,
	-284, -398, -398, -313, -478, 194, -478, 561, 5, -277,
	-328, -277, -277, -311, 575, 373, -340, -564, -335, -659,
	546, 493, 576, 486, 204, 473, -659, 194, -233, -234,
	-568, -139, -139, -232, -662, 500, -372, -373, 2, -590,
	277, -321, 277, 241, 162, -396, 652, 652, -398, -695,
	613, 653, -362, -247, -95, -96, 562, -521, -633, -352,
	-388, 39, 340, 126, 39, 5, 652, 652, -299, 374,
	652, -314, -294, 98, -706, -563, -280, -427, 357, -398,
	99, -456, -485, -229, 652, -229, 653, 551, -235, 657,
	29, 652, 29, 652, -330, -355, -408, -408, 653, -394,
	64, 657, 653, 653, -479, -489, 653, -615, -616, -319,
	657, 652, 652, 501, 651, 651, 2, -566, -566, 2,
	-566, -566, -566, -566, 485, -284, 417, -299, -584, -593,
	-321, 356, -248, 592, 613, -478, -479, -301, 652, -478,
	652, 652, 39, 134, 252, 140, 236, -468, -700, 108,
	533, 240, -506, -266, 653, -467, 592, 436, -479, -311,
	-396, 652, 652, 652, 634, 201, -143, 652, -533, -277,
	-334, 634, 561, 2, 2, 201, -636, 653, -649, 434,
	-669, -670, -247, 652, -248, -367, 86, 100, 135, 230,
	205, 249, 524, 530, 29, -367, 653, -396, -396, 653,
	-368, 374, 126, 340, 653, 39, -96, 9, -472, 39,
	-143, 126, -143, -527, -396, -330, -396, 374, -286, -285,
	295, -563, -281, 653, -324, -427, -569, -555, 4, -74,
	-398, -398, 653, 653, -620, 427, 475, 222, -408, -395,
	653, 657, 39, -423, 2, 2, 2, -656, -656, -345,
	439, -278, 163, 224, 653, -595, 310, -299, 653, -431,
	-431, 39, 140, 236, -374, -370, 652, -267, -507, -248,
	224, -330, -644, 592, 653, -380, -379, -376, -382, -381,
	-376, -408, -556, 106, 392, -408, -311, -139, -566, -566,
	374, -651, 202, -650, -671, -672, -673, 39, 281, 568,
	612, -674, 66, 464, 528, 237, 521, 608, 175, 490,
	290, 356, 107, 475, 536, 499, 391, -368, -397, -508,
	-316, -467, 653, 653, 87, 126, -378, -143, -143, 2,
	-386, 653, 653, -453, 653, -330, -283, -570, 439, 441,
	-706, -282, -472, 148, 653, 653, 653, 653, -621, -622,
	54, 578, 116, -478, -621, -621, -616, -618, 201, 180,
	-466, 622, -596, -599, -598, 629, 507, 202, 393, 653,
	532, 606, 653, 653, -699, -398, -466, -388, -478, -467,
	653, 657, 597, 653, 657, 597, 653, 201, 653, -277,
	-656, -277, -659, -231, 613, 49, -680, -677, 53, 463,
	-673, -664, 5, -563, 374, 363, 490, 136, 265, 290,
	-500, -500, -299, -293, -292, 653, 657, -468, -467, -374,
	416, 141, 151, -372, -695, -467, 652, -468, 652, -291,
	-290, -706, -549, -294, 148, 357, 585, -229, -623, 161,
	-622, 413, 193, 474, 413, 193, -623, -623, -566, -321,
	-248, 59, -598, 629, -599, 629, 585, 141, -472, 653,
	-595, -248, -379, 239, -381, 201, 392, 201, 482, -650,
	31, 44, -478, 363, 374, 136, 265, -248, -508, -374,
	-468, -248, 475, 475, 2, -247, -368, -468, -396, -374,
	-396, -287, -288, -289, -398, -286, 357, 585, 499, 116,
	220, 556, 340, 34, 634, -597, 340, 459, 69, 499,
	-597, -596, 652, 652, -566, 378, -679, 255, 363, -248,
	-374, -472, 2, -368, -374, 653, -248, 653, -565, 389,
	-283, 499, -417, 474, 382, -622, -478, 24, 363, 134,
	-699, -408, -408, -277, -228, 652, -678, 156, -3, -677,
	255, -472, -248, -293, -248, -467, -472, -468, -706, -291,
	-417, -472, 653, 653, -228, 658, -472, -472, -468, -374,
	-564, -287, -472, -369, -370, 561, 653, -374, -248, 652,
	-248, -472, -408, -472, 653, -369,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1660, 1662,
	658, 659, 661, 662, 663, 665, 666, 668, 670, 672,
	673, 674, 676, 677, 679, 680, 681, 682, 683, 685,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 777, 779, 0, 1642,
	1644, 1646, 1648, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 380, 382, 384, 386,
	0, 418, 420, 421, 423, 425, 426, 428, 430, -2,
	0, 591, 592, 594, 596, -2, 0, 1221, 1223, 1225,
	0, 765, 767, 0, 1228, 1230, 1232, 0, 0, 789,
	790, 0, 1760, -2, 781, 783, 785, 787, 866, 868,
	870, 872, 874, 876, 878, 880, 882, 884, 885, 887,
	889, 891, 893, 895, 896, 898, 900, 902, 903, 905,
	906, 908, 910, 912, 914, 916, 918, 920, 922, 924,
	926, 928, 930, 932, 934, -2, 937, 938, 939, 941,
	-2, 0, -2, -2, 1656, 51, 53, 55, 57, 59,
	61, 63, 65, 67, 69, 71, 73, 537, 539, 541,
	543, 545, 548, 550, 552, 554, 1818, 598, 600, 602,
	604, 606, 608, 610, 0, 0, -2, 1832, 0, 0,
	0, 1030, 75, 76, 77, 78, 79, 80, 81, 82,
	83, 84, 129, 130, 131, 132, 133, 134, 135, 88,
	89, 90, 92, 93, 94, 95, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 126,
	127, 86, 0, 0, 1791, 1793, 1795, 1797, -2, 0,
	0, 8, 12, 14, 16, 18, 20, 22, 24, 26,
	28, 30, 32, 36, 38, 40, 42, 1661, 1663, 660,
	664, 667, 669, 671, 675, 678, 684, 686, 688, 643,
	644, 647, 2534, 2552, 2553, 2554, 2557, 2558, 2559, 2560,
	2561, 2562, 3086, 3167, 3168, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759,
	2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849,
	2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859,
	2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869,
	2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879,
	2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889,
	2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899,
	2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909,
	2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919,
	2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929,
	2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939,
	2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949,
	2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959,
	2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969,
	2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979,
	2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989,
	2990, 2991, 2992, 2993, 3012, 3013, 3014, 3015, 3016, 3017,
	3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027,
	3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037,
	3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047,
	3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057,
	3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 645, 646,
	1415, 0, 727, 725, 2517, 728, 2842, 730, 732, 585,
	586, 587, 588, 589, 590, 0, 758, 2945, 742, 1830,
	759, 761, 762, 763, 764, 722, 720, 0, 763, 758,
	2590, 2945, 756, 1640, 1641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 516, 1478, 1479, 1480,
	1625, 1626, 2897, 1671, 0, 261, 778, -2, -2, 3050,
	-2, 820, 821, -2, -2, 835, 839, 830, 3055, 0,
	2900, 2883, -2, 842, 1643, 1645, 1647, 942, 943, 944,
	2538, 948, 946, 958, 959, 962, 0, 979, -2, 0,
	2586, 2865, -2, -2, 980, 981, -2, -2, -2, -2,
	960, 961, 0, 0, 0, 0, 0, 1673, 1665, 1668,
	1666, 1667, 46, 48, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, -2,
	-2, -2, -2, 0, 0, 2951, 2648, 2485, 2554, 2488,
	2483, 381, 383, 385, 387, 388, 0, 0, 0, 0,
	0, 0, 0, 419, 422, 424, 427, 429, -2, 0,
	431, 0, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 1287, 1288, 1545, 0, 0, 0, -2, 593,
	595, 648, 649, 0, 1819, 1819, 656, 657, -2, 0,
	0, 0, 0, 342, 332, 1222, 1224, 1226, 1227, 0,
	0, 0, 0, 0, 766, 768, 0, 0, 2945, 306,
	1229, 1231, 1233, 1234, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 782, 784, 786, 788, 867, 869, 871,
	873, 875, 877, 879, 881, 883, 886, 888, 890, 892,
	894, 897, 899, 901, 904, 907, 909, 911, 913, 915,
	917, 919, 921, 923, 925, 927, 929, 931, 933, 935,
	936, 987, 0, 0, 0, 0, -2, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 1099, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 0, 1192,
	0, 0, 990, 993, 994, 995, 996, 997, 998, 999,
	0, 1072, 1097, 1098, 1108, 940, 0, 1458, 1820, 1673,
	1650, 1651, 1652, 1657, 1659, 1653, 1654, 1655, 52, 54,
	56, 58, 60, 62, 64, 66, 68, 70, 72, 74,
	538, 540, 542, 544, 546, 549, 551, 553, -2, 1789,
	1790, 599, 601, 603, 605, 607, 609, 611, 769, 0,
	772, 0, 992, 771, -2, 0, 1824, 1824, 1824, 0,
	0, 1790, 1788, 0, 0, 0, 775, 776, 846, 847,
	2097, 0, 0, 0, 0, 0, 0, 0, 0, 2357,
	2185, 0, 848, -2, 2218, 2220, 3024, 2814, 3050, 2356,
	2222, 2223, 2224, 2225, 2226, 0, 2228, 2229, 2230, 2231,
	2232, 2233, 0, 2235, 0, 2240, 2241, 2242, 0, 3031,
	2460, 2548, -2, 0, 0, 3038, 2544, 0, 2323, 2258,
	-2, -2, 2571, 2550, 2029, 2030, 2031, 2032, 2033, -2,
	-2, 3069, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 0, 3012, 3032, 3033, 3039, 3041, 3034,
	3021, 2283, 2663, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2056, 2065, -2, -2,
	-2, -2, -2, -2, -2, 3025, 3026, 3044, 3047, 3054,
	3059, 3060, 3030, 3040, 3068, 3070, 3071, 3072, 3073, 3074,
	3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084,
	3085, 2057, -2, -2, -2, -2, 0, 1807, 2858, 1810,
	1415, 1808, 1792, 1794, 0, 1796, 0, 0, 0, 1801,
	1827, 1825, 0, 1876, 1805, 1806, 1899, 1899, 1923, 0,
	1904, 0, 1923, 1819, 1950, 0, 1910, 2888, 2259, 2260,
	0, 2554, 2549, -2, -2, 3066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 729,
	731, 0, 0, 0, 0, 758, 757, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 521,
	522, 523, 3032, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 534, 535, 536, 231, 3032, 616, 641, 0,
	231, 3032, 619, 231, 3032, 622, 0, 625, 1543, 231,
	3032, 628, 2513, 231, 3032, 631, 633, 2521, 231, 3032,
	637, 2528, 2526, 638, 0, 640, 251, 247, 248, 249,
	250, 1636, 1637, 1638, 1639, 0, 1670, 1544, 780, 0,
	806, 0, 818, 819, 3020, -2, 0, 2910, 823, 824,
	-2, 826, 1674, 1678, 1679, 1680, 1681, 1682, 0, 0,
	0, 0, 1687, 0, 0, 0, 0, 813, 814, 833,
	834, 840, 843, 0, 951, 947, 963, 0, 978, 0,
	979, 979, 2502, 2493, 2494, 0, 0, 979, 979, 0,
	0, 982, 983, 984, 985, 986, 1664, -2, 85, 0,
	3032, 1950, 87, 0, 2507, 2580, 2581, 2582, 2583, 2584,
	3067, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095,
	3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105,
	3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115,
	3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125,
	3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135,
	3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145,
	3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155,
	3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165,
	3166, 3069, 91, 0, 3032, 96, 0, 3032, 0, -2,
	112, 0, 128, 0, 155, -2, -2, -2, 136, 0,
	3032, 0, 2482, -2, 0, 243, 333, 334, 335, 0,
	704, 0, 713, 345, 346, 2567, 2568, 2576, 2577, 2578,
	2579, 0, 809, 2357, 0, 0, 1259, -2, 0, 1471,
	1473, 1473, 0, -2, 0, 0, 0, 1210, 2479, 2484,
	1211, 1212, 2503, 1213, 2489, 0, 389, 390, 391, 392,
	393, 0, 394, 3032, 396, 397, 0, 399, 400, 3032,
	402, 403, 0, 405, 0, 407, 0, 283, 289, 287,
	3032, 0, 3032, 433, 436, 0, 517, 0, 514, 0,
	498, 499, 0, 501, 0, 0, 0, 506, 507, 509,
	510, 511, 512, 513, 0, 558, 556, 2518, 576, 359,
	0, -2, 3032, 0, 1256, 0, 0, 1523, -2, 0,
	1464, -2, 0, 1530, 3032, 1526, 0, -2, 0, 1817,
	3032, 1691, 1291, 1292, 1293, 1294, 1962, 582, 0, 1724,
	0, 1726, 0, 1746, 1956, 1899, 0, 0, 1961, 0,
	-2, 701, 2537, -2, 651, 0, 652, 0, -2, 0,
	359, 0, 0, 1237, 1239, 1240, 1242, 1243, 1246, 1247,
	1248, 1249, 0, 1251, 1936, 307, 309, 0, 0, 0,
	0, 1236, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 0, 576, 791, 0, 0, 988, 989, 0, 0,
	1007, 1008, 1009, 0, 0, 359, -2, -2, -2, 1017,
	0, 1024, 1027, -2, 0, 0, 0, 0, 1034, 0,
	1039, 1040, 1041, 0, -2, 0, 1048, 1050, 1220, 1052,
	0, 0, 1054, 0, 1058, 0, 1061, 0, 1063, 0,
	1065, -2, -2, -2, 1073, 1074, -2, 1079, -2, 0,
	1083, -2, 0, 1086, 0, 1089, -2, 0, 1099, 1095,
	1096, 0, 0, 0, 0, 1116, 1117, 0, 1126, 0,
	1129, 1130, 1131, 0, 0, 1136, 1137, 0, 1139, 1140,
	1141, 1143, 1144, 1145, 0, 2982, 2907, 2648, 2695, 0,
	1154, -2, 1160, 1162, 0, -2, 0, 1178, 0, 1182,
	0, 0, 1191, 0, 0, 0, 991, 0, 1000, 1001,
	1002, 231, 1954, 1649, 0, -2, 0, 770, 0, 774,
	1849, 1775, 1772, 0, 1846, 1847, 1776, 0, 0, 0,
	1783, 0, 1822, 1823, 0, 0, 0, 1762, 1763, 0,
	0, 0, 0, 0, 0, 2362, 2363, 2364, 2365, 2378,
	2366, 2367, 2377, 2375, 2376, 2368, 2369, 2374, 2388, 2389,
	2379, 2380, 2370, 2383, 2381, 2382, 2384, 2385, 2386, 2387,
	0, 0, 2393, 0, 2371, 2372, 2373, 2401, 0, 0,
	2402, 0, 2404, 0, 2394, 2390, 2391, 2392, 0, 2164,
	2166, 2468, 0, 0, 0, 2400, 2395, 2396, 2102, 2103,
	2104, 2105, 2106, 2139, 2143, 2144, 0, 0, 2219, 2465,
	2464, 2221, 0, 0, 2416, 0, 2234, -2, 0, 2357,
	2411, 0, 0, 2243, 2244, 2245, 0, 0, 2416, 0,
	0, 2459, 2255, 2256, 2094, 0, 0, 2325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 2042, 0, 2044,
	0, 2045, 2046, 2053, 2066, 0, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 0, 2440, -2, 0,
	0, 0, 0, 2058, 0, 0, 1809, 0, 0, 1880,
	2469, 2473, 2474, 1880, 1880, 0, 0, 2417, 1947, 1947,
	0, 0, 1942, 1942, 1942, 1940, 1923, 0, 1923, 1933,
	0, 1923, 1923, 0, -2, 1904, 0, 0, 1933, 0,
	1917, 689, 691, 693, 695, 696, 697, 699, 1951, 1952,
	0, 0, 0, 0, 2555, 0, 0, 0, 0, 0,
	0, 2540, 0, 0, 2512, 414, 415, 0, 0, 0,
	2964, 2900, 0, -2, -2, -2, -2, 2907, 0, 0,
	2648, 734, 760, 0, 1819, 0, 2419, 1977, 1981, 0,
	1983, 1984, 1985, 1986, 1987, 0, 0, 1978, -2, 2054,
	2056, 2077, 2572, 2573, 2574, 2037, 2038, 2039, 2040, 2041,
	2049, 2036, 2036, 2036, 2047, 2076, 2068, 2076, 2072, 2022,
	2023, 2024, 2059, 2060, 2061, 2062, 0, 2964, 2900, 0,
	-2, 0, 745, 0, 0, 0, 1757, 518, 0, 525,
	526, 527, 0, 612, 0, 229, 230, 0, 231, 3032,
	617, 0, 620, 0, 231, 3032, 2477, 626, 0, 629,
	0, 0, 635, 0, 0, 0, 0, 0, 231, 1759,
	0, 0, 0, 0, -2, 828, 836, 837, 838, 0,
	1676, 0, 1683, 857, 858, 859, 1685, 1686, 0, 1688,
	831, 860, 861, 862, 863, 864, 865, 0, 2491, 2492,
	2497, 2498, 0, 0, 829, 850, 832, 0, 844, 954,
	949, 950, 964, 965, 0, 0, 2495, 2496, 0, 0,
	970, 971, 137, 1622, 0, 0, 184, 0, 1622, 1622,
	0, 0, 0, 0, 212, 0, 0, 1325, 0, 0,
	0, 0, 155, 169, 180, 149, 150, 151, 0, 0,
	0, 0, 0, 0, 97, 1437, 0, 1440, 0, 0,
	0, 0, 0, 0, 0, 1453, 1456, 0, 0, 0,
	0, 0, 114, 115, 0, 0, 120, 121, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 1721, 0, 159,
	155, 0, 0, 154, 156, 139, 0, 0, 155, 170,
	182, 0, 218, 220, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 253, 0, 703, 705, 576, 576,
	0, 0, 711, 0, 714, 0, 807, 811, 812, 0,
	0, 808, 810, 0, 0, 1465, 0, 0, 0, 1816,
	0, 0, 0, 0, 3032, 1620, 0, 1603, 0, 1936,
	2742, -2, -2, 307, 1936, 1209, 0, 0, 2555, 2487,
	0, 0, 0, 0, 0, 0, 406, 0, 0, 0,
	298, 0, 0, 0, 442, 0, 508, 497, 500, 502,
	503, 504, 547, 1384, 3032, 0, 0, 580, 571, 0,
	575, 0, 0, 579, 0, 0, 1436, 3032, 1434, 2522,
	0, 1462, 0, 1522, 1415, 3032, 2520, 0, 0, 0,
	1531, 2564, 1540, 1544, 1709, 0, 584, 0, 1727, 1729,
	0, 0, 1957, 0, 1959, 1899, 1819, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 1250, 316, 0,
	1935, 0, 0, 347, 1936, 307, 2871, 0, 1235, 359,
	359, 1936, 793, 1936, 795, 0, 0, 1010, 0, 0,
	1013, 359, 359, 359, 1022, 1023, 1025, 1026, -2, -2,
	-2, -2, 1028, 1029, 1123, 0, 0, 0, 1122, 1618,
	0, 1044, 1047, 1051, 0, 1195, 2883, 2900, 2964, 1218,
	1123, 2648, 1123, 2648, 1123, 2648, 1123, 1123, 1067, 1111,
	1119, 1078, 1085, 0, 1080, 1084, 1087, 1090, 0, 1092,
	1100, 0, -2, 0, 1103, 0, 1105, 0, 1107, 1123,
	1124, 1127, 0, 1135, 1138, 0, 1146, 1147, 1148, 1149,
	2535, 1150, 1151, 1152, 1153, -2, 1157, 1158, 0, 1169,
	1174, 1175, 1171, 0, 0, 0, 0, 0, 0, 1185,
	1186, 0, 0, 0, 1194, 0, 1003, 1457, 0, 1658,
	1849, 1775, 773, 1766, 1848, 1767, 1774, 1777, 0, 0,
	1779, 0, 1781, 0, 1844, 1845, 1852, 1853, 0, 1863,
	1864, 1856, 0, -2, 0, 0, 1859, 1860, 1785, 0,
	1802, 1803, 1804, 1833, 1836, 1559, 0, 3167, 816, 0,
	2098, 1972, 2099, 2100, 2506, 0, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, -2, -2, -2, -2,
	-2, -2, -2, -2, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, -2, -2, -2, 2140, 2141,
	2142, -2, 2403, 2405, 0, 2468, 0, -2, 0, -2,
	-2, -2, -2, 2161, 0, 2163, 2168, 2170, 2172, 0,
	0, 0, 0, 2467, 2182, 2451, 2452, 0, 0, 2359,
	2360, 2361, 2167, 0, 2186, 2466, 2463, 0, 0, 2397,
	0, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 0, 2415, 1832, 2247, 0, 0,
	0, 0, 2254, 2239, 2413, 0, 2412, 0, 0, 0,
	2423, 0, 2458, 2454, 0, 2504, 2093, 2080, 2081, 2082,
	2083, 2084, 2085, 2095, 0, 2501, 2541, 2547, 2333, 0,
	0, 0, 2284, 2285, 2286, 2287, 2288, 0, 2290, 2291,
	0, 2293, 2294, 0, 2296, 2297, 0, 2299, 2300, 2301,
	2302, 2303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 0, 0, 2305, 0, 2426, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2307, 0, 2309, 2417, 2437,
	0, 0, 2187, 0, 0, 0, 0, 0, 2312, 2417,
	2445, 0, 0, 0, 0, 0, 2417, 0, 2450, 0,
	2319, 0, 2321, 1031, 1032, 1811, 0, 0, 1967, 0,
	0, 0, 2472, 2475, 2476, 2994, 2995, 2996, 2997, 2998,
	2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008,
	3009, 3010, 3011, 1967, 1967, 0, 1875, 0, 0, 1943,
	1944, 1945, 1946, 0, 0, 1947, 0, 1937, 1941, 1938,
	1939, 1933, 1896, 0, 0, 2508, 1933, 1902, 1932, 0,
	1415, 1922, 1933, 1933, 0, -2, 1906, 1923, 0, 0,
	690, 692, 694, 698, 700, 0, 0, 1832, -2, 0,
	-2, 361, 1414, 0, 0, 0, 0, 0, 0, 724,
	726, 0, 0, 632, 0, 0, 0, 1201, 0, 1203,
	1204, 0, 1606, 718, 0, 721, 0, 1968, 1971, 0,
	0, 1982, 1988, 1989, 0, -2, 0, 0, 2078, 0,
	0, 0, 0, 0, 0, 755, 0, 0, 754, 0,
	0, 529, 642, 231, 614, 0, 231, 231, 623, 0,
	0, 231, 634, 231, 2529, 231, 2527, 252, 639, 1758,
	264, 0, 815, 0, 1675, 1684, 0, 854, 0, 856,
	0, 2499, 2500, 0, 845, 0, 952, 0, 966, 967,
	968, 969, 0, 0, 0, 0, 1621, 0, 0, 1566,
	0, 0, 188, 3032, 0, 233, 0, 0, 1377, 2514,
	0, 1367, 0, 0, 2671, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 152, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 1438, 1439, 1441, 1448, 1450, 0, 1444,
	1445, 0, 1447, 1449, 1451, 0, 1454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 1474,
	0, 0, 0, 1475, 1476, 1477, 1697, 1698, 0, 1720,
	1721, 0, 0, 0, 0, 0, 0, 0, 148, 0,
	0, 0, 0, 2481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 706, 359, 708, 709, 355,
	352, 354, 710, 715, 0, 716, 0, 0, 0, 0,
	1467, 0, 1518, 1516, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	0, 0, 0, 0, -2, 1469, 1470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 350, 2480,
	2490, 0, 1244, 1245, 395, 398, 401, 404, 270, 0,
	0, 0, 435, 444, 0, 1297, 1269, 0, 0, 557,
	359, 576, 578, 0, 357, 2817, 2533, 1254, 1432, 1435,
	0, 1415, 3032, 1486, 0, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 3032, 2509, 2563, 2564, 1711, 1721,
	0, 1967, 0, 1744, 1730, 0, 0, 0, 1744, 1748,
	1749, 1751, 1752, 0, 0, 1958, 1964, 650, 702, 1819,
	1819, 359, 0, 0, 1733, 1735, 0, 0, 0, 299,
	0, 310, 1936, 308, 0, 316, 0, 0, 1936, 307,
	0, 570, 792, 797, 1005, 0, 0, 359, 1014, 1015,
	1016, 1069, 1113, 1121, 1173, 1033, 1035, 1036, 1037, 0,
	1042, 0, 0, 0, 1219, 1214, 1215, 1216, 2530, 2526,
	1217, 1053, 1123, 1056, 1123, 1059, 1123, 1062, 1064, 1082,
	1088, 1101, 1094, 1102, 0, 0, 0, 1115, 0, 1133,
	0, 1142, 1156, 0, 0, 0, 0, 0, 0, 0,
	1179, 1180, 1181, 1183, 1188, 1187, 0, 1193, 1004, 1955,
	1770, 1771, 1773, 0, 1782, 0, 0, 1858, -2, -2,
	1857, 1861, 1862, -2, -2, -2, -2, 1778, 0, 1787,
	1784, 0, 1843, 1557, 1558, 0, 0, 817, 0, 0,
	-2, -2, 0, 0, 0, 2183, 0, -2, 2162, 2165,
	2169, 2171, 2173, 0, 0, 0, 0, 0, 0, 2406,
	0, 2408, 2184, 2461, 2464, 2399, 0, 2355, 0, 0,
	1831, 1832, 1832, 0, 2253, 0, 2414, 0, 2421, 2422,
	0, 2246, 0, 2455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2257, 0, 0, 0, 0, 2289, 2292,
	2295, 2298, 0, 0, 0, 0, 2278, 0, 0, 0,
	2282, 2048, 2034, 0, 2076, 2074, 2075, 2069, 2076, 2073,
	2026, 0, 2025, 0, 2304, 0, 2306, 2308, 0, 0,
	2310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2190, 2191, 2192, 2212, 2311,
	2443, 2444, 0, 0, 0, 0, 0, 0, 2317, 0,
	2449, 2318, 2320, 1819, 0, 1812, 0, 1877, 1866, 1966,
	0, 2470, 1936, 1879, 1881, 2471, 2511, 1866, 1866, 0,
	2418, 0, 0, 1927, 0, 0, 0, 1929, 1900, 0,
	0, 1894, 0, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1901, 1415, 1931, 1903, 1907, 2541, 0, 1933, 0, 1918,
	0, 1920, 1953, 0, 1912, 1915, 0, 0, 2556, 1967,
	0, 408, 416, 417, 409, 410, 411, 412, 0, 1606,
	0, 0, 0, 0, 1202, 0, 741, 0, 0, 2420,
	0, 1973, 0, 1979, 0, 0, 0, 0, 743, 0,
	0, 0, 0, 0, 0, 1756, 524, 613, 231, 618,
	621, 2478, 231, 627, 630, 636, 260, 0, 805, -2,
	852, 853, 855, 0, 851, 957, 953, 185, 1622, 0,
	0, 0, 1562, 0, 1280, 0, 1275, 1276, 1564, 2525,
	1568, 1574, 1577, 0, 190, 3032, 202, 0, 3032, 0,
	1341, 0, 0, 0, 0, 0, 0, 1624, 0, 0,
	3032, 231, 3032, 231, 206, 208, 211, 0, 217, 213,
	0, 1277, 0, 1329, 0, 0, 1332, 138, 1622, 0,
	0, 141, 145, 157, 0, 0, 0, 167, 0, 0,
	0, 1579, 1583, 1591, 0, 0, 0, 1442, 1443, 1446,
	1452, 1455, 98, 0, 0, 0, 1587, 1589, 1595, 113,
	116, 3032, 2523, 0, 118, 3032, 0, 0, 0, 1561,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 143,
	147, 158, 0, 1597, 140, 0, 246, 0, 0, 236,
	231, 3032, 0, 238, 0, 239, 240, 254, 0, 0,
	0, 707, 0, 0, 0, 712, 0, 1257, 1258, 1517,
	0, 1460, 1461, 284, 285, 0, 1472, 1466, 0, 0,
	0, 0, 0, 1599, 1600, 0, 0, 0, 1620, 1615,
	1936, 266, 0, 1936, 274, 0, 2486, 0, 288, 297,
	432, 0, 443, 445, 447, 0, 0, 454, 455, 456,
	457, 459, 2575, 460, -2, -2, 0, 0, 0, 1296,
	1395, 1298, 1300, 1301, 1302, 233, 0, 2564, 1367, 2730,
	2564, 0, 0, 1264, 0, 0, 0, 563, 559, 0,
	568, 572, 573, 0, 0, 0, -2, 0, 0, 0,
	0, -2, 0, 0, 0, 1533, 1527, 1528, 0, 0,
	0, 0, 3032, 1713, 1721, 0, 1817, 1832, 583, 1722,
	1744, 0, 0, 0, 1732, 1728, 1725, 1967, 0, 0,
	0, 0, 0, 1960, 1963, 653, 654, 336, 0, 359,
	0, 0, 0, 0, 0, 0, 314, 0, 317, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 0, 0,
	0, 0, 316, 348, 301, 1936, 0, 316, 0, 0,
	794, 0, 0, 0, 1012, 0, 0, 1618, 1046, 0,
	1055, 1057, 1060, 1104, 1106, 1123, 0, 1134, 1163, 2510,
	1164, 1319, 0, 1319, 0, 0, 1184, 1190, 1780, 0,
	1855, 1786, 1837, 1838, 0, 1559, 0, 2101, 2146, 0,
	0, -2, 0, 0, 2150, 0, 0, 0, -2, 0,
	0, 0, 2407, 2409, 0, 2463, 2398, 2248, 0, 0,
	0, 2252, 2236, 2237, 0, 2358, 2424, 2453, 2457, 0,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 0, 2505, 2542,
	2546, 2331, 2332, 2336, 2519, 0, 0, 0, 2261, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 2071, 0,
	0, 2425, 2436, 2438, 2188, 2189, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, -2, -2, -2, 2206,
	2207, 2208, -2, -2, -2, 2213, 0, 0, 0, 2439,
	2441, 2442, 2446, 2447, 0, 2314, 2315, 2316, 2448, 0,
	1819, 1813, 1874, 0, 1965, 1878, 0, 1874, 1874, 1826,
	1925, 0, 0, 1949, 0, 1897, 0, 1898, 0, 0,
	1930, 0, 1905, 1908, 1909, 1919, 0, 1911, 0, 1914,
	0, 2248, -2, 360, 362, 364, 0, 367, 368, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 0, 733,
	1606, 1606, 0, 0, 735, 0, 719, 0, 0, 1975,
	0, 0, 2051, 2055, 2079, 747, 749, 0, 0, 0,
	2964, 2900, 0, 746, 615, 624, 262, 0, 1934, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 232, 0, 1376, 0, 1339, 0, 0, 1366, 0,
	0, 1382, 192, 193, 194, 0, 0, 0, 0, 204,
	0, 0, 200, 0, 210, 216, 215, 0, 1326, 0,
	0, 0, 0, 1567, 0, 0, 0, 164, 165, 166,
	0, 171, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 1703, 1704, 0,
	1694, 161, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 1556, 256, 0, 0, 0, 0, 0, 356,
	351, 353, 0, 1459, 1520, 1521, 1468, 1580, 1584, 1592,
	0, 0, 0, 0, 0, 763, 1619, 0, 274, 272,
	0, 275, 0, 278, 279, 0, 0, 274, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 452,
	458, 505, 1267, 1383, 0, 0, 1385, 1303, 1307, 0,
	2564, 2564, 0, 2516, 0, 1265, 0, 0, 1384, 555,
	0, 562, 0, 577, 2515, 0, 0, 0, 1436, 0,
	0, 1463, 1415, 1489, 1415, 0, 1532, 1534, 0, 1542,
	0, 0, 0, 1715, 1721, 0, 1708, 1709, 1851, 1723,
	1742, -2, 0, 0, 1832, 1750, 1747, 1753, 1754, 0,
	0, 339, 0, 1734, 1736, 0, 1238, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 316, 313,
	303, 1936, 343, 0, 1006, 359, 1038, 1617, 1043, 2531,
	1114, 1132, 1165, 1318, 0, 0, 1167, 0, 0, 1854,
	1841, 1842, 1839, 1559, 2148, 2152, 0, 0, 0, 2154,
	-2, 0, 2176, -2, -2, 2410, 2462, 2227, 1832, 2249,
	2251, 2238, 2456, 2096, 0, 2338, 2335, 0, 2322, 0,
	2273, 2274, 0, 0, 2277, 2279, 2280, 2281, 2035, 2028,
	2027, 2435, 0, 0, 0, 0, 2313, 1814, 0, 2327,
	0, 0, 1882, 2327, 2327, 1926, 0, 1928, 1895, 1883,
	0, 1892, 0, 2542, 1921, 1913, 0, 0, 365, 0,
	369, 370, 371, 372, 374, 0, 0, 0, 0, 0,
	413, 736, 737, 0, 0, 0, 1605, 1969, 1974, 0,
	1980, 2050, 0, 0, 0, 0, 0, 0, 263, 0,
	955, 956, 186, 187, 1281, 1279, 1571, 1575, 1572, 0,
	189, 0, 0, 1340, 0, 1343, 0, 0, 0, 0,
	1350, 1367, 0, 0, 0, 0, 0, 0, 1369, 0,
	1368, 0, 0, 1399, 0, 1547, 1554, 0, -2, 0,
	0, 0, 196, 222, 0, 0, 0, 0, 225, 1623,
	198, 0, 0, 231, 231, 1278, 0, 0, 1563, 1565,
	1578, 0, 0, 0, 0, 174, 0, 0, 1581, 1585,
	1593, 1588, 1590, 1596, 0, 0, 119, 0, 0, 1705,
	0, 160, 0, 0, 0, 1598, 244, 245, 0, 231,
	0, 231, 237, 231, 1556, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 1602, 265, 0, 0, 0, 0,
	0, 267, 349, 274, 434, 441, 446, 448, 449, 450,
	451, 1328, 0, 1395, 1387, 1388, 1389, 0, 1299, 1394,
	1396, 0, 0, 1304, 0, 0, 0, 0, 1284, 1266,
	0, 1297, 1269, 0, 560, 0, 358, 1255, 1433, 1481,
	1415, 0, 1484, 0, 0, 1524, 0, 0, 0, 0,
	0, 0, 0, 1717, 1721, 0, 1710, 1711, 1744, 1850,
	0, 0, 0, 1731, 1851, 0, 359, 0, 359, 318,
	0, 319, 320, 321, 328, 329, 330, 331, 302, 305,
	0, 316, 796, 798, 0, 0, 804, 1011, 1317, 0,
	0, 0, 0, 1840, 2156, -2, -2, 2177, 0, 2543,
	2545, 1832, 0, 2324, 1834, 0, 0, -2, 0, 0,
	0, 1815, 1798, 0, 1873, 1865, 1867, 1869, 2886, 2643,
	3031, 1799, 1800, 1948, 0, 0, 1916, 366, 375, 376,
	0, 378, 379, 738, 0, 0, 0, 1976, 0, 0,
	744, 0, 0, 0, 945, 0, 0, 1573, 191, 0,
	0, 1344, 1345, 1347, 0, 1349, 1351, 1352, 1269, 0,
	1356, 0, 2566, 0, 1361, 1364, 1365, 0, 0, 1378,
	1400, 0, 1409, 0, 1549, 1559, 1553, 0, 1551, 1411,
	0, 195, 224, 197, 226, 221, 0, 1556, 0, 199,
	209, 0, 0, 142, 0, 0, 2636, 177, 175, 173,
	117, 123, 125, 1560, 163, 0, 144, 0, 246, 255,
	1555, 257, 241, 231, 0, 0, 1582, 1586, 1594, 0,
	1609, 1610, 1611, 1612, 0, 0, 0, 0, 276, 0,
	277, 280, 281, 0, 0, 440, 1269, 1327, 1268, 1386,
	0, 1397, 1269, 0, 0, 0, 0, 0, 0, 1271,
	0, 1270, 0, 0, 561, 564, 0, 567, 1967, 574,
	0, 0, 0, 1488, 0, 1535, 1533, 0, 1541, 0,
	0, 0, 1693, 0, 0, 1712, 1713, 581, 1737, 0,
	0, 1744, 1755, 338, 0, 341, 315, 0, 304, 0,
	800, 0, 802, 0, 1166, 1168, 0, 0, 2250, 2342,
	0, 0, 2275, 2276, -2, 0, 2216, 2326, 2328, 0,
	0, 0, 0, 0, 1884, 1893, 377, 1606, 1606, 1970,
	751, 752, 748, 750, 0, 1569, 0, 1576, 233, 1342,
	1346, 0, 1353, 0, 0, 0, 1357, 1419, 0, 0,
	1436, 1436, 1370, 0, 0, 1403, 1404, 1324, 0, 1405,
	1406, 1407, 1548, 1843, 1554, 1269, 0, 0, 223, 228,
	0, 0, 0, 0, 0, 0, 162, 0, 235, 258,
	1556, 0, 0, 1613, 1614, 0, 0, 273, 293, 0,
	463, 461, 1271, 0, 1398, 1305, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1306, 1411, 0, 0, 1375,
	1282, 0, 1285, 0, 1267, 0, 565, 566, 569, 0,
	1482, 0, 1489, 0, 0, 1542, 0, 0, 1700, 1692,
	1721, 1714, 1715, 1967, 0, 1745, 0, 311, 312, 799,
	0, 0, 1176, 1177, 0, 0, 0, 0, 2337, 1835,
	2217, 0, 0, 1868, 1870, 1871, 1872, 739, 740, 0,
	1570, 203, 0, 1413, 1355, 1424, 0, 0, 0, 0,
	0, 1371, 1401, 1402, 1399, 1323, 0, 1552, 1550, 1380,
	1413, 1415, 201, 0, 1411, 0, 1333, 0, 0, 1336,
	0, 0, 178, 2636, 176, 0, 231, 717, 1606, 231,
	0, 296, 0, 286, 496, 462, 464, 0, 0, 468,
	469, 470, 0, 0, 473, 474, 475, 476, 0, 0,
	481, 0, 0, 0, 0, 486, 487, 1263, 0, 1391,
	1393, 1409, 1411, 1324, 0, 1286, 1328, 1284, 1483, 1487,
	1485, 1525, 1411, 0, 1409, 0, 1707, 1721, 1701, 1702,
	0, 1717, 0, 0, 359, 801, 803, 2334, 2354, 2343,
	-2, 2967, 2644, 0, 2354, 2354, 2329, 2330, 0, 0,
	1269, 0, 1358, 1420, 1421, 0, 1416, 1417, 1418, 2565,
	1359, 1360, 1362, 1363, 1967, 0, 1410, 1419, 227, 1269,
	1330, 0, 0, 1331, 0, 0, 181, 0, 183, 259,
	1604, 1607, 0, 282, 0, 0, 437, 494, 0, 0,
	465, 466, 488, 467, 0, 0, 0, 479, 480, 482,
	483, 484, 485, 1260, 1262, 1269, 0, 1324, 1409, 1269,
	0, 0, 0, 1269, 1271, 1409, 0, 1324, 0, 1696,
	1706, 0, 1716, 1693, 0, 1740, 0, 340, 2339, 0,
	0, 2345, 2346, 2347, 2348, 2349, 2340, 2341, 753, 1348,
	1354, 0, 1422, 0, 1423, 0, 0, 0, 1379, 1408,
	1424, 207, 1334, 0, 1337, 0, 179, 0, 0, 291,
	292, 493, 489, 0, 0, 477, 478, 1390, 1392, 1269,
	1324, 1967, 1272, 0, 1274, 1271, 1283, 1324, 0, 1269,
	0, 1719, 1695, 1699, 2524, 1700, 1738, 0, 0, 0,
	2351, 2352, 0, 0, 0, 1425, 0, 1428, 1429, 0,
	1426, 1399, 0, 0, 231, 0, 1819, 471, 0, 1967,
	1269, 1374, 1273, 1263, 1269, 1411, 1967, 1409, 1689, 1721,
	1707, 0, 1967, 2350, 2353, 2344, 1412, 1427, 1430, 1431,
	1381, 0, 0, 1608, 294, 0, 0, 495, 490, 491,
	472, 1372, 1967, 1261, 1967, 1409, 1538, 1324, 0, 1696,
	1967, 1741, 1321, 0, 0, 492, 1373, 1536, 1324, 1269,
	1718, 1690, 1739, 1335, 1320, 0, 295, 1269, 1967, 0,
	1967, 1539, 0, 1537, 1321, 1338,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 640, 3, 646, 641, 3,
	652, 653, 644, 642, 657, 643, 654, 645, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 661, 658,
	632, 634, 633, 637, 656, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 650, 3, 651, 647, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 659, 639, 660, 635,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 636,
	57975, 638, 57976, 648, 57977, 649, 57978, 655, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1619
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1624
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1628
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1634
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1637
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1638
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1639
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1640
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1641
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1642
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1643
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1646
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1647
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1650
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1651
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1652
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1653
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1661
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1662
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1664
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1667
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1668
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1670
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1671
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1672
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1675
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1739
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1765
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1779
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1799
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1843
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1854
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1866
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1935
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1945
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1984
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2016
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2040
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2049
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2070
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2078
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2088
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2114
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2125
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2137
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2158
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2187
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2220
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2240
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2248
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2269
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2279
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2288
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2299
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 175:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2305
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2331
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2336
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2427
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2471
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2481
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2490
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = true
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = false
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = nil
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2737
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2741
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2744
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2828
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2883
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2933
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3087
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = nil
		}
	case 297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3171
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3270
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3295
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3440
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3449
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3455
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3460
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3465
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3493
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3497
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = nil
		}
	case 360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3573
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3607
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3635
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3639
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3655
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3659
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3789
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3805
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3826
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3827
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3836
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3855
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "CREATE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3870
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3873
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3876
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3881
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = true
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = false
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = true
		}
	case 441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = false
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3922
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3976
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3977
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3978
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3979
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4011
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4012
		{
			return unimplemented(sqllex, "create window function")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4082
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4083
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4129
		{
			return unimplemented(sqllex, "create access method")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4130
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4131
		{
			return unimplemented(sqllex, "create cast")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4132
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4133
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4134
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4135
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4136
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4137
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4139
		{
			return unimplemented(sqllex, "create publication")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4140
		{
			return unimplemented(sqllex, "create rule")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4141
		{
			return unimplemented(sqllex, "create server")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4142
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4143
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4145
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4148
		{
		}
	case 515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4149
		{
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4152
		{
		}
	case 517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4153
		{
		}
	case 518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4156
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4157
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4160
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4162
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4163
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4164
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4165
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4167
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4168
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4171
		{
			return unimplemented(sqllex, "drop server")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4178
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4179
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4180
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4181
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4183
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4185
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4186
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4213
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4223
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4232
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4266
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4302
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4320
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4351
		{
		}
	case 576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4353
		{
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.str = ""
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4371
		{

			sqlVAL.union.val = nil
		}
	case 581:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "DELETE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4399
		{
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4414
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4425
		{
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "DROP")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4435
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4468
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4625
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4682
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4689
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4691
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4699
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4707
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4715
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4723
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4742
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			return helpWith(sqllex, "DELETE")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4747
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4749
		{
			return helpWith(sqllex, "INSERT")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4752
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4762
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4763
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4769
		{
			return helpWith(sqllex, "DELETE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "INSERT")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4905
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4913
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4946
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4954
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5037
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "GRANT")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5190
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5203
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "RESET")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "RESET")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5262
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "USE")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5281
		{
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5282
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "USE")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5413
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5421
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5428
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5459
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5465
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5474
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5521
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5526
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			return unimplemented(sqllex, "set from current")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5555
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5564
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5569
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5573
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5585
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5590
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = tree.Low
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = tree.Normal
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = tree.High
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5724
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5725
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5726
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5728
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5729
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5730
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5731
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5734
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5735
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5736
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5737
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5740
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5741
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5743
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5745
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5748
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5749
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5750
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5751
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5752
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5754
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5755
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5756
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5757
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5759
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5760
		{
			return helpWith(sqllex, "SHOW")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5783
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = true
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = false
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = true
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = false
		}
	case 957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = false
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "FETCH")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5881
		{
			return helpWith(sqllex, "MOVE")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5920
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = int64(1)
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = int64(-1)
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = int64(1)
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = int64(1)
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = int64(-1)
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5975
		{
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5976
		{
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5979
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5980
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5989
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5994
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5999
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6004
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.str = "client_encoding"
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6038
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.str = "timezone"
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6072
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6087
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6095
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6194
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6199
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6208
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6214
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6228
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6239
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6291
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6321
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6331
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6344
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6352
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6376
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6385
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6412
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6417
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = true
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = true
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = false
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6453
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6454
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6455
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6472
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6498
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6499
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6515
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6523
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6531
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6567
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6572
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6574
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6578
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = true
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = false
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6593
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6598
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6629
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6639
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6644
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = true
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = false
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6662
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6676
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6683
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6687
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6691
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6701
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6712
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6726
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6734
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6744
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6762
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6778
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6783
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6788
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6793
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6798
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6818
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6831
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6836
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6847
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6858
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6876
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6884
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6910
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6915
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6919
		{
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6928
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6942
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6951
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6963
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7039
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7052
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7187
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7234
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7271
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7282
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7290
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7345
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7358
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7360
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7372
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7400
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7413
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7445
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7453
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7464
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7500
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7528
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7564
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7579
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7607
		{

			sqlVAL.union.val = nil
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7613
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.str = ""
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7623
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = nil
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7646
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7650
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7686
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7699
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7713
		{
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7714
		{
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7715
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7770
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7796
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7807
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7810
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7813
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7814
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.str = ""
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8059
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8104
		{

			sqlVAL.union.val = true
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = false
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8114
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8118
		{
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8121
		{
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8218
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8229
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8246
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8256
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8271
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8339
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8341
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8342
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8343
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8344
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8426
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8511
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8520
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8528
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8539
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8557
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8567
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8569
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8571
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8576
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8579
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8581
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8584
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8600
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8604
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8665
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.str = ""
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8685
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = true
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8708
		{

			sqlVAL.union.val = true
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = false
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8725
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8739
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8751
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8763
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8774
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8785
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = false
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = true
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = true
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = nil
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8932
		{
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8933
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8958
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8960
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8962
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8964
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8968
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9003
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9020
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:9038
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:9054
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9070
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = false
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = true
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = false
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = true
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = false
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9134
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.str = ""
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.str = ""
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9201
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9207
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9432
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9438
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9450
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9456
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9470
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9476
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9535
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = true
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = false
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9595
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9599
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.str = ""
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9635
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9638
		{
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9639
		{
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9650
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9668
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9706
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9746
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9751
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9752
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9771
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9784
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9793
		{
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9794
		{
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9795
		{
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9818
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9819
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9826
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9833
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9838
		{
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9866
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9879
		{
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9881
		{
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9885
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.str = ""
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9998
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10003
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10020
		{

		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10035
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.str = ""
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.str = ""
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.str = ""
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.str = ""
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10090
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10115
		{
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10116
		{
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10145
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10163
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10176
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10225
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10270
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10340
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10361
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10376
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10520
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10556
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10557
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10618
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10662
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10678
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = true
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = false
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10731
		{
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10732
		{
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = nil
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10745
		{
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10746
		{
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = true
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = false
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = false
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = true
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10775
		{
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10776
		{
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10780
		{
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10821
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10833
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10838
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10864
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10897
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10952
		{
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10953
		{
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10956
		{
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11023
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11025
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11040
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11062
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11067
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11072
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11093
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11109
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11140
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11182
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11192
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11227
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11238
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11268
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11301
		{
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11303
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = nil
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = true
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = false
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.str = tree.AstFull
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.str = tree.AstRight
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.str = tree.AstInner
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11420
		{
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11421
		{
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.str = tree.AstHash
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.str = ""
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11495
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11513
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11519
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11525
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11535
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = true
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = false
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = true
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = false
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11584
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11597
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11605
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11606
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11624
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11626
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11634
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11647
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11654
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11703
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11715
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11716
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = types.Geography
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11765
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11773
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11807
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = nil
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = types.Int2
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = types.Int
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = types.Float4
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = types.Float
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11850
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11858
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11866
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = types.Bool
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11880
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = types.Float
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11899
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11905
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11927
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = types.String
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = true
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = false
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = types.Date
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11976
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11984
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11998
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12007
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12015
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12032
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = true
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = false
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = false
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = types.Interval
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12056
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12140
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12155
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = nil
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12185
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12245
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12394
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12402
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12524
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12537
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12601
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12623
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12675
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12679
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12683
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12687
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12691
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12723
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12731
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12739
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12749
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12753
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12757
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12761
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12783
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12835
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12840
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12866
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12875
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12882
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12886
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12890
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12924
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12935
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12936
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12938
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12951
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12960
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13026
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13048
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13101
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13151
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13156
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13165
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13174
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13183
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13192
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13194
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13197
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13202
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13207
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13212
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13217
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13219
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13226
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13227
		{
			return unimplemented(sqllex, "treat")
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13233
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13241
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13248
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13253
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13263
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13269
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13280
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13284
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13290
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13300
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13308
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.str = ""
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13353
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13359
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13367
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13375
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13383
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13389
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13402
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13430
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13438
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13442
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13449
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13458
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13466
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13470
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13475
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13488
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13492
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13499
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13511
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13515
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13519
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13535
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13536
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13538
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13539
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13540
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13541
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13542
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13543
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13544
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13545
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13546
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13548
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13549
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13550
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13551
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13552
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13553
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13555
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13556
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13557
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13559
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13560
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13561
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13562
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13563
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13564
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13565
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13566
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13568
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13569
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13570
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13575
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13591
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13599
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13600
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13601
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13624
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13628
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13634
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13638
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13642
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13653
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13657
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13663
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13667
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13674
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13680
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13684
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13690
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13700
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13704
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13710
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13720
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13724
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13747
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13751
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13755
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13761
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13768
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13772
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13789
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13793
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13797
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13801
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13805
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13811
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13817
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13823
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13827
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13831
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13837
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13849
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13856
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13866
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13876
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13883
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13889
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13893
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13900
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13906
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13915
		{
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13916
		{
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13920
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13930
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13939
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13943
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13947
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13959
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13963
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13969
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13973
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13992
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14000
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14023
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14032
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14036
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14040
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14044
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14050
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14054
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14069
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14073
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14085
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14089
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14098
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14109
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14118
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14126
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14143
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14228
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14236
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14240
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14246
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14256
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14262
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14269
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14296
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14303
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14307
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14311
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14325
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14329
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14333
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14346
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14355
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14373
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14386
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14393
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14418
		{
			sqlVAL.str = ""
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14424
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14428
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
