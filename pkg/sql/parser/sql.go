// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:906
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14073

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1639,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 426,
	-2, 0,
	-1, 74,
	245, 254,
	525, 254,
	-2, 0,
	-1, 88,
	234, 1372,
	247, 1372,
	263, 422,
	398, 422,
	409, 1121,
	449, 422,
	462, 1121,
	510, 1121,
	536, 422,
	562, 1121,
	-2, 0,
	-1, 94,
	133, 1639,
	240, 1639,
	547, 1639,
	548, 1639,
	-2, 0,
	-1, 112,
	152, 1610,
	172, 1610,
	185, 1610,
	243, 1610,
	276, 1610,
	348, 1610,
	359, 1610,
	542, 1610,
	-2, 1581,
	-1, 153,
	160, 957,
	262, 957,
	401, 918,
	467, 918,
	509, 918,
	528, 957,
	530, 918,
	-2, 0,
	-1, 157,
	4, 1641,
	21, 1641,
	22, 1641,
	23, 1641,
	24, 1641,
	25, 1641,
	26, 1641,
	27, 1641,
	29, 1641,
	30, 1641,
	36, 1641,
	41, 1641,
	42, 1641,
	44, 1641,
	45, 1641,
	46, 1641,
	47, 1641,
	48, 1641,
	49, 1641,
	50, 1641,
	51, 1641,
	53, 1641,
	54, 1641,
	55, 1641,
	56, 1641,
	58, 1641,
	59, 1641,
	60, 1641,
	61, 1641,
	62, 1641,
	63, 1641,
	64, 1641,
	68, 1641,
	69, 1641,
	70, 1641,
	71, 1641,
	73, 1641,
	74, 1641,
	75, 1641,
	79, 1641,
	80, 1641,
	81, 1641,
	82, 1641,
	83, 1641,
	84, 1641,
	85, 1641,
	88, 1641,
	89, 1641,
	90, 1641,
	91, 1641,
	92, 1641,
	94, 1641,
	96, 1641,
	97, 1641,
	98, 1641,
	99, 1641,
	100, 1641,
	101, 1641,
	103, 1641,
	104, 1641,
	105, 1641,
	107, 1641,
	108, 1641,
	109, 1641,
	117, 1641,
	118, 1641,
	119, 1641,
	120, 1641,
	121, 1641,
	123, 1641,
	124, 1641,
	125, 1641,
	126, 1641,
	128, 1641,
	129, 1641,
	130, 1641,
	132, 1641,
	133, 1641,
	134, 1641,
	136, 1641,
	137, 1641,
	138, 1641,
	141, 1641,
	142, 1641,
	143, 1641,
	145, 1641,
	146, 1641,
	147, 1641,
	149, 1641,
	150, 1641,
	151, 1641,
	153, 1641,
	154, 1641,
	155, 1641,
	156, 1641,
	157, 1641,
	158, 1641,
	159, 1641,
	160, 1641,
	161, 1641,
	162, 1641,
	163, 1641,
	164, 1641,
	165, 1641,
	166, 1641,
	167, 1641,
	168, 1641,
	169, 1641,
	171, 1641,
	177, 1641,
	178, 1641,
	179, 1641,
	180, 1641,
	184, 1641,
	186, 1641,
	187, 1641,
	188, 1641,
	192, 1641,
	193, 1641,
	194, 1641,
	195, 1641,
	196, 1641,
	197, 1641,
	198, 1641,
	199, 1641,
	200, 1641,
	201, 1641,
	202, 1641,
	203, 1641,
	204, 1641,
	205, 1641,
	207, 1641,
	208, 1641,
	210, 1641,
	211, 1641,
	213, 1641,
	214, 1641,
	215, 1641,
	216, 1641,
	217, 1641,
	218, 1641,
	219, 1641,
	220, 1641,
	221, 1641,
	223, 1641,
	224, 1641,
	226, 1641,
	227, 1641,
	228, 1641,
	229, 1641,
	230, 1641,
	234, 1641,
	235, 1641,
	236, 1641,
	237, 1641,
	240, 1641,
	241, 1641,
	242, 1641,
	244, 1641,
	246, 1641,
	247, 1641,
	249, 1641,
	251, 1641,
	252, 1641,
	253, 1641,
	255, 1641,
	259, 1641,
	260, 1641,
	261, 1641,
	262, 1641,
	263, 1641,
	264, 1641,
	266, 1641,
	267, 1641,
	268, 1641,
	270, 1641,
	271, 1641,
	273, 1641,
	274, 1641,
	277, 1641,
	278, 1641,
	279, 1641,
	280, 1641,
	281, 1641,
	282, 1641,
	283, 1641,
	286, 1641,
	287, 1641,
	288, 1641,
	289, 1641,
	291, 1641,
	292, 1641,
	293, 1641,
	294, 1641,
	295, 1641,
	296, 1641,
	297, 1641,
	298, 1641,
	299, 1641,
	300, 1641,
	301, 1641,
	302, 1641,
	303, 1641,
	304, 1641,
	305, 1641,
	306, 1641,
	307, 1641,
	308, 1641,
	309, 1641,
	310, 1641,
	311, 1641,
	312, 1641,
	314, 1641,
	316, 1641,
	317, 1641,
	318, 1641,
	319, 1641,
	320, 1641,
	321, 1641,
	322, 1641,
	323, 1641,
	324, 1641,
	325, 1641,
	326, 1641,
	327, 1641,
	328, 1641,
	329, 1641,
	330, 1641,
	331, 1641,
	332, 1641,
	334, 1641,
	335, 1641,
	337, 1641,
	339, 1641,
	340, 1641,
	341, 1641,
	343, 1641,
	344, 1641,
	345, 1641,
	346, 1641,
	347, 1641,
	350, 1641,
	352, 1641,
	354, 1641,
	355, 1641,
	356, 1641,
	357, 1641,
	360, 1641,
	361, 1641,
	362, 1641,
	364, 1641,
	366, 1641,
	367, 1641,
	368, 1641,
	369, 1641,
	370, 1641,
	371, 1641,
	372, 1641,
	373, 1641,
	374, 1641,
	375, 1641,
	376, 1641,
	377, 1641,
	378, 1641,
	380, 1641,
	381, 1641,
	382, 1641,
	383, 1641,
	384, 1641,
	385, 1641,
	386, 1641,
	387, 1641,
	388, 1641,
	389, 1641,
	390, 1641,
	391, 1641,
	392, 1641,
	393, 1641,
	394, 1641,
	396, 1641,
	397, 1641,
	399, 1641,
	400, 1641,
	401, 1641,
	402, 1641,
	403, 1641,
	404, 1641,
	405, 1641,
	406, 1641,
	407, 1641,
	408, 1641,
	409, 1641,
	410, 1641,
	411, 1641,
	413, 1641,
	415, 1641,
	416, 1641,
	417, 1641,
	423, 1641,
	424, 1641,
	426, 1641,
	427, 1641,
	428, 1641,
	429, 1641,
	430, 1641,
	431, 1641,
	432, 1641,
	433, 1641,
	434, 1641,
	435, 1641,
	437, 1641,
	438, 1641,
	439, 1641,
	441, 1641,
	442, 1641,
	443, 1641,
	444, 1641,
	445, 1641,
	446, 1641,
	447, 1641,
	449, 1641,
	450, 1641,
	451, 1641,
	452, 1641,
	453, 1641,
	454, 1641,
	455, 1641,
	456, 1641,
	457, 1641,
	458, 1641,
	459, 1641,
	460, 1641,
	462, 1641,
	463, 1641,
	464, 1641,
	465, 1641,
	466, 1641,
	467, 1641,
	469, 1641,
	470, 1641,
	471, 1641,
	472, 1641,
	473, 1641,
	474, 1641,
	476, 1641,
	477, 1641,
	478, 1641,
	479, 1641,
	480, 1641,
	481, 1641,
	482, 1641,
	483, 1641,
	485, 1641,
	487, 1641,
	488, 1641,
	489, 1641,
	490, 1641,
	491, 1641,
	492, 1641,
	493, 1641,
	494, 1641,
	495, 1641,
	496, 1641,
	497, 1641,
	498, 1641,
	499, 1641,
	500, 1641,
	501, 1641,
	502, 1641,
	503, 1641,
	505, 1641,
	506, 1641,
	508, 1641,
	509, 1641,
	511, 1641,
	512, 1641,
	513, 1641,
	514, 1641,
	515, 1641,
	516, 1641,
	517, 1641,
	518, 1641,
	520, 1641,
	521, 1641,
	522, 1641,
	523, 1641,
	524, 1641,
	526, 1641,
	528, 1641,
	529, 1641,
	530, 1641,
	531, 1641,
	532, 1641,
	533, 1641,
	535, 1641,
	536, 1641,
	537, 1641,
	538, 1641,
	540, 1641,
	541, 1641,
	544, 1641,
	545, 1641,
	546, 1641,
	547, 1641,
	548, 1641,
	549, 1641,
	550, 1641,
	552, 1641,
	555, 1641,
	556, 1641,
	557, 1641,
	558, 1641,
	559, 1641,
	560, 1641,
	562, 1641,
	563, 1641,
	564, 1641,
	565, 1641,
	566, 1641,
	567, 1641,
	568, 1641,
	573, 1641,
	574, 1641,
	575, 1641,
	576, 1641,
	577, 1641,
	578, 1641,
	-2, 0,
	-1, 158,
	1, 1489,
	131, 1489,
	251, 1489,
	336, 1489,
	396, 1489,
	405, 1489,
	582, 1489,
	612, 1489,
	-2, 0,
	-1, 160,
	1, 1489,
	612, 1489,
	-2, 0,
	-1, 161,
	1, 1489,
	612, 1489,
	-2, 0,
	-1, 162,
	1, 1489,
	525, 1489,
	612, 1489,
	-2, 0,
	-1, 194,
	152, 1609,
	172, 1609,
	185, 1609,
	243, 1609,
	276, 1609,
	348, 1609,
	359, 1609,
	542, 1609,
	-2, 1584,
	-1, 241,
	4, 1648,
	5, 1648,
	6, 1648,
	7, 1648,
	8, 1648,
	9, 1648,
	10, 1648,
	21, 1648,
	22, 1648,
	23, 1648,
	24, 1648,
	25, 1648,
	26, 1648,
	27, 1648,
	29, 1648,
	30, 1648,
	36, 1648,
	37, 1648,
	41, 1648,
	42, 1648,
	43, 1648,
	44, 1648,
	45, 1648,
	46, 1648,
	47, 1648,
	48, 1648,
	49, 1648,
	50, 1648,
	51, 1648,
	53, 1648,
	54, 1648,
	55, 1648,
	56, 1648,
	58, 1648,
	59, 1648,
	60, 1648,
	61, 1648,
	62, 1648,
	63, 1648,
	64, 1648,
	65, 1648,
	66, 1648,
	67, 1648,
	68, 1648,
	69, 1648,
	70, 1648,
	71, 1648,
	73, 1648,
	74, 1648,
	75, 1648,
	77, 1648,
	79, 1648,
	80, 1648,
	81, 1648,
	82, 1648,
	83, 1648,
	84, 1648,
	85, 1648,
	88, 1648,
	89, 1648,
	90, 1648,
	91, 1648,
	92, 1648,
	94, 1648,
	96, 1648,
	97, 1648,
	98, 1648,
	99, 1648,
	100, 1648,
	101, 1648,
	103, 1648,
	104, 1648,
	105, 1648,
	106, 1648,
	107, 1648,
	108, 1648,
	109, 1648,
	110, 1648,
	111, 1648,
	112, 1648,
	113, 1648,
	114, 1648,
	115, 1648,
	116, 1648,
	117, 1648,
	118, 1648,
	119, 1648,
	120, 1648,
	121, 1648,
	122, 1648,
	123, 1648,
	124, 1648,
	125, 1648,
	126, 1648,
	127, 1648,
	128, 1648,
	129, 1648,
	130, 1648,
	132, 1648,
	133, 1648,
	134, 1648,
	136, 1648,
	137, 1648,
	138, 1648,
	141, 1648,
	142, 1648,
	143, 1648,
	145, 1648,
	146, 1648,
	147, 1648,
	149, 1648,
	150, 1648,
	151, 1648,
	153, 1648,
	154, 1648,
	155, 1648,
	156, 1648,
	157, 1648,
	158, 1648,
	159, 1648,
	160, 1648,
	161, 1648,
	162, 1648,
	163, 1648,
	164, 1648,
	165, 1648,
	166, 1648,
	167, 1648,
	168, 1648,
	169, 1648,
	170, 1648,
	171, 1648,
	177, 1648,
	178, 1648,
	179, 1648,
	180, 1648,
	184, 1648,
	186, 1648,
	187, 1648,
	188, 1648,
	191, 1648,
	192, 1648,
	193, 1648,
	194, 1648,
	195, 1648,
	196, 1648,
	197, 1648,
	198, 1648,
	199, 1648,
	200, 1648,
	201, 1648,
	202, 1648,
	203, 1648,
	204, 1648,
	205, 1648,
	207, 1648,
	208, 1648,
	210, 1648,
	211, 1648,
	213, 1648,
	214, 1648,
	215, 1648,
	216, 1648,
	217, 1648,
	218, 1648,
	219, 1648,
	220, 1648,
	221, 1648,
	222, 1648,
	223, 1648,
	224, 1648,
	226, 1648,
	227, 1648,
	228, 1648,
	229, 1648,
	230, 1648,
	234, 1648,
	235, 1648,
	236, 1648,
	237, 1648,
	239, 1648,
	240, 1648,
	241, 1648,
	242, 1648,
	244, 1648,
	246, 1648,
	247, 1648,
	248, 1648,
	249, 1648,
	250, 1648,
	251, 1648,
	252, 1648,
	253, 1648,
	254, 1648,
	255, 1648,
	259, 1648,
	260, 1648,
	261, 1648,
	262, 1648,
	263, 1648,
	264, 1648,
	266, 1648,
	267, 1648,
	268, 1648,
	270, 1648,
	271, 1648,
	272, 1648,
	273, 1648,
	274, 1648,
	275, 1648,
	277, 1648,
	278, 1648,
	279, 1648,
	280, 1648,
	281, 1648,
	282, 1648,
	283, 1648,
	284, 1648,
	285, 1648,
	286, 1648,
	287, 1648,
	288, 1648,
	289, 1648,
	291, 1648,
	292, 1648,
	293, 1648,
	294, 1648,
	295, 1648,
	296, 1648,
	297, 1648,
	298, 1648,
	299, 1648,
	300, 1648,
	301, 1648,
	302, 1648,
	303, 1648,
	304, 1648,
	305, 1648,
	306, 1648,
	307, 1648,
	308, 1648,
	309, 1648,
	310, 1648,
	311, 1648,
	312, 1648,
	314, 1648,
	315, 1648,
	316, 1648,
	317, 1648,
	318, 1648,
	319, 1648,
	320, 1648,
	321, 1648,
	322, 1648,
	323, 1648,
	324, 1648,
	325, 1648,
	326, 1648,
	327, 1648,
	328, 1648,
	329, 1648,
	330, 1648,
	331, 1648,
	332, 1648,
	333, 1648,
	334, 1648,
	335, 1648,
	336, 1648,
	337, 1648,
	338, 1648,
	339, 1648,
	340, 1648,
	341, 1648,
	342, 1648,
	343, 1648,
	344, 1648,
	345, 1648,
	346, 1648,
	347, 1648,
	350, 1648,
	352, 1648,
	355, 1648,
	356, 1648,
	357, 1648,
	360, 1648,
	361, 1648,
	362, 1648,
	363, 1648,
	364, 1648,
	365, 1648,
	366, 1648,
	367, 1648,
	368, 1648,
	369, 1648,
	370, 1648,
	371, 1648,
	372, 1648,
	373, 1648,
	374, 1648,
	375, 1648,
	376, 1648,
	377, 1648,
	378, 1648,
	380, 1648,
	381, 1648,
	382, 1648,
	383, 1648,
	384, 1648,
	385, 1648,
	386, 1648,
	387, 1648,
	388, 1648,
	389, 1648,
	390, 1648,
	391, 1648,
	392, 1648,
	393, 1648,
	394, 1648,
	396, 1648,
	397, 1648,
	399, 1648,
	400, 1648,
	401, 1648,
	402, 1648,
	403, 1648,
	404, 1648,
	405, 1648,
	406, 1648,
	407, 1648,
	408, 1648,
	409, 1648,
	410, 1648,
	411, 1648,
	413, 1648,
	415, 1648,
	416, 1648,
	417, 1648,
	423, 1648,
	424, 1648,
	426, 1648,
	427, 1648,
	428, 1648,
	429, 1648,
	430, 1648,
	431, 1648,
	432, 1648,
	433, 1648,
	434, 1648,
	435, 1648,
	437, 1648,
	438, 1648,
	439, 1648,
	440, 1648,
	441, 1648,
	442, 1648,
	443, 1648,
	444, 1648,
	445, 1648,
	446, 1648,
	447, 1648,
	449, 1648,
	450, 1648,
	451, 1648,
	452, 1648,
	453, 1648,
	454, 1648,
	455, 1648,
	456, 1648,
	457, 1648,
	458, 1648,
	459, 1648,
	460, 1648,
	462, 1648,
	463, 1648,
	464, 1648,
	465, 1648,
	466, 1648,
	467, 1648,
	468, 1648,
	469, 1648,
	470, 1648,
	471, 1648,
	472, 1648,
	473, 1648,
	474, 1648,
	475, 1648,
	476, 1648,
	477, 1648,
	478, 1648,
	479, 1648,
	480, 1648,
	481, 1648,
	482, 1648,
	483, 1648,
	485, 1648,
	487, 1648,
	488, 1648,
	489, 1648,
	490, 1648,
	491, 1648,
	492, 1648,
	493, 1648,
	494, 1648,
	495, 1648,
	496, 1648,
	497, 1648,
	498, 1648,
	499, 1648,
	500, 1648,
	501, 1648,
	502, 1648,
	503, 1648,
	505, 1648,
	506, 1648,
	507, 1648,
	508, 1648,
	509, 1648,
	511, 1648,
	512, 1648,
	513, 1648,
	514, 1648,
	515, 1648,
	516, 1648,
	517, 1648,
	518, 1648,
	520, 1648,
	521, 1648,
	522, 1648,
	523, 1648,
	524, 1648,
	526, 1648,
	528, 1648,
	529, 1648,
	530, 1648,
	531, 1648,
	532, 1648,
	533, 1648,
	534, 1648,
	535, 1648,
	536, 1648,
	537, 1648,
	538, 1648,
	540, 1648,
	541, 1648,
	543, 1648,
	544, 1648,
	545, 1648,
	546, 1648,
	547, 1648,
	548, 1648,
	549, 1648,
	550, 1648,
	551, 1648,
	552, 1648,
	555, 1648,
	556, 1648,
	557, 1648,
	558, 1648,
	559, 1648,
	560, 1648,
	562, 1648,
	563, 1648,
	564, 1648,
	565, 1648,
	566, 1648,
	567, 1648,
	568, 1648,
	573, 1648,
	574, 1648,
	575, 1648,
	576, 1648,
	577, 1648,
	578, 1648,
	579, 1648,
	592, 1648,
	599, 1648,
	600, 1648,
	601, 1648,
	609, 1648,
	613, 1648,
	-2, 0,
	-1, 762,
	4, 1370,
	21, 1370,
	22, 1370,
	23, 1370,
	24, 1370,
	25, 1370,
	26, 1370,
	27, 1370,
	29, 1370,
	30, 1370,
	36, 1370,
	41, 1370,
	42, 1370,
	44, 1370,
	45, 1370,
	46, 1370,
	47, 1370,
	48, 1370,
	49, 1370,
	50, 1370,
	51, 1370,
	53, 1370,
	54, 1370,
	55, 1370,
	56, 1370,
	58, 1370,
	59, 1370,
	60, 1370,
	61, 1370,
	62, 1370,
	63, 1370,
	64, 1370,
	68, 1370,
	69, 1370,
	70, 1370,
	71, 1370,
	73, 1370,
	74, 1370,
	75, 1370,
	79, 1370,
	80, 1370,
	81, 1370,
	82, 1370,
	83, 1370,
	84, 1370,
	85, 1370,
	88, 1370,
	89, 1370,
	90, 1370,
	91, 1370,
	92, 1370,
	94, 1370,
	96, 1370,
	97, 1370,
	98, 1370,
	99, 1370,
	100, 1370,
	101, 1370,
	103, 1370,
	104, 1370,
	105, 1370,
	107, 1370,
	108, 1370,
	109, 1370,
	117, 1370,
	118, 1370,
	119, 1370,
	120, 1370,
	121, 1370,
	123, 1370,
	124, 1370,
	125, 1370,
	126, 1370,
	128, 1370,
	129, 1370,
	130, 1370,
	132, 1370,
	133, 1370,
	134, 1370,
	136, 1370,
	137, 1370,
	138, 1370,
	141, 1370,
	142, 1370,
	143, 1370,
	145, 1370,
	146, 1370,
	147, 1370,
	149, 1370,
	150, 1370,
	151, 1370,
	153, 1370,
	154, 1370,
	155, 1370,
	156, 1370,
	157, 1370,
	158, 1370,
	159, 1370,
	160, 1370,
	161, 1370,
	162, 1370,
	163, 1370,
	164, 1370,
	165, 1370,
	166, 1370,
	167, 1370,
	168, 1370,
	169, 1370,
	171, 1370,
	177, 1370,
	178, 1370,
	179, 1370,
	180, 1370,
	184, 1370,
	186, 1370,
	187, 1370,
	188, 1370,
	192, 1370,
	193, 1370,
	194, 1370,
	195, 1370,
	196, 1370,
	197, 1370,
	198, 1370,
	199, 1370,
	200, 1370,
	201, 1370,
	202, 1370,
	203, 1370,
	204, 1370,
	205, 1370,
	207, 1370,
	208, 1370,
	210, 1370,
	211, 1370,
	213, 1370,
	214, 1370,
	215, 1370,
	216, 1370,
	217, 1370,
	218, 1370,
	219, 1370,
	220, 1370,
	221, 1370,
	223, 1370,
	224, 1370,
	226, 1370,
	227, 1370,
	228, 1370,
	229, 1370,
	230, 1370,
	234, 1370,
	235, 1370,
	236, 1370,
	237, 1370,
	240, 1370,
	241, 1370,
	242, 1370,
	244, 1370,
	246, 1370,
	247, 1370,
	249, 1370,
	251, 1370,
	252, 1370,
	253, 1370,
	255, 1370,
	259, 1370,
	260, 1370,
	261, 1370,
	262, 1370,
	263, 1370,
	264, 1370,
	266, 1370,
	267, 1370,
	268, 1370,
	270, 1370,
	271, 1370,
	273, 1370,
	274, 1370,
	277, 1370,
	278, 1370,
	279, 1370,
	280, 1370,
	281, 1370,
	282, 1370,
	283, 1370,
	286, 1370,
	287, 1370,
	288, 1370,
	289, 1370,
	291, 1370,
	292, 1370,
	293, 1370,
	294, 1370,
	295, 1370,
	296, 1370,
	297, 1370,
	298, 1370,
	299, 1370,
	300, 1370,
	301, 1370,
	302, 1370,
	303, 1370,
	304, 1370,
	305, 1370,
	306, 1370,
	307, 1370,
	308, 1370,
	309, 1370,
	310, 1370,
	311, 1370,
	312, 1370,
	314, 1370,
	316, 1370,
	317, 1370,
	318, 1370,
	319, 1370,
	320, 1370,
	321, 1370,
	322, 1370,
	323, 1370,
	324, 1370,
	325, 1370,
	326, 1370,
	327, 1370,
	328, 1370,
	329, 1370,
	330, 1370,
	331, 1370,
	332, 1370,
	334, 1370,
	335, 1370,
	337, 1370,
	339, 1370,
	340, 1370,
	341, 1370,
	343, 1370,
	344, 1370,
	345, 1370,
	346, 1370,
	347, 1370,
	350, 1370,
	352, 1370,
	355, 1370,
	356, 1370,
	357, 1370,
	360, 1370,
	361, 1370,
	362, 1370,
	364, 1370,
	366, 1370,
	367, 1370,
	368, 1370,
	369, 1370,
	370, 1370,
	371, 1370,
	372, 1370,
	373, 1370,
	374, 1370,
	375, 1370,
	376, 1370,
	377, 1370,
	378, 1370,
	380, 1370,
	381, 1370,
	382, 1370,
	383, 1370,
	384, 1370,
	385, 1370,
	386, 1370,
	387, 1370,
	388, 1370,
	389, 1370,
	390, 1370,
	391, 1370,
	392, 1370,
	393, 1370,
	394, 1370,
	396, 1370,
	397, 1370,
	399, 1370,
	400, 1370,
	401, 1370,
	402, 1370,
	403, 1370,
	404, 1370,
	405, 1370,
	406, 1370,
	407, 1370,
	408, 1370,
	409, 1370,
	410, 1370,
	411, 1370,
	413, 1370,
	415, 1370,
	416, 1370,
	417, 1370,
	423, 1370,
	424, 1370,
	426, 1370,
	427, 1370,
	428, 1370,
	429, 1370,
	430, 1370,
	431, 1370,
	432, 1370,
	433, 1370,
	434, 1370,
	435, 1370,
	437, 1370,
	438, 1370,
	439, 1370,
	441, 1370,
	442, 1370,
	443, 1370,
	444, 1370,
	445, 1370,
	446, 1370,
	447, 1370,
	449, 1370,
	450, 1370,
	451, 1370,
	452, 1370,
	453, 1370,
	454, 1370,
	455, 1370,
	456, 1370,
	457, 1370,
	458, 1370,
	459, 1370,
	460, 1370,
	462, 1370,
	463, 1370,
	464, 1370,
	465, 1370,
	466, 1370,
	467, 1370,
	469, 1370,
	470, 1370,
	471, 1370,
	472, 1370,
	473, 1370,
	474, 1370,
	476, 1370,
	477, 1370,
	478, 1370,
	479, 1370,
	480, 1370,
	481, 1370,
	482, 1370,
	483, 1370,
	485, 1370,
	487, 1370,
	488, 1370,
	489, 1370,
	490, 1370,
	491, 1370,
	492, 1370,
	493, 1370,
	494, 1370,
	495, 1370,
	496, 1370,
	497, 1370,
	498, 1370,
	499, 1370,
	500, 1370,
	501, 1370,
	502, 1370,
	503, 1370,
	505, 1370,
	506, 1370,
	508, 1370,
	509, 1370,
	511, 1370,
	512, 1370,
	513, 1370,
	514, 1370,
	515, 1370,
	516, 1370,
	517, 1370,
	518, 1370,
	520, 1370,
	521, 1370,
	522, 1370,
	523, 1370,
	524, 1370,
	526, 1370,
	528, 1370,
	529, 1370,
	530, 1370,
	531, 1370,
	532, 1370,
	533, 1370,
	535, 1370,
	536, 1370,
	537, 1370,
	538, 1370,
	540, 1370,
	541, 1370,
	544, 1370,
	545, 1370,
	546, 1370,
	547, 1370,
	548, 1370,
	549, 1370,
	550, 1370,
	552, 1370,
	555, 1370,
	556, 1370,
	557, 1370,
	558, 1370,
	559, 1370,
	560, 1370,
	562, 1370,
	563, 1370,
	564, 1370,
	565, 1370,
	566, 1370,
	567, 1370,
	568, 1370,
	573, 1370,
	574, 1370,
	575, 1370,
	576, 1370,
	577, 1370,
	578, 1370,
	-2, 0,
	-1, 781,
	190, 2440,
	525, 2440,
	591, 2440,
	611, 2440,
	-2, 0,
	-1, 782,
	190, 2427,
	525, 2427,
	591, 2427,
	611, 2427,
	-2, 0,
	-1, 784,
	190, 2696,
	525, 2696,
	591, 2696,
	611, 2696,
	-2, 0,
	-1, 787,
	190, 2552,
	525, 2552,
	591, 2552,
	611, 2552,
	-2, 0,
	-1, 788,
	190, 2738,
	525, 2738,
	591, 2738,
	611, 2738,
	-2, 0,
	-1, 796,
	190, 2579,
	525, 2579,
	591, 2579,
	611, 2579,
	-2, 739,
	-1, 833,
	611, 2376,
	614, 2376,
	-2, 1039,
	-1, 834,
	611, 2378,
	614, 2378,
	-2, 1040,
	-1, 835,
	611, 2377,
	614, 2377,
	-2, 1041,
	-1, 836,
	614, 2302,
	-2, 1042,
	-1, 861,
	185, 273,
	-2, 0,
	-1, 885,
	43, 2349,
	-2, 0,
	-1, 886,
	562, 1348,
	-2, 1122,
	-1, 902,
	4, 1782,
	21, 1782,
	22, 1782,
	23, 1782,
	24, 1782,
	25, 1782,
	26, 1782,
	27, 1782,
	29, 1782,
	30, 1782,
	36, 1782,
	41, 1782,
	42, 1782,
	44, 1782,
	45, 1782,
	46, 1782,
	47, 1782,
	48, 1782,
	49, 1782,
	50, 1782,
	51, 1782,
	53, 1782,
	54, 1782,
	55, 1782,
	56, 1782,
	58, 1782,
	59, 1782,
	60, 1782,
	61, 1782,
	62, 1782,
	63, 1782,
	64, 1782,
	68, 1782,
	69, 1782,
	70, 1782,
	71, 1782,
	73, 1782,
	74, 1782,
	75, 1782,
	79, 1782,
	80, 1782,
	81, 1782,
	82, 1782,
	83, 1782,
	84, 1782,
	85, 1782,
	88, 1782,
	89, 1782,
	90, 1782,
	91, 1782,
	92, 1782,
	94, 1782,
	96, 1782,
	97, 1782,
	98, 1782,
	99, 1782,
	100, 1782,
	101, 1782,
	103, 1782,
	104, 1782,
	105, 1782,
	107, 1782,
	108, 1782,
	109, 1782,
	117, 1782,
	118, 1782,
	119, 1782,
	120, 1782,
	121, 1782,
	123, 1782,
	124, 1782,
	125, 1782,
	126, 1782,
	128, 1782,
	129, 1782,
	130, 1782,
	132, 1782,
	133, 1782,
	134, 1782,
	136, 1782,
	137, 1782,
	138, 1782,
	141, 1782,
	142, 1782,
	143, 1782,
	145, 1782,
	146, 1782,
	147, 1782,
	149, 1782,
	150, 1782,
	151, 1782,
	153, 1782,
	154, 1782,
	155, 1782,
	156, 1782,
	157, 1782,
	158, 1782,
	159, 1782,
	160, 1782,
	161, 1782,
	162, 1782,
	163, 1782,
	164, 1782,
	165, 1782,
	166, 1782,
	167, 1782,
	168, 1782,
	169, 1782,
	171, 1782,
	177, 1782,
	178, 1782,
	179, 1782,
	180, 1782,
	184, 1782,
	186, 1782,
	187, 1782,
	188, 1782,
	192, 1782,
	193, 1782,
	194, 1782,
	195, 1782,
	196, 1782,
	197, 1782,
	198, 1782,
	199, 1782,
	200, 1782,
	201, 1782,
	202, 1782,
	203, 1782,
	204, 1782,
	205, 1782,
	207, 1782,
	208, 1782,
	210, 1782,
	211, 1782,
	213, 1782,
	214, 1782,
	215, 1782,
	216, 1782,
	217, 1782,
	218, 1782,
	219, 1782,
	220, 1782,
	221, 1782,
	223, 1782,
	224, 1782,
	226, 1782,
	227, 1782,
	228, 1782,
	229, 1782,
	230, 1782,
	234, 1782,
	235, 1782,
	236, 1782,
	237, 1782,
	240, 1782,
	241, 1782,
	242, 1782,
	244, 1782,
	246, 1782,
	247, 1782,
	249, 1782,
	251, 1782,
	252, 1782,
	253, 1782,
	255, 1782,
	259, 1782,
	260, 1782,
	261, 1782,
	262, 1782,
	263, 1782,
	264, 1782,
	266, 1782,
	267, 1782,
	268, 1782,
	270, 1782,
	271, 1782,
	273, 1782,
	274, 1782,
	277, 1782,
	278, 1782,
	279, 1782,
	280, 1782,
	281, 1782,
	282, 1782,
	283, 1782,
	286, 1782,
	287, 1782,
	288, 1782,
	289, 1782,
	291, 1782,
	292, 1782,
	293, 1782,
	294, 1782,
	295, 1782,
	296, 1782,
	297, 1782,
	298, 1782,
	299, 1782,
	300, 1782,
	301, 1782,
	302, 1782,
	303, 1782,
	304, 1782,
	305, 1782,
	306, 1782,
	307, 1782,
	308, 1782,
	309, 1782,
	310, 1782,
	311, 1782,
	312, 1782,
	314, 1782,
	316, 1782,
	317, 1782,
	318, 1782,
	319, 1782,
	320, 1782,
	321, 1782,
	322, 1782,
	323, 1782,
	324, 1782,
	325, 1782,
	326, 1782,
	327, 1782,
	328, 1782,
	329, 1782,
	330, 1782,
	331, 1782,
	332, 1782,
	334, 1782,
	335, 1782,
	337, 1782,
	339, 1782,
	340, 1782,
	341, 1782,
	343, 1782,
	344, 1782,
	345, 1782,
	346, 1782,
	347, 1782,
	350, 1782,
	352, 1782,
	355, 1782,
	356, 1782,
	357, 1782,
	360, 1782,
	361, 1782,
	362, 1782,
	364, 1782,
	366, 1782,
	367, 1782,
	368, 1782,
	369, 1782,
	370, 1782,
	371, 1782,
	372, 1782,
	373, 1782,
	374, 1782,
	375, 1782,
	376, 1782,
	377, 1782,
	378, 1782,
	380, 1782,
	381, 1782,
	382, 1782,
	383, 1782,
	384, 1782,
	385, 1782,
	386, 1782,
	387, 1782,
	388, 1782,
	389, 1782,
	390, 1782,
	391, 1782,
	392, 1782,
	393, 1782,
	394, 1782,
	396, 1782,
	397, 1782,
	399, 1782,
	400, 1782,
	401, 1782,
	402, 1782,
	403, 1782,
	404, 1782,
	405, 1782,
	406, 1782,
	407, 1782,
	408, 1782,
	409, 1782,
	410, 1782,
	411, 1782,
	413, 1782,
	415, 1782,
	416, 1782,
	417, 1782,
	423, 1782,
	424, 1782,
	426, 1782,
	427, 1782,
	428, 1782,
	429, 1782,
	430, 1782,
	431, 1782,
	432, 1782,
	433, 1782,
	434, 1782,
	435, 1782,
	437, 1782,
	438, 1782,
	439, 1782,
	441, 1782,
	442, 1782,
	443, 1782,
	444, 1782,
	445, 1782,
	446, 1782,
	447, 1782,
	449, 1782,
	450, 1782,
	451, 1782,
	452, 1782,
	453, 1782,
	454, 1782,
	455, 1782,
	456, 1782,
	457, 1782,
	458, 1782,
	459, 1782,
	460, 1782,
	462, 1782,
	463, 1782,
	464, 1782,
	465, 1782,
	466, 1782,
	467, 1782,
	469, 1782,
	470, 1782,
	471, 1782,
	472, 1782,
	473, 1782,
	474, 1782,
	476, 1782,
	477, 1782,
	478, 1782,
	479, 1782,
	480, 1782,
	481, 1782,
	482, 1782,
	483, 1782,
	485, 1782,
	487, 1782,
	488, 1782,
	489, 1782,
	490, 1782,
	491, 1782,
	492, 1782,
	493, 1782,
	494, 1782,
	495, 1782,
	496, 1782,
	497, 1782,
	498, 1782,
	499, 1782,
	500, 1782,
	501, 1782,
	502, 1782,
	503, 1782,
	505, 1782,
	506, 1782,
	508, 1782,
	509, 1782,
	511, 1782,
	512, 1782,
	513, 1782,
	514, 1782,
	515, 1782,
	516, 1782,
	517, 1782,
	518, 1782,
	520, 1782,
	521, 1782,
	522, 1782,
	523, 1782,
	524, 1782,
	526, 1782,
	528, 1782,
	529, 1782,
	530, 1782,
	531, 1782,
	532, 1782,
	533, 1782,
	535, 1782,
	536, 1782,
	537, 1782,
	538, 1782,
	540, 1782,
	541, 1782,
	544, 1782,
	545, 1782,
	546, 1782,
	547, 1782,
	548, 1782,
	549, 1782,
	550, 1782,
	552, 1782,
	555, 1782,
	556, 1782,
	557, 1782,
	558, 1782,
	559, 1782,
	560, 1782,
	562, 1782,
	563, 1782,
	564, 1782,
	565, 1782,
	566, 1782,
	567, 1782,
	568, 1782,
	573, 1782,
	574, 1782,
	575, 1782,
	576, 1782,
	577, 1782,
	578, 1782,
	-2, 0,
	-1, 912,
	263, 426,
	-2, 0,
	-1, 989,
	401, 919,
	467, 919,
	509, 919,
	530, 919,
	-2, 0,
	-1, 990,
	401, 918,
	467, 918,
	509, 918,
	530, 918,
	-2, 850,
	-1, 994,
	1, 971,
	608, 971,
	610, 971,
	612, 971,
	-2, 0,
	-1, 996,
	1, 893,
	608, 893,
	610, 893,
	612, 893,
	-2, 0,
	-1, 997,
	1, 897,
	608, 897,
	610, 897,
	612, 897,
	-2, 0,
	-1, 998,
	1, 1038,
	185, 1038,
	608, 1038,
	610, 1038,
	612, 1038,
	-2, 0,
	-1, 1006,
	1, 924,
	608, 924,
	610, 924,
	612, 924,
	-2, 0,
	-1, 1013,
	1, 971,
	608, 971,
	610, 971,
	612, 971,
	-2, 0,
	-1, 1014,
	1, 973,
	608, 973,
	610, 973,
	612, 973,
	-2, 0,
	-1, 1015,
	1, 976,
	608, 976,
	610, 976,
	612, 976,
	-2, 0,
	-1, 1021,
	1, 1002,
	608, 1002,
	610, 1002,
	612, 1002,
	-2, 0,
	-1, 1022,
	1, 1004,
	608, 1004,
	610, 1004,
	612, 1004,
	-2, 0,
	-1, 1027,
	1, 1032,
	608, 1032,
	610, 1032,
	612, 1032,
	-2, 0,
	-1, 1081,
	172, 1652,
	185, 1652,
	276, 1652,
	348, 1652,
	-2, 1588,
	-1, 1097,
	172, 1651,
	185, 1651,
	276, 1651,
	348, 1651,
	-2, 1585,
	-1, 1124,
	611, 2375,
	-2, 747,
	-1, 1153,
	5, 2367,
	609, 2365,
	-2, 2356,
	-1, 1161,
	5, 2388,
	609, 2385,
	-2, 2376,
	-1, 1162,
	5, 2389,
	609, 2386,
	-2, 2377,
	-1, 1170,
	611, 2373,
	-2, 2355,
	-1, 1171,
	609, 2823,
	-2, 2374,
	-1, 1194,
	609, 2822,
	-2, 2390,
	-1, 1195,
	5, 1857,
	-2, 2793,
	-1, 1196,
	5, 1858,
	-2, 2794,
	-1, 1197,
	5, 1859,
	-2, 2808,
	-1, 1198,
	5, 1860,
	-2, 2772,
	-1, 1199,
	5, 1861,
	-2, 2806,
	-1, 1200,
	5, 1869,
	-2, 2785,
	-1, 1201,
	5, 1856,
	-2, 2781,
	-1, 1202,
	5, 1856,
	-2, 2780,
	-1, 1203,
	5, 1856,
	-2, 2799,
	-1, 1204,
	5, 1867,
	-2, 2774,
	-1, 1205,
	5, 1872,
	-2, 2773,
	-1, 1206,
	5, 1874,
	-2, 2818,
	-1, 1209,
	5, 1896,
	-2, 2811,
	-1, 1210,
	5, 1888,
	-2, 2812,
	-1, 1211,
	5, 1896,
	-2, 2813,
	-1, 1212,
	5, 1892,
	-2, 2814,
	-1, 1213,
	5, 1842,
	-2, 2786,
	-1, 1214,
	5, 1843,
	-2, 2787,
	-1, 1215,
	5, 1844,
	-2, 2775,
	-1, 1243,
	5, 1879,
	-2, 2819,
	-1, 1244,
	5, 1880,
	-2, 2809,
	-1, 1245,
	5, 1881,
	563, 1881,
	-2, 2776,
	-1, 1246,
	5, 1882,
	563, 1882,
	-2, 2777,
	-1, 1283,
	609, 2385,
	-2, 2376,
	-1, 1284,
	609, 2386,
	-2, 2377,
	-1, 1382,
	190, 2738,
	525, 2738,
	591, 2738,
	611, 2738,
	-2, 0,
	-1, 1387,
	1, 723,
	612, 723,
	-2, 1497,
	-1, 1517,
	368, 2350,
	426, 2350,
	469, 2350,
	601, 2350,
	-2, 2340,
	-1, 1523,
	190, 133,
	270, 133,
	334, 133,
	568, 133,
	-2, 2734,
	-1, 1524,
	190, 134,
	270, 134,
	334, 134,
	568, 134,
	-2, 2485,
	-1, 1525,
	190, 135,
	270, 135,
	334, 135,
	568, 135,
	-2, 2658,
	-1, 1531,
	613, 2350,
	-2, 2352,
	-1, 1551,
	1, 1345,
	431, 1302,
	469, 1302,
	585, 1302,
	608, 1345,
	610, 1345,
	612, 1345,
	-2, 1637,
	-1, 1557,
	206, 1442,
	225, 1442,
	439, 1442,
	-2, 0,
	-1, 1605,
	409, 1121,
	562, 1121,
	-2, 421,
	-1, 1622,
	43, 2348,
	-2, 1084,
	-1, 1629,
	1, 1345,
	608, 1345,
	610, 1345,
	612, 1345,
	-2, 1637,
	-1, 1637,
	4, 1370,
	21, 1370,
	22, 1370,
	23, 1370,
	24, 1370,
	25, 1370,
	26, 1370,
	27, 1370,
	29, 1370,
	30, 1370,
	36, 1370,
	41, 1370,
	42, 1370,
	44, 1370,
	45, 1370,
	46, 1370,
	47, 1370,
	48, 1370,
	49, 1370,
	50, 1370,
	51, 1370,
	53, 1370,
	54, 1370,
	55, 1370,
	56, 1370,
	58, 1370,
	59, 1370,
	60, 1370,
	61, 1370,
	62, 1370,
	63, 1370,
	64, 1370,
	68, 1370,
	69, 1370,
	70, 1370,
	71, 1370,
	73, 1370,
	74, 1370,
	75, 1370,
	79, 1370,
	80, 1370,
	81, 1370,
	82, 1370,
	83, 1370,
	84, 1370,
	85, 1370,
	88, 1370,
	89, 1370,
	90, 1370,
	91, 1370,
	92, 1370,
	94, 1370,
	96, 1370,
	97, 1370,
	98, 1370,
	99, 1370,
	100, 1370,
	101, 1370,
	103, 1370,
	104, 1370,
	105, 1370,
	107, 1370,
	108, 1370,
	109, 1370,
	117, 1370,
	118, 1370,
	119, 1370,
	120, 1370,
	121, 1370,
	123, 1370,
	124, 1370,
	125, 1370,
	126, 1370,
	128, 1370,
	129, 1370,
	130, 1370,
	132, 1370,
	133, 1370,
	134, 1370,
	136, 1370,
	137, 1370,
	138, 1370,
	141, 1370,
	142, 1370,
	143, 1370,
	145, 1370,
	146, 1370,
	147, 1370,
	149, 1370,
	150, 1370,
	151, 1370,
	153, 1370,
	154, 1370,
	155, 1370,
	156, 1370,
	157, 1370,
	158, 1370,
	159, 1370,
	160, 1370,
	161, 1370,
	162, 1370,
	163, 1370,
	164, 1370,
	165, 1370,
	166, 1370,
	167, 1370,
	168, 1370,
	169, 1370,
	177, 1370,
	178, 1370,
	179, 1370,
	180, 1370,
	184, 1370,
	186, 1370,
	187, 1370,
	188, 1370,
	192, 1370,
	193, 1370,
	194, 1370,
	195, 1370,
	196, 1370,
	197, 1370,
	198, 1370,
	199, 1370,
	200, 1370,
	201, 1370,
	202, 1370,
	203, 1370,
	204, 1370,
	205, 1370,
	207, 1370,
	208, 1370,
	210, 1370,
	211, 1370,
	213, 1370,
	214, 1370,
	215, 1370,
	216, 1370,
	217, 1370,
	218, 1370,
	219, 1370,
	220, 1370,
	221, 1370,
	223, 1370,
	224, 1370,
	226, 1370,
	227, 1370,
	228, 1370,
	229, 1370,
	230, 1370,
	235, 1370,
	236, 1370,
	237, 1370,
	240, 1370,
	241, 1370,
	242, 1370,
	244, 1370,
	246, 1370,
	247, 1370,
	249, 1370,
	251, 1370,
	252, 1370,
	253, 1370,
	255, 1370,
	259, 1370,
	260, 1370,
	261, 1370,
	262, 1370,
	263, 1370,
	264, 1370,
	266, 1370,
	267, 1370,
	268, 1370,
	270, 1370,
	271, 1370,
	273, 1370,
	274, 1370,
	277, 1370,
	278, 1370,
	279, 1370,
	280, 1370,
	281, 1370,
	282, 1370,
	283, 1370,
	286, 1370,
	287, 1370,
	288, 1370,
	289, 1370,
	291, 1370,
	292, 1370,
	293, 1370,
	294, 1370,
	295, 1370,
	296, 1370,
	297, 1370,
	298, 1370,
	299, 1370,
	300, 1370,
	301, 1370,
	302, 1370,
	303, 1370,
	304, 1370,
	305, 1370,
	306, 1370,
	307, 1370,
	308, 1370,
	309, 1370,
	310, 1370,
	311, 1370,
	312, 1370,
	314, 1370,
	316, 1370,
	317, 1370,
	318, 1370,
	319, 1370,
	320, 1370,
	321, 1370,
	322, 1370,
	323, 1370,
	324, 1370,
	325, 1370,
	326, 1370,
	327, 1370,
	328, 1370,
	329, 1370,
	330, 1370,
	331, 1370,
	332, 1370,
	334, 1370,
	335, 1370,
	339, 1370,
	340, 1370,
	341, 1370,
	343, 1370,
	344, 1370,
	345, 1370,
	346, 1370,
	347, 1370,
	350, 1370,
	352, 1370,
	353, 1370,
	355, 1370,
	356, 1370,
	357, 1370,
	360, 1370,
	361, 1370,
	362, 1370,
	364, 1370,
	366, 1370,
	367, 1370,
	368, 1370,
	369, 1370,
	370, 1370,
	371, 1370,
	372, 1370,
	373, 1370,
	374, 1370,
	375, 1370,
	376, 1370,
	377, 1370,
	378, 1370,
	380, 1370,
	381, 1370,
	382, 1370,
	383, 1370,
	384, 1370,
	385, 1370,
	386, 1370,
	387, 1370,
	388, 1370,
	389, 1370,
	390, 1370,
	391, 1370,
	392, 1370,
	393, 1370,
	394, 1370,
	396, 1370,
	397, 1370,
	399, 1370,
	400, 1370,
	401, 1370,
	402, 1370,
	403, 1370,
	404, 1370,
	405, 1370,
	406, 1370,
	407, 1370,
	408, 1370,
	409, 1370,
	410, 1370,
	411, 1370,
	413, 1370,
	415, 1370,
	416, 1370,
	417, 1370,
	423, 1370,
	424, 1370,
	426, 1370,
	427, 1370,
	428, 1370,
	429, 1370,
	430, 1370,
	431, 1370,
	432, 1370,
	433, 1370,
	434, 1370,
	435, 1370,
	437, 1370,
	438, 1370,
	439, 1370,
	441, 1370,
	442, 1370,
	443, 1370,
	444, 1370,
	445, 1370,
	446, 1370,
	447, 1370,
	449, 1370,
	450, 1370,
	451, 1370,
	452, 1370,
	453, 1370,
	454, 1370,
	455, 1370,
	456, 1370,
	457, 1370,
	458, 1370,
	459, 1370,
	460, 1370,
	462, 1370,
	463, 1370,
	464, 1370,
	465, 1370,
	466, 1370,
	467, 1370,
	469, 1370,
	470, 1370,
	471, 1370,
	472, 1370,
	473, 1370,
	474, 1370,
	476, 1370,
	477, 1370,
	478, 1370,
	479, 1370,
	480, 1370,
	481, 1370,
	482, 1370,
	483, 1370,
	485, 1370,
	487, 1370,
	488, 1370,
	489, 1370,
	490, 1370,
	491, 1370,
	492, 1370,
	493, 1370,
	494, 1370,
	495, 1370,
	496, 1370,
	497, 1370,
	498, 1370,
	499, 1370,
	500, 1370,
	501, 1370,
	502, 1370,
	503, 1370,
	505, 1370,
	506, 1370,
	508, 1370,
	509, 1370,
	511, 1370,
	512, 1370,
	513, 1370,
	514, 1370,
	515, 1370,
	516, 1370,
	517, 1370,
	518, 1370,
	520, 1370,
	521, 1370,
	522, 1370,
	523, 1370,
	524, 1370,
	526, 1370,
	528, 1370,
	529, 1370,
	530, 1370,
	531, 1370,
	532, 1370,
	533, 1370,
	535, 1370,
	536, 1370,
	537, 1370,
	538, 1370,
	540, 1370,
	541, 1370,
	544, 1370,
	545, 1370,
	546, 1370,
	547, 1370,
	548, 1370,
	549, 1370,
	550, 1370,
	552, 1370,
	555, 1370,
	556, 1370,
	557, 1370,
	558, 1370,
	559, 1370,
	560, 1370,
	562, 1370,
	563, 1370,
	564, 1370,
	565, 1370,
	566, 1370,
	567, 1370,
	568, 1370,
	573, 1370,
	574, 1370,
	575, 1370,
	576, 1370,
	577, 1370,
	578, 1370,
	-2, 0,
	-1, 1660,
	1, 566,
	608, 566,
	610, 566,
	612, 566,
	-2, 1608,
	-1, 1663,
	4, 2817,
	11, 2817,
	12, 2817,
	14, 2817,
	15, 2817,
	16, 2817,
	17, 2817,
	18, 2817,
	19, 2817,
	21, 2817,
	22, 2817,
	23, 2817,
	24, 2817,
	25, 2817,
	26, 2817,
	27, 2817,
	29, 2817,
	30, 2817,
	33, 2817,
	34, 2817,
	36, 2817,
	38, 2817,
	41, 2817,
	42, 2817,
	44, 2817,
	45, 2817,
	46, 2817,
	47, 2817,
	48, 2817,
	49, 2817,
	50, 2817,
	51, 2817,
	53, 2817,
	54, 2817,
	55, 2817,
	56, 2817,
	58, 2817,
	59, 2817,
	60, 2817,
	61, 2817,
	62, 2817,
	63, 2817,
	64, 2817,
	67, 2817,
	68, 2817,
	69, 2817,
	70, 2817,
	71, 2817,
	73, 2817,
	74, 2817,
	75, 2817,
	76, 2817,
	79, 2817,
	80, 2817,
	81, 2817,
	82, 2817,
	83, 2817,
	84, 2817,
	85, 2817,
	86, 2817,
	88, 2817,
	89, 2817,
	90, 2817,
	91, 2817,
	92, 2817,
	94, 2817,
	95, 2817,
	96, 2817,
	97, 2817,
	98, 2817,
	99, 2817,
	100, 2817,
	101, 2817,
	103, 2817,
	104, 2817,
	105, 2817,
	106, 2817,
	107, 2817,
	108, 2817,
	109, 2817,
	117, 2817,
	118, 2817,
	119, 2817,
	120, 2817,
	121, 2817,
	123, 2817,
	124, 2817,
	125, 2817,
	126, 2817,
	128, 2817,
	129, 2817,
	130, 2817,
	132, 2817,
	133, 2817,
	134, 2817,
	136, 2817,
	137, 2817,
	138, 2817,
	141, 2817,
	142, 2817,
	143, 2817,
	145, 2817,
	146, 2817,
	147, 2817,
	149, 2817,
	150, 2817,
	151, 2817,
	153, 2817,
	154, 2817,
	155, 2817,
	156, 2817,
	157, 2817,
	158, 2817,
	159, 2817,
	160, 2817,
	161, 2817,
	162, 2817,
	163, 2817,
	164, 2817,
	165, 2817,
	166, 2817,
	167, 2817,
	168, 2817,
	169, 2817,
	173, 2817,
	174, 2817,
	175, 2817,
	176, 2817,
	177, 2817,
	178, 2817,
	179, 2817,
	180, 2817,
	183, 2817,
	184, 2817,
	186, 2817,
	187, 2817,
	188, 2817,
	191, 2817,
	192, 2817,
	193, 2817,
	194, 2817,
	195, 2817,
	196, 2817,
	197, 2817,
	198, 2817,
	199, 2817,
	200, 2817,
	201, 2817,
	202, 2817,
	203, 2817,
	204, 2817,
	205, 2817,
	207, 2817,
	208, 2817,
	210, 2817,
	211, 2817,
	213, 2817,
	214, 2817,
	215, 2817,
	216, 2817,
	217, 2817,
	218, 2817,
	219, 2817,
	220, 2817,
	221, 2817,
	222, 2817,
	223, 2817,
	224, 2817,
	225, 2817,
	226, 2817,
	227, 2817,
	228, 2817,
	229, 2817,
	230, 2817,
	232, 2817,
	233, 2817,
	235, 2817,
	236, 2817,
	237, 2817,
	239, 2817,
	240, 2817,
	241, 2817,
	242, 2817,
	244, 2817,
	246, 2817,
	247, 2817,
	248, 2817,
	249, 2817,
	250, 2817,
	251, 2817,
	252, 2817,
	253, 2817,
	254, 2817,
	255, 2817,
	257, 2817,
	258, 2817,
	259, 2817,
	260, 2817,
	261, 2817,
	262, 2817,
	263, 2817,
	264, 2817,
	266, 2817,
	267, 2817,
	268, 2817,
	270, 2817,
	271, 2817,
	272, 2817,
	273, 2817,
	274, 2817,
	275, 2817,
	277, 2817,
	278, 2817,
	279, 2817,
	280, 2817,
	281, 2817,
	282, 2817,
	283, 2817,
	286, 2817,
	287, 2817,
	288, 2817,
	289, 2817,
	290, 2817,
	291, 2817,
	292, 2817,
	293, 2817,
	294, 2817,
	295, 2817,
	296, 2817,
	297, 2817,
	298, 2817,
	299, 2817,
	300, 2817,
	301, 2817,
	302, 2817,
	303, 2817,
	304, 2817,
	305, 2817,
	306, 2817,
	307, 2817,
	308, 2817,
	309, 2817,
	310, 2817,
	311, 2817,
	312, 2817,
	314, 2817,
	315, 2817,
	316, 2817,
	317, 2817,
	318, 2817,
	319, 2817,
	320, 2817,
	321, 2817,
	322, 2817,
	323, 2817,
	324, 2817,
	325, 2817,
	326, 2817,
	327, 2817,
	328, 2817,
	329, 2817,
	330, 2817,
	331, 2817,
	332, 2817,
	334, 2817,
	335, 2817,
	338, 2817,
	339, 2817,
	340, 2817,
	341, 2817,
	343, 2817,
	344, 2817,
	345, 2817,
	346, 2817,
	347, 2817,
	350, 2817,
	352, 2817,
	355, 2817,
	356, 2817,
	357, 2817,
	358, 2817,
	360, 2817,
	361, 2817,
	362, 2817,
	364, 2817,
	366, 2817,
	367, 2817,
	368, 2817,
	369, 2817,
	370, 2817,
	371, 2817,
	372, 2817,
	373, 2817,
	374, 2817,
	375, 2817,
	376, 2817,
	377, 2817,
	378, 2817,
	380, 2817,
	381, 2817,
	382, 2817,
	383, 2817,
	384, 2817,
	385, 2817,
	386, 2817,
	387, 2817,
	388, 2817,
	389, 2817,
	390, 2817,
	391, 2817,
	392, 2817,
	393, 2817,
	394, 2817,
	396, 2817,
	397, 2817,
	399, 2817,
	400, 2817,
	401, 2817,
	402, 2817,
	403, 2817,
	404, 2817,
	405, 2817,
	406, 2817,
	407, 2817,
	408, 2817,
	409, 2817,
	410, 2817,
	411, 2817,
	413, 2817,
	415, 2817,
	416, 2817,
	417, 2817,
	423, 2817,
	424, 2817,
	425, 2817,
	426, 2817,
	427, 2817,
	428, 2817,
	429, 2817,
	430, 2817,
	431, 2817,
	432, 2817,
	433, 2817,
	434, 2817,
	435, 2817,
	437, 2817,
	438, 2817,
	439, 2817,
	440, 2817,
	441, 2817,
	442, 2817,
	443, 2817,
	444, 2817,
	445, 2817,
	446, 2817,
	447, 2817,
	448, 2817,
	449, 2817,
	450, 2817,
	451, 2817,
	452, 2817,
	453, 2817,
	454, 2817,
	455, 2817,
	456, 2817,
	457, 2817,
	458, 2817,
	459, 2817,
	460, 2817,
	462, 2817,
	463, 2817,
	464, 2817,
	465, 2817,
	466, 2817,
	467, 2817,
	469, 2817,
	470, 2817,
	471, 2817,
	472, 2817,
	473, 2817,
	474, 2817,
	475, 2817,
	476, 2817,
	477, 2817,
	478, 2817,
	479, 2817,
	480, 2817,
	481, 2817,
	482, 2817,
	483, 2817,
	485, 2817,
	487, 2817,
	488, 2817,
	489, 2817,
	490, 2817,
	491, 2817,
	492, 2817,
	493, 2817,
	494, 2817,
	495, 2817,
	496, 2817,
	497, 2817,
	498, 2817,
	499, 2817,
	500, 2817,
	501, 2817,
	502, 2817,
	503, 2817,
	505, 2817,
	506, 2817,
	507, 2817,
	508, 2817,
	509, 2817,
	511, 2817,
	512, 2817,
	513, 2817,
	514, 2817,
	515, 2817,
	516, 2817,
	517, 2817,
	518, 2817,
	520, 2817,
	521, 2817,
	522, 2817,
	523, 2817,
	524, 2817,
	526, 2817,
	528, 2817,
	529, 2817,
	530, 2817,
	531, 2817,
	532, 2817,
	533, 2817,
	535, 2817,
	536, 2817,
	537, 2817,
	538, 2817,
	540, 2817,
	541, 2817,
	544, 2817,
	545, 2817,
	546, 2817,
	547, 2817,
	548, 2817,
	549, 2817,
	550, 2817,
	552, 2817,
	555, 2817,
	556, 2817,
	557, 2817,
	558, 2817,
	559, 2817,
	560, 2817,
	562, 2817,
	563, 2817,
	564, 2817,
	565, 2817,
	566, 2817,
	567, 2817,
	568, 2817,
	573, 2817,
	574, 2817,
	575, 2817,
	576, 2817,
	577, 2817,
	578, 2817,
	579, 2817,
	581, 2817,
	589, 2817,
	590, 2817,
	591, 2817,
	592, 2817,
	593, 2817,
	594, 2817,
	596, 2817,
	597, 2817,
	598, 2817,
	599, 2817,
	600, 2817,
	601, 2817,
	602, 2817,
	603, 2817,
	604, 2817,
	607, 2817,
	610, 2817,
	611, 2817,
	613, 2817,
	614, 2817,
	-2, 0,
	-1, 1668,
	190, 2696,
	525, 2696,
	591, 2696,
	611, 2696,
	-2, 0,
	-1, 1721,
	401, 919,
	467, 919,
	509, 919,
	530, 919,
	-2, 0,
	-1, 1732,
	1, 1442,
	608, 1442,
	610, 1442,
	612, 1442,
	-2, 0,
	-1, 1749,
	1, 914,
	608, 914,
	610, 914,
	612, 914,
	-2, 0,
	-1, 1750,
	1, 958,
	608, 958,
	610, 958,
	612, 958,
	-2, 0,
	-1, 1751,
	1, 966,
	608, 966,
	610, 966,
	612, 966,
	-2, 0,
	-1, 1754,
	1, 923,
	608, 923,
	610, 923,
	612, 923,
	-2, 0,
	-1, 1756,
	1, 929,
	608, 929,
	610, 929,
	612, 929,
	-2, 0,
	-1, 1759,
	1, 925,
	608, 925,
	610, 925,
	612, 925,
	-2, 0,
	-1, 1764,
	1, 939,
	608, 939,
	610, 939,
	612, 939,
	-2, 0,
	-1, 1795,
	1, 2679,
	608, 2679,
	610, 2679,
	611, 2679,
	612, 2679,
	-2, 0,
	-1, 1799,
	1, 1013,
	608, 1013,
	610, 1013,
	612, 1013,
	-2, 0,
	-1, 1816,
	1, 1492,
	612, 1492,
	-2, 1497,
	-1, 1819,
	172, 1651,
	185, 1651,
	276, 1651,
	348, 1651,
	-2, 1589,
	-1, 1919,
	152, 1610,
	172, 1610,
	185, 1610,
	243, 1610,
	276, 1610,
	348, 1610,
	359, 1610,
	542, 1610,
	-2, 2061,
	-1, 1980,
	610, 2236,
	-2, 0,
	-1, 2015,
	152, 1610,
	172, 1610,
	185, 1610,
	243, 1610,
	276, 1610,
	348, 1610,
	359, 1610,
	542, 1610,
	-2, 1743,
	-1, 2055,
	525, 2693,
	611, 2693,
	614, 2693,
	-2, 0,
	-1, 2072,
	609, 1884,
	-2, 1872,
	-1, 2104,
	190, 2693,
	611, 2693,
	614, 2693,
	-2, 0,
	-1, 2147,
	1, 725,
	612, 725,
	-2, 1497,
	-1, 2301,
	225, 268,
	-2, 2384,
	-1, 2302,
	225, 269,
	-2, 321,
	-1, 2412,
	1, 916,
	608, 916,
	610, 916,
	612, 916,
	-2, 0,
	-1, 2413,
	1, 960,
	608, 960,
	610, 960,
	612, 960,
	-2, 0,
	-1, 2414,
	1, 968,
	608, 968,
	610, 968,
	612, 968,
	-2, 0,
	-1, 2415,
	1, 1015,
	608, 1015,
	610, 1015,
	612, 1015,
	-2, 0,
	-1, 2456,
	1, 941,
	608, 941,
	610, 941,
	612, 941,
	-2, 0,
	-1, 2476,
	1, 998,
	608, 998,
	610, 998,
	612, 998,
	-2, 0,
	-1, 2523,
	446, 1678,
	447, 1678,
	-2, 1917,
	-1, 2554,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1937,
	-1, 2555,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1938,
	-1, 2556,
	95, 0,
	257, 0,
	258, 0,
	593, 0,
	594, 0,
	-2, 1939,
	-1, 2557,
	95, 0,
	257, 0,
	258, 0,
	593, 0,
	594, 0,
	-2, 1940,
	-1, 2558,
	95, 0,
	257, 0,
	258, 0,
	593, 0,
	594, 0,
	-2, 1941,
	-1, 2559,
	95, 0,
	257, 0,
	258, 0,
	593, 0,
	594, 0,
	-2, 1942,
	-1, 2560,
	95, 0,
	257, 0,
	258, 0,
	593, 0,
	594, 0,
	-2, 1943,
	-1, 2561,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1944,
	-1, 2573,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1956,
	-1, 2574,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1957,
	-1, 2575,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1958,
	-1, 2579,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1965,
	-1, 2585,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1969,
	-1, 2587,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1977,
	-1, 2588,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1978,
	-1, 2589,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1979,
	-1, 2590,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1980,
	-1, 2764,
	5, 2388,
	190, 2247,
	609, 2385,
	-2, 2376,
	-1, 2765,
	190, 2248,
	-2, 2768,
	-1, 2766,
	190, 2249,
	-2, 2578,
	-1, 2767,
	190, 2250,
	-2, 2458,
	-1, 2768,
	190, 2251,
	-2, 2516,
	-1, 2769,
	190, 2252,
	-2, 2563,
	-1, 2770,
	190, 2253,
	-2, 2691,
	-1, 2771,
	190, 2254,
	-2, 2044,
	-1, 2842,
	1, 1744,
	2, 1744,
	106, 1744,
	152, 1744,
	172, 1744,
	185, 1744,
	191, 1744,
	209, 1744,
	212, 1744,
	239, 1744,
	243, 1744,
	254, 1744,
	272, 1744,
	276, 1744,
	315, 1744,
	348, 1744,
	353, 1744,
	359, 1744,
	436, 1744,
	440, 1744,
	542, 1744,
	553, 1744,
	570, 1744,
	571, 1744,
	572, 1744,
	582, 1744,
	608, 1744,
	610, 1744,
	612, 1744,
	614, 1744,
	-2, 1743,
	-1, 2855,
	609, 2357,
	-2, 2371,
	-1, 2857,
	1, 338,
	570, 338,
	-2, 1637,
	-1, 2887,
	609, 1883,
	-2, 1873,
	-1, 3089,
	1, 1345,
	431, 1302,
	469, 1302,
	585, 1302,
	608, 1345,
	610, 1345,
	612, 1345,
	-2, 1637,
	-1, 3265,
	354, 1681,
	-2, 2807,
	-1, 3266,
	354, 1682,
	-2, 2676,
	-1, 3270,
	446, 2313,
	447, 2313,
	-2, 2042,
	-1, 3271,
	446, 2317,
	447, 2317,
	-2, 2043,
	-1, 3272,
	446, 2314,
	447, 2314,
	-2, 2042,
	-1, 3273,
	446, 2318,
	447, 2318,
	-2, 2043,
	-1, 3286,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1967,
	-1, 3287,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1971,
	-1, 3293,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1973,
	-1, 3520,
	1, 720,
	608, 720,
	610, 720,
	612, 720,
	-2, 1497,
	-1, 3707,
	43, 2348,
	-2, 1085,
	-1, 3712,
	1, 1345,
	608, 1345,
	610, 1345,
	612, 1345,
	-2, 1637,
	-1, 3817,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1975,
	-1, 3824,
	248, 0,
	250, 0,
	338, 0,
	-2, 1994,
	-1, 3892,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2023,
	-1, 3893,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2024,
	-1, 3894,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2025,
	-1, 3898,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2029,
	-1, 3899,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2030,
	-1, 3900,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2031,
	-1, 3948,
	609, 2358,
	-2, 2372,
	-1, 4148,
	611, 2924,
	-2, 1563,
	-1, 4203,
	248, 0,
	250, 0,
	338, 0,
	-2, 1995,
	-1, 4206,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1998,
	-1, 4207,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 2000,
	-1, 4318,
	611, 2373,
	-2, 1380,
	-1, 4477,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1999,
	-1, 4478,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 2001,
	-1, 4489,
	248, 0,
	-2, 2034,
	-1, 4675,
	248, 0,
	-2, 2035,
	-1, 4895,
	50, 0,
	222, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 2771,
}

const sqlPrivate = 57344

const sqlLast = 139044

var sqlAct = [...]int{
	277, 5013, 4830, 5086, 1363, 3424, 4715, 4723, 3162, 3021,
	4829, 4957, 4941, 4545, 4894, 4881, 3175, 4907, 5027, 4786,
	4863, 3695, 4767, 4820, 4844, 1566, 3696, 4908, 4622, 4909,
	2298, 4186, 4841, 4645, 4609, 4966, 2996, 2196, 4593, 4527,
	4905, 3857, 4893, 4438, 4679, 4433, 1287, 3958, 4314, 1107,
	4394, 3809, 4427, 39, 4550, 4367, 3132, 3544, 1355, 4466,
	1276, 4498, 4132, 2388, 2533, 1541, 4140, 3729, 4420, 4628,
	1353, 4059, 4418, 3547, 721, 835, 4752, 3279, 2376, 4295,
	2386, 2954, 4315, 2797, 2602, 3680, 2129, 4443, 4106, 1828,
	3036, 3723, 4089, 4087, 3550, 2116, 4494, 2059, 3669, 3760,
	3685, 3187, 2541, 835, 2349, 3762, 2384, 3607, 1421, 3151,
	1098, 3121, 2205, 3532, 3684, 3533, 1686, 3687, 3534, 3662,
	3661, 3146, 2021, 2534, 2869, 3951, 3148, 3470, 3447, 732,
	3439, 3477, 3407, 4185, 910, 4, 914, 1514, 3182, 3177,
	1106, 184, 4242, 2287, 3428, 2285, 1990, 3163, 3096, 2233,
	2281, 3430, 3571, 2835, 2217, 832, 4680, 3918, 2538, 3406,
	2680, 2615, 1966, 1927, 271, 793, 4942, 1897, 3263, 3181,
	1624, 2286, 2279, 905, 3125, 789, 3060, 1358, 2261, 2273,
	830, 3133, 2254, 2682, 1157, 1402, 2184, 2188, 1816, 2794,
	1729, 2815, 2671, 2127, 2599, 2060, 2505, 1332, 1162, 1991,
	2522, 2995, 2174, 1346, 270, 2503, 1661, 3156, 2336, 2870,
	1153, 1627, 766, 836, 2834, 837, 1267, 1684, 2276, 2978,
	2335, 4787, 2010, 983, 2039, 2979, 1389, 3688, 2898, 2939,
	2674, 1249, 1270, 2824, 2652, 184, 2760, 2000, 1911, 841,
	1961, 194, 1543, 2007, 1284, 2726, 2805, 1829, 1830, 1764,
	195, 2504, 774, 2506, 1343, 785, 2295, 1652, 931, 2837,
	111, 2362, 1561, 1749, 4958, 1522, 5014, 841, 1659, 2527,
	1138, 725, 44, 43, 41, 32, 30, 28, 1247, 844,
	886, 722, 1272, 734, 749, 1835, 825, 3316, 1815, 1572,
	1004, 1266, 1843, 1844, 3932, 3310, 3933, 2953, 1160, 2118,
	2118, 887, 2118, 3426, 2118, 1360, 2118, 844, 2118, 708,
	5097, 3959, 5089, 730, 2814, 1874, 3748, 5077, 4903, 5076,
	5046, 2814, 1846, 2814, 4549, 5044, 4987, 4518, 4943, 4549,
	2307, 906, 4944, 4933, 4931, 4928, 4925, 2814, 2814, 4929,
	4926, 4891, 4890, 4512, 3748, 2307, 2307, 3738, 1899, 4515,
	4889, 4879, 4877, 2139, 3192, 4549, 4549, 1845, 73, 4872,
	909, 908, 4867, 4631, 1843, 1844, 4549, 1876, 1877, 1878,
	1887, 1888, 1889, 4866, 4839, 74, 4806, 4549, 4549, 4799,
	2878, 4798, 1102, 2814, 4791, 2814, 1880, 1874, 2307, 4766,
	1398, 79, 4763, 2307, 1846, 1264, 4549, 4745, 4677, 4269,
	4659, 4384, 2878, 1893, 4169, 4624, 4568, 4567, 4556, 3989,
	2307, 2307, 2307, 4555, 4548, 4505, 1091, 4549, 4549, 2307,
	1899, 4479, 2385, 4454, 4451, 2878, 1082, 3192, 3748, 1845,
	4362, 88, 2136, 4342, 2814, 1081, 4205, 2814, 4156, 1865,
	2878, 2139, 3755, 4150, 1398, 4103, 4020, 3755, 1862, 4104,
	4021, 3988, 3943, 3739, 1282, 3989, 3944, 1103, 3941, 3925,
	3487, 3841, 3942, 2814, 1851, 2307, 3837, 3754, 1102, 3505,
	2814, 3755, 912, 3423, 3502, 3418, 3922, 2814, 3417, 2814,
	3368, 2900, 2814, 1097, 3369, 49, 3366, 110, 3358, 2874,
	3367, 1302, 3359, 94, 107, 1250, 1250, 3356, 3327, 3325,
	3191, 2814, 2814, 3173, 3192, 3326, 3172, 2372, 2923, 2307,
	2372, 2807, 2814, 1873, 1875, 1251, 1310, 2877, 2867, 2859,
	1565, 2878, 2814, 2307, 2139, 3278, 1868, 1869, 1870, 1871,
	2813, 2139, 2814, 2371, 2814, 241, 1851, 2372, 1253, 4807,
	1254, 4681, 1279, 4672, 4660, 4631, 3192, 3922, 2806, 2136,
	4431, 4384, 2136, 95, 4343, 4169, 4105, 3028, 2210, 2938,
	2153, 2117, 2133, 3127, 1303, 2306, 3046, 2936, 1986, 1560,
	2139, 1866, 4038, 3812, 3785, 1884, 2008, 2266, 1894, 1731,
	1303, 73, 3740, 2851, 243, 1873, 1875, 2850, 2849, 2848,
	2847, 1255, 1252, 241, 1090, 1089, 1088, 1087, 74, 1695,
	1755, 1890, 3741, 1891, 1086, 1085, 1084, 1080, 1079, 1078,
	1860, 1861, 1077, 1076, 79, 1075, 1074, 1677, 3236, 4445,
	1073, 1586, 1072, 1071, 1070, 1069, 1068, 1067, 1882, 1066,
	1065, 1064, 242, 1063, 1062, 4918, 1061, 2814, 1043, 981,
	1843, 1844, 243, 1866, 980, 73, 235, 979, 978, 977,
	1896, 976, 975, 974, 88, 236, 973, 3377, 3378, 972,
	971, 970, 74, 969, 968, 967, 966, 965, 2119, 2119,
	1846, 2119, 964, 2119, 963, 2119, 94, 2119, 79, 962,
	961, 1580, 960, 196, 959, 1573, 2709, 958, 957, 956,
	242, 1892, 955, 954, 953, 912, 952, 951, 950, 2677,
	949, 948, 947, 946, 99, 1845, 935, 934, 49, 933,
	110, 1881, 929, 928, 921, 920, 94, 107, 88, 919,
	904, 4260, 1896, 3315, 903, 860, 859, 858, 857, 1867,
	848, 847, 3392, 846, 845, 809, 800, 799, 798, 780,
	4217, 196, 2136, 265, 3968, 3377, 3378, 264, 3395, 3396,
	3397, 2136, 263, 262, 1159, 261, 260, 259, 258, 912,
	192, 102, 257, 256, 106, 255, 254, 1365, 1162, 253,
	252, 3937, 1136, 2136, 110, 251, 95, 250, 1872, 249,
	94, 107, 1574, 1574, 248, 247, 246, 245, 1898, 244,
	241, 3756, 2678, 3473, 3421, 1162, 1162, 1162, 913, 1565,
	1574, 1867, 3338, 153, 3321, 3312, 3216, 3377, 3378, 3106,
	2882, 2856, 1851, 1424, 2841, 2946, 2707, 1162, 3141, 2946,
	3392, 2693, 1370, 1162, 1546, 2495, 1365, 2691, 1885, 3383,
	1551, 2182, 4447, 2138, 2011, 1969, 1969, 1585, 3422, 243,
	95, 2034, 1968, 1968, 1406, 1407, 1408, 1929, 1938, 2139,
	2910, 1162, 2117, 1162, 2136, 1162, 2133, 1810, 2498, 1568,
	1898, 1410, 1546, 1842, 157, 1286, 4917, 4914, 1574, 1393,
	1972, 1967, 4684, 2679, 4892, 2676, 4876, 3738, 4771, 197,
	1847, 1848, 1849, 1850, 1852, 1853, 4669, 242, 1365, 1532,
	4663, 4661, 1629, 1303, 1936, 4540, 4493, 1579, 2136, 4452,
	4430, 235, 4275, 4240, 1527, 1571, 4239, 1578, 1546, 1584,
	236, 4233, 4232, 4231, 193, 1546, 4224, 3383, 4223, 4221,
	4216, 4213, 4212, 4102, 1162, 4116, 1162, 99, 3972, 3971,
	3970, 1546, 1883, 3377, 3378, 2806, 3393, 3947, 907, 1162,
	1303, 1162, 1857, 1858, 1864, 1886, 1863, 1859, 3913, 1856,
	1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 1337, 1340,
	1633, 1636, 1564, 1385, 3912, 3911, 3833, 4225, 3828, 3468,
	3414, 2876, 3405, 241, 1350, 2448, 3159, 1387, 1675, 3383,
	1680, 3376, 3399, 192, 102, 3373, 153, 106, 4026, 1546,
	3372, 99, 2944, 1693, 3370, 1698, 3365, 3364, 1278, 3363,
	3377, 3378, 1549, 841, 3377, 3378, 1699, 3360, 1930, 1162,
	1928, 1931, 1162, 241, 3357, 1896, 1280, 3337, 3320, 1519,
	3313, 913, 243, 3311, 3393, 3174, 153, 2842, 1417, 2664,
	1511, 1516, 1842, 3377, 3378, 1929, 2681, 2314, 1263, 2352,
	1379, 1841, 2312, 844, 5092, 5035, 5034, 192, 102, 184,
	184, 106, 1563, 4956, 1562, 4954, 1288, 3859, 241, 241,
	1756, 4831, 243, 1622, 3377, 3378, 4117, 3395, 3396, 3397,
	242, 4750, 3143, 4735, 4731, 4730, 241, 241, 269, 1700,
	241, 4036, 1664, 1666, 235, 913, 4201, 157, 4446, 4729,
	153, 4709, 4708, 236, 3394, 4706, 1639, 4683, 4682, 4657,
	2605, 4643, 197, 1896, 1681, 3383, 4640, 243, 243, 4639,
	242, 3419, 4632, 1162, 1162, 1162, 1162, 1162, 1162, 1162,
	1162, 196, 4620, 4619, 235, 243, 243, 4564, 1393, 243,
	4535, 1393, 4491, 236, 4474, 4473, 4414, 193, 4410, 3392,
	241, 2943, 4407, 4385, 241, 2943, 1162, 4259, 4238, 4170,
	1662, 157, 1162, 2675, 4024, 242, 242, 4023, 4004, 4003,
	4001, 196, 2943, 3928, 3916, 1896, 197, 1757, 1103, 235,
	235, 3823, 3383, 242, 242, 1916, 3383, 242, 236, 236,
	3757, 3749, 3394, 3715, 4117, 2891, 3626, 235, 235, 243,
	3582, 235, 1820, 243, 1655, 3549, 236, 236, 2611, 1371,
	236, 193, 3496, 3494, 1773, 3383, 196, 196, 1705, 3377,
	3378, 3342, 3393, 3341, 1676, 3336, 3302, 3120, 2971, 1975,
	1974, 1973, 1970, 1962, 196, 196, 1960, 2889, 196, 1694,
	1849, 1850, 1852, 1853, 2888, 2853, 3383, 242, 2880, 2846,
	2812, 242, 3388, 3386, 3387, 3379, 3380, 3381, 3382, 3384,
	3385, 235, 2689, 1915, 2033, 235, 1989, 1162, 1162, 1162,
	236, 1814, 1984, 1162, 236, 1983, 1918, 1982, 1981, 1980,
	1284, 1979, 1284, 1978, 1977, 2832, 1976, 1957, 3142, 3393,
	1956, 1722, 1955, 1954, 1953, 1952, 1951, 1424, 196, 1950,
	1949, 1896, 196, 4686, 2708, 1948, 1758, 1988, 1947, 1162,
	1946, 3399, 835, 1365, 1945, 1944, 1943, 1942, 2077, 835,
	241, 1365, 3393, 1365, 2037, 1931, 1821, 1917, 1914, 1909,
	1378, 1307, 1298, 3389, 3390, 3391, 4685, 2025, 1653, 4417,
	3388, 3386, 3387, 3379, 3380, 3381, 3382, 3384, 3385, 1817,
	4271, 4209, 4513, 3393, 3967, 3940, 1997, 3931, 1082, 3324,
	1825, 2844, 1824, 1658, 4273, 3966, 1930, 1081, 1896, 243,
	3492, 1912, 4345, 3744, 2029, 3585, 3377, 3378, 2045, 1819,
	3394, 1403, 3022, 1365, 1971, 2173, 5026, 4739, 4732, 1162,
	2044, 3383, 2050, 1843, 1844, 4633, 1838, 1839, 4450, 4388,
	4387, 1896, 4386, 4344, 4262, 3379, 3380, 3381, 3382, 3384,
	3385, 3465, 1405, 1162, 1994, 1995, 1103, 242, 4176, 4175,
	4910, 1424, 2173, 1846, 184, 4174, 3810, 4173, 4172, 4171,
	2199, 235, 1896, 2018, 2706, 3990, 3935, 3000, 3934, 2692,
	236, 2173, 3759, 2123, 241, 2690, 2125, 3394, 2171, 3758,
	4983, 1105, 2130, 1963, 1964, 3751, 2132, 3750, 1845, 3646,
	1398, 2135, 2180, 4981, 1399, 2165, 2164, 2051, 3158, 2173,
	2175, 2244, 2145, 1393, 2100, 241, 841, 4906, 1404, 1969,
	3394, 4664, 4662, 841, 4120, 2011, 1968, 2042, 1812, 4629,
	1282, 4050, 1282, 243, 1398, 3362, 3361, 2677, 3393, 1721,
	3284, 1952, 2982, 2038, 1401, 2019, 1952, 4019, 1937, 3058,
	2159, 3394, 4539, 2043, 2016, 3551, 844, 1059, 1250, 4701,
	3698, 2009, 3697, 844, 243, 1940, 4702, 2377, 3388, 3386,
	3387, 3379, 3380, 3381, 3382, 3384, 3385, 1987, 4702, 4623,
	2263, 242, 1103, 1774, 2121, 1398, 1730, 4939, 4428, 3670,
	3188, 4374, 2144, 1731, 2289, 235, 2028, 2027, 2026, 2024,
	2023, 2022, 2013, 1060, 236, 4110, 4124, 4099, 4056, 1546,
	1546, 4495, 242, 241, 2288, 3616, 4047, 1896, 1279, 1424,
	1279, 2147, 4029, 2404, 1395, 2057, 235, 3782, 2168, 3518,
	2678, 2382, 196, 2320, 3426, 236, 3386, 3387, 3379, 3380,
	3381, 3382, 3384, 3385, 3381, 3382, 3384, 3385, 3861, 4329,
	3330, 2672, 4559, 2980, 4531, 2887, 1657, 4326, 2056, 1985,
	2353, 1965, 243, 196, 3678, 2243, 2106, 3024, 2108, 4915,
	3387, 3379, 3380, 3381, 3382, 3384, 3385, 2346, 1632, 2143,
	1556, 2210, 2240, 1374, 2248, 1336, 4930, 4927, 3734, 3995,
	2258, 4724, 3389, 3390, 3391, 1262, 3394, 3043, 3040, 3388,
	3386, 3387, 3379, 3380, 3381, 3382, 3384, 3385, 241, 1400,
	242, 2679, 3038, 2676, 4434, 4838, 1546, 2253, 1546, 3554,
	1546, 2176, 2166, 2250, 235, 2299, 2304, 4014, 2141, 3155,
	1658, 2253, 899, 236, 2513, 2204, 4916, 3653, 1546, 1546,
	4985, 4984, 4562, 4588, 4558, 2170, 2216, 1039, 4537, 3804,
	3522, 1546, 2476, 2208, 2473, 4331, 1405, 243, 1607, 1599,
	1771, 196, 2924, 1546, 4069, 1546, 1546, 1546, 2462, 1396,
	2942, 1772, 2160, 2956, 1057, 841, 2291, 2292, 1397, 1055,
	1101, 2460, 1053, 2169, 1051, 2940, 1048, 2253, 1709, 835,
	5088, 2238, 4740, 4581, 2942, 2511, 3215, 4570, 2251, 1558,
	2513, 4377, 1405, 4376, 4067, 242, 4066, 4058, 2474, 2940,
	4044, 1162, 4043, 3098, 2342, 844, 4041, 4040, 4028, 235,
	3524, 3987, 1404, 2293, 1563, 2347, 1562, 5018, 236, 3986,
	3584, 4963, 4068, 2359, 2237, 2475, 2234, 2249, 3659, 900,
	3658, 1164, 2403, 2257, 2148, 1608, 1162, 3379, 3380, 3381,
	3382, 3384, 3385, 3493, 3998, 3618, 196, 3486, 2881, 2380,
	3335, 2511, 1770, 2449, 3334, 3333, 4325, 3332, 1404, 3288,
	3056, 1100, 3055, 2305, 2681, 3045, 3034, 4560, 3026, 4532,
	2509, 3016, 1162, 4327, 1162, 3015, 3010, 3009, 3008, 2987,
	2959, 1162, 2986, 1354, 2077, 2077, 1424, 2947, 1162, 1162,
	1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162,
	1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162,
	1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162,
	1162, 1162, 1162, 1162, 2408, 1162, 2327, 1162, 1162, 1162,
	1162, 2328, 2356, 1517, 2433, 3551, 1531, 1354, 2512, 2369,
	241, 2252, 2868, 841, 2361, 1398, 2390, 2396, 1662, 2497,
	1662, 2289, 2365, 1162, 2367, 2252, 2586, 1162, 1162, 2515,
	2377, 1707, 2395, 1399, 1379, 1162, 1103, 772, 1103, 1162,
	2235, 1162, 1162, 1657, 2373, 3614, 2374, 1102, 1655, 1424,
	2364, 2675, 2364, 844, 772, 1162, 1162, 1162, 1162, 243,
	2722, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 3385,
	1818, 4346, 1843, 1844, 2512, 2209, 2997, 2998, 1354, 1354,
	5021, 2252, 2510, 2721, 2543, 2597, 1853, 1162, 1162, 1162,
	1162, 1162, 1162, 1162, 1162, 1162, 2412, 5019, 2502, 2423,
	1162, 4964, 1846, 1723, 2206, 3004, 2210, 242, 3152, 4472,
	2653, 2654, 1284, 2997, 2998, 2241, 2595, 4280, 1645, 1424,
	1644, 235, 2895, 4598, 2653, 2669, 2456, 2984, 1284, 4310,
	236, 1702, 2997, 2998, 1278, 2672, 1278, 1845, 2202, 1559,
	1643, 4287, 1642, 2326, 1162, 1424, 2526, 2872, 2510, 2539,
	2540, 2717, 1280, 1395, 1280, 2485, 2958, 4328, 196, 2236,
	2177, 2178, 1603, 4303, 1811, 1388, 3783, 2488, 2207, 1322,
	2763, 2763, 2777, 1045, 2653, 2493, 2400, 2798, 2800, 1808,
	5022, 2499, 2501, 2804, 2500, 2507, 2514, 1082, 1769, 1753,
	1082, 1082, 1616, 2617, 2246, 2931, 2530, 2203, 1422, 2531,
	2532, 2420, 2601, 3195, 2668, 4286, 902, 901, 3615, 2829,
	2858, 1621, 2601, 1731, 4984, 3231, 1731, 1783, 4304, 720,
	1999, 3261, 2871, 1787, 2970, 2466, 2454, 2854, 2609, 1719,
	1099, 1823, 2583, 5050, 4717, 2607, 2417, 5020, 1400, 2411,
	3042, 5030, 3276, 1377, 1851, 715, 2969, 2366, 3792, 1703,
	1365, 1365, 2029, 3791, 2918, 2413, 2719, 3233, 2591, 2613,
	3242, 2720, 1207, 2821, 2723, 2681, 2724, 2725, 3521, 771,
	1628, 2894, 3041, 3039, 4692, 2666, 4375, 4025, 4042, 2018,
	3850, 2487, 2592, 4039, 1766, 1103, 771, 3037, 2593, 1753,
	2897, 5024, 2598, 1424, 1399, 1103, 5005, 1752, 1396, 1103,
	944, 2941, 2820, 2875, 2957, 2003, 2916, 1397, 4912, 184,
	3975, 3962, 4079, 3665, 2913, 2421, 3657, 4996, 2414, 1111,
	3612, 3044, 1282, 1626, 2772, 2789, 3007, 2905, 2802, 2077,
	2985, 2759, 4011, 2909, 2311, 2310, 2893, 2494, 1282, 936,
	2828, 3299, 2833, 1393, 2843, 2839, 2840, 2920, 2826, 2827,
	2822, 2810, 2811, 2006, 2461, 1750, 1250, 2883, 2921, 4719,
	2016, 1049, 3268, 3269, 1971, 937, 1049, 2459, 2001, 1049,
	4080, 1050, 3297, 1049, 3245, 4599, 2267, 1424, 3275, 773,
	2927, 2274, 5004, 2866, 2232, 4471, 2004, 4597, 1103, 5052,
	4323, 1546, 3786, 4595, 2245, 1031, 773, 1752, 4971, 1708,
	2948, 1365, 2929, 2983, 2581, 3089, 4191, 2584, 807, 4190,
	1279, 2247, 3666, 4078, 1395, 3731, 2890, 3732, 1751, 1095,
	3663, 2210, 1162, 1162, 2915, 1162, 1279, 4299, 2904, 2002,
	1896, 2484, 2907, 4300, 2908, 1155, 3239, 1963, 1964, 2930,
	2922, 4594, 2242, 2681, 4305, 2912, 2899, 2244, 1843, 1844,
	835, 4009, 1365, 3020, 2914, 1605, 3131, 2580, 2118, 4803,
	2928, 3601, 3035, 2945, 897, 3593, 896, 3441, 4596, 4815,
	3124, 1874, 1784, 3538, 3107, 3093, 3005, 3110, 1846, 3112,
	2594, 2989, 1531, 1546, 1398, 2239, 4302, 2230, 4913, 2925,
	2596, 5023, 1292, 2208, 4522, 2268, 1546, 5028, 1546, 1400,
	3731, 3023, 3012, 4306, 1899, 3011, 3139, 1294, 4725, 2284,
	2264, 1032, 3244, 1845, 3294, 1546, 3101, 2779, 2246, 3602,
	4747, 3103, 805, 3594, 2990, 3014, 3157, 2951, 2974, 3157,
	2961, 2964, 1531, 3094, 1289, 2999, 3001, 3002, 3003, 1365,
	3051, 1365, 2988, 3241, 3295, 2231, 3057, 4883, 3300, 4884,
	3186, 3090, 3091, 1602, 2005, 3006, 2919, 2486, 1628, 1396,
	1321, 3135, 3600, 1162, 3629, 3185, 3592, 2283, 1397, 3566,
	3523, 3013, 3572, 770, 2247, 1781, 3092, 1958, 3018, 4404,
	1295, 841, 2942, 3196, 3197, 3025, 2213, 3032, 2229, 938,
	939, 2419, 3847, 4911, 3203, 3204, 3205, 2962, 716, 4321,
	3219, 2243, 1732, 1557, 3048, 3129, 1296, 3193, 3049, 3050,
	5029, 3229, 3189, 3198, 841, 3199, 4324, 1785, 3213, 3099,
	1851, 844, 184, 1305, 3490, 3180, 4970, 3565, 3574, 1162,
	1563, 4468, 3104, 4718, 4301, 1162, 1162, 2245, 3650, 1704,
	2264, 739, 4187, 2200, 2214, 4484, 5031, 4994, 1293, 3118,
	3243, 4801, 4849, 3664, 844, 3170, 3128, 2582, 1037, 1036,
	1847, 1848, 1849, 1850, 1852, 1853, 3290, 3440, 2455, 1873,
	1875, 4356, 2035, 3848, 4311, 4312, 2600, 5048, 4949, 2218,
	717, 1046, 3247, 3161, 3249, 3539, 2608, 2212, 4950, 3171,
	945, 1162, 1162, 2663, 3573, 4802, 3340, 1162, 1718, 1720,
	1822, 2857, 2222, 2264, 1908, 1033, 2416, 1782, 2825, 2410,
	1162, 1162, 1376, 1786, 5053, 3190, 1162, 1162, 2838, 3210,
	2271, 1102, 1162, 3150, 3169, 1662, 3863, 1866, 4421, 5037,
	718, 4416, 719, 4510, 3212, 3221, 3296, 3223, 3168, 3225,
	4181, 3227, 3228, 4380, 806, 1398, 3298, 3099, 4422, 3222,
	1999, 3224, 3220, 3226, 3963, 2209, 1093, 2260, 1031, 2219,
	3019, 2003, 4322, 1311, 3237, 4092, 1309, 1162, 1162, 1162,
	4192, 3806, 4467, 1162, 3166, 4090, 3259, 4010, 2269, 3291,
	4768, 4761, 1095, 1162, 2259, 4092, 4855, 3183, 1706, 4785,
	1031, 940, 941, 922, 808, 4090, 2183, 4642, 804, 3323,
	1162, 3267, 3250, 4405, 1737, 3252, 1896, 4379, 3258, 2006,
	4378, 4138, 3719, 3504, 1095, 2345, 3257, 2865, 2255, 927,
	2334, 2270, 1996, 1120, 2823, 3256, 1308, 2119, 1094, 3262,
	1301, 2526, 1034, 4969, 4753, 2003, 2681, 3277, 707, 4589,
	4115, 1832, 2004, 1833, 3217, 3902, 3218, 4754, 2207, 1832,
	4236, 3318, 3319, 4188, 1827, 2529, 3322, 2211, 4094, 1035,
	2161, 5058, 3478, 4557, 4651, 2158, 1278, 3545, 3953, 2223,
	1290, 4699, 4139, 4062, 1032, 3314, 4045, 2256, 4094, 3996,
	3994, 4755, 1278, 2006, 1280, 1867, 3720, 3711, 3289, 4093,
	3541, 3140, 1162, 1162, 1162, 1162, 3134, 3122, 2001, 2963,
	1280, 2360, 1162, 1162, 1162, 2354, 1032, 1162, 2348, 4093,
	2340, 2319, 1038, 2318, 3054, 4469, 2004, 1162, 1284, 1424,
	2519, 3846, 3954, 1162, 1291, 1162, 3433, 3434, 4769, 4636,
	1596, 3983, 2816, 1313, 1284, 2224, 2225, 3917, 779, 4948,
	2156, 4821, 3807, 2946, 1898, 1831, 1832, 4757, 4788, 3955,
	2991, 3952, 1424, 1831, 2308, 2467, 2154, 4141, 4439, 2002,
	4193, 2220, 3119, 1324, 1284, 3957, 2819, 1424, 4419, 4615,
	4756, 4613, 4534, 3329, 3557, 3553, 1103, 3552, 3930, 1365,
	3282, 2472, 3260, 2401, 3438, 4088, 2157, 3437, 4758, 2077,
	3416, 1760, 1759, 1424, 3458, 2393, 2383, 2316, 1754, 2864,
	2863, 1637, 1100, 1365, 2862, 2861, 3435, 2818, 2221, 2860,
	2005, 1365, 2817, 1651, 1638, 3506, 4098, 1833, 1649, 4395,
	1908, 1037, 1036, 3126, 3471, 1833, 943, 4546, 4712, 2967,
	4111, 4002, 2358, 1162, 1854, 1855, 1847, 1848, 1849, 1850,
	1852, 1853, 3903, 923, 924, 4194, 3673, 1162, 4991, 4520,
	1831, 2199, 3904, 1037, 1036, 4519, 3097, 4237, 1365, 2282,
	2520, 3503, 3540, 3445, 2077, 3488, 4091, 3194, 1033, 3991,
	3102, 3100, 2387, 2288, 4617, 3472, 5057, 1712, 4827, 3467,
	3630, 1162, 3519, 4542, 2005, 3443, 4091, 2199, 4713, 4529,
	4541, 3411, 3412, 3413, 3449, 4835, 3525, 1365, 4818, 4243,
	1033, 3590, 3919, 3480, 3481, 3482, 3483, 3512, 2688, 3464,
	3508, 3476, 4266, 3510, 3511, 1393, 3427, 4511, 3514, 1365,
	3515, 1365, 3516, 3604, 3442, 3606, 2992, 2993, 1282, 4770,
	4635, 2226, 3984, 1804, 4547, 4857, 4530, 1162, 1162, 3579,
	3580, 2263, 3581, 3617, 1282, 1424, 3556, 4616, 2263, 3561,
	2480, 4995, 3563, 3444, 4993, 1738, 1365, 3956, 3456, 4932,
	3640, 3542, 1806, 1803, 3459, 3460, 1801, 1365, 1778, 4828,
	4743, 3648, 1776, 1748, 1282, 3462, 1746, 3463, 1744, 4714,
	1742, 3587, 3497, 3498, 3491, 3499, 849, 4733, 1740, 1734,
	3450, 4517, 1728, 3623, 3624, 1034, 3625, 1546, 4490, 3479,
	3569, 2458, 3591, 4277, 1726, 1647, 3457, 2227, 4235, 2071,
	1365, 1546, 856, 1546, 3509, 3513, 1279, 1424, 4097, 3408,
	1092, 2189, 1035, 3520, 835, 1546, 2190, 1034, 778, 3822,
	3610, 2542, 1279, 3780, 3992, 3627, 3526, 1546, 3779, 3619,
	3501, 1354, 3448, 3455, 4759, 925, 926, 3371, 3301, 1365,
	4760, 3123, 3033, 3712, 1035, 3027, 1650, 3605, 2981, 3548,
	2280, 1648, 1279, 2892, 2489, 4601, 1284, 2378, 2036, 942,
	3727, 3575, 3725, 2032, 1807, 1038, 3454, 1688, 3583, 3537,
	3409, 3802, 3801, 1827, 3485, 2425, 2297, 3235, 3234, 3596,
	1354, 1546, 3710, 3631, 3201, 2508, 1765, 3599, 2428, 2339,
	2687, 2317, 2107, 1546, 2105, 1546, 1941, 1038, 3500, 1701,
	1620, 4904, 3597, 4357, 3703, 2043, 3598, 3622, 4049, 4048,
	3589, 4266, 1354, 1354, 2684, 4361, 3718, 3668, 3628, 3671,
	3613, 4341, 4817, 2482, 4437, 3645, 3641, 4366, 2481, 3736,
	2191, 4432, 3603, 4354, 3014, 3655, 3649, 3529, 3530, 4292,
	1805, 1802, 1424, 4291, 1800, 1424, 1777, 3843, 2195, 4137,
	1775, 1747, 4128, 3747, 1745, 4065, 1743, 4046, 1741, 3555,
	1047, 3656, 3559, 4017, 4015, 3794, 1739, 1733, 3993, 3639,
	1727, 3714, 3721, 3709, 2457, 3451, 3452, 3453, 841, 1162,
	3647, 3784, 1725, 1646, 3699, 1162, 1162, 3153, 2989, 1162,
	1162, 1162, 3654, 1162, 3675, 3777, 3145, 3775, 3138, 3130,
	3728, 3708, 1162, 2077, 3706, 3115, 3114, 1517, 3707, 3095,
	2855, 1162, 3660, 184, 184, 2911, 1162, 2906, 844, 2315,
	2313, 2290, 1424, 2192, 2197, 2265, 850, 851, 3733, 4967,
	2228, 1162, 3800, 2215, 2201, 2140, 3632, 3742, 3634, 1424,
	2137, 3638, 2134, 2131, 1531, 3644, 3745, 3746, 2126, 2077,
	2077, 1162, 1162, 3799, 1162, 1162, 1162, 3726, 2424, 2296,
	2124, 2120, 2111, 3724, 3642, 2277, 1282, 4962, 4888, 2274,
	2049, 1836, 1162, 3280, 4985, 2162, 1162, 1259, 2077, 2077,
	1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162,
	1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162,
	3825, 1162, 3808, 1260, 3875, 3667, 3876, 2193, 4711, 1162,
	1162, 2077, 3778, 3788, 4421, 3789, 1162, 3790, 3683, 1103,
	3735, 1052, 1054, 1056, 2150, 2151, 3253, 1162, 3835, 3836,
	3251, 3805, 2492, 3088, 4422, 4869, 4779, 4453, 1284, 1284,
	4373, 4281, 1162, 3184, 2181, 1601, 3797, 2942, 2942, 4653,
	2968, 4646, 4149, 2210, 1279, 3803, 3183, 2415, 2937, 2200,
	2074, 2357, 2940, 2965, 1344, 3183, 1798, 1799, 1345, 3281,
	2452, 2447, 3830, 4868, 1424, 853, 852, 2422, 2490, 4332,
	3832, 3949, 1837, 3643, 2278, 4368, 1724, 1365, 1365, 2972,
	3842, 4671, 1843, 1844, 3849, 3851, 3852, 3858, 4544, 3914,
	1531, 4244, 1365, 1365, 3936, 835, 1365, 3865, 4222, 3570,
	2973, 1354, 2994, 3527, 1261, 1840, 1843, 1844, 2198, 4979,
	3853, 2973, 1846, 3873, 2491, 1162, 1372, 3874, 1312, 4061,
	266, 4940, 3113, 4125, 3878, 3921, 3880, 2341, 1383, 3906,
	854, 855, 3040, 3872, 2539, 3866, 1345, 2149, 3038, 1345,
	1162, 4060, 3047, 3029, 3915, 3031, 3528, 1845, 2977, 2975,
	184, 4826, 1278, 4808, 1531, 4543, 1531, 3907, 3030, 4778,
	4772, 2976, 4710, 2539, 3881, 4637, 4608, 704, 1278, 4521,
	1280, 1845, 4135, 1162, 1162, 4127, 4114, 3946, 3713, 3926,
	3927, 3923, 3924, 3160, 2803, 2146, 1280, 2058, 5025, 4859,
	3017, 1555, 1554, 1096, 4860, 3981, 3910, 3489, 1278, 3982,
	2282, 5056, 3377, 3378, 1843, 1844, 3938, 4859, 4774, 1162,
	1162, 1565, 4860, 4214, 4998, 2683, 1280, 1162, 1711, 3997,
	2934, 2935, 3965, 2065, 1710, 2071, 2071, 2932, 2933, 1170,
	2934, 2932, 2718, 2194, 4134, 4638, 4582, 1546, 1282, 1282,
	1780, 1546, 4370, 1779, 1546, 4016, 4365, 4018, 4364, 1365,
	3976, 4210, 3964, 4076, 3854, 3636, 4030, 3633, 1935, 841,
	1934, 3255, 2496, 5041, 5006, 4874, 4812, 4811, 3939, 4810,
	3969, 4742, 4741, 4688, 2077, 273, 273, 273, 4611, 710,
	711, 4574, 726, 710, 726, 737, 4514, 4508, 777, 4035,
	4037, 4412, 797, 4063, 4392, 4330, 4272, 803, 4165, 844,
	4057, 4155, 4101, 4013, 273, 4005, 3717, 3716, 3562, 3507,
	3240, 3232, 3209, 4022, 4084, 4051, 1546, 3208, 3207, 3206,
	4064, 3144, 1162, 3117, 4142, 918, 1279, 1279, 4081, 4082,
	1284, 1162, 273, 4151, 4027, 3116, 4107, 2966, 2902, 2896,
	4034, 1546, 1546, 1546, 2989, 2885, 2884, 2873, 1546, 1546,
	1546, 2612, 2483, 4070, 4077, 2453, 4158, 4130, 2446, 2445,
	2444, 4096, 2443, 2442, 2355, 4086, 2329, 2325, 4095, 2324,
	1546, 4121, 2323, 4100, 2322, 2321, 1424, 2114, 2113, 2112,
	2110, 4143, 3960, 3961, 2048, 2047, 3051, 1797, 4146, 1796,
	1735, 1615, 1614, 1613, 1612, 1611, 4074, 3973, 3974, 1610,
	1609, 3980, 4109, 1424, 1604, 4085, 1162, 1162, 1600, 4131,
	4113, 4166, 1162, 1162, 2077, 4122, 1598, 1162, 1162, 1597,
	1162, 1536, 4162, 1535, 4180, 1162, 1534, 1415, 4145, 1414,
	1413, 1412, 1411, 1375, 1331, 1330, 1162, 4126, 1329, 1328,
	1327, 1326, 1325, 1323, 1318, 1317, 1316, 1315, 4129, 1921,
	1314, 1242, 1162, 1926, 911, 8, 2152, 1058, 1044, 4716,
	4144, 4309, 4308, 4307, 2479, 710, 710, 4177, 4147, 3548,
	93, 1606, 4075, 273, 4153, 4178, 4152, 873, 4157, 4195,
	87, 4163, 2272, 4012, 4164, 1010, 4179, 4856, 4746, 1589,
	881, 4837, 4123, 4196, 3564, 3059, 2427, 1736, 2429, 3466,
	1278, 2845, 4800, 4208, 4218, 3339, 4678, 4483, 2686, 1939,
	3420, 4204, 89, 1284, 1146, 1192, 4403, 4402, 1280, 4293,
	3999, 1284, 3686, 4399, 4189, 1424, 1424, 4398, 1424, 2062,
	2064, 1110, 1427, 4882, 2163, 1284, 5047, 1152, 2179, 2172,
	1282, 2886, 2762, 1169, 4249, 1166, 1546, 1546, 2066, 2068,
	1168, 1167, 2067, 1959, 1165, 2061, 4133, 3164, 3743, 1424,
	1656, 1654, 1012, 2167, 2606, 2670, 3328, 1932, 1126, 1148,
	2667, 1306, 1137, 1125, 4184, 3446, 3425, 3730, 3945, 1531,
	1531, 1162, 2518, 891, 3374, 2673, 2074, 2074, 1297, 2786,
	2778, 2774, 1284, 3517, 1284, 3471, 3154, 1813, 4267, 4268,
	2071, 4234, 4497, 1910, 3165, 1809, 1409, 1130, 2604, 1923,
	3306, 4270, 2528, 3737, 3469, 4252, 4254, 2879, 4862, 1365,
	4320, 3862, 3238, 4340, 4276, 2333, 3166, 4279, 1279, 1424,
	4285, 1365, 1258, 2523, 1365, 4349, 1257, 1304, 4352, 4336,
	4337, 4241, 4319, 3183, 1256, 4843, 1162, 184, 4248, 1424,
	4840, 4251, 4316, 1531, 4316, 4257, 4246, 4247, 2262, 4406,
	3681, 3682, 4258, 2155, 4245, 2926, 4261, 2616, 3700, 1142,
	1530, 2471, 4250, 3795, 3432, 3431, 4112, 1617, 2345, 4265,
	802, 4334, 4551, 1154, 4290, 1895, 3084, 3083, 1546, 1546,
	4288, 4705, 4278, 1394, 1392, 4284, 1391, 1390, 4359, 5015,
	3053, 2275, 4008, 4007, 4006, 240, 3274, 3461, 1834, 1826,
	237, 239, 238, 3568, 3950, 3475, 1365, 4938, 4032, 3672,
	4423, 23, 3474, 1282, 22, 21, 116, 42, 1424, 4372,
	4335, 1282, 20, 1546, 155, 133, 4350, 4393, 152, 4363,
	151, 4440, 125, 150, 4355, 1282, 149, 148, 3495, 147,
	154, 4390, 146, 145, 140, 144, 143, 142, 4411, 2065,
	2065, 141, 1546, 1546, 1546, 1546, 1546, 1546, 4429, 139,
	137, 4425, 4353, 4424, 138, 4383, 132, 136, 1424, 2780,
	135, 134, 1278, 1278, 4389, 131, 130, 129, 128, 127,
	1162, 1162, 1162, 126, 4448, 4382, 4381, 124, 4441, 156,
	1280, 1280, 1282, 123, 1282, 4391, 122, 121, 1424, 120,
	4401, 1279, 4397, 1162, 1354, 119, 1162, 1162, 4435, 1279,
	4415, 4413, 4408, 4426, 118, 4444, 1162, 117, 4409, 2077,
	790, 791, 61, 1279, 1162, 1162, 60, 115, 113, 114,
	19, 4339, 40, 14, 4442, 65, 66, 18, 13, 35,
	92, 1424, 4449, 1546, 4348, 105, 104, 4351, 103, 36,
	4456, 101, 100, 34, 4475, 4455, 17, 16, 1365, 15,
	4463, 98, 97, 96, 4282, 4283, 4464, 33, 31, 4458,
	11, 9, 37, 4462, 2020, 12, 4470, 1424, 5, 189,
	1279, 188, 1279, 191, 187, 1162, 190, 91, 186, 185,
	90, 29, 10, 4333, 181, 4627, 4119, 82, 1162, 183,
	182, 180, 4480, 179, 1531, 178, 83, 1162, 80, 177,
	86, 176, 2077, 81, 85, 84, 4492, 27, 6, 64,
	7, 4465, 1162, 4503, 4504, 1162, 4486, 3781, 108, 109,
	38, 78, 1299, 77, 76, 75, 26, 63, 25, 1162,
	173, 221, 1162, 4369, 220, 4371, 4524, 219, 4525, 1424,
	218, 2074, 217, 4554, 216, 215, 4506, 1365, 4507, 214,
	209, 4591, 3474, 213, 211, 210, 1320, 1546, 1546, 1546,
	212, 208, 4523, 231, 4573, 230, 4533, 2199, 273, 4526,
	273, 273, 4396, 1349, 273, 1359, 224, 223, 1284, 229,
	228, 227, 226, 225, 222, 234, 1373, 207, 4600, 206,
	205, 203, 199, 202, 797, 204, 201, 797, 4587, 4565,
	4566, 200, 4610, 198, 233, 232, 4621, 4626, 1424, 72,
	171, 1546, 172, 71, 4614, 170, 169, 168, 167, 4647,
	166, 273, 165, 273, 273, 1349, 4618, 273, 273, 164,
	4575, 70, 4576, 4583, 1359, 4585, 175, 4586, 4316, 174,
	24, 4584, 4652, 4634, 1162, 1162, 2, 4602, 273, 4603,
	1567, 1, 4592, 0, 0, 4612, 0, 0, 0, 0,
	4607, 1162, 2077, 0, 1278, 0, 1587, 4630, 0, 0,
	4625, 0, 0, 1594, 4605, 4606, 4648, 0, 0, 4571,
	0, 4650, 1280, 1365, 0, 0, 1365, 3796, 1365, 1365,
	1422, 0, 1619, 0, 0, 1359, 0, 4563, 4644, 273,
	273, 4656, 1349, 4658, 4649, 4655, 1162, 4654, 1162, 4444,
	1162, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	1284, 0, 0, 797, 0, 273, 273, 4667, 4668, 4666,
	4577, 4700, 0, 1162, 0, 1284, 0, 1682, 0, 4698,
	0, 0, 0, 0, 0, 0, 0, 1689, 0, 0,
	0, 0, 918, 4516, 0, 0, 0, 0, 0, 4676,
	0, 0, 0, 0, 4670, 0, 0, 3839, 0, 0,
	4590, 0, 0, 0, 0, 4697, 4696, 0, 0, 0,
	4316, 0, 0, 4728, 3855, 0, 0, 0, 1282, 4727,
	1284, 1284, 2610, 0, 0, 4316, 0, 0, 4693, 4721,
	0, 4749, 4720, 4734, 1162, 0, 0, 0, 1921, 0,
	0, 1284, 4751, 0, 1284, 0, 0, 0, 1546, 0,
	0, 0, 0, 0, 4736, 0, 0, 0, 1546, 4738,
	273, 0, 4748, 0, 0, 0, 0, 0, 4764, 4765,
	2071, 0, 1162, 1162, 0, 0, 4744, 1278, 0, 0,
	4316, 4316, 1162, 4737, 273, 1278, 0, 0, 4796, 4782,
	4797, 4780, 4784, 2785, 4762, 1280, 0, 4773, 0, 1278,
	4775, 4316, 4781, 1280, 4316, 4776, 1279, 0, 4630, 0,
	0, 1354, 3683, 4789, 0, 0, 4790, 1280, 0, 0,
	4795, 4794, 4793, 0, 0, 0, 0, 4792, 3264, 0,
	0, 0, 1162, 1162, 0, 4813, 1162, 4805, 0, 0,
	1546, 1365, 0, 4809, 1365, 2071, 0, 0, 0, 3948,
	4834, 4814, 0, 0, 4816, 4804, 1278, 0, 1278, 0,
	1282, 4842, 4845, 0, 0, 4824, 4825, 0, 0, 0,
	0, 4865, 4861, 4832, 1280, 1282, 1280, 4833, 4858, 0,
	0, 0, 4847, 0, 0, 0, 0, 0, 2345, 0,
	0, 0, 0, 0, 4851, 0, 0, 4887, 4885, 0,
	0, 0, 1162, 1162, 1162, 0, 0, 0, 0, 2780,
	2780, 0, 0, 0, 0, 4846, 0, 0, 4687, 4850,
	0, 4689, 4870, 4690, 4691, 0, 4871, 0, 0, 4878,
	1282, 1282, 4873, 4875, 4886, 0, 0, 0, 0, 1162,
	0, 0, 0, 4919, 0, 4899, 4900, 4924, 1279, 0,
	4902, 1282, 4901, 0, 1282, 0, 4852, 4920, 0, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 4945, 2199, 4946, 0, 4921, 0, 4947, 0,
	0, 0, 0, 4922, 0, 4953, 4955, 0, 710, 0,
	0, 0, 4959, 0, 4937, 0, 1162, 0, 0, 0,
	4952, 4935, 0, 0, 1365, 4951, 0, 0, 4610, 273,
	4968, 273, 0, 0, 0, 273, 0, 0, 1279, 1279,
	4961, 0, 4960, 0, 0, 4986, 0, 0, 1567, 1349,
	2040, 273, 4978, 273, 2046, 4974, 4975, 4982, 4980, 1279,
	0, 273, 1279, 726, 4977, 0, 4988, 4934, 273, 0,
	4936, 4989, 0, 5002, 4992, 1284, 5001, 1284, 4842, 4990,
	5009, 4845, 0, 0, 2115, 5000, 5011, 0, 4965, 0,
	4999, 4997, 0, 5007, 5003, 5008, 273, 0, 0, 0,
	0, 5017, 0, 273, 0, 5016, 0, 0, 0, 0,
	0, 2780, 2780, 2780, 2780, 0, 1365, 0, 0, 0,
	0, 0, 0, 5010, 5032, 5012, 5033, 3303, 3304, 5040,
	0, 0, 0, 5039, 0, 4316, 797, 4316, 0, 0,
	5043, 0, 0, 0, 0, 0, 1162, 1162, 5038, 5051,
	5042, 2074, 0, 5049, 0, 1162, 1162, 0, 5045, 0,
	5054, 0, 0, 0, 5065, 0, 4853, 5059, 4864, 4854,
	0, 5070, 5069, 5071, 5063, 5067, 1354, 5075, 5072, 5074,
	0, 5073, 0, 0, 0, 0, 5066, 0, 0, 0,
	5068, 0, 5079, 1365, 5080, 5084, 5081, 5083, 0, 5087,
	5085, 5078, 5082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5090, 1162, 2071, 0, 0, 5094, 0, 5096,
	5087, 5098, 0, 2189, 0, 0, 2074, 0, 2190, 5091,
	0, 0, 0, 0, 0, 0, 0, 5093, 5060, 5061,
	0, 0, 0, 2345, 0, 0, 0, 0, 0, 0,
	0, 0, 5062, 0, 0, 0, 0, 0, 0, 0,
	2071, 2071, 0, 0, 0, 3077, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1278, 0, 0, 1282, 0, 1282, 0, 2071,
	2071, 0, 4310, 0, 0, 0, 5095, 0, 3067, 3065,
	1280, 0, 0, 0, 0, 3069, 3071, 3061, 0, 3401,
	3402, 3403, 3404, 0, 0, 0, 273, 0, 0, 0,
	273, 0, 2071, 0, 2065, 0, 4303, 0, 0, 4976,
	4296, 0, 0, 4256, 0, 0, 0, 0, 0, 0,
	0, 0, 2191, 0, 0, 3772, 0, 4294, 3085, 0,
	0, 0, 2785, 0, 0, 0, 4298, 0, 3770, 0,
	2195, 0, 4864, 0, 4274, 0, 0, 0, 3763, 1117,
	0, 0, 0, 1279, 0, 1279, 273, 0, 0, 0,
	273, 4304, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	273, 0, 0, 0, 710, 0, 273, 0, 0, 0,
	0, 5036, 0, 0, 1278, 4297, 0, 0, 797, 0,
	0, 0, 918, 2785, 2785, 2192, 2197, 0, 3166, 1278,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 3774, 0, 0, 0, 0, 0, 1280, 0, 0,
	0, 273, 0, 1349, 273, 0, 0, 3765, 3166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 797, 0,
	0, 0, 3764, 0, 0, 273, 0, 0, 0, 3063,
	0, 0, 0, 2426, 1278, 1278, 0, 0, 273, 273,
	3079, 273, 0, 273, 0, 273, 0, 273, 0, 0,
	0, 0, 1280, 1280, 0, 1278, 0, 0, 1278, 2193,
	0, 0, 0, 3078, 3068, 3066, 3070, 3072, 3062, 3064,
	3080, 3082, 2463, 1280, 0, 2464, 1280, 2465, 3773, 0,
	0, 3074, 3076, 0, 0, 0, 0, 0, 0, 273,
	273, 273, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3578, 0, 0,
	0, 2200, 0, 0, 0, 2074, 3086, 0, 777, 1843,
	1844, 0, 797, 1422, 0, 0, 0, 0, 0, 0,
	4299, 0, 0, 0, 0, 2071, 4300, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 4305, 0, 1846,
	0, 275, 0, 4481, 0, 2785, 2785, 2785, 2785, 2780,
	2780, 2074, 2074, 0, 0, 3576, 0, 0, 0, 0,
	2198, 0, 0, 0, 0, 1899, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 3772, 0, 0, 4302,
	2074, 2074, 0, 0, 1865, 0, 4481, 0, 0, 3770,
	0, 0, 0, 1862, 0, 0, 4306, 0, 3577, 3763,
	0, 1531, 0, 0, 0, 2618, 0, 0, 0, 0,
	0, 0, 0, 2074, 0, 3377, 3378, 0, 3395, 3396,
	3397, 3081, 2542, 0, 0, 0, 0, 0, 0, 3771,
	3766, 3767, 3768, 3769, 0, 0, 0, 0, 0, 2780,
	2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780,
	2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 0,
	2780, 0, 0, 0, 0, 2071, 0, 0, 0, 0,
	0, 1868, 1869, 1870, 1871, 0, 710, 0, 2065, 0,
	0, 1851, 3774, 0, 0, 2194, 0, 3087, 0, 0,
	3392, 273, 0, 0, 2542, 0, 3073, 3075, 3765, 0,
	710, 0, 0, 0, 0, 0, 0, 273, 0, 710,
	0, 0, 0, 3764, 0, 0, 0, 1354, 0, 0,
	0, 273, 0, 0, 2065, 2065, 0, 4301, 0, 0,
	1873, 1875, 0, 0, 0, 0, 0, 0, 0, 1124,
	0, 0, 273, 1359, 0, 0, 0, 3818, 3819, 0,
	0, 0, 0, 2065, 2065, 1860, 1861, 0, 0, 1278,
	0, 1278, 0, 0, 0, 0, 0, 4311, 4312, 3773,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 1280,
	0, 0, 0, 0, 0, 0, 2065, 3383, 1866, 0,
	0, 273, 1359, 0, 0, 726, 0, 726, 0, 0,
	0, 2901, 0, 0, 0, 0, 0, 273, 0, 3761,
	273, 0, 0, 0, 273, 0, 273, 0, 0, 0,
	0, 1349, 0, 273, 273, 0, 1359, 1359, 2917, 0,
	0, 0, 0, 273, 0, 0, 0, 3882, 3883, 3884,
	3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3894,
	3895, 3896, 3897, 3898, 3899, 3900, 3901, 0, 3905, 0,
	0, 0, 0, 0, 0, 73, 0, 1896, 0, 0,
	0, 0, 2189, 0, 0, 0, 0, 2190, 0, 2955,
	0, 0, 74, 0, 0, 0, 2074, 0, 0, 0,
	0, 273, 0, 0, 3393, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 797,
	3771, 3766, 3767, 3768, 3769, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 2303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 273, 0,
	0, 0, 0, 1896, 0, 0, 0, 0, 0, 912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2191, 49, 0, 110, 0, 273, 3105, 0, 0,
	94, 107, 0, 0, 0, 1898, 0, 0, 0, 2195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1567, 0, 2074, 273, 0, 273,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3149, 0, 0, 0,
	0, 0, 3394, 2785, 2785, 0, 2955, 0, 710, 2065,
	95, 0, 0, 0, 0, 0, 0, 3178, 918, 2955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 0, 0, 0, 2192, 2197, 0, 0, 0, 0,
	273, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848, 1849,
	1850, 1852, 1853, 0, 0, 0, 0, 0, 0, 273,
	1349, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1359, 273, 0, 0, 1349, 0, 1349, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2785, 2785, 2785, 2785, 2785, 2785, 2785,
	2785, 2785, 2785, 2785, 2785, 2785, 2785, 2785, 2785, 2785,
	2785, 2785, 2785, 0, 2785, 0, 0, 0, 2193, 0,
	0, 0, 0, 2071, 273, 273, 273, 273, 1349, 73,
	0, 1349, 0, 273, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 3389, 3390, 3391, 74, 0, 0, 2065,
	3388, 3386, 3387, 3379, 3380, 3381, 3382, 3384, 3385, 0,
	0, 99, 79, 0, 0, 0, 2187, 0, 0, 273,
	2200, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 102, 0,
	0, 106, 0, 0, 2185, 0, 0, 0, 0, 2198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 912, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 913, 49, 0, 110, 0,
	153, 0, 0, 0, 94, 107, 0, 2186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2071, 0, 0, 1124, 1124, 1124, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 1567, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 95, 0, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 821, 0, 0, 2194, 0, 0, 0, 235, 1879,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	823, 193, 0, 0, 0, 1843, 1844, 0, 1876, 1877,
	1878, 1887, 1888, 1889, 0, 0, 0, 0, 0, 0,
	0, 2074, 822, 0, 0, 1667, 0, 1880, 1874, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1893, 0, 2628, 2629, 2630, 2647,
	2648, 2649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1899, 0, 0, 0, 0, 2650, 0, 0, 0,
	1845, 0, 0, 0, 815, 2780, 0, 273, 0, 0,
	1865, 829, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 273, 0, 820, 0, 0, 710, 1899,
	0, 0, 0, 710, 0, 99, 710, 0, 0, 710,
	710, 0, 0, 0, 2074, 710, 0, 0, 2640, 0,
	0, 0, 0, 273, 0, 0, 0, 2636, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 2780, 0, 819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 102, 772, 0, 106, 0, 1868, 1869, 1870,
	1871, 0, 0, 0, 0, 0, 273, 1851, 0, 0,
	273, 273, 0, 0, 0, 0, 0, 0, 817, 0,
	0, 241, 0, 0, 2065, 0, 0, 0, 0, 913,
	0, 0, 0, 0, 153, 2641, 2642, 2643, 2644, 2955,
	2955, 273, 0, 3535, 2040, 2635, 1884, 0, 0, 1894,
	2955, 0, 2046, 0, 0, 0, 1873, 1875, 0, 0,
	0, 2955, 2046, 0, 2955, 2046, 0, 0, 2046, 0,
	243, 3535, 1890, 0, 1891, 0, 828, 0, 1879, 0,
	0, 1860, 1861, 273, 273, 2040, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 1882,
	0, 0, 0, 4489, 2074, 0, 0, 2040, 0, 273,
	197, 3609, 3609, 0, 1866, 0, 1349, 2065, 242, 2645,
	2646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 2955, 0,
	2955, 236, 3637, 2955, 2040, 193, 0, 2955, 0, 0,
	0, 0, 2638, 0, 0, 2040, 812, 0, 797, 0,
	2780, 0, 1892, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 4536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 816, 1349, 0,
	1539, 0, 0, 1896, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2780, 0, 0,
	0, 0, 0, 273, 0, 3677, 0, 0, 0, 3679,
	2955, 0, 0, 273, 0, 771, 0, 273, 1591, 0,
	1359, 1879, 2780, 0, 0, 0, 0, 0, 1508, 0,
	824, 0, 0, 0, 0, 273, 814, 1879, 0, 1872,
	3149, 0, 0, 1349, 0, 273, 0, 0, 2955, 0,
	710, 0, 0, 0, 0, 0, 0, 2955, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 2065, 0, 1879,
	0, 1670, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 1879, 0, 0, 811, 0, 0, 1685, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2639, 1843, 1844, 0, 0, 0, 3787, 1887, 1888, 1889,
	0, 818, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1898, 0, 0, 1874, 773, 3793, 0, 0, 1567,
	0, 1846, 1349, 273, 0, 273, 813, 0, 0, 0,
	1893, 1349, 1874, 0, 1124, 1713, 0, 0, 4675, 1846,
	0, 0, 1508, 0, 0, 0, 0, 1899, 0, 1898,
	826, 827, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 273, 1879, 0, 1899, 1865, 0, 1879, 0,
	0, 0, 0, 0, 1845, 1862, 0, 0, 0, 0,
	0, 1879, 0, 1883, 1865, 4704, 1879, 0, 0, 2785,
	0, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859, 0,
	1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0,
	4726, 0, 0, 0, 4227, 0, 0, 0, 4226, 0,
	3860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2625, 2626, 2627, 2651, 2637, 2631, 0, 2633, 2634,
	2632, 2619, 2620, 2621, 2622, 2623, 2624, 0, 0, 0,
	0, 1879, 0, 1868, 1869, 1870, 1871, 1879, 2785, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 1868, 1869, 1870, 1871, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 1884, 1998, 0, 1894, 0, 0, 0, 0,
	0, 0, 1873, 1875, 0, 0, 0, 273, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 1875, 0, 0, 0, 0, 0, 1860, 1861, 0,
	0, 0, 710, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 3377, 3378, 0, 3395, 3396, 3397,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 4200, 0, 1866, 0,
	1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3392,
	0, 0, 0, 0, 2785, 0, 0, 0, 0, 1896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 797, 0, 0, 1896, 0, 2784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 1879, 0,
	0, 2785, 0, 0, 0, 0, 0, 3609, 0, 0,
	0, 1109, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 2785, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 3383, 2040, 0, 273,
	0, 0, 0, 726, 726, 1359, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	3149, 0, 0, 3149, 2046, 0, 0, 1508, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 1898, 0, 273,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 273,
	0, 3399, 0, 0, 0, 1898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2955, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 3178, 3178,
	0, 0, 0, 0, 918, 2955, 0, 0, 0, 0,
	0, 0, 0, 3393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	1508, 0, 1886, 1863, 1859, 0, 1856, 1854, 1855, 1847,
	1848, 1849, 1850, 1852, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 1854, 1855, 1847, 1848, 1849,
	1850, 1852, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 0, 0, 0, 0,
	0, 0, 1896, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 4219,
	1508, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	1899, 0, 0, 0, 0, 0, 1874, 0, 0, 1845,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 3394, 273, 0, 0, 0, 0, 0, 1567, 1899,
	273, 0, 0, 0, 0, 0, 2375, 0, 1845, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 2389, 2391, 0, 1862, 0, 0,
	0, 0, 1359, 0, 0, 0, 0, 2394, 0, 0,
	0, 0, 0, 0, 4199, 1359, 0, 273, 1359, 2402,
	0, 2405, 2406, 2407, 0, 0, 2955, 2955, 0, 3535,
	0, 0, 3609, 2955, 0, 0, 1868, 1869, 1870, 1871,
	0, 4318, 0, 4318, 1567, 0, 1851, 0, 0, 0,
	0, 0, 0, 3821, 0, 2955, 0, 2046, 0, 0,
	0, 3535, 0, 1567, 1567, 273, 2040, 0, 0, 0,
	0, 0, 0, 0, 1508, 1868, 1869, 1870, 1871, 2040,
	0, 273, 2040, 0, 273, 1851, 3609, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 1875, 0, 0, 0,
	1879, 0, 3389, 3390, 3391, 2955, 0, 2955, 273, 3388,
	3386, 3387, 3379, 3380, 3381, 3382, 3384, 3385, 0, 0,
	1860, 1861, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 1873, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 2955, 2955, 0, 0, 0, 0,
	3149, 3149, 0, 1866, 0, 0, 0, 3535, 1508, 1860,
	1861, 0, 0, 0, 0, 0, 0, 1879, 273, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 1866, 0, 1879, 1879, 1879, 1879, 1879, 1879,
	1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879,
	1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879,
	1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879,
	0, 1368, 1896, 0, 0, 1879, 0, 1879, 1879, 1879,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 2784,
	2784, 0, 0, 0, 0, 0, 0, 0, 1109, 1109,
	1109, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 1537, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 1569, 1879, 1575, 0, 1581, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 2955, 2046, 0, 2046, 0, 0, 4528, 0, 0,
	0, 0, 0, 0, 0, 1879, 273, 0, 1879, 0,
	1867, 1879, 0, 0, 1879, 0, 4552, 0, 4552, 0,
	1879, 1879, 1879, 1879, 1879, 1879, 1879, 0, 0, 0,
	1898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 797, 0, 0, 0, 1673, 0, 1678,
	0, 0, 0, 0, 3609, 0, 1349, 0, 0, 0,
	0, 0, 1691, 0, 1696, 0, 0, 0, 0, 1898,
	0, 0, 0, 0, 0, 2040, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 3398,
	0, 2784, 2784, 2784, 2784, 0, 0, 0, 1879, 0,
	1879, 0, 0, 0, 4528, 1879, 0, 4318, 0, 0,
	1567, 0, 0, 0, 2955, 0, 1863, 1859, 0, 1856,
	1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0,
	0, 0, 1761, 0, 4641, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 1859, 0, 1856, 1854,
	1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0, 0,
	0, 273, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3377, 3378, 0,
	3395, 3396, 3397, 0, 0, 3860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3827,
	0, 0, 3377, 3378, 0, 3395, 3396, 3397, 0, 0,
	3609, 4695, 0, 0, 0, 0, 0, 0, 0, 4528,
	0, 0, 0, 0, 3826, 0, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 0, 0, 0, 3052, 0, 4318,
	0, 1843, 1844, 0, 1876, 1877, 1878, 1887, 1888, 1889,
	0, 0, 3392, 0, 4318, 0, 0, 0, 0, 1920,
	0, 0, 0, 0, 1874, 1933, 0, 0, 0, 3377,
	3378, 1846, 3395, 3396, 3397, 0, 0, 3392, 273, 0,
	1893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 0, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1845, 0, 0, 4318,
	4318, 0, 1843, 1844, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 1874, 0, 0,
	4318, 0, 273, 4318, 1846, 1874, 0, 0, 0, 0,
	0, 0, 1846, 2046, 3392, 0, 0, 0, 0, 3383,
	1508, 0, 1567, 0, 1567, 0, 0, 0, 0, 0,
	1899, 3202, 0, 0, 0, 0, 0, 0, 1899, 1845,
	1992, 1992, 1992, 0, 3383, 0, 0, 1845, 0, 1865,
	0, 0, 1359, 1508, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 4822, 0, 1508, 0,
	0, 0, 0, 1868, 1869, 1870, 1871, 0, 1879, 1879,
	0, 1879, 4552, 1851, 3399, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3399,
	2955, 3383, 0, 0, 3816, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 1894, 3393, 0, 0, 0,
	0, 0, 1873, 1875, 1124, 0, 1868, 1869, 1870, 1871,
	0, 0, 0, 0, 0, 273, 1851, 0, 1124, 0,
	0, 3393, 0, 3400, 1851, 0, 0, 1860, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 3860, 0, 0,
	0, 0, 0, 0, 0, 1882, 3399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1109, 0, 0, 0,
	1866, 1567, 0, 0, 0, 1873, 1875, 0, 0, 0,
	1879, 0, 0, 1873, 1875, 1896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3393, 0,
	1860, 1861, 0, 0, 1158, 0, 0, 0, 0, 0,
	1896, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 1879, 1879, 0, 2784,
	2784, 1866, 0, 1879, 4528, 0, 0, 0, 0, 1896,
	272, 272, 272, 3398, 3398, 0, 0, 1879, 1879, 0,
	0, 0, 0, 0, 3394, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1896, 0, 842,
	0, 1879, 0, 0, 2955, 0, 0, 0, 0, 3394,
	0, 0, 0, 1879, 4318, 0, 4318, 0, 1508, 1567,
	0, 0, 0, 0, 0, 1872, 0, 842, 0, 0,
	0, 0, 1896, 0, 0, 0, 0, 0, 0, 0,
	1896, 0, 0, 0, 0, 0, 0, 0, 1867, 2784,
	2784, 2784, 2784, 2784, 2784, 2784, 2784, 2784, 2784, 2784,
	2784, 2784, 2784, 2784, 2784, 2784, 2784, 2784, 2784, 0,
	2784, 3398, 3398, 3398, 3398, 1885, 3394, 0, 0, 0,
	2955, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 3178, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 1898, 0, 0,
	2955, 1867, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 3178, 3389, 3390, 3391, 0, 0,
	0, 0, 3388, 3386, 3387, 3379, 3380, 3381, 3382, 3384,
	3385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3389, 3390, 3391, 1508, 0, 0, 1508, 3388, 3386, 3387,
	3379, 3380, 3381, 3382, 3384, 3385, 0, 0, 1281, 0,
	1898, 0, 0, 0, 0, 0, 0, 0, 1898, 1883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	1858, 1864, 1886, 1863, 1859, 0, 1856, 1854, 1855, 1847,
	1848, 1849, 1850, 1852, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3389, 3390, 3391,
	0, 0, 0, 0, 3388, 3386, 3387, 3379, 3380, 3381,
	3382, 3384, 3385, 1508, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 2450, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 1863, 1859, 0, 1856,
	1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 1855,
	1847, 1848, 1849, 1850, 1852, 1853, 0, 0, 0, 2477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2517, 0, 2521, 0, 0,
	0, 0, 0, 0, 2535, 0, 0, 0, 0, 0,
	0, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 0, 2585, 0,
	2587, 2588, 2589, 2590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 2614, 0, 0, 0,
	0, 0, 0, 0, 0, 74, 0, 0, 1920, 0,
	0, 0, 2665, 3651, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 1843, 1844, 2695, 2698,
	2701, 2704, 0, 0, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 3676, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 3704, 0, 0, 1846, 0, 0, 0,
	0, 88, 2776, 0, 2788, 2790, 2795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1899, 1879, 1879, 0, 0, 1879, 3398, 3398,
	1879, 1845, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 1879, 912, 0, 0, 0, 0, 3753, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 110, 0, 3776,
	0, 0, 0, 94, 107, 2755, 2756, 2757, 2758, 2751,
	2752, 2753, 2754, 0, 0, 0, 0, 1879, 1879, 1879,
	1879, 1879, 0, 0, 0, 0, 0, 1879, 0, 1879,
	0, 0, 3398, 3398, 3398, 3398, 3398, 3398, 3398, 3398,
	3398, 3398, 3398, 3398, 3398, 3398, 3398, 3398, 3398, 3398,
	3398, 3398, 0, 0, 0, 3398, 0, 0, 1879, 1879,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 1851, 1879,
	0, 0, 0, 0, 0, 0, 2731, 2732, 2733, 2734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2743,
	2744, 2745, 2746, 2739, 2740, 2741, 2742, 2747, 2748, 2749,
	2750, 0, 0, 0, 0, 0, 0, 1873, 1875, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 272, 272, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 1879, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 2727, 2728, 2729, 2730, 2735, 2736, 2737, 2738, 0,
	0, 0, 1879, 1879, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 0, 272, 0, 272, 272,
	0, 0, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1194, 0,
	0, 0, 0, 0, 1896, 0, 0, 0, 0, 0,
	192, 102, 0, 0, 106, 3108, 3109, 0, 3111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 272, 0, 0, 0, 0,
	241, 0, 0, 0, 1879, 0, 0, 0, 913, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	272, 272, 0, 0, 0, 0, 1508, 1508, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 1879, 1879, 243,
	0, 0, 1879, 1879, 0, 0, 1879, 1879, 0, 0,
	1508, 1879, 0, 0, 0, 1879, 0, 0, 0, 0,
	1879, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 1124, 0, 0, 2784, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 3230, 0, 0, 0,
	236, 0, 0, 0, 193, 272, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 272,
	1508, 0, 0, 0, 2784, 0, 0, 4071, 0, 163,
	4072, 0, 0, 0, 0, 0, 0, 73, 0, 46,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 158, 1900, 1901,
	0, 1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853,
	79, 0, 1285, 0, 0, 0, 0, 0, 0, 0,
	1879, 67, 0, 0, 0, 0, 0, 0, 48, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 47, 0,
	88, 0, 0, 0, 3286, 3287, 0, 0, 0, 0,
	3293, 0, 0, 0, 0, 0, 0, 4159, 4160, 4161,
	0, 0, 0, 0, 2389, 4167, 4168, 50, 68, 3307,
	3308, 0, 0, 0, 0, 2665, 51, 0, 0, 1508,
	0, 57, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 49, 0, 110, 0, 0, 0,
	0, 0, 94, 107, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3317, 0, 0, 0, 0, 0, 1879, 1879, 1879, 0,
	0, 0, 0, 0, 0, 1274, 3331, 1879, 1879, 3398,
	2784, 0, 0, 0, 52, 0, 1879, 0, 0, 1879,
	0, 0, 1508, 3343, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2014, 0, 1281, 0, 0, 0,
	272, 268, 268, 706, 0, 0, 3398, 2784, 1508, 0,
	0, 0, 0, 0, 0, 0, 272, 2014, 272, 0,
	0, 0, 0, 1879, 0, 0, 842, 0, 0, 0,
	0, 1879, 2784, 842, 0, 0, 0, 0, 0, 1879,
	1843, 1844, 0, 0, 0, 0, 0, 0, 1879, 0,
	1879, 0, 0, 0, 0, 0, 1124, 0, 0, 0,
	0, 272, 0, 1874, 0, 0, 0, 0, 272, 0,
	1846, 0, 0, 0, 0, 2795, 2795, 2795, 0, 0,
	1508, 0, 4263, 4264, 0, 0, 0, 0, 0, 0,
	1992, 0, 0, 0, 0, 0, 1899, 0, 3436, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3398, 0, 0, 0, 1508,
	0, 53, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 59, 0, 1879, 3398, 0, 0, 1879, 0, 0,
	3815, 69, 0, 0, 0, 0, 0, 0, 58, 192,
	102, 0, 0, 106, 0, 0, 3398, 54, 0, 0,
	0, 162, 1868, 1869, 1870, 1871, 1109, 0, 0, 55,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 241,
	1109, 0, 0, 0, 2389, 0, 0, 62, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 159, 0,
	0, 0, 0, 0, 3567, 0, 0, 0, 0, 0,
	0, 1873, 1875, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 842, 1860, 1861, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 4457, 0,
	4459, 4460, 4461, 0, 0, 0, 0, 0, 197, 0,
	3620, 3621, 0, 0, 0, 0, 242, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 272, 0, 193, 0, 272, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 1879, 0,
	3, 0, 0, 272, 0, 272, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 4509,
	0, 1285, 0, 1879, 0, 0, 0, 0, 1896, 0,
	0, 0, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 1124, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 842, 272, 0, 272, 0, 272, 0,
	272, 0, 272, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 4604, 272, 272, 272, 272, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2535, 0, 0, 0, 0, 1285, 3813, 3814,
	0, 0, 3817, 0, 0, 0, 3820, 0, 0, 0,
	0, 0, 0, 0, 0, 3824, 0, 0, 0, 0,
	0, 0, 0, 0, 3831, 0, 0, 0, 0, 3436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3844, 0, 0, 0, 0, 0,
	0, 0, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848,
	1849, 1850, 1852, 1853, 3867, 3868, 0, 3869, 3870, 3871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3877, 0, 0, 0, 3879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3908, 3909, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3920, 0, 0, 0, 1335, 0, 1335, 1335, 0, 0,
	0, 0, 0, 0, 0, 3929, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1419, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 2389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 4000, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 272, 0, 0, 1285, 272,
	1285, 272, 0, 0, 0, 0, 0, 0, 272, 272,
	0, 0, 0, 0, 0, 1285, 0, 4031, 272, 0,
	0, 1671, 1672, 0, 1843, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 4052, 4053, 1846, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 0, 1876, 1877, 1878, 1887, 1888,
	1889, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	1899, 0, 0, 0, 1880, 1874, 0, 0, 0, 1845,
	272, 0, 1846, 0, 0, 0, 0, 0, 0, 1865,
	0, 1893, 0, 272, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1899, 0,
	0, 0, 0, 0, 0, 0, 1788, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 1285,
	272, 0, 0, 0, 0, 0, 1862, 0, 0, 0,
	0, 0, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3292, 1992, 0, 0, 0, 0,
	0, 0, 0, 0, 4154, 0, 0, 0, 0, 0,
	0, 842, 0, 0, 0, 0, 1868, 1869, 1870, 1871,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 842, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 1868, 1869, 1870, 1871, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 1875, 0, 0, 4197,
	4198, 0, 0, 0, 0, 4202, 4203, 0, 0, 0,
	4206, 4207, 0, 0, 0, 0, 0, 0, 4211, 0,
	1860, 1861, 0, 1884, 0, 272, 1894, 0, 0, 4215,
	0, 0, 0, 1873, 1875, 0, 0, 1285, 1285, 0,
	0, 0, 0, 0, 272, 4220, 272, 1285, 0, 1890,
	0, 1891, 0, 1866, 0, 0, 0, 272, 1860, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	272, 272, 272, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 2030, 1896, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 1285, 0, 1285, 2041, 1285, 1529,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 1881,
	0, 0, 272, 0, 0, 0, 1285, 1285, 0, 0,
	1896, 0, 0, 0, 1109, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 1285, 1335, 1285, 1285, 1285, 0, 0, 0, 1529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1898, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 2078, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 1859, 0, 1856,
	1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 4476, 4477, 4478, 0, 0, 0, 0,
	1857, 1858, 1864, 1886, 1863, 1859, 0, 1856, 1854, 1855,
	1847, 1848, 1849, 1850, 1852, 1853, 2535, 0, 0, 4487,
	4488, 3352, 0, 0, 0, 3353, 0, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4496, 4499, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2331, 0, 0, 0, 2338, 0, 2014, 0,
	1285, 0, 0, 0, 0, 0, 0, 1285, 2351, 0,
	272, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 4553, 0, 0, 2363, 0, 2363, 0, 0, 0,
	4561, 0, 2370, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4569, 0, 0, 1109, 0,
	0, 272, 0, 0, 0, 272, 272, 0, 0, 0,
	0, 0, 4578, 0, 0, 4580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2338, 0, 0,
	2398, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2434, 0, 2436, 0, 2438,
	0, 2440, 0, 2441, 0, 0, 0, 0, 272, 272,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 2014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2468, 2469, 2470, 0, 0,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 0, 1899, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 4703,
	272, 0, 0, 4707, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 842, 0,
	0, 0, 0, 0, 0, 1285, 0, 0, 272, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1869, 1870, 1871, 0, 4777, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 2535, 0, 0, 0,
	0, 0, 0, 0, 1285, 4499, 1285, 0, 272, 0,
	272, 1873, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1285, 0, 0, 0, 2852, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 757, 0, 0, 1109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 740, 0, 0, 0, 0, 741, 0,
	0, 0, 1843, 1844, 0, 1876, 1877, 1878, 1887, 1888,
	1889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1880, 1874, 0, 0, 0, 0,
	0, 0, 1846, 2903, 0, 0, 1335, 742, 0, 0,
	1335, 1893, 1335, 0, 0, 4898, 4898, 4898, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1899, 2351,
	0, 0, 0, 0, 0, 0, 0, 1845, 1896, 744,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 4923, 0, 0, 0, 1862, 0, 0, 0,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 1281, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 4898,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	747, 0, 0, 748, 1868, 1869, 1870, 1871, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	772, 1529, 0, 0, 0, 0, 0, 0, 0, 842,
	0, 0, 0, 2338, 2338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 762, 1898, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 1894, 0, 0, 0,
	0, 0, 0, 1873, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1890,
	0, 1891, 0, 0, 0, 0, 0, 0, 1860, 1861,
	0, 0, 0, 2338, 0, 0, 0, 0, 0, 0,
	0, 0, 2351, 759, 0, 0, 1882, 0, 0, 4898,
	5055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848,
	1849, 1850, 1852, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3200, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 0, 3211, 0, 3214, 769, 0,
	750, 0, 0, 0, 272, 0, 1285, 1285, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1896, 0, 1285, 272, 0, 0, 0, 0, 0, 770,
	0, 751, 0, 0, 272, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 1285, 0, 272, 1285, 0, 0, 0, 272,
	3246, 1529, 3248, 1529, 272, 0, 0, 0, 0, 3254,
	0, 0, 771, 0, 0, 0, 1872, 2078, 0, 0,
	752, 1285, 0, 0, 1281, 767, 768, 765, 0, 0,
	0, 0, 0, 760, 0, 0, 753, 0, 0, 1867,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 3283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 755,
	0, 0, 2078, 0, 0, 0, 0, 0, 1898, 0,
	0, 0, 0, 756, 0, 0, 0, 0, 764, 0,
	0, 0, 0, 0, 0, 1147, 112, 0, 0, 0,
	0, 0, 773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 758, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 1171, 1285, 0, 0, 0, 0, 0, 0,
	1857, 1858, 1864, 1886, 1863, 1859, 0, 1856, 1854, 1855,
	1847, 1848, 1849, 1850, 1852, 1853, 0, 0, 0, 0,
	0, 2661, 0, 0, 0, 2662, 0, 1281, 0, 0,
	112, 0, 0, 0, 0, 1281, 0, 0, 274, 274,
	274, 0, 0, 0, 0, 1285, 0, 0, 0, 2014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 1285, 0, 0, 0, 1285, 0, 274, 0, 0,
	0, 0, 0, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2014, 0, 2014, 0,
	0, 0, 0, 0, 1285, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 1104, 0, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 272,
	0, 1285, 0, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 1031, 0,
	1285, 3484, 0, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 1005, 0,
	988, 987, 1335, 272, 0, 0, 1529, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 1007, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 992, 0, 0, 0, 3531, 1042, 0,
	1285, 0, 0, 0, 0, 0, 0, 1002, 1003, 0,
	0, 0, 0, 0, 0, 0, 1020, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 2078, 0,
	0, 0, 0, 0, 1032, 994, 0, 0, 0, 3586,
	3588, 995, 0, 2351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2078, 2078, 0, 0,
	0, 0, 0, 0, 996, 0, 0, 0, 0, 0,
	0, 0, 0, 1029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 1285, 0, 0,
	0, 998, 0, 0, 0, 0, 0, 0, 0, 986,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 999, 1000,
	0, 0, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1008, 1006, 0, 0,
	0, 0, 0, 0, 1001, 0, 0, 0, 1017, 3701,
	0, 1037, 1036, 3705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1039, 1028, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1033, 0,
	0, 0, 2014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 993, 0, 0,
	1041, 0, 0, 0, 0, 0, 272, 272, 0, 3798,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 991, 0, 0, 0, 1024, 1025, 0,
	0, 0, 0, 0, 0, 1285, 0, 0, 0, 1285,
	0, 1027, 1285, 0, 0, 0, 0, 0, 3811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1034, 1022, 0, 0, 0,
	0, 0, 2078, 0, 1040, 1018, 0, 0, 1011, 1009,
	0, 1014, 0, 0, 2014, 0, 0, 1015, 0, 0,
	984, 0, 1035, 0, 0, 0, 0, 0, 0, 2014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1285, 985, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 1026, 1285, 1016,
	0, 0, 0, 0, 112, 1013, 0, 0, 0, 1285,
	1285, 1285, 0, 0, 0, 1038, 1285, 1285, 1285, 0,
	0, 0, 0, 1019, 2014, 2014, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 1285, 2014, 1021, 272, 2014, 0,
	0, 274, 0, 274, 274, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 1023, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 112, 0, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 1428, 274, 274, 0, 0,
	274, 274, 0, 0, 0, 0, 1428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1104, 112, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 1428, 0, 0, 0, 0, 0,
	112, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 112, 0, 0,
	0, 1285, 274, 274, 0, 0, 0, 0, 0, 1285,
	272, 0, 0, 1285, 1285, 0, 1285, 0, 0, 0,
	1428, 0, 0, 1285, 0, 0, 0, 1428, 274, 274,
	0, 0, 0, 0, 1285, 1285, 0, 0, 0, 0,
	0, 0, 0, 1428, 0, 0, 0, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 1843, 1844, 0, 1876,
	1877, 1878, 1887, 1888, 1889, 0, 0, 0, 0, 0,
	1285, 0, 1285, 0, 0, 0, 0, 0, 1880, 1874,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 1428, 0, 0, 0, 1893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2351, 0, 1285, 0, 0,
	0, 0, 1899, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 274, 2351, 0, 0, 1285, 0, 0,
	0, 1865, 0, 0, 0, 4108, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 4118, 0, 274, 0, 0,
	0, 0, 1083, 0, 0, 0, 0, 0, 0, 0,
	2351, 0, 0, 0, 0, 4136, 1285, 1285, 0, 2014,
	0, 2014, 0, 1913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1919, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 1868, 1869,
	1870, 1871, 0, 0, 0, 278, 0, 0, 1851, 4182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1285, 1285, 1285, 1285, 1285, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 0,
	1894, 0, 0, 0, 0, 0, 0, 1873, 1875, 0,
	0, 1163, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 1890, 0, 1891, 0, 0, 0, 0,
	834, 0, 1860, 1861, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 2012, 0, 2015, 0, 112,
	1882, 0, 0, 0, 0, 0, 0, 0, 834, 1285,
	0, 1285, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 0, 1428,
	0, 0, 0, 0, 274, 274, 274, 0, 0, 0,
	2078, 0, 0, 1881, 274, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 1896, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 0, 274,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 1285, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 4338, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2351, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 1285,
	0, 0, 0, 1428, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 1285, 1857, 1858, 1864, 1886, 1863, 1859,
	0, 1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853,
	0, 0, 0, 0, 0, 4823, 0, 0, 0, 274,
	0, 1428, 1428, 274, 0, 0, 0, 0, 0, 0,
	0, 1428, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1285, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 1104, 1285, 1104, 0, 0, 1285, 0, 0, 274,
	0, 0, 0, 274, 0, 0, 1285, 0, 0, 274,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 4538, 274, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 1428, 0,
	1428, 0, 1428, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1428, 1428, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1428, 274, 112, 0, 274, 1285, 0,
	0, 0, 0, 0, 0, 1428, 0, 1428, 1428, 1428,
	0, 0, 0, 2351, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 274, 0, 274, 0, 274, 0, 274, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 1083, 1083, 0, 0, 0, 0,
	0, 0, 274, 274, 274, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4665, 1529, 0,
	0, 0, 0, 0, 0, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2603, 0, 0, 0, 0, 740, 0, 0, 1428, 0,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1919, 0, 0, 0, 1919, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 1285, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1425, 0,
	0, 1428, 0, 763, 0, 0, 0, 1268, 0, 1547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2015, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 4783, 746,
	0, 0, 0, 0, 1426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 1548, 0, 0, 0, 0,
	0, 1428, 747, 0, 0, 748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 772, 1547, 274, 0, 0, 1428, 0, 0,
	1547, 0, 0, 1548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 1547, 762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4836, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 1876, 1877, 1878, 1887, 1888, 1889, 0, 1548,
	0, 0, 0, 0, 0, 0, 1548, 0, 0, 0,
	0, 1880, 1874, 0, 274, 0, 0, 0, 0, 1846,
	0, 0, 1548, 0, 1547, 759, 0, 0, 1893, 0,
	274, 0, 0, 274, 0, 0, 0, 274, 0, 274,
	0, 4880, 0, 0, 0, 1899, 274, 274, 0, 0,
	0, 0, 0, 0, 1845, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1428, 0, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 770, 0, 751, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 1869, 1870, 1871, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 112, 0, 0, 112,
	0, 112, 0, 0, 771, 0, 0, 0, 274, 1428,
	0, 0, 752, 0, 0, 0, 0, 767, 768, 765,
	274, 274, 0, 1428, 0, 760, 0, 0, 753, 0,
	1884, 0, 0, 1894, 0, 0, 0, 0, 0, 0,
	1873, 1875, 0, 0, 0, 0, 0, 0, 112, 274,
	0, 112, 0, 0, 0, 0, 1890, 112, 1891, 0,
	0, 0, 0, 0, 0, 1860, 1861, 0, 0, 0,
	0, 754, 0, 761, 0, 0, 0, 0, 0, 0,
	274, 755, 274, 1882, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 756, 0, 0, 1866, 0,
	764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 773, 1428, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 758, 0, 0, 1428, 0,
	1428, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 1892, 1428, 0, 0,
	0, 0, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 274, 0, 1881, 834, 0, 0,
	0, 0, 0, 0, 834, 274, 0, 1896, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 274, 274,
	274, 0, 0, 1872, 0, 0, 274, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2603, 0, 274, 0, 0, 0, 1425, 0, 0, 0,
	274, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 1919, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 1858, 1864,
	1886, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848, 1849,
	1850, 1852, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3829, 0, 1547, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 1547, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1428, 0, 1547, 1547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	1547, 1547, 1547, 0, 1428, 0, 0, 1548, 0, 1548,
	0, 1548, 0, 0, 0, 0, 0, 0, 0, 1428,
	0, 0, 0, 0, 834, 0, 0, 0, 274, 1548,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 1428, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 0, 1548, 1548, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 274, 274, 0, 0, 0, 0, 0,
	0, 112, 112, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 1876, 1877, 1878, 1887, 1888, 1889, 0, 0,
	0, 1425, 0, 0, 0, 112, 112, 0, 112, 0,
	0, 1880, 1874, 0, 0, 0, 274, 274, 0, 1846,
	274, 0, 0, 0, 0, 0, 0, 274, 1893, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 1899, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 1426, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 1428, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1425, 0, 0, 864, 0, 0,
	0, 0, 865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1428,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 1268, 0, 1428, 1104, 1428, 0, 0, 0, 1428,
	0, 866, 0, 883, 0, 0, 274, 1428, 112, 112,
	1426, 1868, 1869, 1870, 1871, 0, 274, 0, 0, 1428,
	274, 1851, 0, 0, 1425, 0, 0, 0, 867, 0,
	0, 0, 0, 868, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1425, 0, 0, 0, 0, 892, 0, 0, 0, 0,
	1884, 0, 869, 1894, 0, 0, 0, 0, 0, 0,
	1873, 1875, 0, 1428, 0, 0, 890, 0, 0, 0,
	1426, 0, 0, 0, 0, 1428, 1890, 1428, 1891, 0,
	0, 0, 0, 0, 0, 1860, 1861, 0, 0, 0,
	0, 863, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 871, 1866, 0,
	0, 0, 0, 0, 1428, 0, 274, 1428, 274, 894,
	0, 0, 0, 0, 772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 1896, 0, 0,
	0, 0, 0, 0, 1428, 0, 0, 893, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 888, 0, 0,
	0, 1428, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 112, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1268, 1268, 0, 0, 0, 0, 0,
	0, 0, 1425, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 872, 0, 0, 1547, 0, 0, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 1426, 0,
	0, 0, 0, 0, 0, 1898, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 834, 0, 0, 0, 0,
	0, 0, 0, 0, 884, 0, 1428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 861,
	0, 885, 0, 0, 0, 0, 0, 274, 0, 0,
	876, 1547, 0, 1547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 0,
	1547, 0, 0, 0, 0, 0, 882, 1857, 1858, 1864,
	1886, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848, 1849,
	1850, 1852, 1853, 877, 1548, 0, 0, 878, 897, 0,
	896, 0, 3355, 879, 0, 0, 0, 1548, 0, 1548,
	0, 0, 0, 0, 0, 0, 0, 880, 0, 0,
	0, 0, 889, 0, 0, 0, 1548, 0, 898, 0,
	895, 0, 0, 0, 0, 0, 773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1428,
	0, 0, 0, 1428, 0, 0, 1428, 0, 0, 112,
	0, 0, 274, 0, 0, 0, 0, 0, 1843, 1844,
	0, 1876, 1877, 1878, 1887, 1888, 1889, 0, 0, 0,
	0, 274, 0, 0, 0, 1268, 0, 0, 0, 0,
	1880, 1874, 274, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 274, 0, 0, 0, 0, 1893, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 274, 0, 1899, 0, 112, 0, 1428, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 1428, 1428, 1428, 0, 0, 0, 0,
	1428, 1428, 1428, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1428, 0, 0, 0, 274, 0, 1428, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1428, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1869, 1870, 1871, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 0, 1884,
	0, 0, 1894, 0, 0, 0, 0, 0, 0, 1873,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1890, 0, 1891, 0, 0,
	0, 0, 0, 0, 1860, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 1425, 0, 0, 1428, 1428, 0,
	1428, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1428, 1428,
	0, 0, 0, 0, 0, 0, 0, 1425, 0, 0,
	0, 1428, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 1425, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 1892, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 1425, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 1896, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	0, 1428, 0, 0, 274, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 1428, 0, 0, 1426, 0, 0, 0, 0, 0,
	0, 274, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	1428, 1428, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 1885, 0, 0, 0, 0, 0, 0, 0,
	1428, 274, 0, 0, 0, 1428, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1425, 0, 0, 0, 1898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1428, 1428, 1428, 1428, 1428, 1428,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1428, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 0, 1426, 0, 0, 0,
	1428, 0, 0, 0, 0, 0, 1547, 0, 1547, 0,
	0, 0, 1425, 0, 0, 0, 1883, 0, 0, 834,
	1547, 0, 0, 0, 0, 0, 1857, 1858, 1864, 1886,
	1863, 1859, 1547, 1856, 1854, 1855, 1847, 1848, 1849, 1850,
	1852, 1853, 0, 1428, 0, 1428, 0, 0, 1548, 0,
	0, 3354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 1548, 0, 0, 0, 1426, 0,
	0, 0, 0, 0, 0, 0, 1548, 0, 0, 1428,
	0, 0, 0, 0, 0, 0, 1547, 0, 1548, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	1547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 1425, 0, 0,
	1425, 1428, 0, 0, 1548, 0, 1548, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 1428,
	1428, 1428, 0, 0, 1843, 1844, 2603, 1876, 1877, 1878,
	1887, 1888, 1889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 1874, 0, 0,
	0, 0, 0, 1426, 1846, 0, 1426, 0, 0, 0,
	0, 0, 0, 1893, 0, 0, 0, 0, 0, 0,
	1428, 0, 0, 1428, 0, 0, 0, 1425, 0, 0,
	1899, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 1425, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 274, 274, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 1868, 1869, 1870, 1871,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 1425,
	0, 0, 0, 0, 0, 1884, 0, 0, 1894, 0,
	0, 0, 0, 0, 0, 1873, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	834, 1890, 0, 1891, 0, 0, 0, 0, 0, 0,
	1860, 1861, 0, 0, 0, 274, 0, 0, 0, 0,
	1428, 0, 0, 0, 0, 1426, 0, 0, 1882, 0,
	1428, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 1892, 0, 0, 112, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 1428, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1896, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 0, 1547, 0, 0, 1547,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 1867, 1548, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 1547, 1547, 0,
	0, 0, 0, 1547, 1547, 1547, 0, 0, 0, 0,
	1898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 0, 1548, 0, 0,
	0, 1425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 1548, 1548, 0, 0, 0, 1425, 1548,
	1548, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1548, 1883, 0, 0, 0, 0, 1426, 0, 0,
	0, 0, 1857, 1858, 1864, 1886, 1863, 1859, 0, 1856,
	1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0,
	0, 0, 0, 0, 1426, 0, 0, 3351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1425, 1425, 0, 1425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 1426, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1548, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1425, 0, 0, 0, 0, 1843,
	1844, 0, 1876, 1877, 1878, 1887, 1888, 1889, 0, 0,
	0, 0, 0, 0, 1425, 0, 0, 0, 0, 0,
	0, 1880, 1874, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 1893, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 1547, 1547, 1899, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1425, 0, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1548,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 1547, 1547,
	1547, 1547, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1425, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 1868, 1869, 1870, 1871, 0, 0, 0, 0, 0,
	0, 1851, 0, 1425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 1548, 1548, 1548, 1548, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 1894, 0, 0, 1425, 0, 1547, 0,
	1873, 1875, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 1890, 0, 1891, 0,
	0, 0, 0, 0, 0, 1860, 1861, 0, 0, 0,
	0, 0, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 1548, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1425, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 1547, 1547, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1896, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1425, 0, 0, 1547, 0, 1548, 1548,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 1858, 1864,
	1886, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848, 1849,
	1850, 1852, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3350, 1547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1423, 0,
	0, 0, 0, 0, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 1429, 289, 290, 1430, 1431, 1432, 0, 1433,
	652, 1434, 1435, 1436, 1437, 291, 292, 1225, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 1438, 657, 301, 302, 303, 304, 305, 306, 1439,
	1440, 1548, 307, 658, 659, 660, 1441, 308, 309, 661,
	1442, 1509, 1443, 310, 311, 312, 313, 314, 315, 316,
	0, 1444, 318, 319, 320, 317, 321, 1445, 322, 0,
	323, 324, 325, 326, 327, 328, 1446, 329, 330, 331,
	1226, 332, 333, 334, 1447, 1448, 1450, 1449, 1451, 1452,
	1453, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 1454, 345, 341, 343, 1455, 346, 344, 347, 1456,
	348, 349, 350, 1457, 1458, 351, 352, 353, 1459, 354,
	355, 356, 1460, 357, 358, 359, 1461, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 1462, 279, 1463, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 1464,
	378, 379, 380, 1465, 1466, 1227, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	1467, 393, 670, 1468, 671, 394, 1469, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 1229, 400, 401, 1470,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 1471, 1228, 410, 675, 676, 1472, 677, 1473,
	411, 412, 1230, 678, 1231, 413, 414, 415, 1232, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 1474,
	423, 425, 424, 1475, 426, 679, 1233, 427, 428, 1234,
	1476, 429, 430, 431, 432, 433, 434, 437, 1477, 1478,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1235,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1236, 480, 468,
	1479, 281, 1237, 482, 483, 484, 1480, 680, 485, 681,
	487, 488, 1481, 0, 489, 0, 490, 1482, 1483, 492,
	493, 494, 1484, 1485, 495, 496, 682, 1238, 497, 1239,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 1486, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 1487,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 1488, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	1489, 550, 551, 552, 1240, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 1490, 575, 576, 574, 577,
	578, 579, 1491, 580, 581, 563, 564, 582, 583, 1241,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	1492, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 1493, 608,
	609, 0, 605, 596, 1494, 610, 611, 612, 613, 614,
	615, 616, 617, 1495, 618, 693, 694, 695, 696, 1496,
	627, 1497, 619, 620, 621, 697, 622, 698, 1498, 623,
	624, 625, 626, 0, 628, 629, 1499, 1500, 630, 631,
	632, 634, 635, 633, 636, 1501, 637, 1502, 0, 638,
	639, 640, 699, 700, 701, 1503, 642, 641, 643, 644,
	702, 645, 646, 1504, 1505, 1506, 1507, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 0, 0, 0,
	0, 2830, 0, 0, 0, 0, 0, 0, 0, 2831,
	282, 284, 283, 285, 286, 287, 288, 1429, 289, 290,
	1430, 1431, 1432, 0, 1433, 652, 1434, 1435, 1436, 1437,
	291, 292, 1225, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 1438, 657, 301, 302,
	303, 304, 305, 306, 1439, 1440, 0, 307, 658, 659,
	660, 1441, 308, 309, 661, 1442, 1509, 1443, 310, 311,
	312, 313, 314, 315, 316, 0, 1444, 318, 319, 320,
	317, 321, 1445, 322, 0, 323, 324, 325, 326, 327,
	328, 1446, 329, 330, 331, 1226, 332, 333, 334, 1447,
	1448, 1450, 1449, 1451, 1452, 1453, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 1454, 345, 341, 343,
	1455, 346, 344, 347, 1456, 348, 349, 350, 1457, 1458,
	351, 352, 353, 1459, 354, 355, 356, 1460, 357, 358,
	359, 1461, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 1462,
	279, 1463, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 1464, 378, 379, 380, 1465, 1466,
	1227, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 1467, 393, 670, 1468, 671,
	394, 1469, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 1229, 400, 401, 1470, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 1471, 1228, 410,
	675, 676, 1472, 677, 1473, 411, 412, 1230, 678, 1231,
	413, 414, 415, 1232, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 1474, 423, 425, 424, 1475, 426,
	679, 1233, 427, 428, 1234, 1476, 429, 430, 431, 432,
	433, 434, 437, 1477, 1478, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1235, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1236, 480, 468, 1479, 281, 1237, 482, 483,
	484, 1480, 680, 485, 681, 487, 488, 1481, 0, 489,
	0, 490, 1482, 1483, 492, 493, 494, 1484, 1485, 495,
	496, 682, 1238, 497, 1239, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 1486, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 1487, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 1488, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 1489, 550, 551, 552, 1240,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	1490, 575, 576, 574, 577, 578, 579, 1491, 580, 581,
	563, 564, 582, 583, 1241, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 1492, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 1493, 608, 609, 0, 605, 596, 1494,
	610, 611, 612, 613, 614, 615, 616, 617, 1495, 618,
	693, 694, 695, 696, 1496, 627, 1497, 619, 620, 621,
	697, 622, 698, 1498, 623, 624, 625, 626, 0, 628,
	629, 1499, 1500, 630, 631, 632, 634, 635, 633, 636,
	1501, 637, 1502, 0, 638, 639, 640, 699, 700, 701,
	1503, 642, 641, 643, 644, 702, 645, 646, 1504, 1505,
	1506, 1507, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1423, 0, 0, 0,
	3838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3840, 282, 284, 283, 285, 286, 287, 288,
	1429, 289, 290, 1430, 1431, 1432, 0, 1433, 652, 1434,
	1435, 1436, 1437, 291, 292, 1225, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 1438,
	657, 301, 302, 303, 304, 305, 306, 1439, 1440, 0,
	307, 658, 659, 660, 1441, 308, 309, 661, 1442, 1509,
	1443, 310, 311, 312, 313, 314, 315, 316, 0, 1444,
	318, 319, 320, 317, 321, 1445, 322, 0, 323, 324,
	325, 326, 327, 328, 1446, 329, 330, 331, 1226, 332,
	333, 334, 1447, 1448, 1450, 1449, 1451, 1452, 1453, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 1454,
	345, 341, 343, 1455, 346, 344, 347, 1456, 348, 349,
	350, 1457, 1458, 351, 352, 353, 1459, 354, 355, 356,
	1460, 357, 358, 359, 1461, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 1462, 279, 1463, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 1464, 378, 379,
	380, 1465, 1466, 1227, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 1467, 393,
	670, 1468, 671, 394, 1469, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 1229, 400, 401, 1470, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	1471, 1228, 410, 675, 676, 1472, 677, 1473, 411, 412,
	1230, 678, 1231, 413, 414, 415, 1232, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1474, 423, 425,
	424, 1475, 426, 679, 1233, 427, 428, 1234, 1476, 429,
	430, 431, 432, 433, 434, 437, 1477, 1478, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1235, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1236, 480, 468, 1479, 281,
	1237, 482, 483, 484, 1480, 680, 485, 681, 487, 488,
	1481, 0, 489, 0, 490, 1482, 1483, 492, 493, 494,
	1484, 1485, 495, 496, 682, 1238, 497, 1239, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 1486, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 1487, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 1488, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 1489, 550,
	551, 552, 1240, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 1490, 575, 576, 574, 577, 578, 579,
	1491, 580, 581, 563, 564, 582, 583, 1241, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 1492, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 1493, 608, 609, 0,
	605, 596, 1494, 610, 611, 612, 613, 614, 615, 616,
	617, 1495, 618, 693, 694, 695, 696, 1496, 627, 1497,
	619, 620, 621, 697, 622, 698, 1498, 623, 624, 625,
	626, 0, 628, 629, 1499, 1500, 630, 631, 632, 634,
	635, 633, 636, 1501, 637, 1502, 0, 638, 639, 640,
	699, 700, 701, 1503, 642, 641, 643, 644, 702, 645,
	646, 1504, 1505, 1506, 1507, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4255,
	282, 284, 283, 285, 286, 287, 288, 1429, 289, 290,
	1430, 1431, 1432, 0, 1433, 652, 1434, 1435, 1436, 1437,
	291, 292, 1225, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 1438, 657, 301, 302,
	303, 304, 305, 306, 1439, 1440, 0, 307, 658, 659,
	660, 1441, 308, 309, 661, 1442, 1509, 1443, 310, 311,
	312, 313, 314, 315, 316, 0, 1444, 318, 319, 320,
	317, 321, 1445, 322, 0, 323, 324, 325, 326, 327,
	328, 1446, 329, 330, 331, 1226, 332, 333, 334, 1447,
	1448, 1450, 1449, 1451, 1452, 1453, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 1454, 345, 341, 343,
	1455, 346, 344, 347, 1456, 348, 349, 350, 1457, 1458,
	351, 352, 353, 1459, 354, 355, 356, 1460, 357, 358,
	359, 1461, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 1462,
	279, 1463, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 1464, 378, 379, 380, 1465, 1466,
	1227, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 1467, 393, 670, 1468, 671,
	394, 1469, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 1229, 400, 401, 1470, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 1471, 1228, 410,
	675, 676, 1472, 677, 1473, 411, 412, 1230, 678, 1231,
	413, 414, 415, 1232, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 1474, 423, 425, 424, 1475, 426,
	679, 1233, 427, 428, 1234, 1476, 429, 430, 431, 432,
	433, 434, 437, 1477, 1478, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1235, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1236, 480, 468, 1479, 281, 1237, 482, 483,
	484, 1480, 680, 485, 681, 487, 488, 1481, 0, 489,
	0, 490, 1482, 1483, 492, 493, 494, 1484, 1485, 495,
	496, 682, 1238, 497, 1239, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 1486, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 1487, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 1488, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 1489, 550, 551, 552, 1240,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	1490, 575, 576, 574, 577, 578, 579, 1491, 580, 581,
	563, 564, 582, 583, 1241, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 1492, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 1493, 608, 609, 0, 605, 596, 1494,
	610, 611, 612, 613, 614, 615, 616, 617, 1495, 618,
	693, 694, 695, 696, 1496, 627, 1497, 619, 620, 621,
	697, 622, 698, 1498, 623, 624, 625, 626, 0, 628,
	629, 1499, 1500, 630, 631, 632, 634, 635, 633, 636,
	1501, 637, 1502, 0, 638, 639, 640, 699, 700, 701,
	1503, 642, 641, 643, 644, 702, 645, 646, 1504, 1505,
	1506, 1507, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4253, 282, 284, 283,
	285, 286, 287, 288, 1429, 289, 290, 1430, 1431, 1432,
	0, 1433, 652, 1434, 1435, 1436, 1437, 291, 292, 1225,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 1438, 657, 301, 302, 303, 304, 305,
	306, 1439, 1440, 0, 307, 658, 659, 660, 1441, 308,
	309, 661, 1442, 1509, 1443, 310, 311, 312, 313, 314,
	315, 316, 0, 1444, 318, 319, 320, 317, 321, 1445,
	322, 0, 323, 324, 325, 326, 327, 328, 1446, 329,
	330, 331, 1226, 332, 333, 334, 1447, 1448, 1450, 1449,
	1451, 1452, 1453, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 1454, 345, 341, 343, 1455, 346, 344,
	347, 1456, 348, 349, 350, 1457, 1458, 351, 352, 353,
	1459, 354, 355, 356, 1460, 357, 358, 359, 1461, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 1462, 279, 1463, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 1464, 378, 379, 380, 1465, 1466, 1227, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 1467, 393, 670, 1468, 671, 394, 1469, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 1229, 400,
	401, 1470, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 1471, 1228, 410, 675, 676, 1472,
	677, 1473, 411, 412, 1230, 678, 1231, 413, 414, 415,
	1232, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 1474, 423, 425, 424, 1475, 426, 679, 1233, 427,
	428, 1234, 1476, 429, 430, 431, 432, 433, 434, 437,
	1477, 1478, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1235, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1236,
	480, 468, 1479, 281, 1237, 482, 483, 484, 1480, 680,
	485, 681, 487, 488, 1481, 0, 489, 0, 490, 1482,
	1483, 492, 493, 494, 1484, 1485, 495, 496, 682, 1238,
	497, 1239, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 1486, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 1487, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 1488, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 1489, 550, 551, 552, 1240, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 1490, 575, 576,
	574, 577, 578, 579, 1491, 580, 581, 563, 564, 582,
	583, 1241, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 1492, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	1493, 608, 609, 0, 605, 596, 1494, 610, 611, 612,
	613, 614, 615, 616, 617, 1495, 618, 693, 694, 695,
	696, 1496, 627, 1497, 619, 620, 621, 697, 622, 698,
	1498, 623, 624, 625, 626, 0, 628, 629, 1499, 1500,
	630, 631, 632, 634, 635, 633, 636, 1501, 637, 1502,
	0, 638, 639, 640, 699, 700, 701, 1503, 642, 641,
	643, 644, 702, 645, 646, 1504, 1505, 1506, 1507, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4482, 282, 284,
	283, 285, 286, 287, 288, 1429, 289, 290, 1430, 1431,
	1432, 0, 1433, 652, 1434, 1435, 1436, 1437, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 1438, 657, 301, 302, 303, 304,
	305, 306, 1439, 1440, 0, 307, 658, 659, 660, 1441,
	308, 309, 661, 1442, 1509, 1443, 310, 311, 312, 313,
	314, 315, 316, 0, 1444, 318, 319, 320, 317, 321,
	1445, 322, 0, 323, 324, 325, 326, 327, 328, 1446,
	329, 330, 331, 1226, 332, 333, 334, 1447, 1448, 1450,
	1449, 1451, 1452, 1453, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 1454, 345, 341, 343, 1455, 346,
	344, 347, 1456, 348, 349, 350, 1457, 1458, 351, 352,
	353, 1459, 354, 355, 356, 1460, 357, 358, 359, 1461,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 1462, 279, 1463,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 1464, 378, 379, 380, 1465, 1466, 1227, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 1467, 393, 670, 1468, 671, 394, 1469,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 1229,
	400, 401, 1470, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 1471, 1228, 410, 675, 676,
	1472, 677, 1473, 411, 412, 1230, 678, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1474, 423, 425, 424, 1475, 426, 679, 1233,
	427, 428, 1234, 1476, 429, 430, 431, 432, 433, 434,
	437, 1477, 1478, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 1479, 281, 1237, 482, 483, 484, 1480,
	680, 485, 681, 487, 488, 1481, 0, 489, 0, 490,
	1482, 1483, 492, 493, 494, 1484, 1485, 495, 496, 682,
	1238, 497, 1239, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 1486, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 1487, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 1488,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 1489, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 1490, 575,
	576, 574, 577, 578, 579, 1491, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 1492, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 1493, 608, 609, 0, 605, 596, 1494, 610, 611,
	612, 613, 614, 615, 616, 617, 1495, 618, 693, 694,
	695, 696, 1496, 627, 1497, 619, 620, 621, 697, 622,
	698, 1498, 623, 624, 625, 626, 0, 628, 629, 1499,
	1500, 630, 631, 632, 634, 635, 633, 636, 1501, 637,
	1502, 0, 638, 639, 640, 699, 700, 701, 1503, 642,
	641, 643, 644, 702, 645, 646, 1504, 1505, 1506, 1507,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4347, 282,
	284, 283, 285, 286, 287, 288, 1429, 289, 290, 1430,
	1431, 1432, 0, 1433, 652, 1434, 1435, 1436, 1437, 291,
	292, 1225, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 1438, 657, 301, 302, 303,
	304, 305, 306, 1439, 1440, 0, 307, 658, 659, 660,
	1441, 308, 309, 661, 1442, 1509, 1443, 310, 311, 312,
	313, 314, 315, 316, 0, 1444, 318, 319, 320, 317,
	321, 1445, 322, 0, 323, 324, 325, 326, 327, 328,
	1446, 329, 330, 331, 1226, 332, 333, 334, 1447, 1448,
	1450, 1449, 1451, 1452, 1453, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 1454, 345, 341, 343, 1455,
	346, 344, 347, 1456, 348, 349, 350, 1457, 1458, 351,
	352, 353, 1459, 354, 355, 356, 1460, 357, 358, 359,
	1461, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 1462, 279,
	1463, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 1464, 378, 379, 380, 1465, 1466, 1227,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 1467, 393, 670, 1468, 671, 394,
	1469, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1229, 400, 401, 1470, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 1471, 1228, 410, 675,
	676, 1472, 677, 1473, 411, 412, 1230, 678, 1231, 413,
	414, 415, 1232, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 1474, 423, 425, 424, 1475, 426, 679,
	1233, 427, 428, 1234, 1476, 429, 430, 431, 432, 433,
	434, 437, 1477, 1478, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1235, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1236, 480, 468, 1479, 281, 1237, 482, 483, 484,
	1480, 680, 485, 681, 487, 488, 1481, 0, 489, 0,
	490, 1482, 1483, 492, 493, 494, 1484, 1485, 495, 496,
	682, 1238, 497, 1239, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 1486, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 1487, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	1488, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 1489, 550, 551, 552, 1240, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 1490,
	575, 576, 574, 577, 578, 579, 1491, 580, 581, 563,
	564, 582, 583, 1241, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 1492, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 1493, 608, 609, 0, 605, 596, 1494, 610,
	611, 612, 613, 614, 615, 616, 617, 1495, 618, 693,
	694, 695, 696, 1496, 627, 1497, 619, 620, 621, 697,
	622, 698, 1498, 623, 624, 625, 626, 0, 628, 629,
	1499, 1500, 630, 631, 632, 634, 635, 633, 636, 1501,
	637, 1502, 0, 638, 639, 640, 699, 700, 701, 1503,
	642, 641, 643, 644, 702, 645, 646, 1504, 1505, 1506,
	1507, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4183,
	282, 284, 283, 285, 286, 287, 288, 1429, 289, 290,
	1430, 1431, 1432, 0, 1433, 652, 1434, 1435, 1436, 1437,
	291, 292, 1225, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 1438, 657, 301, 302,
	303, 304, 305, 306, 1439, 1440, 0, 307, 658, 659,
	660, 1441, 308, 309, 661, 1442, 1509, 1443, 310, 311,
	312, 313, 314, 315, 316, 0, 1444, 318, 319, 320,
	317, 321, 1445, 322, 0, 323, 324, 325, 326, 327,
	328, 1446, 329, 330, 331, 1226, 332, 333, 334, 1447,
	1448, 1450, 1449, 1451, 1452, 1453, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 1454, 345, 341, 343,
	1455, 346, 344, 347, 1456, 348, 349, 350, 1457, 1458,
	351, 352, 353, 1459, 354, 355, 356, 1460, 357, 358,
	359, 1461, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 1462,
	279, 1463, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 1464, 378, 379, 380, 1465, 1466,
	1227, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 1467, 393, 670, 1468, 671,
	394, 1469, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 1229, 400, 401, 1470, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 1471, 1228, 410,
	675, 676, 1472, 677, 1473, 411, 412, 1230, 678, 1231,
	413, 414, 415, 1232, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 1474, 423, 425, 424, 1475, 426,
	679, 1233, 427, 428, 1234, 1476, 429, 430, 431, 432,
	433, 434, 437, 1477, 1478, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1235, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1236, 480, 468, 1479, 281, 1237, 482, 483,
	484, 1480, 680, 485, 681, 487, 488, 1481, 0, 489,
	0, 490, 1482, 1483, 492, 493, 494, 1484, 1485, 495,
	496, 682, 1238, 497, 1239, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 1486, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 1487, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 1488, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 1489, 550, 551, 552, 1240,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	1490, 575, 576, 574, 577, 578, 579, 1491, 580, 581,
	563, 564, 582, 583, 1241, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 1492, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 1493, 608, 609, 0, 605, 596, 1494,
	610, 611, 612, 613, 614, 615, 616, 617, 1495, 618,
	693, 694, 695, 696, 1496, 627, 1497, 619, 620, 621,
	697, 622, 698, 1498, 623, 624, 625, 626, 0, 628,
	629, 1499, 1500, 630, 631, 632, 634, 635, 633, 636,
	1501, 637, 1502, 0, 638, 639, 640, 699, 700, 701,
	1503, 642, 641, 643, 644, 702, 645, 646, 1504, 1505,
	1506, 1507, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3856, 282, 284, 283, 285, 286, 287, 288, 1429, 289,
	290, 1430, 1431, 1432, 0, 1433, 652, 1434, 1435, 1436,
	1437, 291, 292, 1225, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 1438, 657, 301,
	302, 303, 304, 305, 306, 1439, 1440, 0, 307, 658,
	659, 660, 1441, 308, 309, 661, 1442, 1509, 1443, 310,
	311, 312, 313, 314, 315, 316, 0, 1444, 318, 319,
	320, 317, 321, 1445, 322, 0, 323, 324, 325, 326,
	327, 328, 1446, 329, 330, 331, 1226, 332, 333, 334,
	1447, 1448, 1450, 1449, 1451, 1452, 1453, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 1454, 345, 341,
	343, 1455, 346, 344, 347, 1456, 348, 349, 350, 1457,
	1458, 351, 352, 353, 1459, 354, 355, 356, 1460, 357,
	358, 359, 1461, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	1462, 279, 1463, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 1464, 378, 379, 380, 1465,
	1466, 1227, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 1467, 393, 670, 1468,
	671, 394, 1469, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 1229, 400, 401, 1470, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 1471, 1228,
	410, 675, 676, 1472, 677, 1473, 411, 412, 1230, 678,
	1231, 413, 414, 415, 1232, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 1474, 423, 425, 424, 1475,
	426, 679, 1233, 427, 428, 1234, 1476, 429, 430, 431,
	432, 433, 434, 437, 1477, 1478, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1235, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1236, 480, 468, 1479, 281, 1237, 482,
	483, 484, 1480, 680, 485, 681, 487, 488, 1481, 0,
	489, 0, 490, 1482, 1483, 492, 493, 494, 1484, 1485,
	495, 496, 682, 1238, 497, 1239, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 1486,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 1487, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 1488, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 1489, 550, 551, 552,
	1240, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 1490, 575, 576, 574, 577, 578, 579, 1491, 580,
	581, 563, 564, 582, 583, 1241, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 1492, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 1493, 608, 609, 0, 605, 596,
	1494, 610, 611, 612, 613, 614, 615, 616, 617, 1495,
	618, 693, 694, 695, 696, 1496, 627, 1497, 619, 620,
	621, 697, 622, 698, 1498, 623, 624, 625, 626, 0,
	628, 629, 1499, 1500, 630, 631, 632, 634, 635, 633,
	636, 1501, 637, 1502, 0, 638, 639, 640, 699, 700,
	701, 1503, 642, 641, 643, 644, 702, 645, 646, 1504,
	1505, 1506, 1507, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3674, 282, 284, 283, 285, 286, 287, 288, 1429,
	289, 290, 1430, 1431, 1432, 0, 1433, 652, 1434, 1435,
	1436, 1437, 291, 292, 1225, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 1438, 657,
	301, 302, 303, 304, 305, 306, 1439, 1440, 0, 307,
	658, 659, 660, 1441, 308, 309, 661, 1442, 1509, 1443,
	310, 311, 312, 313, 314, 315, 316, 0, 1444, 318,
	319, 320, 317, 321, 1445, 322, 0, 323, 324, 325,
	326, 327, 328, 1446, 329, 330, 331, 1226, 332, 333,
	334, 1447, 1448, 1450, 1449, 1451, 1452, 1453, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 1454, 345,
	341, 343, 1455, 346, 344, 347, 1456, 348, 349, 350,
	1457, 1458, 351, 352, 353, 1459, 354, 355, 356, 1460,
	357, 358, 359, 1461, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 1462, 279, 1463, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 1464, 378, 379, 380,
	1465, 1466, 1227, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 1467, 393, 670,
	1468, 671, 394, 1469, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 1229, 400, 401, 1470, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 1471,
	1228, 410, 675, 676, 1472, 677, 1473, 411, 412, 1230,
	678, 1231, 413, 414, 415, 1232, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 1474, 423, 425, 424,
	1475, 426, 679, 1233, 427, 428, 1234, 1476, 429, 430,
	431, 432, 433, 434, 437, 1477, 1478, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1235, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1236, 480, 468, 1479, 281, 1237,
	482, 483, 484, 1480, 680, 485, 681, 487, 488, 1481,
	0, 489, 0, 490, 1482, 1483, 492, 493, 494, 1484,
	1485, 495, 496, 682, 1238, 497, 1239, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	1486, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 1487, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 1488, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 1489, 550, 551,
	552, 1240, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 1490, 575, 576, 574, 577, 578, 579, 1491,
	580, 581, 563, 564, 582, 583, 1241, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 1492, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 1493, 608, 609, 0, 605,
	596, 1494, 610, 611, 612, 613, 614, 615, 616, 617,
	1495, 618, 693, 694, 695, 696, 1496, 627, 1497, 619,
	620, 621, 697, 622, 698, 1498, 623, 624, 625, 626,
	0, 628, 629, 1499, 1500, 630, 631, 632, 634, 635,
	633, 636, 1501, 637, 1502, 0, 638, 639, 640, 699,
	700, 701, 1503, 642, 641, 643, 644, 702, 645, 646,
	1504, 1505, 1506, 1507, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 1423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2685, 282, 284, 283, 285, 286, 287, 288,
	1429, 289, 290, 1430, 1431, 1432, 0, 1433, 652, 1434,
	1435, 1436, 1437, 291, 292, 1225, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 1438,
	657, 301, 302, 303, 304, 305, 306, 1439, 1440, 0,
	307, 658, 659, 660, 1441, 308, 309, 661, 1442, 1509,
	1443, 310, 311, 312, 313, 314, 315, 316, 0, 1444,
	318, 319, 320, 317, 321, 1445, 322, 0, 323, 324,
	325, 326, 327, 328, 1446, 329, 330, 331, 1226, 332,
	333, 334, 1447, 1448, 1450, 1449, 1451, 1452, 1453, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 1454,
	345, 341, 343, 1455, 346, 344, 347, 1456, 348, 349,
	350, 1457, 1458, 351, 352, 353, 1459, 354, 355, 356,
	1460, 357, 358, 359, 1461, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 1462, 279, 1463, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 1464, 378, 379,
	380, 1465, 1466, 1227, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 1467, 393,
	670, 1468, 671, 394, 1469, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 1229, 400, 401, 1470, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	1471, 1228, 410, 675, 676, 1472, 677, 1473, 411, 412,
	1230, 678, 1231, 413, 414, 415, 1232, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1474, 423, 425,
	424, 1475, 426, 679, 1233, 427, 428, 1234, 1476, 429,
	430, 431, 432, 433, 434, 437, 1477, 1478, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1235, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1236, 480, 468, 1479, 281,
	1237, 482, 483, 484, 1480, 680, 485, 681, 487, 488,
	1481, 0, 489, 0, 490, 1482, 1483, 492, 493, 494,
	1484, 1485, 495, 496, 682, 1238, 497, 1239, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 1486, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 1487, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 1488, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 1489, 550,
	551, 552, 1240, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 1490, 575, 576, 574, 577, 578, 579,
	1491, 580, 581, 563, 564, 582, 583, 1241, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 1492, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 1493, 608, 609, 0,
	605, 596, 1494, 610, 611, 612, 613, 614, 615, 616,
	617, 1495, 618, 693, 694, 695, 696, 1496, 627, 1497,
	619, 620, 621, 697, 622, 698, 1498, 623, 624, 625,
	626, 0, 628, 629, 1499, 1500, 630, 631, 632, 634,
	635, 633, 636, 1501, 637, 1502, 0, 638, 639, 640,
	699, 700, 701, 1503, 642, 641, 643, 644, 702, 645,
	646, 1504, 1505, 1506, 1507, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 1420, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2309, 282, 284, 283, 285, 286, 287,
	288, 1429, 289, 290, 1430, 1431, 1432, 0, 1433, 652,
	1434, 1435, 1436, 1437, 291, 292, 1225, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	1438, 657, 301, 302, 303, 304, 305, 306, 1439, 1440,
	0, 307, 658, 659, 660, 1441, 308, 309, 661, 1442,
	1509, 1443, 310, 311, 312, 313, 314, 315, 316, 0,
	1444, 318, 319, 320, 317, 321, 1445, 322, 0, 323,
	324, 325, 326, 327, 328, 1446, 329, 330, 331, 1226,
	332, 333, 334, 1447, 1448, 1450, 1449, 1451, 1452, 1453,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	1454, 345, 341, 343, 1455, 346, 344, 347, 1456, 348,
	349, 350, 1457, 1458, 351, 352, 353, 1459, 354, 355,
	356, 1460, 357, 358, 359, 1461, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 1462, 279, 1463, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 1464, 378,
	379, 380, 1465, 1466, 1227, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 1467,
	393, 670, 1468, 671, 394, 1469, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 1229, 400, 401, 1470, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 1471, 1228, 410, 675, 676, 1472, 677, 1473, 411,
	412, 1230, 678, 1231, 413, 414, 415, 1232, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 1474, 423,
	425, 424, 1475, 426, 679, 1233, 427, 428, 1234, 1476,
	429, 430, 431, 432, 433, 434, 437, 1477, 1478, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1235, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1236, 480, 468, 1479,
	281, 1237, 482, 483, 484, 1480, 680, 485, 681, 487,
	488, 1481, 0, 489, 0, 490, 1482, 1483, 492, 493,
	494, 1484, 1485, 495, 496, 682, 1238, 497, 1239, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 1486, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 1487, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 1488, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 1489,
	550, 551, 552, 1240, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 1490, 575, 576, 574, 577, 578,
	579, 1491, 580, 581, 563, 564, 582, 583, 1241, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 1492,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 1493, 608, 609,
	0, 605, 596, 1494, 610, 611, 612, 613, 614, 615,
	616, 617, 1495, 618, 693, 694, 695, 696, 1496, 627,
	1497, 619, 620, 621, 697, 622, 698, 1498, 623, 624,
	625, 626, 0, 628, 629, 1499, 1500, 630, 631, 632,
	634, 635, 633, 636, 1501, 637, 1502, 0, 638, 639,
	640, 699, 700, 701, 1503, 642, 641, 643, 644, 702,
	645, 646, 1504, 1505, 1506, 1507, 647, 648, 703, 649,
	650, 651, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 1429, 289, 290, 1430,
	1431, 1432, 0, 1433, 652, 1434, 1435, 1436, 1437, 291,
	292, 1225, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 1438, 657, 301, 302, 303,
	304, 305, 306, 1439, 1440, 0, 307, 658, 659, 660,
	1441, 308, 309, 661, 1442, 1509, 1443, 310, 311, 312,
	313, 314, 315, 316, 0, 1444, 318, 319, 320, 317,
	321, 1445, 322, 0, 323, 324, 325, 326, 327, 328,
	1446, 329, 330, 331, 1226, 332, 333, 334, 1447, 1448,
	1450, 1449, 1451, 1452, 1453, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 1454, 345, 341, 343, 1455,
	346, 344, 347, 1456, 348, 349, 350, 1457, 1458, 351,
	352, 353, 1459, 354, 355, 356, 1460, 357, 358, 359,
	1461, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 1462, 279,
	1463, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 1464, 378, 379, 380, 1465, 1466, 1227,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 1467, 393, 670, 1468, 671, 394,
	1469, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1229, 400, 401, 1470, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 1471, 1228, 410, 675,
	676, 1472, 677, 1473, 411, 412, 1230, 678, 1231, 413,
	414, 415, 1232, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 1474, 423, 425, 424, 1475, 426, 679,
	1233, 427, 428, 1234, 1476, 429, 430, 431, 432, 433,
	434, 437, 1477, 1478, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1235, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1236, 480, 468, 1479, 281, 1237, 482, 483, 484,
	1480, 680, 485, 681, 487, 488, 1481, 0, 489, 0,
	490, 1482, 1483, 492, 493, 494, 1484, 1485, 495, 496,
	682, 1238, 497, 1239, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 1486, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 1487, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	1488, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 1489, 550, 551, 552, 1240, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 1490,
	575, 576, 574, 577, 578, 579, 1491, 580, 581, 563,
	564, 582, 583, 1241, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 1492, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 1493, 608, 609, 0, 605, 596, 1494, 610,
	611, 612, 613, 614, 615, 616, 617, 1495, 618, 693,
	694, 695, 696, 1496, 627, 1497, 619, 620, 621, 697,
	622, 698, 1498, 623, 624, 625, 626, 0, 628, 629,
	1499, 1500, 630, 631, 632, 634, 635, 633, 636, 1501,
	637, 1502, 0, 638, 639, 640, 699, 700, 701, 1503,
	642, 641, 643, 644, 702, 645, 646, 1504, 1505, 1506,
	1507, 647, 648, 703, 649, 650, 651, 2660, 0, 1161,
	1133, 1134, 1135, 1131, 1132, 1144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 2657, 289, 290, 0, 0, 0, 0,
	0, 1185, 1149, 0, 0, 0, 291, 292, 1225, 293,
	294, 295, 296, 297, 298, 653, 1198, 0, 299, 1205,
	300, 1204, 0, 1215, 301, 302, 303, 304, 305, 306,
	1151, 1184, 1116, 307, 1245, 1246, 660, 0, 308, 309,
	1191, 0, 1172, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177,
	1176, 1180, 335, 336, 337, 338, 339, 1208, 340, 342,
	1202, 1201, 1121, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 2658, 0, 351, 1193, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1127, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1216, 1217, 373, 1140, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1200, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1227, 381, 382, 383,
	1213, 1214, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1223, 0, 1150, 394, 0, 395, 396,
	397, 398, 399, 1186, 1187, 1190, 486, 1229, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1228, 410, 1195, 1196, 0, 1156,
	0, 411, 412, 1230, 1188, 1231, 413, 414, 415, 1232,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1224, 1233, 427, 428,
	1234, 0, 429, 430, 431, 432, 433, 434, 437, 1179,
	1178, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1235, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1236, 480,
	468, 1118, 281, 1237, 482, 483, 484, 1141, 1189, 485,
	1203, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1238, 497,
	1239, 1218, 498, 499, 1128, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1219, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1199, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1240, 553, 554, 555, 556,
	557, 1129, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1182, 580, 581, 563, 564, 582, 583,
	1241, 584, 585, 586, 587, 588, 589, 590, 1197, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1244, 599, 600, 601, 602, 1220, 606, 607, 0,
	608, 609, 1115, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 1209, 1210, 1211, 1212,
	0, 627, 0, 619, 620, 621, 1221, 622, 1222, 1139,
	623, 624, 625, 626, 0, 628, 629, 0, 1122, 630,
	631, 632, 634, 635, 633, 636, 1183, 637, 0, 0,
	638, 639, 640, 699, 1206, 1243, 2656, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 1119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1114, 0, 0,
	0, 0, 0, 0, 1112, 1113, 2659, 0, 0, 0,
	0, 0, 0, 0, 1145, 2655, 0, 1105, 1143, 1161,
	1133, 1134, 1135, 1131, 1132, 1144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1185, 1149, 0, 0, 0, 291, 292, 1225, 293,
	294, 295, 296, 297, 298, 653, 1198, 0, 299, 1205,
	300, 1204, 0, 1215, 301, 302, 303, 304, 305, 306,
	1151, 1184, 1116, 307, 1245, 1246, 660, 0, 308, 309,
	1191, 0, 1172, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177,
	1176, 1180, 335, 336, 337, 338, 339, 1208, 340, 342,
	1202, 1201, 1121, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1193, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1127, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1216, 1217, 373, 1140, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1200, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1227, 381, 382, 383,
	1213, 1214, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1223, 0, 1150, 394, 0, 395, 396,
	397, 398, 399, 1186, 1187, 1190, 486, 1229, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1228, 410, 1195, 1196, 0, 1156,
	0, 411, 412, 1230, 1188, 1231, 413, 414, 415, 1232,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1224, 1233, 427, 428,
	1234, 0, 429, 430, 431, 432, 433, 434, 437, 1179,
	1178, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1235, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1236, 480,
	468, 1118, 281, 1237, 482, 483, 484, 1141, 1189, 485,
	1203, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1238, 497,
	1239, 1218, 498, 499, 1128, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1219, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1199, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1240, 553, 554, 555, 556,
	557, 1129, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 241, 575, 576, 574,
	577, 578, 579, 1182, 580, 581, 563, 564, 582, 583,
	1241, 584, 585, 586, 587, 588, 589, 590, 1197, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1244, 599, 600, 601, 602, 1220, 606, 607, 0,
	608, 609, 1115, 605, 596, 243, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 1209, 1210, 1211, 1212,
	0, 627, 0, 619, 620, 621, 1221, 622, 1222, 1139,
	623, 624, 625, 626, 0, 628, 629, 0, 1122, 630,
	631, 632, 634, 635, 633, 636, 1183, 637, 0, 0,
	638, 639, 640, 1663, 1206, 1243, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 235, 647, 648,
	703, 649, 650, 651, 1119, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1114, 0, 0,
	0, 0, 0, 0, 1112, 1113, 1161, 1133, 1134, 1135,
	1131, 1132, 1144, 0, 1924, 1922, 0, 0, 1143, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 1185, 1149,
	0, 0, 0, 291, 292, 1225, 293, 294, 295, 296,
	297, 298, 653, 1198, 0, 299, 1205, 300, 1204, 0,
	1215, 301, 302, 303, 304, 305, 306, 1151, 1184, 1116,
	307, 1245, 1246, 660, 0, 308, 309, 1191, 0, 1172,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1226, 332,
	333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335,
	336, 337, 338, 339, 1208, 340, 342, 1202, 1201, 1121,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1193, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1127, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1216,
	1217, 373, 1140, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1200, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1227, 381, 382, 383, 1213, 1214, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1223, 0, 1150, 394, 0, 395, 396, 397, 398, 399,
	1186, 1187, 1190, 486, 1229, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1228, 410, 1195, 1196, 0, 1156, 0, 411, 412,
	1230, 1188, 1231, 413, 414, 415, 1232, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1224, 1233, 427, 428, 1234, 0, 429,
	430, 431, 432, 433, 434, 437, 1179, 1178, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1235, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1236, 480, 468, 1118, 281,
	1237, 482, 483, 484, 1141, 1189, 485, 1203, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1238, 497, 1239, 1218, 498,
	499, 1128, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1219, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 1199, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1240, 553, 554, 555, 556, 557, 1129, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 241, 575, 576, 574, 577, 578, 579,
	1182, 580, 581, 563, 564, 582, 583, 1241, 584, 585,
	586, 587, 588, 589, 590, 1197, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 1244, 599,
	600, 601, 602, 1220, 606, 607, 0, 608, 609, 1115,
	605, 596, 243, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 1209, 1210, 1211, 1212, 0, 627, 0,
	619, 620, 621, 1221, 622, 1222, 1139, 623, 624, 625,
	626, 0, 628, 629, 0, 1122, 630, 631, 632, 634,
	635, 633, 636, 1183, 637, 0, 0, 638, 639, 640,
	1663, 1206, 1243, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 235, 647, 648, 703, 649, 650,
	651, 1119, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 1112, 1113, 1161, 1133, 1134, 1135, 1131, 1132, 1144,
	0, 1924, 3305, 0, 0, 1143, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1185, 1149, 0, 0, 0,
	291, 292, 1225, 293, 294, 295, 296, 297, 298, 653,
	1198, 0, 299, 1205, 300, 1204, 0, 1215, 301, 302,
	303, 304, 305, 306, 1151, 1184, 1116, 307, 1245, 1246,
	660, 0, 308, 309, 1191, 0, 1172, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1226, 332, 333, 334, 1175,
	1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337, 338,
	339, 1208, 340, 342, 1202, 1201, 1121, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1193, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1127, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1216, 1217, 373, 1140,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1200,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1227, 381, 382, 383, 1213, 1214, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1223, 0, 1150,
	394, 0, 395, 396, 397, 398, 399, 1186, 1187, 1190,
	486, 1229, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1228, 410,
	1195, 1196, 0, 1156, 0, 411, 412, 1230, 1188, 1231,
	413, 414, 415, 1232, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1224, 1233, 427, 428, 1234, 0, 429, 430, 431, 432,
	433, 434, 437, 1179, 1178, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1235, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1236, 480, 468, 1118, 281, 1237, 482, 483,
	484, 1141, 1189, 485, 1203, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1238, 497, 1239, 1218, 498, 499, 1128, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 1219,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 1199, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1240,
	553, 554, 555, 556, 557, 1129, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	241, 575, 576, 574, 577, 578, 579, 1182, 580, 581,
	563, 564, 582, 583, 1241, 584, 585, 586, 587, 588,
	589, 590, 1197, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 1244, 599, 600, 601, 602,
	1220, 606, 607, 0, 608, 609, 1115, 605, 596, 243,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	1209, 1210, 1211, 1212, 0, 627, 0, 619, 620, 621,
	1221, 622, 1222, 1139, 623, 624, 625, 626, 0, 628,
	629, 0, 1122, 630, 631, 632, 634, 635, 633, 636,
	1183, 637, 0, 0, 638, 639, 640, 1663, 1206, 1243,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 0,
	0, 235, 647, 648, 703, 649, 650, 651, 1119, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 0, 0, 0, 0, 0, 1112, 1113,
	1161, 1133, 1134, 1135, 1131, 1132, 1144, 0, 1924, 1922,
	0, 0, 1143, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 1185, 1149, 0, 0, 0, 291, 292, 1225,
	293, 294, 295, 296, 297, 298, 653, 1198, 0, 299,
	1205, 300, 1204, 2791, 1215, 301, 302, 303, 304, 305,
	306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0, 308,
	309, 1191, 0, 1172, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181,
	1177, 1176, 1180, 335, 336, 337, 338, 339, 1208, 340,
	342, 1202, 1201, 1121, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1193, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1127, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1216, 1217, 373, 1140, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1200, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 2796, 1227, 381, 382,
	383, 1213, 1214, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1223, 0, 1150, 394, 0, 395,
	396, 397, 398, 399, 1186, 1187, 1190, 486, 1229, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1228, 410, 1195, 1196, 0,
	1156, 0, 411, 412, 1230, 1188, 1231, 413, 414, 415,
	1232, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 2792, 426, 1224, 1233, 427,
	428, 1234, 0, 429, 430, 431, 432, 433, 434, 437,
	1179, 1178, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1235, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1236,
	480, 468, 1118, 281, 1237, 482, 483, 484, 1141, 1189,
	485, 1203, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 1238,
	497, 1239, 1218, 498, 499, 1128, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 1219, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 1199, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 1240, 553, 554, 555,
	556, 557, 1129, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 1182, 580, 581, 563, 564, 582,
	583, 1241, 584, 585, 586, 587, 588, 589, 590, 1197,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 1244, 599, 600, 601, 602, 1220, 606, 607,
	0, 608, 609, 1115, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 1209, 1210, 1211,
	1212, 0, 627, 2793, 619, 620, 621, 1221, 622, 1222,
	1139, 623, 624, 625, 626, 0, 628, 629, 0, 1122,
	630, 631, 632, 634, 635, 633, 636, 1183, 637, 0,
	0, 638, 639, 640, 699, 1206, 1243, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 1119, 0, 0, 0, 2705,
	0, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114, 0,
	0, 0, 0, 0, 0, 1112, 1113, 0, 282, 284,
	283, 285, 286, 287, 288, 1145, 289, 290, 0, 1143,
	0, 0, 0, 1185, 1149, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 1198, 0,
	299, 1205, 300, 1204, 0, 1215, 301, 302, 303, 304,
	305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0,
	308, 309, 1191, 0, 1172, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 1175, 1173, 1174,
	1181, 1177, 1176, 1180, 335, 336, 337, 338, 339, 1208,
	340, 342, 1202, 1201, 1121, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1193,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1127, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1216, 1217, 373, 1140, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1200, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 1213, 1214, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1223, 0, 1150, 394, 0,
	395, 396, 397, 398, 399, 1186, 1187, 1190, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1228, 410, 1195, 1196,
	0, 1156, 0, 411, 412, 1230, 1188, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1224, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 1179, 1178, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 1118, 281, 1237, 482, 483, 484, 1141,
	1189, 485, 1203, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 1218, 498, 499, 1128, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1219, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1199, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 1129, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1182, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	1197, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1244, 599, 600, 601, 602, 1220, 606,
	607, 0, 608, 609, 1115, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1209, 1210,
	1211, 1212, 0, 627, 0, 619, 620, 621, 1221, 622,
	1222, 1139, 623, 624, 625, 626, 0, 628, 629, 0,
	1122, 630, 631, 632, 634, 635, 633, 636, 1183, 637,
	0, 0, 638, 639, 640, 699, 1206, 1243, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 0, 0, 0, 1112, 1113, 0, 0,
	0, 0, 0, 0, 0, 0, 1145, 2703, 0, 2702,
	1143, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1185, 1149, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 1198, 0,
	299, 1205, 300, 1204, 0, 1215, 301, 302, 303, 304,
	305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0,
	308, 309, 1191, 0, 1172, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 1175, 1173, 1174,
	1181, 1177, 1176, 1180, 335, 336, 337, 338, 339, 1208,
	340, 342, 1202, 1201, 1121, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1193,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1127, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1216, 1217, 373, 1140, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1200, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 1213, 1214, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1223, 0, 1150, 394, 0,
	395, 396, 397, 398, 399, 1186, 1187, 1190, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1228, 410, 1195, 1196,
	0, 1156, 0, 411, 412, 1230, 1188, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1224, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 1179, 1178, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 1118, 281, 1237, 482, 483, 484, 1141,
	1189, 485, 1203, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 1218, 498, 499, 1128, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1219, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1199, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 1129, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1182, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	1197, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1244, 599, 600, 601, 602, 1220, 606,
	607, 0, 608, 609, 1115, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1209, 1210,
	1211, 1212, 0, 627, 0, 619, 620, 621, 1221, 622,
	1222, 1139, 623, 624, 625, 626, 0, 628, 629, 0,
	1122, 630, 631, 632, 634, 635, 633, 636, 1183, 637,
	0, 0, 638, 639, 640, 699, 1206, 1243, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 0, 0, 0, 1112, 1113, 0, 0,
	0, 0, 0, 0, 0, 0, 1145, 2700, 0, 2699,
	1143, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1185, 1149, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 1198, 0,
	299, 1205, 300, 1204, 0, 1215, 301, 302, 303, 304,
	305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0,
	308, 309, 1191, 0, 1172, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 1175, 1173, 1174,
	1181, 1177, 1176, 1180, 335, 336, 337, 338, 339, 1208,
	340, 342, 1202, 1201, 1121, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1193,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1127, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1216, 1217, 373, 1140, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1200, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 1213, 1214, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1223, 0, 1150, 394, 0,
	395, 396, 397, 398, 399, 1186, 1187, 1190, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1228, 410, 1195, 1196,
	0, 1156, 0, 411, 412, 1230, 1188, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1224, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 1179, 1178, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 1118, 281, 1237, 482, 483, 484, 1141,
	1189, 485, 1203, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 1218, 498, 499, 1128, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1219, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1199, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 1129, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1182, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	1197, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1244, 599, 600, 601, 602, 1220, 606,
	607, 0, 608, 609, 1115, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1209, 1210,
	1211, 1212, 0, 627, 0, 619, 620, 621, 1221, 622,
	1222, 1139, 623, 624, 625, 626, 0, 628, 629, 0,
	1122, 630, 631, 632, 634, 635, 633, 636, 1183, 637,
	0, 0, 638, 639, 640, 699, 1206, 1243, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 0, 0, 0, 1112, 1113, 0, 0,
	0, 0, 0, 0, 0, 0, 1145, 2697, 0, 2696,
	1143, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1185, 1149, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 1198, 0,
	299, 1205, 300, 1204, 0, 1215, 301, 302, 303, 304,
	305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0,
	308, 309, 1191, 0, 1172, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 1175, 1173, 1174,
	1181, 1177, 1176, 1180, 335, 336, 337, 338, 339, 1208,
	340, 342, 1202, 1201, 1121, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1193,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1127, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1216, 1217, 373, 1140, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1200, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 1213, 1214, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1223, 0, 1150, 394, 0,
	395, 396, 397, 398, 399, 1186, 1187, 1190, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1228, 410, 1195, 1196,
	0, 1156, 0, 411, 412, 1230, 1188, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1224, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 1179, 1178, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 1118, 281, 1237, 482, 483, 484, 1141,
	1189, 485, 1203, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 1218, 498, 499, 1128, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1219, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1199, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 1129, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1182, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	1197, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1244, 599, 600, 601, 602, 1220, 606,
	607, 0, 608, 609, 1115, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1209, 1210,
	1211, 1212, 0, 627, 0, 619, 620, 621, 1221, 622,
	1222, 1139, 623, 624, 625, 626, 0, 628, 629, 0,
	1122, 630, 631, 632, 634, 635, 633, 636, 1183, 637,
	0, 0, 638, 639, 640, 699, 1206, 1243, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 0, 0, 0, 1112, 1113, 0, 0,
	0, 0, 0, 0, 0, 0, 1145, 2694, 0, 1763,
	1143, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1185, 1149, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 1198, 0,
	299, 1205, 300, 1204, 0, 1215, 301, 302, 303, 304,
	305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0,
	308, 309, 1191, 0, 1172, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 1175, 1173, 1174,
	1181, 1177, 1176, 1180, 335, 336, 337, 338, 339, 1208,
	340, 342, 1202, 1201, 1121, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1193,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1127, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1216, 1217, 373, 1140, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1200, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 1213, 1214, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1223, 0, 1150, 394, 0,
	395, 396, 397, 398, 399, 1186, 1187, 1190, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1228, 410, 1195, 1196,
	0, 1156, 0, 411, 412, 1230, 1188, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1224, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 1179, 1178, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 1118, 281, 1237, 482, 483, 484, 1141,
	1189, 485, 1203, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 1218, 498, 499, 1128, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1219, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1199, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 1129, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1182, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	1197, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1244, 599, 600, 601, 602, 1220, 606,
	607, 0, 608, 609, 1115, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1209, 1210,
	1211, 1212, 0, 627, 0, 619, 620, 621, 1221, 622,
	1222, 1139, 623, 624, 625, 626, 0, 628, 629, 0,
	1122, 630, 631, 632, 634, 635, 633, 636, 1183, 637,
	0, 0, 638, 639, 640, 699, 1206, 1243, 0, 642,
	641, 643, 644, 702, 645, 646, 1762, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1119, 0, 0, 0,
	1108, 0, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114,
	0, 0, 0, 0, 0, 0, 1112, 1113, 0, 282,
	284, 283, 285, 286, 287, 288, 1145, 289, 290, 0,
	1143, 0, 0, 0, 1185, 1149, 0, 0, 0, 291,
	292, 1225, 293, 294, 295, 296, 297, 298, 653, 1198,
	0, 299, 1205, 300, 1204, 0, 1215, 301, 302, 303,
	304, 305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660,
	0, 308, 309, 1191, 0, 1172, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1226, 332, 333, 334, 1175, 1173,
	1174, 1181, 1177, 1176, 1180, 335, 336, 337, 338, 339,
	1208, 340, 342, 1202, 1201, 1121, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1193, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1127, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1216, 1217, 373, 1140, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1200, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1227,
	381, 382, 383, 1213, 1214, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1223, 0, 1150, 394,
	0, 395, 396, 397, 398, 399, 1186, 1187, 1190, 486,
	1229, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1228, 410, 1195,
	1196, 0, 1156, 0, 411, 412, 1230, 1188, 1231, 413,
	414, 415, 1232, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1224,
	1233, 427, 428, 1234, 0, 429, 430, 431, 432, 433,
	434, 437, 1179, 1178, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1235, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1236, 480, 468, 1118, 281, 1237, 482, 483, 484,
	1141, 1189, 485, 1203, 487, 488, 0, 0, 489, 0,
	490, 1123, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1238, 497, 1239, 1218, 498, 499, 1128, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 1219, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 1199, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1240, 553,
	554, 555, 556, 557, 1129, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 1182, 580, 581, 563,
	564, 582, 583, 1241, 584, 585, 586, 587, 588, 589,
	590, 1197, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 1244, 599, 600, 601, 602, 1220,
	606, 607, 0, 608, 609, 1115, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 1209,
	1210, 1211, 1212, 0, 627, 0, 619, 620, 621, 1221,
	622, 1222, 1139, 623, 624, 625, 626, 0, 628, 629,
	0, 1122, 630, 631, 632, 634, 635, 633, 636, 1183,
	637, 0, 0, 638, 639, 640, 699, 1206, 1243, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1119, 0, 0,
	0, 0, 0, 1161, 1133, 1134, 1135, 1131, 1132, 1144,
	1114, 0, 0, 0, 0, 0, 0, 1112, 1113, 0,
	282, 284, 283, 285, 286, 287, 288, 1145, 289, 290,
	0, 1143, 0, 0, 0, 1185, 1149, 0, 0, 0,
	291, 292, 1225, 293, 294, 295, 296, 297, 298, 653,
	1198, 0, 299, 1205, 300, 1204, 0, 1215, 301, 302,
	303, 304, 305, 306, 1151, 1184, 1116, 307, 1245, 1246,
	660, 0, 308, 309, 1191, 0, 1172, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 4848,
	328, 0, 329, 330, 331, 1226, 332, 333, 334, 1175,
	1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337, 338,
	339, 1208, 340, 342, 1202, 1201, 1121, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1193, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1127, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1216, 1217, 373, 1140,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1200,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1227, 381, 382, 383, 1213, 1214, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1223, 0, 1150,
	394, 0, 395, 396, 397, 398, 399, 1186, 1187, 1190,
	486, 1229, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1228, 410,
	1195, 1196, 0, 1156, 0, 411, 412, 1230, 1188, 1231,
	413, 414, 415, 1232, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1224, 1233, 427, 428, 1234, 0, 429, 430, 431, 432,
	433, 434, 437, 1179, 1178, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1235, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1236, 480, 468, 1118, 281, 1237, 482, 483,
	484, 1141, 1189, 485, 1203, 487, 488, 0, 0, 489,
	0, 490, 1123, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1238, 497, 1239, 1218, 498, 499, 1128, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 1219,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 1199, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1240,
	553, 554, 555, 556, 557, 1129, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 1182, 580, 581,
	563, 564, 582, 583, 1241, 584, 585, 586, 587, 588,
	589, 590, 1197, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 1244, 599, 600, 601, 602,
	1220, 606, 607, 0, 608, 609, 1115, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	1209, 1210, 1211, 1212, 0, 627, 0, 619, 620, 621,
	1221, 622, 1222, 1139, 623, 624, 625, 626, 0, 628,
	629, 0, 1122, 630, 631, 632, 634, 635, 633, 636,
	1183, 637, 0, 0, 638, 639, 640, 699, 1206, 1243,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 1119, 0,
	0, 0, 0, 0, 1161, 1133, 1134, 1135, 1131, 1132,
	1144, 1114, 0, 0, 0, 0, 0, 0, 1112, 1113,
	0, 282, 284, 283, 285, 286, 287, 288, 1145, 289,
	290, 0, 1143, 0, 0, 0, 1185, 1149, 0, 0,
	0, 291, 292, 1225, 293, 294, 295, 296, 297, 298,
	653, 1198, 0, 299, 1205, 300, 1204, 0, 1215, 301,
	302, 303, 304, 305, 306, 1151, 1184, 1116, 307, 1245,
	1246, 660, 0, 308, 309, 1191, 0, 1172, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1226, 332, 333, 334,
	1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337,
	338, 339, 1208, 340, 342, 1202, 1201, 1121, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1193, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1127, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1216, 1217, 373,
	1140, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1200, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1227, 381, 382, 383, 1213, 1214, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1223, 0,
	1150, 394, 0, 395, 396, 397, 398, 399, 1186, 1187,
	1190, 486, 1229, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 2537, 407, 408, 409, 0, 1228,
	410, 1195, 1196, 0, 1156, 0, 411, 412, 1230, 1188,
	1231, 413, 414, 415, 1232, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1224, 1233, 427, 428, 1234, 0, 429, 430, 431,
	432, 433, 434, 437, 1179, 1178, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1235, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1236, 480, 468, 1118, 281, 1237, 482,
	483, 484, 1141, 1189, 485, 1203, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1238, 497, 1239, 1218, 498, 499, 1128,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1219, 517, 687, 518, 519, 2536, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 1199, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1240, 553, 554, 555, 556, 557, 1129, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1182, 580,
	581, 563, 564, 582, 583, 1241, 584, 585, 586, 587,
	588, 589, 590, 1197, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 1244, 599, 600, 601,
	602, 1220, 606, 607, 0, 608, 609, 1115, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 1209, 1210, 1211, 1212, 0, 627, 0, 619, 620,
	621, 1221, 622, 1222, 1139, 623, 624, 625, 626, 0,
	628, 629, 0, 1122, 630, 631, 632, 634, 635, 633,
	636, 1183, 637, 0, 0, 638, 639, 640, 699, 1206,
	1243, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1119,
	0, 0, 0, 0, 0, 1161, 1133, 1134, 1135, 1131,
	1132, 1144, 1114, 0, 0, 0, 0, 0, 0, 1112,
	1113, 0, 282, 284, 283, 285, 286, 287, 288, 1145,
	289, 290, 0, 1143, 0, 0, 0, 1185, 1149, 0,
	0, 0, 291, 292, 1225, 293, 294, 295, 296, 297,
	298, 653, 1198, 0, 299, 1205, 300, 1204, 0, 1215,
	301, 302, 303, 304, 305, 306, 1151, 1184, 1116, 307,
	1245, 1246, 660, 0, 308, 309, 1191, 0, 1172, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 4572, 328, 0, 329, 330, 331, 1226, 332, 333,
	334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336,
	337, 338, 339, 1208, 340, 342, 1202, 1201, 1121, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1193, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1127, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1216, 1217,
	373, 1140, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1200, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1227, 381, 382, 383, 1213, 1214, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1223,
	0, 1150, 394, 0, 395, 396, 397, 398, 399, 1186,
	1187, 1190, 486, 1229, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1228, 410, 1195, 1196, 0, 1156, 0, 411, 412, 1230,
	1188, 1231, 413, 414, 415, 1232, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1224, 1233, 427, 428, 1234, 0, 429, 430,
	431, 432, 433, 434, 437, 1179, 1178, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1235, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1236, 480, 468, 1118, 281, 1237,
	482, 483, 484, 1141, 1189, 485, 1203, 487, 488, 0,
	0, 489, 0, 490, 1123, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 1238, 497, 1239, 1218, 498, 499,
	1128, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 1219, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 1199, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 1240, 553, 554, 555, 556, 557, 1129, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 1182,
	580, 581, 563, 564, 582, 583, 1241, 584, 585, 586,
	587, 588, 589, 590, 1197, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 1244, 599, 600,
	601, 602, 1220, 606, 607, 0, 608, 609, 1115, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 1209, 1210, 1211, 1212, 0, 627, 0, 619,
	620, 621, 1221, 622, 1222, 1139, 623, 624, 625, 626,
	0, 628, 629, 0, 1122, 630, 631, 632, 634, 635,
	633, 636, 1183, 637, 0, 0, 638, 639, 640, 699,
	1206, 1243, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	1119, 0, 0, 0, 0, 0, 1161, 1133, 1134, 1135,
	1131, 1132, 1144, 1114, 0, 0, 0, 0, 0, 0,
	1112, 1113, 0, 282, 284, 283, 285, 286, 287, 288,
	1145, 289, 290, 0, 1143, 0, 0, 0, 1185, 1149,
	0, 0, 0, 291, 292, 1225, 293, 294, 295, 296,
	297, 298, 653, 1198, 0, 299, 1205, 300, 1204, 0,
	1215, 301, 302, 303, 304, 305, 306, 1151, 1184, 1116,
	307, 1245, 1246, 660, 0, 308, 309, 1191, 0, 1172,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1226, 332,
	333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335,
	336, 337, 338, 339, 1208, 340, 342, 1202, 1201, 1121,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1193, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1127, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1216,
	1217, 373, 1140, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1200, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1227, 381, 382, 383, 1213, 1214, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1223, 0, 1150, 394, 0, 395, 396, 397, 398, 399,
	1186, 1187, 1190, 486, 1229, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1228, 410, 1195, 1196, 0, 1156, 0, 411, 412,
	1230, 1188, 1231, 413, 414, 415, 1232, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1224, 1233, 427, 428, 1234, 0, 429,
	430, 431, 432, 433, 434, 437, 1179, 1178, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1235, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1236, 480, 468, 1118, 281,
	1237, 482, 483, 484, 1141, 1189, 485, 1203, 487, 488,
	0, 0, 489, 0, 490, 1123, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1238, 497, 1239, 1218, 498,
	499, 1128, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1219, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 1199, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1240, 553, 554, 555, 556, 557, 1129, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	1182, 580, 581, 563, 564, 582, 583, 1241, 584, 585,
	586, 587, 588, 589, 590, 1197, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 1244, 599,
	600, 601, 602, 1220, 606, 607, 0, 608, 609, 1115,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 1209, 1210, 1211, 1212, 0, 627, 0,
	619, 620, 621, 1221, 622, 1222, 1139, 623, 624, 625,
	626, 0, 628, 629, 0, 1122, 630, 631, 632, 634,
	635, 633, 636, 1183, 637, 0, 0, 638, 639, 640,
	699, 1206, 1243, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 1119, 0, 0, 0, 0, 0, 1161, 1133, 1134,
	1135, 1131, 1132, 1144, 1114, 0, 0, 0, 0, 0,
	0, 1112, 1113, 0, 282, 284, 283, 285, 286, 287,
	288, 1145, 289, 290, 0, 1143, 0, 0, 0, 1185,
	1149, 0, 0, 0, 291, 292, 1225, 293, 294, 295,
	296, 297, 298, 653, 1198, 0, 299, 1205, 300, 1204,
	0, 1215, 301, 302, 303, 304, 305, 306, 1151, 1184,
	1116, 307, 1245, 1246, 660, 0, 308, 309, 1191, 0,
	1172, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1226,
	332, 333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180,
	335, 336, 337, 338, 339, 1208, 340, 342, 1202, 1201,
	1121, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1193, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1127, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1216, 1217, 373, 1140, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1200, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1227, 381, 382, 383, 1213, 1214,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1223, 0, 1150, 394, 0, 395, 396, 397, 398,
	399, 1186, 1187, 1190, 486, 1229, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1228, 410, 1195, 1196, 0, 1156, 0, 411,
	412, 1230, 1188, 1231, 413, 414, 415, 1232, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1224, 1233, 427, 428, 1234, 0,
	429, 430, 431, 432, 433, 434, 437, 1179, 1178, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1235, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1236, 480, 468, 1118,
	4148, 1237, 482, 483, 484, 1141, 1189, 485, 1203, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1238, 497, 1239, 1218,
	498, 499, 1128, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 1219, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 1199,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1240, 553, 554, 555, 556, 557, 1129,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 1182, 580, 581, 563, 564, 582, 583, 1241, 584,
	585, 586, 587, 588, 589, 590, 1197, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 1244,
	599, 600, 601, 602, 1220, 606, 607, 0, 608, 609,
	1115, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 1209, 1210, 1211, 1212, 0, 627,
	0, 619, 620, 621, 1221, 622, 1222, 1139, 623, 624,
	625, 626, 0, 628, 629, 0, 1122, 630, 631, 632,
	634, 635, 633, 636, 1183, 637, 0, 0, 638, 639,
	640, 699, 1206, 1243, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1119, 0, 0, 0, 0, 0, 1161, 1133,
	1134, 1135, 1131, 1132, 1144, 1114, 0, 0, 0, 0,
	0, 0, 1112, 1113, 1993, 282, 284, 283, 285, 286,
	287, 288, 1145, 289, 290, 0, 1143, 0, 0, 0,
	1185, 1149, 0, 0, 0, 291, 292, 1225, 293, 294,
	295, 296, 297, 298, 653, 1198, 0, 299, 1205, 300,
	1204, 0, 1215, 301, 302, 303, 304, 305, 306, 1151,
	1184, 1116, 307, 1245, 1246, 660, 0, 308, 309, 1191,
	0, 1172, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177, 1176,
	1180, 335, 336, 337, 338, 339, 1208, 340, 342, 1202,
	1201, 1121, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1193, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1127,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1216, 1217, 373, 1140, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1200, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1227, 381, 382, 383, 1213,
	1214, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1223, 0, 1150, 394, 0, 395, 396, 397,
	398, 399, 1186, 1187, 1190, 486, 1229, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1228, 410, 1195, 1196, 0, 1156, 0,
	411, 412, 1230, 1188, 1231, 413, 414, 415, 1232, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1224, 1233, 427, 428, 1234,
	0, 429, 430, 431, 432, 433, 434, 437, 1179, 1178,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1235,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1236, 480, 468,
	1118, 281, 1237, 482, 483, 484, 1141, 1189, 485, 1203,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1238, 497, 1239,
	1218, 498, 499, 1128, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 1219, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	1199, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1240, 553, 554, 555, 556, 557,
	1129, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 1182, 580, 581, 563, 564, 582, 583, 1241,
	584, 585, 586, 587, 588, 589, 590, 1197, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	1244, 599, 600, 601, 602, 1220, 606, 607, 0, 608,
	609, 1115, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 1209, 1210, 1211, 1212, 0,
	627, 0, 619, 620, 621, 1221, 622, 1222, 1139, 623,
	624, 625, 626, 0, 628, 629, 0, 1122, 630, 631,
	632, 634, 635, 633, 636, 1183, 637, 0, 0, 638,
	639, 640, 699, 1206, 1243, 3834, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 1119, 0, 0, 0, 0, 0, 1161,
	1133, 1134, 1135, 1131, 1132, 1144, 1114, 0, 0, 0,
	0, 0, 0, 1112, 1113, 0, 282, 284, 283, 285,
	286, 287, 288, 1145, 289, 290, 0, 1143, 0, 0,
	0, 1185, 1149, 0, 0, 0, 291, 292, 1225, 293,
	294, 295, 296, 297, 298, 653, 1198, 0, 299, 1205,
	300, 1204, 0, 1215, 301, 302, 303, 304, 305, 306,
	1151, 1184, 1116, 307, 1245, 1246, 660, 0, 308, 309,
	1191, 0, 1172, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177,
	1176, 1180, 335, 336, 337, 338, 339, 1208, 340, 342,
	1202, 1201, 1121, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1193, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1127, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1216, 1217, 373, 1140, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1200, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1227, 381, 382, 383,
	1213, 1214, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1223, 0, 1150, 394, 0, 395, 396,
	397, 398, 399, 1186, 1187, 1190, 486, 1229, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1228, 410, 1195, 1196, 0, 1156,
	0, 411, 412, 1230, 1188, 1231, 413, 414, 415, 1232,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1224, 1233, 427, 428,
	1234, 0, 429, 430, 431, 432, 433, 434, 437, 1179,
	1178, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1235, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1236, 480,
	468, 1118, 281, 1237, 482, 483, 484, 1141, 1189, 485,
	1203, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1238, 497,
	1239, 1218, 498, 499, 1128, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1219, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1199, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1240, 553, 554, 555, 556,
	557, 1129, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1182, 580, 581, 563, 564, 582, 583,
	1241, 584, 585, 586, 587, 588, 589, 590, 1197, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1244, 599, 600, 601, 602, 1220, 606, 607, 0,
	608, 609, 1115, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 1209, 1210, 1211, 1212,
	0, 627, 0, 619, 620, 621, 1221, 622, 1222, 1139,
	623, 624, 625, 626, 0, 628, 629, 0, 1122, 630,
	631, 632, 634, 635, 633, 636, 1183, 637, 0, 0,
	638, 639, 640, 699, 1206, 1243, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 1119, 0, 0, 0, 0, 0,
	1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114, 0, 0,
	0, 0, 0, 0, 1112, 1113, 1993, 282, 284, 283,
	285, 286, 287, 288, 1145, 289, 290, 0, 1143, 0,
	0, 0, 1185, 1149, 0, 0, 0, 291, 292, 1225,
	293, 294, 295, 296, 297, 298, 653, 1198, 0, 299,
	1205, 300, 1204, 0, 1215, 301, 302, 303, 304, 305,
	306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0, 308,
	309, 1191, 0, 1172, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181,
	1177, 1176, 1180, 335, 336, 337, 338, 339, 1208, 340,
	342, 1202, 1201, 1121, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1193, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1127, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1216, 1217, 373, 1140, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1200, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 2796, 1227, 381, 382,
	383, 1213, 1214, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1223, 0, 1150, 394, 0, 395,
	396, 397, 398, 399, 1186, 1187, 1190, 486, 1229, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1228, 410, 1195, 1196, 0,
	1156, 0, 411, 412, 1230, 1188, 1231, 413, 414, 415,
	1232, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1224, 1233, 427,
	428, 1234, 0, 429, 430, 431, 432, 433, 434, 437,
	1179, 1178, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1235, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1236,
	480, 468, 1118, 281, 1237, 482, 483, 484, 1141, 1189,
	485, 1203, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 1238,
	497, 1239, 1218, 498, 499, 1128, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 1219, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 1199, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 1240, 553, 554, 555,
	556, 557, 1129, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 1182, 580, 581, 563, 564, 582,
	583, 1241, 584, 585, 586, 587, 588, 589, 590, 1197,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 1244, 599, 600, 601, 602, 1220, 606, 607,
	0, 608, 609, 1115, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 1209, 1210, 1211,
	1212, 0, 627, 0, 619, 620, 621, 1221, 622, 1222,
	1139, 623, 624, 625, 626, 0, 628, 629, 0, 1122,
	630, 631, 632, 634, 635, 633, 636, 1183, 637, 0,
	0, 638, 639, 640, 699, 1206, 1243, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 1119, 0, 0, 0, 0,
	0, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114, 0,
	0, 0, 0, 0, 0, 1112, 1113, 0, 282, 284,
	283, 285, 286, 287, 288, 1145, 289, 290, 0, 1143,
	0, 0, 0, 1185, 1149, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 1198, 0,
	299, 1205, 300, 1204, 0, 1215, 301, 302, 303, 304,
	305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0,
	308, 309, 1191, 0, 1172, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 1175, 1173, 1174,
	1181, 1177, 1176, 1180, 335, 336, 337, 338, 339, 1208,
	340, 342, 1202, 1201, 1121, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1193,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1127, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1216, 1217, 373, 1140, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1200, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 1213, 1214, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1223, 0, 1150, 394, 0,
	395, 396, 397, 398, 399, 1186, 1187, 1190, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1228, 410, 1195, 1196,
	0, 1156, 0, 411, 412, 1230, 1188, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1224, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 1179, 1178, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 1118, 281, 1237, 482, 483, 484, 1141,
	1189, 485, 1203, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 1218, 498, 499, 1128, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1219, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1199, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 1129, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1182, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	1197, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1244, 599, 600, 601, 602, 1220, 606,
	607, 0, 608, 609, 1115, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1209, 1210,
	1211, 1212, 0, 627, 0, 619, 620, 621, 1221, 622,
	1222, 1139, 623, 624, 625, 626, 0, 628, 629, 0,
	1122, 630, 631, 632, 634, 635, 633, 636, 1183, 637,
	0, 0, 638, 639, 640, 699, 1206, 1243, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 0, 0, 0, 1112, 1113, 0, 0,
	0, 0, 0, 0, 0, 0, 1145, 1922, 0, 2801,
	1143, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1185, 1149, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 1198, 0,
	299, 1205, 300, 1204, 0, 1215, 301, 302, 303, 304,
	305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0,
	308, 309, 1191, 0, 1172, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 1175, 1173, 1174,
	1181, 1177, 1176, 1180, 335, 336, 337, 338, 339, 1208,
	340, 342, 1202, 1201, 1121, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1193,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1127, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1216, 1217, 373, 1140, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1200, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 1213, 1214, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1223, 0, 1150, 394, 0,
	395, 396, 397, 398, 399, 1186, 1187, 1190, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1228, 410, 1195, 1196,
	0, 1156, 0, 411, 412, 1230, 1188, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1224, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 1179, 1178, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 1118, 281, 1237, 482, 483, 484, 1141,
	1189, 485, 1203, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 1218, 498, 499, 1128, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1219, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1199, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 1129, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1182, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	1197, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1244, 599, 600, 601, 602, 1220, 606,
	607, 0, 608, 609, 1115, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1209, 1210,
	1211, 1212, 0, 627, 0, 619, 620, 621, 1221, 622,
	1222, 1139, 623, 624, 625, 626, 0, 628, 629, 0,
	1122, 630, 631, 632, 634, 635, 633, 636, 1183, 637,
	0, 0, 638, 639, 640, 699, 1206, 1243, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1119, 0, 0, 0,
	2799, 0, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114,
	0, 0, 0, 0, 0, 0, 1112, 1113, 0, 282,
	284, 283, 285, 286, 287, 288, 1145, 289, 290, 0,
	1143, 0, 0, 0, 1185, 1149, 0, 0, 0, 291,
	292, 1225, 293, 294, 295, 296, 297, 298, 653, 1198,
	0, 299, 1205, 300, 1204, 0, 1215, 301, 302, 303,
	304, 305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660,
	0, 308, 309, 1191, 0, 1172, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1226, 332, 333, 334, 1175, 1173,
	1174, 1181, 1177, 1176, 1180, 335, 336, 337, 338, 339,
	1208, 340, 342, 1202, 1201, 1121, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1193, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1127, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1216, 1217, 373, 1140, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1200, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1227,
	381, 382, 383, 1213, 1214, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1223, 0, 1150, 394,
	0, 395, 396, 397, 398, 399, 1186, 1187, 1190, 486,
	1229, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1228, 410, 1195,
	1196, 0, 1156, 0, 411, 412, 1230, 1188, 1231, 413,
	414, 415, 1232, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1224,
	1233, 427, 428, 1234, 0, 429, 430, 431, 432, 433,
	434, 437, 1179, 1178, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1235, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1236, 480, 468, 1118, 281, 1237, 482, 483, 484,
	1141, 1189, 485, 1203, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1238, 497, 1239, 1218, 498, 499, 1128, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 1219, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 1199, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1240, 553,
	554, 555, 556, 557, 1129, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 1182, 580, 581, 563,
	564, 582, 583, 1241, 584, 585, 586, 587, 588, 589,
	590, 1197, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 1244, 599, 600, 601, 602, 1220,
	606, 607, 0, 608, 609, 1115, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 1209,
	1210, 1211, 1212, 0, 627, 0, 619, 620, 621, 1221,
	622, 1222, 1139, 623, 624, 625, 626, 0, 628, 629,
	0, 1122, 630, 631, 632, 634, 635, 633, 636, 1183,
	637, 0, 0, 638, 639, 640, 699, 1206, 1243, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1119, 0, 0,
	0, 2787, 0, 1161, 1133, 1134, 1135, 1131, 1132, 1144,
	1114, 0, 0, 0, 0, 0, 0, 1112, 1113, 0,
	282, 284, 283, 285, 286, 287, 288, 1145, 289, 290,
	0, 1143, 0, 0, 0, 1185, 1149, 0, 0, 0,
	291, 292, 1225, 293, 294, 295, 296, 297, 298, 653,
	1198, 0, 299, 1205, 300, 1204, 0, 1215, 301, 302,
	303, 304, 305, 306, 1151, 1184, 1116, 307, 1245, 1246,
	660, 0, 308, 309, 1191, 0, 1172, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1226, 332, 333, 334, 1175,
	1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337, 338,
	339, 1208, 340, 342, 1202, 1201, 1121, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1193, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1127, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1216, 1217, 373, 1140,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1200,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1227, 381, 382, 383, 1213, 1214, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1223, 0, 1150,
	394, 0, 395, 396, 397, 398, 399, 1186, 1187, 1190,
	486, 1229, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1228, 410,
	1195, 1196, 0, 1156, 0, 411, 412, 1230, 1188, 1231,
	413, 414, 415, 1232, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1224, 1233, 427, 428, 1234, 0, 429, 430, 431, 432,
	433, 434, 437, 1179, 1178, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1235, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1236, 480, 468, 1118, 281, 1237, 482, 483,
	484, 1141, 1189, 485, 1203, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1238, 497, 1239, 1218, 498, 499, 1128, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 1219,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 1199, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1240,
	553, 554, 555, 556, 557, 1129, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 1182, 580, 581,
	563, 564, 582, 583, 1241, 584, 585, 586, 587, 588,
	589, 590, 1197, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 1244, 599, 600, 601, 602,
	1220, 606, 607, 0, 608, 609, 1115, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	1209, 1210, 1211, 1212, 0, 627, 0, 619, 620, 621,
	1221, 622, 1222, 1139, 623, 624, 625, 626, 0, 628,
	629, 0, 1122, 630, 631, 632, 634, 635, 633, 636,
	1183, 637, 0, 0, 638, 639, 640, 699, 1206, 1243,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 1119, 0,
	0, 0, 2775, 0, 1161, 1133, 1134, 1135, 1131, 1132,
	1144, 1114, 0, 0, 0, 0, 0, 0, 1112, 1113,
	0, 282, 284, 283, 285, 286, 287, 288, 1145, 289,
	290, 0, 1143, 0, 0, 0, 1185, 1149, 0, 0,
	0, 291, 292, 1225, 293, 294, 295, 296, 297, 298,
	653, 1198, 0, 299, 1205, 300, 1204, 0, 1215, 301,
	302, 303, 304, 305, 306, 1151, 1184, 1116, 307, 1245,
	1246, 660, 0, 308, 309, 1191, 0, 1172, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1226, 332, 333, 334,
	1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337,
	338, 339, 1208, 340, 342, 1202, 1201, 1121, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1193, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1127, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1216, 1217, 373,
	1140, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1200, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1227, 381, 382, 383, 1213, 1214, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1223, 0,
	1150, 394, 0, 395, 396, 397, 398, 399, 1186, 1187,
	1190, 486, 1229, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1228,
	410, 1195, 1196, 0, 1156, 0, 411, 412, 1230, 1188,
	1231, 413, 414, 415, 1232, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1224, 1233, 427, 428, 1234, 0, 429, 430, 431,
	432, 433, 434, 437, 1179, 1178, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1235, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1236, 480, 468, 1118, 281, 1237, 482,
	483, 484, 1141, 1189, 485, 1203, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1238, 497, 1239, 1218, 498, 499, 1128,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1219, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 1199, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1240, 553, 554, 555, 556, 557, 1129, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1182, 580,
	581, 563, 564, 582, 583, 1241, 584, 585, 586, 587,
	588, 589, 590, 1197, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 1244, 599, 600, 601,
	602, 1220, 606, 607, 0, 608, 609, 1115, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 1209, 1210, 1211, 1212, 0, 627, 0, 619, 620,
	621, 1221, 622, 1222, 1139, 623, 624, 625, 626, 0,
	628, 629, 0, 1122, 630, 631, 632, 634, 635, 633,
	636, 1183, 637, 0, 0, 638, 639, 640, 699, 1206,
	1243, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1119,
	0, 0, 0, 2773, 0, 2764, 2771, 1134, 1135, 1131,
	1132, 1144, 1114, 0, 0, 0, 0, 0, 0, 1112,
	1113, 0, 282, 284, 283, 285, 286, 287, 288, 1145,
	289, 290, 0, 1143, 0, 0, 0, 1185, 1149, 0,
	0, 0, 291, 292, 1225, 293, 294, 295, 296, 297,
	298, 653, 1198, 0, 299, 1205, 300, 1204, 0, 1215,
	301, 302, 303, 304, 305, 306, 1151, 1184, 1116, 307,
	1245, 1246, 660, 0, 308, 309, 1191, 0, 1172, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1226, 332, 333,
	334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336,
	337, 338, 339, 1208, 2767, 342, 1202, 1201, 1121, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1193, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1127, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1216, 1217,
	373, 1140, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1200, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1227, 381, 382, 383, 1213, 1214, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1223,
	0, 1150, 394, 0, 395, 396, 397, 2768, 399, 1186,
	1187, 1190, 486, 1229, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1228, 410, 1195, 1196, 0, 1156, 0, 411, 412, 1230,
	1188, 1231, 413, 414, 415, 1232, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1224, 1233, 427, 428, 1234, 0, 429, 430,
	431, 432, 433, 434, 437, 1179, 1178, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 2769, 447,
	2766, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1235, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1236, 480, 468, 1118, 281, 1237,
	482, 483, 484, 1141, 1189, 485, 1203, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 1238, 497, 1239, 1218, 498, 499,
	1128, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 1219, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 1199, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 1240, 553, 554, 555, 556, 557, 1129, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 2770, 0, 575, 576, 574, 577, 578, 579, 1182,
	580, 581, 563, 564, 582, 583, 1241, 584, 585, 586,
	587, 588, 589, 590, 1197, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 1244, 599, 600,
	601, 602, 1220, 606, 607, 0, 608, 609, 1115, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 1209, 1210, 1211, 1212, 0, 627, 0, 619,
	620, 621, 1221, 622, 1222, 1139, 623, 624, 625, 626,
	0, 628, 629, 0, 1122, 630, 631, 632, 634, 635,
	633, 636, 1183, 637, 0, 0, 638, 639, 640, 699,
	1206, 1243, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 2765, 651,
	1119, 0, 0, 0, 2761, 0, 2764, 2771, 1134, 1135,
	1131, 1132, 1144, 1114, 0, 0, 0, 0, 0, 0,
	1112, 1113, 0, 282, 284, 283, 285, 286, 287, 288,
	1145, 289, 290, 0, 1143, 0, 0, 0, 1185, 1149,
	0, 0, 0, 291, 292, 1225, 293, 294, 295, 296,
	297, 298, 653, 1198, 0, 299, 1205, 300, 1204, 0,
	1215, 301, 302, 303, 304, 305, 306, 1151, 1184, 1116,
	307, 1245, 1246, 660, 0, 308, 309, 1191, 0, 1172,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1226, 332,
	333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335,
	336, 337, 338, 339, 1208, 2767, 342, 1202, 1201, 1121,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1193, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1127, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1216,
	1217, 373, 1140, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1200, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1227, 381, 382, 383, 1213, 1214, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1223, 0, 1150, 394, 0, 395, 396, 397, 2768, 399,
	1186, 1187, 1190, 486, 1229, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1228, 410, 1195, 1196, 0, 1156, 0, 411, 412,
	1230, 1188, 1231, 413, 414, 415, 1232, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1224, 1233, 427, 428, 1234, 0, 429,
	430, 431, 432, 433, 434, 437, 1179, 1178, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 2769,
	447, 2766, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1235, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1236, 480, 468, 1118, 281,
	1237, 482, 483, 484, 1141, 1189, 485, 1203, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1238, 497, 1239, 1218, 498,
	499, 1128, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1219, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 1199, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1240, 553, 554, 555, 556, 557, 1129, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 2770, 0, 575, 576, 574, 577, 578, 579,
	1182, 580, 581, 563, 564, 582, 583, 1241, 584, 585,
	586, 587, 588, 589, 590, 1197, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 1244, 599,
	600, 601, 602, 1220, 606, 607, 0, 608, 609, 1115,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 1209, 1210, 1211, 1212, 0, 627, 0,
	619, 620, 621, 1221, 622, 1222, 1139, 623, 624, 625,
	626, 0, 628, 629, 0, 1122, 630, 631, 632, 634,
	635, 633, 636, 1183, 637, 0, 0, 638, 639, 640,
	699, 1206, 1243, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 0, 647, 648, 703, 649, 2765,
	651, 1119, 0, 0, 0, 0, 0, 1161, 1133, 1134,
	1135, 1131, 1132, 1144, 1114, 0, 0, 0, 0, 0,
	0, 1112, 1113, 0, 282, 284, 283, 285, 286, 287,
	288, 1145, 289, 290, 0, 1143, 0, 0, 0, 1185,
	1149, 0, 0, 0, 291, 292, 1225, 293, 294, 295,
	296, 297, 298, 653, 1198, 0, 299, 1205, 300, 1204,
	0, 1215, 301, 302, 303, 304, 305, 306, 1151, 1184,
	1116, 307, 1245, 1246, 660, 0, 308, 309, 1191, 0,
	1172, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1226,
	332, 333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180,
	335, 336, 337, 338, 339, 1208, 340, 342, 1202, 1201,
	1121, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1193, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1127, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1216, 1217, 373, 1140, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1200, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1227, 381, 382, 383, 1213, 1214,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1223, 0, 1150, 394, 0, 395, 396, 397, 398,
	399, 1186, 1187, 1190, 486, 1229, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1228, 410, 1195, 1196, 0, 1156, 0, 411,
	412, 1230, 1188, 1231, 413, 414, 415, 1232, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1224, 1233, 427, 428, 1234, 0,
	429, 430, 431, 432, 433, 434, 437, 1179, 1178, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1235, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1236, 480, 468, 1118,
	281, 1237, 482, 483, 484, 1141, 1189, 485, 1203, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1238, 497, 1239, 1218,
	498, 499, 1128, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 1219, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 1199,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1240, 553, 554, 555, 556, 557, 1129,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 1182, 580, 581, 563, 564, 582, 583, 1241, 584,
	585, 586, 587, 588, 589, 590, 1197, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 1244,
	599, 600, 601, 602, 1220, 606, 607, 0, 608, 609,
	1115, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 1209, 1210, 1211, 1212, 0, 627,
	0, 619, 620, 621, 1221, 622, 1222, 1139, 623, 624,
	625, 626, 0, 628, 629, 0, 1122, 630, 631, 632,
	634, 635, 633, 636, 1183, 637, 0, 0, 638, 639,
	640, 699, 1206, 1243, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 0,
	0, 0, 1112, 1113, 0, 0, 0, 0, 0, 0,
	1930, 0, 1145, 0, 0, 0, 1143, 1161, 1133, 1134,
	1135, 1131, 1132, 1144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 2516, 289, 290, 0, 0, 0, 0, 0, 1185,
	1149, 0, 0, 0, 291, 292, 1225, 293, 294, 295,
	296, 297, 298, 653, 1198, 0, 299, 1205, 300, 1204,
	0, 1215, 301, 302, 303, 304, 305, 306, 1151, 1184,
	1116, 307, 1245, 1246, 660, 0, 308, 309, 1191, 0,
	1172, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1226,
	332, 333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180,
	335, 336, 337, 338, 339, 1208, 340, 342, 1202, 1201,
	1121, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1193, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1127, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1216, 1217, 373, 1140, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1200, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1227, 381, 382, 383, 1213, 1214,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1223, 0, 1150, 394, 0, 395, 396, 397, 398,
	399, 1186, 1187, 1190, 486, 1229, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1228, 410, 1195, 1196, 0, 1156, 0, 411,
	412, 1230, 1188, 1231, 413, 414, 415, 1232, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1224, 1233, 427, 428, 1234, 0,
	429, 430, 431, 432, 433, 434, 437, 1179, 1178, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1235, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1236, 480, 468, 1118,
	281, 1237, 482, 483, 484, 1141, 1189, 485, 1203, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1238, 497, 1239, 1218,
	498, 499, 1128, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 1219, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 1199,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1240, 553, 554, 555, 556, 557, 1129,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 1182, 580, 581, 563, 564, 582, 583, 1241, 584,
	585, 586, 587, 588, 589, 590, 1197, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 1244,
	599, 600, 601, 602, 1220, 606, 607, 0, 608, 609,
	1115, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 1209, 1210, 1211, 1212, 0, 627,
	0, 619, 620, 621, 1221, 622, 1222, 1139, 623, 624,
	625, 626, 0, 628, 629, 0, 1122, 630, 631, 632,
	634, 635, 633, 636, 1183, 637, 0, 0, 638, 639,
	640, 699, 1206, 1243, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1119, 0, 0, 0, 2478, 0, 1161, 1133,
	1134, 1135, 1131, 1132, 1144, 1114, 0, 0, 0, 0,
	0, 0, 1112, 1113, 0, 282, 284, 283, 285, 286,
	287, 288, 1145, 289, 290, 0, 1143, 0, 0, 0,
	1185, 1149, 0, 0, 0, 291, 292, 1225, 293, 294,
	295, 296, 297, 298, 653, 1198, 0, 299, 1205, 300,
	1204, 0, 1215, 301, 302, 303, 304, 305, 306, 1151,
	1184, 1116, 307, 1245, 1246, 660, 0, 308, 309, 1191,
	0, 1172, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177, 1176,
	1180, 335, 336, 337, 338, 339, 1208, 340, 342, 1202,
	1201, 1121, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1193, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1127,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1216, 1217, 373, 1140, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1200, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1227, 381, 382, 383, 1213,
	1214, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1223, 0, 1150, 394, 0, 395, 396, 397,
	398, 399, 1186, 1187, 1190, 486, 1229, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1228, 410, 1195, 1196, 0, 1156, 0,
	411, 412, 1230, 1188, 1231, 413, 414, 415, 1232, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1224, 1233, 427, 428, 1234,
	0, 429, 430, 431, 432, 433, 434, 437, 1179, 1178,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1235,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1236, 480, 468,
	1118, 281, 1237, 482, 483, 484, 1141, 1189, 485, 1203,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1238, 497, 1239,
	1218, 498, 499, 1128, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 1219, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	1199, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1240, 553, 554, 555, 556, 557,
	1129, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 1182, 580, 581, 563, 564, 582, 583, 1241,
	584, 585, 586, 587, 588, 589, 590, 1197, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	1244, 599, 600, 601, 602, 1220, 606, 607, 0, 608,
	609, 1115, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 1209, 1210, 1211, 1212, 0,
	627, 0, 619, 620, 621, 1221, 622, 1222, 1139, 623,
	624, 625, 626, 0, 628, 629, 0, 1122, 630, 631,
	632, 634, 635, 633, 636, 1183, 637, 0, 0, 638,
	639, 640, 699, 1206, 1243, 0, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 1119, 0, 0, 0, 2451, 0, 1161,
	1133, 1134, 1135, 1131, 1132, 1144, 1114, 0, 0, 0,
	0, 0, 0, 1112, 1113, 0, 282, 284, 283, 285,
	286, 287, 288, 1145, 289, 290, 0, 1143, 0, 0,
	0, 1185, 1149, 0, 0, 0, 291, 292, 1225, 293,
	294, 295, 296, 297, 298, 653, 1198, 0, 299, 1205,
	300, 1204, 0, 1215, 301, 302, 303, 304, 305, 306,
	1151, 1184, 1116, 307, 1245, 1246, 660, 0, 308, 309,
	1191, 0, 1172, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177,
	1176, 1180, 335, 336, 337, 338, 339, 1208, 340, 342,
	1202, 1201, 1121, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1193, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1127, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1216, 1217, 373, 1140, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1200, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1227, 381, 382, 383,
	1213, 1214, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1223, 0, 1150, 394, 0, 395, 396,
	397, 398, 399, 1186, 1187, 1190, 486, 1229, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1228, 410, 1195, 1196, 0, 1156,
	0, 411, 412, 1230, 1188, 1231, 413, 414, 415, 1232,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1224, 1233, 427, 428,
	1234, 0, 429, 430, 431, 432, 433, 434, 437, 1179,
	1178, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1235, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1236, 480,
	468, 1118, 281, 1237, 482, 483, 484, 1141, 1189, 485,
	1203, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1238, 497,
	1239, 1218, 498, 499, 1128, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1219, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1199, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1240, 553, 554, 555, 556,
	557, 1129, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1182, 580, 581, 563, 564, 582, 583,
	1241, 584, 585, 586, 587, 588, 589, 590, 1197, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1244, 599, 600, 601, 602, 1220, 606, 607, 0,
	608, 609, 1115, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 1209, 1210, 1211, 1212,
	0, 627, 0, 619, 620, 621, 1221, 622, 1222, 1139,
	623, 624, 625, 626, 0, 628, 629, 0, 1122, 630,
	631, 632, 634, 635, 633, 636, 1183, 637, 0, 0,
	638, 639, 640, 699, 1206, 1243, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 1119, 0, 0, 0, 1768, 0,
	1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114, 0, 0,
	0, 0, 0, 0, 1112, 1113, 0, 282, 284, 283,
	285, 286, 287, 288, 1145, 289, 290, 0, 1143, 0,
	0, 0, 1185, 1149, 0, 0, 0, 291, 292, 1225,
	293, 294, 295, 296, 297, 298, 653, 1198, 0, 299,
	1205, 300, 1204, 0, 1215, 301, 302, 303, 304, 305,
	306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0, 308,
	309, 1191, 0, 1172, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181,
	1177, 1176, 1180, 335, 336, 337, 338, 339, 1208, 340,
	342, 1202, 1201, 1121, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1193, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1127, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1216, 1217, 373, 1140, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1200, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1227, 381, 382,
	383, 1213, 1214, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1223, 0, 1150, 394, 0, 395,
	396, 397, 398, 399, 1186, 1187, 1190, 486, 1229, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1228, 410, 1195, 1196, 0,
	1156, 0, 411, 412, 1230, 1188, 1231, 413, 414, 415,
	1232, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1224, 1233, 427,
	428, 1234, 0, 429, 430, 431, 432, 433, 434, 437,
	1179, 1178, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1235, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1236,
	480, 468, 1118, 281, 1237, 482, 483, 484, 1141, 1189,
	485, 1203, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 1238,
	497, 1239, 1218, 498, 499, 1128, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 1219, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 1199, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 1240, 553, 554, 555,
	556, 557, 1129, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 1182, 580, 581, 563, 564, 582,
	583, 1241, 584, 585, 586, 587, 588, 589, 590, 1197,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 1244, 599, 600, 601, 602, 1220, 606, 607,
	0, 608, 609, 1115, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 1209, 1210, 1211,
	1212, 0, 627, 0, 619, 620, 621, 1221, 622, 1222,
	1139, 623, 624, 625, 626, 0, 628, 629, 0, 1122,
	630, 631, 632, 634, 635, 633, 636, 1183, 637, 0,
	0, 638, 639, 640, 699, 1206, 1243, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 1119, 0, 0, 0, 1697,
	0, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114, 0,
	0, 0, 0, 0, 0, 1112, 1113, 0, 282, 284,
	283, 285, 286, 287, 288, 1145, 289, 290, 0, 1143,
	0, 0, 0, 1185, 1149, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 1198, 0,
	299, 1205, 300, 1204, 0, 1215, 301, 302, 303, 304,
	305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0,
	308, 309, 1191, 0, 1172, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 1175, 1173, 1174,
	1181, 1177, 1176, 1180, 335, 336, 337, 338, 339, 1208,
	340, 342, 1202, 1201, 1121, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1193,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1127, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1216, 1217, 373, 1140, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1200, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 1213, 1214, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1223, 0, 1150, 394, 0,
	395, 396, 397, 398, 399, 1186, 1187, 1190, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1228, 410, 1195, 1196,
	0, 1156, 0, 411, 412, 1230, 1188, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1224, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 1179, 1178, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 1118, 281, 1237, 482, 483, 484, 1141,
	1189, 485, 1203, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 1218, 498, 499, 1128, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1219, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1199, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 1129, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1182, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	1197, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1244, 599, 600, 601, 602, 1220, 606,
	607, 0, 608, 609, 1115, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1209, 1210,
	1211, 1212, 0, 627, 0, 619, 620, 621, 1221, 622,
	1222, 1139, 623, 624, 625, 626, 0, 628, 629, 0,
	1122, 630, 631, 632, 634, 635, 633, 636, 1183, 637,
	0, 0, 638, 639, 640, 699, 1206, 1243, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1119, 0, 0, 0,
	1692, 0, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114,
	0, 0, 0, 0, 0, 0, 1112, 1113, 0, 282,
	284, 283, 285, 286, 287, 288, 1145, 289, 290, 0,
	1143, 0, 0, 0, 1185, 1149, 0, 0, 0, 291,
	292, 1225, 293, 294, 295, 296, 297, 298, 653, 1198,
	0, 299, 1205, 300, 1204, 0, 1215, 301, 302, 303,
	304, 305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660,
	0, 308, 309, 1191, 0, 1172, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1226, 332, 333, 334, 1175, 1173,
	1174, 1181, 1177, 1176, 1180, 335, 336, 337, 338, 339,
	1208, 340, 342, 1202, 1201, 1121, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1193, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1127, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1216, 1217, 373, 1140, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1200, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1227,
	381, 382, 383, 1213, 1214, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1223, 0, 1150, 394,
	0, 395, 396, 397, 398, 399, 1186, 1187, 1190, 486,
	1229, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1228, 410, 1195,
	1196, 0, 1156, 0, 411, 412, 1230, 1188, 1231, 413,
	414, 415, 1232, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1224,
	1233, 427, 428, 1234, 0, 429, 430, 431, 432, 433,
	434, 437, 1179, 1178, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1235, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1236, 480, 468, 1118, 281, 1237, 482, 483, 484,
	1141, 1189, 485, 1203, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1238, 497, 1239, 1218, 498, 499, 1128, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 1219, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 1199, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1240, 553,
	554, 555, 556, 557, 1129, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 1182, 580, 581, 563,
	564, 582, 583, 1241, 584, 585, 586, 587, 588, 589,
	590, 1197, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 1244, 599, 600, 601, 602, 1220,
	606, 607, 0, 608, 609, 1115, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 1209,
	1210, 1211, 1212, 0, 627, 0, 619, 620, 621, 1221,
	622, 1222, 1139, 623, 624, 625, 626, 0, 628, 629,
	0, 1122, 630, 631, 632, 634, 635, 633, 636, 1183,
	637, 0, 0, 638, 639, 640, 699, 1206, 1243, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1119, 0, 0,
	0, 1679, 0, 1161, 1133, 1134, 1135, 1131, 1132, 1144,
	1114, 0, 0, 0, 0, 0, 0, 1112, 1113, 0,
	282, 284, 283, 285, 286, 287, 288, 1145, 289, 290,
	0, 1143, 0, 0, 0, 1185, 1149, 0, 0, 0,
	291, 292, 1225, 293, 294, 295, 296, 297, 298, 653,
	1198, 0, 299, 1205, 300, 1204, 0, 1215, 301, 302,
	303, 304, 305, 306, 1151, 1184, 1116, 307, 1245, 1246,
	660, 0, 308, 309, 1191, 0, 1172, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1226, 332, 333, 334, 1175,
	1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337, 338,
	339, 1208, 340, 342, 1202, 1201, 1121, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1193, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1127, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1216, 1217, 373, 1140,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1200,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1227, 381, 382, 383, 1213, 1214, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1223, 0, 1150,
	394, 0, 395, 396, 397, 398, 399, 1186, 1187, 1190,
	486, 1229, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1228, 410,
	1195, 1196, 0, 1156, 0, 411, 412, 1230, 1188, 1231,
	413, 414, 415, 1232, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1224, 1233, 427, 428, 1234, 0, 429, 430, 431, 432,
	433, 434, 437, 1179, 1178, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1235, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1236, 480, 468, 1118, 281, 1237, 482, 483,
	484, 1141, 1189, 485, 1203, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1238, 497, 1239, 1218, 498, 499, 1128, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 1219,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 1199, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1240,
	553, 554, 555, 556, 557, 1129, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 1182, 580, 581,
	563, 564, 582, 583, 1241, 584, 585, 586, 587, 588,
	589, 590, 1197, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 1244, 599, 600, 601, 602,
	1220, 606, 607, 0, 608, 609, 1115, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	1209, 1210, 1211, 1212, 0, 627, 0, 619, 620, 621,
	1221, 622, 1222, 1139, 623, 624, 625, 626, 0, 628,
	629, 0, 1122, 630, 631, 632, 634, 635, 633, 636,
	1183, 637, 0, 0, 638, 639, 640, 699, 1206, 1243,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 1119, 0,
	0, 0, 1674, 0, 1161, 1133, 1134, 1135, 1131, 1132,
	1144, 1114, 0, 0, 0, 0, 0, 0, 1112, 1113,
	0, 282, 284, 283, 285, 286, 287, 288, 1145, 289,
	290, 0, 1143, 0, 0, 0, 1185, 1149, 0, 0,
	0, 291, 292, 1225, 293, 294, 295, 296, 297, 298,
	653, 1198, 0, 299, 1205, 300, 1204, 0, 1215, 301,
	302, 303, 304, 305, 306, 1151, 1184, 1116, 307, 1245,
	1246, 660, 0, 308, 309, 1191, 0, 1172, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1226, 332, 333, 334,
	1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337,
	338, 339, 1208, 340, 342, 1202, 1201, 1121, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1193, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1127, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1216, 1217, 373,
	1140, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1200, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1227, 381, 382, 383, 1213, 1214, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1223, 0,
	1150, 394, 0, 395, 396, 397, 398, 399, 1186, 1187,
	1190, 486, 1229, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1228,
	410, 1195, 1196, 0, 1156, 0, 411, 412, 1230, 1188,
	1231, 413, 414, 415, 1232, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1224, 1233, 427, 428, 1234, 0, 429, 430, 431,
	432, 433, 434, 437, 1179, 1178, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1235, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1236, 480, 468, 1118, 281, 1237, 482,
	483, 484, 1141, 1189, 485, 1203, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1238, 497, 1239, 1218, 498, 499, 1128,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1219, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 1199, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1240, 553, 554, 555, 556, 557, 1129, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1182, 580,
	581, 563, 564, 582, 583, 1241, 584, 585, 586, 587,
	588, 589, 590, 1197, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 1244, 599, 600, 601,
	602, 1220, 606, 607, 0, 608, 609, 1115, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 1209, 1210, 1211, 1212, 0, 627, 0, 619, 620,
	621, 1221, 622, 1222, 1139, 623, 624, 625, 626, 0,
	628, 629, 0, 1122, 630, 631, 632, 634, 635, 633,
	636, 1183, 637, 0, 0, 638, 639, 640, 699, 1206,
	1243, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1119,
	0, 0, 0, 1583, 0, 1161, 1133, 1134, 1135, 1131,
	1132, 1144, 1114, 0, 0, 0, 0, 0, 0, 1112,
	1113, 0, 282, 284, 283, 285, 286, 287, 288, 1145,
	289, 290, 0, 1143, 0, 0, 0, 1185, 1149, 0,
	0, 0, 291, 292, 1225, 293, 294, 295, 296, 297,
	298, 653, 1198, 0, 299, 1205, 300, 1204, 0, 1215,
	301, 302, 303, 304, 305, 306, 1151, 1184, 1116, 307,
	1245, 1246, 660, 0, 308, 309, 1191, 0, 1172, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1226, 332, 333,
	334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336,
	337, 338, 339, 1208, 340, 342, 1202, 1201, 1121, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1193, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1127, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1216, 1217,
	373, 1140, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1200, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1227, 381, 382, 383, 1213, 1214, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1223,
	0, 1150, 394, 0, 395, 396, 397, 398, 399, 1582,
	1187, 1190, 486, 1229, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1228, 410, 1195, 1196, 0, 1156, 0, 411, 412, 1230,
	1188, 1231, 413, 414, 415, 1232, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1224, 1233, 427, 428, 1234, 0, 429, 430,
	431, 432, 433, 434, 437, 1179, 1178, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1235, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1236, 480, 468, 1118, 281, 1237,
	482, 483, 484, 1141, 1189, 485, 1203, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 1238, 497, 1239, 1218, 498, 499,
	1128, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 1219, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 1199, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 1240, 553, 554, 555, 556, 557, 1129, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 1182,
	580, 581, 563, 564, 582, 583, 1241, 584, 585, 586,
	587, 588, 589, 590, 1197, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 1244, 599, 600,
	601, 602, 1220, 606, 607, 0, 608, 609, 1115, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 1209, 1210, 1211, 1212, 0, 627, 0, 619,
	620, 621, 1221, 622, 1222, 1139, 623, 624, 625, 626,
	0, 628, 629, 0, 1122, 630, 631, 632, 634, 635,
	633, 636, 1183, 637, 0, 0, 638, 639, 640, 699,
	1206, 1243, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	1119, 0, 0, 0, 1577, 0, 1161, 1133, 1134, 1135,
	1131, 1132, 1144, 1114, 0, 0, 0, 0, 0, 0,
	1112, 1113, 0, 282, 284, 283, 285, 286, 287, 288,
	1145, 289, 290, 0, 1143, 0, 0, 0, 1185, 1149,
	0, 0, 0, 291, 292, 1225, 293, 294, 295, 296,
	297, 298, 653, 1198, 0, 299, 1205, 300, 1204, 0,
	1215, 301, 302, 303, 304, 305, 306, 1151, 1184, 1116,
	307, 1245, 1246, 660, 0, 308, 309, 1191, 0, 1172,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1226, 332,
	333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335,
	336, 337, 338, 339, 1208, 340, 342, 1202, 1201, 1121,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1193, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1127, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1216,
	1217, 373, 1140, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1200, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1227, 381, 382, 383, 1213, 1214, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1223, 0, 1150, 394, 0, 395, 396, 397, 398, 399,
	1576, 1187, 1190, 486, 1229, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1228, 410, 1195, 1196, 0, 1156, 0, 411, 412,
	1230, 1188, 1231, 413, 414, 415, 1232, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1224, 1233, 427, 428, 1234, 0, 429,
	430, 431, 432, 433, 434, 437, 1179, 1178, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1235, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1236, 480, 468, 1118, 281,
	1237, 482, 483, 484, 1141, 1189, 485, 1203, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1238, 497, 1239, 1218, 498,
	499, 1128, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1219, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 1199, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1240, 553, 554, 555, 556, 557, 1129, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	1182, 580, 581, 563, 564, 582, 583, 1241, 584, 585,
	586, 587, 588, 589, 590, 1197, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 1244, 599,
	600, 601, 602, 1220, 606, 607, 0, 608, 609, 1115,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 1209, 1210, 1211, 1212, 0, 627, 0,
	619, 620, 621, 1221, 622, 1222, 1139, 623, 624, 625,
	626, 0, 628, 629, 0, 1122, 630, 631, 632, 634,
	635, 633, 636, 1183, 637, 0, 0, 638, 639, 640,
	699, 1206, 1243, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 1119, 0, 0, 0, 1570, 0, 1161, 1133, 1134,
	1135, 1131, 1132, 1144, 1114, 0, 0, 0, 0, 0,
	0, 1112, 1113, 0, 282, 284, 283, 285, 286, 287,
	288, 1145, 289, 290, 0, 1143, 0, 0, 0, 1185,
	1149, 0, 0, 0, 291, 292, 1225, 293, 294, 295,
	296, 297, 298, 653, 1198, 0, 299, 1205, 300, 1204,
	0, 1215, 301, 302, 303, 304, 305, 306, 1151, 1184,
	1116, 307, 1245, 1246, 660, 0, 308, 309, 1191, 0,
	1172, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1226,
	332, 333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180,
	335, 336, 337, 338, 339, 1208, 340, 342, 1202, 1201,
	1121, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1193, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1127, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1216, 1217, 373, 1140, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1200, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1227, 381, 382, 383, 1213, 1214,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1223, 0, 1150, 394, 0, 395, 396, 397, 398,
	399, 1186, 1187, 1190, 486, 1229, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1228, 410, 1195, 1196, 0, 1156, 0, 411,
	412, 1230, 1188, 1231, 413, 414, 415, 1232, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1224, 1233, 427, 428, 1234, 0,
	429, 430, 431, 432, 433, 434, 437, 1179, 1178, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1235, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1236, 480, 468, 1118,
	281, 1237, 482, 483, 484, 1141, 1189, 485, 1203, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1238, 497, 1239, 1218,
	498, 499, 1128, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 1219, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 1199,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1240, 553, 554, 555, 556, 557, 1129,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 1182, 580, 581, 563, 564, 582, 583, 1241, 584,
	585, 586, 587, 588, 589, 590, 1197, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 1244,
	599, 600, 601, 602, 1220, 606, 607, 0, 608, 609,
	1115, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 1209, 1210, 1211, 1212, 0, 627,
	0, 619, 620, 621, 1221, 622, 1222, 1139, 623, 624,
	625, 626, 0, 628, 629, 0, 1122, 630, 631, 632,
	634, 635, 633, 636, 1183, 637, 0, 0, 638, 639,
	640, 699, 1206, 1243, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1119, 0, 0, 0, 1538, 0, 1161, 1133,
	1134, 1135, 1131, 1132, 1144, 1114, 0, 0, 0, 0,
	0, 0, 1112, 1113, 0, 282, 284, 283, 285, 286,
	287, 288, 1145, 289, 290, 0, 1143, 0, 0, 0,
	1185, 1149, 0, 0, 0, 291, 292, 1225, 293, 294,
	295, 296, 297, 298, 653, 1198, 0, 299, 1205, 300,
	1204, 0, 1215, 301, 302, 303, 304, 305, 306, 1151,
	1184, 1116, 307, 1245, 1246, 660, 0, 308, 309, 1191,
	0, 1172, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177, 1176,
	1180, 335, 336, 337, 338, 339, 1208, 340, 342, 1202,
	1201, 1121, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1193, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1127,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1216, 1217, 373, 1140, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1200, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1227, 381, 382, 383, 1213,
	1214, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1223, 0, 1150, 394, 0, 395, 396, 397,
	398, 399, 1186, 1187, 1190, 486, 1229, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1228, 410, 1195, 1196, 0, 1156, 0,
	411, 412, 1230, 1188, 1231, 413, 414, 415, 1232, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1224, 1233, 427, 428, 1234,
	0, 429, 430, 431, 432, 433, 434, 437, 1179, 1178,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1235,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1236, 480, 468,
	1118, 281, 1237, 482, 483, 484, 1141, 1189, 485, 1203,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1238, 497, 1239,
	1218, 498, 499, 1128, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 1219, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	1199, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1240, 553, 554, 555, 556, 557,
	1129, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 1182, 580, 581, 563, 564, 582, 583, 1241,
	584, 585, 586, 587, 588, 589, 590, 1197, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	1244, 599, 600, 601, 602, 1220, 606, 607, 0, 608,
	609, 1115, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 1209, 1210, 1211, 1212, 0,
	627, 0, 619, 620, 621, 1221, 622, 1222, 1139, 623,
	624, 625, 626, 0, 628, 629, 0, 1122, 630, 631,
	632, 634, 635, 633, 636, 1183, 637, 0, 0, 638,
	639, 640, 699, 1206, 1243, 0, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 1119, 0, 0, 0, 1520, 0, 1161,
	1133, 1134, 1135, 1131, 1132, 1144, 1114, 0, 0, 0,
	0, 0, 0, 1112, 1113, 0, 282, 284, 283, 285,
	286, 287, 288, 1145, 289, 290, 0, 1143, 0, 0,
	0, 1185, 1149, 0, 0, 0, 291, 292, 1225, 293,
	294, 295, 296, 297, 298, 653, 1198, 0, 299, 1205,
	300, 1204, 0, 1215, 301, 302, 303, 304, 305, 306,
	1151, 1184, 1116, 307, 1245, 1246, 660, 0, 308, 309,
	1191, 0, 1172, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177,
	1176, 1180, 335, 336, 337, 338, 339, 1208, 340, 342,
	1202, 1201, 1121, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1193, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1127, 362, 363, 364, 366, 368, 365, 1524, 369, 370,
	371, 372, 1216, 1217, 373, 1140, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1200, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1227, 381, 382, 383,
	1213, 1214, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1223, 0, 1150, 394, 0, 395, 396,
	397, 398, 399, 1186, 1187, 1190, 486, 1229, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1228, 410, 1195, 1196, 0, 1156,
	0, 411, 412, 1230, 1188, 1231, 413, 414, 415, 1232,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1224, 1233, 427, 428,
	1234, 0, 429, 430, 431, 432, 433, 434, 437, 1179,
	1178, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1235, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1236, 480,
	468, 1118, 281, 1237, 482, 483, 484, 1141, 1189, 485,
	1203, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1238, 497,
	1239, 1218, 498, 499, 1128, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1219, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1199, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 1525,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1240, 553, 554, 555, 556,
	557, 1129, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1182, 580, 581, 563, 564, 582, 583,
	1241, 584, 585, 586, 587, 588, 589, 590, 1197, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1244, 599, 600, 601, 602, 1220, 606, 607, 0,
	608, 609, 1115, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 1523, 617, 0, 618, 1209, 1210, 1211, 1212,
	0, 627, 0, 619, 620, 621, 1221, 622, 1222, 1139,
	623, 624, 625, 626, 0, 628, 629, 0, 1122, 630,
	631, 632, 634, 635, 633, 636, 1183, 637, 0, 0,
	638, 639, 640, 699, 1206, 1243, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 1119, 0, 0, 0, 1369, 0,
	1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114, 0, 0,
	0, 0, 0, 0, 1112, 1113, 0, 282, 284, 283,
	285, 286, 287, 288, 1145, 289, 290, 0, 1143, 0,
	0, 0, 1185, 1149, 0, 0, 0, 291, 292, 1225,
	293, 294, 295, 296, 297, 298, 653, 1198, 0, 299,
	1205, 300, 1204, 0, 1215, 301, 302, 303, 304, 305,
	306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0, 308,
	309, 1191, 0, 1172, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181,
	1177, 1176, 1180, 335, 336, 337, 338, 339, 1208, 340,
	342, 1202, 1201, 1121, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1193, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1127, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1216, 1217, 373, 1140, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1200, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1227, 381, 382,
	383, 1213, 1214, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1223, 0, 1150, 394, 0, 395,
	396, 397, 398, 399, 1186, 1187, 1190, 486, 1229, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1228, 410, 1195, 1196, 0,
	1156, 0, 411, 412, 1230, 1188, 1231, 413, 414, 415,
	1232, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1224, 1233, 427,
	428, 1234, 0, 429, 430, 431, 432, 433, 434, 437,
	1179, 1178, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1235, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1236,
	480, 468, 1118, 281, 1237, 482, 483, 484, 1141, 1189,
	485, 1203, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 1238,
	497, 1239, 1218, 498, 499, 1128, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 1219, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 1199, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 1240, 553, 554, 555,
	556, 557, 1129, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 1182, 580, 581, 563, 564, 582,
	583, 1241, 584, 585, 586, 587, 588, 589, 590, 1197,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 1244, 599, 600, 601, 602, 1220, 606, 607,
	0, 608, 609, 1115, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 1209, 1210, 1211,
	1212, 0, 627, 0, 619, 620, 621, 1221, 622, 1222,
	1139, 623, 624, 625, 626, 0, 628, 629, 0, 1122,
	630, 631, 632, 634, 635, 633, 636, 1183, 637, 0,
	0, 638, 639, 640, 699, 1206, 1243, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 1119, 0, 0, 0, 0,
	0, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114, 0,
	0, 0, 0, 0, 0, 1112, 1113, 0, 282, 284,
	283, 285, 286, 287, 288, 1145, 289, 290, 0, 1143,
	0, 0, 0, 1185, 1149, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 1198, 0,
	299, 1205, 300, 1204, 0, 1215, 301, 302, 303, 304,
	305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0,
	308, 309, 1191, 0, 1172, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 1175, 1173, 1174,
	1181, 1177, 1176, 1180, 335, 336, 337, 338, 339, 1208,
	340, 342, 1202, 1201, 1121, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1193,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1127, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1216, 1217, 373, 1140, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1200, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 1213, 1214, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1223, 0, 1150, 394, 0,
	395, 396, 397, 398, 399, 1186, 1187, 1190, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1228, 410, 1195, 1196,
	0, 1156, 0, 411, 412, 1230, 1188, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1224, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 1179, 1178, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 1118, 281, 1237, 482, 483, 484, 1141,
	1189, 485, 1203, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 1218, 498, 499, 1128, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1219, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1199, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 1129, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1182, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	1197, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1244, 599, 600, 601, 602, 1220, 606,
	607, 0, 608, 609, 1115, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1209, 1210,
	1211, 1212, 0, 627, 0, 619, 620, 621, 1221, 622,
	1222, 1139, 623, 624, 625, 626, 0, 628, 629, 0,
	1122, 630, 631, 632, 634, 635, 633, 636, 1183, 637,
	0, 0, 638, 639, 640, 699, 1206, 1243, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1119, 0, 0, 0,
	0, 0, 1161, 1133, 1134, 1135, 1131, 1132, 1144, 1114,
	0, 0, 0, 0, 0, 0, 1112, 1113, 0, 282,
	284, 283, 285, 286, 287, 288, 1145, 289, 290, 0,
	1143, 0, 0, 0, 1185, 1149, 0, 0, 0, 291,
	292, 1225, 293, 294, 295, 296, 297, 298, 653, 1198,
	0, 299, 1205, 300, 1204, 0, 1215, 301, 302, 303,
	304, 305, 306, 1151, 1184, 1116, 307, 1245, 1246, 660,
	0, 308, 309, 1191, 0, 1172, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1226, 332, 333, 4897, 1175, 1173,
	1174, 1181, 1177, 1176, 1180, 335, 336, 337, 338, 339,
	1208, 340, 342, 1202, 1201, 1121, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1193, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1127, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1216, 1217, 373, 1140, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1200, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1227,
	381, 382, 383, 1213, 1214, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1223, 0, 1150, 394,
	0, 395, 396, 397, 398, 399, 1186, 1187, 1190, 486,
	1229, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1228, 410, 1195,
	1196, 0, 1156, 0, 411, 412, 1230, 1188, 1231, 413,
	414, 415, 1232, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1224,
	1233, 427, 428, 1234, 0, 429, 430, 431, 432, 433,
	434, 437, 1179, 1178, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1235, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1236, 480, 468, 1118, 281, 1237, 482, 483, 484,
	1141, 1189, 485, 1203, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1238, 497, 1239, 1218, 498, 499, 1128, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 1219, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 1199, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1240, 553,
	554, 555, 556, 557, 1129, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 1182, 580, 581, 563,
	564, 582, 583, 1241, 584, 585, 586, 587, 588, 589,
	590, 1197, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 1244, 599, 600, 601, 602, 1220,
	606, 607, 0, 608, 609, 1115, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 1209,
	1210, 1211, 1212, 0, 627, 0, 619, 620, 621, 1221,
	622, 1222, 1139, 623, 624, 625, 626, 0, 4896, 629,
	0, 1122, 630, 631, 632, 634, 635, 633, 636, 1183,
	637, 0, 0, 638, 639, 640, 699, 1206, 1243, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1119, 0, 0,
	0, 0, 0, 1161, 1133, 1134, 1135, 1131, 1132, 1144,
	1114, 0, 0, 0, 0, 0, 0, 1112, 1113, 0,
	282, 284, 283, 285, 286, 287, 288, 1145, 289, 290,
	0, 1143, 0, 0, 0, 1185, 1149, 0, 0, 0,
	291, 292, 1225, 293, 294, 295, 296, 297, 298, 4895,
	1198, 0, 299, 1205, 300, 1204, 0, 1215, 301, 302,
	303, 304, 305, 306, 1151, 1184, 1116, 307, 1245, 1246,
	660, 0, 308, 309, 1191, 0, 1172, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1226, 332, 333, 4897, 1175,
	1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337, 338,
	339, 1208, 340, 342, 1202, 1201, 1121, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1193, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1127, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1216, 1217, 373, 1140,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1200,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1227, 381, 382, 383, 1213, 1214, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1223, 0, 1150,
	394, 0, 395, 396, 397, 398, 399, 1186, 1187, 1190,
	486, 1229, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1228, 410,
	1195, 1196, 0, 1156, 0, 411, 412, 1230, 1188, 1231,
	413, 414, 415, 1232, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1224, 1233, 427, 428, 1234, 0, 429, 430, 431, 432,
	433, 434, 437, 1179, 1178, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1235, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1236, 480, 468, 1118, 281, 1237, 482, 483,
	484, 1141, 1189, 485, 1203, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1238, 497, 1239, 1218, 498, 499, 1128, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 1219,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 1199, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1240,
	553, 554, 555, 556, 557, 1129, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 1182, 580, 581,
	563, 564, 582, 583, 1241, 584, 585, 586, 587, 588,
	589, 590, 1197, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 1244, 599, 600, 601, 602,
	1220, 606, 607, 0, 608, 609, 1115, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	1209, 1210, 1211, 1212, 0, 627, 0, 619, 620, 621,
	1221, 622, 1222, 1139, 623, 624, 625, 626, 0, 4896,
	629, 0, 1122, 630, 631, 632, 634, 635, 633, 636,
	1183, 637, 0, 0, 638, 639, 640, 699, 1206, 1243,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 1119, 0,
	0, 0, 0, 0, 1161, 1133, 1134, 1135, 1131, 1132,
	1144, 1114, 0, 0, 0, 0, 0, 0, 1112, 1113,
	0, 282, 284, 283, 285, 286, 287, 288, 1145, 289,
	290, 0, 1143, 0, 0, 0, 1185, 1149, 0, 0,
	0, 291, 292, 1225, 293, 294, 295, 296, 297, 298,
	653, 1198, 0, 299, 1205, 300, 1204, 0, 1215, 301,
	302, 303, 304, 305, 306, 1151, 1184, 1116, 307, 1245,
	1246, 660, 0, 308, 309, 1191, 0, 1172, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1226, 332, 4501, 334,
	1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337,
	338, 339, 1208, 340, 342, 1202, 1201, 1121, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1193, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1127, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1216, 1217, 373,
	1140, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1200, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1227, 381, 382, 383, 1213, 1214, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1223, 0,
	4502, 394, 0, 395, 396, 397, 398, 399, 1186, 1187,
	1190, 486, 1229, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1228,
	410, 1195, 1196, 0, 1156, 0, 411, 412, 1230, 1188,
	1231, 413, 414, 415, 1232, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1224, 1233, 427, 428, 1234, 0, 429, 430, 431,
	432, 433, 434, 437, 1179, 1178, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1235, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1236, 480, 468, 1118, 281, 1237, 482,
	483, 484, 1141, 1189, 485, 1203, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1238, 497, 1239, 1218, 498, 499, 1128,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1219, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 1199, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1240, 553, 554, 555, 4500, 557, 1129, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1182, 580,
	581, 563, 564, 582, 583, 1241, 584, 585, 586, 587,
	588, 589, 590, 1197, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 1244, 599, 600, 601,
	602, 1220, 606, 607, 0, 608, 609, 1115, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 1209, 1210, 1211, 1212, 0, 627, 0, 619, 620,
	621, 1221, 622, 1222, 1139, 623, 624, 625, 626, 0,
	628, 629, 0, 1122, 630, 631, 632, 634, 635, 633,
	636, 1183, 637, 0, 0, 638, 639, 640, 699, 1206,
	1243, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1119,
	0, 0, 0, 0, 0, 1161, 1133, 1134, 1135, 3272,
	3273, 1144, 1114, 0, 0, 0, 0, 0, 0, 1112,
	1113, 0, 282, 284, 283, 285, 286, 287, 288, 1145,
	289, 290, 0, 1143, 0, 0, 0, 1185, 1149, 0,
	0, 0, 291, 292, 1225, 293, 294, 295, 296, 297,
	298, 653, 1198, 0, 299, 1205, 300, 1204, 0, 1215,
	301, 302, 303, 304, 305, 306, 1151, 1184, 1116, 307,
	1245, 1246, 660, 0, 308, 309, 1191, 0, 1172, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1226, 332, 333,
	334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336,
	337, 338, 339, 1208, 340, 342, 1202, 1201, 1121, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1193, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1127, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1216, 1217,
	373, 1140, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1200, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1227, 381, 382, 383, 1213, 1214, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1223,
	0, 1150, 394, 0, 395, 396, 397, 398, 399, 1186,
	1187, 1190, 486, 1229, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1228, 410, 1195, 1196, 0, 1156, 0, 411, 412, 1230,
	1188, 1231, 413, 414, 415, 1232, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1224, 1233, 427, 428, 1234, 0, 429, 430,
	431, 432, 433, 434, 437, 1179, 1178, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1235, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1236, 480, 468, 1118, 281, 1237,
	482, 483, 484, 1141, 1189, 485, 1203, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 1238, 497, 1239, 1218, 498, 499,
	1128, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 1219, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 1199, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 1240, 553, 554, 555, 556, 557, 1129, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 1182,
	580, 581, 563, 564, 582, 583, 1241, 584, 585, 586,
	587, 588, 589, 590, 1197, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 1244, 599, 600,
	601, 602, 1220, 606, 607, 0, 608, 609, 1115, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 1209, 1210, 1211, 1212, 0, 627, 0, 619,
	620, 621, 1221, 622, 1222, 1139, 623, 624, 625, 626,
	0, 628, 629, 0, 1122, 630, 631, 632, 634, 635,
	633, 636, 1183, 637, 0, 0, 638, 639, 640, 699,
	1206, 1243, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	1119, 0, 0, 0, 0, 0, 1161, 1133, 1134, 1135,
	3270, 3271, 1144, 1114, 0, 0, 0, 0, 0, 0,
	1112, 1113, 0, 282, 284, 283, 285, 286, 287, 288,
	1145, 289, 290, 0, 1143, 0, 0, 0, 1185, 1149,
	0, 0, 0, 291, 292, 1225, 293, 294, 295, 296,
	297, 298, 653, 1198, 0, 299, 1205, 300, 1204, 0,
	1215, 301, 302, 303, 304, 305, 306, 1151, 1184, 1116,
	307, 1245, 1246, 660, 0, 308, 309, 1191, 0, 1172,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1226, 332,
	333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335,
	336, 337, 338, 339, 1208, 340, 342, 1202, 1201, 1121,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1193, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1127, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1216,
	1217, 373, 1140, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1200, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1227, 381, 382, 383, 1213, 1214, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1223, 0, 1150, 394, 0, 395, 396, 397, 398, 399,
	1186, 1187, 1190, 486, 1229, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1228, 410, 1195, 1196, 0, 1156, 0, 411, 412,
	1230, 1188, 1231, 413, 414, 415, 1232, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1224, 1233, 427, 428, 1234, 0, 429,
	430, 431, 432, 433, 434, 437, 1179, 1178, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1235, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1236, 480, 468, 1118, 281,
	1237, 482, 483, 484, 1141, 1189, 485, 1203, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1238, 497, 1239, 1218, 498,
	499, 1128, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1219, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 1199, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1240, 553, 554, 555, 556, 557, 1129, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	1182, 580, 581, 563, 564, 582, 583, 1241, 584, 585,
	586, 587, 588, 589, 590, 1197, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 1244, 599,
	600, 601, 602, 1220, 606, 607, 0, 608, 609, 1115,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 1209, 1210, 1211, 1212, 0, 627, 0,
	619, 620, 621, 1221, 622, 1222, 1139, 623, 624, 625,
	626, 0, 628, 629, 0, 1122, 630, 631, 632, 634,
	635, 633, 636, 1183, 637, 0, 0, 638, 639, 640,
	699, 1206, 1243, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 1119, 0, 0, 0, 0, 0, 1161, 1133, 1134,
	1135, 1131, 1132, 1144, 1114, 0, 0, 0, 0, 0,
	0, 1112, 1113, 0, 282, 284, 283, 285, 286, 287,
	288, 1145, 289, 290, 0, 1143, 0, 0, 0, 1185,
	1149, 0, 0, 0, 291, 292, 1225, 293, 294, 295,
	296, 297, 298, 653, 1198, 0, 299, 1205, 300, 1204,
	0, 1215, 301, 302, 303, 304, 305, 306, 1151, 1184,
	1116, 307, 1245, 1246, 660, 0, 308, 309, 1191, 0,
	1172, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1226,
	332, 333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180,
	335, 336, 337, 338, 339, 1208, 340, 342, 1202, 1201,
	1121, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1193, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1127, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1216, 1217, 373, 1140, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1200, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1227, 381, 382, 383, 1213, 1214,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1223, 0, 1150, 394, 0, 395, 396, 397, 398,
	399, 1186, 1187, 1190, 486, 1229, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1228, 410, 1195, 1196, 0, 1156, 0, 411,
	412, 1230, 1188, 1231, 413, 414, 415, 1232, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1224, 1233, 427, 428, 1234, 0,
	429, 430, 431, 432, 433, 434, 437, 1179, 1178, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1235, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1236, 480, 468, 1118,
	281, 1237, 482, 483, 484, 1141, 1189, 485, 1203, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1238, 497, 1239, 1218,
	498, 499, 1128, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 1219, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 1199,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1240, 553, 554, 555, 556, 557, 1129,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 1182, 580, 581, 563, 564, 582, 583, 1241, 584,
	585, 586, 587, 588, 589, 590, 1197, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 1244,
	599, 600, 601, 602, 1220, 606, 607, 0, 608, 609,
	1115, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 1209, 1210, 1211, 1212, 0, 627,
	0, 619, 620, 621, 1221, 622, 1222, 1139, 623, 624,
	625, 626, 0, 628, 629, 0, 1122, 630, 631, 632,
	634, 635, 633, 636, 1183, 637, 0, 0, 638, 639,
	640, 699, 1206, 1243, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1119, 0, 0, 0, 0, 0, 1161, 1133,
	1134, 1135, 1131, 1132, 1144, 1114, 0, 0, 0, 0,
	0, 0, 2524, 2525, 0, 282, 284, 283, 285, 286,
	287, 288, 1145, 289, 290, 0, 1143, 0, 0, 0,
	1185, 1149, 0, 0, 0, 291, 292, 1225, 293, 294,
	295, 296, 297, 298, 653, 1198, 0, 299, 1205, 300,
	1204, 0, 1215, 301, 302, 303, 304, 305, 306, 1151,
	1184, 0, 307, 1245, 1246, 660, 0, 308, 309, 1191,
	0, 1172, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177, 1176,
	1180, 335, 336, 337, 338, 339, 1208, 340, 342, 1202,
	1201, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1193, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1127,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1216, 1217, 373, 1140, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1200, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1227, 381, 382, 383, 1213,
	1214, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1223, 0, 1150, 394, 0, 395, 396, 397,
	398, 399, 1186, 1187, 1190, 486, 1229, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1228, 410, 1195, 1196, 0, 1156, 0,
	411, 412, 1230, 1188, 1231, 413, 414, 415, 1232, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1224, 1233, 427, 428, 1234,
	0, 429, 430, 431, 432, 433, 434, 437, 1179, 1178,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1235,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1236, 480, 468,
	0, 281, 1237, 482, 483, 484, 1141, 1189, 485, 1203,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1238, 497, 1239,
	1218, 498, 499, 1128, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 1219, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	1199, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1240, 553, 554, 555, 556, 557,
	1129, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 1182, 580, 581, 563, 564, 582, 583, 1241,
	584, 585, 586, 587, 588, 589, 590, 1197, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	1244, 599, 600, 601, 602, 1220, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 1209, 1210, 1211, 1212, 0,
	627, 0, 619, 620, 621, 1221, 622, 1222, 1139, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 1183, 637, 0, 0, 638,
	639, 640, 699, 1206, 1243, 0, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 1161,
	1133, 1134, 1135, 1131, 1132, 1144, 2783, 0, 0, 0,
	0, 0, 0, 2781, 2782, 0, 282, 284, 283, 285,
	286, 287, 288, 1145, 289, 290, 0, 1143, 0, 0,
	0, 1185, 1149, 0, 0, 0, 291, 292, 1225, 293,
	294, 295, 296, 297, 298, 653, 1198, 0, 299, 1205,
	300, 1204, 0, 1215, 301, 302, 303, 304, 305, 306,
	1151, 1184, 0, 307, 1245, 1246, 660, 0, 308, 309,
	1191, 0, 1172, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177,
	1176, 1180, 335, 336, 337, 338, 339, 1208, 340, 342,
	1202, 1201, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1193, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1127, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1216, 1217, 373, 1140, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1200, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1227, 381, 382, 383,
	1213, 1214, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1223, 0, 1150, 394, 0, 395, 396,
	397, 398, 399, 1186, 1187, 1190, 486, 1229, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1228, 410, 1195, 1196, 0, 1156,
	0, 411, 412, 1230, 1188, 1231, 413, 414, 415, 1232,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1224, 1233, 427, 428,
	1234, 0, 429, 430, 431, 432, 433, 434, 437, 1179,
	1178, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1235, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1236, 480,
	468, 0, 281, 1237, 482, 483, 484, 1141, 1189, 485,
	1203, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1238, 497,
	1239, 1218, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1219, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1199, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1240, 553, 554, 555, 556,
	557, 3265, 3266, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1182, 580, 581, 563, 564, 582, 583,
	1241, 584, 585, 586, 587, 588, 589, 590, 1197, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1244, 599, 600, 601, 602, 1220, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 1209, 1210, 1211, 1212,
	0, 627, 0, 619, 620, 621, 1221, 622, 1222, 1139,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 1183, 637, 0, 0,
	638, 639, 640, 699, 1206, 1243, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	1161, 1133, 1134, 1135, 1131, 1132, 1144, 0, 0, 0,
	0, 0, 0, 0, 2177, 2178, 0, 282, 284, 283,
	285, 286, 287, 288, 1145, 289, 290, 0, 1143, 0,
	0, 0, 1185, 1149, 0, 0, 0, 291, 292, 1225,
	293, 294, 295, 296, 297, 298, 0, 1198, 0, 299,
	1205, 300, 1204, 0, 1215, 301, 302, 303, 304, 305,
	306, 1151, 1184, 1116, 307, 1245, 1246, 660, 0, 308,
	309, 1191, 0, 1172, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1226, 332, 333, 4897, 1175, 1173, 1174, 1181,
	1177, 1176, 1180, 335, 336, 337, 338, 339, 1208, 340,
	342, 1202, 1201, 1121, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1193, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1127, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1216, 1217, 373, 1140, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1200, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1227, 381, 382,
	383, 1213, 1214, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1223, 0, 1150, 394, 0, 395,
	396, 397, 398, 399, 1186, 1187, 1190, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1228, 410, 1195, 1196, 0,
	1156, 0, 411, 412, 0, 1188, 0, 413, 414, 415,
	1232, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1224, 1233, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	1179, 1178, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1235, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1236,
	480, 468, 1118, 281, 0, 482, 483, 484, 1141, 1189,
	485, 1203, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 1238,
	497, 1239, 1218, 498, 499, 1128, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 1219, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 1199, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 1240, 553, 554, 555,
	556, 557, 1129, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 1182, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 1197,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 1244, 599, 600, 601, 602, 1220, 606, 607,
	0, 608, 609, 1115, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 1209, 1210, 1211,
	1212, 0, 627, 0, 619, 620, 621, 1221, 622, 1222,
	1139, 623, 624, 625, 626, 0, 4896, 629, 0, 1122,
	630, 631, 632, 634, 635, 633, 636, 1183, 637, 0,
	0, 638, 639, 640, 699, 1206, 1243, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 1105,
	0, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 1113, 0, 282, 284,
	283, 285, 286, 287, 288, 1145, 289, 290, 0, 1143,
	0, 0, 0, 1185, 0, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 1184, 0, 307, 658, 659, 660, 0,
	308, 309, 1191, 0, 1172, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 1175, 1173, 1174,
	1181, 1177, 1176, 1180, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1216, 1217, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1223, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 1186, 1187, 1190, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1228, 410, 675, 676,
	0, 677, 0, 411, 412, 1230, 1188, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1269, 423, 425, 424, 0, 426, 1224, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 1179, 1178, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 0, 281, 1237, 482, 483, 484, 0,
	1189, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 1275, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 1218, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1219, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 689, 1277, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 241, 575,
	576, 574, 577, 578, 579, 1182, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 1220, 606,
	607, 0, 608, 609, 0, 605, 596, 243, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 1221, 622,
	1222, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 1183, 637,
	0, 0, 638, 639, 640, 1663, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 235,
	647, 648, 703, 649, 650, 651, 1283, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 1273, 0, 2017, 0, 1185, 0,
	0, 0, 0, 291, 292, 1225, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 1184, 0,
	307, 658, 659, 660, 0, 308, 309, 1191, 0, 1172,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1226, 332,
	333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1216,
	1217, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1227, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1223, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	1186, 1187, 1190, 486, 1229, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1228, 410, 675, 676, 0, 677, 0, 411, 412,
	1230, 1188, 1231, 413, 414, 415, 1232, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1269, 423, 425,
	424, 0, 426, 1224, 1233, 427, 428, 1234, 0, 429,
	430, 431, 432, 433, 434, 437, 1179, 1178, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1235, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1236, 480, 468, 0, 281,
	1237, 482, 483, 484, 0, 1189, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 1275, 492, 493, 494,
	0, 0, 495, 496, 682, 1238, 497, 1239, 1218, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1219, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1240, 553, 554, 555, 556, 557, 689, 1277,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 241, 575, 576, 574, 577, 578, 579,
	1182, 580, 581, 563, 564, 582, 583, 1241, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 1220, 606, 607, 0, 608, 609, 0,
	605, 596, 243, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 1221, 622, 1222, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 1183, 637, 0, 0, 638, 639, 640,
	1663, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 235, 647, 648, 703, 649, 650,
	651, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3429, 0, 1283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 2017, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 1185, 0, 0,
	0, 0, 291, 292, 1225, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 1184, 0, 307,
	658, 659, 660, 0, 308, 309, 1191, 0, 1172, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1226, 332, 333,
	334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1216, 1217,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1227, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1223,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 1186,
	1187, 1190, 486, 1229, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1228, 410, 675, 676, 0, 677, 0, 411, 412, 1230,
	1188, 1231, 413, 414, 415, 1232, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 1269, 423, 425, 424,
	0, 426, 1224, 1233, 427, 428, 1234, 0, 429, 430,
	431, 432, 433, 434, 437, 1179, 1178, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1235, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1236, 480, 468, 0, 281, 1237,
	482, 483, 484, 0, 1189, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 1275, 492, 493, 494, 0,
	0, 495, 496, 682, 1238, 497, 1239, 1218, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 1219, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 1240, 553, 554, 555, 556, 557, 689, 1277, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 1182,
	580, 581, 563, 564, 582, 583, 1241, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 1220, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 1221, 622, 1222, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 1183, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1265, 0, 1283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 0,
	1271, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1185, 0, 0, 0,
	0, 291, 292, 1225, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 1184, 0, 307, 658,
	659, 660, 0, 308, 309, 1191, 0, 1172, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1226, 332, 333, 334,
	1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1216, 1217, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1227, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1223, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 1186, 1187,
	1190, 486, 1229, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1228,
	410, 675, 676, 0, 677, 0, 411, 412, 1230, 1188,
	1231, 413, 414, 415, 1232, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 1269, 423, 425, 424, 0,
	426, 1224, 1233, 427, 428, 1234, 0, 429, 430, 431,
	432, 433, 434, 437, 1179, 1178, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1235, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1236, 480, 468, 0, 281, 1237, 482,
	483, 484, 0, 1189, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 1275, 492, 493, 494, 0, 0,
	495, 496, 682, 1238, 497, 1239, 1218, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1219, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1240, 553, 554, 555, 556, 557, 689, 1277, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1182, 580,
	581, 563, 564, 582, 583, 1241, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 1220, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 1221, 622, 1222, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 1183, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 1273, 0, 1271,
	0, 1185, 0, 0, 0, 0, 291, 292, 1225, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 1184, 0, 307, 658, 659, 660, 0, 308, 309,
	1191, 0, 1172, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177,
	1176, 1180, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1216, 1217, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1227, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1223, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 1186, 1187, 1190, 486, 1229, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1228, 410, 675, 676, 0, 677,
	0, 411, 412, 1230, 1188, 1231, 413, 414, 415, 1232,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	1269, 423, 425, 424, 0, 426, 1224, 1233, 427, 428,
	1234, 0, 429, 430, 431, 432, 433, 434, 437, 1179,
	1178, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1235, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1236, 480,
	468, 0, 281, 1237, 482, 483, 484, 0, 1189, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 1275,
	492, 493, 494, 0, 0, 495, 496, 682, 1238, 497,
	1239, 1218, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1219, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1240, 553, 554, 555, 556,
	557, 689, 1277, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1182, 580, 581, 563, 564, 582, 583,
	1241, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 1220, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 1221, 622, 1222, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 1183, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 1283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 1273, 0, 1271, 0, 1185, 0, 0, 0,
	0, 291, 292, 1225, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 1184, 0, 307, 658,
	659, 660, 0, 308, 309, 1191, 0, 1172, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1226, 332, 333, 334,
	1175, 1173, 1174, 1181, 1177, 1176, 1180, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1216, 1217, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1227, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1223, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 1186, 1187,
	1190, 486, 1229, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1228,
	410, 675, 676, 0, 677, 0, 411, 412, 1230, 1188,
	1231, 413, 414, 415, 1232, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1224, 1233, 427, 428, 1234, 0, 429, 430, 431,
	432, 433, 434, 437, 1179, 1178, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1235, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1236, 480, 468, 0, 281, 1237, 482,
	483, 484, 0, 1189, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1238, 497, 1239, 1218, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1219, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1240, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1182, 580,
	581, 563, 564, 582, 583, 1241, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 1220, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 1221, 622, 1222, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 1183, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 4317,
	0, 1185, 0, 0, 0, 0, 291, 292, 1225, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 1184, 0, 307, 658, 659, 660, 0, 308, 309,
	1191, 0, 1172, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1226, 332, 333, 334, 1175, 1173, 1174, 1181, 1177,
	1176, 1180, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1216, 1217, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1227, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1223, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 1186, 1187, 1190, 486, 1229, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1228, 410, 675, 676, 0, 677,
	0, 411, 412, 1230, 1188, 1231, 413, 414, 415, 1232,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1224, 1233, 427, 428,
	1234, 0, 429, 430, 431, 432, 433, 434, 437, 1179,
	1178, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1235, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1236, 480,
	468, 0, 281, 1237, 482, 483, 484, 0, 1189, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1238, 497,
	1239, 1218, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1219, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1240, 553, 554, 555, 556,
	557, 689, 1277, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1182, 580, 581, 563, 564, 582, 583,
	1241, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 1220, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 1221, 622, 1222, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 1183, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 276, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 2628, 2629, 2630, 2647, 2648,
	2649, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 2650, 0, 652, 0, 0,
	0, 0, 291, 292, 1914, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 1899, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 2640, 0, 318,
	319, 320, 317, 321, 0, 322, 2636, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 2641, 2642, 2643, 2644, 374, 375,
	376, 667, 0, 0, 2635, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 2645, 2646,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 2638, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 2639,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 1898, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 1105, 0, 1545,
	2625, 2626, 2627, 2651, 2637, 2631, 0, 2633, 2634, 2632,
	2619, 2620, 2621, 2622, 2623, 2624, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 1225, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 1509, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1226, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1227, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 1229, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 1228, 410, 675, 676, 0, 677,
	0, 411, 412, 1230, 678, 1231, 413, 414, 415, 1232,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 1233, 427, 428,
	1234, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1235, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1236, 480,
	468, 0, 0, 1237, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1238, 497,
	1239, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1240, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 241, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	1241, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 243, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 1663, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 235, 647, 648,
	703, 649, 650, 651, 0, 1660, 236, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 196, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 1225, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	1509, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1226,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1227, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 1229, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 1228, 410, 675, 676, 0, 677, 0, 411,
	412, 1230, 678, 1231, 413, 414, 415, 1232, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 1233, 427, 428, 1234, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1235, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1236, 480, 468, 0,
	0, 1237, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1238, 497, 1239, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1240, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 241, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 1241, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 243, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 1663, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 235, 647, 648, 703, 649,
	650, 651, 1545, 1544, 236, 0, 0, 0, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 196, 0, 652, 0, 0, 0, 0, 291,
	292, 1225, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 1509, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1226, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1227,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1229, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1228, 410, 675,
	676, 0, 677, 0, 411, 412, 1230, 678, 1231, 413,
	414, 415, 1232, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	1233, 427, 428, 1234, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1235, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1236, 480, 468, 0, 0, 1237, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1238, 497, 1239, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1240, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 1241, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1545, 1544, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 1687, 0, 652,
	0, 0, 0, 0, 291, 292, 1225, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	1509, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1226,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1227, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 1229, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 1228, 410, 675, 676, 0, 677, 0, 411,
	412, 1230, 678, 1231, 413, 414, 415, 1232, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 1233, 427, 428, 1234, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1235, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1236, 480, 468, 0,
	0, 1237, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1238, 497, 1239, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1240, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 1241, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1545, 1544, 0, 0, 0, 0, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 3752, 0, 652, 0, 0, 0, 0, 291,
	292, 1225, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 1509, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1226, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1227,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1229, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1228, 410, 675,
	676, 0, 677, 0, 411, 412, 1230, 678, 1231, 413,
	414, 415, 1232, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	1233, 427, 428, 1234, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1235, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1236, 480, 468, 0, 0, 1237, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1238, 497, 1239, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 2392, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1240, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 1241, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1545, 2301, 0,
	0, 0, 0, 2302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 1687, 0, 652,
	0, 0, 0, 0, 291, 292, 1225, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	1509, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1226,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1227, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 1229, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 1228, 410, 675, 676, 0, 677, 0, 411,
	412, 1230, 678, 1231, 413, 414, 415, 1232, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 2300,
	425, 424, 0, 426, 679, 1233, 427, 428, 1234, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1235, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1236, 480, 468, 0,
	0, 1237, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1238, 497, 1239, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1240, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 1241, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1545, 1544, 0, 0, 0, 0, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 1687, 0, 652, 0, 0, 0, 0, 291,
	292, 1225, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 1509, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1226, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1227,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1229, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1228, 410, 675,
	676, 0, 677, 0, 411, 412, 1230, 678, 1231, 413,
	414, 415, 1232, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	1233, 427, 428, 1234, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1235, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1236, 480, 468, 0, 0, 1237, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1238, 497, 1239, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1240, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 1241, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1105, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 1669, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 241, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 243, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 1663, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 276, 0, 235, 647, 648,
	703, 649, 650, 651, 0, 0, 236, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 196, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 281, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 276, 3179, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	2031, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 0, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 5064, 0, 1185, 0,
	0, 0, 0, 291, 292, 1225, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 1184, 0,
	307, 658, 659, 660, 0, 308, 309, 1191, 0, 1172,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1226, 332,
	333, 334, 1175, 1173, 1174, 1181, 1177, 1176, 1180, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1216,
	1217, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1227, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1223, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	1186, 1187, 1190, 486, 1229, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1228, 410, 675, 676, 0, 677, 0, 411, 412,
	1230, 1188, 1231, 413, 414, 415, 1232, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1224, 1233, 427, 428, 1234, 0, 429,
	430, 431, 432, 433, 434, 437, 1179, 1178, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1235, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1236, 480, 468, 0, 281,
	1237, 482, 483, 484, 0, 1189, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1238, 497, 1239, 1218, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1219, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1240, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	1182, 580, 581, 563, 564, 582, 583, 1241, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 1220, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 1221, 622, 1222, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 1183, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 276, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 3702, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 281, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 1657, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 276, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	3167, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 0, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 276, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 3859, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 932, 0, 833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 2379, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	840, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	930, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 281, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	838, 610, 611, 612, 613, 614, 839, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 2076,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 843, 0, 0, 0, 0, 291, 292, 1225, 293,
	294, 295, 296, 297, 298, 0, 2082, 0, 299, 2072,
	300, 2088, 0, 2095, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 2098, 2099, 0, 0, 308, 309,
	0, 0, 1509, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1226, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 1208, 340, 342,
	2086, 2085, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1193, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	0, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 0, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 2084, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1227, 381, 382, 383,
	2093, 2094, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 0, 0, 0, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 486, 1229, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 1228, 410, 2079, 2080, 0, 2075,
	0, 411, 412, 1230, 0, 1231, 413, 414, 415, 1232,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 0, 1233, 427, 428,
	1234, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1235, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1236, 480,
	468, 0, 0, 1237, 482, 483, 484, 0, 0, 485,
	2087, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 0, 1238, 497,
	1239, 0, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 2069, 511, 512,
	513, 2070, 514, 515, 516, 0, 517, 0, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 2083, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1240, 553, 554, 555, 556,
	557, 0, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	1241, 584, 585, 586, 587, 588, 589, 590, 2081, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 2097, 599, 600, 601, 602, 0, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 2089, 2090, 2091, 2092,
	0, 627, 0, 619, 620, 621, 0, 622, 0, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 0, 2073, 2096, 0, 642, 641, 643,
	644, 0, 645, 646, 0, 0, 0, 0, 647, 648,
	0, 649, 650, 651, 833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 3979, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 2063, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	840, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 281, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 3978, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	838, 610, 611, 612, 613, 614, 839, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 3977, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	833, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 2103, 289, 290, 0, 0, 0,
	0, 843, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 840, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 281, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 2102, 570, 571, 572, 573, 0, 2104, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 838, 610, 611, 612,
	613, 614, 839, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 2101, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 833, 0, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	2054, 289, 290, 0, 0, 0, 0, 843, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 840, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 281,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 2053, 570,
	571, 572, 573, 0, 2055, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 838, 610, 611, 612, 613, 614, 839, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 2052,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 831, 0, 833, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 843, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 840,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 0, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 281, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 838,
	610, 611, 612, 613, 614, 839, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 833,
	0, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	843, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 840, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 281, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 838, 610, 611, 612, 613,
	614, 839, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 833, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 843, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 840, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 281, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 2430, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 2431, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 838, 610, 611, 612, 613, 614, 839, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 2432, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 276, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 843, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 1545, 1544, 0, 0, 0, 0, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 843, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 1225, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 1509, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1226, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1227,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1229, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1228, 410, 675,
	676, 0, 677, 0, 411, 412, 1230, 678, 1231, 413,
	414, 415, 1232, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	1233, 427, 428, 1234, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1235, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1236, 480, 468, 0, 0, 1237, 482, 483, 484,
	4073, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1238, 497, 1239, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1240, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 1241, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1545, 1544, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 1225, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	1509, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1226,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1227, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 1229, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 1228, 410, 675, 676, 0, 677, 0, 411,
	412, 1230, 678, 1231, 413, 414, 415, 1232, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 1233, 427, 428, 1234, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1235, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1236, 480, 468, 0,
	0, 1237, 482, 483, 484, 3652, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1238, 497, 1239, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1240, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 1241, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1717, 0, 1545, 1544, 0, 0, 0, 0,
	1542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 1225, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 1509, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1226, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 1716, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1227, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 1229, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 1228,
	410, 675, 676, 0, 677, 0, 411, 412, 1230, 678,
	1231, 413, 414, 415, 1232, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 1233, 427, 428, 1234, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1235, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1236, 480, 468, 0, 0, 1237, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1238, 497, 1239, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 1715, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1240, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 1714, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 1241, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1590,
	0, 1545, 1544, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	1225, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 1509, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1226, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1227, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 1592, 673, 674, 486, 1229,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 1228, 410, 675, 676,
	0, 677, 0, 411, 412, 1230, 678, 1231, 413, 414,
	415, 1232, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 1233,
	427, 428, 1234, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1235, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1236, 480, 468, 0, 0, 1237, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1238, 497, 1239, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1240, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 1241, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1540, 0, 1545, 1544,
	0, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 1225, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 1509, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1226, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1227, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 1229, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 1228, 410, 675, 676, 0, 677, 0,
	411, 412, 1230, 678, 1231, 413, 414, 415, 1232, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 1233, 427, 428, 1234,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1235,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1236, 480, 468,
	0, 0, 1237, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1238, 497, 1239,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1240, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 1241,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 1545, 1544, 0, 0, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 1225, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 1509, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1226, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1227, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 1229, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 1228, 410,
	675, 676, 0, 677, 0, 411, 412, 1230, 678, 1231,
	413, 414, 415, 1232, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 1233, 427, 428, 1234, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1235, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1236, 480, 468, 0, 0, 1237, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1238, 497, 1239, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1240,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 1241, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 1545, 1544,
	0, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 1225, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 1509, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1226, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1227, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 1229, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 1228, 410, 675, 676, 0, 677, 0,
	411, 412, 1230, 678, 1231, 413, 414, 415, 1232, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 1233, 427, 428, 1234,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1235,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1236, 480, 468,
	0, 0, 1237, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1238, 497, 1239,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1240, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 1241,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 1545, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 1225, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 1509, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1226, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1227, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 1229, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 1228, 410,
	675, 676, 0, 677, 0, 411, 412, 1230, 678, 1231,
	413, 414, 415, 1232, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 1233, 427, 428, 1234, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1235, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1236, 480, 468, 0, 0, 1237, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1238, 497, 1239, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1240,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 1241, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 276, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 2956, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 3694, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 2960, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 3693, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 2959, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 3690, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 3692, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 3689,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 2958,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 3691, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 276, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 2956, 308, 309, 661, 0, 0, 2950, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 2952, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 2960, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 2959, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 2949, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 0, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 0, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 2958, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 2957, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 1794, 0,
	276, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 1793, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 1792, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 281, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	1795, 562, 569, 570, 571, 572, 573, 0, 1791, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 1789, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 1790, 641,
	643, 644, 702, 645, 646, 1513, 0, 276, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 1515, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	281, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 1275, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 1510, 0, 276, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 1512, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 281, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 1275, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 1416,
	0, 276, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 1418, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 1275, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 736, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 735,
	287, 288, 724, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 727, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	733, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 729, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 723, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 724,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 727, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 728, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 729, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	276, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 724, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 727, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 728, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 0, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 729, 575, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 276, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 724,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 727, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 4083, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 729, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	276, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 281, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	1275, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 276, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 3595, 480, 468, 0, 281, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	3137, 0, 276, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 3136, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 281, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	281, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 2337, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 2399, 0, 276, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 281, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 2344,
	0, 276, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 2343, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 2330, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 2332, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 281, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 276, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 2294, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 0, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 281, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 1275, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 1635, 0,
	276, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 1634, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 281, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 1533, 0, 276, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	281, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 1526, 0, 276, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 1528, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 281, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 1352,
	0, 276, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 1351, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 1342, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 1341, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 281, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 1339, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 1338,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 281, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	1334, 0, 276, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 1333, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 281, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 705, 0, 276,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 281, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 267, 0, 276, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 281,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 276, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 276, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 727, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 728, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 0,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 729, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 276, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 2439, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 276, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 2437, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 281,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 276, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 2435, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 276, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	2350, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 281,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 276, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 2128, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 276, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	2122, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 281,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 917, 0, 276, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 916, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 0, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 915,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 276, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 3693, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 4400,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 1380, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 1383, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 1381, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 796, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 795, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 794, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 1384, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 792, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	1380, 0, 276, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 1383, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 1381,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 796, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 795,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 794, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 1384, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 792,
	694, 695, 696, 0, 627, 0, 619, 1382, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 714, 0, 276,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 713, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 712, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 276, 3179, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 276,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	4694, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 276, 3536, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 276,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	4289, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 276, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 4033, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 276,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 2836, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 276, 3179, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 3176, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 276,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	2247, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 795, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 794, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 792, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 276, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 2409, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 2397,
	0, 276, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 0, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 1690, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 1683, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	786, 0, 276, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 782, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	787, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 796, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 795,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 794, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 1668, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 792,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 1641, 0, 276,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 1640, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 1625, 0, 276, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	1623, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 0,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 1618, 0, 276, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 0, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 0, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 1595, 0,
	276, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 1593, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 0, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 1588, 0, 276, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 1550, 0, 276, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 1518,
	0, 276, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 0, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 1386, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 795, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	794, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 792, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 1357, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 1356,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	1348, 0, 276, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 1347, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 1300, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 801, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 786, 0, 276,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 782,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 781,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 787, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 796,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 795, 554, 555, 556,
	557, 783, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 794, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 784, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 792, 694, 695, 696,
	0, 627, 0, 619, 788, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 775, 0, 276, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 0,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 776, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 738, 0, 276, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 0, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 0, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 731, 0,
	276, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 0, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 709, 0, 276, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 3722, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 795,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 794, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 792,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 3635, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 3611, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 3608, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 3560, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 3558, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 3546, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 3543, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 3147, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 776, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 2368, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 0, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 1319, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 1248, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 0, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 0, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 0, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	0, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 1631, 0, 1364, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 0, 300, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 0,
	0, 0, 0, 308, 309, 0, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 1366, 335, 336, 337,
	338, 339, 0, 340, 342, 0, 0, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 0, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	0, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 0, 0, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 0, 0,
	0, 394, 0, 395, 396, 397, 398, 399, 1630, 0,
	0, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 0, 0, 0, 0, 0, 411, 412, 0, 0,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 0, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 0, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 0, 0, 497, 0, 0, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 0, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 0, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 0, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1367, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 0, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 0, 599, 600, 601,
	602, 0, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 0, 0, 0, 0, 0, 627, 0, 619, 620,
	621, 0, 622, 0, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 0, 0,
	0, 0, 642, 641, 643, 644, 0, 645, 646, 1553,
	0, 1364, 0, 647, 648, 0, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 0, 0, 0, 0,
	308, 309, 0, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 1366, 335, 336, 337, 338, 339, 0,
	340, 342, 0, 0, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 0, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 0, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 0, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 0, 0, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 0, 0, 0, 394, 0,
	395, 396, 397, 398, 399, 1552, 0, 0, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 0, 0,
	0, 0, 0, 411, 412, 0, 0, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 0, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 0, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 0,
	0, 497, 0, 0, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 0,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 0, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 0, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1367, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	0, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 0, 599, 600, 601, 602, 0, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 0, 0,
	0, 0, 0, 627, 0, 619, 620, 621, 0, 622,
	0, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 0, 0, 0, 0, 642,
	641, 643, 644, 0, 645, 646, 1362, 0, 1364, 0,
	647, 648, 0, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 0, 0, 0, 0, 308, 309, 0,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	1366, 335, 336, 337, 338, 339, 0, 340, 342, 0,
	0, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 0,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 0, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 0,
	0, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 0, 0, 0, 394, 0, 395, 396, 397,
	398, 399, 1361, 0, 0, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 0, 0, 0, 0, 0,
	411, 412, 0, 0, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 0, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 0,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 0, 0, 497, 0,
	0, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 0, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	0, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	0, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 1367, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	0, 599, 600, 601, 602, 0, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 0, 0, 0, 0, 0,
	627, 0, 619, 620, 621, 0, 622, 0, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 0, 0, 0, 0, 642, 641, 643, 644,
	0, 645, 646, 2142, 0, 1364, 0, 647, 648, 0,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 0, 300, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	0, 0, 0, 0, 308, 309, 0, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 1366, 335, 336,
	337, 338, 339, 0, 340, 342, 0, 0, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 0, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 0, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 0, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 0, 0, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 0,
	0, 0, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 0, 0, 0, 0, 0, 411, 412, 0,
	0, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 0, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 0, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 0, 0, 497, 0, 0, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 0, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 0, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 0, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 1367,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 0, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 0, 599, 600,
	601, 602, 0, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 0, 0, 0, 0, 0, 627, 0, 619,
	620, 621, 0, 622, 0, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 0,
	0, 0, 0, 642, 641, 643, 644, 0, 645, 646,
	2109, 0, 1364, 0, 647, 648, 0, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 0, 300, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 0, 0, 0,
	0, 308, 309, 0, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 1366, 335, 336, 337, 338, 339,
	0, 340, 342, 0, 0, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 0, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 0, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 0, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 0, 0, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 0, 0, 0, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 0,
	0, 0, 0, 0, 411, 412, 0, 0, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 0,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 0, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	0, 0, 497, 0, 0, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	0, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 0, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 0, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 1367, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 0, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 0, 599, 600, 601, 602, 0,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 0,
	0, 0, 0, 0, 627, 0, 619, 620, 621, 0,
	622, 0, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 0, 0, 0, 0,
	642, 641, 643, 644, 1364, 645, 646, 0, 0, 0,
	0, 647, 648, 0, 649, 650, 651, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 0, 300, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 0,
	0, 0, 0, 308, 309, 0, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 1366, 335, 336, 337,
	338, 339, 0, 340, 342, 0, 0, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 0, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	0, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 0, 0, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 0, 0,
	0, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 0, 0, 0, 0, 0, 411, 412, 0, 0,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 0, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 0, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 0, 0, 497, 0, 0, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 0, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 0, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 0, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1367, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 0, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 0, 599, 600, 601,
	602, 0, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 0, 0, 0, 0, 0, 627, 0, 619, 620,
	621, 0, 622, 0, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 0, 0,
	0, 0, 642, 641, 643, 644, 0, 645, 646, 0,
	0, 0, 0, 647, 648, 0, 649, 650, 651, 1843,
	1844, 0, 1876, 1877, 1878, 1887, 1888, 1889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1880, 1874, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1893, 1876,
	1877, 1878, 1887, 1888, 1889, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1899, 0, 0, 1880, 1874,
	0, 0, 0, 0, 1845, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 1865, 1893, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 1899, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 1843, 1844, 0, 1876, 1877, 1878, 1887, 1888,
	1889, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 1880, 1874, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1899, 0,
	0, 1868, 1869, 1870, 1871, 0, 0, 1845, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1869,
	1870, 1871, 0, 0, 0, 0, 0, 0, 1851, 0,
	1884, 0, 0, 1894, 0, 0, 0, 0, 0, 0,
	1873, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1890, 0, 1891, 0,
	0, 0, 0, 0, 0, 1860, 1861, 1884, 0, 0,
	1894, 0, 0, 0, 0, 0, 0, 1873, 1875, 0,
	0, 0, 0, 1882, 1868, 1869, 1870, 1871, 0, 0,
	0, 0, 0, 1890, 1851, 1891, 0, 0, 1866, 0,
	0, 0, 1860, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 1866, 1894, 0, 0, 0,
	0, 0, 0, 1873, 1875, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1890,
	0, 1891, 0, 0, 0, 0, 1881, 0, 1860, 1861,
	0, 0, 0, 0, 0, 0, 0, 1896, 0, 0,
	0, 0, 0, 1892, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1896, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1896, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 0, 1876, 1877,
	1878, 1887, 1888, 1889, 0, 1898, 0, 0, 0, 0,
	1885, 0, 0, 0, 0, 0, 0, 1880, 1874, 0,
	0, 0, 0, 0, 0, 1846, 1872, 0, 0, 0,
	0, 0, 0, 0, 1893, 0, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 1867,
	0, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 1885, 1883, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 1857, 1858, 1864,
	1886, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848, 1849,
	1850, 1852, 1853, 0, 0, 0, 0, 0, 1898, 0,
	0, 0, 3349, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859,
	0, 1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2662,
	0, 0, 0, 0, 0, 0, 0, 1868, 1869, 1870,
	1871, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 1858, 1864, 1886, 1863, 1859, 0, 1856, 1854, 1855,
	1847, 1848, 1849, 1850, 1852, 1853, 1884, 0, 0, 1894,
	0, 4819, 0, 0, 0, 0, 1873, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1890, 0, 1891, 0, 0, 0, 0, 0,
	0, 1860, 1861, 1843, 1844, 0, 1876, 1877, 1878, 1887,
	1888, 1889, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 1880, 1874, 0, 0, 0,
	0, 0, 0, 1846, 1866, 0, 0, 0, 0, 0,
	0, 0, 1893, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1899,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 1892, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 1869, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 0, 1876, 1877, 1878, 1887, 1888, 1889, 0,
	0, 0, 0, 0, 1884, 0, 0, 1894, 0, 1885,
	0, 0, 1880, 1874, 1873, 1875, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 1893,
	1890, 0, 1891, 0, 0, 0, 0, 0, 0, 1860,
	1861, 1898, 0, 0, 0, 0, 1899, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 1866, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	1892, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859, 0,
	1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0,
	1881, 0, 0, 0, 4722, 0, 0, 0, 0, 0,
	0, 1896, 1868, 1869, 1870, 1871, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 0,
	1876, 1877, 1878, 1887, 1888, 1889, 0, 0, 0, 0,
	0, 1884, 0, 0, 1894, 0, 0, 1872, 0, 1880,
	1874, 1873, 1875, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 1893, 1890, 0, 1891,
	1867, 0, 0, 0, 0, 0, 1860, 1861, 0, 0,
	0, 0, 0, 1899, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 1882, 0, 0, 1885, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 1866,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1896, 1868,
	1869, 1870, 1871, 0, 0, 0, 0, 0, 0, 1851,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 1858, 1864, 1886, 1863, 1859, 0, 1856, 1854,
	1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0, 0,
	0, 0, 4674, 0, 0, 0, 0, 0, 1884, 0,
	0, 1894, 0, 0, 1872, 0, 0, 0, 1873, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1890, 0, 1891, 1867, 0, 0,
	0, 0, 0, 1860, 1861, 1843, 1844, 0, 1876, 1877,
	1878, 1887, 1888, 1889, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 1885, 0, 0, 1880, 1874, 0,
	0, 0, 0, 0, 0, 1846, 1866, 0, 0, 0,
	0, 0, 0, 0, 1893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 1892, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 1858,
	1864, 1886, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848,
	1849, 1850, 1852, 1853, 0, 0, 0, 0, 0, 4673,
	0, 0, 0, 0, 0, 0, 0, 1868, 1869, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 0, 1876, 1877, 1878, 1887, 1888,
	1889, 0, 0, 0, 0, 0, 1884, 0, 0, 1894,
	0, 1885, 0, 0, 1880, 1874, 1873, 1875, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1893, 1890, 0, 1891, 0, 0, 0, 0, 0,
	0, 1860, 1861, 1898, 0, 0, 0, 0, 1899, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 1866, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 0, 0, 0,
	0, 0, 1892, 0, 0, 1857, 1858, 1864, 1886, 1863,
	1859, 0, 1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852,
	1853, 0, 1881, 0, 0, 0, 4485, 0, 0, 0,
	0, 0, 0, 1896, 1868, 1869, 1870, 1871, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 1876, 1877, 1878, 1887, 1888, 1889, 0, 0,
	0, 0, 0, 1884, 0, 0, 1894, 0, 0, 1872,
	0, 1880, 1874, 1873, 1875, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 1893, 1890,
	0, 1891, 1867, 0, 0, 0, 0, 0, 1860, 1861,
	0, 0, 0, 0, 0, 1899, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 1882, 0, 0, 1885,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 1866, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1896, 1868, 1869, 1870, 1871, 0, 0, 0, 0, 0,
	0, 1851, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859, 0,
	1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0,
	0, 0, 0, 0, 4313, 0, 0, 0, 0, 0,
	1884, 0, 0, 1894, 0, 0, 1872, 0, 0, 0,
	1873, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1890, 0, 1891, 1867,
	0, 0, 0, 0, 0, 1860, 1861, 1843, 1844, 0,
	1876, 1877, 1878, 1887, 1888, 1889, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 1885, 0, 0, 1880,
	1874, 0, 0, 0, 0, 0, 0, 1846, 1866, 0,
	0, 0, 0, 0, 0, 0, 1893, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1898, 0,
	0, 0, 0, 1899, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 1892, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1896, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 1858, 1864, 1886, 1863, 1859, 0, 1856, 1854, 1855,
	1847, 1848, 1849, 1850, 1852, 1853, 0, 0, 0, 0,
	0, 4230, 0, 0, 0, 0, 0, 0, 0, 1868,
	1869, 1870, 1871, 1872, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 0, 1876, 1877, 1878,
	1887, 1888, 1889, 0, 0, 0, 0, 0, 1884, 0,
	0, 1894, 0, 1885, 0, 0, 1880, 1874, 1873, 1875,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 1893, 1890, 0, 1891, 0, 0, 0,
	0, 0, 0, 1860, 1861, 1898, 0, 0, 0, 0,
	1899, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 1866, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 0,
	0, 0, 0, 0, 1892, 0, 0, 1857, 1858, 1864,
	1886, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848, 1849,
	1850, 1852, 1853, 0, 1881, 0, 0, 0, 4229, 0,
	0, 0, 0, 0, 0, 1896, 1868, 1869, 1870, 1871,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 0, 1876, 1877, 1878, 1887, 1888, 1889,
	0, 0, 0, 0, 0, 1884, 0, 0, 1894, 0,
	0, 1872, 0, 1880, 1874, 1873, 1875, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1893, 1890, 0, 1891, 1867, 0, 0, 0, 0, 0,
	1860, 1861, 0, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 1882, 0,
	0, 1885, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 1866, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1896, 1868, 1869, 1870, 1871, 0, 0, 0,
	0, 0, 0, 1851, 0, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 1858, 1864, 1886, 1863,
	1859, 0, 1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852,
	1853, 0, 0, 0, 0, 0, 4228, 0, 0, 0,
	0, 0, 1884, 0, 0, 1894, 0, 0, 1872, 0,
	0, 0, 1873, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1890, 0,
	1891, 1867, 0, 0, 0, 0, 0, 1860, 1861, 1843,
	1844, 0, 1876, 1877, 1878, 1887, 1888, 1889, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 1885, 0,
	0, 1880, 1874, 0, 0, 0, 0, 0, 0, 1846,
	1866, 0, 0, 0, 0, 0, 0, 0, 1893, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1898, 0, 0, 0, 0, 1899, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 1892, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 1858, 1864, 1886, 1863, 1859, 0, 1856,
	1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0,
	0, 0, 0, 3864, 0, 0, 0, 0, 0, 0,
	0, 1868, 1869, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 0, 1876,
	1877, 1878, 1887, 1888, 1889, 0, 0, 0, 0, 0,
	1884, 0, 0, 1894, 0, 1885, 0, 0, 1880, 1874,
	1873, 1875, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 1893, 1890, 0, 1891, 0,
	0, 0, 0, 0, 0, 1860, 1861, 1898, 0, 0,
	0, 0, 1899, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 1866, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 0, 0, 0, 1892, 0, 0, 1857,
	1858, 1864, 1886, 1863, 1859, 0, 1856, 1854, 1855, 1847,
	1848, 1849, 1850, 1852, 1853, 0, 1881, 0, 0, 0,
	3347, 0, 0, 0, 0, 0, 0, 1896, 1868, 1869,
	1870, 1871, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 0, 1876, 1877, 1878, 1887,
	1888, 1889, 0, 0, 0, 0, 0, 1884, 0, 0,
	1894, 0, 0, 1872, 0, 1880, 1874, 1873, 1875, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 1893, 1890, 0, 1891, 1867, 0, 0, 0,
	0, 0, 1860, 1861, 0, 0, 0, 0, 0, 1899,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	1882, 0, 0, 1885, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 1866, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1896, 1868, 1869, 1870, 1871, 0,
	0, 0, 0, 0, 0, 1851, 0, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 1858, 1864,
	1886, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848, 1849,
	1850, 1852, 1853, 0, 0, 0, 0, 0, 3346, 0,
	0, 0, 0, 0, 1884, 0, 0, 1894, 0, 0,
	1872, 0, 0, 0, 1873, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1890, 0, 1891, 1867, 0, 0, 0, 0, 0, 1860,
	1861, 1843, 1844, 0, 1876, 1877, 1878, 1887, 1888, 1889,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	1885, 0, 0, 1880, 1874, 0, 0, 0, 0, 0,
	0, 1846, 1866, 0, 0, 0, 0, 0, 0, 0,
	1893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	1892, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859,
	0, 1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853,
	0, 0, 0, 0, 0, 3345, 0, 0, 0, 0,
	0, 0, 0, 1868, 1869, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	0, 1876, 1877, 1878, 1887, 1888, 1889, 0, 0, 0,
	0, 0, 1884, 0, 0, 1894, 0, 1885, 0, 0,
	1880, 1874, 1873, 1875, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 1893, 1890, 0,
	1891, 0, 0, 0, 0, 0, 0, 1860, 1861, 1898,
	0, 0, 0, 0, 1899, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 2210, 0, 0,
	1866, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 1892, 0,
	0, 1857, 1858, 1864, 1886, 1863, 1859, 0, 1856, 1854,
	1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 1881, 2208,
	0, 0, 3344, 0, 0, 0, 0, 0, 0, 1896,
	1868, 1869, 1870, 1871, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 0, 1876, 1877,
	1878, 1887, 1888, 1889, 0, 0, 0, 0, 0, 1884,
	0, 0, 1894, 0, 0, 1872, 0, 1880, 1874, 1873,
	1875, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1893, 1890, 0, 1891, 1867, 0,
	0, 0, 0, 0, 1860, 1861, 0, 0, 0, 0,
	0, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 1882, 0, 0, 1885, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 1866, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1896, 1868, 1869, 1870,
	1871, 0, 0, 0, 0, 0, 0, 1851, 4973, 1883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	1858, 1864, 1886, 1863, 1859, 0, 1856, 1854, 1855, 1847,
	1848, 1849, 1850, 1852, 1853, 0, 0, 0, 3309, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 1894,
	0, 2209, 1872, 0, 0, 0, 1873, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1890, 0, 1891, 1867, 0, 0, 0, 0,
	0, 1860, 1861, 1843, 1844, 0, 1876, 1877, 1878, 1887,
	1888, 1889, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 1885, 0, 0, 1880, 1874, 0, 0, 0,
	0, 0, 0, 1846, 1866, 0, 0, 0, 0, 0,
	0, 0, 1893, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1898, 0, 0, 0, 0, 1899,
	0, 0, 0, 0, 2207, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 1892, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 4972, 1857, 1858, 1864, 1886,
	1863, 1859, 0, 1856, 1854, 1855, 1847, 1848, 1849, 1850,
	1852, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 1869, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 1851, 0, 3409, 0, 0,
	0, 0, 3408, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1867, 1876, 1877, 1878, 1887, 1888, 1889, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 1874, 1884, 0, 0, 1894, 3280, 1885,
	1846, 0, 0, 0, 1873, 1875, 0, 0, 0, 1893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1890, 0, 1891, 0, 0, 0, 1899, 0, 0, 1860,
	1861, 1898, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 1882, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3281, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	1892, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859, 0,
	1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0,
	1881, 0, 1868, 1869, 1870, 1871, 0, 0, 0, 0,
	0, 1896, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2809, 0, 0, 0, 0, 0,
	0, 1843, 1844, 0, 1876, 1877, 1878, 1887, 1888, 1889,
	0, 1884, 0, 0, 1894, 0, 0, 0, 0, 0,
	0, 1873, 1875, 1880, 1874, 0, 0, 1872, 2808, 0,
	0, 1846, 0, 0, 0, 0, 0, 1890, 0, 1891,
	1893, 0, 0, 0, 0, 0, 1860, 1861, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 1882, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 1885, 0, 1866,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1896, 0,
	0, 0, 0, 1868, 1869, 1870, 1871, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 1858, 1864, 1886, 1863, 1859, 0, 1856, 1854,
	1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0, 0,
	0, 0, 1884, 0, 1872, 1894, 0, 0, 0, 0,
	0, 0, 1873, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 1890, 0,
	1891, 0, 0, 0, 0, 0, 0, 1860, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 1882, 0, 0, 1843, 1844,
	0, 1876, 1877, 1878, 1887, 1888, 1889, 0, 0, 0,
	1866, 2277, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 1874, 0, 0, 0, 0, 1898, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 1893, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1899, 0, 0, 0, 1892, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 1881, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 1896,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 1858,
	1864, 1886, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848,
	1849, 1850, 1852, 1853, 0, 0, 0, 0, 0, 0,
	2278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1869, 1870, 1871, 0, 0, 0, 0, 1867, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 0, 1876, 1877,
	1878, 1887, 1888, 1889, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1880, 1874, 1884,
	0, 0, 1894, 0, 0, 1846, 0, 0, 0, 1873,
	1875, 0, 0, 0, 1893, 0, 0, 1898, 0, 0,
	0, 0, 0, 0, 0, 1890, 0, 1891, 0, 0,
	0, 1899, 0, 0, 1860, 1861, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 1882, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	1858, 1864, 1886, 1863, 1859, 0, 1856, 1854, 1855, 1847,
	1848, 1849, 1850, 1852, 1853, 1892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 1868, 1869, 1870,
	1871, 0, 0, 0, 0, 0, 1896, 1851, 0, 4579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 0, 1876,
	1877, 1878, 1887, 1888, 1889, 0, 1884, 0, 0, 1894,
	0, 0, 0, 0, 0, 0, 1873, 1875, 1880, 1874,
	0, 0, 1872, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 1890, 0, 1891, 1893, 0, 0, 0, 0,
	0, 1860, 1861, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 1899, 0, 0, 0, 0, 0, 0, 1882,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 1885, 0, 1866, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1896, 0, 0, 0, 0, 1868, 1869,
	1870, 1871, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 1858, 1864, 1886,
	1863, 1859, 0, 1856, 1854, 1855, 1847, 1848, 1849, 1850,
	1852, 1853, 0, 0, 0, 0, 0, 1884, 0, 1872,
	1894, 0, 0, 0, 0, 0, 0, 1873, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 1890, 0, 1891, 0, 0, 0, 0,
	0, 0, 1860, 1861, 1843, 1844, 0, 1876, 1877, 1878,
	1887, 1888, 1889, 0, 0, 0, 0, 0, 0, 1885,
	1882, 0, 0, 0, 0, 0, 1880, 1874, 0, 0,
	0, 0, 0, 0, 1846, 1866, 0, 0, 0, 0,
	0, 0, 0, 1893, 0, 0, 0, 0, 0, 0,
	0, 1898, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 1892, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 1102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1896, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859, 0,
	1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1869, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 0, 1876, 1877, 1878, 1887, 1888, 1889,
	0, 0, 0, 0, 0, 1884, 0, 0, 1894, 0,
	1885, 0, 0, 1880, 1874, 1873, 1875, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1893, 1890, 0, 1891, 0, 0, 0, 0, 0, 0,
	1860, 1861, 1898, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 1866, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	0, 1892, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859,
	0, 1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1896, 1868, 1869, 1870, 1871, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 1894, 0, 0, 1872, 0,
	0, 0, 1873, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1890, 0,
	1891, 1867, 0, 0, 0, 0, 0, 1860, 1861, 1843,
	1844, 0, 1876, 1877, 1878, 1887, 1888, 1889, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 1885, 0,
	0, 1880, 1874, 0, 0, 0, 0, 0, 0, 1846,
	1866, 0, 0, 0, 0, 0, 0, 0, 1893, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1898, 0, 0, 0, 0, 1899, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 4358, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 1892, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 1858, 1864, 1886, 1863, 1859, 0, 1856,
	1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 1869, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 1851, 0, 4054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1867, 1876,
	1877, 1878, 1887, 1888, 1889, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 1874,
	1884, 0, 0, 1894, 0, 1885, 1846, 0, 0, 0,
	1873, 1875, 0, 0, 0, 1893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1890, 0, 1891, 0,
	0, 0, 1899, 0, 0, 1860, 1861, 1898, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 1882, 0, 4055, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 0, 0, 0, 1892, 0, 0, 1857,
	1858, 1864, 1886, 1863, 1859, 0, 1856, 1854, 1855, 1847,
	1848, 1849, 1850, 1852, 1853, 0, 1881, 0, 1868, 1869,
	1870, 1871, 0, 0, 0, 0, 0, 1896, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 0,
	1876, 1877, 1878, 1887, 1888, 1889, 0, 1884, 0, 0,
	1894, 0, 0, 0, 0, 0, 0, 1873, 1875, 1880,
	1874, 0, 0, 1872, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 1890, 0, 1891, 1893, 0, 0, 0,
	0, 0, 1860, 1861, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 1899, 0, 0, 0, 0, 0, 0,
	1882, 0, 1845, 1843, 1844, 0, 1876, 1877, 1878, 1887,
	1888, 1889, 1865, 1885, 0, 1866, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 1880, 1874, 0, 0, 0,
	3410, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 1893, 0, 0, 1898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1899,
	0, 0, 0, 1892, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 1881, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 1896, 0, 0, 0, 0, 1868,
	1869, 1870, 1871, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 3415, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 1858, 1864,
	1886, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848, 1849,
	1850, 1852, 1853, 0, 0, 0, 0, 0, 1884, 0,
	1872, 1894, 0, 0, 0, 0, 0, 0, 1873, 1875,
	0, 0, 0, 0, 0, 1868, 1869, 1870, 1871, 0,
	0, 0, 0, 1867, 1890, 1851, 1891, 0, 0, 0,
	0, 0, 0, 1860, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 1882, 0, 0, 1843, 1844, 0, 1876, 1877, 1878,
	1887, 1888, 1889, 0, 1884, 0, 1866, 1894, 0, 0,
	0, 0, 0, 0, 1873, 1875, 1880, 1874, 0, 0,
	0, 0, 1898, 0, 1846, 0, 0, 0, 0, 0,
	1890, 0, 1891, 1893, 3845, 0, 0, 0, 0, 1860,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 0, 0, 1892, 0, 0, 1882, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 1866, 0, 1881, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 1896, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859,
	0, 1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 0, 1868, 1869, 1870, 1871,
	0, 0, 0, 0, 1867, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 1843, 1844, 0, 1876, 1877,
	1878, 1887, 1888, 1889, 0, 1884, 0, 1872, 1894, 0,
	0, 0, 0, 0, 0, 1873, 1875, 1880, 1874, 0,
	0, 0, 3348, 1898, 0, 1846, 0, 0, 0, 0,
	1867, 1890, 0, 1891, 1893, 0, 0, 0, 0, 0,
	1860, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1899, 0, 0, 0, 0, 0, 1885, 1882, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 1866, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1898,
	0, 0, 0, 0, 0, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 1858, 1864, 1886, 1863,
	1859, 0, 1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852,
	1853, 1892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1896, 0, 0, 0, 0, 1868, 1869, 1870,
	1871, 1883, 3375, 0, 0, 0, 0, 1851, 0, 0,
	0, 1857, 1858, 1864, 1886, 1863, 1859, 0, 1856, 1854,
	1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 0, 1876,
	1877, 1878, 1887, 1888, 1889, 0, 1884, 0, 1872, 1894,
	0, 0, 0, 0, 0, 0, 1873, 1875, 1880, 1874,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 1867, 1890, 0, 1891, 1893, 0, 0, 0, 0,
	0, 1860, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1899, 0, 0, 0, 0, 0, 1885, 1882,
	0, 1845, 1843, 1844, 0, 1876, 1877, 1878, 1887, 1888,
	1889, 1865, 0, 0, 1866, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 1880, 1874, 0, 0, 0, 0,
	1898, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1899, 0,
	0, 0, 1892, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 1881, 0, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 1896, 0, 0, 0, 0, 1868, 1869,
	1870, 1871, 1883, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 1857, 1858, 1864, 1886, 1863, 1859, 0, 1856,
	1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 1872,
	1894, 0, 0, 0, 0, 0, 0, 1873, 1875, 0,
	0, 0, 0, 0, 1868, 1869, 1870, 1871, 0, 0,
	0, 0, 1867, 1890, 1851, 1891, 0, 0, 0, 0,
	0, 0, 1860, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	1882, 0, 0, 1843, 1844, 0, 1876, 1877, 1878, 1887,
	1888, 1889, 0, 1884, 0, 1866, 1894, 0, 0, 0,
	0, 0, 0, 1873, 1875, 1880, 1874, 0, 0, 0,
	0, 1898, 0, 1846, 0, 0, 0, 0, 0, 1890,
	0, 1891, 1893, 0, 0, 0, 0, 0, 1860, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1899,
	0, 0, 0, 1892, 0, 0, 1882, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 1866, 0, 1881, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 1896, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859, 0,
	1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853, 1892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1896, 0, 0, 0, 0, 1868, 1869, 1870, 1871, 0,
	0, 0, 0, 1867, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 0, 1876, 1877, 1878, 1887, 1888, 1889, 0,
	1885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 1884, 0, 1872, 1894, 0, 0,
	1846, 0, 0, 0, 1873, 1875, 0, 0, 0, 1893,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 1867,
	1890, 0, 1891, 0, 0, 0, 1899, 0, 0, 1860,
	1861, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1885, 1882, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2381, 1898, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 1858, 1864, 1886, 1863, 1859,
	0, 1856, 1854, 1855, 1847, 1848, 1849, 1850, 1852, 1853,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1869, 1870, 1871, 0, 0, 0, 0,
	0, 1896, 1851, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 1858, 1864, 1886, 1863, 1859, 0, 1856, 1854, 1855,
	1847, 1848, 1849, 1850, 1852, 1853, 0, 0, 0, 0,
	0, 1884, 0, 0, 1894, 0, 0, 0, 0, 0,
	0, 1873, 1875, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1890, 0, 1891,
	0, 0, 0, 0, 0, 0, 1860, 1861, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 1858, 1864, 1886, 1863, 1859, 0, 1856, 1854,
	1855, 1847, 1848, 1849, 1850, 1852, 1853, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 1858,
	1864, 1886, 1863, 1859, 0, 1856, 1854, 1855, 1847, 1848,
	1849, 1850, 1852, 1853,
}

var sqlPact = [...]int{
	9538, -1000, -1000, -1000, -1000, 177, -1000, -1000, 175, 174,
	173, 172, 167, 165, 163, 158, 157, 154, 153, -1000,
	-1000, -1000, -1000, -1000, -1000, 151, -1000, -1000, 150, -1000,
	146, 145, 144, -1000, -1000, 143, -1000, 141, -1000, -1000,
	-1000, -1000, 140, 135, 131, 93902, 93335, 94467, 2375, 118243,
	101255, 2107, 83141, 117676, 82574, 117109, 2164, 11791, 116542, 2826,
	127, -1000, 115975, 126, 125, 124, -1000, 115408, -1000, 2178,
	-1000, 123, -1000, 6324, 72319, 122, 121, 119, 118, 3074,
	116, -1000, 115, 114, -1000, -1000, 113, -1000, 15435, 1549,
	-1000, 112, 108, -1000, 329, 98989, 107, 103, 102, 2681,
	101, 100, 69480, 97, 95, 94, 2227, 2914, -1000, -1000,
	2122, -1000, -1000, 91, 90, 89, 88, 86, 85, 84,
	82, 81, 80, 77, 76, 75, -1000, 72, 70, 68,
	67, 62, -1000, 60, 55, 54, -1000, 53, -1000, 52,
	51, 49, 48, 47, 44, 41, 40, 39, 37, 36,
	35, 32, 27, 12594, -1000, -1000, 26, 2061, 1734, 1732,
	1730, 1727, 1722, 978, 24, 22, 21, 19, 18, 17,
	15, 14, 13, 12, 11, 10, 8, 4, 3, 1,
	0, -3, -4, -5, 132, -6, -7, -8, -15, -16,
	-17, -18, 2644, 3575, -1000, 1578, 1439, 31828, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 126718, 118808, -20, -74, -21,
	-1000, 3375, 1036, 57460, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 254, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 447, 2304, 713, -1000,
	-1000, -1000, 114843, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2367, -34, -1000, 2116, -1000, -1000, -1000, -1000, -1000,
	712, -1000, 2363, 2300, 326, 2297, -1000, -1000, -1000, 3468,
	2527, 3858, 3855, 3854, 3853, 3852, 126153, 1940, 3851, 2590,
	3850, 3849, 3848, 3847, 3846, 3843, 3842, -1000, 92768, 1073,
	92201, 91634, 3462, 114278, 91067, 113711, 128984, 49316, 1197, 3466,
	-1000, -1000, -1000, -1000, -1000, -1000, 118808, -1000, 1071, -1000,
	-1000, 3841, 2131, 711, 100688, -1000, -1000, 113144, 2053, -1000,
	-1000, -1000, 916, 1181, 34152, 34152, 34152, 250, -1000, -1000,
	-1000, -1000, -1000, -1000, 3840, 3839, 3838, 3837, 3835, -1000,
	-1000, 82007, 24673, 81440, 80873, 112577, 48735, 90500, 89933, 3834,
	3831, 3829, 48154, 76904, 112010, 128417, 3574, 3573, 1068, 2096,
	1504, -1000, -1000, -1000, -1000, -1000, -1000, -45, 74017, 3613,
	118808, -1000, 248, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47573, 683, 46992, 679, 46411, 619, 111443, -1000, -1000, -1000,
	-1000, 76327, -1000, 110876, 2524, 3827, 3824, 1177, 3816, 3347,
	1933, 3812, 1917, 1259, 3808, 3807, 3803, 3802, 3801, 3800,
	3799, 1572, 110309, 3015, 1607, 109742, 1751, 127850, 1066, 89366,
	94467, 2657, 109175, 1517, 1495, -1000, -1000, -1000, -1000, 3093,
	2906, 2901, 1326, -1000, -1000, -1000, -1000, 60913, 6100, 5786,
	-1000, -1000, 14213, 108608, 63788, 94467, 94467, -1000, -1000, -1000,
	-1000, -1000, -1000, 45830, 615, 45249, 1102, 108041, -1000, -1000,
	61488, 2977, -1000, -1000, -1000, -1000, -1000, 107474, 44668, 597,
	44087, 1004, 118808, -1000, 3014, 2019, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2676, 1736, 3626, 2742, 75750, 2117,
	1415, 3412, 3092, 3080, 1534, 2095, 3077, 3798, 2692, 3076,
	3068, 3066, 3064, 3061, 1778, 2635, 598, 2629, 31247, 3001,
	1719, 43506, 1550, 1531, 3060, 3056, 3648, 2063, 2105, 2111,
	80306, 3797, 3795, 3378, 3054, 3051, 2818, 3050, -1000, 2974,
	1559, 246, -1000, -1000, -1000, -1000, -1000, -1000, 1476, -1000,
	-1000, -1000, -1000, -1000, 84836, -1000, -1000, 1323, -1000, -1000,
	1323, -1000, -1000, -1000, -1000, -1000, 1435, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1578, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2281, -1000, 2119, -1000, -1000, -1000, 2559, 3343,
	3343, 3343, 3455, 431, 422, -1000, 132, -1000, -1000, 138051,
	-1000, -1000, 49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897,
	2229, -1000, 710, -1000, -1000, 754, -1000, 709, 644, 566,
	-1000, -1000, -1000, -1000, -1000, -1000, 708, -1000, -1000, -1000,
	-1000, -1000, -1000, 3613, -1000, 27629, -1000, -1000, -1000, 401,
	706, 49897, -1000, -1000, 3665, 3663, 889, -1000, 237, 942,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3011, 698, 697, -1000, 696, 695, 691, 689,
	686, -1000, 681, -1000, 680, 677, 676, 675, 674, 673,
	671, 668, -1000, 2075, -1000, -1000, -1000, -1000, -1000, -1000,
	617, 614, 614, 614, -1000, 1048, -1000, -1000, -1000, 262,
	613, 261, 612, 611, 610, -1000, 667, 665, 664, 662,
	660, 659, 658, 656, 653, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1046, -1000, -1000, -1000, -1000, -46, 118808, -1000,
	447, -46, -1000, -1000, 647, -1000, 35895, 35895, 35895, -1000,
	-1000, 2359, 49897, -1000, 2534, -1000, -37, -37, 894, 59185,
	-1000, 56282, 894, 512, 763, 64931, -1000, 2973, -1000, -1000,
	645, 230, -1000, -1000, -1000, -1000, 25248, 2968, 118808, 118808,
	118808, 94467, 94467, 94467, 118808, 3793, 3792, 3232, 49897, -1000,
	-1000, 71752, 130680, 95032, -1000, -1000, 3559, 70045, 71186, 3009,
	130680, 3007, 130118, 3788, -1000, -1000, -1000, -1000, -1000, 3207,
	3787, 3786, 3785, -1000, 118808, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 238, 3206, -1000, -1000, 98422, 238, 3205, -1000,
	238, 3193, -1000, 97857, -1000, -1000, 2284, 3188, -1000, -1000,
	242, 3187, -1000, -1000, -1000, 240, 3185, -1000, -1000, 222,
	-90, 3180, -1000, -1000, -1000, -1000, -1000, -1000, 138051, -1000,
	-1000, -1000, 129551, -1000, 3381, -1000, 118808, -1000, 49897, -1000,
	-1000, 3557, 1792, 3420, 3495, -1000, -1000, -54, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2572, 2541, 1146, 2404, -1000,
	3244, 1451, 34152, 3335, -1000, -1000, -1000, -1000, -1000, 220,
	25248, -1000, -1000, -1000, -1000, -1000, -1000, 5798, 3179, 1541,
	-1000, 2401, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2108, 3178, -1000, 2531, 3175, 2009, -1000, -1000, 1906,
	-1000, 134747, 1403, -1000, -1000, -1000, -1000, 2221, 3170, -36,
	-1000, -1000, 2242, -1000, -1000, -1000, -1000, 135847, -1000, 2925,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2031,
	-1000, 1339, 3166, -1000, 2738, 2738, 88799, 3174, 63213, 61488,
	74017, -49, -1000, -1000, -1000, -1000, -105, -1000, 24092, 138051,
	-1000, -1000, -1000, -1000, 1770, 138051, 887, -1000, -1000, 3165,
	-1000, 138051, 882, -1000, -1000, 3164, -1000, 2634, -1000, 3006,
	-1000, -1000, 2467, 2465, 1011, -1000, 3783, -1000, -1000, 3782,
	-1000, 3780, 3777, 3775, -1000, 1841, 2065, 3774, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 88234, 2357, -1000, -1000,
	86533, 3004, -1000, 2464, 3494, -1000, 87667, 1065, -1000, 972,
	2462, -1000, 97292, 1001, 2459, -1000, 3772, 3459, 2688, 972,
	2455, -1000, -1000, -1000, -1000, -1000, 999, -1000, 67204, -1000,
	67204, -1000, 1668, -1000, 125588, -37, 94467, 3613, -1000, -77,
	-1000, -1000, -1000, 1036, -1000, 60335, -1000, 60335, 100121, 77479,
	945, 2967, 68903, 137985, -1000, 1009, -1000, -1000, 138051, -1000,
	-1000, -1000, 2633, -1000, -192, 2737, -1000, 77479, 62638, 2632,
	-1000, 138051, -1000, -1000, -1000, -1000, 138051, -1000, -1000, -1000,
	77479, 86533, -1000, 106907, 87100, -1000, -1000, 1556, 2618, -1000,
	-1000, -1000, 77479, 1348, 77479, 77479, 77479, -1000, 106340, -1000,
	-1000, 2127, 1678, 3368, 2124, 94467, -1000, 1971, -1000, -1000,
	-1000, 3397, 3173, 118808, -1000, -1000, 3003, -1000, 73451, 96727,
	-1000, 96162, -1000, 95597, -1000, 94467, -1000, 94467, -1000, 3771,
	3770, 3768, -1000, -1000, 3767, -1000, 3766, 3386, -1000, 973,
	42925, 138051, 3385, -1000, 3763, 2070, 3001, 138051, -1000, 3089,
	1729, 1716, 118808, -1000, -1000, 118808, -1000, 118808, -1000, -1000,
	-1000, 1624, -1000, -1000, 2571, -1000, -1000, -1000, -1000, 94467,
	94467, 94467, 94467, 1247, -1000, 42344, -1000, -1000, 3038, 3760,
	1811, -1000, 1937, -1000, 2964, 3404, -1000, 1555, 1775, 214,
	3668, -1000, -1000, 244, -1000, -1000, -54, -1000, 125023, -1000,
	2559, -1000, 118808, -1000, 2567, 2988, 3000, 1425, 2385, 2664,
	-1000, 41763, 2631, 53383, 2399, 132, -1000, -1000, 132, 132,
	32990, -1000, -1000, 70045, 70045, 25248, 1453, 49897, 49897, 49897,
	49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897,
	49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897,
	49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897,
	49897, 49897, 49897, 2072, 49897, 1391, 49897, 49897, 49897, 49897,
	1836, -1000, -1000, 2062, 491, 2090, 644, -1000, -1000, -1000,
	3603, 3603, 3603, 1951, 1951, 1951, 138439, 138439, 589, 3759,
	754, -1000, 49897, -1000, 74, 59751, 49897, 25825, -1000, 422,
	11811, 2545, -1000, 419, 26435, -1000, -1000, -1000, 27629, 566,
	41153, 49897, 1032, 138051, -1000, -1000, 1364, 3617, 23511, 3012,
	2789, 643, 825, 819, 30637, 30027, 29417, 28807, 814, 684,
	49897, 49897, 49897, 49897, 49897, 49897, 49897, 49897, -1000, -1000,
	3634, -1000, 3617, -1000, -1000, -1000, -1000, 3617, 1452, 1429,
	3617, -1000, 3617, 3617, 8909, 8909, 40572, 39991, 39410, 53964,
	38829, 49897, 28226, 38248, 37667, -1000, 118808, -46, 3556, 49897,
	321, -1000, 135580, -1000, 321, 321, 631, -80, 138051, 2609,
	2609, 58035, 2460, 2235, 2235, 2235, -1000, 894, 18244, 894,
	104645, 2248, 894, 894, 203, 253, 417, 55707, 2534, 104645,
	743, 630, -22, -23, -24, -1000, -1000, -25, -29, -1000,
	-1000, 94467, 626, 25825, 25248, 200, 2098, -91, 2651, 2647,
	-1000, 2646, 2642, -1000, 2641, 2354, -1000, -1000, -1000, 1826,
	-92, 1377, 94467, 118808, 1526, 3755, -83, -1000, 616, -93,
	-1000, 1201, 199, 3617, -1000, -1000, -1000, -1000, -1000, 3754,
	3753, -1000, 1042, 625, 618, 576, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 617, 614, 614, 614, -1000, 262,
	613, 261, 612, 611, 610, -1000, -1000, -1000, -1000, -1000,
	2963, 94467, 118808, 1501, 3747, 83706, -90, 95032, -44, -1000,
	-1000, 118808, -1000, -1000, -1000, 3746, -1000, 94467, -1000, -1000,
	94467, 238, 3162, -1000, 94467, -1000, 94467, 236, 3160, -1000,
	-1000, 118808, -1000, 94467, 94467, -1000, 118808, 118808, 118808, 130680,
	130680, 235, -1000, 94467, 877, -102, 1183, -54, -1000, -1000,
	-1000, -1000, 1323, -1000, 1865, -1000, -1000, -1000, -1000, -1000,
	-1000, 1579, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	889, -1000, -1000, -1000, -1000, -1000, -1000, 3629, 3622, -47,
	-1000, -1000, 25248, -1000, -55, 1666, 536, 1322, -1000, 79739,
	2394, 3370, 3745, 2683, 3357, 1667, -1000, 1623, 609, -1000,
	3461, 84836, 3518, 3530, 1333, -1000, 2958, -1000, -1000, -1000,
	914, 1783, 1764, 1317, 1314, 84836, 2531, -1000, 70045, -1000,
	2722, 3452, 1404, 1367, 1404, 1404, 1423, -1000, 84836, 1760,
	1313, 1312, 1311, -1000, -1000, 1980, 1977, -1000, -1000, 105775,
	-1000, 1310, 1306, 3572, 2281, 2216, 781, 1976, -1000, 1347,
	1303, 2955, -1000, -1000, -57, 3512, 3527, 1333, -1000, 2952,
	1301, -1000, -1000, -1000, 3450, 94467, 25248, 1620, 1606, 1605,
	1755, 1300, -48, -1000, 3510, 3341, -1000, 86533, 86533, 3586,
	77479, -1000, 2486, 1297, 1295, -1000, 1030, 5082, 3313, -1000,
	130680, 1030, 1030, 1997, 3154, 2721, 1735, -1000, 2736, 868,
	2735, -1000, -1000, -1000, 868, -49, 74017, 118808, 198, -1000,
	74, 49897, 49897, 74, 49897, 74, -1000, 3486, 3151, 3150,
	3743, -1000, -1000, -1000, -1000, -1000, 3731, 2039, 2589, -1000,
	-1000, 608, 2451, 2951, 118808, 2668, -51, 94467, -1000, 72885,
	3144, 130680, 2531, 2450, -1000, -1000, 85968, -1000, 3143, 447,
	2445, -1000, 669, 3729, 3141, -1000, 124458, -1000, 3381, 1484,
	3132, 1126, 849, 3555, -1000, 849, 67771, -1000, 118808, -1000,
	-37, 552, 78609, -104, -107, 415, -1000, 105210, 118808, 118808,
	3324, 2048, 2033, -1000, 968, 61488, -1000, 61488, -110, -1000,
	-192, 2732, 1599, -1000, 945, 945, 868, -1000, 868, -1000,
	94467, 2999, -1000, -1000, 77479, 945, 945, 945, -1000, -1000,
	-1000, -1000, 3727, 3726, 3725, 3720, -1000, -1000, 971, 94467,
	118808, 94467, -1000, -1000, 1718, -1000, 195, -1000, 130680, -1000,
	130680, 118808, 94467, -1000, 971, 118808, 971, 118808, 971, 118808,
	971, 971, -1000, -1000, -1000, -1000, -1000, 74, -1000, -1000,
	138051, -1000, 49897, -1000, -1000, 1614, 3719, 1681, -1000, 2993,
	-1000, 2992, -1000, 7, -1000, -1000, 1890, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3718, 138051, -1000, 2030,
	-1000, -1000, -1000, -1000, 94467, 94467, 94467, 94467, 118808, 3310,
	-1000, 118808, 3305, 94467, -1000, 3667, -1000, -1000, 84836, -1000,
	2567, 2988, -1000, -1000, -1000, -1000, -1000, -1000, 1491, 2312,
	-1000, 2613, -1000, 1638, -1000, -1000, -1000, 138051, 54545, -1000,
	-1000, 138051, 1806, -1000, 52802, 52221, -1000, -1000, 1791, 94467,
	2649, -1000, 2649, -89, -1000, 135379, 2611, 94467, -1000, -1000,
	-1000, -1000, -1000, 912, 629, 629, 1372, 1372, 1372, 1372,
	3481, 8251, 281, 2327, 6840, 6840, 6858, 6858, 6858, 6858,
	6858, 6840, 8995, 1951, 1951, 8995, 8995, 8995, 8995, 8995,
	1951, 1951, 1951, 6840, 6840, 6840, 1951, 138439, 138252, 11519,
	49897, 49897, 1294, 2052, 491, 10643, 49897, 5448, 5448, 5448,
	5448, -1000, 2092, -1000, -1000, -1000, -1000, 2948, 607, 53964,
	53964, -1000, -1000, -1000, -1000, 27032, 49897, -1000, -1000, -1000,
	-1000, 37057, -1000, -1000, 134550, -322, 413, -1000, 194, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 410, -82, 109, -1000, 49897, 49897, 49897, 408,
	-1000, 193, 49897, 118808, -1000, 131285, 741, -109, -1000, -112,
	1456, -1000, 49897, -1000, -1000, 1292, -1000, 1290, 1289, 1285,
	-1000, 606, 407, -1000, 191, -1000, 2222, 604, 602, 49897,
	-1000, -1000, -1000, -1000, -1000, 134302, -1000, -1000, 134105, -1000,
	-1000, 133908, -1000, -1000, 133660, -1000, -1000, -1000, -1000, -1000,
	137784, 131248, 17548, 16773, 10681, 16047, 15338, -113, 404, -122,
	397, 908, 907, 389, 387, 386, -124, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -130,
	384, -1000, 2947, -82, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 380, -1000, 375, -1000, 137583, -82, 371, 8208,
	-1000, 53964, 53964, 53964, 53964, -1000, 362, -1000, 135192, -1000,
	137382, 36476, 36476, 36476, 360, 137316, 49897, -82, -132, -1000,
	-135, -1000, -1000, 502, -137, 1014, 35895, 56871, 25248, -1000,
	1014, 1014, 49897, -1000, 49897, 2623, -1000, -1000, -1000, -1000,
	2620, 2004, 2609, 58035, -1000, -1000, -1000, -1000, 104645, -1000,
	3613, 2945, -1000, 104645, -1000, -1000, 118808, 447, -1000, 104645,
	104645, 25248, 894, -1000, 894, 104645, 791, -1000, -1000, -1000,
	-1000, -1000, 359, 66072, 109, 182, 25248, 972, -1000, -1000,
	2747, 2747, 2747, 2747, 2747, 94467, -1000, -1000, 130680, 1282,
	-52, -65, 2730, -1000, 3582, -1000, 2134, -1000, 70045, -1000,
	753, 1195, 25248, -1000, -1000, -1000, 593, -1000, 3617, 3617,
	-1000, 3617, 130680, 2940, 284, 2726, -1000, 2350, -50, 279,
	130680, 3717, -1000, -1000, 238, -1000, 94467, 238, 238, -1000,
	94467, 94467, 2284, -1000, 242, -1000, 240, -1000, -1000, -90,
	-1000, 1007, 34152, -1000, 1323, -1000, -1000, 1617, -1000, 2055,
	-1000, 1249, -1000, -1000, -1000, -1000, 34152, -1000, 3087, 118808,
	118808, 94467, -1000, 102950, 118808, -1000, 2159, 130680, -1000, 2444,
	123893, 2421, 123328, 70045, -1000, -1000, 586, 931, 2608, 2606,
	1116, 118808, 118808, 2605, 122763, 122198, -1000, 3716, 118808, 2112,
	49897, 102950, 3449, 2181, 5079, 74, 74, -1000, 74, -1000,
	-1000, 581, 1227, 94467, 94467, 118808, 130680, 94467, 1987, -1000,
	-1000, -1000, -1000, -1000, 85401, -1000, -1000, 3633, 3632, -1000,
	1404, -1000, -1000, -1000, 1404, 2531, 1983, 118808, 130680, 94467,
	130680, 121633, 121068, -1000, -1000, 1754, 118808, -1000, -1000, -1000,
	-1000, 1520, -1000, 781, 1280, 2939, 49897, 49897, 2158, 74,
	74, -1000, 74, 577, 25248, 2028, -1000, 2965, 118808, 3662,
	120503, 3660, 118808, 118808, 118808, 130680, 3340, 118808, -1000, -1000,
	-1000, -1000, 3586, -1000, 858, 118808, 130680, -1000, 119938, 5082,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2154, 75173, 1138, 118808, 1339,
	-1000, -1000, 1750, 1265, 1263, 84836, 2104, 1747, 1860, 130680,
	61488, 967, 61488, 2707, -1000, -1000, 22930, -1000, 138051, 138051,
	-1000, 138051, -1000, 72885, 77479, 118808, -1000, -1000, 1052, 118808,
	79174, 938, 3129, 66637, -105, 945, 77479, 94467, -51, 2668,
	118808, -1000, -1000, 2531, 3118, 447, 2441, -1000, 130680, 3550,
	3116, 574, 3715, 3714, -1000, 94467, 2349, 2440, -1000, -1000,
	119373, 3218, 781, 118808, 1014, 58035, 1954, -1000, 64365, 1080,
	118808, 1869, 263, -1000, -1000, -1000, -9, 118808, -1000, 762,
	-1000, -1000, 552, 552, 945, -270, 572, -1000, 856, 854,
	62063, -143, -1000, 180, 571, 848, 841, -1000, 5402, -1000,
	-192, -1000, 77479, 968, 61488, 2938, 2933, -1000, -1000, 1005,
	-1000, 1546, 945, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -39, 1840, 118808, -90, -90, -62,
	-52, -1000, 971, -1000, 971, -1000, 971, -1000, -1000, -1000,
	138051, -1000, -1000, -1000, 1677, 1672, 118808, -1000, -1000, 118808,
	-1000, 25248, 118808, 94467, 25248, 94467, 2987, 2986, -1000, -1000,
	-1000, 118808, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1152, -1000, 1806, 2307, -1000, 566, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2546, -1000, -53, 32990, 836,
	-1000, -1000, 94467, -40, 49897, 49897, 9809, 8243, 49897, 53964,
	53964, -1000, 49897, 7502, -1000, -1000, -1000, -1000, -1000, 2929,
	562, 49897, 70045, 8141, 8116, -1000, 358, 14458, 8995, -1000,
	49897, -1000, 6402, -1000, 356, 35314, -1000, 136235, 23, -144,
	-1000, 18839, -82, -149, -1000, -1000, 749, -1000, 3099, -1000,
	49897, 137115, 2512, 2266, 1873, 1695, 3617, 3659, 22349, -1000,
	68337, 1028, 2257, 133463, -1000, -1000, -1000, -1000, 70045, 70045,
	49897, 49897, -1000, 49897, 49897, 49897, -1000, -1000, -1000, 3617,
	895, -1000, -1000, -1000, 895, -1000, -1000, 1404, -1000, 1404,
	-1000, 49897, -1000, -1000, 2919, 49897, -1000, 70045, 70045, 53964,
	53964, 53964, 53964, 53964, 53964, 53964, 53964, 53964, 53964, 53964,
	53964, 53964, 53964, 53964, 53964, 53964, 53964, 53964, 53964, 2596,
	53964, 3601, 3601, 3601, 796, -1000, 2985, 2919, 49897, 49897,
	70045, 355, 354, 338, -1000, 49897, -82, -1000, -1000, 8939,
	555, -1000, 2535, -1000, 2783, -1000, 49897, -1000, -138, -1000,
	2534, -1000, -1000, 2783, 2783, -151, 138051, 58035, 58035, -1000,
	554, 49897, 2614, -1000, -1000, 739, -320, -1000, 837, -1000,
	-1000, -1000, -1000, -1000, -1000, 835, -1000, 447, -1000, -1000,
	-1000, 160, 104645, 104645, 737, -1000, -152, -1000, -1000, -158,
	-1000, 3549, 327, 25248, -1000, 1014, 2705, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2607, -261, 130680, 130680, 1745, 2288,
	3657, -1000, 3624, 748, 736, 133, 3617, 320, 319, 318,
	-90, 130680, 130680, 1744, 70620, 130680, -1000, -1000, -1000, 238,
	-1000, -1000, -1000, 236, -1000, -1000, -1000, -1000, 2702, -1000,
	-54, -1000, -1000, -1000, 49897, -1000, -1000, 3369, 553, 1254,
	1246, -1000, -159, -1000, 834, -1000, -1000, -1000, -1000, 2899,
	-1000, 3113, -1000, 2434, -1000, 1084, 2433, 1651, -1000, 49897,
	551, 2687, 550, 549, 3713, 2198, 3711, 1124, 3109, 2284,
	3108, 2284, -1000, -1000, -1000, 921, -1000, 138051, -164, -1000,
	2181, -1000, 548, 545, -1000, -55, 1642, 532, 1243, 1000,
	-1000, -1000, 49897, 49897, 104080, -1000, 468, 3363, -41, -1000,
	-1000, -1000, 1717, 1242, 1241, -1000, -1000, -1000, -1000, 2531,
	1712, 1237, 1235, -1000, -1000, -1000, -1000, -1000, 2430, -1000,
	-1000, 3102, 994, -1000, 3040, 3039, 903, 118808, 49897, 49897,
	136928, 136680, -1000, 986, -1000, -1000, 49897, -1000, -57, 1232,
	3503, 2427, 94467, -1000, 2284, 3100, 1231, -1000, 1229, -1000,
	-1000, -1000, 3506, 3500, 1245, 3586, 61488, -1000, -1000, -1000,
	77479, -1000, -1000, 74598, -1000, -1000, 1030, 118808, 130680, 94467,
	1834, -1000, -1000, 83706, 84271, 118808, 2721, -90, 868, -1000,
	2518, 868, 967, 2918, -1000, 2661, -1000, 985, 94467, 3710,
	313, -165, -58, 70045, -1000, -1000, -1000, -1000, 2421, 94467,
	118808, 1321, 2686, 118808, 118808, 3548, -1000, 2380, 575, 94467,
	902, -1000, 3613, -1000, -1000, -1000, 984, -1000, 3490, 94467,
	3547, 3097, 972, 74, 94467, 3639, -1000, -1000, 3544, 94467,
	3094, 2348, 2426, 2579, 781, 78044, 972, 2252, -67, -1000,
	1869, 34733, 3361, -167, -1000, -1000, -1000, 1014, 67771, 58035,
	49897, 3709, -172, -1000, -1000, -1000, -1000, -1000, 101820, 101820,
	77479, 77479, 77479, 945, 118808, 118808, 3706, 77479, 77479, 77479,
	-59, 540, -1000, 828, 827, 826, -1000, -1000, -1000, -1000,
	-1000, -1000, 824, 818, 817, 968, -1000, -1000, -192, 61488,
	74, -1000, 2273, 94467, -1000, 21768, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 971, -105, -1000, -1000, -1000, 2160, 2397,
	2160, 1853, 1850, -1000, -1000, 2306, -1000, -1000, -1000, -1000,
	2671, 3334, 25248, 3505, 5448, 49897, 49897, 7463, 7113, 1053,
	5448, 49897, 49897, 70045, 8180, -174, 49897, 49897, -1000, 49897,
	733, 138051, -1000, 3656, 49897, 312, 311, -1000, -1000, -1000,
	3615, -1000, -1000, -1000, 138051, 49897, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 310, -1000, 129, -1000, -1000, -1000, 127283,
	-1000, 49897, 309, 3448, -1000, 308, 306, 353, 6364, 133266,
	133018, 132821, 303, -1000, -1000, 302, 301, 138051, 2985, 138051,
	-1000, -1000, 993, 993, 1355, 1355, 1355, 1355, 3601, 1022,
	1198, 989, 646, 646, 646, 922, 796, 796, 646, 646,
	646, 796, 2908, 2601, 539, 734, -1000, -1000, 138051, 138051,
	296, -1000, -1000, -1000, -82, 293, 8939, -1000, 2777, 3441,
	138051, -1000, 58035, 2777, 2777, -1000, -1000, 2004, 118808, 138051,
	58035, -1000, 2945, -1000, 20019, 19432, -1000, 25248, -1000, -1000,
	-1000, -1000, 3613, -1000, 66072, -1000, 538, -1000, 110, -1000,
	2705, -1000, 803, -1000, -1000, 77479, 77479, 2747, -1000, 2796,
	-261, -173, 118808, -1000, -1000, 732, 3704, 747, 25248, 292,
	-1000, -1000, -1000, -90, -90, 118808, 2903, 94467, 118808, 1496,
	-90, -1000, -1000, -1000, 3322, 138051, 118808, 118808, -1000, 102950,
	34152, 1585, 103515, 118808, 3088, -1000, 3084, -1000, 1116, 5134,
	132624, 58610, -1000, 58610, 118808, -1000, -1000, -1000, -1000, 2153,
	1480, 3703, 1168, -1000, 3400, 118808, -1000, 118808, -1000, -1000,
	-1000, 102950, -1000, 118808, 118808, 94467, 118808, -1000, 130680, 3058,
	-177, 138051, -60, -1000, 802, -1000, 1360, -1000, 21187, 118808,
	130680, 94467, 118808, 130680, 94467, 3078, 118808, 2191, -1000, -1000,
	3034, -1000, 138051, 136483, 74, 49897, 3052, -180, 25248, -1000,
	3653, 3651, 3072, 3409, -1000, 118808, 3647, 118808, 94467, 3321,
	969, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1710, 1228,
	1226, 2347, 2344, 2277, -62, 2104, 967, -63, 534, -1000,
	801, -1000, -1000, 799, 798, 967, -1000, 77479, 61488, 3702,
	447, -1000, 2673, -1000, 99554, 79174, 2298, -1000, -1000, 533,
	118808, 118808, 529, -1000, 74, -1000, 3699, 102950, 527, -1000,
	2264, -1000, 721, -1000, 2501, 130680, 2531, 74, 94467, -1000,
	966, 447, 290, -64, -1000, 3082, 1111, 25248, 94467, 3069,
	2581, 781, 78044, -1000, 1484, 2664, -1000, -66, -1000, 479,
	74, 2252, -1000, -67, 138051, -1000, 797, -1000, -186, -1000,
	-1000, 289, -1000, 3318, -1000, -1000, -187, -1000, -1000, 5101,
	5101, 77479, 61488, 77479, 77479, 77479, 61488, -1000, 968, 868,
	-1000, 2428, -1000, -1000, -1000, -1000, -1000, 25248, 1765, -1000,
	526, 525, -1000, -1000, -1000, -1000, 3334, 5448, 5448, 49897,
	49897, 49897, 5448, 8180, -189, -1000, 5448, 5448, -82, -1000,
	-1000, 136235, -1000, -1000, -1000, 138051, -1000, 20606, 2163, -1000,
	132376, -1000, 32990, -1000, -1000, 49897, 49897, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 53964, 2898, 523, 70045, -1000,
	-1000, 286, 990, 49897, 51640, 2534, 990, 990, -1000, -195,
	-1000, -1000, -1000, 3613, -1000, 3613, 110, -1000, -1000, 3695,
	25248, -1000, 77479, -1000, -1000, -1000, 2267, -1000, -1000, 3005,
	-182, 735, -1000, 3694, -1000, -1000, 159, 130680, 2891, 137,
	2720, -1000, -1000, -1000, -1000, -1000, 2714, 3541, -1000, 1969,
	-1000, 118808, 118808, -1000, 118808, -1000, 25248, 118808, 2808, 1262,
	-1000, 931, 2603, 521, 53964, 1151, 94467, 893, 2763, 2756,
	-1000, 3535, 3438, 2786, -196, -1000, 118808, 49897, 118808, -197,
	-202, 2411, -1000, -1000, 1147, 1260, 49897, 1145, -1000, -1000,
	-1000, 70045, 518, 2284, 2284, -1000, -203, -204, -1000, -1000,
	-1000, 49897, 1222, 118808, 33571, -1000, 3689, 3363, -1000, -1000,
	-1000, -1000, -1000, -1000, 118808, -1000, 118808, -1000, 49897, -1000,
	136034, 49897, 1218, -1000, -1000, -1000, 3641, 2284, 25248, 2284,
	-1000, 2284, 3409, 1156, 2377, 118808, 130680, 94467, 1820, 1820,
	2970, -1000, -1000, -1000, 2538, 2538, 77479, 61488, 61488, -1000,
	-68, 967, -1000, 3538, 2161, 3686, -1000, -1000, -1000, -1000,
	2602, -1000, -1000, -1000, 118808, 2600, 2810, 58610, 514, 513,
	118808, 957, -1000, -205, 79174, 938, 953, -1000, -69, 503,
	-1000, 794, -1000, -1000, -1000, -1000, 447, -1000, 2700, 3537,
	-1000, 3640, 500, 497, 118808, 2334, 492, 25248, 3359, 781,
	78044, -1000, 3218, 1869, -1000, 2417, 118808, 3356, -1000, 2664,
	491, -1000, 945, 490, 945, -1000, -210, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -70, -1000, 863, 862, -1000,
	-1000, 94467, 94467, 49897, 49897, -1000, 5448, 5448, 5448, -1000,
	276, -1000, -1000, 2252, 3431, -1000, -71, 132179, 131982, 5554,
	53964, 70045, -212, -1000, -1000, 118808, 138051, -73, -1000, 138051,
	489, 488, 402, -1000, -1000, -1000, 718, 685, -1000, -1000,
	-1000, -1000, 130680, 3681, -1000, 130680, -90, 130680, 130680, 1708,
	102385, 118808, -1000, -1000, 1651, 1981, -1000, -1000, -1000, 118808,
	2425, -1000, -1000, -1000, 956, 49897, 734, 53964, 486, 49897,
	-1000, 483, 482, 3534, 3281, -1000, 2680, 2846, 2023, 58610,
	-1000, 3334, -1000, 131734, -1000, 1088, 1986, -1000, -1000, -1000,
	-1000, 138051, 53964, 3409, 58610, -1000, -1000, 480, 466, 138051,
	465, 787, 2887, -1000, -1000, -1000, -1000, -1000, 138051, 74,
	138051, 464, 3503, -1000, -1000, -1000, -1000, 2284, 94467, 786,
	-1000, -1000, -1000, 1217, -1000, -1000, -1000, -1000, 3680, 3679,
	2870, 83706, -1000, -213, -1000, -1000, -1000, 2000, 74, 938,
	-1000, -1000, 2298, 462, -1000, 944, 2643, 2643, -218, 58610,
	58610, -221, 2317, 2699, -1000, 268, 3532, 953, -1000, 3609,
	-1000, 3297, 3297, 49897, 3531, 3317, -1000, 74, -1000, 3639,
	58610, -1000, 94467, 58610, 2326, 2069, 2562, 78044, -1000, 2579,
	-1000, -1000, -226, 118808, 1869, -1000, -1000, 77479, -1000, -1000,
	2428, -1000, 118808, -1000, 118808, -1000, -1000, -229, -231, -1000,
	2138, 49897, 32990, -1000, -1000, 5554, -234, -1000, -75, -1000,
	3525, 51640, 3677, 3675, 3674, -1000, -1000, -261, -1000, -90,
	-90, -90, 118808, -1000, 1944, -1000, 2421, -1000, -1000, 3067,
	-1000, 2775, 457, 131351, 734, 2540, 118808, 13335, 2531, 2531,
	-1000, 3523, 2836, -1000, -1000, 2158, 452, -1000, -1000, -1000,
	-1000, 836, 118808, 944, 2772, 94467, 734, 1112, -236, 2160,
	2160, 49897, 32409, 2172, -1000, 49897, -1000, -1000, 3409, 61488,
	130680, -1000, -1000, 130680, 2323, -1000, 2834, 3612, -1000, 2317,
	118808, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1088, -237, -248, -1000, -1000, 3391, -1000,
	3316, 2673, 74, -1000, -1000, -1000, -251, 138051, 74, 3673,
	966, 266, -258, 1111, -259, 94467, 2022, -1000, 781, -1000,
	2581, 1014, 3228, -1000, -260, -1000, -268, -269, -1000, -1000,
	264, 51059, 51059, 51059, -82, -89, -1000, 118808, 448, -1000,
	-1000, -1000, -1000, -1000, 128, -1000, -1000, 3030, 886, -1000,
	822, 2007, 257, 1120, 256, 25, -1000, -1000, -1000, 2786,
	-1000, 118808, -1000, -1000, -1000, 886, 447, -1000, 49897, 1088,
	-274, -1000, 1079, -275, -1000, 1078, -276, -1000, 2859, -1000,
	-277, 2284, -1000, -261, 235, 1820, 965, 3485, -1000, -1000,
	-1000, 2550, -282, -1000, -1000, 2023, 1088, 2158, 2435, -1000,
	2161, 957, -1000, -1000, -1000, -1000, -1000, 1088, 446, 2023,
	444, 1582, 781, -1000, -1000, 1404, 3359, 3227, 1444, 945,
	-1000, -1000, -1000, 3176, -1000, 55126, 2332, 1842, 134944, 3176,
	3176, -1000, -1000, 130680, 118808, 944, 3464, -1000, 865, 852,
	1557, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1014,
	-284, -1000, 2540, 138051, 944, -1000, 2160, 2713, -1000, 2160,
	2854, -1000, 2167, -1000, -1000, -1000, -1000, 2851, -1000, 1753,
	3594, -1000, -1000, 944, 118808, 2158, 2023, 944, 1825, 1739,
	3672, 938, 2317, 2023, 58610, 2158, 58610, 2149, -1000, 118808,
	-1000, 2069, 1440, -1000, 1658, -1000, -1000, 1861, 3565, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -90, -1000, -1000, 785,
	-1000, 3241, -1000, 1144, 2067, 2067, -1000, -1000, 822, -1000,
	-1000, 437, -1000, 436, -1000, 130680, 2262, -1000, -1000, -1000,
	-1000, 944, 2158, 1014, -1000, 3671, -1000, 2317, -1000, 2158,
	-285, 944, -290, 2199, -1000, -1000, -105, 2022, -1000, 1654,
	67771, 1833, -1000, -1000, 2243, 50478, 49897, -1000, 3588, -1000,
	-1000, 2624, -1000, 2786, 49897, 49897, 235, 65497, 1014, 944,
	-1000, -1000, 2550, 944, 1088, 1014, 2023, -1000, 781, 1582,
	67771, -267, -1000, -1000, -1000, 138051, -1000, -1000, -1000, -1000,
	-291, -293, -1000, -270, 101820, -1000, 1014, -1000, 1014, 2023,
	-1000, 2158, 130680, 2149, -267, -1000, 2158, 1215, -298, -1000,
	-1000, 2158, 944, -1000, -1000, -1000, -1000, -1000, 435, -1000,
	944, 1014, 49897, 1014, -1000, -300, -1000, 2158, -1000,
}

var sqlPgo = [...]int{
	0, 4481, 4476, 4470, 4469, 4466, 4461, 4459, 4452, 4450,
	4448, 4447, 4446, 4445, 4443, 149, 4442, 4440, 4439, 4435,
	4434, 4433, 4431, 4426, 4425, 4423, 4422, 4421, 4420, 4419,
	4417, 4415, 4414, 4413, 4412, 4411, 4410, 4409, 4407, 4406,
	4395, 4393, 4391, 4390, 4385, 4384, 4383, 4380, 4379, 4375,
	4374, 4372, 4370, 4367, 4364, 4361, 4360, 4358, 4357, 4356,
	4355, 4354, 4353, 4351, 4350, 4349, 4348, 4347, 4341, 59,
	4340, 4339, 4338, 4337, 4335, 4334, 4333, 4331, 4330, 4329,
	4328, 4326, 4325, 4323, 4321, 4320, 4319, 4317, 4316, 4315,
	69, 4314, 277, 4312, 4311, 4310, 4309, 4308, 4307, 4306,
	4304, 4303, 4301, 4299, 4298, 276, 4295, 134, 173, 4294,
	4292, 3864, 4291, 4290, 275, 4288, 4287, 4283, 4282, 4281,
	289, 4279, 4277, 4276, 4273, 4272, 4271, 4269, 4268, 4266,
	4265, 4260, 4259, 116, 217, 4258, 4257, 53, 4256, 4255,
	4253, 4252, 4250, 4249, 4248, 4247, 4246, 4242, 4241, 255,
	175, 4240, 274, 4237, 4234, 4225, 4219, 4217, 4216, 4213,
	4209, 4207, 4203, 4199, 4198, 4197, 4196, 4195, 4191, 4190,
	4187, 4186, 4184, 4180, 4179, 4171, 4167, 4166, 4165, 4164,
	4163, 4162, 4160, 4159, 4157, 4156, 4153, 4152, 4150, 4148,
	4145, 4144, 263, 223, 131, 4142, 4137, 273, 272, 4136,
	4135, 4134, 4131, 4129, 139, 16, 78, 4128, 4127, 98,
	92, 93, 101, 105, 99, 4125, 125, 4124, 136, 118,
	4123, 115, 113, 21, 26, 260, 250, 12335, 241, 4122,
	4121, 4120, 253, 196, 4119, 248, 4118, 4116, 4115, 4114,
	4113, 4112, 77, 51, 218, 4111, 4110, 150, 172, 187,
	186, 178, 182, 95, 57, 109, 91, 66, 43, 15,
	107, 221, 19, 1, 266, 4109, 264, 11, 166, 12,
	33, 4107, 4106, 4104, 4103, 3639, 126, 4101, 271, 252,
	176, 4097, 4096, 4095, 772, 4093, 4092, 55, 4090, 203,
	90, 121, 297, 138, 4087, 156, 171, 39, 4086, 259,
	73, 4085, 4083, 108, 102, 8504, 9735, 4081, 4080, 137,
	70, 104, 1078, 204, 164, 209, 224, 177, 170, 58,
	215, 213, 184, 210, 4079, 261, 4078, 3530, 86, 193,
	167, 5249, 4077, 4075, 4073, 85, 4071, 111, 4070, 4069,
	76, 22, 3, 2, 152, 34, 37, 10, 4068, 31,
	133, 50, 32, 4060, 24, 4055, 4054, 4047, 4046, 52,
	4042, 46, 169, 4035, 4032, 287, 4031, 110, 64, 48,
	4028, 25, 228, 4027, 246, 144, 4024, 4023, 262, 208,
	197, 4022, 83, 234, 4020, 4019, 4018, 4017, 4016, 4015,
	146, 8, 147, 4014, 4013, 157, 4012, 61, 251, 205,
	4007, 67, 4006, 4003, 181, 56, 154, 285, 190, 233,
	130, 237, 191, 236, 4001, 4000, 3999, 189, 3998, 3995,
	230, 160, 3994, 3993, 254, 290, 94, 45, 89, 247,
	87, 200, 168, 3992, 207, 3988, 3987, 288, 188, 226,
	40, 7, 6, 100, 114, 3986, 5, 238, 161, 243,
	128, 3985, 7063, 2407, 2209, 3983, 3982, 159, 132, 84,
	142, 163, 270, 97, 3981, 3980, 2713, 3979, 3978, 3977,
	3976, 192, 3975, 3974, 3973, 153, 214, 222, 3972, 123,
	82, 54, 20, 151, 291, 282, 127, 232, 216, 257,
	3971, 3970, 3968, 199, 3967, 80, 106, 174, 206, 268,
	62, 3966, 195, 3965, 158, 2325, 71, 162, 3964, 240,
	3963, 3962, 3961, 3960, 3959, 3958, 3955, 2152, 245, 3953,
	3952, 3951, 36, 202, 3949, 269, 183, 201, 122, 49,
	3948, 165, 1275, 3947, 1791, 242, 65, 4, 3946, 305,
	3944, 5906, 63, 3943, 0, 13571, 9358, 12392, 13515, 3942,
	5491, 3941, 3940, 3939, 227, 81, 3937, 3933, 3932, 117,
	3930, 88, 3929, 3927, 79, 3926, 23, 17, 18, 29,
	27, 754, 298, 3925, 3924, 60, 143, 140, 3922, 278,
	231, 3920, 3919, 3918, 3917, 96, 3916, 44, 3915, 41,
	3914, 3912, 42, 14, 35, 3911, 3909, 155, 3908, 124,
	220, 3907, 180, 3906, 74, 145, 3905, 3904, 3902, 68,
	72, 265, 219, 225, 112, 3901, 280, 3900, 212, 3899,
	3898, 30, 3897, 3895, 249, 120, 119, 47, 256, 148,
	38, 185, 229, 3893, 3892, 179, 3890, 3887, 3881, 284,
	3880, 3874, 28, 3873, 3872, 3871, 13, 3869, 3868, 211,
	3260, 3867, 3866, 9, 3861, 194,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 13, 13, 9, 9,
	9, 9, 10, 10, 10, 10, 10, 53, 53, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	39, 41, 40, 34, 34, 35, 35, 36, 37, 37,
	12, 12, 12, 8, 8, 8, 8, 8, 8, 8,
	8, 21, 21, 42, 42, 22, 22, 44, 44, 23,
	23, 45, 45, 611, 611, 611, 612, 612, 613, 613,
	613, 26, 47, 19, 20, 20, 20, 20, 614, 614,
	614, 614, 38, 27, 48, 31, 31, 31, 31, 31,
	207, 207, 207, 207, 25, 25, 43, 43, 250, 250,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	607, 607, 252, 252, 251, 239, 239, 240, 240, 241,
	241, 615, 615, 253, 253, 253, 254, 254, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 506, 506,
	506, 537, 537, 537, 537, 539, 539, 634, 634, 635,
	635, 635, 635, 635, 136, 136, 403, 403, 403, 57,
	57, 57, 57, 57, 602, 602, 209, 209, 209, 211,
	211, 210, 210, 210, 210, 210, 81, 81, 621, 621,
	620, 619, 619, 619, 622, 622, 622, 208, 208, 208,
	132, 132, 132, 132, 132, 132, 133, 133, 134, 134,
	212, 212, 212, 214, 214, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 218, 18, 18,
	18, 115, 115, 115, 115, 115, 115, 115, 110, 110,
	541, 541, 542, 542, 203, 203, 204, 204, 204, 204,
	205, 205, 206, 206, 206, 72, 72, 215, 215, 217,
	217, 216, 216, 216, 216, 216, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 60, 60, 60, 60, 60,
	61, 61, 61, 61, 61, 61, 62, 62, 62, 62,
	62, 62, 63, 63, 70, 70, 70, 70, 70, 70,
	70, 70, 194, 194, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 78, 78, 78,
	78, 78, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 637, 637, 638, 638, 639, 639, 640, 640, 640,
	640, 640, 640, 640, 640, 640, 640, 640, 640, 640,
	640, 640, 640, 640, 640, 640, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 87, 87, 363, 363, 326, 326, 88,
	88, 88, 89, 89, 90, 90, 74, 74, 600, 600,
	379, 379, 497, 497, 75, 608, 608, 608, 610, 610,
	609, 609, 92, 92, 402, 402, 93, 93, 93, 93,
	93, 93, 94, 94, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 102, 102, 102, 102, 102, 103, 103,
	103, 100, 100, 100, 97, 97, 97, 96, 96, 96,
	101, 101, 101, 599, 315, 315, 99, 99, 99, 98,
	98, 98, 380, 380, 104, 104, 104, 104, 327, 105,
	105, 105, 105, 105, 105, 105, 105, 108, 108, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 499, 499, 4, 4, 245, 245, 244, 244,
	5, 5, 5, 248, 248, 247, 246, 106, 106, 106,
	464, 464, 111, 111, 111, 418, 418, 112, 112, 112,
	112, 112, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 604, 604, 372, 372, 278, 278, 278,
	278, 124, 124, 124, 124, 125, 125, 125, 125, 126,
	126, 199, 199, 142, 142, 142, 142, 141, 141, 141,
	141, 141, 141, 141, 141, 64, 64, 64, 65, 65,
	66, 66, 67, 67, 68, 68, 69, 69, 69, 69,
	69, 145, 145, 631, 631, 147, 144, 144, 144, 144,
	144, 143, 143, 146, 146, 146, 146, 148, 150, 150,
	150, 150, 150, 149, 149, 149, 149, 149, 151, 151,
	531, 531, 388, 388, 529, 529, 551, 551, 530, 530,
	333, 333, 333, 333, 333, 334, 334, 334, 540, 540,
	540, 540, 540, 540, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 200, 200, 201,
	202, 202, 202, 202, 202, 177, 177, 177, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 389,
	389, 180, 180, 180, 164, 164, 153, 153, 153, 153,
	153, 153, 153, 158, 158, 158, 158, 158, 158, 158,
	158, 154, 154, 166, 166, 166, 166, 166, 159, 159,
	160, 160, 160, 161, 161, 161, 161, 187, 187, 163,
	163, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	155, 155, 155, 155, 168, 168, 168, 168, 425, 425,
	425, 192, 192, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 190,
	190, 190, 190, 190, 190, 623, 623, 624, 624, 624,
	184, 184, 184, 184, 184, 184, 478, 478, 178, 178,
	178, 178, 183, 183, 183, 183, 186, 186, 186, 186,
	408, 408, 175, 175, 175, 176, 176, 176, 181, 181,
	182, 364, 364, 179, 179, 185, 185, 185, 185, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 157, 157,
	157, 157, 188, 188, 174, 174, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 641, 641, 170,
	170, 170, 169, 169, 169, 169, 172, 172, 173, 173,
	173, 173, 173, 173, 171, 162, 191, 601, 601, 597,
	597, 597, 597, 597, 597, 597, 597, 598, 598, 598,
	598, 603, 603, 116, 116, 116, 116, 116, 116, 116,
	127, 127, 127, 127, 127, 127, 127, 130, 130, 117,
	117, 117, 117, 117, 117, 117, 120, 120, 118, 118,
	118, 118, 119, 119, 82, 82, 82, 82, 82, 17,
	17, 17, 83, 83, 269, 269, 223, 223, 223, 351,
	351, 224, 224, 341, 341, 341, 341, 219, 219, 220,
	220, 221, 222, 222, 84, 84, 642, 642, 642, 616,
	616, 616, 617, 617, 617, 617, 617, 617, 335, 335,
	336, 336, 444, 444, 444, 444, 444, 339, 339, 339,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 349,
	350, 350, 342, 342, 348, 347, 347, 346, 346, 345,
	345, 343, 344, 344, 344, 353, 353, 352, 355, 355,
	354, 443, 560, 560, 562, 562, 562, 562, 562, 562,
	562, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 426, 426,
	643, 643, 644, 645, 558, 558, 558, 559, 554, 554,
	555, 555, 555, 555, 555, 337, 337, 338, 338, 338,
	338, 556, 557, 370, 370, 482, 561, 561, 563, 563,
	565, 646, 646, 646, 646, 646, 646, 647, 647, 647,
	442, 442, 441, 441, 440, 440, 361, 361, 566, 566,
	566, 566, 567, 567, 567, 567, 567, 570, 569, 568,
	568, 568, 568, 568, 86, 86, 86, 405, 405, 404,
	404, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 196, 196, 281, 281,
	281, 80, 80, 80, 14, 14, 14, 14, 14, 14,
	14, 296, 296, 15, 15, 15, 618, 618, 618, 85,
	85, 85, 85, 85, 85, 359, 359, 359, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 606, 606, 605, 605, 282, 282, 649, 649,
	91, 91, 91, 91, 91, 91, 91, 91, 500, 500,
	501, 501, 79, 79, 79, 79, 79, 427, 427, 424,
	424, 423, 423, 369, 369, 480, 480, 480, 481, 286,
	286, 287, 287, 242, 242, 242, 33, 32, 24, 24,
	28, 28, 29, 29, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 30, 30, 50, 50, 50, 50, 51,
	51, 51, 51, 54, 54, 55, 55, 49, 49, 49,
	49, 52, 52, 46, 46, 56, 56, 56, 56, 56,
	625, 627, 627, 626, 626, 630, 630, 630, 630, 630,
	630, 628, 628, 629, 629, 632, 632, 633, 633, 123,
	123, 128, 128, 128, 128, 128, 129, 129, 129, 129,
	131, 131, 131, 131, 140, 140, 195, 195, 195, 195,
	195, 195, 195, 58, 58, 58, 58, 71, 71, 71,
	71, 138, 651, 651, 651, 139, 139, 139, 650, 650,
	279, 279, 437, 437, 438, 438, 652, 652, 439, 439,
	439, 439, 439, 272, 271, 273, 273, 274, 274, 77,
	77, 77, 262, 262, 261, 263, 263, 264, 264, 259,
	259, 543, 543, 266, 266, 266, 267, 267, 255, 255,
	256, 256, 257, 257, 258, 258, 270, 270, 538, 538,
	653, 653, 114, 114, 114, 198, 198, 325, 325, 325,
	434, 434, 434, 362, 362, 293, 293, 436, 436, 436,
	436, 436, 401, 401, 401, 197, 197, 377, 377, 391,
	391, 392, 392, 494, 494, 393, 121, 121, 122, 122,
	137, 137, 227, 227, 225, 225, 225, 225, 225, 225,
	225, 225, 232, 232, 233, 233, 234, 234, 235, 236,
	236, 236, 236, 381, 381, 237, 237, 237, 226, 226,
	226, 228, 228, 228, 228, 228, 228, 228, 231, 231,
	231, 231, 238, 238, 238, 230, 230, 577, 577, 577,
	579, 579, 581, 581, 580, 580, 576, 576, 578, 578,
	648, 648, 407, 407, 407, 358, 360, 356, 356, 357,
	357, 367, 367, 365, 366, 366, 368, 368, 479, 479,
	479, 243, 243, 243, 398, 398, 398, 398, 399, 399,
	430, 430, 428, 428, 428, 428, 429, 429, 431, 431,
	431, 432, 432, 433, 433, 395, 395, 396, 396, 397,
	397, 397, 397, 460, 460, 229, 229, 229, 374, 374,
	374, 375, 375, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 451, 451, 449, 449, 449, 449,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 484,
	485, 485, 376, 376, 486, 435, 435, 595, 595, 595,
	596, 596, 477, 477, 487, 487, 487, 487, 487, 487,
	475, 475, 476, 476, 495, 496, 496, 411, 411, 411,
	411, 409, 409, 412, 412, 412, 412, 412, 410, 410,
	488, 488, 488, 488, 400, 400, 489, 489, 489, 489,
	490, 491, 491, 492, 492, 445, 446, 446, 502, 502,
	502, 502, 504, 373, 373, 373, 373, 373, 553, 552,
	552, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 519, 519, 519, 519, 519, 519, 519, 505,
	505, 505, 505, 505, 509, 509, 509, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 510, 510,
	515, 515, 516, 516, 516, 511, 512, 517, 517, 517,
	517, 654, 654, 521, 521, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 507, 507, 507, 514, 514, 514,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 419, 419, 421, 421, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 454, 454,
	454, 454, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 571, 571, 571,
	571, 571, 571, 571, 571, 456, 456, 574, 574, 575,
	575, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 582, 582, 583, 583, 585, 585, 586, 586,
	587, 588, 588, 588, 589, 590, 590, 584, 584, 591,
	591, 591, 591, 592, 592, 593, 593, 593, 593, 593,
	594, 594, 594, 594, 594, 466, 466, 467, 467, 473,
	473, 473, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 332, 332, 331,
	283, 283, 283, 283, 283, 283, 386, 386, 384, 384,
	384, 387, 387, 385, 385, 383, 383, 382, 382, 463,
	463, 461, 461, 465, 465, 413, 413, 520, 520, 520,
	520, 520, 520, 520, 520, 414, 414, 414, 422, 415,
	415, 416, 416, 416, 416, 416, 457, 458, 417, 417,
	417, 459, 459, 468, 472, 472, 471, 470, 470, 469,
	469, 447, 447, 448, 448, 394, 394, 655, 655, 390,
	390, 493, 493, 493, 493, 329, 329, 378, 378, 328,
	328, 320, 320, 321, 321, 321, 321, 371, 371, 474,
	474, 522, 522, 523, 523, 524, 524, 525, 525, 526,
	527, 528, 462, 462, 304, 303, 290, 291, 302, 301,
	300, 289, 292, 297, 298, 299, 294, 295, 311, 310,
	309, 260, 265, 316, 317, 317, 319, 319, 318, 318,
	306, 307, 308, 498, 288, 322, 322, 323, 323, 323,
	324, 324, 324, 324, 284, 284, 285, 285, 312, 312,
	313, 314, 314, 305, 305, 305, 275, 275, 275, 276,
	276, 277, 277, 536, 536, 533, 533, 533, 534, 534,
	534, 535, 535, 535, 535, 532, 532, 532, 532, 532,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 545, 545, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 547, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 550, 550,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	6, 4, 4, 6, 9, 6, 8, 4, 4, 5,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 6, 6, 9, 6, 9, 6,
	5, 6, 5, 1, 1, 1, 1, 1, 1, 0,
	1, 6, 6, 4, 8, 7, 10, 9, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 8, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 4, 4,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 3, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 9, 2, 7, 2,
	1, 1, 1, 3, 3, 0, 3, 1, 3, 1,
	1, 3, 2, 5, 0, 7, 5, 2, 0, 1,
	2, 3, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 4, 3, 6, 6, 6, 6, 6, 8,
	4, 4, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 6, 3, 8,
	5, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 4, 3, 1, 2, 2, 2,
	4, 6, 3, 1, 2, 2, 7, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 7, 4, 7, 8, 8, 9, 11, 5,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	13, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 3, 2, 2,
	6, 3, 3, 3, 3, 4, 4, 3, 1, 3,
	3, 2, 2, 1, 3, 3, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 2, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	3, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	4, 6, 4, 2, 6, 4, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	5, 3, 5, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 3, 4, 3, 4, 3,
	5, 3, 4, 4, 3, 4, 5, 3, 4, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 3,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 3, 4, 5,
	4, 4, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	7, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 1, 1, 1,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 3, 6, 4, 2, 3,
	5, 5, 5, 2, 5, 5, 2, 2, 2, 0,
	1, 1, 3, 4, 10, 11, 9, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 6, 1, 3, 1, 2, 0, 1, 2,
	3, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 3, 0, 4, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 3, 2,
	2, 4, 7, 3, 4, 6, 5, 7, 5, 5,
	3, 3, 0, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 8, 11, 5, 4, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 16, 19, 15, 18, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 6, 8, 8, 4,
	7, 3, 0, 7, 10, 1, 1, 1, 1, 2,
	2, 3, 0, 3, 0, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 14,
	16, 3, 1, 0, 4, 1, 0, 2, 2, 3,
	0, 1, 1, 4, 4, 5, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	7, 10, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 6, 4, 5, 4,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 612, -107, -104, -72, -70, -111, -112,
	-93, -113, -106, -135, -140, -121, -122, -123, -136, -142,
	-195, -200, -201, -202, -3, -57, -59, -73, -92, -94,
	-105, -115, -114, -116, -124, -132, -127, -110, -64, -137,
	-141, -152, -196, -197, -198, 32, 31, 100, 80, 156,
	129, 138, 206, 393, 439, 451, 408, 143, 430, 413,
	-146, -147, 469, -58, -71, -139, -138, 73, 130, 423,
	-6, -14, -18, 29, 46, -60, -61, -62, -63, 62,
	-80, -76, -87, -81, -74, -75, -78, -636, 102, -578,
	-95, -98, -131, -640, 164, 224, -117, -118, -119, 375,
	-125, -126, 432, -128, -129, -130, 435, 165, -66, -65,
	158, -225, -227, -144, -143, -145, -199, -153, -154, -155,
	-156, -157, -158, -159, -161, -187, -162, -163, -164, -165,
	-166, -167, -171, -190, -168, -169, -170, -173, -172, -174,
	-179, -175, -176, -177, -178, -180, -181, -183, -184, -185,
	-186, -188, -189, 474, -182, -191, -160, 535, 49, 490,
	82, 148, 443, 21, -7, -8, -9, -10, -11, -12,
	-13, -17, -16, -56, -4, -5, -77, -79, -82, -83,
	-84, -91, -85, -86, -577, -96, -97, -100, -102, -103,
	-99, -101, 431, 585, -228, -226, 609, 550, -21, -26,
	-22, -23, -25, -27, -24, -28, -29, -30, -42, -47,
	-44, -45, -43, -46, -48, -49, -50, -51, -52, -53,
	-54, -55, -32, -38, -39, -33, -34, -35, -36, -37,
	-40, -41, -19, -20, -31, 572, 581, -231, -229, -230,
	-238, 461, 558, 510, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, -327, 2, -306, -312,
	-313, -314, -305, -275, -547, -550, 4, -544, -548, 171,
	234, 337, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 49, 53,
	55, 59, 60, 61, 62, 63, 64, 68, 73, 74,
	79, 80, 81, 82, 83, 84, 85, 91, 88, 89,
	90, 92, 94, 96, 97, 98, 99, 100, 101, 103,
	104, 105, 107, 108, 109, 117, 118, 119, 120, 121,
	123, 129, 124, 130, 133, 128, 132, 134, 136, 137,
	138, 141, 142, 143, 145, 146, 147, 149, 150, 151,
	153, 154, 156, 157, 158, 161, 159, 162, 160, 163,
	164, 165, 166, 169, 177, 178, 179, 184, 186, 187,
	188, 192, 193, 194, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 207, 211, 213, 214, 215, 216, 217,
	223, 224, 226, 227, 228, 229, 230, 235, 236, 237,
	240, 246, 247, 251, 252, 253, 255, 259, 260, 261,
	262, 263, 264, 266, 268, 267, 270, 273, 274, 277,
	278, 279, 280, 281, 282, 286, 287, 283, 288, 289,
	291, 292, 295, 293, 296, 297, 294, 298, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	299, 314, 312, 316, 317, 318, 319, 320, 335, 330,
	331, 332, 324, 325, 321, 326, 322, 323, 327, 328,
	334, 329, 339, 340, 341, 344, 221, 346, 347, 350,
	352, 369, 355, 356, 357, 360, 361, 364, 367, 368,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 380,
	381, 383, 384, 385, 387, 388, 389, 391, 393, 394,
	396, 397, 399, 400, 401, 402, 403, 404, 405, 407,
	408, 410, 409, 411, 413, 415, 416, 417, 423, 430,
	424, 426, 427, 428, 429, 431, 432, 433, 434, 435,
	437, 438, 439, 441, 442, 443, 444, 445, 447, 449,
	450, 454, 455, 471, 472, 492, 451, 452, 453, 456,
	457, 458, 459, 460, 464, 462, 463, 465, 466, 467,
	469, 470, 473, 474, 476, 477, 478, 479, 480, 481,
	482, 485, 487, 488, 489, 490, 509, 491, 493, 497,
	498, 499, 500, 494, 495, 508, 502, 503, 505, 506,
	511, 512, 513, 514, 515, 516, 517, 518, 520, 528,
	529, 530, 532, 535, 536, 537, 538, 526, 540, 541,
	544, 545, 546, 549, 547, 548, 550, 552, 555, 556,
	557, 563, 562, 564, 565, 567, 568, 573, 574, 576,
	577, 578, 36, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 125, 126, 155, 167, 168, 180, 195, 196,
	208, 210, 218, 219, 220, 241, 242, 244, 249, 271,
	343, 345, 362, 366, 382, 386, 390, 392, 406, 446,
	483, 496, 501, 521, 522, 523, 524, 531, 533, 558,
	559, 560, 566, 575, -327, 2, -306, 353, -299, 2,
	-275, -275, 393, 28, 2, 28, 381, 463, 513, 515,
	2, -604, -372, 2, 28, -278, -275, 102, 206, 461,
	-299, 2, -604, 206, -372, 25, 2, -275, 2, 367,
	22, 27, 66, 77, 98, 141, 166, 189, 192, -639,
	369, 400, 449, 465, 508, 518, 532, 2, 562, 292,
	462, 510, 234, 120, 537, 456, -618, 454, 455, 367,
	398, 441, 209, 551, -279, 2, 451, -275, 292, 2,
	612, 94, 74, 446, 466, -149, 2, 282, 529, -150,
	-151, -148, 521, -531, 456, 441, 314, -275, 612, 612,
	612, 28, -288, -275, 510, 234, 456, 120, 506, 612,
	2, 510, 372, 562, 462, 120, 403, 234, 537, 192,
	141, 27, 68, 46, 456, -618, 586, 587, 292, 127,
	-602, 2, -597, 4, -548, -544, -321, -320, 510, 516,
	120, -314, -305, 601, -313, 612, 612, 612, 612, 2,
	252, 253, 402, 401, 466, 467, 28, 612, 612, 612,
	612, 454, 2, 166, 22, 27, 66, 93, 98, 127,
	189, 192, 358, -637, 369, 400, 465, 508, 512, 518,
	532, -617, 491, 68, 429, 456, -616, -618, 292, 537,
	141, -423, 120, 282, 204, 545, 515, 513, 543, 133,
	240, 548, 547, 612, 612, -108, 2, 609, 32, 31,
	-107, -111, 143, 469, -218, 510, 245, 2, -275, 612,
	612, 612, 2, 252, 253, 454, 455, 28, 612, 612,
	190, -597, 2, 612, 612, 612, 2, 28, 252, 253,
	454, 455, 245, 2, 68, 458, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 2, -193, 466, 491, 215, 47, 46, 74,
	28, 399, 79, 373, 121, 127, 150, 538, 207, 234,
	235, 260, 93, 94, -425, 44, 253, 68, 252, 455,
	-623, 454, -478, 511, 457, 463, 505, 264, 451, 529,
	102, 552, 442, 578, 403, 404, 503, 417, 283, 159,
	191, 4, 120, 314, 441, 468, 268, 267, 521, 282,
	450, 376, 84, 612, -648, 2, 510, -650, 2, 529,
	529, 2, -650, 2, -650, 2, -650, 2, -651, 529,
	575, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, -226, -228, -227, 612, 612, 612, 612, 612, 612,
	612, -193, 466, 2, 74, 28, 28, -365, -367, 542,
	243, 152, 359, -225, -227, 2, -577, -529, 2, -452,
	-551, -454, 599, 600, 592, 507, 67, -331, 336, 579,
	-466, 127, 543, 353, -550, -455, -468, 155, 369, 446,
	-387, 8, 9, 5, 6, 7, -284, -456, -462, 534,
	170, 342, -324, 613, 10, 609, -574, -227, -467, 37,
	210, 65, -533, -323, -285, -505, 244, -322, -305, -571,
	-572, 4, -544, -545, -534, -508, -516, -512, -513, -519,
	-275, -547, 77, 111, 112, 110, 115, 114, 285, 284,
	116, 113, 468, 551, 66, 36, 218, 219, 249, 343,
	220, 75, -573, 142, -546, 241, 242, 483, 51, 406,
	180, 126, 125, 345, 56, 54, 559, -517, 122, 521,
	522, 523, 524, 195, 196, 58, 167, 168, 366, 390,
	501, 531, 533, 208, 271, 43, 106, 191, 239, 222,
	248, 250, 254, 272, 275, 315, 333, 338, 363, 365,
	440, 475, -654, 560, 496, 69, 70, -579, 409, -580,
	-299, -579, 612, 612, 614, 612, -356, -358, -360, 2,
	28, 139, 609, 2, -483, 2, -484, -488, -227, 265,
	-487, 609, -485, 607, -306, 354, -575, 447, -571, -572,
	-284, -305, -323, 4, -544, -546, 611, -361, 609, 120,
	456, 510, 78, 234, 93, 166, 192, -418, 609, -275,
	28, 353, 525, 614, -357, 397, -464, 609, 353, 356,
	190, 356, 60, 296, 2, 2, 2, 2, 2, 218,
	-275, 510, 119, 2, 263, 2, 2, 2, 2, 2,
	2, 2, -380, 218, 2, -306, 562, -380, 218, 2,
	-380, 218, 2, -424, 2, 87, -289, 218, 2, -275,
	-315, 218, 2, -310, -312, -319, 218, 2, -317, -275,
	-539, 218, 2, -537, 4, -544, 116, 468, -452, 2,
	-137, 2, 60, -275, 562, 2, 471, 2, 609, -149,
	2, 71, 529, 43, 466, -150, 2, -438, 2, -439,
	-271, -272, -273, -495, -274, 251, 396, 405, 582, 131,
	336, 578, -631, 190, 591, 525, -529, -529, -529, -388,
	611, 2, 2, 2, 2, 2, 2, -488, 218, -306,
	2, -303, -532, 4, -544, -548, -545, -549, -547, 28,
	31, 32, 33, 35, 37, 38, 39, 40, 57, 65,
	66, 72, 76, 78, 87, 93, 102, 110, 111, 113,
	112, 114, 115, 116, 127, 131, 135, 139, 140, 144,
	148, 152, 170, 172, 185, 189, 190, 206, 209, 212,
	225, 238, 243, 245, 265, 269, 276, 284, 285, 336,
	342, 348, 353, 354, 358, 359, 379, 395, 412, 436,
	461, 468, 486, 504, 510, 519, 525, 527, 534, 542,
	543, 551, 553, 561, 569, 570, 571, 572, -550, 77,
	2, -488, 218, 2, -309, 218, -488, -312, 2, -289,
	2, -452, -611, 517, 162, 424, 2, -328, 218, -306,
	-308, -312, -310, 2, 2, 2, 2, -452, 2, -541,
	2, -536, 10, -535, 5, 4, -544, -548, -545, -317,
	2, -537, 218, 2, 28, 28, 562, 397, 245, 525,
	614, -378, -320, -321, -528, 8, -371, -275, 611, -452,
	2, -137, -120, 2, 185, -452, 218, 2, -137, 218,
	2, -452, 218, 2, -137, 218, 2, -275, 2, -619,
	2, -541, 218, 218, -275, 2, 296, 2, 2, 532,
	2, 98, 510, 119, 2, 428, -638, 449, 536, 2,
	2, 2, 2, 2, 2, 2, 510, -294, 2, -275,
	185, 494, -317, 218, -318, 2, 462, -649, 409, -537,
	218, 2, 562, -310, 218, 2, -310, 234, 247, -289,
	218, 2, 515, 513, 515, 513, 190, 2, 245, 2,
	245, 2, -489, 2, -490, -484, -491, 607, 354, -499,
	2, -498, -535, 558, -108, 609, -108, 609, 466, 609,
	-541, -306, -306, -452, 2, -137, -120, 2, -452, 2,
	-137, 2, -275, 2, -134, -541, -133, 609, 190, -275,
	2, -452, 2, -137, -120, 2, -452, 2, -137, 2,
	-218, 185, 2, 120, 510, -193, 2, 185, 553, 2,
	8, 2, 225, -541, 457, 404, 177, 2, 471, 2,
	472, 74, -425, 578, 74, 190, 2, 190, 2, -408,
	2, 572, 397, 190, 2, 2, -601, 2, 353, 190,
	2, 190, 2, 190, 2, 190, 2, 190, 2, -192,
	467, 530, 509, 401, 253, 2, -137, 569, -120, 253,
	252, -452, 569, 2, -624, 185, 455, -452, 2, 528,
	262, 160, 190, -408, 2, 190, 2, 190, 2, 5,
	2, 402, 492, 2, 251, 396, 492, 2, -306, 510,
	562, 462, 120, 28, 2, 454, 2, 2, 88, 89,
	190, 2, 190, 2, 205, 190, 2, 190, 510, -389,
	611, 578, 2, -400, -488, -437, -438, -437, 525, -365,
	-367, -193, 471, 2, -232, -398, -234, 185, -428, -429,
	-235, 276, 172, 348, -236, -407, 28, 139, -407, -407,
	60, 610, 610, 11, 12, 76, 41, 599, 600, 601,
	602, 183, 603, 604, 597, 598, 596, 589, 590, 594,
	257, 258, 95, 593, 591, 86, 290, 448, 173, 174,
	175, 176, 425, 232, 34, 233, 14, 15, 16, -331,
	33, 358, 275, 579, 222, 475, 592, 17, 18, 19,
	248, 250, 338, 50, 225, -283, 369, -330, 507, 67,
	-452, -452, -452, -452, -452, -452, -452, -452, 365, 609,
	-394, -447, 607, -227, 609, 609, 609, 609, -528, -227,
	-452, -466, 610, -385, 609, -227, -466, -461, 609, 446,
	607, 609, -469, -452, 5, 5, 5, 609, 611, -582,
	573, 185, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 392, -510,
	609, -509, 609, -509, -509, 563, -507, 609, 581, 574,
	609, -507, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 563, 614, -579, -361, 609,
	-390, -493, -452, 601, -390, -390, 353, -382, -452, 106,
	-411, 254, 315, 191, 272, 440, 239, -449, 613, -449,
	-477, 581, -227, -485, -305, -227, -487, 609, -483, -477,
	-109, -528, -92, -105, -114, -137, -152, -197, -198, 601,
	-306, 609, 190, 609, 611, -532, 190, -371, -289, -316,
	-275, -306, -322, -323, -328, -300, -275, 2, 2, 138,
	-382, -597, 537, 456, 28, 462, -539, -278, 38, -463,
	-502, -503, -553, 613, -552, -505, -515, -511, -514, 382,
	386, -534, 54, 559, -517, 244, 4, -544, -546, 241,
	242, 483, 51, 406, 180, 126, 125, 345, 56, 521,
	522, 523, 524, 195, 196, 58, 560, 496, 69, 70,
	-597, 537, 456, 28, 462, 185, -539, 185, -539, 2,
	2, 155, 2, 2, 2, -275, -253, 614, 64, 433,
	155, -380, 218, -253, 155, -253, 155, -329, 218, -328,
	-253, 155, -253, 614, 155, -253, 614, 155, 611, 614,
	155, -539, 2, -424, -531, -382, 38, -438, 2, 127,
	4, 5, -652, 614, 274, -334, 289, 335, 214, 354,
	576, 346, 131, -540, 5, 4, -462, -474, 127, 282,
	244, -522, -524, 8, -523, 9, -525, 599, 600, -530,
	-529, 109, 611, -532, -250, 426, 469, 368, -249, 24,
	29, 143, 236, 320, 556, 161, -346, 237, 431, -343,
	372, 155, 487, 546, -611, -614, 453, 517, 162, 424,
	90, 346, 469, 368, 426, 155, -404, -406, 38, 118,
	320, 367, 61, 228, 294, 295, 490, 566, 155, 469,
	368, 426, 368, -15, -264, 24, 143, -266, -261, 469,
	-614, 99, 426, 585, 431, 378, 502, 395, -614, -611,
	270, -613, 568, 334, -252, 487, 546, -611, -614, 453,
	426, -251, -348, -343, 372, 155, 613, 24, 143, 426,
	469, 368, -634, -635, 29, -245, -244, 24, 143, -248,
	225, -247, 24, 426, 368, -605, -296, -576, 225, 572,
	155, -296, -296, -488, 218, -628, 185, 2, -621, -133,
	266, 5, 10, -541, -133, -378, 614, 614, -532, 601,
	455, 454, 155, 155, 155, 155, 253, 185, 336, 336,
	572, 2, 2, 2, 2, 2, 192, -616, -639, 2,
	2, -306, 218, -363, 353, -600, -379, 510, -306, 185,
	336, 43, -309, 218, 2, -312, 562, -605, 336, -311,
	218, -306, 38, 609, 336, 2, -424, 2, 234, -576,
	336, -489, -325, -306, -484, -325, 469, -299, 38, -449,
	-306, 610, 614, -499, -499, -541, -206, 572, 190, 609,
	-218, 572, 572, 253, -496, 614, -495, 225, -542, -541,
	-134, -541, 429, 253, -541, -600, -289, 2, -306, 2,
	510, 255, -541, -206, 225, -541, -541, -541, -531, 28,
	472, 2, -192, 467, 530, 89, 472, 2, -306, 510,
	120, 234, 80, -628, 185, 2, -275, -603, 185, -598,
	441, 456, 537, -597, -306, 120, -306, 120, -306, 120,
	-306, -306, 2, 2, 2, 2, 2, 85, 2, -137,
	-452, 2, 85, 2, 46, 488, -624, 185, 2, 528,
	2, 528, 2, -275, -275, -275, 491, 274, -306, -306,
	-306, -307, -312, 457, 511, 538, 455, -452, 2, -641,
	2, 190, 185, 2, 510, 234, 510, 234, 120, 190,
	74, 120, 28, 510, 452, 611, 4, -253, 614, -279,
	-232, -398, -531, -399, -398, -233, -232, -235, 185, 405,
	547, 320, 473, 259, -429, -428, 28, -452, -433, 179,
	319, -452, -431, -454, 599, 600, -523, -525, -381, 346,
	-226, -226, -226, -368, -479, -452, 395, 234, -504, -502,
	-502, -304, -532, 521, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	275, 222, 475, 50, 225, -452, 525, -452, -452, -452,
	-452, 312, 336, 342, 534, 170, 544, 139, 346, -655,
	504, 40, -459, -227, -386, 609, -473, 35, 486, 28,
	-466, 609, 2, -447, -452, -448, -332, -330, -275, 599,
	600, 601, 602, 603, 604, 589, 590, 591, 14, 15,
	16, 594, 598, 596, 597, 183, 95, 593, 290, 448,
	86, 173, 174, 175, 176, 257, 258, 17, 18, 19,
	34, 592, -383, -382, -382, 610, 561, 28, 139, 601,
	2, 610, 614, 38, 610, -452, -383, -465, -461, -382,
	-472, -471, 569, -419, -420, 577, 299, 123, 216, 297,
	-421, 460, -526, 8, -532, 601, -583, 178, 209, 609,
	610, 2, 610, 2, 610, -452, 2, 610, -452, 2,
	610, -452, 2, 610, -452, 2, 610, 2, 610, 2,
	-452, -452, -452, -452, -452, -452, -452, -382, 8, -526,
	-526, 521, 521, -526, -526, -526, -518, 382, 383, 384,
	385, 277, 278, 279, 280, 386, 387, 388, 389, 304,
	305, 306, 307, 300, 301, 302, 303, 308, 309, 310,
	311, 200, 201, 202, 203, 196, 197, 198, 199, -518,
	-413, 2, -520, -382, 4, 577, 299, 123, 216, 297,
	460, 5, -413, 2, -414, 2, -452, -382, -415, -453,
	-454, 599, 600, 592, -331, -466, -416, 2, -452, -383,
	-452, 57, 269, 527, -417, -452, 190, -382, -382, 2,
	-382, 2, -580, 38, -382, -374, 614, 190, 38, 4,
	-374, -374, 609, 610, 614, -412, 213, 293, 288, 247,
	-412, -483, -411, 254, -409, 363, -409, -409, -477, -290,
	607, 615, -532, -477, -476, -475, 38, -299, 360, -477,
	-477, 611, 610, -476, 608, -595, 609, 612, 612, 612,
	612, 612, -306, 609, -382, -532, 611, 493, 2, 610,
	248, 248, 248, 248, 248, 353, 447, 610, 525, -599,
	-315, -319, 511, 2, 572, -107, 355, 610, 614, -373,
	37, 607, 611, -526, 2, 2, -521, 563, 609, 609,
	-420, 609, 190, -599, -319, 511, 2, -604, -372, -372,
	525, -275, 2, -306, -380, -253, 155, -380, -380, -253,
	614, 155, -289, -310, -315, -317, -319, -275, -537, -539,
	-253, -311, -631, 610, 529, -439, -333, 405, 485, 427,
	464, 506, 8, 9, 8, 9, 614, -532, 614, -632,
	93, 525, 78, 609, 456, -268, 283, 525, -443, 218,
	78, -554, 93, -292, -555, -275, 72, 543, 395, 189,
	153, -632, 93, 395, -632, 93, 2, 236, 93, 469,
	491, 609, 28, 60, -488, 41, 41, 28, -612, -613,
	270, 190, 578, 510, 234, 456, 525, 525, -488, -406,
	-502, 118, 294, 295, 60, -527, -522, 599, 600, -527,
	60, -527, -527, -527, 572, -309, -488, 456, 525, 525,
	525, 415, 415, -261, -150, 525, 525, 28, -193, 434,
	127, -653, 591, 415, 270, -613, 525, 190, 614, 41,
	41, 28, -612, 190, 525, -328, -290, 557, 42, 557,
	42, 557, 525, 42, 456, 525, 614, 42, -244, -600,
	-600, -247, -541, -246, 318, 525, 525, -15, 469, -606,
	-280, 105, 326, 287, 327, 97, 323, 96, 322, 103,
	324, 104, 325, 564, 339, 565, 340, 63, 321, 298,
	328, 489, 329, -281, -282, 146, 374, 555, 120, -537,
	-15, -15, 469, 368, 426, 155, -629, 225, 28, -618,
	225, -496, 225, -496, -320, -275, 611, -137, -452, -452,
	-137, -452, -137, 46, 155, 155, 2, 2, -649, 263,
	609, -337, 336, 190, -371, -497, 245, 614, -379, -597,
	155, -537, -405, -404, 336, -311, 218, 2, 155, -361,
	336, 149, 609, 403, 2, 155, -291, 218, -276, -275,
	-424, -255, 514, 155, -402, 553, -434, -137, 609, 127,
	38, -434, -391, -392, -494, -393, -292, 609, -299, -449,
	-108, -498, 610, 610, 610, -205, 357, -204, -275, 5,
	-218, -362, -293, -292, 119, 407, 407, -212, 572, -133,
	-134, 610, 614, -496, 225, 494, -206, -206, -496, -496,
	-306, 185, -541, -206, -206, -206, 2, 2, 2, 2,
	-408, -306, -289, -328, -306, 28, 611, -539, -539, -319,
	-315, -408, -289, -408, -289, -408, -289, -408, -408, -137,
	-452, 491, 2, 466, 185, 185, 611, -408, -364, 436,
	2, 403, 120, 510, 372, 234, -306, -328, -306, -328,
	-289, 120, -289, 121, -306, 4, -488, -399, -233, 354,
	259, 473, -431, -432, -454, 446, 447, -432, 446, 447,
	8, 9, 8, 9, -237, 477, 341, -380, 614, -242,
	39, 135, 259, -306, 578, 151, -452, -452, 525, -655,
	504, -459, 151, -452, 312, 342, 534, 170, 544, 139,
	346, 190, 609, -453, -453, 610, -384, -452, -452, 608,
	617, 610, 611, 610, -367, 614, -365, -452, -382, -382,
	610, 611, -382, -371, 608, 608, 614, 610, -470, -471,
	144, -452, 525, 525, 525, 525, 609, 610, 611, -588,
	364, 609, 609, -452, 610, 610, 610, 610, 38, 614,
	614, 614, 610, 614, 614, 614, 610, 610, 610, 614,
	610, 578, 578, 610, 610, 610, 610, 614, 610, 614,
	610, 190, 610, 610, -422, 379, 610, 11, 12, 599,
	600, 601, 602, 183, 603, 604, 597, 598, 596, 589,
	590, 591, 86, 290, 448, 14, 15, 16, -331, 248,
	225, -453, -453, -453, -453, 610, -457, -458, 190, 185,
	38, -417, -417, -417, 610, 190, -382, 610, 610, 609,
	-581, 292, 336, 610, -446, -445, 570, -493, -375, 2,
	-483, -301, -532, -446, -446, -382, -452, 254, 254, -410,
	553, 353, -412, -483, -476, -528, -451, -450, 187, 39,
	135, 330, 331, 332, 221, 188, -476, -299, -361, -476,
	-476, -532, -477, -477, -475, 610, -596, -528, 610, -376,
	-486, -575, -367, 611, -532, -215, -576, -194, 5, 342,
	-194, -194, -194, -194, -306, -539, 525, 525, 225, 25,
	380, -502, 607, 608, 8, -532, 609, -526, -526, -526,
	-539, 190, 190, 225, 353, 190, -537, 2, -253, -380,
	-253, -253, -328, -329, -253, -253, -253, -403, 572, -529,
	-438, 541, 83, 405, 521, -529, -249, 426, 469, -292,
	-292, -306, -222, -221, -219, -275, 5, -316, 204, 416,
	-537, 336, -443, 218, -254, 336, 218, -300, -502, 609,
	-426, 574, 259, 259, 553, -292, -300, 259, 218, -292,
	218, -300, 2, -300, -607, 405, 347, -452, -220, -219,
	60, -344, 281, 403, 337, -250, 426, 469, 368, -137,
	-137, -137, 609, -631, 553, 138, -306, -328, -306, -316,
	-537, -311, 469, 368, 426, 333, -322, -527, -527, -404,
	469, 368, 426, -316, -537, -309, -537, -260, 218, -275,
	-260, 218, 456, -289, 415, 578, 45, -653, 525, 190,
	-452, -452, -251, -137, -137, -137, 609, -290, -252, 426,
	5, 218, -292, 5, -292, 218, 5, -275, -292, -316,
	-537, -635, 24, 143, -292, -248, 591, -316, -537, -280,
	374, -541, 342, 549, -289, -605, -296, 456, 525, 525,
	-488, -625, -626, 206, 439, 456, 442, -539, -133, -209,
	572, -133, -203, 229, 601, -602, -541, -275, 562, -275,
	-335, -338, -336, -292, -444, -443, -558, -559, -554, 275,
	234, 543, 247, 171, 93, -223, -224, 574, 572, 155,
	-326, -306, 607, -206, -541, -306, -497, -317, -318, 155,
	-361, 336, -537, 38, 155, 609, 2, 2, -310, 353,
	336, -291, 218, -256, 145, -653, -289, -446, -375, -401,
	-436, 436, 353, -362, 558, -299, -401, -377, 614, 190,
	591, 611, -362, -492, 601, -108, -108, -206, 614, 609,
	591, 591, 609, -541, 610, 614, 611, 609, 591, 591,
	-214, 357, -213, 147, 261, 246, 479, 480, 481, 482,
	137, 478, 124, 317, 230, -496, -541, -212, -134, 190,
	190, -67, 572, 510, -206, 613, 442, -275, -408, -408,
	-408, 466, 466, -275, -371, -302, -532, -289, -306, -303,
	-328, 185, 185, -289, 547, -432, 354, 286, -479, -243,
	580, -306, 613, -452, -452, 151, 151, -452, -453, -453,
	-452, 151, 190, 609, -452, -463, 33, 33, 610, 614,
	-448, -452, -330, 610, 561, -367, -367, 610, 601, -532,
	613, 610, -461, 148, -452, 519, 299, 216, 297, -421,
	297, -421, -421, -526, 5, -532, 601, -589, -295, 609,
	-275, 570, -366, 359, 610, -504, -502, -452, -452, -452,
	-452, -452, -526, -507, -507, -522, -522, -452, -457, -452,
	-504, -502, -453, -453, -453, -453, -453, -453, -453, -453,
	-453, -453, -453, -453, -453, -453, -453, -453, -453, -453,
	-453, -453, 139, 336, 346, -453, -458, -457, -452, -452,
	-502, 610, 610, 610, -382, -107, 609, 292, -395, 209,
	-452, -496, 614, -395, -395, 610, -483, -483, 609, -452,
	254, 608, 614, 616, 591, 591, -361, 611, -475, -476,
	608, 610, 614, 610, 614, -435, 38, 610, -532, -446,
	-217, -216, 136, 53, 107, 134, 342, 248, -627, 572,
	-539, -539, 456, 356, 5, 8, 607, 608, 611, -526,
	610, 610, 610, -539, -539, 456, -597, 537, 456, 28,
	-539, -253, -253, 119, 320, -452, 525, 525, 610, 614,
	591, 60, 225, 155, 336, 555, 336, -555, 153, -560,
	-452, 609, 234, 609, 609, 2, -239, -240, -241, 143,
	469, 24, -633, 2, 553, 155, -253, 155, -253, 576,
	610, 614, -344, 609, 609, 525, 456, -268, 525, 572,
	-382, -452, -207, 127, -531, -614, 613, -614, 613, 456,
	525, 525, 456, 525, 525, 336, 155, 572, 169, 169,
	578, -260, -452, -452, 185, 525, 572, -382, 525, -506,
	48, 26, 336, -310, -253, 155, 525, 525, 537, 469,
	-133, -541, -541, 342, -15, -316, -537, -311, 469, 368,
	426, -604, -604, 206, -319, -629, -496, -211, 357, -210,
	147, 438, 137, 261, 230, -496, -209, 190, 245, 572,
	-311, 2, 610, 610, 614, 614, -561, -254, -306, -291,
	234, 234, -298, -276, 38, 350, 350, 609, -306, -88,
	572, -495, -528, -608, 572, 43, -309, 38, 155, -605,
	-137, -311, -500, -501, 5, 38, -306, 155, 353, 336,
	-257, 268, -653, -536, -576, -367, -401, -390, 337, 91,
	610, -446, -392, -375, -452, 2, 610, -204, -205, -541,
	-541, -541, -206, -218, -293, 2, -542, -541, -541, 614,
	609, 591, 591, 591, 591, 591, 591, -212, -496, -133,
	-137, 357, -306, 601, -408, -350, -349, 372, 346, -350,
	446, 446, 354, 179, 264, -242, -290, -452, -452, 151,
	33, 33, -452, -452, -463, 610, -452, -452, -382, 608,
	5, -452, 610, 610, 8, -452, 610, 611, -590, -275,
	-452, 610, 60, 610, 610, 614, 614, 610, 610, 610,
	610, 610, 610, 610, -458, 190, 139, 346, 609, 610,
	610, -107, -460, 212, 60, -483, -460, -460, -410, -371,
	-483, -450, -290, 607, -290, 607, -532, -528, -486, 609,
	611, -216, 591, -541, -541, -194, 206, -627, -627, 572,
	-319, 608, 2, 607, -532, 610, -319, 190, -599, -319,
	511, 119, -292, -292, -221, -529, 510, 446, -260, 395,
	-443, 155, 155, -562, 93, -564, 76, 171, 102, 336,
	342, 543, 395, 72, 127, 353, 412, -643, -644, -645,
	38, 583, 584, 610, -369, -480, -575, 609, -275, -369,
	-371, 336, 499, 127, 353, 336, 127, 353, 567, 119,
	2, 537, 79, -292, -300, -219, -371, -371, -306, -316,
	-537, 163, 610, 614, 591, 2, 601, 601, -316, -537,
	-311, -316, -537, -309, 155, -260, 370, 169, 525, -137,
	-452, 163, 610, -290, 5, 5, 155, -287, 76, -292,
	5, -292, -310, 119, 572, 456, 525, 525, 353, 353,
	356, -625, -626, -209, 614, 609, 591, 591, 591, -209,
	-542, -133, 2, -361, -351, 236, -292, -559, -556, -557,
	395, -444, -563, -565, 171, 395, -339, 609, -291, -276,
	609, -137, 2, -222, 609, -337, 357, 608, -610, 357,
	-609, 117, 137, -537, -405, -137, -311, -359, 572, -361,
	610, 614, 149, -427, 553, -290, -306, 155, -258, 267,
	-653, -536, -255, -430, -428, 140, 609, 353, -137, -367,
	591, 610, 610, 119, 610, -213, -214, -541, -133, -541,
	-541, -541, -133, -212, -496, -68, -69, 234, 93, 377,
	-303, 510, 234, 609, 609, -242, -452, -452, -452, 610,
	-367, -532, 601, -584, 372, 610, -479, -452, -452, -453,
	190, 609, -463, 610, -585, 571, -452, -396, -397, -452,
	444, 108, 210, -585, -585, 610, -528, -528, 2, -541,
	356, 2, 525, 607, 2, 190, -539, 190, 190, 225,
	225, 38, 415, -443, -300, -300, -304, -297, -275, 171,
	218, 342, 567, -426, 259, 609, -453, 547, -306, 609,
	2, 217, 217, 30, 60, -646, 131, 238, 610, 614,
	-481, -286, -275, -452, -481, 610, 610, 342, 547, 342,
	567, -452, 547, -502, 609, -253, -253, 610, 610, -452,
	525, -531, 100, -529, 2, -614, -260, -289, -452, 185,
	-452, 525, 5, -253, -304, -253, -253, -287, 537, 352,
	-316, -537, -311, -630, 511, 463, 538, 457, 193, 445,
	-630, 185, -210, -211, -541, -133, -133, -209, 38, -345,
	-346, 2, -561, 259, -297, 259, 227, 154, -369, 609,
	609, -371, -642, 572, 610, -335, -223, -89, -90, 526,
	-495, 614, 609, 591, -361, 320, 119, 38, 5, 609,
	609, -275, 353, 609, -290, -270, 92, -653, -536, -256,
	-401, 337, -371, 93, -430, -459, -206, 609, -206, 610,
	614, 28, 609, 28, 609, -306, -328, -382, -382, 610,
	-367, 60, 614, 610, 610, -453, -463, 610, -586, -587,
	-295, 614, 609, 609, 470, 608, 608, -539, 2, -539,
	-539, -539, 456, -260, 395, -275, -555, -564, -297, 336,
	-224, 553, 572, -452, -453, -277, 609, -452, 609, 609,
	38, 127, 238, 132, 223, -442, -647, 101, 500, 226,
	-480, -242, 610, -441, 553, 412, -453, -287, -369, 609,
	609, 609, 591, 190, -137, 609, -506, -253, -310, 591,
	525, 2, 2, 190, -604, 610, -620, 410, -137, -223,
	609, -224, -340, 81, 94, 128, 217, 194, 235, 491,
	497, 28, -340, 610, -369, -369, 610, -341, 353, 119,
	320, 610, 38, -90, 9, -609, -610, -452, 38, 119,
	-137, -500, -369, -306, -369, 353, -262, -261, 276, -536,
	-257, 610, -300, -401, -542, -69, -371, -371, 610, 610,
	-591, 403, 447, 211, -382, -368, 610, 614, 38, -397,
	2, 2, 2, -627, -319, 415, -254, 155, 213, 610,
	-566, 291, -275, 610, -405, -405, 38, 132, 223, -347,
	-343, 609, -243, -481, -224, 213, -306, -615, 553, 610,
	-353, -352, -349, -355, -354, -349, -382, -529, 100, 370,
	-382, -287, -133, -539, -539, 353, -622, 191, -621, 5,
	10, -341, -370, -482, -292, -441, 610, 610, 82, 119,
	-351, -137, 610, -137, 2, -359, 610, 610, -427, 610,
	-306, -259, -543, 415, 417, -653, -258, -446, 140, 610,
	610, 610, 610, -592, -593, 50, 540, 109, -452, -592,
	-592, -587, -589, 190, 171, -440, 581, -567, -570, -569,
	588, 476, 191, 371, 610, 499, 566, 610, 610, -646,
	-371, -440, -361, -452, -441, 610, 614, 558, 610, 614,
	558, 610, 190, 610, -253, -627, -253, -630, -208, 572,
	46, -269, -268, 610, 614, -442, -441, -347, 394, 133,
	143, -345, -642, -441, 609, -442, 609, -267, -266, -653,
	-522, -270, 140, 337, 547, -206, -594, 153, -593, 391,
	184, 446, 391, 184, -594, -594, -539, -297, -224, 55,
	-569, 588, -570, 588, 547, 133, -446, 610, -566, -224,
	-352, 225, -354, 190, 370, 190, 454, -621, 30, -224,
	-482, -347, -442, -224, 447, 447, 2, -223, -341, -442,
	-369, -347, -369, -263, -264, -265, -371, -262, 337, 547,
	469, 109, 209, 520, 320, 33, 591, -568, 320, 433,
	64, 469, -568, -567, 609, 609, -539, 357, -224, -347,
	-446, 2, -341, -347, 610, -224, 610, -538, 368, -259,
	469, -391, 446, 361, -593, -452, 23, 342, 127, -646,
	-382, -382, -253, -205, 609, -446, -224, -269, -224, -441,
	-446, -442, -653, -267, -391, -446, 610, 610, -205, -446,
	-446, -442, -347, -537, -263, -446, -342, -343, 525, 610,
	-347, -224, 609, -224, -446, -382, -446, 610, -342,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 569, 570, 572, 573, 574, 576,
	577, 579, 581, 583, 584, 585, 587, 588, 590, 591,
	592, 593, 594, 596, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	683, 685, 0, 1466, 1468, 1470, 1472, 0, 839, 0,
	36, 37, 39, 0, -2, 346, 348, 350, 352, 0,
	384, 386, 387, 389, 391, 392, 393, 395, -2, 0,
	502, 503, 505, 507, -2, 0, 1053, 1055, 1057, 0,
	671, 673, 0, 1060, 1062, 1064, 0, 0, 695, 696,
	0, 1580, -2, 687, 689, 691, 693, 764, 766, 768,
	770, 772, 774, 776, 778, 780, 782, 783, 785, 787,
	789, 791, 793, 794, 796, 798, 800, 801, 803, 804,
	806, 808, 810, 812, 814, 816, 818, 820, 822, 824,
	826, 828, 830, -2, 833, 834, 835, -2, -2, 0,
	-2, -2, -2, 1484, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 61, 63, 446, 448, 450, 452,
	454, 457, 459, 461, 1638, 509, 511, 513, 515, 517,
	519, 521, 0, 0, -2, 1652, 0, 0, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 113, 114,
	115, 116, 117, 118, 119, 78, 79, 80, 82, 83,
	84, 85, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 110, 111, 76, 0, 0, 1611, 1613, 1615,
	1617, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 571, 575, 578, 580,
	582, 586, 589, 595, 597, 599, 554, 555, 558, 2350,
	2368, 2369, 2370, 2373, 2374, 2375, 2376, 2377, 2378, 2842,
	2923, 2924, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
	2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
	2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817,
	2818, 2819, 2820, 2821, 556, 557, 1247, 0, 636, 634,
	2335, 637, 2636, 639, 641, 496, 497, 498, 499, 500,
	501, 0, 664, 650, 1650, 665, 667, 668, 669, 670,
	631, 629, 0, 669, 664, 2404, 662, 1464, 1465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	425, 1306, 1307, 1308, 1449, 1450, 2684, 1491, 0, 245,
	684, -2, -2, 2807, -2, 718, 719, -2, -2, 733,
	737, 728, 2811, 0, 2687, 2671, -2, 740, 1467, 1469,
	1471, 837, 838, 2354, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 255, -2, -2, -2, -2, 0, 0, 2733,
	2456, 2303, 2370, 2306, 2301, 347, 349, 351, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 385, 388, 390,
	394, -2, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1127, 1119, 1120, 1371, 0,
	0, 0, -2, 504, 506, 559, 560, 0, 1639, 1639,
	567, 568, -2, 0, 0, 0, 0, 317, 307, 1054,
	1056, 1058, 1059, 0, 0, 0, 0, 0, 672, 674,
	0, 0, 285, 1061, 1063, 1065, 1066, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 688, 690, 692, 694,
	765, 767, 769, 771, 773, 775, 777, 779, 781, 784,
	786, 788, 790, 792, 795, 797, 799, 802, 805, 807,
	809, 811, 813, 815, 817, 819, 821, 823, 825, 827,
	829, 831, 832, 845, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, 0, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 947,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 1034, 0,
	0, 848, 851, 852, 853, 854, 855, 856, 0, 920,
	945, 946, 956, 836, 0, 1287, 1640, 1493, 1474, 1488,
	1493, 1476, 1477, 1478, 1479, 1480, 1485, 1487, 1481, 1482,
	1483, 42, 44, 46, 48, 50, 52, 54, 56, 58,
	60, 62, 64, 447, 449, 451, 453, 455, 458, 460,
	462, -2, 1609, 1610, 510, 512, 514, 516, 518, 520,
	522, 675, 0, 678, 0, 850, 677, -2, 0, 1644,
	1644, 1644, 0, 0, 1610, 1608, 0, 681, 682, 744,
	745, 1917, 0, 0, 0, 0, 0, 0, 0, 0,
	2177, 2005, 0, 746, -2, 2038, 2040, 2782, 2609, 2807,
	2176, 2042, 2043, 2044, 2045, 2046, 0, 2048, 2049, 2050,
	2051, 2052, 2053, 0, 2055, 0, 2060, 2061, 2062, 0,
	2789, 2280, 2364, -2, 0, 0, 2795, 2360, 0, 2143,
	2078, -2, -2, 2387, 2366, 1849, 1850, 1851, 1852, 1853,
	-2, -2, 2825, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 0, 2770, 2790, 2791, 2796, 2798,
	2792, 2779, 2103, 2470, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1876, 1885, -2,
	-2, -2, -2, -2, -2, -2, 2783, 2784, 2801, 2804,
	2810, 2815, 2816, 2788, 2797, 2824, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 1877, -2, -2, -2, -2, 1627, 2650, 1630,
	1247, 1628, 1612, 1614, 0, 1616, 0, 0, 0, 1621,
	1647, 1645, 0, 1696, 1625, 1626, 1719, 1719, 1743, 0,
	1724, 0, 1743, 1639, 1770, 0, 1730, 2676, 2079, 2080,
	0, 2370, 2365, -2, -2, 2822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 0, 638,
	640, 0, 0, 0, 663, 1649, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 431, 432, 2790,
	0, 0, 0, 437, 0, 439, 440, 441, 442, 443,
	444, 445, 215, 2790, 527, 552, 0, 215, 2790, 530,
	215, 2790, 533, 0, 536, 1369, 215, 2790, 539, 2331,
	215, 2790, 542, 544, 2339, 215, 2790, 548, 2346, 2344,
	549, 0, 551, 235, 231, 232, 233, 234, 1460, 1461,
	1462, 1463, 0, 1490, 1370, 686, 0, 712, 0, 716,
	717, 2778, -2, 0, 2696, 721, 722, -2, 724, 1494,
	1498, 1499, 1500, 1501, 1502, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 713, 714, 731, 732, 738, 741,
	0, 840, 841, 842, 843, 844, 75, 0, 2790, 1770,
	77, 0, 2325, 2395, 2396, 2397, 2398, 2399, 2823, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893,
	2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903,
	2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913,
	2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2825,
	81, 0, 2790, 86, 0, 2790, 0, -2, 99, 0,
	112, 0, 139, -2, -2, -2, 120, 0, 2790, 0,
	2300, -2, 0, 227, 308, 309, 310, 0, 615, 0,
	622, 320, 321, 2383, 2384, 2391, 2392, 2393, 2394, 0,
	1091, -2, 0, 1300, 1302, 1302, 0, -2, 0, 0,
	0, 1044, 2297, 2302, 1045, 2321, 1046, 2307, 0, 355,
	356, 357, 358, 359, 0, 360, 2790, 362, 363, 0,
	365, 366, 2790, 368, 369, 0, 371, 0, 373, 0,
	267, 271, 2790, 2790, 398, 401, 0, 403, 404, 0,
	406, 0, 0, 0, 410, -2, 426, 0, 423, 413,
	414, 416, 417, 418, 419, 420, 0, 466, 464, 2336,
	0, 0, -2, 2790, 0, 1088, 0, 0, 1349, -2,
	0, 1293, 0, 1356, 2790, 1352, 0, -2, 0, 1637,
	2790, 1511, 1123, 1124, 1125, 1126, 1782, 493, 0, 1544,
	0, 1546, 0, 1566, 1776, 1719, 0, 0, 1781, 0,
	-2, 612, 2353, -2, 562, 0, 563, 0, -2, 0,
	334, 0, 0, 1069, 1071, 1072, 1074, 1075, 1078, 1079,
	1080, 1081, 0, 1083, 1756, 286, 288, 0, 0, 0,
	1068, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	0, 0, 697, 0, 0, 846, 847, 0, 0, 863,
	864, 865, 0, 334, 2688, 2645, 2492, 872, 0, 875,
	878, -2, 0, 0, 0, 0, 882, 0, 887, 888,
	889, 0, -2, 0, 896, 898, 1052, 900, 0, 0,
	902, 0, 906, 0, 909, 0, 911, 0, 913, -2,
	-2, -2, 921, 922, -2, 927, -2, 0, 931, -2,
	0, 934, 0, 937, -2, 0, 947, 943, 944, 0,
	0, 0, 0, 964, 965, 0, 974, 0, 977, 978,
	979, 0, 983, 984, 0, 986, 987, 988, 989, 0,
	2760, 2693, 2456, 0, 997, -2, 1003, 1005, 0, -2,
	0, 1021, 0, 1025, 0, 0, 1033, 0, 0, 849,
	0, 857, 858, 215, 1774, 1473, -2, 1475, 0, -2,
	0, 676, 0, 680, 1669, 1595, 1592, 0, 1666, 1667,
	1596, 0, 0, 0, 1603, 0, 1642, 1643, 0, 0,
	0, 1582, 1583, 0, 0, 0, 0, 2182, 2183, 2184,
	2185, 2198, 2186, 2187, 2197, 2195, 2196, 2188, 2189, 2194,
	2208, 2209, 2199, 2200, 2190, 2203, 2201, 2202, 2204, 2205,
	2206, 2207, 0, 0, 2213, 0, 2191, 2192, 2193, 2221,
	0, 0, 2222, 0, 2224, 0, 2214, 2210, 2211, 2212,
	0, 1984, 1986, 2288, 0, 0, 0, 2220, 2215, 2216,
	1922, 1923, 1924, 1925, 1926, 1959, 1963, 1964, 0, 0,
	2039, 2285, 2284, 2041, 0, 0, 2236, 0, 2054, -2,
	0, 2177, 2231, 0, 0, 2063, 2064, 2065, 0, 0,
	2236, 0, 0, 2279, 2075, 2076, 1914, 0, 0, 2145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 1862,
	0, 1864, 0, 1865, 1866, 1873, 1886, 0, 0, 0,
	0, 1890, 0, 0, 0, 0, 0, 0, 0, 2260,
	-2, 0, 0, 0, 0, 1878, 0, 1629, 0, 0,
	1700, 2289, 2293, 2294, 1700, 1700, 0, 0, 2237, 1767,
	1767, 0, 0, 1762, 1762, 1762, 1760, 1743, 0, 1743,
	1753, 0, 1743, 1743, 0, -2, 1724, 0, 0, 1753,
	0, 1737, 600, 602, 604, 606, 607, 608, 610, 1771,
	1772, 0, 0, 0, 0, 2371, 0, 0, 0, 0,
	2343, 0, 0, 2356, 0, 0, 2330, 380, 381, 0,
	0, 0, 2743, 2687, 0, -2, 643, 666, 1639, 0,
	2239, 1797, 1801, 0, 1803, 1804, 1805, 1806, 1807, 0,
	0, 1798, -2, 1874, 1876, 1897, 2388, 2389, 2390, 1857,
	1858, 1859, 1860, 1861, 1869, 1856, 1856, 1856, 1867, 1896,
	1888, 1896, 1892, 1842, 1843, 1844, 1879, 1880, 1881, 1882,
	0, 2743, 2687, 0, -2, 0, 653, 0, 0, 1577,
	427, 0, 434, 435, 436, 0, 523, 0, 213, 214,
	0, 215, 2790, 528, 0, 531, 0, 215, 2790, 2295,
	537, 0, 540, 0, 0, 546, 0, 0, 0, 0,
	0, 215, 1579, 0, 0, 0, 0, -2, 726, 734,
	735, 736, 0, 1496, 0, 1503, 755, 756, 757, 1505,
	1506, 0, 1508, 729, 758, 759, 760, 761, 762, 763,
	0, 2309, 2310, 2311, 2312, 2315, 2316, 0, 0, 727,
	748, 730, 0, 742, 121, 1446, 0, 0, 168, 0,
	1446, 1446, 0, 0, 0, 0, 196, 0, 0, 1157,
	0, 0, 0, 0, 139, 153, 164, 133, 134, 135,
	0, 0, 0, 0, 0, 0, 87, 1269, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 1285, 0, 0,
	0, 0, 0, 101, 102, 0, 0, 107, 108, 0,
	152, 0, 0, 0, 0, 0, 1541, 0, 143, 139,
	0, 0, 138, 140, 123, 0, 0, 139, 154, 166,
	0, 202, 204, 1154, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 237, 0, 614, 616, 0, 0, 620,
	0, 623, 0, 0, 0, 1294, 0, 0, 0, 1636,
	0, 0, 0, 0, 2790, 1444, 0, 1429, 0, 1756,
	2541, -2, -2, 286, 1756, 1043, 0, 0, 2371, 2305,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 402, 405, 407, 408, 409, 0, 1348, 0, 415,
	456, 1216, 2790, 0, 0, 483, 478, 0, 480, 0,
	0, 0, 1268, 2790, 1266, 2340, 0, 1291, 0, 1247,
	2790, 2338, 0, 0, 0, 1357, 2380, 1366, 1370, 1529,
	0, 495, 0, 1547, 1549, 0, 0, 1777, 0, 1779,
	1719, 1639, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 1082, 292, 0, 1755, 0, 0, 322,
	1756, 286, 2662, 1067, 334, 334, 1756, 699, 1756, 701,
	0, 0, 866, 867, 0, 334, 334, 334, 873, 874,
	876, 877, -2, -2, -2, -2, 879, 880, 971, 0,
	0, 0, 970, 890, 0, 892, 895, 899, 0, 1037,
	2671, 2687, 2743, 1050, 971, 2456, 971, 2456, 971, 2456,
	971, 971, 915, 959, 967, 926, 933, 0, 928, 932,
	935, 938, 0, 940, 948, 0, -2, 0, 951, 0,
	953, 0, 955, 971, 972, 975, 982, 985, 990, 991,
	992, 993, 2351, 994, 995, 996, -2, 1000, 1001, 0,
	1012, 1017, 1018, 1014, 0, 0, 0, 0, 0, 0,
	1028, 1029, 0, 0, 1036, 0, 859, 1286, 0, 1486,
	1669, 1595, 679, 1586, 1668, 1587, 1594, 1597, 0, 0,
	1599, 0, 1601, 0, 1664, 1665, 1672, 1673, 0, 1683,
	1684, 1676, 0, -2, 0, 0, 1679, 1680, 1605, 0,
	1622, 1623, 1624, 1653, 1656, 1385, 0, 2923, 1918, 1792,
	1919, 1920, 2324, 0, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, -2, -2, -2, -2, -2, -2,
	-2, -2, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, -2, -2, -2, 1960, 1961, 1962, -2,
	2223, 2225, 0, 2288, 0, -2, 0, -2, -2, -2,
	-2, 1981, 0, 1983, 1988, 1990, 1992, 0, 0, 0,
	0, 2287, 2002, 2271, 2272, 0, 0, 2179, 2180, 2181,
	1987, 0, 2006, 2286, 2283, 0, 0, 2217, 0, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 0, 2235, 1652, 2067, 0, 0, 0, 0,
	2074, 2059, 2233, 0, 2232, 0, 0, 0, 2243, 0,
	2278, 2274, 0, 2322, 1913, 1900, 1901, 1902, 1903, 1904,
	1905, 1915, 0, 2319, 2357, 2363, 2153, 0, 0, 0,
	2104, 2105, 2106, 2107, 2108, 0, 2110, 2111, 0, 2113,
	2114, 0, 2116, 2117, 0, 2119, 2120, 2121, 2122, 2123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 0,
	0, 2125, 0, 2246, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 2127, 0, 2129, 2237, 2257, 0, 0,
	2007, 0, 0, 0, 0, 2177, 0, 2132, 2237, 2265,
	0, 0, 0, 0, 0, 2237, 0, 2270, 0, 2139,
	0, 2141, 1631, 0, 0, 1787, 0, 0, 0, 2292,
	1787, 1787, 0, 1695, 0, 0, 1763, 1764, 1765, 1766,
	0, 0, 1767, 0, 1757, 1761, 1758, 1759, 1753, 1716,
	0, 0, 2326, 1753, 1722, 1752, 0, 1247, 1742, 1753,
	1753, 0, -2, 1726, 1743, 0, 0, 601, 603, 605,
	609, 611, 0, 0, 1652, -2, 0, -2, 336, 1246,
	0, 0, 0, 0, 0, 0, 633, 635, 0, 0,
	543, 0, 0, 649, 0, 627, 0, 630, 0, 1788,
	1791, 0, 0, 1802, 1808, 1809, 0, -2, 0, 0,
	1898, 0, 0, 0, 0, 0, 661, 0, 664, 0,
	0, 0, 438, 553, 215, 525, 0, 215, 215, 534,
	0, 0, 215, 545, 215, 2347, 215, 2345, 236, 550,
	1578, 248, 0, 715, 0, 1495, 1504, 0, 752, 0,
	754, 0, 2313, 2317, 2314, 2318, 0, 743, 0, 0,
	0, 0, 1445, 0, 0, 1392, 0, 0, 172, 2790,
	0, 217, 0, 0, 1209, 2332, 0, 1199, 0, 0,
	2478, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 136,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	1271, 1273, 1280, 1282, 0, 1276, 2320, 0, 0, 1277,
	0, 1279, 1281, 1283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 1303, 0, 0, 1304, 1305, 1517,
	1518, 0, 1540, 1541, 0, 0, 0, 0, 0, 0,
	0, 132, 0, 0, 0, 0, 2299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 617, 618,
	619, 624, 0, 625, 0, 0, 0, 1296, 0, 1344,
	1342, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 0, 0, 0, 0, -2,
	1298, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 325, 2298, 2308, 0, 1076, 1077, 361,
	364, 367, 370, 254, 0, 0, 400, 411, 0, 0,
	1129, 1101, 0, 0, 465, 334, 0, 0, 479, 483,
	2349, 1086, 1264, 1267, 0, 1247, 2790, 1314, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 2790, 2327, 2379,
	2380, 1531, 1541, 0, 1787, 0, 1564, 1550, 0, 0,
	0, 1564, 1568, 1569, 1571, 1572, 0, 0, 1778, 1784,
	561, 613, 1639, 1639, 334, 332, 2612, 330, 327, 329,
	0, 0, 1553, 1555, 0, 0, 0, 280, 0, 289,
	1756, 287, 0, 292, 0, 0, 0, 477, 698, 703,
	861, 0, 334, 869, 870, 871, 917, 961, 969, 1016,
	881, 883, 884, 885, 0, 0, 0, 1051, 1047, 1048,
	1049, 901, 971, 904, 971, 907, 971, 910, 912, 930,
	936, 949, 942, 950, 0, 0, 0, 963, 980, 0,
	999, 0, 0, 0, 0, 0, 0, 0, 1022, 1023,
	1024, 1026, 1031, 1030, 1035, 860, 1775, 1590, 1591, 1593,
	0, 1602, 0, 0, 1678, -2, -2, 1677, 1681, 1682,
	-2, -2, -2, -2, 1598, 0, 1607, 1604, 0, 1663,
	1383, 1384, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 2003, 0, -2, 1982, 1985, 1989, 1991, 1993, 0,
	0, 0, 0, 0, 0, 2226, 0, 2228, 2004, 2281,
	2284, 2219, 0, 2175, 0, 0, 1651, 1652, 1652, 0,
	2073, 0, 2234, 0, 2241, 2242, 0, 2066, 0, 2275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 0, 2109, 2112, 2115, 2118, 0, 0,
	0, 0, 2098, 0, 0, 0, 2102, 1868, 1854, 0,
	1896, 1894, 1895, 1889, 1896, 1893, 1846, 0, 1845, 0,
	2124, 0, 2126, 2128, 0, 0, 2130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 2011, 2012, 2032, 2131, 2263, 2264, 0, 0,
	0, 0, 0, 0, 2137, 0, 2269, 2138, 2140, 1639,
	0, 1632, 0, 1697, 1686, 1786, 0, 2290, 1756, 1699,
	1701, 2291, 2329, 1686, 1686, 0, 2238, 0, 0, 1747,
	0, 0, 0, 1749, 1720, 0, 0, 1714, 0, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1721, 1247, 1751, 1723,
	1727, 2357, 0, 1753, 0, 1738, 0, 1740, 1773, 0,
	1732, 1735, 0, 0, 2372, 1787, 0, 374, 382, 383,
	375, 376, 377, 378, 0, 1432, 0, 0, 0, 0,
	0, 2240, 0, 1793, 0, 1799, 0, 0, 0, 0,
	651, 0, 0, 0, 0, 0, 1576, 433, 524, 215,
	529, 532, 2296, 215, 538, 541, 547, 244, 0, 711,
	-2, 750, 751, 753, 0, 749, 169, 1446, 0, 0,
	0, 1388, 0, 1112, 0, 1107, 1108, 1390, 1394, 1400,
	1403, 0, 174, 2790, 186, 0, 2790, 0, 1173, 0,
	0, 0, 0, 0, 0, 1448, 0, 0, 2790, 215,
	2790, 215, 190, 192, 195, 0, 201, 197, 0, 1109,
	0, 1161, 0, 0, 1164, 122, 1446, 0, 0, 125,
	129, 141, 0, 0, 0, 151, 0, 0, 0, 1405,
	1409, 1417, 0, 0, 0, 1274, 1275, 1278, 1284, 88,
	0, 0, 0, 1413, 1415, 1421, 100, 103, 2790, 2341,
	105, 2790, 0, 1387, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 127, 131, 142, 0, 1423, 124, 0,
	230, 0, 0, 220, 215, 2790, 0, 222, 0, 223,
	224, 238, 0, 0, 0, 621, 0, 1089, 1090, 1343,
	0, 1289, 1290, 0, 1301, 1295, 0, 0, 0, 0,
	0, 1425, 1426, 0, 0, 0, 1444, 1441, 1756, 250,
	0, 1756, 258, 0, 2304, 0, 272, 397, 0, 0,
	0, 0, 1128, 1227, 1130, 1132, 1133, 1134, 217, 0,
	2380, 1199, 2530, 2380, 0, 0, 1096, 0, 0, 0,
	471, 467, 0, 476, 482, 481, 487, -2, 0, 0,
	0, 0, -2, 0, 0, 1359, 1353, 1354, 0, 0,
	0, 0, 2790, 1533, 1541, 0, 1637, 1652, 494, 1542,
	1564, 0, 0, 0, 1552, 1548, 1545, 1787, 0, 0,
	0, 0, 0, 1780, 1783, 564, 565, 311, 0, 0,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 0,
	290, 0, 293, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 292, 323, 282, 1756, 0,
	0, 700, 0, 0, 868, 0, 891, 894, 903, 905,
	908, 952, 954, 971, 981, 1006, 2328, 1007, 1151, 0,
	1151, 0, 0, 1027, 1600, 0, 1675, 1606, 1657, 1658,
	0, 1385, 0, 1921, 1966, 0, 0, -2, 0, 0,
	1970, 0, 0, 0, -2, 0, 0, 0, 2227, 2229,
	0, 2283, 2218, 2068, 0, 0, 0, 2072, 2056, 2057,
	0, 2178, 2244, 2273, 2277, 0, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 0, 2323, 2358, 2362, 2151, 2152, 2156,
	2337, 0, 0, 0, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 1887, 1891, 0, 0, 2245, 2256, 2258,
	2008, 2009, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, -2, -2, -2, 2026, 2027, 2028, -2, -2,
	-2, 2033, 0, 0, 0, 2259, 2261, 2262, 2266, 2267,
	0, 2134, 2135, 2136, 2268, 0, 1639, 1633, 1694, 0,
	1785, 1698, 0, 1694, 1694, 1646, 1745, 0, 0, 1769,
	0, 1717, 0, 1718, 0, 0, 1750, 0, 1725, 1728,
	1729, 1739, 0, 1731, 0, 1734, 0, 2068, -2, 335,
	337, 339, 0, 342, 343, 0, 0, 0, 642, 0,
	1432, 1432, 0, 644, 628, 0, 0, 1795, 0, 0,
	1871, 1875, 1899, 655, 657, 0, 0, 2743, 2687, 0,
	654, 526, 535, 246, 0, 1754, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 216, 0, 1208, 0, 1171,
	0, 0, 1198, 0, 0, 1214, 176, 177, 178, 0,
	0, 0, 0, 188, 0, 0, 184, 0, 194, 200,
	199, 0, 1158, 0, 0, 0, 0, 1393, 0, 0,
	0, 148, 149, 150, 0, 155, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 1524,
	0, 1514, 145, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 1382, 240, 0, 0, 0, 0, 0,
	0, 1288, 1346, 1347, 1297, 1406, 1410, 1418, 0, 0,
	0, 0, 0, 669, 1443, 0, 258, 256, 0, 259,
	0, 262, 263, 0, 0, 258, 252, 0, 0, 0,
	1247, 412, 1099, 1215, 0, 0, 1217, 1135, 1139, 0,
	2380, 2380, 0, 2334, 0, 1097, 0, 0, 1216, 463,
	0, 470, 0, 484, 0, 0, 1268, 0, 0, 1292,
	1317, 1247, 0, 1358, 1360, 0, 1368, 0, 0, 0,
	1535, 1541, 0, 1528, 1529, 1671, 1543, 1562, -2, 0,
	0, 1652, 1570, 1567, 1573, 1574, 0, 331, 0, 326,
	328, 0, 314, 0, 1554, 1556, 0, 1070, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 292, 1756,
	318, 0, 862, 886, 962, 1008, 1150, 0, 0, 1010,
	0, 0, 1674, 1661, 1662, 1659, 1385, 1968, 1972, 0,
	0, 0, 1974, -2, 0, 1996, -2, -2, 2230, 2282,
	2047, 1652, 2069, 2071, 2058, 2276, 1916, 0, 2158, 2155,
	0, 2142, 0, 2093, 2094, 0, 0, 2097, 2099, 2100,
	2101, 1855, 1848, 1847, 2255, 0, 0, 0, 0, 2133,
	1634, 0, 2147, 0, 0, 1702, 2147, 2147, 1746, 0,
	1748, 1715, 1703, 0, 1712, 0, 2358, 1741, 1733, 0,
	0, 340, 0, 344, 345, 379, 0, 645, 646, 0,
	0, 1789, 1794, 0, 1800, 1870, 0, 0, 0, 0,
	0, 247, 170, 171, 1113, 1111, 1397, 1401, 1398, 0,
	173, 0, 0, 1172, 0, 1175, 0, 0, 0, 0,
	1182, 1199, 0, 0, 0, 0, 0, 0, 1201, 0,
	1200, 0, 0, 1231, 0, 1373, 1380, 0, -2, 0,
	0, 0, 180, 206, 0, 0, 0, 0, 209, 1447,
	182, 0, 0, 215, 215, 1110, 0, 0, 1389, 1391,
	1404, 0, 0, 0, 0, 158, 0, 0, 1407, 1411,
	1419, 1414, 1416, 1422, 0, 106, 0, 1525, 0, 144,
	0, 0, 0, 1424, 228, 229, 0, 215, 0, 215,
	221, 215, 1382, 0, 0, 0, 0, 0, 0, 0,
	0, 1427, 1428, 249, 0, 0, 0, 0, 0, 251,
	324, 258, 399, 0, 1160, 0, 1227, 1219, 1220, 1221,
	0, 1131, 1226, 1228, 0, 0, 1136, 0, 0, 0,
	0, 1116, 1098, 0, 1129, 1101, 0, 468, 485, 0,
	488, 0, 491, 1087, 1265, 1309, 1247, 1312, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 1537, 1541,
	0, 1530, 1531, 1564, 1670, 0, 0, 0, 1551, 1671,
	0, 333, 334, 0, 334, 294, 0, 295, 296, 297,
	304, 305, 306, 283, 284, 702, 704, 0, 0, 710,
	1149, 0, 0, 0, 0, 1660, 1976, -2, -2, 1997,
	0, 2359, 2361, 1652, 0, 2144, 1654, 0, 0, -2,
	0, 0, 0, 1635, 1618, 0, 1693, 1685, 1687, 1689,
	2674, 2451, 2789, 1619, 1620, 1768, 0, 0, 1736, 341,
	1431, 647, 0, 0, 1796, 0, 652, 0, 0, 0,
	0, 0, 1399, 175, 0, 0, 1176, 1177, 2333, 1179,
	0, 1181, 1183, 1184, 1101, 0, 1188, 0, 2382, 0,
	1193, 1196, 1197, 0, 0, 1210, 1232, 0, 1241, 0,
	1375, 1385, 1379, 0, 1377, 1243, 0, 179, 208, 181,
	210, 205, 0, 1382, 0, 183, 193, 0, 0, 126,
	0, 0, 2445, 161, 159, 157, 104, 1386, 147, 0,
	128, 0, 230, 239, 1381, 241, 225, 215, 0, 0,
	1408, 1412, 1420, 0, 1435, 1436, 1437, 1438, 0, 0,
	0, 0, 260, 0, 261, 264, 265, 0, 0, 1101,
	1159, 1100, 1218, 0, 1229, 1101, 0, 0, 0, 0,
	0, 0, 1103, 0, 1102, 0, 0, 469, 472, 0,
	475, 0, 0, 0, 0, 0, 1316, 0, 1361, 1359,
	0, 1367, 0, 0, 0, 1513, 0, 0, 1532, 1533,
	492, 1557, 0, 0, 1564, 1575, 313, 0, 316, 291,
	0, 706, 0, 708, 0, 1009, 1011, 0, 0, 2070,
	2162, 0, 0, 2095, 2096, -2, 0, 2036, 2146, 2148,
	0, 0, 0, 0, 0, 1704, 1713, 1432, 1790, 659,
	656, 658, 0, 1395, 0, 1402, 217, 1174, 1178, 0,
	1185, 0, 0, 0, 1189, 1251, 0, 0, 1268, 1268,
	1202, 0, 0, 1235, 1236, 1156, 0, 1237, 1238, 1239,
	1374, 1663, 1380, 1101, 0, 0, 207, 212, 0, 0,
	0, 0, 0, 0, 146, 0, 219, 242, 1382, 0,
	0, 1439, 1440, 0, 0, 257, 276, 0, 1310, 1103,
	0, 1230, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1138, 1243, 0, 0, 1207, 1114, 0, 1117,
	0, 1099, 0, 473, 474, 489, 0, 490, 0, 0,
	1317, 0, 0, 1368, 0, 0, 1520, 1512, 1541, 1534,
	1535, 1787, 0, 1565, 0, 705, 0, 0, 1019, 1020,
	0, 0, 0, 0, 2157, 1655, 2037, 0, 0, 1688,
	1690, 1691, 1692, 648, 0, 1396, 187, 0, 1245, 1187,
	1256, 0, 0, 0, 0, 0, 1203, 1233, 1234, 1231,
	1155, 0, 1378, 1376, 1212, 1245, 1247, 185, 0, 1243,
	0, 1165, 0, 0, 1168, 0, 0, 162, 2445, 160,
	0, 215, 626, 1432, 215, 0, 279, 0, 270, 268,
	269, 1095, 0, 1223, 1225, 1241, 1243, 1156, 0, 1118,
	1160, 1116, 486, 1311, 1315, 1313, 1351, 1243, 0, 1241,
	0, 1527, 1541, 1521, 1522, 0, 1537, 0, 0, 334,
	707, 709, 2154, 2174, 2163, -2, 2746, 2452, 0, 2174,
	2174, 2149, 2150, 0, 0, 1101, 0, 1190, 1252, 1253,
	0, 1248, 1249, 1250, 2381, 1191, 1192, 1194, 1195, 1787,
	0, 1242, 1251, 211, 1101, 1162, 0, 0, 1163, 0,
	0, 165, 0, 167, 243, 1430, 1433, 0, 266, 0,
	0, 1092, 1094, 1101, 0, 1156, 1241, 1101, 0, 0,
	0, 1101, 1103, 1241, 0, 1156, 0, 1516, 1526, 0,
	1536, 1513, 0, 1560, 0, 315, 2159, 0, 0, 2165,
	2166, 2167, 2168, 2169, 2160, 2161, 660, 1180, 1186, 0,
	1254, 0, 1255, 0, 0, 0, 1211, 1240, 1256, 191,
	1166, 0, 1169, 0, 163, 0, 0, 274, 275, 1222,
	1224, 1101, 1156, 1787, 1104, 0, 1106, 1103, 1115, 1156,
	0, 1101, 0, 1539, 1515, 1519, 2342, 1520, 1558, 0,
	0, 0, 2171, 2172, 0, 0, 0, 1257, 0, 1260,
	1261, 0, 1258, 1231, 0, 0, 215, 0, 1787, 1101,
	1206, 1105, 1095, 1101, 1243, 1787, 1241, 1509, 1541, 1527,
	0, 1787, 2170, 2173, 2164, 1244, 1259, 1262, 1263, 1213,
	0, 0, 1434, 277, 0, 1204, 1787, 1093, 1787, 1241,
	1364, 1156, 0, 1516, 1787, 1561, 1153, 0, 0, 1205,
	1362, 1156, 1101, 1538, 1510, 1559, 1167, 1152, 0, 278,
	1101, 1787, 0, 1787, 1365, 0, 1363, 1153, 1170,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 597, 3, 603, 598, 3,
	609, 610, 601, 599, 614, 600, 611, 602, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 617, 3,
	589, 591, 590, 594, 613, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 607, 3, 608, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 615, 596, 616, 592,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 593, 57932, 595, 57933, 605, 57934, 606,
	57935, 612, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1520
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1534
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1535
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1536
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1537
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1538
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1539
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1540
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1547
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1556
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1558
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1561
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1562
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1565
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1659
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1700
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1732
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1743
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1755
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1876
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1900
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1909
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1938
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1974
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1985
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1997
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2018
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2080
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2089
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2100
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2108
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2119
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2129
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2139
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2148
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2159
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2165
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2191
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2196
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2331
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2341
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2350
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2402
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2415
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = true
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = false
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2597
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2601
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2604
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2688
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2743
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2785
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2793
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2947
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = nil
		}
	case 280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3081
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3234
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3243
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3249
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3254
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3259
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3291
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = nil
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3367
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3381
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3433
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3435
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3437
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3563
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3589
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3594
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3606
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3609
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3612
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3613
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3614
		{
			return helpWith(sqllex, "CREATE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3631
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3637
		{
			return unimplemented(sqllex, "create access method")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			return unimplemented(sqllex, "create cast")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3640
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3642
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3643
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3644
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3646
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3647
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3648
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3649
		{
			return unimplemented(sqllex, "create publication")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3650
		{
			return unimplemented(sqllex, "create rule")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3651
		{
			return unimplemented(sqllex, "create server")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3653
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3655
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3658
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3659
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3662
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3663
		{
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3666
		{
		}
	case 426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3667
		{
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3670
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3676
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3677
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3678
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3679
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3681
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			return unimplemented(sqllex, "drop server")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3726
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3814
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3849
		{

			sqlVAL.union.val = nil
		}
	case 484:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3896
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			return helpWith(sqllex, "DELETE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3936
		{
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3961
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3962
		{
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3963
		{
			return helpWith(sqllex, "DROP")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3968
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4005
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4035
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4060
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4105
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4162
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4185
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4228
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4252
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4260
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "DELETE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			return helpWith(sqllex, "INSERT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4289
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4300
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4301
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4306
		{
			return helpWith(sqllex, "DELETE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "INSERT")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4437
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4470
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4561
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4577
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "GRANT")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4673
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4686
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4714
		{
			return helpWith(sqllex, "RESET")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4715
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "RESET")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4742
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4745
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "USE")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4763
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4764
		{
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4769
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "USE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4962
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4967
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4971
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4990
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4994
		{
			return unimplemented(sqllex, "set from current")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4998
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5003
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5017
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5038
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5055
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = tree.Low
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = tree.Normal
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = tree.High
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5171
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5173
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5174
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5182
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5183
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5184
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5186
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5188
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5190
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5192
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5194
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5201
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5203
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5205
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5206
		{
			return helpWith(sqllex, "SHOW")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5209
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5218
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5237
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5242
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.str = "client_encoding"
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.str = "timezone"
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5304
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5319
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5367
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5376
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5384
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5449
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5460
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5506
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5529
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5561
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5570
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5581
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5597
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5602
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = true
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = true
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = false
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5638
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5640
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5657
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5683
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5684
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5700
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5708
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5752
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5757
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5759
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5763
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = true
		}
	case 957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = false
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5778
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5783
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5824
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5829
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = true
		}
	case 971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = false
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5847
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5861
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5872
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5876
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5887
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5901
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5909
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5914
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5939
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5944
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5949
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5954
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5983
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5988
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5999
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6028
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6036
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6057
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6062
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6067
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6080
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6094
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6103
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6174
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6184
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6330
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6373
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6382
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6431
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6432
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6433
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6434
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6444
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6445
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6446
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6447
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6458
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6486
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6499
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6531
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6550
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6614
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6650
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6665
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6693
		{

			sqlVAL.union.val = nil
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6699
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.str = ""
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6709
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = nil
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6732
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6736
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6772
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6785
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6799
		{
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6801
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6856
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6882
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6893
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6896
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6899
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6900
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.str = ""
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7145
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{

			sqlVAL.union.val = true
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = false
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7204
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7207
		{
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7304
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7332
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7342
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7357
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7425
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7426
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7427
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7428
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7429
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7430
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7512
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7597
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7606
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7614
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7625
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7638
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7648
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7650
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7652
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7654
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7657
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7660
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7662
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7675
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7706
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7740
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.str = ""
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = true
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{

			sqlVAL.union.val = true
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = false
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7789
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7803
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7815
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7827
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7837
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7847
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7851
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = true
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = true
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = nil
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7986
		{
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7987
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8012
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8014
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8016
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8018
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8020
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8022
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8057
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8074
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8092
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8108
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8124
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8128
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = false
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = true
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = false
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = true
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = false
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8182
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8188
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8194
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8202
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.str = ""
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.str = ""
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8261
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8267
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8492
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8498
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8510
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8516
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8530
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8536
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8595
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = true
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = false
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = tree.Types
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8655
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8659
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8683
		{
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8684
		{
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8687
		{
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8688
		{
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8699
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8717
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8726
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8747
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8755
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8776
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8784
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8795
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8799
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8800
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8801
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8820
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8825
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8843
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8852
		{
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8853
		{
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8854
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8871
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8874
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8875
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8903
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8916
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8918
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9012
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.str = ""
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9035
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9057
		{

		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9072
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.str = ""
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.str = ""
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.str = ""
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.str = ""
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9127
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9152
		{
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9153
		{
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9200
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9204
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9213
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9307
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9345
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9377
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9398
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9413
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9557
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9592
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9593
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9594
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9699
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9715
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = true
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = false
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9769
		{
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = nil
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9783
		{
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = true
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = false
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = false
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = true
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9813
		{
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9817
		{
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9870
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9875
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9901
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9990
		{
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9993
		{
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9994
		{
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10029
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10030
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10060
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10062
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10077
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10099
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10109
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10130
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10146
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10158
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10177
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10219
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10229
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10275
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10305
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10338
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10340
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = nil
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = true
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = false
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.str = tree.AstFull
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.str = tree.AstRight
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.str = tree.AstInner
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10457
		{
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10458
		{
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.str = tree.AstHash
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.str = ""
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10532
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10550
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10556
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10562
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10572
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = true
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = false
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = true
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = false
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10621
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10634
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10642
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10643
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10661
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10663
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10671
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10691
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10700
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10740
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10752
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10753
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = types.Geography
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10802
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10810
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10836
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10844
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = nil
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = types.Int2
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = types.Int
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = types.Float4
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = types.Float
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10887
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10895
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10903
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = types.Bool
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10917
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = types.Float
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10936
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10942
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10964
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = types.String
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = true
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = false
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = types.Date
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11013
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11021
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11035
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11044
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11052
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11069
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = true
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = false
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = false
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = types.Interval
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11093
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11192
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = nil
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11222
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11282
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11431
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11439
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11560
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11626
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11648
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11756
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11764
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11860
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11865
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11891
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11900
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11915
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11949
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11960
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11961
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11985
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12051
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12181
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12190
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12199
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12208
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12217
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12222
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12227
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12232
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12237
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12242
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12251
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12252
		{
			return unimplemented(sqllex, "treat")
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12273
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12278
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12325
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.str = ""
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12414
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12427
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12495
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12524
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12600
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12623
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12739
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12745
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12749
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12797
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12818
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12822
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12826
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12848
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12852
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12856
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12874
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12881
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12885
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12897
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12901
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12918
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12925
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12940
		{
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12941
		{
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12955
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12990
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13013
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13021
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13044
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13094
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13110
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13119
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13130
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13139
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13147
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13164
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13257
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13261
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13267
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13279
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13306
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13313
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13335
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13339
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13356
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13365
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13383
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13396
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13403
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.str = ""
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13438
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
