// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}

//line sql-gen.y:661
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10962

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1201,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	425, 183,
	-2, 0,
	-1, 77,
	202, 1025,
	214, 1025,
	229, 301,
	324, 301,
	333, 823,
	364, 301,
	374, 823,
	411, 823,
	435, 301,
	460, 823,
	-2, 0,
	-1, 82,
	229, 305,
	-2, 0,
	-1, 83,
	118, 1201,
	208, 1201,
	445, 1201,
	446, 1201,
	-2, 0,
	-1, 95,
	133, 1172,
	151, 1172,
	164, 1172,
	211, 1172,
	241, 1172,
	284, 1172,
	294, 1172,
	440, 1172,
	-2, 1143,
	-1, 127,
	141, 731,
	228, 731,
	327, 711,
	379, 711,
	428, 731,
	-2, 0,
	-1, 129,
	4, 1203,
	21, 1203,
	22, 1203,
	23, 1203,
	24, 1203,
	25, 1203,
	26, 1203,
	28, 1203,
	29, 1203,
	35, 1203,
	40, 1203,
	41, 1203,
	42, 1203,
	43, 1203,
	44, 1203,
	45, 1203,
	46, 1203,
	47, 1203,
	48, 1203,
	50, 1203,
	51, 1203,
	52, 1203,
	54, 1203,
	55, 1203,
	56, 1203,
	57, 1203,
	58, 1203,
	62, 1203,
	63, 1203,
	64, 1203,
	65, 1203,
	67, 1203,
	68, 1203,
	69, 1203,
	73, 1203,
	74, 1203,
	75, 1203,
	76, 1203,
	77, 1203,
	78, 1203,
	79, 1203,
	82, 1203,
	83, 1203,
	84, 1203,
	85, 1203,
	87, 1203,
	89, 1203,
	90, 1203,
	91, 1203,
	93, 1203,
	95, 1203,
	96, 1203,
	104, 1203,
	105, 1203,
	106, 1203,
	107, 1203,
	109, 1203,
	110, 1203,
	111, 1203,
	113, 1203,
	114, 1203,
	115, 1203,
	117, 1203,
	118, 1203,
	120, 1203,
	121, 1203,
	124, 1203,
	125, 1203,
	126, 1203,
	128, 1203,
	129, 1203,
	131, 1203,
	132, 1203,
	134, 1203,
	135, 1203,
	136, 1203,
	137, 1203,
	138, 1203,
	139, 1203,
	140, 1203,
	141, 1203,
	142, 1203,
	143, 1203,
	144, 1203,
	145, 1203,
	146, 1203,
	147, 1203,
	148, 1203,
	150, 1203,
	156, 1203,
	157, 1203,
	158, 1203,
	159, 1203,
	163, 1203,
	165, 1203,
	169, 1203,
	170, 1203,
	171, 1203,
	172, 1203,
	173, 1203,
	174, 1203,
	176, 1203,
	177, 1203,
	179, 1203,
	180, 1203,
	182, 1203,
	183, 1203,
	184, 1203,
	185, 1203,
	186, 1203,
	187, 1203,
	188, 1203,
	189, 1203,
	190, 1203,
	192, 1203,
	193, 1203,
	195, 1203,
	196, 1203,
	197, 1203,
	198, 1203,
	202, 1203,
	203, 1203,
	204, 1203,
	205, 1203,
	208, 1203,
	209, 1203,
	210, 1203,
	212, 1203,
	214, 1203,
	216, 1203,
	218, 1203,
	219, 1203,
	220, 1203,
	222, 1203,
	226, 1203,
	227, 1203,
	228, 1203,
	229, 1203,
	230, 1203,
	232, 1203,
	233, 1203,
	235, 1203,
	236, 1203,
	238, 1203,
	239, 1203,
	242, 1203,
	243, 1203,
	244, 1203,
	247, 1203,
	248, 1203,
	249, 1203,
	250, 1203,
	252, 1203,
	253, 1203,
	254, 1203,
	255, 1203,
	256, 1203,
	257, 1203,
	258, 1203,
	259, 1203,
	260, 1203,
	261, 1203,
	262, 1203,
	264, 1203,
	266, 1203,
	267, 1203,
	268, 1203,
	269, 1203,
	270, 1203,
	271, 1203,
	273, 1203,
	275, 1203,
	277, 1203,
	279, 1203,
	280, 1203,
	281, 1203,
	282, 1203,
	283, 1203,
	286, 1203,
	289, 1203,
	290, 1203,
	291, 1203,
	292, 1203,
	295, 1203,
	296, 1203,
	297, 1203,
	299, 1203,
	301, 1203,
	302, 1203,
	303, 1203,
	304, 1203,
	305, 1203,
	306, 1203,
	307, 1203,
	308, 1203,
	309, 1203,
	310, 1203,
	311, 1203,
	313, 1203,
	314, 1203,
	315, 1203,
	316, 1203,
	317, 1203,
	318, 1203,
	319, 1203,
	320, 1203,
	321, 1203,
	323, 1203,
	325, 1203,
	326, 1203,
	327, 1203,
	328, 1203,
	329, 1203,
	330, 1203,
	331, 1203,
	332, 1203,
	333, 1203,
	334, 1203,
	335, 1203,
	342, 1203,
	344, 1203,
	345, 1203,
	346, 1203,
	347, 1203,
	348, 1203,
	349, 1203,
	350, 1203,
	351, 1203,
	353, 1203,
	354, 1203,
	355, 1203,
	357, 1203,
	358, 1203,
	359, 1203,
	360, 1203,
	361, 1203,
	362, 1203,
	364, 1203,
	365, 1203,
	366, 1203,
	367, 1203,
	368, 1203,
	369, 1203,
	370, 1203,
	371, 1203,
	372, 1203,
	374, 1203,
	375, 1203,
	376, 1203,
	377, 1203,
	378, 1203,
	379, 1203,
	381, 1203,
	382, 1203,
	383, 1203,
	384, 1203,
	385, 1203,
	387, 1203,
	388, 1203,
	389, 1203,
	391, 1203,
	393, 1203,
	394, 1203,
	395, 1203,
	396, 1203,
	397, 1203,
	398, 1203,
	399, 1203,
	400, 1203,
	401, 1203,
	402, 1203,
	403, 1203,
	404, 1203,
	405, 1203,
	407, 1203,
	408, 1203,
	410, 1203,
	412, 1203,
	413, 1203,
	414, 1203,
	415, 1203,
	416, 1203,
	417, 1203,
	418, 1203,
	420, 1203,
	421, 1203,
	422, 1203,
	423, 1203,
	424, 1203,
	426, 1203,
	428, 1203,
	429, 1203,
	430, 1203,
	431, 1203,
	432, 1203,
	434, 1203,
	435, 1203,
	436, 1203,
	438, 1203,
	439, 1203,
	442, 1203,
	443, 1203,
	444, 1203,
	445, 1203,
	446, 1203,
	447, 1203,
	448, 1203,
	450, 1203,
	453, 1203,
	454, 1203,
	455, 1203,
	456, 1203,
	457, 1203,
	458, 1203,
	460, 1203,
	461, 1203,
	462, 1203,
	467, 1203,
	468, 1203,
	469, 1203,
	470, 1203,
	471, 1203,
	472, 1203,
	-2, 0,
	-1, 130,
	1, 1077,
	218, 1077,
	323, 1077,
	331, 1077,
	475, 1077,
	499, 1077,
	-2, 0,
	-1, 132,
	1, 1077,
	499, 1077,
	-2, 0,
	-1, 133,
	1, 1077,
	499, 1077,
	-2, 0,
	-1, 134,
	1, 1077,
	425, 1077,
	499, 1077,
	-2, 0,
	-1, 161,
	133, 1171,
	151, 1171,
	164, 1171,
	211, 1171,
	241, 1171,
	284, 1171,
	294, 1171,
	440, 1171,
	-2, 1146,
	-1, 194,
	4, 1210,
	5, 1210,
	6, 1210,
	7, 1210,
	8, 1210,
	9, 1210,
	10, 1210,
	21, 1210,
	22, 1210,
	23, 1210,
	24, 1210,
	25, 1210,
	26, 1210,
	28, 1210,
	29, 1210,
	35, 1210,
	36, 1210,
	40, 1210,
	41, 1210,
	42, 1210,
	43, 1210,
	44, 1210,
	45, 1210,
	46, 1210,
	47, 1210,
	48, 1210,
	50, 1210,
	51, 1210,
	52, 1210,
	54, 1210,
	55, 1210,
	56, 1210,
	57, 1210,
	58, 1210,
	59, 1210,
	60, 1210,
	61, 1210,
	62, 1210,
	63, 1210,
	64, 1210,
	65, 1210,
	67, 1210,
	68, 1210,
	69, 1210,
	71, 1210,
	73, 1210,
	74, 1210,
	75, 1210,
	76, 1210,
	77, 1210,
	78, 1210,
	79, 1210,
	82, 1210,
	83, 1210,
	84, 1210,
	85, 1210,
	87, 1210,
	89, 1210,
	90, 1210,
	91, 1210,
	93, 1210,
	94, 1210,
	95, 1210,
	96, 1210,
	97, 1210,
	98, 1210,
	99, 1210,
	100, 1210,
	101, 1210,
	102, 1210,
	103, 1210,
	104, 1210,
	105, 1210,
	106, 1210,
	107, 1210,
	108, 1210,
	109, 1210,
	110, 1210,
	111, 1210,
	112, 1210,
	113, 1210,
	114, 1210,
	115, 1210,
	117, 1210,
	118, 1210,
	120, 1210,
	121, 1210,
	124, 1210,
	125, 1210,
	126, 1210,
	128, 1210,
	129, 1210,
	131, 1210,
	132, 1210,
	134, 1210,
	135, 1210,
	136, 1210,
	137, 1210,
	138, 1210,
	139, 1210,
	140, 1210,
	141, 1210,
	142, 1210,
	143, 1210,
	144, 1210,
	145, 1210,
	146, 1210,
	147, 1210,
	148, 1210,
	149, 1210,
	150, 1210,
	156, 1210,
	157, 1210,
	158, 1210,
	159, 1210,
	163, 1210,
	165, 1210,
	168, 1210,
	169, 1210,
	170, 1210,
	171, 1210,
	172, 1210,
	173, 1210,
	174, 1210,
	176, 1210,
	177, 1210,
	179, 1210,
	180, 1210,
	182, 1210,
	183, 1210,
	184, 1210,
	185, 1210,
	186, 1210,
	187, 1210,
	188, 1210,
	189, 1210,
	190, 1210,
	191, 1210,
	192, 1210,
	193, 1210,
	195, 1210,
	196, 1210,
	197, 1210,
	198, 1210,
	202, 1210,
	203, 1210,
	204, 1210,
	205, 1210,
	207, 1210,
	208, 1210,
	209, 1210,
	210, 1210,
	212, 1210,
	214, 1210,
	215, 1210,
	216, 1210,
	217, 1210,
	218, 1210,
	219, 1210,
	220, 1210,
	221, 1210,
	222, 1210,
	226, 1210,
	227, 1210,
	228, 1210,
	229, 1210,
	230, 1210,
	232, 1210,
	233, 1210,
	235, 1210,
	236, 1210,
	237, 1210,
	238, 1210,
	239, 1210,
	240, 1210,
	242, 1210,
	243, 1210,
	244, 1210,
	245, 1210,
	246, 1210,
	247, 1210,
	248, 1210,
	249, 1210,
	250, 1210,
	252, 1210,
	253, 1210,
	254, 1210,
	255, 1210,
	256, 1210,
	257, 1210,
	258, 1210,
	259, 1210,
	260, 1210,
	261, 1210,
	262, 1210,
	264, 1210,
	265, 1210,
	266, 1210,
	267, 1210,
	268, 1210,
	269, 1210,
	270, 1210,
	271, 1210,
	272, 1210,
	273, 1210,
	274, 1210,
	275, 1210,
	276, 1210,
	277, 1210,
	278, 1210,
	279, 1210,
	280, 1210,
	281, 1210,
	282, 1210,
	283, 1210,
	286, 1210,
	290, 1210,
	291, 1210,
	292, 1210,
	295, 1210,
	296, 1210,
	297, 1210,
	298, 1210,
	299, 1210,
	300, 1210,
	301, 1210,
	302, 1210,
	303, 1210,
	304, 1210,
	305, 1210,
	306, 1210,
	307, 1210,
	308, 1210,
	309, 1210,
	310, 1210,
	311, 1210,
	313, 1210,
	314, 1210,
	315, 1210,
	316, 1210,
	317, 1210,
	318, 1210,
	319, 1210,
	320, 1210,
	321, 1210,
	323, 1210,
	325, 1210,
	326, 1210,
	327, 1210,
	328, 1210,
	329, 1210,
	330, 1210,
	331, 1210,
	332, 1210,
	333, 1210,
	334, 1210,
	335, 1210,
	342, 1210,
	344, 1210,
	345, 1210,
	346, 1210,
	347, 1210,
	348, 1210,
	349, 1210,
	350, 1210,
	351, 1210,
	353, 1210,
	354, 1210,
	355, 1210,
	356, 1210,
	357, 1210,
	358, 1210,
	359, 1210,
	360, 1210,
	361, 1210,
	362, 1210,
	364, 1210,
	365, 1210,
	366, 1210,
	367, 1210,
	368, 1210,
	369, 1210,
	370, 1210,
	371, 1210,
	372, 1210,
	374, 1210,
	375, 1210,
	376, 1210,
	377, 1210,
	378, 1210,
	379, 1210,
	380, 1210,
	381, 1210,
	382, 1210,
	383, 1210,
	384, 1210,
	385, 1210,
	386, 1210,
	387, 1210,
	388, 1210,
	389, 1210,
	391, 1210,
	393, 1210,
	394, 1210,
	395, 1210,
	396, 1210,
	397, 1210,
	398, 1210,
	399, 1210,
	400, 1210,
	401, 1210,
	402, 1210,
	403, 1210,
	404, 1210,
	405, 1210,
	407, 1210,
	408, 1210,
	409, 1210,
	410, 1210,
	412, 1210,
	413, 1210,
	414, 1210,
	415, 1210,
	416, 1210,
	417, 1210,
	418, 1210,
	420, 1210,
	421, 1210,
	422, 1210,
	423, 1210,
	424, 1210,
	426, 1210,
	428, 1210,
	429, 1210,
	430, 1210,
	431, 1210,
	432, 1210,
	433, 1210,
	434, 1210,
	435, 1210,
	436, 1210,
	438, 1210,
	439, 1210,
	441, 1210,
	442, 1210,
	443, 1210,
	444, 1210,
	445, 1210,
	446, 1210,
	447, 1210,
	448, 1210,
	449, 1210,
	450, 1210,
	453, 1210,
	454, 1210,
	455, 1210,
	456, 1210,
	457, 1210,
	458, 1210,
	460, 1210,
	461, 1210,
	462, 1210,
	467, 1210,
	468, 1210,
	469, 1210,
	470, 1210,
	471, 1210,
	472, 1210,
	473, 1210,
	480, 1210,
	487, 1210,
	488, 1210,
	489, 1210,
	496, 1210,
	500, 1210,
	-2, 0,
	-1, 591,
	167, 1916,
	425, 1916,
	479, 1916,
	498, 1916,
	-2, 0,
	-1, 592,
	167, 1998,
	425, 1998,
	479, 1998,
	498, 1998,
	-2, 0,
	-1, 593,
	167, 1904,
	425, 1904,
	479, 1904,
	498, 1904,
	-2, 0,
	-1, 595,
	167, 2093,
	425, 2093,
	479, 2093,
	498, 2093,
	-2, 0,
	-1, 597,
	167, 2122,
	425, 2122,
	479, 2122,
	498, 2122,
	-2, 0,
	-1, 604,
	167, 2013,
	425, 2013,
	479, 2013,
	498, 2013,
	-2, 567,
	-1, 633,
	498, 1857,
	501, 1857,
	-2, 785,
	-1, 634,
	498, 1859,
	501, 1859,
	-2, 786,
	-1, 635,
	498, 1858,
	501, 1858,
	-2, 787,
	-1, 636,
	501, 1792,
	-2, 788,
	-1, 657,
	164, 196,
	-2, 0,
	-1, 680,
	460, 1002,
	-2, 824,
	-1, 718,
	4, 1023,
	21, 1023,
	22, 1023,
	23, 1023,
	24, 1023,
	25, 1023,
	26, 1023,
	28, 1023,
	29, 1023,
	35, 1023,
	40, 1023,
	41, 1023,
	42, 1023,
	43, 1023,
	44, 1023,
	45, 1023,
	46, 1023,
	47, 1023,
	48, 1023,
	50, 1023,
	51, 1023,
	52, 1023,
	54, 1023,
	55, 1023,
	56, 1023,
	57, 1023,
	58, 1023,
	62, 1023,
	63, 1023,
	64, 1023,
	65, 1023,
	67, 1023,
	68, 1023,
	69, 1023,
	73, 1023,
	74, 1023,
	75, 1023,
	76, 1023,
	77, 1023,
	78, 1023,
	79, 1023,
	82, 1023,
	83, 1023,
	84, 1023,
	85, 1023,
	87, 1023,
	89, 1023,
	90, 1023,
	91, 1023,
	93, 1023,
	95, 1023,
	96, 1023,
	104, 1023,
	105, 1023,
	106, 1023,
	107, 1023,
	109, 1023,
	110, 1023,
	111, 1023,
	113, 1023,
	114, 1023,
	115, 1023,
	117, 1023,
	118, 1023,
	120, 1023,
	121, 1023,
	124, 1023,
	125, 1023,
	126, 1023,
	128, 1023,
	129, 1023,
	131, 1023,
	132, 1023,
	134, 1023,
	135, 1023,
	136, 1023,
	137, 1023,
	138, 1023,
	139, 1023,
	140, 1023,
	141, 1023,
	142, 1023,
	143, 1023,
	144, 1023,
	145, 1023,
	146, 1023,
	147, 1023,
	148, 1023,
	150, 1023,
	156, 1023,
	157, 1023,
	158, 1023,
	159, 1023,
	163, 1023,
	165, 1023,
	169, 1023,
	170, 1023,
	171, 1023,
	172, 1023,
	173, 1023,
	174, 1023,
	176, 1023,
	177, 1023,
	179, 1023,
	180, 1023,
	182, 1023,
	183, 1023,
	184, 1023,
	185, 1023,
	186, 1023,
	187, 1023,
	188, 1023,
	189, 1023,
	190, 1023,
	192, 1023,
	193, 1023,
	195, 1023,
	196, 1023,
	197, 1023,
	198, 1023,
	202, 1023,
	203, 1023,
	204, 1023,
	205, 1023,
	208, 1023,
	209, 1023,
	210, 1023,
	212, 1023,
	214, 1023,
	216, 1023,
	218, 1023,
	219, 1023,
	220, 1023,
	222, 1023,
	226, 1023,
	227, 1023,
	228, 1023,
	229, 1023,
	230, 1023,
	232, 1023,
	233, 1023,
	235, 1023,
	236, 1023,
	238, 1023,
	239, 1023,
	242, 1023,
	243, 1023,
	244, 1023,
	247, 1023,
	248, 1023,
	249, 1023,
	250, 1023,
	252, 1023,
	253, 1023,
	254, 1023,
	255, 1023,
	256, 1023,
	257, 1023,
	258, 1023,
	259, 1023,
	260, 1023,
	261, 1023,
	262, 1023,
	264, 1023,
	266, 1023,
	267, 1023,
	268, 1023,
	269, 1023,
	270, 1023,
	271, 1023,
	273, 1023,
	275, 1023,
	277, 1023,
	279, 1023,
	280, 1023,
	281, 1023,
	282, 1023,
	283, 1023,
	286, 1023,
	290, 1023,
	291, 1023,
	292, 1023,
	295, 1023,
	296, 1023,
	297, 1023,
	299, 1023,
	301, 1023,
	302, 1023,
	303, 1023,
	304, 1023,
	305, 1023,
	306, 1023,
	307, 1023,
	308, 1023,
	309, 1023,
	310, 1023,
	311, 1023,
	313, 1023,
	314, 1023,
	315, 1023,
	316, 1023,
	317, 1023,
	318, 1023,
	319, 1023,
	320, 1023,
	321, 1023,
	323, 1023,
	325, 1023,
	326, 1023,
	327, 1023,
	328, 1023,
	329, 1023,
	330, 1023,
	331, 1023,
	332, 1023,
	333, 1023,
	334, 1023,
	335, 1023,
	342, 1023,
	344, 1023,
	345, 1023,
	346, 1023,
	347, 1023,
	348, 1023,
	349, 1023,
	350, 1023,
	351, 1023,
	353, 1023,
	354, 1023,
	355, 1023,
	357, 1023,
	358, 1023,
	359, 1023,
	360, 1023,
	361, 1023,
	362, 1023,
	364, 1023,
	365, 1023,
	366, 1023,
	367, 1023,
	368, 1023,
	369, 1023,
	370, 1023,
	371, 1023,
	372, 1023,
	374, 1023,
	375, 1023,
	376, 1023,
	377, 1023,
	378, 1023,
	379, 1023,
	381, 1023,
	382, 1023,
	383, 1023,
	384, 1023,
	385, 1023,
	387, 1023,
	388, 1023,
	389, 1023,
	391, 1023,
	393, 1023,
	394, 1023,
	395, 1023,
	396, 1023,
	397, 1023,
	398, 1023,
	399, 1023,
	400, 1023,
	401, 1023,
	402, 1023,
	403, 1023,
	404, 1023,
	405, 1023,
	407, 1023,
	408, 1023,
	410, 1023,
	412, 1023,
	413, 1023,
	414, 1023,
	415, 1023,
	416, 1023,
	417, 1023,
	418, 1023,
	420, 1023,
	421, 1023,
	422, 1023,
	423, 1023,
	424, 1023,
	426, 1023,
	428, 1023,
	429, 1023,
	430, 1023,
	431, 1023,
	432, 1023,
	434, 1023,
	435, 1023,
	436, 1023,
	438, 1023,
	439, 1023,
	442, 1023,
	443, 1023,
	444, 1023,
	445, 1023,
	446, 1023,
	447, 1023,
	448, 1023,
	450, 1023,
	453, 1023,
	454, 1023,
	455, 1023,
	456, 1023,
	457, 1023,
	458, 1023,
	460, 1023,
	461, 1023,
	462, 1023,
	467, 1023,
	468, 1023,
	469, 1023,
	470, 1023,
	471, 1023,
	472, 1023,
	-2, 0,
	-1, 783,
	327, 712,
	379, 712,
	-2, 0,
	-1, 784,
	327, 711,
	379, 711,
	-2, 659,
	-1, 788,
	1, 741,
	495, 741,
	497, 741,
	499, 741,
	-2, 0,
	-1, 789,
	1, 784,
	164, 784,
	495, 784,
	497, 784,
	499, 784,
	-2, 0,
	-1, 797,
	1, 715,
	495, 715,
	497, 715,
	499, 715,
	-2, 0,
	-1, 800,
	1, 741,
	495, 741,
	497, 741,
	499, 741,
	-2, 0,
	-1, 801,
	1, 743,
	495, 743,
	497, 743,
	499, 743,
	-2, 0,
	-1, 802,
	1, 746,
	495, 746,
	497, 746,
	499, 746,
	-2, 0,
	-1, 808,
	1, 763,
	495, 763,
	497, 763,
	499, 763,
	-2, 0,
	-1, 809,
	1, 765,
	495, 765,
	497, 765,
	499, 765,
	-2, 0,
	-1, 855,
	151, 1212,
	164, 1212,
	241, 1212,
	284, 1212,
	-2, 1150,
	-1, 869,
	151, 1211,
	164, 1211,
	241, 1211,
	284, 1211,
	-2, 1147,
	-1, 895,
	498, 1856,
	-2, 575,
	-1, 923,
	5, 1848,
	496, 1846,
	-2, 1837,
	-1, 931,
	5, 1869,
	496, 1866,
	-2, 1857,
	-1, 932,
	5, 1870,
	496, 1867,
	-2, 1858,
	-1, 940,
	498, 1854,
	-2, 1836,
	-1, 941,
	496, 2200,
	-2, 1855,
	-1, 964,
	496, 2199,
	-2, 1871,
	-1, 965,
	5, 1376,
	-2, 2170,
	-1, 966,
	5, 1377,
	-2, 2171,
	-1, 967,
	5, 1378,
	-2, 2185,
	-1, 968,
	5, 1379,
	-2, 2150,
	-1, 969,
	5, 1380,
	-2, 2183,
	-1, 970,
	5, 1388,
	-2, 2162,
	-1, 971,
	5, 1375,
	-2, 2158,
	-1, 972,
	5, 1375,
	-2, 2157,
	-1, 973,
	5, 1375,
	-2, 2176,
	-1, 974,
	5, 1386,
	-2, 2152,
	-1, 975,
	5, 1391,
	-2, 2151,
	-1, 976,
	5, 1393,
	-2, 2195,
	-1, 979,
	5, 1415,
	-2, 2188,
	-1, 980,
	5, 1407,
	-2, 2189,
	-1, 981,
	5, 1415,
	-2, 2190,
	-1, 982,
	5, 1411,
	-2, 2191,
	-1, 983,
	5, 1362,
	-2, 2163,
	-1, 984,
	5, 1363,
	-2, 2164,
	-1, 1011,
	5, 1398,
	-2, 2196,
	-1, 1012,
	5, 1399,
	-2, 2186,
	-1, 1013,
	5, 1400,
	461, 1400,
	-2, 2153,
	-1, 1014,
	5, 1401,
	461, 1401,
	-2, 2154,
	-1, 1051,
	496, 1866,
	-2, 1857,
	-1, 1052,
	496, 1867,
	-2, 1858,
	-1, 1081,
	167, 2122,
	425, 2122,
	479, 2122,
	498, 2122,
	-2, 0,
	-1, 1084,
	1, 553,
	499, 553,
	-2, 1085,
	-1, 1209,
	344, 1832,
	489, 1832,
	-2, 1830,
	-1, 1221,
	500, 1832,
	-2, 1833,
	-1, 1225,
	1, 999,
	495, 999,
	497, 999,
	499, 999,
	-2, 1199,
	-1, 1273,
	333, 823,
	460, 823,
	-2, 300,
	-1, 1296,
	1, 999,
	495, 999,
	497, 999,
	499, 999,
	-2, 1199,
	-1, 1302,
	4, 1023,
	21, 1023,
	22, 1023,
	23, 1023,
	24, 1023,
	25, 1023,
	26, 1023,
	28, 1023,
	29, 1023,
	35, 1023,
	40, 1023,
	41, 1023,
	42, 1023,
	43, 1023,
	44, 1023,
	45, 1023,
	46, 1023,
	47, 1023,
	48, 1023,
	50, 1023,
	51, 1023,
	52, 1023,
	54, 1023,
	55, 1023,
	56, 1023,
	57, 1023,
	58, 1023,
	62, 1023,
	63, 1023,
	64, 1023,
	65, 1023,
	67, 1023,
	68, 1023,
	69, 1023,
	73, 1023,
	74, 1023,
	75, 1023,
	76, 1023,
	77, 1023,
	78, 1023,
	79, 1023,
	82, 1023,
	83, 1023,
	84, 1023,
	85, 1023,
	87, 1023,
	89, 1023,
	90, 1023,
	91, 1023,
	93, 1023,
	95, 1023,
	96, 1023,
	104, 1023,
	105, 1023,
	106, 1023,
	107, 1023,
	109, 1023,
	110, 1023,
	111, 1023,
	113, 1023,
	114, 1023,
	115, 1023,
	117, 1023,
	118, 1023,
	120, 1023,
	121, 1023,
	124, 1023,
	125, 1023,
	126, 1023,
	128, 1023,
	129, 1023,
	131, 1023,
	132, 1023,
	134, 1023,
	135, 1023,
	136, 1023,
	137, 1023,
	138, 1023,
	139, 1023,
	140, 1023,
	141, 1023,
	142, 1023,
	143, 1023,
	144, 1023,
	145, 1023,
	146, 1023,
	147, 1023,
	148, 1023,
	156, 1023,
	157, 1023,
	158, 1023,
	159, 1023,
	163, 1023,
	165, 1023,
	169, 1023,
	170, 1023,
	171, 1023,
	172, 1023,
	173, 1023,
	174, 1023,
	176, 1023,
	177, 1023,
	179, 1023,
	180, 1023,
	182, 1023,
	183, 1023,
	184, 1023,
	185, 1023,
	186, 1023,
	187, 1023,
	188, 1023,
	189, 1023,
	190, 1023,
	192, 1023,
	193, 1023,
	195, 1023,
	196, 1023,
	197, 1023,
	198, 1023,
	203, 1023,
	204, 1023,
	205, 1023,
	208, 1023,
	209, 1023,
	210, 1023,
	212, 1023,
	214, 1023,
	216, 1023,
	218, 1023,
	219, 1023,
	220, 1023,
	222, 1023,
	226, 1023,
	227, 1023,
	228, 1023,
	229, 1023,
	230, 1023,
	232, 1023,
	233, 1023,
	235, 1023,
	236, 1023,
	238, 1023,
	239, 1023,
	242, 1023,
	243, 1023,
	244, 1023,
	247, 1023,
	248, 1023,
	249, 1023,
	250, 1023,
	252, 1023,
	253, 1023,
	254, 1023,
	255, 1023,
	256, 1023,
	257, 1023,
	258, 1023,
	259, 1023,
	260, 1023,
	261, 1023,
	262, 1023,
	264, 1023,
	266, 1023,
	267, 1023,
	268, 1023,
	269, 1023,
	270, 1023,
	271, 1023,
	273, 1023,
	277, 1023,
	279, 1023,
	280, 1023,
	281, 1023,
	282, 1023,
	283, 1023,
	286, 1023,
	288, 1023,
	290, 1023,
	291, 1023,
	292, 1023,
	295, 1023,
	296, 1023,
	297, 1023,
	299, 1023,
	301, 1023,
	302, 1023,
	303, 1023,
	304, 1023,
	305, 1023,
	306, 1023,
	307, 1023,
	308, 1023,
	309, 1023,
	310, 1023,
	311, 1023,
	313, 1023,
	314, 1023,
	315, 1023,
	316, 1023,
	317, 1023,
	318, 1023,
	319, 1023,
	320, 1023,
	321, 1023,
	323, 1023,
	325, 1023,
	326, 1023,
	327, 1023,
	328, 1023,
	329, 1023,
	330, 1023,
	331, 1023,
	332, 1023,
	333, 1023,
	334, 1023,
	335, 1023,
	342, 1023,
	344, 1023,
	345, 1023,
	346, 1023,
	347, 1023,
	348, 1023,
	349, 1023,
	350, 1023,
	351, 1023,
	353, 1023,
	354, 1023,
	355, 1023,
	357, 1023,
	358, 1023,
	359, 1023,
	360, 1023,
	361, 1023,
	362, 1023,
	364, 1023,
	365, 1023,
	366, 1023,
	367, 1023,
	368, 1023,
	369, 1023,
	370, 1023,
	371, 1023,
	372, 1023,
	374, 1023,
	375, 1023,
	376, 1023,
	377, 1023,
	378, 1023,
	379, 1023,
	381, 1023,
	382, 1023,
	383, 1023,
	384, 1023,
	385, 1023,
	387, 1023,
	388, 1023,
	389, 1023,
	391, 1023,
	393, 1023,
	394, 1023,
	395, 1023,
	396, 1023,
	397, 1023,
	398, 1023,
	399, 1023,
	400, 1023,
	401, 1023,
	402, 1023,
	403, 1023,
	404, 1023,
	405, 1023,
	407, 1023,
	408, 1023,
	410, 1023,
	412, 1023,
	413, 1023,
	414, 1023,
	415, 1023,
	416, 1023,
	417, 1023,
	418, 1023,
	420, 1023,
	421, 1023,
	422, 1023,
	423, 1023,
	424, 1023,
	426, 1023,
	428, 1023,
	429, 1023,
	430, 1023,
	431, 1023,
	432, 1023,
	434, 1023,
	435, 1023,
	436, 1023,
	438, 1023,
	439, 1023,
	442, 1023,
	443, 1023,
	444, 1023,
	445, 1023,
	446, 1023,
	447, 1023,
	448, 1023,
	450, 1023,
	453, 1023,
	454, 1023,
	455, 1023,
	456, 1023,
	457, 1023,
	458, 1023,
	460, 1023,
	461, 1023,
	462, 1023,
	467, 1023,
	468, 1023,
	469, 1023,
	470, 1023,
	471, 1023,
	472, 1023,
	-2, 0,
	-1, 1367,
	1, 428,
	495, 428,
	497, 428,
	499, 428,
	-2, 1170,
	-1, 1370,
	4, 2194,
	11, 2194,
	12, 2194,
	14, 2194,
	15, 2194,
	16, 2194,
	17, 2194,
	18, 2194,
	19, 2194,
	21, 2194,
	22, 2194,
	23, 2194,
	24, 2194,
	25, 2194,
	26, 2194,
	28, 2194,
	29, 2194,
	32, 2194,
	33, 2194,
	35, 2194,
	37, 2194,
	40, 2194,
	41, 2194,
	42, 2194,
	43, 2194,
	44, 2194,
	45, 2194,
	46, 2194,
	47, 2194,
	48, 2194,
	50, 2194,
	51, 2194,
	52, 2194,
	54, 2194,
	55, 2194,
	56, 2194,
	57, 2194,
	58, 2194,
	62, 2194,
	63, 2194,
	64, 2194,
	65, 2194,
	67, 2194,
	68, 2194,
	69, 2194,
	70, 2194,
	73, 2194,
	74, 2194,
	75, 2194,
	76, 2194,
	77, 2194,
	78, 2194,
	79, 2194,
	80, 2194,
	82, 2194,
	83, 2194,
	84, 2194,
	85, 2194,
	87, 2194,
	88, 2194,
	89, 2194,
	90, 2194,
	91, 2194,
	93, 2194,
	94, 2194,
	95, 2194,
	96, 2194,
	104, 2194,
	105, 2194,
	106, 2194,
	107, 2194,
	109, 2194,
	110, 2194,
	111, 2194,
	113, 2194,
	114, 2194,
	115, 2194,
	117, 2194,
	118, 2194,
	120, 2194,
	121, 2194,
	124, 2194,
	125, 2194,
	126, 2194,
	128, 2194,
	129, 2194,
	131, 2194,
	132, 2194,
	134, 2194,
	135, 2194,
	136, 2194,
	137, 2194,
	138, 2194,
	139, 2194,
	140, 2194,
	141, 2194,
	142, 2194,
	143, 2194,
	144, 2194,
	145, 2194,
	146, 2194,
	147, 2194,
	148, 2194,
	152, 2194,
	153, 2194,
	154, 2194,
	155, 2194,
	156, 2194,
	157, 2194,
	158, 2194,
	159, 2194,
	162, 2194,
	163, 2194,
	165, 2194,
	168, 2194,
	169, 2194,
	170, 2194,
	171, 2194,
	172, 2194,
	173, 2194,
	174, 2194,
	176, 2194,
	177, 2194,
	179, 2194,
	180, 2194,
	182, 2194,
	183, 2194,
	184, 2194,
	185, 2194,
	186, 2194,
	187, 2194,
	188, 2194,
	189, 2194,
	190, 2194,
	191, 2194,
	192, 2194,
	193, 2194,
	194, 2194,
	195, 2194,
	196, 2194,
	197, 2194,
	198, 2194,
	200, 2194,
	201, 2194,
	203, 2194,
	204, 2194,
	205, 2194,
	207, 2194,
	208, 2194,
	209, 2194,
	210, 2194,
	212, 2194,
	214, 2194,
	215, 2194,
	216, 2194,
	217, 2194,
	218, 2194,
	219, 2194,
	220, 2194,
	221, 2194,
	222, 2194,
	224, 2194,
	225, 2194,
	226, 2194,
	227, 2194,
	228, 2194,
	229, 2194,
	230, 2194,
	232, 2194,
	233, 2194,
	235, 2194,
	236, 2194,
	237, 2194,
	238, 2194,
	239, 2194,
	240, 2194,
	242, 2194,
	243, 2194,
	244, 2194,
	247, 2194,
	248, 2194,
	249, 2194,
	250, 2194,
	251, 2194,
	252, 2194,
	253, 2194,
	254, 2194,
	255, 2194,
	256, 2194,
	257, 2194,
	258, 2194,
	259, 2194,
	260, 2194,
	261, 2194,
	262, 2194,
	264, 2194,
	265, 2194,
	266, 2194,
	267, 2194,
	268, 2194,
	269, 2194,
	270, 2194,
	271, 2194,
	273, 2194,
	276, 2194,
	277, 2194,
	279, 2194,
	280, 2194,
	281, 2194,
	282, 2194,
	283, 2194,
	286, 2194,
	290, 2194,
	291, 2194,
	292, 2194,
	293, 2194,
	295, 2194,
	296, 2194,
	297, 2194,
	299, 2194,
	301, 2194,
	302, 2194,
	303, 2194,
	304, 2194,
	305, 2194,
	306, 2194,
	307, 2194,
	308, 2194,
	309, 2194,
	310, 2194,
	311, 2194,
	313, 2194,
	314, 2194,
	315, 2194,
	316, 2194,
	317, 2194,
	318, 2194,
	319, 2194,
	320, 2194,
	321, 2194,
	323, 2194,
	325, 2194,
	326, 2194,
	327, 2194,
	328, 2194,
	329, 2194,
	330, 2194,
	331, 2194,
	332, 2194,
	333, 2194,
	334, 2194,
	335, 2194,
	342, 2194,
	343, 2194,
	344, 2194,
	345, 2194,
	346, 2194,
	347, 2194,
	348, 2194,
	349, 2194,
	350, 2194,
	351, 2194,
	353, 2194,
	354, 2194,
	355, 2194,
	356, 2194,
	357, 2194,
	358, 2194,
	359, 2194,
	360, 2194,
	361, 2194,
	362, 2194,
	363, 2194,
	364, 2194,
	365, 2194,
	366, 2194,
	367, 2194,
	368, 2194,
	369, 2194,
	370, 2194,
	371, 2194,
	372, 2194,
	374, 2194,
	375, 2194,
	376, 2194,
	377, 2194,
	378, 2194,
	379, 2194,
	381, 2194,
	382, 2194,
	383, 2194,
	384, 2194,
	385, 2194,
	386, 2194,
	387, 2194,
	388, 2194,
	389, 2194,
	391, 2194,
	393, 2194,
	394, 2194,
	395, 2194,
	396, 2194,
	397, 2194,
	398, 2194,
	399, 2194,
	400, 2194,
	401, 2194,
	402, 2194,
	403, 2194,
	404, 2194,
	405, 2194,
	407, 2194,
	408, 2194,
	410, 2194,
	412, 2194,
	413, 2194,
	414, 2194,
	415, 2194,
	416, 2194,
	417, 2194,
	418, 2194,
	420, 2194,
	421, 2194,
	422, 2194,
	423, 2194,
	424, 2194,
	426, 2194,
	428, 2194,
	429, 2194,
	430, 2194,
	431, 2194,
	432, 2194,
	434, 2194,
	435, 2194,
	436, 2194,
	438, 2194,
	439, 2194,
	442, 2194,
	443, 2194,
	444, 2194,
	445, 2194,
	446, 2194,
	447, 2194,
	448, 2194,
	450, 2194,
	453, 2194,
	454, 2194,
	455, 2194,
	456, 2194,
	457, 2194,
	458, 2194,
	460, 2194,
	461, 2194,
	462, 2194,
	467, 2194,
	468, 2194,
	469, 2194,
	470, 2194,
	471, 2194,
	472, 2194,
	473, 2194,
	474, 2194,
	477, 2194,
	478, 2194,
	479, 2194,
	480, 2194,
	481, 2194,
	482, 2194,
	484, 2194,
	485, 2194,
	486, 2194,
	487, 2194,
	488, 2194,
	489, 2194,
	490, 2194,
	491, 2194,
	492, 2194,
	494, 2194,
	497, 2194,
	498, 2194,
	500, 2194,
	501, 2194,
	-2, 0,
	-1, 1375,
	167, 2093,
	425, 2093,
	479, 2093,
	498, 2093,
	-2, 0,
	-1, 1409,
	327, 712,
	379, 712,
	-2, 0,
	-1, 1433,
	1, 707,
	495, 707,
	497, 707,
	499, 707,
	-2, 0,
	-1, 1434,
	1, 732,
	495, 732,
	497, 732,
	499, 732,
	-2, 0,
	-1, 1435,
	1, 714,
	495, 714,
	497, 714,
	499, 714,
	-2, 0,
	-1, 1437,
	1, 718,
	495, 718,
	497, 718,
	499, 718,
	-2, 0,
	-1, 1465,
	1, 2142,
	495, 2142,
	497, 2142,
	498, 2142,
	499, 2142,
	-2, 761,
	-1, 1466,
	1, 2090,
	495, 2090,
	497, 2090,
	498, 2090,
	499, 2090,
	-2, 762,
	-1, 1481,
	1, 1080,
	499, 1080,
	-2, 1085,
	-1, 1484,
	151, 1211,
	164, 1211,
	241, 1211,
	284, 1211,
	-2, 1151,
	-1, 1579,
	133, 1172,
	151, 1172,
	164, 1172,
	211, 1172,
	241, 1172,
	284, 1172,
	294, 1172,
	440, 1172,
	-2, 1576,
	-1, 1639,
	497, 1726,
	-2, 0,
	-1, 1674,
	133, 1172,
	151, 1172,
	164, 1172,
	211, 1172,
	241, 1172,
	284, 1172,
	294, 1172,
	440, 1172,
	-2, 1292,
	-1, 1721,
	496, 1403,
	-2, 1391,
	-1, 1754,
	1, 555,
	499, 555,
	-2, 1085,
	-1, 1967,
	1, 709,
	495, 709,
	497, 709,
	499, 709,
	-2, 0,
	-1, 1968,
	1, 734,
	495, 734,
	497, 734,
	499, 734,
	-2, 0,
	-1, 2041,
	361, 1238,
	362, 1238,
	-2, 1436,
	-1, 2072,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1456,
	-1, 2073,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1457,
	-1, 2074,
	88, 0,
	224, 0,
	225, 0,
	481, 0,
	482, 0,
	-2, 1458,
	-1, 2075,
	88, 0,
	224, 0,
	225, 0,
	481, 0,
	482, 0,
	-2, 1459,
	-1, 2076,
	88, 0,
	224, 0,
	225, 0,
	481, 0,
	482, 0,
	-2, 1460,
	-1, 2077,
	88, 0,
	224, 0,
	225, 0,
	481, 0,
	482, 0,
	-2, 1461,
	-1, 2078,
	88, 0,
	224, 0,
	225, 0,
	481, 0,
	482, 0,
	-2, 1462,
	-1, 2079,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1463,
	-1, 2091,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1475,
	-1, 2092,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1476,
	-1, 2093,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1477,
	-1, 2096,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1482,
	-1, 2102,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1486,
	-1, 2104,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1494,
	-1, 2105,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1495,
	-1, 2106,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1496,
	-1, 2107,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1497,
	-1, 2219,
	5, 1869,
	167, 1737,
	496, 1866,
	-2, 1857,
	-1, 2220,
	167, 1738,
	-2, 2146,
	-1, 2221,
	167, 1739,
	-2, 2012,
	-1, 2222,
	167, 1740,
	-2, 1927,
	-1, 2223,
	167, 1741,
	-2, 1969,
	-1, 2224,
	167, 1742,
	-2, 2007,
	-1, 2225,
	167, 1743,
	-2, 2088,
	-1, 2226,
	167, 1744,
	-2, 1559,
	-1, 2295,
	1, 1293,
	2, 1293,
	94, 1293,
	133, 1293,
	151, 1293,
	164, 1293,
	168, 1293,
	178, 1293,
	181, 1293,
	207, 1293,
	211, 1293,
	221, 1293,
	237, 1293,
	241, 1293,
	265, 1293,
	284, 1293,
	288, 1293,
	294, 1293,
	352, 1293,
	356, 1293,
	440, 1293,
	451, 1293,
	464, 1293,
	465, 1293,
	466, 1293,
	475, 1293,
	495, 1293,
	497, 1293,
	499, 1293,
	501, 1293,
	-2, 1292,
	-1, 2308,
	496, 1838,
	-2, 1852,
	-1, 2332,
	496, 1402,
	-2, 1392,
	-1, 2444,
	1, 999,
	495, 999,
	497, 999,
	499, 999,
	-2, 1199,
	-1, 2599,
	289, 1241,
	-2, 2184,
	-1, 2600,
	289, 1242,
	-2, 2076,
	-1, 2604,
	361, 1803,
	362, 1803,
	-2, 1557,
	-1, 2605,
	361, 1807,
	362, 1807,
	-2, 1558,
	-1, 2606,
	361, 1804,
	362, 1804,
	-2, 1557,
	-1, 2607,
	361, 1808,
	362, 1808,
	-2, 1558,
	-1, 2620,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1484,
	-1, 2621,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1488,
	-1, 2627,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1490,
	-1, 2824,
	218, 1085,
	323, 1085,
	331, 1085,
	475, 1085,
	-2, 552,
	-1, 2939,
	1, 999,
	495, 999,
	497, 999,
	499, 999,
	-2, 1199,
	-1, 3030,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1492,
	-1, 3037,
	215, 0,
	217, 0,
	276, 0,
	-2, 1511,
	-1, 3104,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1540,
	-1, 3105,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1541,
	-1, 3106,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1542,
	-1, 3110,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1546,
	-1, 3111,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1547,
	-1, 3112,
	14, 0,
	15, 0,
	16, 0,
	477, 0,
	478, 0,
	479, 0,
	-2, 1548,
	-1, 3158,
	496, 1839,
	-2, 1853,
	-1, 3267,
	498, 2300,
	-2, 1129,
	-1, 3318,
	215, 0,
	217, 0,
	276, 0,
	-2, 1512,
	-1, 3321,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1515,
	-1, 3322,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1517,
	-1, 3517,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1516,
	-1, 3518,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 1518,
	-1, 3529,
	215, 0,
	-2, 1549,
	-1, 3672,
	215, 0,
	-2, 1550,
	-1, 3824,
	47, 0,
	191, 0,
	240, 0,
	386, 0,
	473, 0,
	480, 0,
	-2, 2149,
}

const sqlPrivate = 57344

const sqlLast = 94275

var sqlAct = [...]int{

	229, 3602, 3823, 3560, 3834, 3449, 3717, 3793, 3931, 3563,
	3799, 2522, 3694, 2754, 2925, 3778, 3301, 3781, 1241, 3835,
	3548, 3763, 3881, 3836, 3180, 1939, 2496, 3609, 3069, 2364,
	2755, 3676, 1055, 3475, 3480, 3506, 879, 3822, 2051, 2841,
	3259, 2954, 3433, 3618, 896, 1361, 3440, 3462, 1362, 1090,
	3215, 36, 3442, 1708, 3640, 3385, 1228, 2119, 2947, 3238,
	1926, 2921, 1493, 2059, 3485, 3228, 3022, 602, 635, 3181,
	2531, 3534, 2423, 1113, 1805, 2949, 2052, 2613, 2459, 2485,
	2251, 2468, 1383, 1680, 1206, 2533, 1044, 2797, 2769, 635,
	3357, 3300, 1709, 2777, 2737, 2541, 878, 153, 729, 2471,
	2530, 2524, 1417, 2480, 2758, 1850, 2497, 2482, 1814, 1649,
	1849, 2366, 2288, 3129, 2760, 2287, 2736, 2056, 4, 2401,
	870, 1587, 2132, 1214, 1289, 1625, 3677, 630, 2540, 1924,
	1846, 2435, 2469, 223, 2597, 1837, 222, 3603, 1830, 1946,
	2290, 927, 1097, 1790, 2163, 1792, 1650, 2400, 2161, 1481,
	2269, 2152, 2248, 2116, 1342, 1669, 2023, 2040, 2021, 1780,
	1358, 1368, 2490, 2923, 1352, 932, 1881, 1294, 2803, 2356,
	636, 637, 1086, 1038, 570, 934, 2155, 1659, 2277, 2534,
	153, 1211, 1035, 2259, 1017, 1571, 2215, 556, 1494, 1230,
	1620, 578, 2133, 977, 2205, 1495, 586, 1052, 632, 680,
	1382, 640, 723, 161, 643, 2022, 2024, 1880, 1366, 162,
	705, 1238, 596, 1804, 2045, 908, 573, 41, 40, 38,
	29, 1015, 640, 27, 25, 643, 581, 1500, 778, 1040,
	2648, 1480, 1901, 795, 66, 3143, 2644, 3144, 1317, 1666,
	1917, 2756, 3989, 1917, 1917, 1917, 2268, 3984, 3972, 3971,
	67, 2979, 2268, 2268, 1034, 3948, 3946, 3942, 1578, 3401,
	3401, 1856, 3864, 71, 3858, 3856, 3865, 3853, 2268, 2268,
	3850, 3854, 3845, 3820, 3851, 3819, 1856, 1856, 2963, 1856,
	3818, 3814, 3813, 1066, 1932, 1932, 1932, 740, 3808, 3806,
	94, 3789, 3401, 3401, 874, 3597, 3776, 3757, 77, 1436,
	3401, 2323, 1259, 3750, 3749, 3744, 3743, 2268, 2268, 3401,
	3401, 1032, 3737, 3674, 3654, 3651, 1856, 2323, 1856, 3401,
	3611, 3580, 3579, 3571, 3612, 1856, 1856, 1856, 2979, 1018,
	1018, 3570, 82, 3540, 3519, 3401, 3504, 1856, 2323, 3493,
	1932, 2964, 3428, 2979, 1094, 93, 2268, 2822, 724, 874,
	83, 90, 2612, 221, 3419, 2709, 2710, 856, 2268, 1067,
	3400, 3320, 3275, 855, 3401, 2323, 2995, 3269, 2268, 3236,
	3133, 2995, 925, 3237, 66, 3153, 727, 726, 3151, 3154,
	3136, 3053, 3152, 3049, 2268, 1856, 3758, 2268, 2994, 864,
	67, 2986, 2995, 869, 83, 2987, 2753, 2748, 2747, 84,
	2268, 2268, 2268, 71, 2700, 2698, 2690, 2319, 2701, 2699,
	2691, 1019, 2688, 2659, 2657, 1365, 2268, 2268, 1094, 2546,
	2658, 2520, 2519, 1932, 135, 1935, 1935, 3669, 2340, 1508,
	1509, 66, 2268, 43, 42, 2493, 2322, 2317, 77, 2311,
	2323, 2268, 1856, 1856, 1947, 3657, 2267, 67, 2261, 130,
	2268, 1539, 1934, 1021, 875, 1022, 1935, 1071, 1511, 1932,
	71, 3597, 3133, 2260, 2709, 2710, 3474, 3420, 1856, 2987,
	61, 2414, 82, 2355, 1760, 1508, 1509, 45, 1809, 132,
	1916, 194, 2465, 1855, 2431, 93, 2353, 1258, 1510, 1645,
	83, 90, 1237, 44, 3209, 77, 2321, 1539, 3025, 3003,
	2304, 2268, 1667, 1840, 1511, 1253, 2715, 2965, 2303, 1508,
	1509, 1419, 2302, 2301, 2300, 1023, 85, 47, 62, 196,
	194, 1020, 863, 862, 48, 861, 2966, 2188, 860, 82,
	859, 1539, 1918, 133, 1510, 1918, 1918, 1918, 1511, 84,
	46, 858, 93, 2577, 1596, 854, 853, 83, 90, 852,
	851, 850, 849, 848, 160, 88, 2647, 89, 196, 847,
	846, 845, 844, 843, 195, 842, 841, 840, 1510, 1508,
	1509, 839, 821, 776, 188, 775, 774, 773, 49, 194,
	1516, 772, 189, 771, 770, 769, 768, 728, 767, 766,
	765, 127, 764, 763, 762, 2725, 84, 761, 1511, 760,
	759, 932, 1915, 195, 163, 932, 758, 1578, 757, 756,
	755, 754, 753, 752, 751, 2715, 750, 196, 1538, 1540,
	1116, 749, 738, 194, 1116, 737, 1516, 1233, 1510, 696,
	656, 655, 654, 646, 645, 127, 644, 1096, 616, 2419,
	129, 1101, 608, 163, 607, 606, 2174, 590, 1247, 932,
	217, 932, 216, 932, 164, 215, 85, 214, 1233, 213,
	1516, 196, 195, 212, 1538, 1540, 211, 210, 209, 1531,
	194, 1222, 188, 194, 208, 2963, 207, 206, 205, 3373,
	189, 1067, 1233, 2510, 2172, 1217, 1930, 1916, 2016, 204,
	1252, 203, 2709, 2710, 160, 88, 194, 89, 1538, 1540,
	202, 1246, 163, 1251, 2725, 1257, 195, 2726, 196, 201,
	200, 196, 199, 85, 198, 1531, 188, 197, 3332, 194,
	1516, 3164, 1233, 50, 189, 3147, 1233, 728, 1299, 1301,
	1233, 127, 2996, 2800, 196, 932, 2670, 2653, 2751, 877,
	1233, 2387, 2448, 932, 2327, 63, 163, 1084, 3841, 1531,
	53, 160, 88, 195, 89, 2309, 195, 196, 51, 2752,
	1438, 2724, 134, 188, 1628, 2476, 188, 1670, 52, 2294,
	1627, 189, 640, 1788, 189, 643, 194, 194, 1693, 195,
	129, 1532, 2260, 1233, 56, 1598, 1243, 1381, 127, 188,
	1507, 1067, 1631, 163, 164, 1388, 163, 189, 131, 932,
	1589, 1109, 195, 1203, 1208, 1103, 1942, 1054, 1079, 1240,
	1239, 3821, 188, 3724, 196, 196, 2726, 2709, 2710, 2492,
	189, 3666, 3660, 153, 153, 3533, 3558, 1532, 2720, 2718,
	2719, 2711, 2712, 2713, 2714, 2716, 2717, 129, 3658, 3494,
	3473, 1031, 725, 2715, 1389, 1371, 1373, 2709, 2710, 1437,
	3489, 164, 1628, 3378, 3355, 3354, 3348, 3347, 1627, 195,
	195, 1532, 2285, 3346, 3339, 3338, 3336, 1304, 3331, 188,
	188, 1346, 1349, 2709, 2710, 3328, 194, 189, 189, 194,
	1626, 1941, 2709, 2710, 3327, 932, 932, 932, 932, 932,
	932, 932, 3235, 3242, 3207, 3168, 66, 3167, 3166, 163,
	163, 1355, 3, 1446, 1520, 1512, 1513, 1514, 1515, 1517,
	1518, 3157, 67, 3124, 196, 1369, 932, 196, 3123, 2158,
	3122, 3045, 932, 3041, 2990, 71, 2795, 2744, 2735, 2708,
	2705, 2704, 2725, 1590, 2702, 1588, 1892, 2697, 2718, 2719,
	2711, 2712, 2713, 2714, 2716, 2717, 2696, 2695, 2692, 2689,
	1320, 1512, 1513, 1514, 1515, 1517, 1518, 2669, 2652, 195,
	77, 1861, 195, 2478, 2645, 2521, 227, 2295, 2715, 188,
	2145, 1507, 188, 1589, 1506, 1209, 1485, 189, 1221, 1224,
	189, 2749, 1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517,
	1518, 3983, 3940, 3939, 82, 2159, 1859, 1577, 2715, 163,
	3874, 3872, 163, 3863, 1056, 1479, 3071, 93, 1394, 3716,
	1508, 1509, 83, 90, 3704, 3701, 875, 3700, 1410, 194,
	3699, 2815, 2187, 3693, 2715, 932, 932, 932, 3686, 3655,
	3639, 932, 3638, 2715, 2122, 1597, 1224, 1224, 1052, 1511,
	1052, 3626, 1225, 3623, 2726, 1512, 1513, 1514, 1515, 1517,
	1518, 1647, 3598, 3576, 3678, 1116, 3554, 196, 3488, 3531,
	1482, 84, 3514, 932, 3513, 3501, 635, 2160, 2157, 1510,
	1726, 635, 3500, 1262, 1224, 1696, 1490, 1489, 3466, 932,
	3372, 3353, 856, 1233, 3290, 1705, 1484, 3287, 855, 3198,
	1749, 3197, 3184, 1684, 1486, 3469, 2792, 1296, 932, 3183,
	1503, 1504, 195, 3241, 1116, 3139, 3127, 1630, 2128, 3036,
	194, 1656, 188, 2725, 1575, 2997, 2980, 2940, 2889, 2868,
	189, 1701, 2725, 2844, 2843, 2817, 2674, 2673, 2668, 2636,
	2477, 895, 2458, 1634, 1786, 1653, 1654, 1633, 153, 1757,
	3374, 2173, 163, 1703, 1751, 1377, 1508, 1509, 196, 1632,
	1629, 1621, 1619, 2334, 1677, 1384, 2333, 1018, 2306, 1752,
	2299, 1516, 2266, 1622, 1623, 2720, 2718, 2719, 2711, 2712,
	2713, 2714, 2716, 2717, 2170, 1511, 1692, 2325, 85, 2171,
	1648, 1643, 2162, 1642, 1641, 1640, 1639, 1638, 1637, 1636,
	1635, 1616, 1615, 195, 1614, 1613, 1678, 1612, 1401, 640,
	1611, 1699, 643, 188, 640, 1510, 875, 643, 1610, 1609,
	1943, 189, 1608, 1675, 1607, 1777, 160, 88, 2844, 89,
	1606, 1605, 1604, 1603, 1602, 2726, 1591, 1576, 1574, 1569,
	1078, 1754, 1069, 163, 2726, 1062, 3324, 1233, 1646, 1697,
	3163, 194, 3150, 3142, 1116, 1720, 2656, 1798, 2297, 728,
	3543, 3376, 3162, 127, 2709, 2710, 1590, 2813, 1572, 1687,
	1686, 1685, 1683, 1723, 1704, 1682, 1681, 1672, 1779, 1748,
	1779, 3422, 1779, 1688, 1670, 1668, 3937, 1100, 3930, 196,
	3702, 2156, 2950, 3614, 1706, 1409, 1827, 3613, 3599, 1829,
	2871, 3661, 1834, 2711, 2712, 2713, 2714, 2716, 2717, 3492,
	1809, 3421, 129, 3245, 2694, 3145, 2336, 3659, 2982, 2981,
	1782, 1772, 1094, 1094, 1098, 1477, 164, 2405, 3619, 1853,
	3557, 1611, 2693, 1091, 195, 2713, 2714, 2716, 2717, 2618,
	875, 1099, 1628, 2389, 188, 1030, 3196, 1095, 1627, 1813,
	837, 2927, 189, 2926, 1600, 1418, 1940, 1447, 2719, 2711,
	2712, 2713, 2714, 2716, 2717, 1838, 1611, 3610, 2711, 2712,
	2713, 2714, 2716, 2717, 163, 2756, 3861, 1094, 3846, 3833,
	3229, 640, 923, 1233, 643, 1233, 1419, 1233, 1885, 1851,
	838, 3212, 1766, 3200, 3001, 3535, 1233, 1233, 3073, 3842,
	1233, 2153, 2662, 2332, 1644, 1893, 1624, 2919, 1889, 1277,
	2428, 3855, 3852, 1233, 1233, 1233, 2959, 1890, 1240, 1239,
	1898, 3175, 3695, 1755, 1221, 1085, 3476, 2425, 3775, 3683,
	2847, 3191, 2528, 635, 2489, 2912, 2031, 1959, 1092, 3897,
	3898, 1833, 1948, 3736, 1949, 1398, 1093, 3017, 2826, 3225,
	3596, 3411, 1714, 1265, 2341, 835, 833, 831, 3843, 1854,
	2359, 829, 3979, 826, 3589, 2359, 3582, 2001, 3231, 3221,
	1906, 819, 3220, 1999, 2357, 3214, 3211, 1895, 2029, 2357,
	3210, 1771, 1770, 1871, 1963, 1779, 1781, 3172, 1945, 3171,
	2667, 2666, 1114, 2486, 2665, 1872, 1215, 2664, 1514, 1515,
	1517, 1518, 2622, 2430, 3224, 2421, 2413, 932, 2412, 932,
	2392, 2318, 2103, 1483, 1275, 1236, 932, 2828, 2814, 1726,
	1726, 1116, 1445, 932, 932, 932, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 932, 932, 932, 1904, 932,
	1900, 932, 932, 932, 932, 2020, 640, 2033, 2234, 643,
	1908, 1909, 1369, 1767, 1369, 692, 1320, 895, 1903, 1050,
	1903, 895, 1100, 932, 1953, 1276, 932, 932, 2201, 1774,
	1094, 1936, 1806, 1937, 2030, 932, 1200, 1950, 1079, 932,
	1200, 932, 932, 2200, 1100, 2061, 883, 1396, 1952, 1116,
	614, 2057, 2058, 3735, 3512, 932, 932, 932, 932, 1802,
	932, 932, 932, 932, 932, 932, 932, 932, 3002, 2014,
	2870, 1981, 1444, 1870, 2391, 2013, 1099, 1518, 930, 1091,
	814, 1091, 1807, 1808, 1331, 2326, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 2028, 1957, 1888, 1099, 932,
	1391, 1271, 1384, 868, 2348, 693, 2134, 2135, 2044, 823,
	1803, 1052, 1310, 875, 1309, 875, 1284, 1308, 1116, 1307,
	2310, 2134, 2150, 2380, 2005, 2595, 1974, 1052, 2010, 1776,
	2017, 3811, 2032, 873, 1720, 1720, 2610, 2025, 2031, 1411,
	2118, 2019, 2018, 932, 1116, 3187, 613, 2196, 2118, 1460,
	2436, 1971, 1723, 1723, 856, 1688, 1221, 856, 856, 1443,
	2048, 1775, 2149, 2049, 2050, 2379, 2218, 2218, 2232, 1809,
	2134, 2012, 2158, 2252, 2254, 1905, 2409, 1456, 2153, 2258,
	2029, 1966, 815, 1059, 1092, 2717, 1092, 1295, 568, 3925,
	2282, 1488, 1093, 3565, 1093, 3008, 1077, 2402, 2403, 2402,
	2403, 2402, 2403, 3007, 1392, 1407, 2130, 3897, 3423, 1233,
	2574, 872, 2162, 563, 2429, 1967, 2198, 1057, 2368, 747,
	3397, 2199, 1975, 2307, 2202, 2274, 2203, 2204, 1293, 3941,
	3062, 2602, 2603, 2147, 2427, 1476, 1018, 3914, 2126, 1116,
	3913, 1677, 1938, 2027, 2296, 2124, 1433, 2609, 2159, 3393,
	2825, 2316, 1384, 3199, 153, 1951, 1809, 3951, 2358, 1419,
	2273, 1419, 2956, 3511, 2426, 1757, 1726, 1968, 1960, 1961,
	1962, 3926, 2281, 2227, 2286, 1047, 2320, 2292, 2293, 2214,
	2256, 2424, 2243, 2390, 3886, 3306, 3178, 2264, 2265, 2275,
	3305, 1116, 2279, 2280, 874, 3394, 2030, 3567, 1434, 2957,
	1675, 1273, 2882, 1233, 3407, 2438, 2386, 2328, 3964, 2876,
	932, 1826, 932, 1060, 2360, 875, 1630, 690, 2371, 689,
	2160, 2157, 827, 827, 827, 875, 2437, 2439, 828, 875,
	827, 1714, 1714, 2000, 1397, 2418, 1094, 2009, 1094, 1998,
	816, 1800, 695, 694, 2339, 2162, 3839, 1811, 2462, 1917,
	2422, 2335, 615, 1948, 3696, 612, 3934, 2028, 2395, 1442,
	2410, 3928, 2450, 2956, 2452, 1457, 2442, 1694, 1295, 1793,
	3712, 2827, 2394, 1454, 1794, 2338, 1622, 1623, 2892, 722,
	2011, 929, 2342, 1233, 1233, 2500, 1233, 3754, 3445, 1793,
	1330, 3458, 1800, 3059, 1794, 2580, 2858, 3443, 1233, 1920,
	3188, 1617, 1922, 2491, 1783, 1784, 2491, 1270, 1927, 2811,
	1800, 1929, 3302, 3524, 2373, 2376, 1789, 875, 2404, 2406,
	2407, 2408, 2544, 2363, 2542, 3907, 2513, 2548, 2549, 1836,
	3786, 1973, 2516, 647, 2382, 2162, 2554, 2555, 2556, 640,
	871, 1720, 643, 2445, 2857, 2393, 932, 2564, 3715, 2565,
	1948, 1835, 2633, 1948, 1568, 1948, 817, 3389, 2411, 1723,
	3445, 3390, 2672, 2278, 1658, 3060, 3405, 3952, 3508, 3443,
	1458, 1200, 1795, 3885, 2370, 2144, 1240, 2446, 1831, 2631,
	2545, 153, 1508, 1509, 3840, 2291, 2562, 932, 1797, 2456,
	2527, 2583, 1795, 932, 932, 874, 2572, 818, 2502, 2466,
	564, 1807, 1808, 2517, 1539, 3392, 3566, 2624, 1797, 1393,
	2443, 1511, 2484, 3927, 895, 2117, 1828, 2495, 824, 3395,
	1200, 2585, 1058, 2587, 2506, 2559, 2507, 748, 2508, 1832,
	3075, 2015, 1970, 3159, 2156, 2566, 3752, 2568, 1662, 2570,
	2547, 1510, 2514, 2550, 1459, 2551, 891, 2518, 932, 932,
	1799, 906, 3962, 3468, 932, 2578, 1857, 2529, 2100, 3296,
	2512, 565, 1965, 3459, 1815, 3838, 3932, 932, 932, 3753,
	1799, 1487, 1455, 932, 932, 1369, 1076, 1665, 1046, 932,
	2162, 1072, 2860, 1819, 3507, 1406, 1408, 1421, 932, 932,
	932, 1660, 2628, 2369, 932, 3406, 2582, 2344, 3307, 566,
	3965, 567, 3867, 2125, 932, 3019, 2561, 1663, 2629, 2625,
	3868, 2346, 2634, 2655, 2862, 2567, 2593, 2569, 2579, 2571,
	3718, 932, 3444, 1662, 3391, 2601, 2592, 2591, 3884, 1209,
	3837, 1816, 3441, 1516, 1841, 1661, 3896, 3894, 1714, 1848,
	2359, 1918, 2347, 1221, 2596, 2588, 2044, 3732, 3933, 2590,
	648, 649, 2611, 1800, 2374, 3625, 3257, 2345, 2771, 3398,
	1200, 2943, 1665, 1879, 1655, 1070, 1065, 555, 2861, 2650,
	2651, 1538, 1540, 1800, 2654, 3240, 2276, 1498, 3113, 3935,
	3303, 2047, 3351, 1810, 866, 1497, 814, 932, 932, 932,
	2864, 1768, 1663, 3509, 3444, 3023, 932, 932, 932, 3957,
	2581, 932, 2098, 3573, 2623, 2101, 2646, 3572, 3552, 868,
	2831, 932, 1052, 1116, 3682, 2804, 3258, 932, 2444, 932,
	3218, 3174, 1531, 2944, 1820, 1793, 1664, 1052, 2763, 2764,
	1794, 2938, 1765, 2839, 1224, 1224, 2835, 1847, 1568, 2470,
	3410, 2460, 1497, 1899, 1891, 1116, 1884, 3409, 1048, 1866,
	867, 2097, 3058, 2661, 3128, 1492, 3719, 1052, 651, 650,
	1116, 3794, 3764, 2630, 3020, 1497, 3795, 1395, 2037, 814,
	2006, 1761, 2632, 2785, 1726, 1496, 3260, 3481, 1116, 1221,
	2457, 2746, 1821, 1822, 2396, 3608, 2802, 2809, 815, 3606,
	932, 1333, 868, 2779, 1958, 1817, 3553, 2765, 2515, 1763,
	1796, 2850, 2846, 2845, 932, 3866, 2821, 2616, 2594, 652,
	653, 1664, 2270, 1384, 1221, 1726, 1221, 2775, 1498, 3308,
	1796, 2770, 1764, 2060, 3141, 2768, 2823, 2767, 1795, 1818,
	3114, 932, 1496, 2794, 1532, 744, 2832, 2833, 3115, 1435,
	2829, 2773, 3352, 2798, 1797, 2464, 2315, 2774, 2741, 2742,
	2743, 2314, 2783, 2848, 2313, 1496, 2852, 2757, 2786, 2787,
	1050, 2791, 1050, 875, 2849, 3956, 2812, 2854, 2855, 2312,
	1316, 815, 1116, 1422, 2780, 1498, 2772, 2038, 2799, 2272,
	2784, 1233, 1700, 2836, 2271, 2865, 2866, 872, 1302, 2867,
	2375, 3309, 3450, 1233, 736, 3561, 3689, 2099, 1314, 1116,
	1303, 2789, 2873, 2790, 635, 2895, 1799, 2840, 2898, 3408,
	2991, 2165, 2906, 2908, 1844, 1233, 746, 2886, 2887, 3720,
	2778, 2888, 1823, 2897, 1897, 2915, 1233, 1200, 2818, 2819,
	3904, 2820, 2806, 2807, 2808, 2397, 2398, 2901, 2924, 2932,
	1052, 2824, 2875, 1798, 2890, 2782, 816, 2883, 3604, 1720,
	3772, 2830, 2952, 3498, 2937, 1842, 1519, 1520, 1512, 1513,
	1514, 1515, 1517, 1518, 3767, 2893, 3690, 1723, 3761, 3358,
	1798, 3130, 2542, 2169, 3791, 3906, 2863, 2509, 1233, 1233,
	1658, 2542, 2869, 1474, 1472, 3562, 3857, 2961, 2805, 1824,
	1720, 2878, 1843, 2881, 1451, 3550, 3703, 2978, 3530, 3350,
	2885, 3230, 1838, 2879, 2899, 2913, 2308, 2880, 1723, 1800,
	1838, 2891, 2904, 2738, 3497, 1200, 2909, 3035, 1449, 2999,
	1432, 2972, 3792, 2998, 2703, 2635, 2781, 1430, 2394, 816,
	1116, 2917, 3551, 1116, 2461, 1428, 1426, 640, 2945, 3768,
	643, 3691, 2935, 1424, 2953, 2884, 1791, 2420, 1416, 1414,
	1312, 2388, 742, 743, 1662, 2213, 2209, 2337, 1695, 2739,
	865, 1691, 817, 932, 1475, 1386, 153, 153, 3016, 932,
	932, 2958, 1997, 932, 932, 932, 3015, 932, 2168, 1492,
	2967, 1315, 2576, 2575, 1200, 2960, 932, 1726, 2976, 2977,
	2989, 2973, 2553, 1665, 3014, 932, 2026, 2993, 932, 2008,
	1978, 2354, 1863, 818, 1116, 1750, 3013, 1660, 1601, 1313,
	1200, 734, 735, 932, 1390, 1288, 1047, 3832, 1047, 2951,
	3004, 1116, 3005, 1663, 3006, 2207, 3427, 745, 3418, 3908,
	3760, 1726, 1726, 932, 932, 3479, 932, 932, 932, 3021,
	3038, 3432, 2211, 2212, 2210, 817, 1714, 2894, 1473, 1471,
	3382, 1661, 3055, 3010, 932, 825, 1796, 2114, 932, 1450,
	1726, 1726, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 3018, 932, 1448, 2112, 1431, 818, 1714, 3256, 932,
	932, 1726, 1429, 940, 3250, 1221, 932, 3223, 2206, 2208,
	1427, 1425, 3194, 3192, 3173, 1200, 3882, 932, 1423, 2936,
	2928, 2511, 3011, 1415, 1413, 1311, 1888, 3043, 1052, 1052,
	3047, 3048, 932, 2057, 3078, 2487, 2475, 2467, 2454, 1933,
	3054, 1224, 1931, 875, 1996, 1928, 225, 225, 225, 1923,
	558, 559, 1664, 574, 558, 574, 584, 589, 3077, 3070,
	605, 1116, 2057, 3093, 1921, 611, 1919, 1200, 1948, 1910,
	1862, 225, 1720, 3065, 3061, 3063, 3064, 3146, 3085, 3087,
	1860, 3088, 3086, 3090, 1852, 1839, 3125, 3092, 733, 932,
	1723, 3117, 225, 3121, 1825, 1812, 3084, 1801, 830, 832,
	834, 3169, 2948, 2905, 932, 932, 153, 2108, 1848, 3632,
	1702, 3898, 3802, 3503, 3118, 2614, 1720, 1720, 2910, 2109,
	3397, 1501, 3496, 2110, 1221, 1221, 3495, 2115, 3126, 932,
	932, 1027, 3439, 2543, 1723, 1723, 1787, 3134, 3135, 1267,
	2933, 2359, 3137, 3138, 3634, 1720, 1720, 2359, 2378, 3393,
	932, 2939, 3268, 3386, 1809, 2357, 1028, 626, 3132, 1969,
	1354, 2377, 3148, 1723, 1723, 1995, 3149, 1469, 1470, 3384,
	1896, 1994, 3801, 1233, 1976, 3388, 1720, 1353, 3412, 3434,
	1412, 3668, 1508, 1509, 3900, 1726, 3359, 1508, 1509, 3337,
	2399, 2381, 558, 558, 1723, 3394, 2615, 1221, 3205, 1505,
	225, 3219, 569, 2984, 2985, 3892, 1847, 3206, 3208, 3201,
	1233, 1511, 3217, 3177, 3862, 218, 1502, 932, 2453, 1758,
	2425, 2433, 3165, 2432, 2417, 1052, 932, 3759, 2415, 1046,
	3213, 1046, 3216, 3387, 2385, 681, 3270, 2416, 2383, 3246,
	721, 1510, 1233, 1233, 1233, 3728, 1510, 2384, 3725, 1354,
	2394, 1029, 3278, 2500, 580, 3688, 1354, 3265, 1233, 552,
	3601, 3249, 3239, 3156, 1116, 2494, 3262, 2257, 1753, 1714,
	3282, 1707, 1581, 3929, 3559, 3247, 1586, 2840, 2111, 3233,
	2810, 3248, 3955, 3727, 3261, 2542, 1116, 2113, 1400, 932,
	932, 2709, 2710, 1050, 1399, 932, 932, 1726, 1578, 3794,
	932, 932, 1010, 932, 3795, 3329, 3294, 932, 2164, 1050,
	3251, 3295, 3622, 1714, 1714, 1508, 1509, 3263, 932, 2351,
	2352, 2349, 2350, 3910, 3161, 2351, 3266, 2349, 2197, 3272,
	3271, 3590, 1453, 3264, 932, 1452, 3435, 3431, 3430, 3325,
	3254, 3277, 1714, 1714, 3283, 3284, 3160, 3066, 3285, 2896,
	3319, 3292, 1595, 3291, 3288, 2041, 3649, 3389, 3311, 3289,
	1720, 3390, 3310, 1594, 3943, 3915, 3304, 3679, 3586, 2969,
	2970, 2971, 3299, 1714, 3544, 2974, 3542, 2975, 1723, 3465,
	3375, 3293, 3274, 3323, 3234, 2762, 3232, 3190, 3185, 2968,
	2942, 2941, 2558, 2557, 1052, 2504, 2479, 2455, 2330, 1048,
	2329, 1048, 1052, 2129, 3641, 3392, 1116, 1993, 1116, 1992,
	1991, 1990, 1913, 1912, 1911, 1052, 3642, 2788, 3364, 3395,
	1894, 1874, 1873, 1869, 1868, 1116, 1867, 1865, 1864, 1468,
	1467, 1341, 2801, 1340, 1339, 1338, 1337, 1336, 1335, 1334,
	1332, 1327, 3643, 1326, 932, 3349, 1325, 1324, 1323, 1283,
	2816, 1282, 1281, 1280, 1279, 1278, 1272, 1266, 1264, 1263,
	1107, 3379, 3380, 3404, 1106, 1105, 1104, 1075, 3403, 1074,
	1116, 1759, 1720, 836, 822, 1116, 3415, 3416, 3367, 3564,
	3396, 1462, 3413, 81, 153, 3361, 3362, 3363, 1274, 1200,
	1723, 1233, 1233, 668, 3414, 2235, 3370, 3366, 76, 3645,
	1845, 2798, 3371, 2900, 3381, 3189, 3356, 3790, 3360, 1224,
	1260, 3436, 3711, 3437, 676, 3644, 3365, 1116, 3774, 2856,
	3402, 1200, 1233, 2434, 3391, 1977, 3448, 3451, 1420, 1979,
	3438, 2793, 3646, 2298, 3751, 3333, 1200, 2671, 3675, 3446,
	3523, 2167, 1599, 2750, 78, 916, 962, 3429, 932, 1047,
	1888, 3460, 3457, 3456, 1200, 3383, 3426, 1714, 3176, 3398,
	2532, 3471, 3454, 1116, 1063, 1047, 895, 3453, 1711, 3502,
	3425, 2801, 3499, 1713, 3447, 932, 932, 932, 3483, 882,
	895, 3490, 3467, 3452, 1119, 1769, 922, 3486, 3226, 3477,
	3470, 1785, 1073, 1116, 1778, 2331, 3482, 2217, 932, 605,
	939, 932, 932, 3484, 936, 1715, 1717, 938, 937, 1716,
	3472, 932, 1618, 935, 1726, 1710, 3253, 3252, 2463, 932,
	932, 2498, 225, 1319, 225, 225, 1212, 799, 225, 225,
	1773, 2123, 2151, 2660, 1116, 1592, 3510, 897, 918, 2148,
	1068, 907, 225, 1242, 2776, 2955, 3155, 1116, 1200, 3515,
	3487, 3491, 2036, 684, 2706, 932, 2154, 3279, 3280, 3281,
	1061, 2240, 932, 2233, 2229, 2488, 1478, 3532, 1269, 1714,
	932, 1570, 1726, 2499, 3526, 1200, 1102, 900, 2121, 932,
	1583, 1287, 932, 1292, 3546, 2640, 225, 225, 932, 1212,
	2046, 2962, 2796, 3538, 3539, 1116, 2324, 3798, 3074, 225,
	3537, 1878, 1215, 1026, 1025, 1114, 1329, 3520, 1024, 3780,
	3547, 3777, 3541, 3545, 3286, 3193, 2922, 3195, 3585, 225,
	225, 225, 1762, 1212, 225, 3647, 2343, 1560, 2929, 3569,
	3648, 3568, 605, 912, 225, 225, 1220, 2761, 2992, 3607,
	1116, 3595, 3616, 1233, 1285, 610, 924, 1559, 3583, 733,
	2441, 2440, 3685, 1089, 1088, 1087, 2924, 2838, 3592, 3587,
	3963, 932, 932, 3186, 3575, 3621, 193, 3633, 2608, 3222,
	1499, 3605, 1491, 3600, 932, 932, 3051, 190, 3620, 192,
	3637, 191, 3461, 3860, 3203, 3652, 3653, 3631, 3615, 1720,
	3656, 932, 1726, 3067, 2914, 20, 19, 18, 98, 3629,
	39, 17, 126, 3630, 125, 124, 1200, 1723, 123, 1200,
	3636, 225, 3627, 3650, 3486, 932, 3635, 3628, 932, 122,
	128, 121, 120, 115, 119, 1888, 225, 118, 117, 3692,
	116, 3681, 114, 3663, 113, 112, 3276, 932, 1224, 111,
	110, 109, 108, 107, 106, 3673, 105, 1720, 104, 103,
	102, 101, 1046, 100, 3664, 3665, 99, 601, 598, 55,
	1233, 3698, 3680, 54, 97, 1723, 96, 16, 1046, 37,
	14, 59, 60, 13, 932, 932, 32, 3714, 3697, 33,
	1200, 87, 86, 31, 932, 15, 30, 932, 28, 1233,
	11, 9, 8, 2598, 1050, 34, 1679, 1200, 12, 1233,
	1233, 3705, 3707, 5, 3667, 3709, 158, 1384, 3729, 1050,
	3708, 3731, 157, 3713, 159, 156, 1233, 80, 3722, 3723,
	3721, 3726, 155, 3158, 3742, 2127, 154, 3620, 79, 932,
	932, 3734, 26, 10, 3738, 2637, 2638, 3739, 3747, 1050,
	3748, 1581, 150, 3617, 3244, 3733, 74, 3740, 3741, 152,
	151, 149, 148, 3746, 3769, 147, 75, 72, 146, 145,
	3771, 73, 932, 932, 3745, 932, 144, 1720, 3756, 24,
	6, 58, 3770, 2235, 2235, 7, 3779, 3782, 3505, 3000,
	91, 3796, 92, 35, 70, 1723, 1714, 69, 68, 23,
	3803, 57, 22, 183, 182, 2239, 181, 180, 175, 3784,
	174, 179, 177, 176, 178, 173, 3800, 185, 184, 3755,
	3788, 187, 3815, 932, 932, 932, 3816, 171, 3817, 167,
	558, 166, 1048, 170, 3807, 172, 169, 1200, 3812, 3810,
	168, 165, 1700, 3844, 186, 143, 932, 3804, 1048, 65,
	3805, 225, 3783, 225, 1714, 3787, 142, 225, 3831, 3849,
	3830, 3828, 3829, 141, 140, 2732, 2733, 2734, 139, 138,
	1242, 1212, 225, 137, 225, 3869, 3847, 136, 64, 225,
	1242, 574, 21, 2, 225, 1242, 1, 0, 3873, 3871,
	605, 3878, 0, 0, 0, 932, 3879, 3883, 0, 0,
	0, 0, 3870, 2235, 2235, 2235, 0, 0, 3875, 3876,
	3877, 2500, 0, 0, 3880, 0, 0, 0, 0, 0,
	0, 3889, 3890, 3891, 0, 3902, 3895, 0, 3899, 3893,
	1657, 0, 1050, 0, 0, 0, 1221, 3903, 3779, 3901,
	3909, 3782, 3905, 932, 0, 932, 3912, 3917, 0, 3920,
	3923, 3918, 3911, 0, 3916, 3924, 0, 0, 0, 3922,
	1047, 0, 0, 0, 0, 3800, 0, 3919, 0, 3921,
	0, 0, 0, 0, 1714, 1047, 3938, 3936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3947, 3944, 3945, 0, 3950, 0, 0, 0,
	932, 932, 3953, 0, 0, 1047, 0, 3949, 932, 0,
	932, 932, 3959, 0, 0, 0, 0, 3966, 0, 0,
	1224, 0, 0, 0, 0, 0, 0, 0, 3969, 3967,
	0, 3968, 0, 0, 3970, 0, 0, 0, 0, 0,
	1200, 0, 0, 3978, 3973, 3977, 0, 3976, 0, 3982,
	3975, 225, 3981, 3985, 932, 0, 3980, 0, 0, 0,
	0, 3990, 1200, 0, 0, 0, 3986, 0, 0, 3988,
	2709, 2710, 0, 2727, 2728, 2729, 0, 0, 0, 0,
	3369, 0, 1508, 1509, 0, 3710, 3577, 3578, 0, 0,
	3960, 3961, 0, 0, 0, 881, 0, 3377, 225, 0,
	0, 0, 225, 0, 1539, 0, 3591, 225, 0, 3593,
	3594, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 225, 0, 225,
	0, 0, 0, 558, 3987, 0, 0, 0, 0, 2724,
	0, 1510, 0, 0, 0, 0, 0, 1914, 0, 0,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 2709,
	2710, 0, 2727, 2728, 2729, 0, 0, 0, 0, 0,
	0, 0, 1200, 0, 1200, 0, 0, 0, 1047, 605,
	3316, 0, 0, 733, 0, 0, 0, 0, 0, 0,
	0, 1200, 0, 2239, 225, 0, 1212, 225, 0, 0,
	1050, 1050, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 2715, 0, 1533, 1534, 1535, 1536, 225, 0, 0,
	0, 0, 0, 1516, 0, 1114, 225, 225, 2724, 225,
	0, 225, 0, 225, 0, 225, 1200, 0, 0, 0,
	0, 1200, 3031, 3032, 0, 0, 0, 0, 0, 2002,
	0, 0, 2003, 1046, 2004, 3521, 0, 0, 3706, 0,
	0, 1538, 1540, 0, 2730, 0, 225, 0, 1046, 0,
	0, 0, 0, 2239, 2239, 0, 0, 0, 0, 0,
	2235, 2235, 0, 1200, 0, 1525, 1526, 589, 0, 2709,
	2710, 605, 2727, 2728, 2729, 0, 3521, 0, 1046, 0,
	2725, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	2715, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1200,
	3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103,
	3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 0,
	3116, 0, 0, 0, 0, 0, 0, 2060, 2724, 1200,
	0, 0, 0, 2730, 0, 0, 0, 0, 2235, 2235,
	2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235,
	2235, 2235, 2235, 2235, 2235, 2235, 2235, 0, 2235, 0,
	0, 0, 0, 2239, 2239, 2239, 0, 1050, 0, 2725,
	1200, 0, 0, 617, 1537, 0, 0, 0, 0, 0,
	0, 0, 2726, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1048, 1532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1048, 0,
	2715, 0, 0, 0, 0, 0, 0, 0, 895, 558,
	0, 3859, 0, 0, 0, 0, 1047, 1047, 0, 0,
	0, 1200, 0, 0, 225, 0, 0, 0, 1048, 0,
	0, 0, 2731, 558, 0, 0, 0, 0, 0, 0,
	225, 1046, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2730, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 622, 0, 0,
	0, 2726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 881, 0, 0, 0, 881, 2721, 2722, 2723, 2725,
	0, 0, 0, 2720, 2718, 2719, 2711, 2712, 2713, 2714,
	2716, 2717, 1528, 1524, 0, 1521, 1519, 1520, 1512, 1513,
	1514, 1515, 1517, 1518, 574, 2709, 2710, 0, 2727, 2728,
	2729, 0, 0, 0, 0, 0, 1050, 0, 0, 1244,
	0, 1248, 0, 1254, 1050, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 0, 0, 0, 1050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2367, 0, 0,
	0, 0, 0, 624, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 2724, 2721, 2722, 2723, 0, 225,
	0, 0, 2720, 2718, 2719, 2711, 2712, 2713, 2714, 2716,
	2717, 2726, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 1047, 0, 1380, 0, 0, 0, 225,
	2447, 0, 0, 1387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 2483,
	0, 0, 0, 0, 0, 0, 2715, 0, 619, 2367,
	0, 558, 0, 0, 2503, 0, 0, 0, 0, 1439,
	225, 0, 0, 225, 0, 225, 0, 225, 0, 895,
	623, 0, 1212, 0, 225, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 2525, 733, 0, 2367, 2367, 0,
	0, 0, 0, 0, 0, 2721, 2722, 2723, 627, 1046,
	1046, 225, 2720, 2718, 2719, 2711, 2712, 2713, 2714, 2716,
	2717, 0, 0, 0, 0, 621, 0, 225, 1212, 225,
	2239, 2239, 1242, 0, 1242, 0, 0, 1212, 0, 1212,
	0, 1212, 0, 0, 0, 2725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 618, 225, 225, 225, 225, 1212, 225, 0,
	225, 0, 1047, 0, 0, 0, 0, 0, 0, 0,
	1047, 0, 0, 0, 0, 0, 1580, 625, 0, 0,
	0, 0, 1593, 1047, 0, 0, 0, 0, 0, 0,
	629, 225, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 620, 0, 0, 0, 0, 0, 0, 2239, 2239,
	2239, 2239, 2239, 2239, 2239, 2239, 2239, 2239, 2239, 2239,
	2239, 2239, 2239, 2239, 2239, 2239, 2239, 0, 2239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 1509,
	0, 1541, 1542, 1543, 1551, 1552, 1553, 2726, 0, 0,
	0, 0, 0, 0, 0, 1508, 1509, 0, 0, 0,
	1539, 0, 0, 0, 0, 0, 0, 1511, 0, 1048,
	1048, 1508, 1509, 0, 1557, 0, 0, 1539, 0, 0,
	0, 0, 0, 0, 1511, 1651, 1651, 1651, 1242, 0,
	0, 0, 0, 1539, 0, 0, 1046, 1510, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 1530, 0, 3529,
	0, 0, 0, 0, 1510, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 2235, 1527, 0,
	0, 0, 0, 3555, 0, 0, 0, 0, 881, 0,
	0, 2721, 2722, 2723, 0, 0, 0, 0, 2720, 2718,
	2719, 2711, 2712, 2713, 2714, 2716, 2717, 0, 0, 1533,
	1534, 1535, 1536, 0, 0, 0, 0, 0, 0, 1516,
	0, 2235, 3314, 0, 0, 0, 1533, 1534, 1535, 1536,
	0, 0, 0, 0, 0, 225, 1516, 0, 0, 0,
	0, 0, 1533, 1534, 1535, 1536, 0, 0, 1548, 0,
	225, 1558, 1516, 0, 0, 558, 0, 1538, 1540, 0,
	558, 0, 0, 558, 0, 0, 558, 558, 0, 0,
	0, 0, 558, 0, 1538, 1540, 0, 0, 0, 0,
	225, 1525, 1526, 0, 0, 0, 0, 0, 0, 0,
	1538, 1540, 1242, 0, 0, 1046, 1048, 1546, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 1531, 0,
	0, 1242, 0, 0, 1525, 1526, 1046, 0, 0, 3672,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	2367, 2367, 225, 0, 0, 0, 2367, 0, 0, 2842,
	0, 1531, 0, 0, 0, 0, 0, 2367, 2842, 0,
	2367, 2842, 2842, 0, 0, 0, 0, 2235, 0, 0,
	0, 0, 0, 0, 225, 225, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 1212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2367,
	1537, 225, 2367, 1292, 0, 0, 2367, 2367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1537, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 225, 2918, 0,
	0, 2920, 2367, 1537, 0, 225, 0, 1532, 0, 225,
	0, 1292, 0, 1549, 0, 0, 2709, 2710, 0, 2727,
	2728, 2729, 0, 1532, 0, 0, 0, 0, 2483, 0,
	0, 1212, 0, 225, 0, 1048, 2367, 3315, 558, 0,
	0, 0, 0, 1048, 0, 2367, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 225, 1048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	2483, 0, 0, 2483, 0, 2724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 0, 1522, 1523, 1529, 1550, 1528, 1524,
	0, 1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518,
	0, 3009, 0, 0, 1212, 225, 0, 225, 1521, 1519,
	1520, 1512, 1513, 1514, 1515, 1517, 1518, 0, 0, 0,
	0, 1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514,
	1515, 1517, 1518, 0, 0, 0, 0, 2035, 0, 2039,
	225, 0, 0, 0, 0, 0, 2053, 2715, 0, 0,
	0, 0, 0, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 0, 2102,
	0, 2104, 2105, 2106, 2107, 0, 3072, 0, 0, 0,
	2730, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 2131, 0, 0, 0, 0, 0, 0,
	67, 0, 0, 0, 0, 1580, 0, 2239, 0, 2146,
	0, 0, 0, 71, 0, 0, 2725, 0, 0, 0,
	0, 0, 0, 0, 0, 2176, 2179, 2182, 2185, 0,
	2189, 2190, 2191, 2192, 2193, 2194, 2195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 2239, 0, 0, 0, 0, 0, 0, 2231, 0,
	2242, 2244, 2249, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 558, 558, 93, 0, 0, 0, 0,
	83, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 2726, 0,
	0, 0, 0, 0, 220, 220, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0, 0,
	0, 0, 0, 0, 605, 0, 0, 0, 0, 0,
	1544, 1539, 0, 0, 0, 0, 0, 2239, 1511, 0,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 1530, 0,
	0, 0, 225, 0, 0, 0, 1527, 0, 0, 0,
	225, 0, 2721, 2722, 2723, 0, 0, 225, 0, 2720,
	2718, 2719, 2711, 2712, 2713, 2714, 2716, 2717, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 2367, 225, 0,
	2239, 2239, 0, 0, 0, 0, 0, 0, 0, 0,
	2449, 0, 2451, 2525, 2525, 0, 0, 0, 0, 733,
	733, 2367, 0, 0, 2483, 2483, 0, 66, 733, 2367,
	1533, 1534, 1535, 1536, 160, 88, 225, 89, 0, 0,
	1516, 0, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 1548,
	0, 127, 1558, 0, 0, 0, 0, 0, 1538, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 1554, 0, 1555, 0, 196, 0, 0,
	0, 0, 1525, 1526, 0, 3334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1546, 0,
	129, 0, 0, 0, 0, 82, 0, 0, 0, 1531,
	0, 0, 0, 0, 164, 0, 0, 0, 93, 0,
	0, 0, 195, 83, 90, 0, 2573, 0, 0, 0,
	0, 0, 188, 0, 1556, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 1545, 0, 1242, 0, 225, 0, 0, 0, 0,
	0, 0, 1374, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 84, 1561, 1562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2367, 2367, 2367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 1537, 0, 0, 0, 0, 2367, 0, 2842, 0,
	0, 1242, 1242, 225, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 225, 225, 0, 0, 2620, 2621,
	0, 0, 941, 0, 2627, 2367, 0, 2367, 225, 0,
	0, 0, 0, 0, 1549, 0, 0, 0, 0, 0,
	0, 2367, 0, 2641, 2642, 3463, 0, 0, 0, 2146,
	0, 0, 0, 0, 225, 0, 0, 0, 2649, 0,
	0, 225, 0, 0, 0, 226, 226, 226, 0, 0,
	0, 0, 0, 0, 2663, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 2675, 0, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 160, 88, 0,
	89, 1547, 0, 0, 0, 1522, 1523, 1529, 1550, 1528,
	1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517,
	1518, 0, 194, 0, 0, 3342, 0, 0, 0, 3341,
	728, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2249, 2249, 2249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 1651, 0, 0, 0, 0, 2367, 0, 2842, 2766,
	0, 3549, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	1111, 0, 0, 0, 0, 0, 1219, 164, 0, 0,
	1508, 1509, 0, 0, 605, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 1539, 189, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	881, 0, 3549, 0, 0, 1372, 0, 0, 0, 0,
	2367, 0, 0, 0, 881, 0, 0, 0, 0, 1510,
	3624, 0, 0, 0, 0, 0, 0, 1321, 0, 1530,
	0, 0, 1242, 0, 0, 0, 0, 1527, 0, 0,
	0, 2859, 0, 0, 0, 0, 0, 1345, 1345, 1345,
	0, 0, 0, 0, 0, 225, 225, 0, 0, 0,
	0, 0, 1378, 1379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3072,
	0, 3034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3549, 0, 0, 0, 0, 0,
	0, 1533, 1534, 1535, 1536, 0, 0, 0, 0, 0,
	0, 1516, 0, 2709, 2710, 0, 2727, 2728, 2729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3040, 0, 0, 0, 0, 1461,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	1540, 0, 0, 0, 0, 0, 3463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 1525, 1526, 0, 0, 0, 2842, 0,
	0, 0, 2724, 0, 0, 0, 0, 0, 0, 1508,
	1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0, 0,
	1531, 0, 0, 1242, 0, 1242, 0, 0, 0, 0,
	1544, 1539, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 0,
	3765, 0, 0, 0, 0, 0, 0, 1242, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 225,
	2367, 0, 0, 0, 2715, 0, 1527, 0, 0, 0,
	0, 0, 0, 2053, 0, 0, 225, 0, 0, 3026,
	3027, 0, 0, 3030, 0, 0, 0, 3033, 0, 0,
	0, 0, 1537, 0, 0, 0, 3037, 0, 0, 0,
	0, 0, 3072, 0, 0, 3044, 0, 0, 2766, 0,
	0, 0, 1532, 0, 0, 0, 0, 2730, 0, 0,
	0, 0, 0, 3056, 0, 0, 0, 0, 0, 0,
	1533, 1534, 1535, 1536, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 3079, 3080, 0, 3081, 3082, 3083, 0,
	0, 0, 0, 2725, 0, 2367, 0, 0, 0, 0,
	0, 0, 0, 0, 3089, 0, 0, 0, 3091, 1548,
	0, 0, 1558, 0, 0, 1689, 3549, 0, 1538, 1540,
	0, 226, 1120, 226, 226, 0, 1120, 226, 226, 1120,
	1698, 0, 1219, 1554, 0, 1555, 0, 0, 0, 3119,
	3120, 226, 1525, 1526, 0, 0, 0, 1242, 0, 2367,
	0, 0, 0, 0, 0, 0, 0, 3131, 1546, 0,
	1120, 2709, 2710, 0, 2727, 2728, 2729, 0, 0, 1531,
	1528, 1524, 3140, 1521, 1519, 1520, 1512, 1513, 1514, 1515,
	1517, 1518, 3039, 0, 1120, 226, 226, 0, 0, 0,
	0, 0, 0, 0, 1556, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 2726, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 0, 226, 226,
	226, 0, 0, 226, 1120, 0, 0, 0, 1120, 3170,
	2724, 0, 1120, 226, 226, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 3179, 3182, 2525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2525, 0,
	0, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	3202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 0, 1120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 0, 0, 0, 0,
	226, 0, 2715, 0, 0, 0, 0, 0, 0, 2721,
	2722, 2723, 0, 0, 0, 226, 2720, 2718, 2719, 2711,
	2712, 2713, 2714, 2716, 2717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 1651, 0, 0,
	1883, 0, 0, 0, 0, 2730, 3273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 1902, 0, 1902, 0, 0,
	0, 1547, 0, 0, 0, 1522, 1523, 1529, 1550, 1528,
	1524, 2725, 1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517,
	1518, 0, 0, 0, 0, 2684, 0, 0, 0, 2685,
	0, 0, 0, 0, 1219, 0, 0, 0, 0, 3312,
	3313, 0, 0, 0, 0, 3317, 3318, 0, 0, 0,
	3321, 3322, 0, 0, 0, 0, 0, 3326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3330, 0,
	0, 0, 1883, 0, 0, 1955, 0, 0, 0, 0,
	0, 1508, 1509, 0, 3335, 0, 0, 1551, 1552, 1553,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 1539, 0, 1982, 0, 1984, 0, 1986,
	1511, 1988, 0, 1989, 0, 0, 0, 1557, 0, 0,
	0, 0, 0, 2726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1508, 1509, 0, 2007, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 226, 0, 1527, 0,
	0, 0, 0, 1539, 0, 0, 0, 1120, 0, 0,
	1511, 226, 226, 226, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3182, 1120, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 1120, 0, 1527, 0,
	0, 0, 1533, 1534, 1535, 1536, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 2721, 2722, 2723,
	0, 0, 0, 0, 2720, 2718, 2719, 2711, 2712, 2713,
	2714, 2716, 2717, 0, 0, 0, 0, 0, 0, 0,
	0, 1548, 3029, 0, 1558, 0, 0, 0, 0, 0,
	1538, 1540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 1534, 1535, 1536, 0, 0, 0, 0,
	0, 928, 1516, 0, 1525, 1526, 0, 0, 3182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 0, 0, 3516, 3517, 3518, 0, 0,
	1538, 1540, 0, 0, 224, 224, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2053, 1120,
	226, 3527, 3528, 0, 1525, 1526, 1120, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3536,
	0, 0, 2305, 0, 0, 0, 0, 0, 0, 0,
	641, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 226, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 3182, 1537, 0, 0, 0, 0, 0, 0,
	3574, 0, 0, 0, 226, 0, 226, 0, 226, 3581,
	0, 0, 881, 1532, 0, 0, 0, 0, 3588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 1537, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1120, 0, 1120, 1049, 1120,
	0, 0, 0, 1532, 0, 0, 0, 0, 1120, 1120,
	0, 0, 1120, 226, 0, 0, 226, 0, 0, 0,
	0, 3182, 3182, 0, 0, 1120, 1120, 1120, 0, 0,
	0, 1219, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 226, 0, 226, 0,
	226, 0, 226, 1547, 226, 0, 0, 0, 0, 0,
	1550, 1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514,
	1515, 1517, 1518, 0, 1883, 3684, 0, 0, 3687, 0,
	0, 2474, 0, 0, 0, 226, 0, 0, 917, 95,
	0, 0, 0, 0, 0, 0, 0, 3182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2505, 0,
	0, 1345, 0, 1345, 0, 1345, 0, 0, 0, 0,
	0, 1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514,
	1515, 1517, 1518, 1120, 0, 0, 0, 0, 0, 0,
	1508, 1509, 0, 0, 3182, 0, 0, 3182, 0, 2552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1539, 0, 0, 2560, 0, 2563, 0, 1511,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2053, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 2584, 1219, 2586, 1219, 0, 2589, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 1120, 0, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 857, 0, 0, 0, 0, 2617, 0, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 0, 0,
	0, 3028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3827, 3827, 3827, 0, 0, 0, 0,
	0, 1533, 1534, 1535, 1536, 1036, 0, 0, 0, 0,
	1120, 1516, 0, 0, 0, 0, 3848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3827, 0, 0, 0, 0,
	0, 0, 0, 1525, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 1120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3182, 0, 3182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1120, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 224, 224, 226, 0, 224, 224, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	3827, 3954, 0, 0, 0, 0, 0, 0, 3958, 0,
	0, 0, 226, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 1120, 0, 0, 226, 0,
	0, 0, 0, 0, 224, 224, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 224, 224, 224,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 224, 0, 0, 0, 0, 0, 226,
	0, 0, 226, 0, 226, 0, 226, 0, 0, 0,
	2834, 0, 0, 226, 226, 1120, 1120, 0, 1120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 714,
	1120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 2872, 2874, 2474, 0, 0, 0, 0, 0,
	0, 0, 0, 697, 0, 0, 226, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515,
	1517, 1518, 0, 0, 224, 0, 0, 698, 0, 0,
	0, 0, 226, 226, 226, 226, 0, 226, 699, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2930, 0, 0, 700, 2934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 719, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 1508, 1509, 0, 1541, 1542, 1543, 1551,
	1552, 1553, 1219, 1219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 702, 1544, 1539, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 2988, 0, 1557,
	0, 0, 0, 703, 0, 0, 704, 0, 95, 0,
	95, 0, 95, 0, 0, 628, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 718,
	1527, 0, 0, 3012, 0, 1219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3024, 0,
	0, 0, 0, 0, 876, 95, 95, 0, 0, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 0,
	0, 0, 95, 0, 1533, 1534, 1535, 1536, 0, 1673,
	0, 1049, 0, 0, 1516, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 1673, 224, 0, 0, 0, 0, 641, 0, 0,
	0, 706, 641, 1548, 0, 0, 1558, 0, 0, 0,
	0, 0, 1538, 1540, 0, 1120, 95, 0, 0, 0,
	0, 722, 0, 707, 0, 0, 0, 1554, 0, 1555,
	0, 0, 0, 0, 0, 0, 1525, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 0, 1546, 0, 627, 0, 0, 0, 964, 0,
	0, 708, 1120, 1531, 0, 709, 0, 0, 0, 0,
	0, 716, 0, 0, 710, 0, 0, 0, 0, 0,
	1120, 0, 0, 0, 0, 0, 0, 0, 1556, 0,
	0, 0, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 0, 1545, 0, 711, 717, 0,
	0, 226, 0, 0, 0, 712, 0, 1573, 0, 0,
	0, 0, 0, 0, 0, 1508, 1509, 0, 713, 0,
	0, 0, 0, 720, 1579, 0, 0, 0, 1585, 0,
	0, 0, 0, 226, 226, 226, 629, 1539, 0, 0,
	0, 0, 226, 0, 1511, 1537, 0, 715, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 641,
	0, 0, 0, 0, 1120, 1532, 0, 0, 0, 0,
	226, 0, 0, 1120, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 1120, 0, 0, 1549, 0,
	0, 1120, 1527, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 224, 1120, 226, 0,
	224, 0, 0, 0, 0, 224, 0, 0, 1120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2474, 0, 224, 0, 224, 2626, 224, 0, 0,
	3243, 0, 0, 0, 0, 1053, 1671, 0, 1674, 0,
	95, 0, 0, 226, 226, 3255, 1533, 1534, 1535, 1536,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	1120, 1120, 0, 0, 224, 1547, 0, 0, 226, 1522,
	1523, 1529, 1550, 1528, 1524, 0, 1521, 1519, 1520, 1512,
	1513, 1514, 1515, 1517, 1518, 0, 0, 0, 0, 2142,
	0, 0, 0, 2143, 1538, 1540, 0, 0, 0, 0,
	0, 0, 224, 0, 3297, 224, 0, 0, 0, 0,
	0, 0, 1120, 0, 226, 1120, 226, 0, 1525, 1526,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 224, 0, 224, 0, 224,
	0, 224, 0, 224, 0, 1531, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 1508, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1539, 0,
	0, 0, 0, 1120, 0, 1511, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 1537, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 1532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2619, 0, 0,
	0, 3417, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2474, 0, 0, 0, 0, 1533, 1534, 1535,
	1536, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2474, 0, 0, 0, 0, 0, 0, 3478,
	0, 0, 0, 0, 0, 1538, 1540, 0, 0, 0,
	0, 876, 1049, 876, 0, 1528, 1524, 0, 1521, 1519,
	1520, 1512, 1513, 1514, 1515, 1517, 1518, 0, 1049, 1525,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1120, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 1053, 0,
	0, 226, 1053, 0, 0, 1053, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1053, 3556, 0, 857,
	0, 0, 857, 857, 0, 0, 0, 0, 1537, 0,
	0, 0, 0, 224, 1120, 1120, 1120, 0, 0, 0,
	1053, 0, 0, 0, 224, 0, 0, 0, 1532, 0,
	1120, 0, 0, 0, 0, 226, 1120, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 2120, 1120, 0,
	1053, 0, 0, 0, 1053, 0, 0, 641, 1053, 0,
	0, 0, 0, 876, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 1579, 0, 0, 0, 1579, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3662, 1219, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 224, 0, 224, 0, 224, 0, 0, 0, 0,
	0, 0, 224, 224, 0, 0, 1528, 1524, 0, 1521,
	1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518, 0, 1036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 1674, 0, 0, 1120, 0,
	1120, 0, 0, 0, 0, 224, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 224, 224, 224, 0, 224, 3730, 224, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 226, 226, 0, 0, 1120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 224,
	0, 0, 0, 1120, 1120, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 1120,
	226, 0, 0, 0, 1120, 0, 0, 0, 3773, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 3797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 1117, 3809, 1120, 0, 1117, 0, 0,
	1234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
	0, 95, 0, 0, 0, 1120, 0, 0, 0, 0,
	0, 1234, 0, 0, 0, 0, 1053, 0, 1053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 1234, 0, 0, 0, 0,
	95, 0, 0, 95, 0, 0, 1120, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1120,
	0, 1053, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 95, 0, 1234, 0, 0, 0, 1234,
	0, 0, 1053, 1234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 0, 0, 1049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1049, 0,
	0, 0, 0, 95, 0, 0, 1234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 0, 1120, 0, 0, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 660, 0,
	678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2120, 0, 224, 224, 224, 0, 0, 0, 0, 0,
	0, 1673, 0, 0, 661, 0, 0, 662, 0, 0,
	0, 1579, 0, 0, 224, 0, 0, 0, 0, 226,
	0, 0, 1120, 0, 685, 0, 0, 0, 0, 224,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 0, 0, 226, 0,
	0, 1120, 0, 0, 0, 641, 0, 0, 0, 0,
	0, 1120, 1120, 224, 664, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1120, 0,
	0, 0, 0, 0, 665, 0, 0, 666, 0, 0,
	0, 1049, 687, 0, 0, 0, 628, 0, 0, 0,
	0, 1053, 0, 1053, 0, 1053, 0, 0, 0, 0,
	0, 0, 224, 224, 1053, 1053, 0, 0, 1053, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1053, 1053, 1053, 0, 0, 0, 224, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1036, 0, 0, 0, 0, 226, 0, 0, 1117, 0,
	0, 0, 686, 0, 0, 1036, 0, 0, 0, 634,
	0, 669, 0, 0, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 224, 1234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 0,
	0, 667, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1727, 1727, 1053,
	0, 0, 0, 0, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 95, 0, 627, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 679, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 0,
	0, 0, 0, 0, 95, 95, 0, 0, 95, 0,
	0, 0, 0, 0, 677, 0, 0, 0, 0, 0,
	0, 0, 1118, 0, 0, 0, 1118, 1053, 673, 1235,
	0, 690, 0, 689, 0, 0, 674, 0, 0, 0,
	1234, 0, 0, 0, 0, 0, 0, 1117, 0, 675,
	0, 0, 0, 0, 682, 0, 0, 0, 0, 691,
	1235, 688, 0, 0, 0, 0, 0, 629, 0, 1049,
	1049, 0, 0, 0, 0, 0, 0, 0, 1036, 0,
	0, 876, 0, 0, 1235, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 95, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 1235, 0, 0, 0, 1235, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 1508, 1509, 0, 1541,
	1542, 1543, 1551, 1552, 1553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1544, 1539, 0,
	0, 0, 0, 0, 0, 1511, 1234, 0, 1234, 0,
	1234, 0, 1557, 0, 0, 1235, 0, 1053, 0, 1234,
	1234, 0, 0, 1234, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 1510, 1234, 1234, 1234, 0,
	0, 0, 0, 0, 0, 1530, 0, 1053, 0, 0,
	0, 224, 0, 1527, 0, 0, 634, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 1727, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1049, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 1533, 1534, 1535,
	1536, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1548, 0, 0, 1558,
	0, 0, 0, 0, 0, 1538, 1540, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 0, 1555, 0, 0, 0, 1036, 1036, 0, 1525,
	1526, 1053, 1053, 0, 1053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1546, 1053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 1556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 0, 0, 0, 0, 1049, 0, 0, 0, 0,
	0, 0, 0, 1049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1673, 1118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1117, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 1532, 0,
	0, 224, 0, 0, 0, 0, 1118, 0, 0, 0,
	0, 0, 224, 224, 0, 0, 0, 0, 0, 0,
	0, 1549, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 1036, 0, 0, 0, 0, 0, 224,
	0, 0, 1234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 0, 1522, 1523, 1529, 1550, 1528, 1524, 0, 1521,
	1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 3340, 0, 0, 1235,
	0, 0, 0, 0, 1117, 0, 1118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1053, 1053, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 1036, 1053, 0, 0, 0, 0, 0, 0,
	1036, 0, 0, 0, 0, 1053, 1234, 1234, 1053, 1234,
	1508, 1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0,
	0, 1234, 1727, 0, 0, 0, 1053, 0, 0, 0,
	0, 1544, 1539, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 1235, 1557, 1235, 0, 1235,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 1235,
	0, 0, 1235, 1727, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 1235, 1235, 1235, 0, 1530,
	0, 0, 0, 224, 224, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 0, 95, 1053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 1533, 1534, 1535, 1536, 0, 0, 0, 0, 0,
	0, 1516, 0, 1053, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 0, 0, 1118, 0, 0, 0, 0, 1053, 0,
	1548, 0, 0, 1558, 0, 0, 0, 224, 0, 1538,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 1555, 0, 0, 0,
	0, 0, 0, 1525, 1526, 0, 1053, 1053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 1118, 0, 0, 0, 1556, 0, 0, 1053, 0,
	0, 1053, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1727, 1117, 0, 0, 0,
	1118, 0, 1537, 0, 0, 0, 0, 0, 0, 0,
	0, 2120, 1053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 0, 1118, 0, 1117, 1053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	1727, 0, 0, 1117, 0, 1549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1117, 0, 0, 0, 0, 0, 0, 1727, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 1118, 0, 0, 0, 0, 1053, 1053, 0, 0,
	0, 0, 1547, 0, 0, 0, 1522, 1523, 1529, 1550,
	1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515,
	1517, 1518, 0, 0, 0, 1117, 0, 0, 0, 1053,
	3042, 0, 0, 0, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 1118, 0, 0, 1234, 0, 0, 0,
	0, 0, 1117, 0, 0, 1235, 0, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 1509,
	0, 1541, 1542, 1543, 1551, 1552, 1553, 0, 0, 0,
	0, 0, 0, 0, 95, 0, 0, 95, 0, 1544,
	1539, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 1234, 1234, 0, 1557, 1235, 1235, 0, 1235, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 1727, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 1053, 0,
	0, 0, 0, 1117, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1053, 1053, 1053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1533,
	1534, 1535, 1536, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 1053, 0, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 1117, 0, 0, 0, 1548, 0,
	0, 1558, 0, 0, 0, 0, 0, 1538, 1540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 1555, 0, 0, 0, 0, 0,
	0, 1525, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1053, 1556, 0, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 1053, 0, 1053, 0, 0, 0,
	1545, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 1508, 1509,
	1532, 1541, 1542, 1543, 1551, 1552, 1553, 0, 0, 1053,
	1053, 0, 0, 0, 0, 1118, 0, 0, 0, 1544,
	1539, 0, 0, 1549, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 1557, 1053, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 1118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 1118, 0, 0, 0, 1234, 1530, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 0,
	1118, 1053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1234, 0, 0, 0, 0, 0, 0,
	1547, 1053, 0, 0, 1522, 1523, 1529, 1550, 1528, 1524,
	0, 1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518,
	0, 0, 1727, 0, 0, 1234, 1234, 1234, 2687, 1533,
	1534, 1535, 1536, 0, 0, 0, 0, 0, 0, 1516,
	0, 1234, 1053, 0, 0, 0, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 1118, 0, 0, 0, 1548, 1117,
	0, 1558, 0, 1235, 0, 0, 0, 1538, 1540, 0,
	1727, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 1118, 1554, 0, 1555, 0, 0, 0, 0, 0,
	0, 1525, 1526, 1053, 0, 1508, 1509, 1235, 1541, 1542,
	1543, 1551, 1552, 1553, 0, 0, 0, 1546, 1235, 0,
	0, 0, 0, 0, 0, 0, 1544, 1539, 1531, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 1053, 0, 1556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	1235, 1235, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 1527, 0, 0, 0, 0, 0, 0, 1117,
	0, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 1118, 0, 0, 1118, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 1533, 1534, 1535, 1536,
	0, 0, 0, 1117, 0, 0, 1516, 0, 1117, 0,
	0, 0, 0, 1549, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 1234, 1234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1548, 0, 0, 1558, 0,
	0, 0, 0, 0, 1538, 1540, 1118, 1053, 0, 0,
	1117, 0, 0, 0, 0, 1234, 0, 1053, 1053, 1554,
	0, 1555, 0, 1118, 0, 0, 0, 0, 1525, 1526,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 1117, 0, 0, 0,
	1547, 0, 0, 0, 1522, 1523, 1529, 1550, 1528, 1524,
	0, 1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518,
	1556, 0, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1117, 0, 0, 0, 0, 0, 0, 1537, 0, 0,
	0, 0, 0, 1118, 0, 0, 0, 1508, 1509, 0,
	1541, 1542, 1543, 1551, 1552, 1553, 0, 1532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1544, 1539,
	0, 0, 0, 0, 0, 0, 1511, 0, 1117, 0,
	1549, 0, 0, 1557, 0, 0, 0, 0, 0, 0,
	0, 1508, 1509, 0, 1541, 1542, 1543, 1551, 1552, 1553,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 1544, 1539, 0, 0, 1530, 0, 0, 0,
	1511, 0, 0, 1117, 1527, 0, 1234, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 1547, 1527, 0,
	0, 1522, 1523, 1529, 1550, 1528, 1524, 0, 1521, 1519,
	1520, 1512, 1513, 1514, 1515, 1517, 1518, 0, 1533, 1534,
	1535, 1536, 1235, 0, 0, 2686, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1235, 1235, 1235, 1548, 0, 0,
	1558, 0, 1533, 1534, 1535, 1536, 1538, 1540, 0, 0,
	1235, 0, 1516, 1234, 0, 0, 1118, 0, 0, 0,
	0, 1554, 0, 1555, 0, 0, 0, 0, 0, 0,
	1525, 1526, 0, 0, 0, 0, 0, 0, 1118, 0,
	0, 1548, 1234, 0, 1558, 0, 1546, 0, 0, 0,
	1538, 1540, 1234, 1234, 0, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 0, 1554, 0, 1555, 0, 1234,
	0, 0, 0, 0, 1525, 1526, 0, 0, 0, 0,
	0, 0, 1556, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1556, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1545, 0, 0, 0, 0, 0, 1537,
	0, 0, 0, 0, 0, 0, 0, 0, 1118, 0,
	1118, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 0, 0, 0, 0, 777, 1118, 814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1549, 1537, 0, 0, 0, 0, 0, 0,
	0, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 0, 796, 782, 0,
	0, 0, 1118, 0, 0, 0, 0, 1118, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 783, 1235, 1235, 0, 0, 786, 0, 0,
	0, 0, 820, 0, 0, 0, 0, 0, 0, 0,
	793, 794, 0, 0, 0, 0, 807, 0, 0, 1118,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 1547,
	815, 788, 0, 1522, 1523, 1529, 1550, 1528, 1524, 0,
	1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 2683, 0, 0,
	0, 0, 0, 0, 813, 1118, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 1522, 1523, 1529,
	1550, 1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514,
	1515, 1517, 1518, 0, 0, 1118, 0, 0, 0, 0,
	789, 2682, 0, 0, 0, 0, 0, 0, 781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 0, 0, 0, 0, 1118, 0, 0, 0,
	0, 0, 0, 798, 797, 0, 0, 0, 0, 1118,
	0, 792, 0, 0, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 816, 0,
	0, 0, 0, 0, 0, 0, 0, 1118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1118, 0, 0, 1235, 0, 0, 0, 785,
	0, 0, 0, 811, 812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 809, 0, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 801, 0, 0, 0, 0, 0, 802,
	0, 0, 779, 0, 817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 0, 0, 800, 0, 0, 0,
	0, 0, 0, 0, 0, 818, 0, 0, 0, 0,
	0, 0, 0, 806, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 1235, 0, 0, 0, 0, 810, 0, 0, 0,
	0, 1235, 1235, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 1121, 240, 241, 1122, 1123, 1124, 1235, 1125,
	501, 1126, 1127, 1128, 1129, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 1130, 250,
	251, 252, 253, 254, 1131, 1132, 0, 255, 506, 507,
	508, 1133, 256, 257, 509, 1134, 1201, 1135, 258, 259,
	260, 261, 262, 263, 264, 0, 1136, 266, 267, 268,
	265, 1137, 269, 0, 270, 271, 272, 1138, 273, 994,
	274, 275, 1139, 1140, 1142, 1141, 1143, 1144, 1145, 276,
	277, 278, 279, 0, 280, 510, 511, 1146, 284, 281,
	282, 1147, 285, 283, 1148, 286, 287, 1149, 1150, 288,
	289, 290, 1151, 291, 292, 1152, 293, 294, 1153, 295,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 513, 514, 1154, 231, 1155, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 1156,
	312, 1157, 1158, 995, 313, 314, 516, 517, 315, 316,
	1159, 317, 518, 1160, 519, 318, 1161, 319, 320, 321,
	322, 323, 520, 521, 522, 377, 997, 324, 325, 1162,
	326, 327, 328, 329, 0, 0, 0, 232, 330, 331,
	333, 1163, 996, 332, 523, 524, 1164, 525, 1165, 334,
	998, 526, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 1166, 345, 344, 1167,
	346, 527, 1001, 347, 348, 1002, 1168, 349, 350, 351,
	1169, 1170, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 1171,
	233, 1005, 375, 1172, 528, 376, 529, 378, 379, 1173,
	0, 380, 0, 1174, 1175, 382, 383, 384, 1176, 1177,
	385, 386, 530, 1006, 387, 1007, 531, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 1178, 397, 398,
	532, 533, 534, 399, 535, 400, 401, 1179, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 1180, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 1181, 422, 423,
	424, 1008, 425, 426, 427, 428, 537, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 1182, 443,
	444, 442, 445, 446, 447, 1183, 448, 432, 433, 449,
	450, 1009, 451, 452, 538, 0, 453, 1184, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	540, 1185, 465, 466, 0, 464, 1186, 467, 468, 469,
	470, 471, 302, 472, 1187, 473, 541, 542, 543, 544,
	1188, 480, 1189, 474, 475, 545, 476, 546, 1190, 477,
	478, 479, 0, 481, 482, 1191, 1192, 483, 484, 485,
	487, 488, 486, 489, 1193, 490, 1194, 0, 491, 492,
	493, 547, 548, 549, 1195, 495, 494, 550, 1196, 1197,
	1198, 1199, 496, 497, 551, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1115, 0, 0, 0, 0, 0, 0, 0, 2283,
	0, 0, 0, 0, 0, 0, 0, 2284, 234, 235,
	236, 237, 238, 239, 1121, 240, 241, 1122, 1123, 1124,
	0, 1125, 501, 1126, 1127, 1128, 1129, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	1130, 250, 251, 252, 253, 254, 1131, 1132, 0, 255,
	506, 507, 508, 1133, 256, 257, 509, 1134, 1201, 1135,
	258, 259, 260, 261, 262, 263, 264, 0, 1136, 266,
	267, 268, 265, 1137, 269, 0, 270, 271, 272, 1138,
	273, 994, 274, 275, 1139, 1140, 1142, 1141, 1143, 1144,
	1145, 276, 277, 278, 279, 0, 280, 510, 511, 1146,
	284, 281, 282, 1147, 285, 283, 1148, 286, 287, 1149,
	1150, 288, 289, 290, 1151, 291, 292, 1152, 293, 294,
	1153, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 1154, 231, 1155, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 1156, 312, 1157, 1158, 995, 313, 314, 516, 517,
	315, 316, 1159, 317, 518, 1160, 519, 318, 1161, 319,
	320, 321, 322, 323, 520, 521, 522, 377, 997, 324,
	325, 1162, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 1163, 996, 332, 523, 524, 1164, 525,
	1165, 334, 998, 526, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 1166, 345,
	344, 1167, 346, 527, 1001, 347, 348, 1002, 1168, 349,
	350, 351, 1169, 1170, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 1171, 233, 1005, 375, 1172, 528, 376, 529, 378,
	379, 1173, 0, 380, 0, 1174, 1175, 382, 383, 384,
	1176, 1177, 385, 386, 530, 1006, 387, 1007, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 1178,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 1179,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 1180, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 1181,
	422, 423, 424, 1008, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	1182, 443, 444, 442, 445, 446, 447, 1183, 448, 432,
	433, 449, 450, 1009, 451, 452, 538, 0, 453, 1184,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 1185, 465, 466, 0, 464, 1186, 467,
	468, 469, 470, 471, 302, 472, 1187, 473, 541, 542,
	543, 544, 1188, 480, 1189, 474, 475, 545, 476, 546,
	1190, 477, 478, 479, 0, 481, 482, 1191, 1192, 483,
	484, 485, 487, 488, 486, 489, 1193, 490, 1194, 0,
	491, 492, 493, 547, 548, 549, 1195, 495, 494, 550,
	1196, 1197, 1198, 1199, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1115, 0, 0, 0, 0, 3050, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3052, 234, 235,
	236, 237, 238, 239, 1121, 240, 241, 1122, 1123, 1124,
	0, 1125, 501, 1126, 1127, 1128, 1129, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	1130, 250, 251, 252, 253, 254, 1131, 1132, 0, 255,
	506, 507, 508, 1133, 256, 257, 509, 1134, 1201, 1135,
	258, 259, 260, 261, 262, 263, 264, 0, 1136, 266,
	267, 268, 265, 1137, 269, 0, 270, 271, 272, 1138,
	273, 994, 274, 275, 1139, 1140, 1142, 1141, 1143, 1144,
	1145, 276, 277, 278, 279, 0, 280, 510, 511, 1146,
	284, 281, 282, 1147, 285, 283, 1148, 286, 287, 1149,
	1150, 288, 289, 290, 1151, 291, 292, 1152, 293, 294,
	1153, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 1154, 231, 1155, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 1156, 312, 1157, 1158, 995, 313, 314, 516, 517,
	315, 316, 1159, 317, 518, 1160, 519, 318, 1161, 319,
	320, 321, 322, 323, 520, 521, 522, 377, 997, 324,
	325, 1162, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 1163, 996, 332, 523, 524, 1164, 525,
	1165, 334, 998, 526, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 1166, 345,
	344, 1167, 346, 527, 1001, 347, 348, 1002, 1168, 349,
	350, 351, 1169, 1170, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 1171, 233, 1005, 375, 1172, 528, 376, 529, 378,
	379, 1173, 0, 380, 0, 1174, 1175, 382, 383, 384,
	1176, 1177, 385, 386, 530, 1006, 387, 1007, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 1178,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 1179,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 1180, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 1181,
	422, 423, 424, 1008, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	1182, 443, 444, 442, 445, 446, 447, 1183, 448, 432,
	433, 449, 450, 1009, 451, 452, 538, 0, 453, 1184,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 1185, 465, 466, 0, 464, 1186, 467,
	468, 469, 470, 471, 302, 472, 1187, 473, 541, 542,
	543, 544, 1188, 480, 1189, 474, 475, 545, 476, 546,
	1190, 477, 478, 479, 0, 481, 482, 1191, 1192, 483,
	484, 485, 487, 488, 486, 489, 1193, 490, 1194, 0,
	491, 492, 493, 547, 548, 549, 1195, 495, 494, 550,
	1196, 1197, 1198, 1199, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3368, 234, 235, 236, 237, 238, 239, 1121, 240,
	241, 1122, 1123, 1124, 0, 1125, 501, 1126, 1127, 1128,
	1129, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 1130, 250, 251, 252, 253, 254,
	1131, 1132, 0, 255, 506, 507, 508, 1133, 256, 257,
	509, 1134, 1201, 1135, 258, 259, 260, 261, 262, 263,
	264, 0, 1136, 266, 267, 268, 265, 1137, 269, 0,
	270, 271, 272, 1138, 273, 994, 274, 275, 1139, 1140,
	1142, 1141, 1143, 1144, 1145, 276, 277, 278, 279, 0,
	280, 510, 511, 1146, 284, 281, 282, 1147, 285, 283,
	1148, 286, 287, 1149, 1150, 288, 289, 290, 1151, 291,
	292, 1152, 293, 294, 1153, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	1154, 231, 1155, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 1156, 312, 1157, 1158, 995,
	313, 314, 516, 517, 315, 316, 1159, 317, 518, 1160,
	519, 318, 1161, 319, 320, 321, 322, 323, 520, 521,
	522, 377, 997, 324, 325, 1162, 326, 327, 328, 329,
	0, 0, 0, 232, 330, 331, 333, 1163, 996, 332,
	523, 524, 1164, 525, 1165, 334, 998, 526, 999, 335,
	336, 337, 1000, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 1166, 345, 344, 1167, 346, 527, 1001, 347,
	348, 1002, 1168, 349, 350, 351, 1169, 1170, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 1003, 368, 369, 370,
	373, 374, 372, 1004, 371, 1171, 233, 1005, 375, 1172,
	528, 376, 529, 378, 379, 1173, 0, 380, 0, 1174,
	1175, 382, 383, 384, 1176, 1177, 385, 386, 530, 1006,
	387, 1007, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 1178, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 1179, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 1180, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 1181, 422, 423, 424, 1008, 425, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 1182, 443, 444, 442, 445, 446,
	447, 1183, 448, 432, 433, 449, 450, 1009, 451, 452,
	538, 0, 453, 1184, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 1185, 465, 466,
	0, 464, 1186, 467, 468, 469, 470, 471, 302, 472,
	1187, 473, 541, 542, 543, 544, 1188, 480, 1189, 474,
	475, 545, 476, 546, 1190, 477, 478, 479, 0, 481,
	482, 1191, 1192, 483, 484, 485, 487, 488, 486, 489,
	1193, 490, 1194, 0, 491, 492, 493, 547, 548, 549,
	1195, 495, 494, 550, 1196, 1197, 1198, 1199, 496, 497,
	551, 498, 499, 500, 1115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3522, 234, 235, 236, 237, 238, 239, 1121, 240, 241,
	1122, 1123, 1124, 0, 1125, 501, 1126, 1127, 1128, 1129,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 1130, 250, 251, 252, 253, 254, 1131,
	1132, 0, 255, 506, 507, 508, 1133, 256, 257, 509,
	1134, 1201, 1135, 258, 259, 260, 261, 262, 263, 264,
	0, 1136, 266, 267, 268, 265, 1137, 269, 0, 270,
	271, 272, 1138, 273, 994, 274, 275, 1139, 1140, 1142,
	1141, 1143, 1144, 1145, 276, 277, 278, 279, 0, 280,
	510, 511, 1146, 284, 281, 282, 1147, 285, 283, 1148,
	286, 287, 1149, 1150, 288, 289, 290, 1151, 291, 292,
	1152, 293, 294, 1153, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 1154,
	231, 1155, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 1156, 312, 1157, 1158, 995, 313,
	314, 516, 517, 315, 316, 1159, 317, 518, 1160, 519,
	318, 1161, 319, 320, 321, 322, 323, 520, 521, 522,
	377, 997, 324, 325, 1162, 326, 327, 328, 329, 0,
	0, 0, 232, 330, 331, 333, 1163, 996, 332, 523,
	524, 1164, 525, 1165, 334, 998, 526, 999, 335, 336,
	337, 1000, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 1166, 345, 344, 1167, 346, 527, 1001, 347, 348,
	1002, 1168, 349, 350, 351, 1169, 1170, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 1003, 368, 369, 370, 373,
	374, 372, 1004, 371, 1171, 233, 1005, 375, 1172, 528,
	376, 529, 378, 379, 1173, 0, 380, 0, 1174, 1175,
	382, 383, 384, 1176, 1177, 385, 386, 530, 1006, 387,
	1007, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 1178, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 1179, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 1180, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 1181, 422, 423, 424, 1008, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 1182, 443, 444, 442, 445, 446, 447,
	1183, 448, 432, 433, 449, 450, 1009, 451, 452, 538,
	0, 453, 1184, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 1185, 465, 466, 0,
	464, 1186, 467, 468, 469, 470, 471, 302, 472, 1187,
	473, 541, 542, 543, 544, 1188, 480, 1189, 474, 475,
	545, 476, 546, 1190, 477, 478, 479, 0, 481, 482,
	1191, 1192, 483, 484, 485, 487, 488, 486, 489, 1193,
	490, 1194, 0, 491, 492, 493, 547, 548, 549, 1195,
	495, 494, 550, 1196, 1197, 1198, 1199, 496, 497, 551,
	498, 499, 500, 1115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3424,
	234, 235, 236, 237, 238, 239, 1121, 240, 241, 1122,
	1123, 1124, 0, 1125, 501, 1126, 1127, 1128, 1129, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 1130, 250, 251, 252, 253, 254, 1131, 1132,
	0, 255, 506, 507, 508, 1133, 256, 257, 509, 1134,
	1201, 1135, 258, 259, 260, 261, 262, 263, 264, 0,
	1136, 266, 267, 268, 265, 1137, 269, 0, 270, 271,
	272, 1138, 273, 994, 274, 275, 1139, 1140, 1142, 1141,
	1143, 1144, 1145, 276, 277, 278, 279, 0, 280, 510,
	511, 1146, 284, 281, 282, 1147, 285, 283, 1148, 286,
	287, 1149, 1150, 288, 289, 290, 1151, 291, 292, 1152,
	293, 294, 1153, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 1154, 231,
	1155, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 1156, 312, 1157, 1158, 995, 313, 314,
	516, 517, 315, 316, 1159, 317, 518, 1160, 519, 318,
	1161, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	997, 324, 325, 1162, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 1163, 996, 332, 523, 524,
	1164, 525, 1165, 334, 998, 526, 999, 335, 336, 337,
	1000, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	1166, 345, 344, 1167, 346, 527, 1001, 347, 348, 1002,
	1168, 349, 350, 351, 1169, 1170, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 1003, 368, 369, 370, 373, 374,
	372, 1004, 371, 1171, 233, 1005, 375, 1172, 528, 376,
	529, 378, 379, 1173, 0, 380, 0, 1174, 1175, 382,
	383, 384, 1176, 1177, 385, 386, 530, 1006, 387, 1007,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 1178, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 1179, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 1180, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 1181, 422, 423, 424, 1008, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 1182, 443, 444, 442, 445, 446, 447, 1183,
	448, 432, 433, 449, 450, 1009, 451, 452, 538, 0,
	453, 1184, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 1185, 465, 466, 0, 464,
	1186, 467, 468, 469, 470, 471, 302, 472, 1187, 473,
	541, 542, 543, 544, 1188, 480, 1189, 474, 475, 545,
	476, 546, 1190, 477, 478, 479, 0, 481, 482, 1191,
	1192, 483, 484, 485, 487, 488, 486, 489, 1193, 490,
	1194, 0, 491, 492, 493, 547, 548, 549, 1195, 495,
	494, 550, 1196, 1197, 1198, 1199, 496, 497, 551, 498,
	499, 500, 1115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3298, 234,
	235, 236, 237, 238, 239, 1121, 240, 241, 1122, 1123,
	1124, 0, 1125, 501, 1126, 1127, 1128, 1129, 242, 243,
	245, 244, 246, 247, 248, 502, 503, 0, 504, 249,
	505, 1130, 250, 251, 252, 253, 254, 1131, 1132, 0,
	255, 506, 507, 508, 1133, 256, 257, 509, 1134, 1201,
	1135, 258, 259, 260, 261, 262, 263, 264, 0, 1136,
	266, 267, 268, 265, 1137, 269, 0, 270, 271, 272,
	1138, 273, 994, 274, 275, 1139, 1140, 1142, 1141, 1143,
	1144, 1145, 276, 277, 278, 279, 0, 280, 510, 511,
	1146, 284, 281, 282, 1147, 285, 283, 1148, 286, 287,
	1149, 1150, 288, 289, 290, 1151, 291, 292, 1152, 293,
	294, 1153, 295, 296, 512, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 513, 514, 1154, 231, 1155,
	0, 0, 0, 0, 308, 309, 310, 515, 0, 0,
	0, 311, 1156, 312, 1157, 1158, 995, 313, 314, 516,
	517, 315, 316, 1159, 317, 518, 1160, 519, 318, 1161,
	319, 320, 321, 322, 323, 520, 521, 522, 377, 997,
	324, 325, 1162, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 1163, 996, 332, 523, 524, 1164,
	525, 1165, 334, 998, 526, 999, 335, 336, 337, 1000,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 1166,
	345, 344, 1167, 346, 527, 1001, 347, 348, 1002, 1168,
	349, 350, 351, 1169, 1170, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 1003, 368, 369, 370, 373, 374, 372,
	1004, 371, 1171, 233, 1005, 375, 1172, 528, 376, 529,
	378, 379, 1173, 0, 380, 0, 1174, 1175, 382, 383,
	384, 1176, 1177, 385, 386, 530, 1006, 387, 1007, 531,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	1178, 397, 398, 532, 533, 534, 399, 535, 400, 401,
	1179, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	536, 411, 410, 412, 1180, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	1181, 422, 423, 424, 1008, 425, 426, 427, 428, 537,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 1182, 443, 444, 442, 445, 446, 447, 1183, 448,
	432, 433, 449, 450, 1009, 451, 452, 538, 0, 453,
	1184, 454, 455, 456, 457, 434, 458, 463, 539, 459,
	460, 461, 462, 540, 1185, 465, 466, 0, 464, 1186,
	467, 468, 469, 470, 471, 302, 472, 1187, 473, 541,
	542, 543, 544, 1188, 480, 1189, 474, 475, 545, 476,
	546, 1190, 477, 478, 479, 0, 481, 482, 1191, 1192,
	483, 484, 485, 487, 488, 486, 489, 1193, 490, 1194,
	0, 491, 492, 493, 547, 548, 549, 1195, 495, 494,
	550, 1196, 1197, 1198, 1199, 496, 497, 551, 498, 499,
	500, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3068, 234, 235,
	236, 237, 238, 239, 1121, 240, 241, 1122, 1123, 1124,
	0, 1125, 501, 1126, 1127, 1128, 1129, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	1130, 250, 251, 252, 253, 254, 1131, 1132, 0, 255,
	506, 507, 508, 1133, 256, 257, 509, 1134, 1201, 1135,
	258, 259, 260, 261, 262, 263, 264, 0, 1136, 266,
	267, 268, 265, 1137, 269, 0, 270, 271, 272, 1138,
	273, 994, 274, 275, 1139, 1140, 1142, 1141, 1143, 1144,
	1145, 276, 277, 278, 279, 0, 280, 510, 511, 1146,
	284, 281, 282, 1147, 285, 283, 1148, 286, 287, 1149,
	1150, 288, 289, 290, 1151, 291, 292, 1152, 293, 294,
	1153, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 1154, 231, 1155, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 1156, 312, 1157, 1158, 995, 313, 314, 516, 517,
	315, 316, 1159, 317, 518, 1160, 519, 318, 1161, 319,
	320, 321, 322, 323, 520, 521, 522, 377, 997, 324,
	325, 1162, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 1163, 996, 332, 523, 524, 1164, 525,
	1165, 334, 998, 526, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 1166, 345,
	344, 1167, 346, 527, 1001, 347, 348, 1002, 1168, 349,
	350, 351, 1169, 1170, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 1171, 233, 1005, 375, 1172, 528, 376, 529, 378,
	379, 1173, 0, 380, 0, 1174, 1175, 382, 383, 384,
	1176, 1177, 385, 386, 530, 1006, 387, 1007, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 1178,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 1179,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 1180, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 1181,
	422, 423, 424, 1008, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	1182, 443, 444, 442, 445, 446, 447, 1183, 448, 432,
	433, 449, 450, 1009, 451, 452, 538, 0, 453, 1184,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 1185, 465, 466, 0, 464, 1186, 467,
	468, 469, 470, 471, 302, 472, 1187, 473, 541, 542,
	543, 544, 1188, 480, 1189, 474, 475, 545, 476, 546,
	1190, 477, 478, 479, 0, 481, 482, 1191, 1192, 483,
	484, 485, 487, 488, 486, 489, 1193, 490, 1194, 0,
	491, 492, 493, 547, 548, 549, 1195, 495, 494, 550,
	1196, 1197, 1198, 1199, 496, 497, 551, 498, 499, 500,
	1115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2916, 234, 235, 236,
	237, 238, 239, 1121, 240, 241, 1122, 1123, 1124, 0,
	1125, 501, 1126, 1127, 1128, 1129, 242, 243, 245, 244,
	246, 247, 248, 502, 503, 0, 504, 249, 505, 1130,
	250, 251, 252, 253, 254, 1131, 1132, 0, 255, 506,
	507, 508, 1133, 256, 257, 509, 1134, 1201, 1135, 258,
	259, 260, 261, 262, 263, 264, 0, 1136, 266, 267,
	268, 265, 1137, 269, 0, 270, 271, 272, 1138, 273,
	994, 274, 275, 1139, 1140, 1142, 1141, 1143, 1144, 1145,
	276, 277, 278, 279, 0, 280, 510, 511, 1146, 284,
	281, 282, 1147, 285, 283, 1148, 286, 287, 1149, 1150,
	288, 289, 290, 1151, 291, 292, 1152, 293, 294, 1153,
	295, 296, 512, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 513, 514, 1154, 231, 1155, 0, 0,
	0, 0, 308, 309, 310, 515, 0, 0, 0, 311,
	1156, 312, 1157, 1158, 995, 313, 314, 516, 517, 315,
	316, 1159, 317, 518, 1160, 519, 318, 1161, 319, 320,
	321, 322, 323, 520, 521, 522, 377, 997, 324, 325,
	1162, 326, 327, 328, 329, 0, 0, 0, 232, 330,
	331, 333, 1163, 996, 332, 523, 524, 1164, 525, 1165,
	334, 998, 526, 999, 335, 336, 337, 1000, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 1166, 345, 344,
	1167, 346, 527, 1001, 347, 348, 1002, 1168, 349, 350,
	351, 1169, 1170, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 1003, 368, 369, 370, 373, 374, 372, 1004, 371,
	1171, 233, 1005, 375, 1172, 528, 376, 529, 378, 379,
	1173, 0, 380, 0, 1174, 1175, 382, 383, 384, 1176,
	1177, 385, 386, 530, 1006, 387, 1007, 531, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 1178, 397,
	398, 532, 533, 534, 399, 535, 400, 401, 1179, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 536, 411,
	410, 412, 1180, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 1181, 422,
	423, 424, 1008, 425, 426, 427, 428, 537, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 1182,
	443, 444, 442, 445, 446, 447, 1183, 448, 432, 433,
	449, 450, 1009, 451, 452, 538, 0, 453, 1184, 454,
	455, 456, 457, 434, 458, 463, 539, 459, 460, 461,
	462, 540, 1185, 465, 466, 0, 464, 1186, 467, 468,
	469, 470, 471, 302, 472, 1187, 473, 541, 542, 543,
	544, 1188, 480, 1189, 474, 475, 545, 476, 546, 1190,
	477, 478, 479, 0, 481, 482, 1191, 1192, 483, 484,
	485, 487, 488, 486, 489, 1193, 490, 1194, 0, 491,
	492, 493, 547, 548, 549, 1195, 495, 494, 550, 1196,
	1197, 1198, 1199, 496, 497, 551, 498, 499, 500, 1115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2166, 234, 235, 236, 237,
	238, 239, 1121, 240, 241, 1122, 1123, 1124, 0, 1125,
	501, 1126, 1127, 1128, 1129, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 1130, 250,
	251, 252, 253, 254, 1131, 1132, 0, 255, 506, 507,
	508, 1133, 256, 257, 509, 1134, 1201, 1135, 258, 259,
	260, 261, 262, 263, 264, 0, 1136, 266, 267, 268,
	265, 1137, 269, 0, 270, 271, 272, 1138, 273, 994,
	274, 275, 1139, 1140, 1142, 1141, 1143, 1144, 1145, 276,
	277, 278, 279, 0, 280, 510, 511, 1146, 284, 281,
	282, 1147, 285, 283, 1148, 286, 287, 1149, 1150, 288,
	289, 290, 1151, 291, 292, 1152, 293, 294, 1153, 295,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 513, 514, 1154, 231, 1155, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 1156,
	312, 1157, 1158, 995, 313, 314, 516, 517, 315, 316,
	1159, 317, 518, 1160, 519, 318, 1161, 319, 320, 321,
	322, 323, 520, 521, 522, 377, 997, 324, 325, 1162,
	326, 327, 328, 329, 0, 0, 0, 232, 330, 331,
	333, 1163, 996, 332, 523, 524, 1164, 525, 1165, 334,
	998, 526, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 1166, 345, 344, 1167,
	346, 527, 1001, 347, 348, 1002, 1168, 349, 350, 351,
	1169, 1170, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 1171,
	233, 1005, 375, 1172, 528, 376, 529, 378, 379, 1173,
	0, 380, 0, 1174, 1175, 382, 383, 384, 1176, 1177,
	385, 386, 530, 1006, 387, 1007, 531, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 1178, 397, 398,
	532, 533, 534, 399, 535, 400, 401, 1179, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 1180, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 1181, 422, 423,
	424, 1008, 425, 426, 427, 428, 537, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 1182, 443,
	444, 442, 445, 446, 447, 1183, 448, 432, 433, 449,
	450, 1009, 451, 452, 538, 0, 453, 1184, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	540, 1185, 465, 466, 0, 464, 1186, 467, 468, 469,
	470, 471, 302, 472, 1187, 473, 541, 542, 543, 544,
	1188, 480, 1189, 474, 475, 545, 476, 546, 1190, 477,
	478, 479, 0, 481, 482, 1191, 1192, 483, 484, 485,
	487, 488, 486, 489, 1193, 490, 1194, 0, 491, 492,
	493, 547, 548, 549, 1195, 495, 494, 550, 1196, 1197,
	1198, 1199, 496, 497, 551, 498, 499, 500, 1213, 0,
	1115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 234, 235, 236,
	237, 238, 239, 1121, 240, 241, 1122, 1123, 1124, 0,
	1125, 501, 1126, 1127, 1128, 1129, 242, 243, 245, 244,
	246, 247, 248, 502, 503, 0, 504, 249, 505, 1130,
	250, 251, 252, 253, 254, 1131, 1132, 0, 255, 506,
	507, 508, 1133, 256, 257, 509, 1134, 1201, 1135, 258,
	259, 260, 261, 262, 263, 264, 0, 1136, 266, 267,
	268, 265, 1137, 269, 0, 270, 271, 272, 1138, 273,
	994, 274, 275, 1139, 1140, 1142, 1141, 1143, 1144, 1145,
	276, 277, 278, 279, 0, 280, 510, 511, 1146, 284,
	281, 282, 1147, 285, 283, 1148, 286, 287, 1149, 1150,
	288, 289, 290, 1151, 291, 292, 1152, 293, 294, 1153,
	295, 296, 512, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 513, 514, 1154, 231, 1155, 0, 0,
	0, 0, 308, 309, 310, 515, 0, 0, 0, 311,
	1156, 312, 1157, 1158, 995, 313, 314, 516, 517, 315,
	316, 1159, 317, 518, 1160, 519, 318, 1161, 319, 320,
	321, 322, 323, 520, 521, 522, 377, 997, 324, 325,
	1162, 326, 327, 328, 329, 0, 0, 0, 232, 330,
	331, 333, 1163, 996, 332, 523, 524, 1164, 525, 1165,
	334, 998, 526, 999, 335, 336, 337, 1000, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 1166, 345, 344,
	1167, 346, 527, 1001, 347, 348, 1002, 1168, 349, 350,
	351, 1169, 1170, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 1003, 368, 369, 370, 373, 374, 372, 1004, 371,
	1171, 233, 1005, 375, 1172, 528, 376, 529, 378, 379,
	1173, 0, 380, 0, 1174, 1175, 382, 383, 384, 1176,
	1177, 385, 386, 530, 1006, 387, 1007, 531, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 1178, 397,
	398, 532, 533, 534, 399, 535, 400, 401, 1179, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 536, 411,
	410, 412, 1180, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 1181, 422,
	423, 424, 1008, 425, 426, 427, 428, 537, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 1182,
	443, 444, 442, 445, 446, 447, 1183, 448, 432, 433,
	449, 450, 1009, 451, 452, 538, 0, 453, 1184, 454,
	455, 456, 457, 434, 458, 463, 539, 459, 460, 461,
	462, 540, 1185, 465, 466, 0, 464, 1186, 467, 468,
	469, 470, 471, 302, 472, 1187, 473, 541, 542, 543,
	544, 1188, 480, 1189, 474, 475, 545, 476, 546, 1190,
	477, 478, 479, 0, 481, 482, 1191, 1192, 483, 484,
	485, 487, 488, 486, 489, 1193, 490, 1194, 0, 491,
	492, 493, 547, 548, 549, 1195, 495, 494, 550, 1196,
	1197, 1198, 1199, 496, 497, 551, 498, 499, 500, 1112,
	0, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 1121, 240, 241, 1122, 1123, 1124,
	0, 1125, 501, 1126, 1127, 1128, 1129, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	1130, 250, 251, 252, 253, 254, 1131, 1132, 0, 255,
	506, 507, 508, 1133, 256, 257, 509, 1134, 1201, 1135,
	258, 259, 260, 261, 262, 263, 264, 0, 1136, 266,
	267, 268, 265, 1137, 269, 0, 270, 271, 272, 1138,
	273, 994, 274, 275, 1139, 1140, 1142, 1141, 1143, 1144,
	1145, 276, 277, 278, 279, 0, 280, 510, 511, 1146,
	284, 281, 282, 1147, 285, 283, 1148, 286, 287, 1149,
	1150, 288, 289, 290, 1151, 291, 292, 1152, 293, 294,
	1153, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 1154, 231, 1155, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 1156, 312, 1157, 1158, 995, 313, 314, 516, 517,
	315, 316, 1159, 317, 518, 1160, 519, 318, 1161, 319,
	320, 321, 322, 323, 520, 521, 522, 377, 997, 324,
	325, 1162, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 1163, 996, 332, 523, 524, 1164, 525,
	1165, 334, 998, 526, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 1166, 345,
	344, 1167, 346, 527, 1001, 347, 348, 1002, 1168, 349,
	350, 351, 1169, 1170, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 1171, 233, 1005, 375, 1172, 528, 376, 529, 378,
	379, 1173, 0, 380, 0, 1174, 1175, 382, 383, 384,
	1176, 1177, 385, 386, 530, 1006, 387, 1007, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 1178,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 1179,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 1180, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 1181,
	422, 423, 424, 1008, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	1182, 443, 444, 442, 445, 446, 447, 1183, 448, 432,
	433, 449, 450, 1009, 451, 452, 538, 0, 453, 1184,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 1185, 465, 466, 0, 464, 1186, 467,
	468, 469, 470, 471, 302, 472, 1187, 473, 541, 542,
	543, 544, 1188, 480, 1189, 474, 475, 545, 476, 546,
	1190, 477, 478, 479, 0, 481, 482, 1191, 1192, 483,
	484, 485, 487, 488, 486, 489, 1193, 490, 1194, 0,
	491, 492, 493, 547, 548, 549, 1195, 495, 494, 550,
	1196, 1197, 1198, 1199, 496, 497, 551, 498, 499, 500,
	1115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 1121, 240, 241, 1122, 1123, 1124, 0,
	1125, 501, 1126, 1127, 1128, 1129, 242, 243, 245, 244,
	246, 247, 248, 502, 503, 0, 504, 249, 505, 1130,
	250, 251, 252, 253, 254, 1131, 1132, 0, 255, 506,
	507, 508, 1133, 256, 257, 509, 1134, 1201, 1135, 258,
	259, 260, 261, 262, 263, 264, 0, 1136, 266, 267,
	268, 265, 1137, 269, 0, 270, 271, 272, 1138, 273,
	994, 274, 275, 1139, 1140, 1142, 1141, 1143, 1144, 1145,
	276, 277, 278, 279, 0, 280, 510, 511, 1146, 284,
	281, 282, 1147, 285, 283, 1148, 286, 287, 1149, 1150,
	288, 289, 290, 1151, 291, 292, 1152, 293, 294, 1153,
	295, 296, 512, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 513, 514, 1154, 231, 1155, 0, 0,
	0, 0, 308, 309, 310, 515, 0, 0, 0, 311,
	1156, 312, 1157, 1158, 995, 313, 314, 516, 517, 315,
	316, 1159, 317, 518, 1160, 519, 318, 1161, 319, 320,
	321, 322, 323, 520, 521, 522, 377, 997, 324, 325,
	1162, 326, 327, 328, 329, 0, 0, 0, 232, 330,
	331, 333, 1163, 996, 332, 523, 524, 1164, 525, 1165,
	334, 998, 526, 999, 335, 336, 337, 1000, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 1166, 345, 344,
	1167, 346, 527, 1001, 347, 348, 1002, 1168, 349, 350,
	351, 1169, 1170, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 1003, 368, 369, 370, 373, 374, 372, 1004, 371,
	1171, 233, 1005, 375, 1172, 528, 376, 529, 378, 379,
	1173, 0, 380, 0, 1174, 1175, 382, 383, 384, 1176,
	1177, 385, 386, 530, 1006, 387, 1007, 531, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 1178, 397,
	398, 532, 533, 534, 399, 535, 400, 401, 1179, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 536, 411,
	410, 412, 1180, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 1181, 422,
	423, 424, 1008, 425, 426, 427, 428, 537, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 1182,
	443, 444, 442, 445, 446, 447, 1183, 448, 432, 433,
	449, 450, 1009, 451, 452, 538, 0, 453, 1184, 454,
	455, 456, 457, 434, 458, 463, 539, 459, 460, 461,
	462, 540, 1185, 465, 466, 0, 464, 1186, 467, 468,
	469, 470, 471, 302, 472, 1187, 473, 541, 542, 543,
	544, 1188, 480, 1189, 474, 475, 545, 476, 546, 1190,
	477, 478, 479, 0, 481, 482, 1191, 1192, 483, 484,
	485, 487, 488, 486, 489, 1193, 490, 1194, 0, 491,
	492, 493, 547, 548, 549, 1195, 495, 494, 550, 1196,
	1197, 1198, 1199, 496, 497, 551, 498, 499, 500, 2141,
	0, 931, 903, 904, 905, 901, 902, 914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 2138, 240, 241, 0, 0, 0,
	0, 0, 955, 919, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 968, 0, 975, 249, 974,
	0, 250, 251, 252, 253, 254, 921, 954, 888, 255,
	1013, 1014, 508, 0, 256, 257, 961, 0, 942, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 994, 274, 275, 945, 943, 944, 951, 947, 946,
	950, 276, 277, 278, 279, 978, 280, 972, 971, 892,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 2139,
	0, 288, 963, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 898, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 985, 986, 910, 231, 0, 0,
	0, 0, 0, 308, 309, 310, 970, 0, 0, 0,
	311, 0, 312, 0, 0, 995, 313, 314, 983, 984,
	315, 316, 0, 317, 992, 0, 920, 318, 0, 319,
	320, 321, 322, 323, 956, 957, 960, 377, 997, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 0, 996, 332, 965, 966, 0, 926,
	0, 334, 998, 958, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 993, 1001, 347, 348, 1002, 0, 349,
	350, 351, 949, 948, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 889, 233, 1005, 375, 911, 959, 376, 973, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 1006, 387, 1007, 987, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 988, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 969,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 1008, 425, 426, 427, 428, 899, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 952, 448, 432,
	433, 449, 450, 1009, 451, 452, 967, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 1012, 459, 460,
	461, 462, 989, 0, 465, 466, 887, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 979, 980,
	981, 982, 0, 480, 0, 474, 475, 990, 476, 991,
	909, 477, 478, 479, 0, 481, 482, 0, 893, 483,
	484, 485, 487, 488, 486, 489, 953, 490, 0, 0,
	491, 492, 493, 547, 976, 1011, 2137, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	890, 0, 0, 0, 0, 0, 0, 886, 0, 0,
	0, 0, 0, 0, 884, 885, 2140, 0, 0, 0,
	0, 0, 0, 915, 2136, 0, 877, 913, 931, 903,
	904, 905, 901, 902, 914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 955,
	919, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 968, 0, 975, 249, 974, 0, 250, 251,
	252, 253, 254, 921, 954, 888, 255, 1013, 1014, 508,
	0, 256, 257, 961, 0, 942, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 994, 274,
	275, 945, 943, 944, 951, 947, 946, 950, 276, 277,
	278, 279, 978, 280, 972, 971, 892, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 963,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	898, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 985, 986, 910, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 970, 0, 0, 0, 311, 0, 312,
	0, 0, 995, 313, 314, 983, 984, 315, 316, 0,
	317, 992, 0, 920, 318, 0, 319, 320, 321, 322,
	323, 956, 957, 960, 377, 997, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 232, 330, 331, 333,
	0, 996, 332, 965, 966, 0, 926, 0, 334, 998,
	958, 999, 335, 336, 337, 1000, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	993, 1001, 347, 348, 1002, 0, 349, 350, 351, 949,
	948, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 1003,
	368, 369, 370, 373, 374, 372, 1004, 371, 889, 233,
	1005, 375, 911, 959, 376, 973, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 1006, 387, 1007, 987, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 988, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 969, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	1008, 425, 426, 427, 428, 899, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 194, 443, 444,
	442, 445, 446, 447, 952, 448, 432, 433, 449, 450,
	1009, 451, 452, 967, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 1012, 459, 460, 461, 462, 989,
	0, 465, 466, 887, 464, 196, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 979, 980, 981, 982, 0,
	480, 0, 474, 475, 990, 476, 991, 909, 477, 478,
	479, 0, 481, 482, 0, 893, 483, 484, 485, 487,
	488, 486, 489, 953, 490, 0, 0, 491, 492, 493,
	1370, 976, 1011, 0, 495, 494, 550, 0, 0, 0,
	188, 496, 497, 551, 498, 499, 500, 890, 189, 0,
	0, 0, 0, 0, 886, 0, 0, 0, 0, 0,
	0, 884, 885, 931, 903, 904, 905, 901, 902, 914,
	1584, 1582, 0, 0, 913, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 955, 919, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 968, 0, 975,
	249, 974, 0, 250, 251, 252, 253, 254, 921, 954,
	888, 255, 1013, 1014, 508, 0, 256, 257, 961, 0,
	942, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 994, 274, 275, 945, 943, 944, 951,
	947, 946, 950, 276, 277, 278, 279, 978, 280, 972,
	971, 892, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 963, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 898, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 985, 986, 910, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 970, 0,
	0, 0, 311, 0, 312, 0, 0, 995, 313, 314,
	983, 984, 315, 316, 0, 317, 992, 0, 920, 318,
	0, 319, 320, 321, 322, 323, 956, 957, 960, 377,
	997, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 996, 332, 965, 966,
	0, 926, 0, 334, 998, 958, 999, 335, 336, 337,
	1000, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 993, 1001, 347, 348, 1002,
	0, 349, 350, 351, 949, 948, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 1003, 368, 369, 370, 373, 374,
	372, 1004, 371, 889, 233, 1005, 375, 911, 959, 376,
	973, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 1006, 387, 1007,
	987, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 988, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 969, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 1008, 425, 426, 427, 428,
	899, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 194, 443, 444, 442, 445, 446, 447, 952,
	448, 432, 433, 449, 450, 1009, 451, 452, 967, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 1012,
	459, 460, 461, 462, 989, 0, 465, 466, 887, 464,
	196, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	979, 980, 981, 982, 0, 480, 0, 474, 475, 990,
	476, 991, 909, 477, 478, 479, 0, 481, 482, 0,
	893, 483, 484, 485, 487, 488, 486, 489, 953, 490,
	0, 0, 491, 492, 493, 1370, 976, 1011, 0, 495,
	494, 550, 0, 0, 0, 188, 496, 497, 551, 498,
	499, 500, 890, 189, 0, 0, 0, 0, 0, 886,
	0, 0, 0, 0, 0, 0, 884, 885, 931, 903,
	904, 905, 901, 902, 914, 1584, 2639, 0, 0, 913,
	0, 0, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 955,
	919, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 968, 0, 975, 249, 974, 0, 250, 251,
	252, 253, 254, 921, 954, 888, 255, 1013, 1014, 508,
	0, 256, 257, 961, 0, 942, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 994, 274,
	275, 945, 943, 944, 951, 947, 946, 950, 276, 277,
	278, 279, 978, 280, 972, 971, 892, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 963,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	898, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 985, 986, 910, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 970, 0, 0, 0, 311, 0, 312,
	0, 0, 995, 313, 314, 983, 984, 315, 316, 0,
	317, 992, 0, 920, 318, 0, 319, 320, 321, 322,
	323, 956, 957, 960, 377, 997, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 232, 330, 331, 333,
	0, 996, 332, 965, 966, 0, 926, 0, 334, 998,
	958, 999, 335, 336, 337, 1000, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	993, 1001, 347, 348, 1002, 0, 349, 350, 351, 949,
	948, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 1003,
	368, 369, 370, 373, 374, 372, 1004, 371, 889, 233,
	1005, 375, 911, 959, 376, 973, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 1006, 387, 1007, 987, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 988, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 969, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	1008, 425, 426, 427, 428, 899, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 194, 443, 444,
	442, 445, 446, 447, 952, 448, 432, 433, 449, 450,
	1009, 451, 452, 967, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 1012, 459, 460, 461, 462, 989,
	0, 465, 466, 887, 464, 196, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 979, 980, 981, 982, 0,
	480, 0, 474, 475, 990, 476, 991, 909, 477, 478,
	479, 0, 481, 482, 0, 893, 483, 484, 485, 487,
	488, 486, 489, 953, 490, 0, 0, 491, 492, 493,
	1370, 976, 1011, 0, 495, 494, 550, 0, 0, 0,
	188, 496, 497, 551, 498, 499, 500, 890, 189, 0,
	0, 0, 0, 0, 886, 0, 0, 0, 0, 0,
	0, 884, 885, 931, 903, 904, 905, 901, 902, 914,
	1584, 1582, 0, 0, 913, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 955, 919, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 968, 0, 975,
	249, 974, 2245, 250, 251, 252, 253, 254, 921, 954,
	888, 255, 1013, 1014, 508, 0, 256, 257, 961, 0,
	942, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 994, 274, 275, 945, 943, 944, 951,
	947, 946, 950, 276, 277, 278, 279, 978, 280, 972,
	971, 892, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 963, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 898, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 985, 986, 910, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 970, 0,
	0, 0, 311, 0, 312, 0, 2250, 995, 313, 314,
	983, 984, 315, 316, 0, 317, 992, 0, 920, 318,
	0, 319, 320, 321, 322, 323, 956, 957, 960, 377,
	997, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 996, 332, 965, 966,
	0, 926, 0, 334, 998, 958, 999, 335, 336, 337,
	1000, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 2246, 346, 993, 1001, 347, 348, 1002,
	0, 349, 350, 351, 949, 948, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 1003, 368, 369, 370, 373, 374,
	372, 1004, 371, 889, 233, 1005, 375, 911, 959, 376,
	973, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 1006, 387, 1007,
	987, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 988, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 969, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 1008, 425, 426, 427, 428,
	899, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 952,
	448, 432, 433, 449, 450, 1009, 451, 452, 967, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 1012,
	459, 460, 461, 462, 989, 0, 465, 466, 887, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	979, 980, 981, 982, 0, 480, 2247, 474, 475, 990,
	476, 991, 909, 477, 478, 479, 0, 481, 482, 0,
	893, 483, 484, 485, 487, 488, 486, 489, 953, 490,
	0, 0, 491, 492, 493, 547, 976, 1011, 0, 495,
	494, 550, 0, 0, 0, 0, 496, 497, 551, 498,
	499, 500, 890, 0, 0, 0, 0, 0, 0, 886,
	0, 0, 0, 0, 0, 0, 884, 885, 0, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 2186, 913,
	931, 903, 904, 905, 901, 902, 914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 0, 240, 241, 0, 0, 0, 0,
	0, 955, 919, 0, 0, 0, 242, 243, 245, 244,
	246, 247, 248, 502, 968, 0, 975, 249, 974, 0,
	250, 251, 252, 253, 254, 921, 954, 888, 255, 1013,
	1014, 508, 0, 256, 257, 961, 0, 942, 0, 258,
	259, 260, 261, 262, 263, 264, 0, 0, 266, 267,
	268, 265, 0, 269, 0, 270, 271, 272, 0, 273,
	994, 274, 275, 945, 943, 944, 951, 947, 946, 950,
	276, 277, 278, 279, 978, 280, 972, 971, 892, 284,
	281, 282, 0, 285, 283, 0, 286, 287, 0, 0,
	288, 963, 290, 0, 291, 292, 0, 293, 294, 0,
	295, 296, 898, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 985, 986, 910, 231, 0, 0, 0,
	0, 0, 308, 309, 310, 970, 0, 0, 0, 311,
	0, 312, 0, 0, 995, 313, 314, 983, 984, 315,
	316, 0, 317, 992, 0, 920, 318, 0, 319, 320,
	321, 322, 323, 956, 957, 960, 377, 997, 324, 325,
	0, 326, 327, 328, 329, 0, 0, 0, 232, 330,
	331, 333, 0, 996, 332, 965, 966, 0, 926, 0,
	334, 998, 958, 999, 335, 336, 337, 1000, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 0, 345, 344,
	0, 346, 993, 1001, 347, 348, 1002, 0, 349, 350,
	351, 949, 948, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 1003, 368, 369, 370, 373, 374, 372, 1004, 371,
	889, 233, 1005, 375, 911, 959, 376, 973, 378, 379,
	0, 0, 380, 0, 0, 0, 382, 383, 384, 0,
	0, 385, 386, 530, 1006, 387, 1007, 987, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 532, 533, 988, 399, 535, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 969, 411,
	410, 412, 0, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 0, 422,
	423, 424, 1008, 425, 426, 427, 428, 899, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 0,
	443, 444, 442, 445, 446, 447, 952, 448, 432, 433,
	449, 450, 1009, 451, 452, 967, 0, 453, 0, 454,
	455, 456, 457, 434, 458, 463, 1012, 459, 460, 461,
	462, 989, 0, 465, 466, 887, 464, 0, 467, 468,
	469, 470, 471, 302, 472, 0, 473, 979, 980, 981,
	982, 0, 480, 0, 474, 475, 990, 476, 991, 909,
	477, 478, 479, 0, 481, 482, 0, 893, 483, 484,
	485, 487, 488, 486, 489, 953, 490, 0, 0, 491,
	492, 493, 547, 976, 1011, 0, 495, 494, 550, 0,
	0, 0, 0, 496, 497, 551, 498, 499, 500, 890,
	0, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	0, 0, 0, 884, 885, 0, 0, 0, 0, 0,
	0, 0, 915, 2184, 0, 2183, 913, 931, 903, 904,
	905, 901, 902, 914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 235, 236, 237, 238, 239,
	0, 240, 241, 0, 0, 0, 0, 0, 955, 919,
	0, 0, 0, 242, 243, 245, 244, 246, 247, 248,
	502, 968, 0, 975, 249, 974, 0, 250, 251, 252,
	253, 254, 921, 954, 888, 255, 1013, 1014, 508, 0,
	256, 257, 961, 0, 942, 0, 258, 259, 260, 261,
	262, 263, 264, 0, 0, 266, 267, 268, 265, 0,
	269, 0, 270, 271, 272, 0, 273, 994, 274, 275,
	945, 943, 944, 951, 947, 946, 950, 276, 277, 278,
	279, 978, 280, 972, 971, 892, 284, 281, 282, 0,
	285, 283, 0, 286, 287, 0, 0, 288, 963, 290,
	0, 291, 292, 0, 293, 294, 0, 295, 296, 898,
	297, 298, 299, 301, 303, 300, 304, 305, 306, 307,
	985, 986, 910, 231, 0, 0, 0, 0, 0, 308,
	309, 310, 970, 0, 0, 0, 311, 0, 312, 0,
	0, 995, 313, 314, 983, 984, 315, 316, 0, 317,
	992, 0, 920, 318, 0, 319, 320, 321, 322, 323,
	956, 957, 960, 377, 997, 324, 325, 0, 326, 327,
	328, 329, 0, 0, 0, 232, 330, 331, 333, 0,
	996, 332, 965, 966, 0, 926, 0, 334, 998, 958,
	999, 335, 336, 337, 1000, 338, 0, 0, 0, 339,
	340, 341, 342, 343, 0, 345, 344, 0, 346, 993,
	1001, 347, 348, 1002, 0, 349, 350, 351, 949, 948,
	352, 353, 354, 355, 0, 356, 357, 359, 361, 358,
	360, 365, 362, 363, 364, 367, 0, 366, 1003, 368,
	369, 370, 373, 374, 372, 1004, 371, 889, 233, 1005,
	375, 911, 959, 376, 973, 378, 379, 0, 0, 380,
	0, 0, 0, 382, 383, 384, 0, 0, 385, 386,
	530, 1006, 387, 1007, 987, 388, 389, 381, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 532, 533,
	988, 399, 535, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 969, 411, 410, 412, 0,
	0, 0, 0, 0, 0, 413, 0, 415, 416, 417,
	414, 418, 419, 420, 421, 0, 422, 423, 424, 1008,
	425, 426, 427, 428, 899, 429, 0, 430, 435, 436,
	431, 437, 438, 439, 440, 441, 0, 443, 444, 442,
	445, 446, 447, 952, 448, 432, 433, 449, 450, 1009,
	451, 452, 967, 0, 453, 0, 454, 455, 456, 457,
	434, 458, 463, 1012, 459, 460, 461, 462, 989, 0,
	465, 466, 887, 464, 0, 467, 468, 469, 470, 471,
	302, 472, 0, 473, 979, 980, 981, 982, 0, 480,
	0, 474, 475, 990, 476, 991, 909, 477, 478, 479,
	0, 481, 482, 0, 893, 483, 484, 485, 487, 488,
	486, 489, 953, 490, 0, 0, 491, 492, 493, 547,
	976, 1011, 0, 495, 494, 550, 0, 0, 0, 0,
	496, 497, 551, 498, 499, 500, 890, 0, 0, 0,
	0, 0, 0, 886, 0, 0, 0, 0, 0, 0,
	884, 885, 0, 0, 0, 0, 0, 0, 0, 915,
	2181, 0, 2180, 913, 931, 903, 904, 905, 901, 902,
	914, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 955, 919, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 968, 0,
	975, 249, 974, 0, 250, 251, 252, 253, 254, 921,
	954, 888, 255, 1013, 1014, 508, 0, 256, 257, 961,
	0, 942, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 994, 274, 275, 945, 943, 944,
	951, 947, 946, 950, 276, 277, 278, 279, 978, 280,
	972, 971, 892, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 963, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 898, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 985, 986, 910,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 970,
	0, 0, 0, 311, 0, 312, 0, 0, 995, 313,
	314, 983, 984, 315, 316, 0, 317, 992, 0, 920,
	318, 0, 319, 320, 321, 322, 323, 956, 957, 960,
	377, 997, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 232, 330, 331, 333, 0, 996, 332, 965,
	966, 0, 926, 0, 334, 998, 958, 999, 335, 336,
	337, 1000, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 993, 1001, 347, 348,
	1002, 0, 349, 350, 351, 949, 948, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 1003, 368, 369, 370, 373,
	374, 372, 1004, 371, 889, 233, 1005, 375, 911, 959,
	376, 973, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 1006, 387,
	1007, 987, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 988, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 969, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 1008, 425, 426, 427,
	428, 899, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	952, 448, 432, 433, 449, 450, 1009, 451, 452, 967,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	1012, 459, 460, 461, 462, 989, 0, 465, 466, 887,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 979, 980, 981, 982, 0, 480, 0, 474, 475,
	990, 476, 991, 909, 477, 478, 479, 0, 481, 482,
	0, 893, 483, 484, 485, 487, 488, 486, 489, 953,
	490, 0, 0, 491, 492, 493, 547, 976, 1011, 0,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 890, 0, 0, 0, 0, 0, 0,
	886, 0, 0, 0, 0, 0, 0, 884, 885, 0,
	0, 0, 0, 0, 0, 0, 915, 2178, 0, 2177,
	913, 931, 903, 904, 905, 901, 902, 914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 955, 919, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 968, 0, 975, 249, 974,
	0, 250, 251, 252, 253, 254, 921, 954, 888, 255,
	1013, 1014, 508, 0, 256, 257, 961, 0, 942, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 994, 274, 275, 945, 943, 944, 951, 947, 946,
	950, 276, 277, 278, 279, 978, 280, 972, 971, 892,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 963, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 898, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 985, 986, 910, 231, 0, 0,
	0, 0, 0, 308, 309, 310, 970, 0, 0, 0,
	311, 0, 312, 0, 0, 995, 313, 314, 983, 984,
	315, 316, 0, 317, 992, 0, 920, 318, 0, 319,
	320, 321, 322, 323, 956, 957, 960, 377, 997, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 0, 996, 332, 965, 966, 0, 926,
	0, 334, 998, 958, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 993, 1001, 347, 348, 1002, 0, 349,
	350, 351, 949, 948, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 889, 233, 1005, 375, 911, 959, 376, 973, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 1006, 387, 1007, 987, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 988, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 969,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 1008, 425, 426, 427, 428, 899, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 952, 448, 432,
	433, 449, 450, 1009, 451, 452, 967, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 1012, 459, 460,
	461, 462, 989, 0, 465, 466, 887, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 979, 980,
	981, 982, 0, 480, 0, 474, 475, 990, 476, 991,
	909, 477, 478, 479, 0, 481, 482, 0, 893, 483,
	484, 485, 487, 488, 486, 489, 953, 490, 0, 0,
	491, 492, 493, 547, 976, 1011, 0, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	890, 0, 0, 0, 0, 0, 0, 886, 0, 0,
	0, 0, 0, 0, 884, 885, 0, 0, 0, 0,
	0, 0, 0, 915, 2175, 0, 1441, 913, 931, 903,
	904, 905, 901, 902, 914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 955,
	919, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 968, 0, 975, 249, 974, 0, 250, 251,
	252, 253, 254, 921, 954, 888, 255, 1013, 1014, 508,
	0, 256, 257, 961, 0, 942, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 994, 274,
	275, 945, 943, 944, 951, 947, 946, 950, 276, 277,
	278, 279, 978, 280, 972, 971, 892, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 963,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	898, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 985, 986, 910, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 970, 0, 0, 0, 311, 0, 312,
	0, 0, 995, 313, 314, 983, 984, 315, 316, 0,
	317, 992, 0, 920, 318, 0, 319, 320, 321, 322,
	323, 956, 957, 960, 377, 997, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 232, 330, 331, 333,
	0, 996, 332, 965, 966, 0, 926, 0, 334, 998,
	958, 999, 335, 336, 337, 1000, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	993, 1001, 347, 348, 1002, 0, 349, 350, 351, 949,
	948, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 1003,
	368, 369, 370, 373, 374, 372, 1004, 371, 889, 233,
	1005, 375, 911, 959, 376, 973, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 1006, 387, 1007, 987, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 988, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 969, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	1008, 425, 426, 427, 428, 899, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 952, 448, 432, 433, 449, 450,
	1009, 451, 452, 967, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 1012, 459, 460, 461, 462, 989,
	0, 465, 466, 887, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 979, 980, 981, 982, 0,
	480, 0, 474, 475, 990, 476, 991, 909, 477, 478,
	479, 0, 481, 482, 0, 893, 483, 484, 485, 487,
	488, 486, 489, 953, 490, 0, 0, 491, 492, 493,
	547, 976, 1011, 0, 495, 494, 550, 1440, 0, 0,
	0, 496, 497, 551, 498, 499, 500, 890, 0, 0,
	0, 0, 0, 0, 886, 0, 0, 0, 0, 0,
	0, 884, 885, 0, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 880, 913, 931, 903, 904, 905, 901,
	902, 914, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 955, 919, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 968,
	0, 975, 249, 974, 0, 250, 251, 252, 253, 254,
	921, 954, 888, 255, 1013, 1014, 508, 0, 256, 257,
	961, 0, 942, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 994, 274, 275, 945, 943,
	944, 951, 947, 946, 950, 276, 277, 278, 279, 978,
	280, 972, 971, 892, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 963, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 898, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 985, 986,
	910, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	970, 0, 0, 0, 311, 0, 312, 0, 0, 995,
	313, 314, 983, 984, 315, 316, 0, 317, 992, 0,
	920, 318, 0, 319, 320, 321, 322, 323, 956, 957,
	960, 377, 997, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 232, 330, 331, 333, 0, 996, 332,
	965, 966, 0, 926, 0, 334, 998, 958, 999, 335,
	336, 337, 1000, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 993, 1001, 347,
	348, 1002, 0, 349, 350, 351, 949, 948, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 1003, 368, 369, 370,
	373, 374, 372, 1004, 371, 889, 233, 1005, 375, 911,
	959, 376, 973, 378, 379, 0, 0, 380, 0, 894,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 1006,
	387, 1007, 987, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 988, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 969, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 1008, 425, 426,
	427, 428, 899, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 952, 448, 432, 433, 449, 450, 1009, 451, 452,
	967, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 1012, 459, 460, 461, 462, 989, 0, 465, 466,
	887, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 979, 980, 981, 982, 0, 480, 0, 474,
	475, 990, 476, 991, 909, 477, 478, 479, 0, 481,
	482, 0, 893, 483, 484, 485, 487, 488, 486, 489,
	953, 490, 0, 0, 491, 492, 493, 547, 976, 1011,
	0, 495, 494, 550, 0, 0, 0, 0, 496, 497,
	551, 498, 499, 500, 890, 0, 0, 0, 0, 0,
	0, 886, 0, 0, 0, 0, 0, 0, 884, 885,
	931, 903, 904, 905, 901, 902, 914, 915, 0, 0,
	0, 913, 0, 0, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 0, 240, 241, 0, 0, 0, 0,
	0, 955, 919, 0, 0, 0, 242, 243, 245, 244,
	246, 247, 248, 502, 968, 0, 975, 249, 974, 0,
	250, 251, 252, 253, 254, 921, 954, 888, 255, 1013,
	1014, 508, 0, 256, 257, 961, 0, 942, 0, 258,
	259, 260, 261, 262, 263, 264, 0, 0, 266, 267,
	268, 265, 0, 269, 0, 270, 3785, 272, 0, 273,
	994, 274, 275, 945, 943, 944, 951, 947, 946, 950,
	276, 277, 278, 279, 978, 280, 972, 971, 892, 284,
	281, 282, 0, 285, 283, 0, 286, 287, 0, 0,
	288, 963, 290, 0, 291, 292, 0, 293, 294, 0,
	295, 296, 898, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 985, 986, 910, 231, 0, 0, 0,
	0, 0, 308, 309, 310, 970, 0, 0, 0, 311,
	0, 312, 0, 0, 995, 313, 314, 983, 984, 315,
	316, 0, 317, 992, 0, 920, 318, 0, 319, 320,
	321, 322, 323, 956, 957, 960, 377, 997, 324, 325,
	0, 326, 327, 328, 329, 0, 0, 0, 232, 330,
	331, 333, 0, 996, 332, 965, 966, 0, 926, 0,
	334, 998, 958, 999, 335, 336, 337, 1000, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 0, 345, 344,
	0, 346, 993, 1001, 347, 348, 1002, 0, 349, 350,
	351, 949, 948, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 1003, 368, 369, 370, 373, 374, 372, 1004, 371,
	889, 233, 1005, 375, 911, 959, 376, 973, 378, 379,
	0, 0, 380, 0, 894, 0, 382, 383, 384, 0,
	0, 385, 386, 530, 1006, 387, 1007, 987, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 532, 533, 988, 399, 535, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 969, 411,
	410, 412, 0, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 0, 422,
	423, 424, 1008, 425, 426, 427, 428, 899, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 0,
	443, 444, 442, 445, 446, 447, 952, 448, 432, 433,
	449, 450, 1009, 451, 452, 967, 0, 453, 0, 454,
	455, 456, 457, 434, 458, 463, 1012, 459, 460, 461,
	462, 989, 0, 465, 466, 887, 464, 0, 467, 468,
	469, 470, 471, 302, 472, 0, 473, 979, 980, 981,
	982, 0, 480, 0, 474, 475, 990, 476, 991, 909,
	477, 478, 479, 0, 481, 482, 0, 893, 483, 484,
	485, 487, 488, 486, 489, 953, 490, 0, 0, 491,
	492, 493, 547, 976, 1011, 0, 495, 494, 550, 0,
	0, 0, 0, 496, 497, 551, 498, 499, 500, 890,
	0, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	0, 0, 0, 884, 885, 931, 903, 904, 905, 901,
	902, 914, 915, 0, 0, 0, 913, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 955, 919, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 968,
	0, 975, 249, 974, 0, 250, 251, 252, 253, 254,
	921, 954, 888, 255, 1013, 1014, 508, 0, 256, 257,
	961, 0, 942, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 994, 274, 275, 945, 943,
	944, 951, 947, 946, 950, 276, 277, 278, 279, 978,
	280, 972, 971, 892, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 963, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 898, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 985, 986,
	910, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	970, 0, 0, 0, 311, 0, 312, 0, 0, 995,
	313, 314, 983, 984, 315, 316, 0, 317, 992, 0,
	920, 318, 0, 319, 320, 321, 322, 323, 956, 957,
	960, 377, 997, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 2055, 330, 331, 333, 0, 996, 332,
	965, 966, 0, 926, 0, 334, 998, 958, 999, 335,
	336, 337, 1000, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 993, 1001, 347,
	348, 1002, 0, 349, 350, 351, 949, 948, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 1003, 368, 369, 370,
	373, 374, 372, 1004, 371, 889, 233, 1005, 375, 911,
	959, 376, 973, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 1006,
	387, 1007, 987, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 988, 399,
	535, 400, 401, 2054, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 969, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 1008, 425, 426,
	427, 428, 899, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 952, 448, 432, 433, 449, 450, 1009, 451, 452,
	967, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 1012, 459, 460, 461, 462, 989, 0, 465, 466,
	887, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 979, 980, 981, 982, 0, 480, 0, 474,
	475, 990, 476, 991, 909, 477, 478, 479, 0, 481,
	482, 0, 893, 483, 484, 485, 487, 488, 486, 489,
	953, 490, 0, 0, 491, 492, 493, 547, 976, 1011,
	0, 495, 494, 550, 0, 0, 0, 0, 496, 497,
	551, 498, 499, 500, 890, 0, 0, 0, 0, 0,
	0, 886, 0, 0, 0, 0, 0, 0, 884, 885,
	931, 903, 904, 905, 901, 902, 914, 915, 0, 0,
	0, 913, 0, 0, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 0, 240, 241, 0, 0, 0, 0,
	0, 955, 919, 0, 0, 0, 242, 243, 245, 244,
	246, 247, 248, 502, 968, 0, 975, 249, 974, 0,
	250, 251, 252, 253, 254, 921, 954, 888, 255, 1013,
	1014, 508, 0, 256, 257, 961, 0, 942, 0, 258,
	259, 260, 261, 262, 263, 264, 0, 0, 266, 267,
	268, 265, 0, 269, 0, 270, 3584, 272, 0, 273,
	994, 274, 275, 945, 943, 944, 951, 947, 946, 950,
	276, 277, 278, 279, 978, 280, 972, 971, 892, 284,
	281, 282, 0, 285, 283, 0, 286, 287, 0, 0,
	288, 963, 290, 0, 291, 292, 0, 293, 294, 0,
	295, 296, 898, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 985, 986, 910, 231, 0, 0, 0,
	0, 0, 308, 309, 310, 970, 0, 0, 0, 311,
	0, 312, 0, 0, 995, 313, 314, 983, 984, 315,
	316, 0, 317, 992, 0, 920, 318, 0, 319, 320,
	321, 322, 323, 956, 957, 960, 377, 997, 324, 325,
	0, 326, 327, 328, 329, 0, 0, 0, 232, 330,
	331, 333, 0, 996, 332, 965, 966, 0, 926, 0,
	334, 998, 958, 999, 335, 336, 337, 1000, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 0, 345, 344,
	0, 346, 993, 1001, 347, 348, 1002, 0, 349, 350,
	351, 949, 948, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 1003, 368, 369, 370, 373, 374, 372, 1004, 371,
	889, 233, 1005, 375, 911, 959, 376, 973, 378, 379,
	0, 0, 380, 0, 894, 0, 382, 383, 384, 0,
	0, 385, 386, 530, 1006, 387, 1007, 987, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 532, 533, 988, 399, 535, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 969, 411,
	410, 412, 0, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 0, 422,
	423, 424, 1008, 425, 426, 427, 428, 899, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 0,
	443, 444, 442, 445, 446, 447, 952, 448, 432, 433,
	449, 450, 1009, 451, 452, 967, 0, 453, 0, 454,
	455, 456, 457, 434, 458, 463, 1012, 459, 460, 461,
	462, 989, 0, 465, 466, 887, 464, 0, 467, 468,
	469, 470, 471, 302, 472, 0, 473, 979, 980, 981,
	982, 0, 480, 0, 474, 475, 990, 476, 991, 909,
	477, 478, 479, 0, 481, 482, 0, 893, 483, 484,
	485, 487, 488, 486, 489, 953, 490, 0, 0, 491,
	492, 493, 547, 976, 1011, 0, 495, 494, 550, 0,
	0, 0, 0, 496, 497, 551, 498, 499, 500, 890,
	0, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	0, 0, 0, 884, 885, 931, 903, 904, 905, 901,
	902, 914, 915, 0, 0, 0, 913, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 955, 919, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 968,
	0, 975, 249, 974, 0, 250, 251, 252, 253, 254,
	921, 954, 888, 255, 1013, 1014, 508, 0, 256, 257,
	961, 0, 942, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 994, 274, 275, 945, 943,
	944, 951, 947, 946, 950, 276, 277, 278, 279, 978,
	280, 972, 971, 892, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 963, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 898, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 985, 986,
	910, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	970, 0, 0, 0, 311, 0, 312, 0, 0, 995,
	313, 314, 983, 984, 315, 316, 0, 317, 992, 0,
	920, 318, 0, 319, 320, 321, 322, 323, 956, 957,
	960, 377, 997, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 232, 330, 331, 333, 0, 996, 332,
	965, 966, 0, 926, 0, 334, 998, 958, 999, 335,
	336, 337, 1000, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 993, 1001, 347,
	348, 1002, 0, 349, 350, 351, 949, 948, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 1003, 368, 369, 370,
	373, 374, 372, 1004, 371, 889, 3267, 1005, 375, 911,
	959, 376, 973, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 1006,
	387, 1007, 987, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 988, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 969, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 1008, 425, 426,
	427, 428, 899, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 952, 448, 432, 433, 449, 450, 1009, 451, 452,
	967, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 1012, 459, 460, 461, 462, 989, 0, 465, 466,
	887, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 979, 980, 981, 982, 0, 480, 0, 474,
	475, 990, 476, 991, 909, 477, 478, 479, 0, 481,
	482, 0, 893, 483, 484, 485, 487, 488, 486, 489,
	953, 490, 0, 0, 491, 492, 493, 547, 976, 1011,
	0, 495, 494, 550, 0, 0, 0, 0, 496, 497,
	551, 498, 499, 500, 890, 0, 0, 0, 0, 0,
	0, 886, 0, 0, 0, 0, 0, 0, 884, 885,
	1652, 0, 0, 0, 0, 0, 0, 915, 0, 0,
	0, 913, 931, 903, 904, 905, 901, 902, 914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 955, 919, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 968, 0, 975, 249,
	974, 0, 250, 251, 252, 253, 254, 921, 954, 888,
	255, 1013, 1014, 508, 0, 256, 257, 961, 0, 942,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 994, 274, 275, 945, 943, 944, 951, 947,
	946, 950, 276, 277, 278, 279, 978, 280, 972, 971,
	892, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 963, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 898, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 985, 986, 910, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 970, 0, 0,
	0, 311, 0, 312, 0, 0, 995, 313, 314, 983,
	984, 315, 316, 0, 317, 992, 0, 920, 318, 0,
	319, 320, 321, 322, 323, 956, 957, 960, 377, 997,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 996, 332, 965, 966, 0,
	926, 0, 334, 998, 958, 999, 335, 336, 337, 1000,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 993, 1001, 347, 348, 1002, 0,
	349, 350, 351, 949, 948, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 1003, 368, 369, 370, 373, 374, 372,
	1004, 371, 889, 233, 1005, 375, 911, 959, 376, 973,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 1006, 387, 1007, 987,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 988, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	969, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 1008, 425, 426, 427, 428, 899,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 952, 448,
	432, 433, 449, 450, 1009, 451, 452, 967, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 1012, 459,
	460, 461, 462, 989, 0, 465, 466, 887, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 979,
	980, 981, 982, 0, 480, 0, 474, 475, 990, 476,
	991, 909, 477, 478, 479, 0, 481, 482, 0, 893,
	483, 484, 485, 487, 488, 486, 489, 953, 490, 0,
	0, 491, 492, 493, 547, 976, 1011, 3046, 495, 494,
	550, 0, 0, 0, 0, 496, 497, 551, 498, 499,
	500, 890, 0, 0, 0, 0, 0, 0, 886, 0,
	0, 0, 0, 0, 0, 884, 885, 931, 903, 904,
	905, 901, 902, 914, 915, 0, 0, 0, 913, 0,
	0, 0, 0, 0, 234, 235, 236, 237, 238, 239,
	0, 240, 241, 0, 0, 0, 0, 0, 955, 919,
	0, 0, 0, 242, 243, 245, 244, 246, 247, 248,
	502, 968, 0, 975, 249, 974, 0, 250, 251, 252,
	253, 254, 921, 954, 888, 255, 1013, 1014, 508, 0,
	256, 257, 961, 0, 942, 0, 258, 259, 260, 261,
	262, 263, 264, 0, 0, 266, 267, 268, 265, 0,
	269, 0, 270, 271, 272, 0, 273, 994, 274, 275,
	945, 943, 944, 951, 947, 946, 950, 276, 277, 278,
	279, 978, 280, 972, 971, 892, 284, 281, 282, 0,
	285, 283, 0, 286, 287, 0, 0, 288, 963, 290,
	0, 291, 292, 0, 293, 294, 0, 295, 296, 898,
	297, 298, 299, 301, 303, 300, 304, 305, 306, 307,
	985, 986, 910, 231, 0, 0, 0, 0, 0, 308,
	309, 310, 970, 0, 0, 0, 311, 0, 312, 0,
	0, 995, 313, 314, 983, 984, 315, 316, 0, 317,
	992, 0, 920, 318, 0, 319, 320, 321, 322, 323,
	956, 957, 960, 377, 997, 324, 325, 0, 326, 327,
	328, 329, 0, 0, 0, 232, 330, 331, 333, 0,
	996, 332, 965, 966, 0, 926, 0, 334, 998, 958,
	999, 335, 336, 337, 1000, 338, 0, 0, 0, 339,
	340, 341, 342, 343, 0, 345, 344, 0, 346, 993,
	1001, 347, 348, 1002, 0, 349, 350, 351, 949, 948,
	352, 353, 354, 355, 0, 356, 357, 359, 361, 358,
	360, 365, 362, 363, 364, 367, 0, 366, 1003, 368,
	369, 370, 373, 374, 372, 1004, 371, 889, 233, 1005,
	375, 911, 959, 376, 973, 378, 379, 0, 0, 380,
	0, 894, 0, 382, 383, 384, 0, 0, 385, 386,
	530, 1006, 387, 1007, 987, 388, 389, 381, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 532, 533,
	988, 399, 535, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 969, 411, 410, 412, 0,
	0, 0, 0, 0, 0, 413, 0, 415, 416, 417,
	414, 418, 419, 420, 421, 0, 422, 423, 424, 1008,
	425, 426, 427, 428, 899, 429, 0, 430, 435, 436,
	431, 437, 438, 439, 440, 441, 0, 443, 444, 442,
	445, 446, 447, 952, 448, 432, 433, 449, 450, 1009,
	451, 452, 967, 0, 453, 0, 454, 455, 456, 457,
	434, 458, 463, 1012, 459, 460, 461, 462, 989, 0,
	465, 466, 887, 464, 0, 467, 468, 469, 470, 471,
	302, 472, 0, 473, 979, 980, 981, 982, 0, 480,
	0, 474, 475, 990, 476, 991, 909, 477, 478, 479,
	0, 481, 482, 0, 893, 483, 484, 485, 487, 488,
	486, 489, 953, 490, 0, 0, 491, 492, 493, 547,
	976, 1011, 0, 495, 494, 550, 0, 0, 0, 0,
	496, 497, 551, 498, 499, 500, 890, 0, 0, 0,
	0, 0, 0, 886, 0, 0, 0, 0, 0, 0,
	884, 885, 931, 903, 904, 905, 901, 902, 914, 915,
	0, 0, 0, 913, 0, 0, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 955, 919, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 968, 0, 975, 249,
	974, 0, 250, 251, 252, 253, 254, 921, 954, 888,
	255, 1013, 1014, 508, 0, 256, 257, 961, 0, 942,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 994, 274, 275, 945, 943, 944, 951, 947,
	946, 950, 276, 277, 278, 279, 978, 280, 972, 971,
	892, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 963, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 898, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 985, 986, 910, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 970, 0, 0,
	0, 311, 0, 312, 0, 0, 995, 313, 314, 983,
	984, 315, 316, 0, 317, 992, 0, 920, 318, 0,
	319, 320, 321, 322, 323, 956, 957, 960, 377, 997,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 996, 332, 965, 966, 0,
	926, 0, 334, 998, 958, 999, 335, 336, 337, 1000,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 993, 1001, 347, 348, 1002, 0,
	349, 350, 351, 949, 948, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 1003, 368, 369, 370, 373, 374, 372,
	1004, 371, 889, 233, 1005, 375, 911, 959, 376, 973,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 1006, 387, 1007, 987,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 988, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	969, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 1008, 425, 426, 427, 428, 899,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 952, 448,
	432, 433, 449, 450, 1009, 451, 452, 967, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 1012, 459,
	460, 461, 462, 989, 0, 465, 466, 887, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 979,
	980, 981, 982, 0, 480, 0, 474, 475, 990, 476,
	991, 909, 477, 478, 479, 0, 481, 482, 0, 893,
	483, 484, 485, 487, 488, 486, 489, 953, 490, 0,
	0, 491, 492, 493, 547, 976, 1011, 0, 495, 494,
	550, 0, 0, 0, 0, 496, 497, 551, 498, 499,
	500, 890, 0, 0, 0, 0, 0, 0, 886, 0,
	0, 0, 0, 0, 0, 884, 885, 1652, 0, 0,
	0, 0, 0, 0, 915, 0, 0, 0, 913, 931,
	903, 904, 905, 901, 902, 914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	955, 919, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 968, 0, 975, 249, 974, 0, 250,
	251, 252, 253, 254, 921, 954, 888, 255, 1013, 1014,
	508, 0, 256, 257, 961, 0, 942, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 994,
	274, 275, 945, 943, 944, 951, 947, 946, 950, 276,
	277, 278, 279, 978, 280, 972, 971, 892, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	963, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 898, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 985, 986, 910, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 970, 0, 0, 0, 311, 0,
	312, 0, 2250, 995, 313, 314, 983, 984, 315, 316,
	0, 317, 992, 0, 920, 318, 0, 319, 320, 321,
	322, 323, 956, 957, 960, 377, 997, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 232, 330, 331,
	333, 0, 996, 332, 965, 966, 0, 926, 0, 334,
	998, 958, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 993, 1001, 347, 348, 1002, 0, 349, 350, 351,
	949, 948, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 889,
	233, 1005, 375, 911, 959, 376, 973, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 1006, 387, 1007, 987, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 988, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 969, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 1008, 425, 426, 427, 428, 899, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 952, 448, 432, 433, 449,
	450, 1009, 451, 452, 967, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 1012, 459, 460, 461, 462,
	989, 0, 465, 466, 887, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 979, 980, 981, 982,
	0, 480, 0, 474, 475, 990, 476, 991, 909, 477,
	478, 479, 0, 481, 482, 0, 893, 483, 484, 485,
	487, 488, 486, 489, 953, 490, 0, 0, 491, 492,
	493, 547, 976, 1011, 0, 495, 494, 550, 0, 0,
	0, 0, 496, 497, 551, 498, 499, 500, 890, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 884, 885, 931, 903, 904, 905, 901, 902,
	914, 915, 0, 0, 0, 913, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 955, 919, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 968, 0,
	975, 249, 974, 0, 250, 251, 252, 253, 254, 921,
	954, 888, 255, 1013, 1014, 508, 0, 256, 257, 961,
	0, 942, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 994, 274, 275, 945, 943, 944,
	951, 947, 946, 950, 276, 277, 278, 279, 978, 280,
	972, 971, 892, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 963, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 898, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 985, 986, 910,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 970,
	0, 0, 0, 311, 0, 312, 0, 0, 995, 313,
	314, 983, 984, 315, 316, 0, 317, 992, 0, 920,
	318, 0, 319, 320, 321, 322, 323, 956, 957, 960,
	377, 997, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 232, 330, 331, 333, 0, 996, 332, 965,
	966, 0, 926, 0, 334, 998, 958, 999, 335, 336,
	337, 1000, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 993, 1001, 347, 348,
	1002, 0, 349, 350, 351, 949, 948, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 1003, 368, 369, 370, 373,
	374, 372, 1004, 371, 889, 233, 1005, 375, 911, 959,
	376, 973, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 1006, 387,
	1007, 987, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 988, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 969, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 1008, 425, 426, 427,
	428, 899, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	952, 448, 432, 433, 449, 450, 1009, 451, 452, 967,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	1012, 459, 460, 461, 462, 989, 0, 465, 466, 887,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 979, 980, 981, 982, 0, 480, 0, 474, 475,
	990, 476, 991, 909, 477, 478, 479, 0, 481, 482,
	0, 893, 483, 484, 485, 487, 488, 486, 489, 953,
	490, 0, 0, 491, 492, 493, 547, 976, 1011, 0,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 890, 0, 0, 0, 0, 0, 0,
	886, 0, 0, 0, 0, 0, 0, 884, 885, 0,
	0, 0, 0, 0, 0, 0, 915, 1582, 0, 2255,
	913, 931, 903, 904, 905, 901, 902, 914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 955, 919, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 968, 0, 975, 249, 974,
	0, 250, 251, 252, 253, 254, 921, 954, 888, 255,
	1013, 1014, 508, 0, 256, 257, 961, 0, 942, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 994, 274, 275, 945, 943, 944, 951, 947, 946,
	950, 276, 277, 278, 279, 978, 280, 972, 971, 892,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 963, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 898, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 985, 986, 910, 231, 0, 0,
	0, 0, 0, 308, 309, 310, 970, 0, 0, 0,
	311, 0, 312, 0, 0, 995, 313, 314, 983, 984,
	315, 316, 0, 317, 992, 0, 920, 318, 0, 319,
	320, 321, 322, 323, 956, 957, 960, 377, 997, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 0, 996, 332, 965, 966, 0, 926,
	0, 334, 998, 958, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 993, 1001, 347, 348, 1002, 0, 349,
	350, 351, 949, 948, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 889, 233, 1005, 375, 911, 959, 376, 973, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 1006, 387, 1007, 987, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 988, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 969,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 1008, 425, 426, 427, 428, 899, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 952, 448, 432,
	433, 449, 450, 1009, 451, 452, 967, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 1012, 459, 460,
	461, 462, 989, 0, 465, 466, 887, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 979, 980,
	981, 982, 0, 480, 0, 474, 475, 990, 476, 991,
	909, 477, 478, 479, 0, 481, 482, 0, 893, 483,
	484, 485, 487, 488, 486, 489, 953, 490, 0, 0,
	491, 492, 493, 547, 976, 1011, 0, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	890, 0, 0, 0, 0, 0, 0, 886, 0, 0,
	0, 0, 0, 0, 884, 885, 0, 0, 0, 0,
	0, 0, 0, 915, 0, 0, 2253, 913, 931, 903,
	904, 905, 901, 902, 914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 955,
	919, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 968, 0, 975, 249, 974, 0, 250, 251,
	252, 253, 254, 921, 954, 888, 255, 1013, 1014, 508,
	0, 256, 257, 961, 0, 942, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 994, 274,
	275, 945, 943, 944, 951, 947, 946, 950, 276, 277,
	278, 279, 978, 280, 972, 971, 892, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 963,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	898, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 985, 986, 910, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 970, 0, 0, 0, 311, 0, 312,
	0, 0, 995, 313, 314, 983, 984, 315, 316, 0,
	317, 992, 0, 920, 318, 0, 319, 320, 321, 322,
	323, 956, 957, 960, 377, 997, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 232, 330, 331, 333,
	0, 996, 332, 965, 966, 0, 926, 0, 334, 998,
	958, 999, 335, 336, 337, 1000, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	993, 1001, 347, 348, 1002, 0, 349, 350, 351, 949,
	948, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 1003,
	368, 369, 370, 373, 374, 372, 1004, 371, 889, 233,
	1005, 375, 911, 959, 376, 973, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 1006, 387, 1007, 987, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 988, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 969, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	1008, 425, 426, 427, 428, 899, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 952, 448, 432, 433, 449, 450,
	1009, 451, 452, 967, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 1012, 459, 460, 461, 462, 989,
	0, 465, 466, 887, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 979, 980, 981, 982, 0,
	480, 0, 474, 475, 990, 476, 991, 909, 477, 478,
	479, 0, 481, 482, 0, 893, 483, 484, 485, 487,
	488, 486, 489, 953, 490, 0, 0, 491, 492, 493,
	547, 976, 1011, 0, 495, 494, 550, 0, 0, 0,
	0, 496, 497, 551, 498, 499, 500, 890, 0, 0,
	0, 0, 0, 0, 886, 0, 0, 0, 0, 0,
	0, 884, 885, 0, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 2241, 913, 931, 903, 904, 905, 901,
	902, 914, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 955, 919, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 968,
	0, 975, 249, 974, 0, 250, 251, 252, 253, 254,
	921, 954, 888, 255, 1013, 1014, 508, 0, 256, 257,
	961, 0, 942, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 994, 274, 275, 945, 943,
	944, 951, 947, 946, 950, 276, 277, 278, 279, 978,
	280, 972, 971, 892, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 963, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 898, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 985, 986,
	910, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	970, 0, 0, 0, 311, 0, 312, 0, 0, 995,
	313, 314, 983, 984, 315, 316, 0, 317, 992, 0,
	920, 318, 0, 319, 320, 321, 322, 323, 956, 957,
	960, 377, 997, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 232, 330, 331, 333, 0, 996, 332,
	965, 966, 0, 926, 0, 334, 998, 958, 999, 335,
	336, 337, 1000, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 993, 1001, 347,
	348, 1002, 0, 349, 350, 351, 949, 948, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 1003, 368, 369, 370,
	373, 374, 372, 1004, 371, 889, 233, 1005, 375, 911,
	959, 376, 973, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 1006,
	387, 1007, 987, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 988, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 969, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 1008, 425, 426,
	427, 428, 899, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 952, 448, 432, 433, 449, 450, 1009, 451, 452,
	967, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 1012, 459, 460, 461, 462, 989, 0, 465, 466,
	887, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 979, 980, 981, 982, 0, 480, 0, 474,
	475, 990, 476, 991, 909, 477, 478, 479, 0, 481,
	482, 0, 893, 483, 484, 485, 487, 488, 486, 489,
	953, 490, 0, 0, 491, 492, 493, 547, 976, 1011,
	0, 495, 494, 550, 0, 0, 0, 0, 496, 497,
	551, 498, 499, 500, 890, 0, 0, 0, 0, 0,
	0, 886, 0, 0, 0, 0, 0, 0, 884, 885,
	0, 0, 0, 0, 0, 0, 0, 915, 0, 0,
	2230, 913, 931, 903, 904, 905, 901, 902, 914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 955, 919, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 968, 0, 975, 249,
	974, 0, 250, 251, 252, 253, 254, 921, 954, 888,
	255, 1013, 1014, 508, 0, 256, 257, 961, 0, 942,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 994, 274, 275, 945, 943, 944, 951, 947,
	946, 950, 276, 277, 278, 279, 978, 280, 972, 971,
	892, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 963, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 898, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 985, 986, 910, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 970, 0, 0,
	0, 311, 0, 312, 0, 0, 995, 313, 314, 983,
	984, 315, 316, 0, 317, 992, 0, 920, 318, 0,
	319, 320, 321, 322, 323, 956, 957, 960, 377, 997,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 996, 332, 965, 966, 0,
	926, 0, 334, 998, 958, 999, 335, 336, 337, 1000,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 993, 1001, 347, 348, 1002, 0,
	349, 350, 351, 949, 948, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 1003, 368, 369, 370, 373, 374, 372,
	1004, 371, 889, 233, 1005, 375, 911, 959, 376, 973,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 1006, 387, 1007, 987,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 988, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	969, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 1008, 425, 426, 427, 428, 899,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 952, 448,
	432, 433, 449, 450, 1009, 451, 452, 967, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 1012, 459,
	460, 461, 462, 989, 0, 465, 466, 887, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 979,
	980, 981, 982, 0, 480, 0, 474, 475, 990, 476,
	991, 909, 477, 478, 479, 0, 481, 482, 0, 893,
	483, 484, 485, 487, 488, 486, 489, 953, 490, 0,
	0, 491, 492, 493, 547, 976, 1011, 0, 495, 494,
	550, 0, 0, 0, 0, 496, 497, 551, 498, 499,
	500, 890, 0, 0, 0, 0, 0, 0, 886, 0,
	0, 0, 0, 0, 0, 884, 885, 0, 0, 0,
	0, 0, 0, 0, 915, 0, 0, 2228, 913, 2219,
	2226, 904, 905, 901, 902, 914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	955, 919, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 968, 0, 975, 249, 974, 0, 250,
	251, 252, 253, 254, 921, 954, 888, 255, 1013, 1014,
	508, 0, 256, 257, 961, 0, 942, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 994,
	274, 275, 945, 943, 944, 951, 947, 946, 950, 276,
	277, 278, 279, 978, 2222, 972, 971, 892, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	963, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 898, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 985, 986, 910, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 970, 0, 0, 0, 311, 0,
	312, 0, 0, 995, 313, 314, 983, 984, 315, 316,
	0, 317, 992, 0, 920, 318, 0, 319, 320, 321,
	2223, 323, 956, 957, 960, 377, 997, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 232, 330, 331,
	333, 0, 996, 332, 965, 966, 0, 926, 0, 334,
	998, 958, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 993, 1001, 347, 348, 1002, 0, 349, 350, 351,
	949, 948, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 2224, 2221, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 889,
	233, 1005, 375, 911, 959, 376, 973, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 1006, 387, 1007, 987, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 988, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 969, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 1008, 425, 426, 427, 428, 899, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 2225, 0, 443,
	444, 442, 445, 446, 447, 952, 448, 432, 433, 449,
	450, 1009, 451, 452, 967, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 1012, 459, 460, 461, 462,
	989, 0, 465, 466, 887, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 979, 980, 981, 982,
	0, 480, 0, 474, 475, 990, 476, 991, 909, 477,
	478, 479, 0, 481, 482, 0, 893, 483, 484, 485,
	487, 488, 486, 489, 953, 490, 0, 0, 491, 492,
	493, 547, 976, 1011, 0, 495, 494, 550, 0, 0,
	0, 0, 496, 497, 551, 498, 2220, 500, 890, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 884, 885, 0, 0, 0, 0, 0, 0,
	0, 915, 0, 0, 2216, 913, 2219, 2226, 904, 905,
	901, 902, 914, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 955, 919, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	968, 0, 975, 249, 974, 0, 250, 251, 252, 253,
	254, 921, 954, 888, 255, 1013, 1014, 508, 0, 256,
	257, 961, 0, 942, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 994, 274, 275, 945,
	943, 944, 951, 947, 946, 950, 276, 277, 278, 279,
	978, 2222, 972, 971, 892, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 963, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 898, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 985,
	986, 910, 231, 0, 0, 0, 0, 0, 308, 309,
	310, 970, 0, 0, 0, 311, 0, 312, 0, 0,
	995, 313, 314, 983, 984, 315, 316, 0, 317, 992,
	0, 920, 318, 0, 319, 320, 321, 2223, 323, 956,
	957, 960, 377, 997, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 232, 330, 331, 333, 0, 996,
	332, 965, 966, 0, 926, 0, 334, 998, 958, 999,
	335, 336, 337, 1000, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 993, 1001,
	347, 348, 1002, 0, 349, 350, 351, 949, 948, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 2224,
	2221, 362, 363, 364, 367, 0, 366, 1003, 368, 369,
	370, 373, 374, 372, 1004, 371, 889, 233, 1005, 375,
	911, 959, 376, 973, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	1006, 387, 1007, 987, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 988,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 969, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 1008, 425,
	426, 427, 428, 899, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 2225, 0, 443, 444, 442, 445,
	446, 447, 952, 448, 432, 433, 449, 450, 1009, 451,
	452, 967, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 1012, 459, 460, 461, 462, 989, 0, 465,
	466, 887, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 979, 980, 981, 982, 0, 480, 0,
	474, 475, 990, 476, 991, 909, 477, 478, 479, 0,
	481, 482, 0, 893, 483, 484, 485, 487, 488, 486,
	489, 953, 490, 0, 0, 491, 492, 493, 547, 976,
	1011, 0, 495, 494, 550, 0, 0, 0, 0, 496,
	497, 551, 498, 2220, 500, 890, 0, 0, 0, 0,
	0, 0, 886, 0, 0, 0, 0, 0, 0, 884,
	885, 931, 903, 904, 905, 901, 902, 914, 915, 0,
	0, 0, 913, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 955, 919, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 968, 0, 975, 249, 974,
	0, 250, 251, 252, 253, 254, 921, 954, 888, 255,
	1013, 1014, 508, 0, 256, 257, 961, 0, 942, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 994, 274, 275, 945, 943, 944, 951, 947, 946,
	950, 276, 277, 278, 279, 978, 280, 972, 971, 892,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 963, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 898, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 985, 986, 910, 231, 0, 0,
	0, 0, 0, 308, 309, 310, 970, 0, 0, 0,
	311, 0, 312, 0, 0, 995, 313, 314, 983, 984,
	315, 316, 0, 317, 992, 0, 920, 318, 0, 319,
	320, 321, 322, 323, 956, 957, 960, 377, 997, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 0, 996, 332, 965, 966, 0, 926,
	0, 334, 998, 958, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 993, 1001, 347, 348, 1002, 0, 349,
	350, 351, 949, 948, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 889, 233, 1005, 375, 911, 959, 376, 973, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 1006, 387, 1007, 987, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 988, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 969,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 1008, 425, 426, 427, 428, 899, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 952, 448, 432,
	433, 449, 450, 1009, 451, 452, 967, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 1012, 459, 460,
	461, 462, 989, 0, 465, 466, 887, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 979, 980,
	981, 982, 0, 480, 0, 474, 475, 990, 476, 991,
	909, 477, 478, 479, 0, 481, 482, 0, 893, 483,
	484, 485, 487, 488, 486, 489, 953, 490, 0, 0,
	491, 492, 493, 547, 976, 1011, 0, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	890, 0, 0, 0, 0, 0, 0, 886, 0, 0,
	0, 0, 0, 0, 884, 885, 0, 0, 0, 0,
	0, 1590, 0, 915, 0, 0, 0, 913, 931, 903,
	904, 905, 901, 902, 914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 2034, 240, 241, 0, 0, 0, 0, 0, 955,
	919, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 968, 0, 975, 249, 974, 0, 250, 251,
	252, 253, 254, 921, 954, 888, 255, 1013, 1014, 508,
	0, 256, 257, 961, 0, 942, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 994, 274,
	275, 945, 943, 944, 951, 947, 946, 950, 276, 277,
	278, 279, 978, 280, 972, 971, 892, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 963,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	898, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 985, 986, 910, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 970, 0, 0, 0, 311, 0, 312,
	0, 0, 995, 313, 314, 983, 984, 315, 316, 0,
	317, 992, 0, 920, 318, 0, 319, 320, 321, 322,
	323, 956, 957, 960, 377, 997, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 232, 330, 331, 333,
	0, 996, 332, 965, 966, 0, 926, 0, 334, 998,
	958, 999, 335, 336, 337, 1000, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	993, 1001, 347, 348, 1002, 0, 349, 350, 351, 949,
	948, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 1003,
	368, 369, 370, 373, 374, 372, 1004, 371, 889, 233,
	1005, 375, 911, 959, 376, 973, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 1006, 387, 1007, 987, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 988, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 969, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	1008, 425, 426, 427, 428, 899, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 952, 448, 432, 433, 449, 450,
	1009, 451, 452, 967, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 1012, 459, 460, 461, 462, 989,
	0, 465, 466, 887, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 979, 980, 981, 982, 0,
	480, 0, 474, 475, 990, 476, 991, 909, 477, 478,
	479, 0, 481, 482, 0, 893, 483, 484, 485, 487,
	488, 486, 489, 953, 490, 0, 0, 491, 492, 493,
	547, 976, 1011, 0, 495, 494, 550, 0, 0, 0,
	0, 496, 497, 551, 498, 499, 500, 890, 0, 0,
	0, 0, 0, 0, 886, 0, 0, 0, 0, 0,
	0, 884, 885, 0, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 1256, 913, 931, 903, 904, 905, 901,
	902, 914, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 955, 919, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 968,
	0, 975, 249, 974, 0, 250, 251, 252, 253, 254,
	921, 954, 888, 255, 1013, 1014, 508, 0, 256, 257,
	961, 0, 942, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 994, 274, 275, 945, 943,
	944, 951, 947, 946, 950, 276, 277, 278, 279, 978,
	280, 972, 971, 892, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 963, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 898, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 985, 986,
	910, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	970, 0, 0, 0, 311, 0, 312, 0, 0, 995,
	313, 314, 983, 984, 315, 316, 0, 317, 992, 0,
	920, 318, 0, 319, 320, 321, 322, 323, 1255, 957,
	960, 377, 997, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 232, 330, 331, 333, 0, 996, 332,
	965, 966, 0, 926, 0, 334, 998, 958, 999, 335,
	336, 337, 1000, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 993, 1001, 347,
	348, 1002, 0, 349, 350, 351, 949, 948, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 1003, 368, 369, 370,
	373, 374, 372, 1004, 371, 889, 233, 1005, 375, 911,
	959, 376, 973, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 1006,
	387, 1007, 987, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 988, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 969, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 1008, 425, 426,
	427, 428, 899, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 952, 448, 432, 433, 449, 450, 1009, 451, 452,
	967, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 1012, 459, 460, 461, 462, 989, 0, 465, 466,
	887, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 979, 980, 981, 982, 0, 480, 0, 474,
	475, 990, 476, 991, 909, 477, 478, 479, 0, 481,
	482, 0, 893, 483, 484, 485, 487, 488, 486, 489,
	953, 490, 0, 0, 491, 492, 493, 547, 976, 1011,
	0, 495, 494, 550, 0, 0, 0, 0, 496, 497,
	551, 498, 499, 500, 890, 0, 0, 0, 0, 0,
	0, 886, 0, 0, 0, 0, 0, 0, 884, 885,
	0, 0, 0, 0, 0, 0, 0, 915, 0, 0,
	1250, 913, 931, 903, 904, 905, 901, 902, 914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 955, 919, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 968, 0, 975, 249,
	974, 0, 250, 251, 252, 253, 254, 921, 954, 888,
	255, 1013, 1014, 508, 0, 256, 257, 961, 0, 942,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 994, 274, 275, 945, 943, 944, 951, 947,
	946, 950, 276, 277, 278, 279, 978, 280, 972, 971,
	892, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 963, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 898, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 985, 986, 910, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 970, 0, 0,
	0, 311, 0, 312, 0, 0, 995, 313, 314, 983,
	984, 315, 316, 0, 317, 992, 0, 920, 318, 0,
	319, 320, 321, 322, 323, 1249, 957, 960, 377, 997,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 996, 332, 965, 966, 0,
	926, 0, 334, 998, 958, 999, 335, 336, 337, 1000,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 993, 1001, 347, 348, 1002, 0,
	349, 350, 351, 949, 948, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 1003, 368, 369, 370, 373, 374, 372,
	1004, 371, 889, 233, 1005, 375, 911, 959, 376, 973,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 1006, 387, 1007, 987,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 988, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	969, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 1008, 425, 426, 427, 428, 899,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 952, 448,
	432, 433, 449, 450, 1009, 451, 452, 967, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 1012, 459,
	460, 461, 462, 989, 0, 465, 466, 887, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 979,
	980, 981, 982, 0, 480, 0, 474, 475, 990, 476,
	991, 909, 477, 478, 479, 0, 481, 482, 0, 893,
	483, 484, 485, 487, 488, 486, 489, 953, 490, 0,
	0, 491, 492, 493, 547, 976, 1011, 0, 495, 494,
	550, 0, 0, 0, 0, 496, 497, 551, 498, 499,
	500, 890, 0, 0, 0, 0, 0, 0, 886, 0,
	0, 0, 0, 0, 0, 884, 885, 0, 0, 0,
	0, 0, 0, 0, 915, 0, 0, 1245, 913, 931,
	903, 904, 905, 901, 902, 914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	955, 919, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 968, 0, 975, 249, 974, 0, 250,
	251, 252, 253, 254, 921, 954, 888, 255, 1013, 1014,
	508, 0, 256, 257, 961, 0, 942, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 994,
	274, 275, 945, 943, 944, 951, 947, 946, 950, 276,
	277, 278, 279, 978, 280, 972, 971, 892, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	963, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 898, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 985, 986, 910, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 970, 0, 0, 0, 311, 0,
	312, 0, 0, 995, 313, 314, 983, 984, 315, 316,
	0, 317, 992, 0, 920, 318, 0, 319, 320, 321,
	322, 323, 956, 957, 960, 377, 997, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 232, 330, 331,
	333, 0, 996, 332, 965, 966, 0, 926, 0, 334,
	998, 958, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 993, 1001, 347, 348, 1002, 0, 349, 350, 351,
	949, 948, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 889,
	233, 1005, 375, 911, 959, 376, 973, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 1006, 387, 1007, 987, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 988, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 969, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 1008, 425, 426, 427, 428, 899, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 952, 448, 432, 433, 449,
	450, 1009, 451, 452, 967, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 1012, 459, 460, 461, 462,
	989, 0, 465, 466, 887, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 979, 980, 981, 982,
	0, 480, 0, 474, 475, 990, 476, 991, 909, 477,
	478, 479, 0, 481, 482, 0, 893, 483, 484, 485,
	487, 488, 486, 489, 953, 490, 0, 0, 491, 492,
	493, 547, 976, 1011, 0, 495, 494, 550, 0, 0,
	0, 0, 496, 497, 551, 498, 499, 500, 890, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 884, 885, 931, 903, 904, 905, 901, 902,
	914, 915, 0, 0, 0, 913, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 955, 919, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 968, 0,
	975, 249, 974, 0, 250, 251, 252, 253, 254, 921,
	954, 888, 255, 1013, 1014, 508, 0, 256, 257, 961,
	0, 942, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 994, 274, 275, 945, 943, 944,
	951, 947, 946, 950, 276, 277, 278, 279, 978, 280,
	972, 971, 892, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 963, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 898, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 985, 986, 910,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 970,
	0, 0, 0, 311, 0, 312, 0, 0, 995, 313,
	314, 983, 984, 315, 316, 0, 317, 992, 0, 920,
	318, 0, 319, 320, 321, 322, 323, 956, 957, 960,
	377, 997, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 232, 330, 331, 333, 0, 996, 332, 965,
	966, 0, 926, 0, 334, 998, 958, 999, 335, 336,
	337, 1000, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 993, 1001, 347, 348,
	1002, 0, 349, 350, 351, 949, 948, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 1003, 368, 369, 370, 373,
	374, 372, 1004, 371, 889, 233, 1005, 375, 911, 959,
	376, 973, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 1006, 387,
	1007, 987, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 988, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 969, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 1008, 425, 426, 427,
	428, 899, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	952, 448, 432, 433, 449, 450, 1009, 451, 452, 967,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	1012, 459, 460, 461, 462, 989, 0, 465, 466, 887,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 979, 980, 981, 982, 0, 480, 0, 474, 475,
	990, 476, 991, 909, 477, 478, 479, 0, 481, 482,
	0, 893, 483, 484, 485, 487, 488, 486, 489, 953,
	490, 0, 0, 491, 492, 493, 547, 976, 1011, 0,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 890, 0, 0, 0, 0, 0, 0,
	886, 0, 0, 0, 0, 0, 0, 884, 885, 931,
	903, 904, 905, 901, 902, 914, 915, 0, 0, 0,
	913, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	955, 919, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 968, 0, 975, 249, 974, 0, 250,
	251, 252, 253, 254, 921, 954, 888, 255, 1013, 1014,
	508, 0, 256, 257, 961, 0, 942, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 994,
	274, 3826, 945, 943, 944, 951, 947, 946, 950, 276,
	277, 278, 279, 978, 280, 972, 971, 892, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	963, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 898, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 985, 986, 910, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 970, 0, 0, 0, 311, 0,
	312, 0, 0, 995, 313, 314, 983, 984, 315, 316,
	0, 317, 992, 0, 920, 318, 0, 319, 320, 321,
	322, 323, 956, 957, 960, 377, 997, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 232, 330, 331,
	333, 0, 996, 332, 965, 966, 0, 926, 0, 334,
	998, 958, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 993, 1001, 347, 348, 1002, 0, 349, 350, 351,
	949, 948, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 889,
	233, 1005, 375, 911, 959, 376, 973, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 1006, 387, 1007, 987, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 988, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 969, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 1008, 425, 426, 427, 428, 899, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 952, 448, 432, 433, 449,
	450, 1009, 451, 452, 967, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 1012, 459, 460, 461, 462,
	989, 0, 465, 466, 887, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 979, 980, 981, 982,
	0, 480, 0, 474, 475, 990, 476, 991, 909, 477,
	478, 479, 0, 3825, 482, 0, 893, 483, 484, 485,
	487, 488, 486, 489, 953, 490, 0, 0, 491, 492,
	493, 547, 976, 1011, 0, 495, 494, 550, 0, 0,
	0, 0, 496, 497, 551, 498, 499, 500, 890, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 884, 885, 931, 903, 904, 905, 901, 902,
	914, 915, 0, 0, 0, 913, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 955, 919, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 3824, 968, 0,
	975, 249, 974, 0, 250, 251, 252, 253, 254, 921,
	954, 888, 255, 1013, 1014, 508, 0, 256, 257, 961,
	0, 942, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 994, 274, 3826, 945, 943, 944,
	951, 947, 946, 950, 276, 277, 278, 279, 978, 280,
	972, 971, 892, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 963, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 898, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 985, 986, 910,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 970,
	0, 0, 0, 311, 0, 312, 0, 0, 995, 313,
	314, 983, 984, 315, 316, 0, 317, 992, 0, 920,
	318, 0, 319, 320, 321, 322, 323, 956, 957, 960,
	377, 997, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 232, 330, 331, 333, 0, 996, 332, 965,
	966, 0, 926, 0, 334, 998, 958, 999, 335, 336,
	337, 1000, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 993, 1001, 347, 348,
	1002, 0, 349, 350, 351, 949, 948, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 1003, 368, 369, 370, 373,
	374, 372, 1004, 371, 889, 233, 1005, 375, 911, 959,
	376, 973, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 1006, 387,
	1007, 987, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 988, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 969, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 1008, 425, 426, 427,
	428, 899, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	952, 448, 432, 433, 449, 450, 1009, 451, 452, 967,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	1012, 459, 460, 461, 462, 989, 0, 465, 466, 887,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 979, 980, 981, 982, 0, 480, 0, 474, 475,
	990, 476, 991, 909, 477, 478, 479, 0, 3825, 482,
	0, 893, 483, 484, 485, 487, 488, 486, 489, 953,
	490, 0, 0, 491, 492, 493, 547, 976, 1011, 0,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 890, 0, 0, 0, 0, 0, 0,
	886, 0, 0, 0, 0, 0, 0, 884, 885, 931,
	903, 904, 905, 2606, 2607, 914, 915, 0, 0, 0,
	913, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	955, 919, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 968, 0, 975, 249, 974, 0, 250,
	251, 252, 253, 254, 921, 954, 888, 255, 1013, 1014,
	508, 0, 256, 257, 961, 0, 942, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 994,
	274, 275, 945, 943, 944, 951, 947, 946, 950, 276,
	277, 278, 279, 978, 280, 972, 971, 892, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	963, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 898, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 985, 986, 910, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 970, 0, 0, 0, 311, 0,
	312, 0, 0, 995, 313, 314, 983, 984, 315, 316,
	0, 317, 992, 0, 920, 318, 0, 319, 320, 321,
	322, 323, 956, 957, 960, 377, 997, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 232, 330, 331,
	333, 0, 996, 332, 965, 966, 0, 926, 0, 334,
	998, 958, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 993, 1001, 347, 348, 1002, 0, 349, 350, 351,
	949, 948, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 889,
	233, 1005, 375, 911, 959, 376, 973, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 1006, 387, 1007, 987, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 988, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 969, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 1008, 425, 426, 427, 428, 899, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 952, 448, 432, 433, 449,
	450, 1009, 451, 452, 967, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 1012, 459, 460, 461, 462,
	989, 0, 465, 466, 887, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 979, 980, 981, 982,
	0, 480, 0, 474, 475, 990, 476, 991, 909, 477,
	478, 479, 0, 481, 482, 0, 893, 483, 484, 485,
	487, 488, 486, 489, 953, 490, 0, 0, 491, 492,
	493, 547, 976, 1011, 0, 495, 494, 550, 0, 0,
	0, 0, 496, 497, 551, 498, 499, 500, 890, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 884, 885, 931, 903, 904, 905, 2604, 2605,
	914, 915, 0, 0, 0, 913, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 955, 919, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 968, 0,
	975, 249, 974, 0, 250, 251, 252, 253, 254, 921,
	954, 888, 255, 1013, 1014, 508, 0, 256, 257, 961,
	0, 942, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 994, 274, 275, 945, 943, 944,
	951, 947, 946, 950, 276, 277, 278, 279, 978, 280,
	972, 971, 892, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 963, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 898, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 985, 986, 910,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 970,
	0, 0, 0, 311, 0, 312, 0, 0, 995, 313,
	314, 983, 984, 315, 316, 0, 317, 992, 0, 920,
	318, 0, 319, 320, 321, 322, 323, 956, 957, 960,
	377, 997, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 232, 330, 331, 333, 0, 996, 332, 965,
	966, 0, 926, 0, 334, 998, 958, 999, 335, 336,
	337, 1000, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 993, 1001, 347, 348,
	1002, 0, 349, 350, 351, 949, 948, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 1003, 368, 369, 370, 373,
	374, 372, 1004, 371, 889, 233, 1005, 375, 911, 959,
	376, 973, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 1006, 387,
	1007, 987, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 988, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 969, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 1008, 425, 426, 427,
	428, 899, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	952, 448, 432, 433, 449, 450, 1009, 451, 452, 967,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	1012, 459, 460, 461, 462, 989, 0, 465, 466, 887,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 979, 980, 981, 982, 0, 480, 0, 474, 475,
	990, 476, 991, 909, 477, 478, 479, 0, 481, 482,
	0, 893, 483, 484, 485, 487, 488, 486, 489, 953,
	490, 0, 0, 491, 492, 493, 547, 976, 1011, 0,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 890, 0, 0, 0, 0, 0, 0,
	886, 0, 0, 0, 0, 0, 0, 884, 885, 931,
	903, 904, 905, 901, 902, 914, 915, 0, 0, 0,
	913, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	955, 919, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 968, 0, 975, 249, 974, 0, 250,
	251, 252, 253, 254, 921, 954, 888, 255, 1013, 1014,
	508, 0, 256, 257, 961, 0, 942, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 994,
	274, 275, 945, 943, 944, 951, 947, 946, 950, 276,
	277, 278, 279, 978, 280, 972, 971, 892, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	963, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 898, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 985, 986, 910, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 970, 0, 0, 0, 311, 0,
	312, 0, 0, 995, 313, 314, 983, 984, 315, 316,
	0, 317, 992, 0, 920, 318, 0, 319, 320, 321,
	322, 323, 956, 957, 960, 377, 997, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 232, 330, 331,
	333, 0, 996, 332, 965, 966, 0, 926, 0, 334,
	998, 958, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 993, 1001, 347, 348, 1002, 0, 349, 350, 351,
	949, 948, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 889,
	233, 1005, 375, 911, 959, 376, 973, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 1006, 387, 1007, 987, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 988, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 969, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 1008, 425, 426, 427, 428, 899, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 952, 448, 432, 433, 449,
	450, 1009, 451, 452, 967, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 1012, 459, 460, 461, 462,
	989, 0, 465, 466, 887, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 979, 980, 981, 982,
	0, 480, 0, 474, 475, 990, 476, 991, 909, 477,
	478, 479, 0, 481, 482, 0, 893, 483, 484, 485,
	487, 488, 486, 489, 953, 490, 0, 0, 491, 492,
	493, 547, 976, 1011, 0, 495, 494, 550, 0, 0,
	0, 0, 496, 497, 551, 498, 499, 500, 890, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 2042, 2043, 931, 903, 904, 905, 901, 902,
	914, 915, 0, 0, 0, 913, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 955, 919, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 968, 0,
	975, 249, 974, 0, 250, 251, 252, 253, 254, 921,
	954, 0, 255, 1013, 1014, 508, 0, 256, 257, 961,
	0, 942, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 994, 274, 275, 945, 943, 944,
	951, 947, 946, 950, 276, 277, 278, 279, 978, 280,
	972, 971, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 963, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 898, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 985, 986, 910,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 970,
	0, 0, 0, 311, 0, 312, 0, 0, 995, 313,
	314, 983, 984, 315, 316, 0, 317, 992, 0, 920,
	318, 0, 319, 320, 321, 322, 323, 956, 957, 960,
	377, 997, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 232, 330, 331, 333, 0, 996, 332, 965,
	966, 0, 926, 0, 334, 998, 958, 999, 335, 336,
	337, 1000, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 993, 1001, 347, 348,
	1002, 0, 349, 350, 351, 949, 948, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 1003, 368, 369, 370, 373,
	374, 372, 1004, 371, 0, 233, 1005, 375, 911, 959,
	376, 973, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 1006, 387,
	1007, 987, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 988, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 969, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 1008, 425, 426, 427,
	428, 899, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	952, 448, 432, 433, 449, 450, 1009, 451, 452, 967,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	1012, 459, 460, 461, 462, 989, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 979, 980, 981, 982, 0, 480, 0, 474, 475,
	990, 476, 991, 909, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 953,
	490, 0, 0, 491, 492, 493, 547, 976, 1011, 0,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 931, 903, 904, 905, 901, 902, 914,
	2238, 0, 0, 0, 0, 0, 0, 2236, 2237, 0,
	234, 235, 236, 237, 238, 239, 915, 240, 241, 0,
	913, 0, 0, 0, 955, 919, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 968, 0, 975,
	249, 974, 0, 250, 251, 252, 253, 254, 921, 954,
	0, 255, 1013, 1014, 508, 0, 256, 257, 961, 0,
	942, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 994, 274, 275, 945, 943, 944, 951,
	947, 946, 950, 276, 277, 278, 279, 978, 280, 972,
	971, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 963, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 898, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 985, 986, 910, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 970, 0,
	0, 0, 311, 0, 312, 0, 0, 995, 313, 314,
	983, 984, 315, 316, 0, 317, 992, 0, 920, 318,
	0, 319, 320, 321, 322, 323, 956, 957, 960, 377,
	997, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 996, 332, 965, 966,
	0, 926, 0, 334, 998, 958, 999, 335, 336, 337,
	1000, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 993, 1001, 347, 348, 1002,
	0, 349, 350, 351, 949, 948, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 1003, 368, 369, 370, 373, 374,
	372, 1004, 371, 0, 233, 1005, 375, 911, 959, 376,
	973, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 1006, 387, 1007,
	987, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 988, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 969, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 1008, 425, 426, 427, 428,
	2599, 2600, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 952,
	448, 432, 433, 449, 450, 1009, 451, 452, 967, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 1012,
	459, 460, 461, 462, 989, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	979, 980, 981, 982, 0, 480, 0, 474, 475, 990,
	476, 991, 909, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 953, 490,
	0, 0, 491, 492, 493, 547, 976, 1011, 0, 495,
	494, 550, 0, 0, 0, 0, 496, 497, 551, 498,
	499, 500, 931, 903, 904, 905, 901, 902, 914, 0,
	0, 0, 0, 0, 0, 0, 1783, 1784, 0, 234,
	235, 236, 237, 238, 239, 915, 240, 241, 0, 913,
	0, 0, 0, 955, 919, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 0, 968, 0, 975, 249,
	974, 0, 250, 251, 252, 253, 254, 921, 954, 888,
	255, 1013, 1014, 508, 0, 256, 257, 961, 0, 942,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 994, 274, 3826, 945, 943, 944, 951, 947,
	946, 950, 276, 277, 278, 279, 978, 280, 972, 971,
	892, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 963, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 898, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 985, 986, 910, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 970, 0, 0,
	0, 311, 0, 312, 0, 0, 995, 313, 314, 983,
	984, 315, 316, 0, 317, 992, 0, 920, 318, 0,
	319, 320, 321, 322, 323, 956, 957, 960, 377, 0,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 996, 332, 965, 966, 0,
	926, 0, 334, 0, 958, 0, 335, 336, 337, 1000,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 993, 1001, 347, 348, 0, 0,
	349, 350, 351, 949, 948, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 1003, 368, 369, 370, 373, 374, 372,
	1004, 371, 889, 233, 0, 375, 911, 959, 376, 973,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 1006, 387, 1007, 987,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 988, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	969, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 1008, 425, 426, 427, 428, 899,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 952, 448,
	432, 433, 449, 450, 0, 451, 452, 967, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 1012, 459,
	460, 461, 462, 989, 0, 465, 466, 887, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 979,
	980, 981, 982, 0, 480, 0, 474, 475, 990, 476,
	991, 909, 477, 478, 479, 0, 3825, 482, 0, 893,
	483, 484, 485, 487, 488, 486, 489, 953, 490, 0,
	0, 491, 492, 493, 547, 976, 1011, 0, 495, 494,
	550, 0, 0, 0, 0, 496, 497, 551, 498, 499,
	500, 931, 903, 904, 905, 901, 902, 914, 0, 0,
	0, 0, 0, 0, 0, 884, 885, 0, 234, 235,
	236, 237, 238, 239, 915, 240, 241, 0, 913, 0,
	0, 0, 955, 919, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 968, 0, 975, 249, 974,
	0, 250, 251, 252, 253, 254, 0, 954, 0, 255,
	1013, 1014, 508, 0, 256, 257, 961, 0, 942, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 994, 274, 275, 945, 943, 944, 951, 947, 946,
	950, 276, 277, 278, 279, 978, 280, 972, 971, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 963, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 985, 986, 910, 231, 0, 0,
	0, 0, 0, 308, 309, 310, 970, 0, 0, 0,
	311, 0, 312, 0, 0, 995, 313, 314, 983, 984,
	315, 316, 0, 317, 992, 0, 920, 318, 0, 319,
	320, 321, 322, 323, 956, 957, 960, 377, 997, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 0, 996, 332, 965, 966, 0, 926,
	0, 334, 998, 958, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 993, 1001, 347, 348, 1002, 0, 349,
	350, 351, 949, 948, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 0, 233, 1005, 375, 911, 959, 376, 973, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 1006, 387, 1007, 987, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 988, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 969,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 1008, 425, 426, 427, 428, 899, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 952, 448, 432,
	433, 449, 450, 1009, 451, 452, 967, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 1012, 459, 460,
	461, 462, 989, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 979, 980,
	981, 982, 0, 480, 0, 474, 475, 990, 476, 991,
	909, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 953, 490, 0, 0,
	491, 492, 493, 547, 976, 1011, 0, 495, 494, 550,
	0, 877, 0, 1051, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 915, 955, 0, 0, 913, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 954,
	0, 255, 506, 507, 508, 0, 256, 257, 961, 0,
	942, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 994, 274, 275, 945, 943, 944, 951,
	947, 946, 950, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 985, 986, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 995, 313, 314,
	516, 517, 315, 316, 0, 317, 992, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 956, 957, 960, 377,
	997, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 996, 332, 523, 524,
	0, 525, 0, 334, 998, 958, 999, 335, 336, 337,
	1000, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	1037, 345, 344, 0, 346, 993, 1001, 347, 348, 1002,
	0, 349, 350, 351, 949, 948, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 1003, 368, 369, 370, 373, 374,
	372, 1004, 371, 0, 233, 1005, 375, 0, 959, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 1043, 382,
	383, 384, 0, 0, 385, 386, 530, 1006, 387, 1007,
	987, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 988, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 1008, 425, 426, 427, 428,
	537, 1045, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 194, 443, 444, 442, 445, 446, 447, 952,
	448, 432, 433, 449, 450, 1009, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 989, 0, 465, 466, 0, 464,
	196, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 990,
	476, 991, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 953, 490,
	0, 0, 491, 492, 493, 1370, 548, 549, 0, 495,
	494, 550, 0, 1051, 0, 188, 496, 497, 551, 498,
	499, 500, 0, 189, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 1041, 955, 1676, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 954,
	0, 255, 506, 507, 508, 0, 256, 257, 961, 0,
	942, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 994, 274, 275, 945, 943, 944, 951,
	947, 946, 950, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 985, 986, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 995, 313, 314,
	516, 517, 315, 316, 0, 317, 992, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 956, 957, 960, 377,
	997, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 996, 332, 523, 524,
	0, 525, 0, 334, 998, 958, 999, 335, 336, 337,
	1000, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	1037, 345, 344, 0, 346, 993, 1001, 347, 348, 1002,
	0, 349, 350, 351, 949, 948, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 1003, 368, 369, 370, 373, 374,
	372, 1004, 371, 0, 233, 1005, 375, 0, 959, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 1043, 382,
	383, 384, 0, 0, 385, 386, 530, 1006, 387, 1007,
	987, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 988, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 1008, 425, 426, 427, 428,
	537, 1045, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 194, 443, 444, 442, 445, 446, 447, 952,
	448, 432, 433, 449, 450, 1009, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 989, 0, 465, 466, 0, 464,
	196, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 990,
	476, 991, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 953, 490,
	0, 0, 491, 492, 493, 1370, 548, 549, 0, 495,
	494, 550, 0, 0, 0, 188, 496, 497, 551, 498,
	499, 500, 0, 189, 0, 0, 0, 2759, 0, 1051,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1041, 0, 1676, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	955, 0, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 0, 250,
	251, 252, 253, 254, 0, 954, 0, 255, 506, 507,
	508, 0, 256, 257, 961, 0, 942, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 994,
	274, 275, 945, 943, 944, 951, 947, 946, 950, 276,
	277, 278, 279, 0, 280, 510, 511, 0, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	289, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 985, 986, 0, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 0,
	312, 0, 0, 995, 313, 314, 516, 517, 315, 316,
	0, 317, 992, 0, 519, 318, 0, 319, 320, 321,
	322, 323, 956, 957, 960, 377, 997, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 232, 330, 331,
	333, 0, 996, 332, 523, 524, 0, 525, 0, 334,
	998, 958, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 1037, 345, 344, 0,
	346, 993, 1001, 347, 348, 1002, 0, 349, 350, 351,
	949, 948, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 0,
	233, 1005, 375, 0, 959, 376, 529, 378, 379, 0,
	0, 380, 0, 0, 1043, 382, 383, 384, 0, 0,
	385, 386, 530, 1006, 387, 1007, 987, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 988, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 1008, 425, 426, 427, 428, 537, 1045, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 952, 448, 432, 433, 449,
	450, 1009, 451, 452, 538, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	989, 0, 465, 466, 0, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 541, 542, 543, 544,
	0, 480, 0, 474, 475, 990, 476, 991, 0, 477,
	478, 479, 0, 481, 482, 0, 0, 483, 484, 485,
	487, 488, 486, 489, 953, 490, 0, 0, 491, 492,
	493, 547, 548, 549, 0, 495, 494, 550, 0, 1033,
	0, 1051, 496, 497, 551, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 1041,
	0, 1039, 955, 0, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 954, 0, 255,
	506, 507, 508, 0, 256, 257, 961, 0, 942, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 994, 274, 275, 945, 943, 944, 951, 947, 946,
	950, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 985, 986, 0, 231, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 995, 313, 314, 516, 517,
	315, 316, 0, 317, 992, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 956, 957, 960, 377, 997, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 0, 996, 332, 523, 524, 0, 525,
	0, 334, 998, 958, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 1037, 345,
	344, 0, 346, 993, 1001, 347, 348, 1002, 0, 349,
	350, 351, 949, 948, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 0, 233, 1005, 375, 0, 959, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 1043, 382, 383, 384,
	0, 0, 385, 386, 530, 1006, 387, 1007, 987, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 988, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 1008, 425, 426, 427, 428, 537, 1045,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 952, 448, 432,
	433, 449, 450, 1009, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 989, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 990, 476, 991,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 953, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 0, 495, 494, 550,
	0, 1051, 0, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 1041, 955, 1039, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 954, 0, 255,
	506, 507, 508, 0, 256, 257, 961, 0, 942, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 994, 274, 275, 945, 943, 944, 951, 947, 946,
	950, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 985, 986, 0, 231, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 995, 313, 314, 516, 517,
	315, 316, 0, 317, 992, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 956, 957, 960, 377, 997, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 0, 996, 332, 523, 524, 0, 525,
	0, 334, 998, 958, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 1037, 345,
	344, 0, 346, 993, 1001, 347, 348, 1002, 0, 349,
	350, 351, 949, 948, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 0, 233, 1005, 375, 0, 959, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 1043, 382, 383, 384,
	0, 0, 385, 386, 530, 1006, 387, 1007, 987, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 988, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 1008, 425, 426, 427, 428, 537, 1045,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 952, 448, 432,
	433, 449, 450, 1009, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 989, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 990, 476, 991,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 953, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 0, 495, 494, 550,
	0, 1051, 0, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 1041, 955, 1039, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 954, 0, 255,
	506, 507, 508, 0, 256, 257, 961, 0, 942, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 994, 274, 275, 945, 943, 944, 951, 947, 946,
	950, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 985, 986, 0, 231, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 995, 313, 314, 516, 517,
	315, 316, 0, 317, 992, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 956, 957, 960, 377, 997, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 0, 996, 332, 523, 524, 0, 525,
	0, 334, 998, 958, 999, 335, 336, 337, 1000, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 993, 1001, 347, 348, 1002, 0, 349,
	350, 351, 949, 948, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 1003, 368, 369, 370, 373, 374, 372, 1004,
	371, 0, 233, 1005, 375, 0, 959, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 1006, 387, 1007, 987, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 988, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 1008, 425, 426, 427, 428, 537, 1045,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 952, 448, 432,
	433, 449, 450, 1009, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 989, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 990, 476, 991,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 953, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 0, 495, 494, 550,
	0, 877, 0, 1232, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 1574, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	1201, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 994, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 995, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	997, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 0, 330, 331, 333, 0, 996, 332, 523, 524,
	0, 525, 0, 334, 998, 526, 999, 335, 336, 337,
	1000, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 1001, 347, 348, 1002,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 1003, 368, 369, 370, 373, 374,
	372, 1004, 371, 0, 0, 1005, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 1006, 387, 1007,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 1008, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 194, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 1009, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	196, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 1370, 548, 549, 0, 495,
	494, 550, 0, 0, 0, 188, 496, 497, 551, 498,
	499, 500, 0, 189, 0, 0, 0, 1367, 0, 1232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 0, 250,
	251, 252, 253, 254, 0, 0, 0, 255, 506, 507,
	508, 0, 256, 257, 509, 0, 1201, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 994,
	274, 275, 0, 0, 0, 0, 0, 0, 0, 276,
	277, 278, 279, 0, 280, 510, 511, 0, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	289, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 513, 514, 0, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 0,
	312, 0, 0, 995, 313, 314, 516, 517, 315, 316,
	0, 317, 518, 0, 519, 318, 0, 319, 320, 321,
	322, 323, 520, 521, 522, 377, 997, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 0, 330, 331,
	333, 0, 996, 332, 523, 524, 0, 525, 0, 334,
	998, 526, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 527, 1001, 347, 348, 1002, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 0,
	0, 1005, 375, 0, 528, 376, 529, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 1006, 387, 1007, 531, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 534, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 1008, 425, 426, 427, 428, 537, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 194, 443,
	444, 442, 445, 446, 447, 0, 448, 432, 433, 449,
	450, 1009, 451, 452, 538, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	540, 0, 465, 466, 0, 464, 196, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 541, 542, 543, 544,
	0, 480, 0, 474, 475, 545, 476, 546, 0, 477,
	478, 479, 0, 481, 482, 0, 0, 483, 484, 485,
	487, 488, 486, 489, 0, 490, 0, 0, 491, 492,
	493, 1370, 548, 549, 0, 495, 494, 550, 0, 0,
	0, 188, 496, 497, 551, 498, 499, 500, 0, 189,
	0, 0, 0, 0, 0, 1232, 1231, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 0, 250, 251, 252, 253, 254,
	0, 0, 0, 255, 506, 507, 508, 0, 256, 257,
	509, 0, 1201, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 994, 274, 275, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 278, 279, 0,
	280, 510, 511, 0, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	0, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 0, 312, 0, 0, 995,
	313, 314, 516, 517, 315, 316, 0, 317, 518, 0,
	519, 318, 0, 319, 320, 321, 322, 323, 520, 521,
	522, 377, 997, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 0, 330, 331, 333, 0, 996, 332,
	523, 524, 0, 525, 0, 334, 998, 526, 999, 335,
	336, 337, 1000, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 527, 1001, 347,
	348, 1002, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 1003, 368, 369, 370,
	373, 374, 372, 1004, 371, 0, 0, 1005, 375, 0,
	528, 376, 529, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 1006,
	387, 1007, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 1008, 425, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 0, 448, 432, 433, 449, 450, 1009, 451, 452,
	538, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 0, 465, 466,
	0, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 541, 542, 543, 544, 0, 480, 0, 474,
	475, 545, 476, 546, 0, 477, 478, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 487, 488, 486, 489,
	0, 490, 0, 0, 491, 492, 493, 547, 548, 549,
	0, 495, 494, 550, 0, 0, 0, 0, 496, 497,
	551, 498, 499, 500, 1232, 1231, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 1385, 240, 241,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 508, 0, 256, 257, 509,
	0, 1201, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 994, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 0, 0, 995, 313,
	314, 516, 517, 315, 316, 0, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 520, 521, 522,
	377, 997, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 0, 330, 331, 333, 0, 996, 332, 523,
	524, 0, 525, 0, 334, 998, 526, 999, 335, 336,
	337, 1000, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 1001, 347, 348,
	1002, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 1003, 368, 369, 370, 373,
	374, 372, 1004, 371, 0, 0, 1005, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 1006, 387,
	1007, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 1008, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	0, 448, 432, 433, 449, 450, 1009, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 541, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 0,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 1232, 1231, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 2983, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	1201, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 994, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 995, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	997, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 0, 330, 331, 333, 0, 996, 332, 523, 524,
	0, 525, 0, 334, 998, 526, 999, 335, 336, 337,
	1000, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 1001, 347, 348, 1002,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 1003, 368, 369, 370, 373, 374,
	372, 1004, 371, 0, 0, 1005, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 1006, 387, 1007,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 1008, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 1009, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 0, 495,
	494, 550, 1051, 0, 0, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 955, 0, 1376, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 503, 0, 504, 249,
	505, 0, 250, 251, 252, 253, 254, 0, 954, 0,
	255, 506, 507, 508, 0, 256, 257, 961, 0, 942,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 994, 274, 275, 945, 943, 944, 951, 947,
	946, 950, 276, 277, 278, 279, 0, 280, 510, 511,
	0, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 289, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 512, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 985, 986, 0, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 515, 0, 0,
	0, 311, 0, 312, 0, 0, 995, 313, 314, 516,
	517, 315, 316, 0, 317, 992, 0, 519, 318, 0,
	319, 320, 321, 322, 323, 956, 957, 960, 377, 997,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 996, 332, 523, 524, 0,
	525, 0, 334, 998, 958, 999, 335, 336, 337, 1000,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 993, 1001, 347, 348, 1002, 0,
	349, 350, 351, 949, 948, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 1003, 368, 369, 370, 373, 374, 372,
	1004, 371, 0, 233, 1005, 375, 0, 959, 376, 529,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 1006, 387, 1007, 987,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 988, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	536, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 1008, 425, 426, 427, 428, 537,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 952, 448,
	432, 433, 449, 450, 1009, 451, 452, 538, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 539, 459,
	460, 461, 462, 989, 0, 465, 466, 0, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 541,
	542, 543, 544, 0, 480, 0, 474, 475, 990, 476,
	991, 0, 477, 478, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 487, 488, 486, 489, 953, 490, 0,
	0, 491, 492, 493, 547, 548, 549, 0, 495, 494,
	550, 877, 0, 228, 0, 496, 497, 551, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 0, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 0, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 194, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	196, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 1370, 548, 549, 0, 495,
	494, 550, 228, 0, 0, 188, 496, 497, 551, 498,
	499, 500, 0, 189, 0, 0, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 501, 0, 163, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 503, 0, 504, 249,
	505, 0, 250, 251, 252, 253, 254, 0, 0, 0,
	255, 506, 507, 508, 0, 256, 257, 509, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 0, 0, 0, 0,
	0, 0, 276, 277, 278, 279, 0, 280, 510, 511,
	0, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 289, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 512, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 513, 514, 0, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 515, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 516,
	517, 315, 316, 0, 317, 518, 0, 519, 318, 0,
	319, 320, 321, 322, 323, 520, 521, 522, 377, 0,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 0, 332, 523, 524, 0,
	525, 0, 334, 0, 526, 0, 335, 336, 337, 0,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 527, 0, 347, 348, 0, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 0, 368, 369, 370, 373, 374, 372,
	0, 371, 0, 233, 0, 375, 0, 528, 376, 529,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 0, 387, 0, 531,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 534, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	536, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 0, 425, 426, 427, 428, 537,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 0, 448,
	432, 433, 449, 450, 0, 451, 452, 538, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 539, 459,
	460, 461, 462, 540, 0, 465, 466, 0, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 541,
	542, 543, 544, 0, 480, 0, 474, 475, 545, 476,
	546, 0, 477, 478, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 487, 488, 486, 489, 0, 490, 0,
	0, 491, 492, 493, 547, 548, 549, 0, 495, 494,
	550, 0, 1318, 0, 228, 496, 497, 551, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 1690, 501, 0, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 508, 0, 256, 257, 509,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 0, 0, 0, 313,
	314, 516, 517, 315, 316, 0, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 520, 521, 522,
	377, 0, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 232, 330, 331, 333, 0, 0, 332, 523,
	524, 0, 525, 0, 334, 0, 526, 0, 335, 336,
	337, 0, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 0, 347, 348,
	0, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 0, 368, 369, 370, 373,
	374, 372, 0, 371, 0, 233, 0, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 0, 387,
	0, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 0, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	0, 448, 432, 433, 449, 450, 0, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 541, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 0,
	495, 494, 550, 0, 228, 2526, 0, 496, 497, 551,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 1322, 501, 0, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 508, 0, 256, 257, 509,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 0, 0, 0, 313,
	314, 516, 517, 315, 316, 0, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 520, 521, 522,
	377, 0, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 0, 330, 331, 333, 0, 0, 332, 523,
	524, 0, 525, 0, 334, 0, 526, 0, 335, 336,
	337, 0, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 0, 347, 348,
	0, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 0, 368, 369, 370, 373,
	374, 372, 0, 371, 0, 0, 0, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 0, 387,
	0, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 0, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	0, 448, 432, 433, 449, 450, 0, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 541, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 0,
	495, 494, 550, 228, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 3974, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 233, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 228, 495,
	494, 550, 0, 0, 0, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 2931, 242, 243, 245, 244, 246, 247,
	248, 502, 503, 0, 504, 249, 505, 0, 250, 251,
	252, 253, 254, 0, 0, 0, 255, 506, 507, 508,
	0, 256, 257, 509, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	278, 279, 0, 280, 510, 511, 0, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 289,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	512, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 513, 514, 0, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 515, 0, 0, 0, 311, 0, 312,
	0, 0, 0, 313, 314, 516, 517, 315, 316, 0,
	317, 518, 0, 519, 318, 0, 319, 320, 321, 322,
	323, 520, 521, 522, 377, 0, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 232, 330, 331, 333,
	0, 0, 332, 523, 524, 0, 525, 0, 334, 0,
	526, 0, 335, 336, 337, 0, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	527, 0, 347, 348, 0, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 0,
	368, 369, 370, 373, 374, 372, 0, 371, 0, 233,
	0, 375, 0, 528, 376, 529, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 0, 387, 0, 531, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 534, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 536, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	0, 425, 426, 427, 428, 537, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 0, 448, 432, 433, 449, 450,
	0, 451, 452, 538, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 539, 459, 460, 461, 462, 540,
	0, 465, 466, 0, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 541, 542, 543, 544, 0,
	480, 0, 474, 475, 545, 476, 546, 0, 477, 478,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 487,
	488, 486, 489, 0, 490, 0, 0, 491, 492, 493,
	547, 548, 549, 228, 495, 494, 550, 0, 0, 0,
	0, 496, 497, 551, 498, 499, 500, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 1322, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 0, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 0, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 0, 495,
	494, 550, 228, 0, 0, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 501, 0, 2501, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 503, 0, 504, 249,
	505, 0, 250, 251, 252, 253, 254, 0, 0, 0,
	255, 506, 507, 508, 0, 256, 257, 509, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 0, 0, 0, 0,
	0, 0, 276, 277, 278, 279, 0, 280, 510, 511,
	0, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 289, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 512, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 310, 515, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 516,
	517, 315, 316, 0, 317, 518, 0, 519, 318, 0,
	319, 320, 321, 322, 323, 520, 521, 522, 377, 0,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	0, 330, 331, 333, 0, 0, 332, 523, 524, 0,
	525, 0, 334, 0, 526, 0, 335, 336, 337, 0,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 527, 0, 347, 348, 0, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 0, 368, 369, 370, 373, 374, 372,
	0, 371, 0, 0, 0, 375, 0, 528, 376, 529,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 0, 387, 0, 531,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 534, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	536, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 0, 425, 426, 427, 428, 537,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 0, 448,
	432, 433, 449, 450, 0, 451, 452, 538, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 539, 459,
	460, 461, 462, 540, 0, 465, 466, 0, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 541,
	542, 543, 544, 0, 480, 0, 474, 475, 545, 476,
	546, 0, 477, 478, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 487, 488, 486, 489, 0, 490, 0,
	0, 491, 492, 493, 547, 548, 549, 0, 495, 494,
	550, 228, 0, 0, 0, 496, 497, 551, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 3071, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 520, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 0,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 0, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 0, 495, 494, 550,
	0, 741, 0, 633, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 1944, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 639, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 739, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 233, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	638, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 0, 495,
	494, 550, 0, 631, 0, 633, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 642, 240,
	241, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 0, 250, 251, 252, 253, 254,
	0, 0, 0, 255, 506, 507, 508, 0, 256, 257,
	509, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 639, 279, 0,
	280, 510, 511, 0, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	0, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 0, 312, 0, 0, 0,
	313, 314, 516, 517, 315, 316, 0, 317, 518, 0,
	519, 318, 0, 319, 320, 321, 322, 323, 520, 521,
	522, 377, 0, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 232, 330, 331, 333, 0, 0, 332,
	523, 524, 0, 525, 0, 334, 0, 526, 0, 335,
	336, 337, 0, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 527, 0, 347,
	348, 0, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 0, 368, 369, 370,
	373, 374, 372, 0, 371, 0, 233, 0, 375, 0,
	528, 376, 529, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 0,
	387, 0, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 0, 425, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 0, 448, 432, 433, 449, 450, 0, 451, 452,
	538, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 0, 465, 466,
	0, 464, 638, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 541, 542, 543, 544, 0, 480, 0, 474,
	475, 545, 476, 546, 0, 477, 478, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 487, 488, 486, 489,
	0, 490, 0, 0, 491, 492, 493, 547, 548, 549,
	633, 495, 494, 550, 0, 0, 0, 0, 496, 497,
	551, 498, 499, 500, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 0, 240, 241, 0, 0, 0, 0,
	642, 501, 0, 0, 0, 0, 242, 243, 245, 244,
	246, 247, 248, 502, 503, 0, 504, 249, 505, 0,
	250, 251, 252, 253, 254, 0, 0, 0, 255, 506,
	507, 508, 0, 256, 257, 509, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 264, 0, 0, 266, 267,
	268, 265, 0, 269, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 0, 0, 0, 0, 0, 0,
	276, 277, 639, 279, 0, 280, 510, 511, 0, 284,
	281, 282, 0, 285, 283, 0, 286, 287, 0, 0,
	288, 289, 290, 0, 291, 292, 0, 293, 294, 0,
	295, 296, 512, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 513, 514, 0, 231, 0, 0, 0,
	0, 0, 308, 309, 310, 515, 0, 0, 0, 311,
	0, 312, 0, 0, 0, 313, 314, 516, 517, 315,
	316, 0, 317, 518, 0, 519, 318, 0, 319, 320,
	321, 322, 323, 520, 521, 522, 377, 0, 324, 325,
	0, 326, 327, 328, 329, 0, 0, 0, 232, 330,
	331, 333, 0, 0, 332, 523, 524, 0, 525, 0,
	334, 0, 526, 0, 335, 336, 337, 0, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 0, 345, 344,
	0, 346, 527, 0, 347, 348, 0, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 0, 368, 369, 370, 373, 374, 372, 0, 371,
	0, 233, 0, 375, 0, 528, 376, 529, 378, 379,
	0, 0, 380, 0, 0, 0, 382, 383, 384, 0,
	0, 385, 386, 530, 0, 387, 0, 531, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 532, 533, 534, 399, 535, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 536, 411,
	410, 412, 0, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 0, 422,
	423, 424, 0, 425, 426, 427, 428, 537, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 0,
	443, 444, 442, 445, 446, 447, 0, 448, 432, 433,
	449, 450, 0, 451, 452, 538, 0, 453, 0, 454,
	455, 456, 457, 434, 458, 463, 539, 459, 460, 461,
	462, 540, 0, 465, 466, 0, 464, 638, 467, 468,
	469, 470, 471, 302, 472, 0, 473, 541, 542, 543,
	544, 0, 480, 0, 474, 475, 545, 476, 546, 0,
	477, 478, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 487, 488, 486, 489, 0, 490, 0, 0, 491,
	492, 493, 547, 548, 549, 633, 495, 494, 550, 0,
	0, 0, 0, 496, 497, 551, 498, 499, 500, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 642, 501, 0, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 0, 250, 251, 252, 253, 254,
	0, 0, 0, 255, 506, 507, 508, 0, 256, 257,
	509, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 639, 279, 0,
	280, 510, 511, 0, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	0, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 0, 312, 0, 0, 0,
	313, 314, 516, 517, 315, 316, 0, 317, 518, 0,
	519, 318, 0, 319, 320, 321, 322, 323, 520, 521,
	522, 377, 0, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 232, 330, 331, 333, 0, 0, 332,
	523, 524, 0, 525, 0, 334, 0, 526, 0, 335,
	336, 337, 0, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 527, 0, 347,
	348, 0, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 0, 368, 369, 370,
	373, 374, 372, 0, 371, 0, 233, 0, 375, 0,
	528, 376, 529, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 0,
	387, 0, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 0, 1980, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 0, 448, 432, 433, 449, 450, 0, 451, 452,
	538, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 0, 465, 466,
	0, 464, 638, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 541, 542, 543, 544, 0, 480, 0, 474,
	475, 545, 476, 546, 0, 477, 478, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 487, 488, 486, 489,
	0, 490, 0, 0, 491, 492, 493, 547, 548, 549,
	1725, 495, 494, 550, 0, 0, 0, 0, 496, 497,
	551, 498, 499, 500, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 0, 240, 241, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 242, 243, 245, 244,
	246, 247, 248, 0, 1731, 0, 1721, 249, 1737, 0,
	250, 251, 252, 253, 254, 0, 0, 0, 255, 1746,
	1747, 0, 0, 256, 257, 0, 0, 1201, 0, 258,
	259, 260, 261, 262, 263, 264, 0, 0, 266, 267,
	268, 265, 0, 269, 0, 270, 271, 272, 0, 273,
	994, 274, 275, 0, 0, 0, 0, 0, 0, 0,
	276, 277, 278, 279, 978, 280, 1735, 1734, 0, 284,
	281, 282, 0, 285, 283, 0, 286, 287, 0, 0,
	288, 963, 290, 0, 291, 292, 0, 293, 294, 0,
	295, 296, 0, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 310, 1733, 0, 0, 0, 311,
	0, 312, 0, 0, 995, 313, 314, 1742, 1743, 315,
	316, 0, 317, 0, 0, 0, 318, 0, 319, 320,
	321, 322, 323, 0, 0, 0, 377, 997, 324, 325,
	0, 326, 327, 328, 329, 0, 0, 0, 0, 330,
	331, 333, 0, 996, 332, 1728, 1729, 0, 1724, 0,
	334, 998, 0, 999, 335, 336, 337, 1000, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 0, 345, 344,
	0, 346, 0, 1001, 347, 348, 1002, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 1003, 368, 369, 370, 373, 374, 372, 1004, 371,
	0, 0, 1005, 375, 0, 0, 376, 1736, 378, 379,
	0, 0, 380, 0, 0, 0, 382, 383, 384, 0,
	0, 385, 386, 0, 1006, 387, 1007, 0, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 1718, 1719, 0, 399, 0, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 1732, 411,
	410, 412, 0, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 0, 422,
	423, 424, 1008, 425, 426, 427, 428, 0, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 0,
	443, 444, 442, 445, 446, 447, 0, 448, 432, 433,
	449, 450, 1009, 451, 452, 1730, 0, 453, 0, 454,
	455, 456, 457, 434, 458, 463, 1745, 459, 460, 461,
	462, 0, 0, 465, 466, 0, 464, 0, 467, 468,
	469, 470, 471, 302, 472, 0, 473, 1738, 1739, 1740,
	1741, 0, 480, 0, 474, 475, 0, 476, 0, 0,
	477, 478, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 487, 488, 486, 489, 0, 490, 0, 0, 491,
	492, 493, 0, 1722, 1744, 0, 495, 494, 0, 0,
	0, 0, 0, 496, 497, 0, 498, 499, 500, 1232,
	1231, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 1712, 0, 0, 0,
	501, 0, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 0, 250,
	251, 252, 253, 254, 0, 0, 0, 255, 506, 507,
	508, 0, 256, 257, 509, 0, 1201, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 994,
	274, 275, 0, 0, 0, 0, 0, 0, 0, 276,
	277, 278, 279, 0, 280, 510, 511, 0, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	289, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 513, 514, 0, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 0,
	312, 0, 0, 995, 313, 314, 516, 517, 315, 316,
	0, 317, 518, 0, 519, 318, 0, 319, 320, 321,
	322, 323, 520, 521, 522, 377, 997, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 0, 330, 331,
	333, 0, 996, 332, 523, 524, 0, 525, 0, 334,
	998, 526, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 527, 1001, 347, 348, 1002, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 0,
	0, 1005, 375, 3227, 528, 376, 529, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 1006, 387, 1007, 531, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 534, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 1008, 425, 426, 427, 428, 537, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 0, 448, 432, 433, 449,
	450, 1009, 451, 452, 538, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	540, 0, 465, 466, 0, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 541, 542, 543, 544,
	0, 480, 0, 474, 475, 545, 476, 546, 0, 477,
	478, 479, 0, 481, 482, 0, 0, 483, 484, 485,
	487, 488, 486, 489, 0, 490, 0, 0, 491, 492,
	493, 547, 548, 549, 0, 495, 494, 550, 0, 0,
	0, 0, 496, 497, 551, 498, 499, 500, 1232, 1231,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 503, 0, 504, 249, 505, 0, 250, 251,
	252, 253, 254, 0, 0, 0, 255, 506, 507, 508,
	0, 256, 257, 509, 0, 1201, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 994, 274,
	275, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	278, 279, 0, 280, 510, 511, 0, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 289,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	512, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 513, 514, 0, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 515, 0, 0, 0, 311, 0, 312,
	0, 0, 995, 313, 314, 516, 517, 315, 316, 0,
	317, 518, 0, 519, 318, 0, 319, 320, 321, 322,
	323, 520, 521, 522, 377, 997, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 0, 330, 331, 333,
	0, 996, 332, 523, 524, 0, 525, 0, 334, 998,
	526, 999, 335, 336, 337, 1000, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	527, 1001, 347, 348, 1002, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 1003,
	368, 369, 370, 373, 374, 372, 1004, 371, 0, 0,
	1005, 375, 2911, 528, 376, 529, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 1006, 387, 1007, 531, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 534, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 536, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	1008, 425, 426, 427, 428, 537, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 0, 448, 432, 433, 449, 450,
	1009, 451, 452, 538, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 539, 459, 460, 461, 462, 540,
	0, 465, 466, 0, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 541, 542, 543, 544, 0,
	480, 0, 474, 475, 545, 476, 546, 0, 477, 478,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 487,
	488, 486, 489, 0, 490, 0, 0, 491, 492, 493,
	547, 548, 549, 0, 495, 494, 550, 1232, 1231, 0,
	0, 496, 497, 551, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 234, 235, 236, 237, 238, 239,
	0, 240, 241, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 242, 243, 245, 244, 246, 247, 248,
	502, 503, 0, 504, 249, 505, 0, 250, 251, 252,
	253, 254, 0, 0, 0, 255, 506, 507, 508, 0,
	256, 257, 509, 0, 1201, 0, 258, 259, 260, 261,
	262, 263, 264, 0, 0, 266, 267, 268, 265, 0,
	269, 0, 270, 271, 272, 0, 273, 994, 274, 275,
	0, 0, 0, 0, 0, 0, 2902, 276, 277, 278,
	279, 0, 280, 510, 511, 0, 284, 281, 282, 0,
	285, 283, 0, 286, 287, 0, 0, 288, 289, 290,
	0, 291, 292, 0, 293, 294, 0, 295, 296, 512,
	297, 298, 299, 301, 303, 300, 304, 305, 306, 307,
	513, 514, 0, 231, 0, 0, 0, 0, 0, 308,
	309, 310, 515, 0, 0, 0, 311, 0, 312, 0,
	0, 995, 313, 314, 516, 517, 315, 316, 0, 317,
	518, 0, 519, 318, 0, 319, 320, 321, 322, 323,
	520, 521, 522, 377, 997, 324, 325, 0, 326, 327,
	328, 329, 0, 0, 0, 0, 330, 331, 333, 0,
	996, 332, 523, 524, 0, 525, 0, 334, 998, 526,
	999, 335, 336, 337, 1000, 338, 0, 0, 0, 339,
	340, 341, 342, 343, 0, 345, 344, 0, 346, 527,
	1001, 347, 348, 1002, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 355, 0, 356, 357, 359, 361, 358,
	360, 365, 362, 363, 364, 367, 0, 366, 1003, 368,
	369, 370, 373, 374, 372, 1004, 371, 0, 0, 1005,
	375, 0, 528, 376, 529, 378, 379, 0, 0, 380,
	0, 0, 0, 382, 383, 384, 0, 0, 385, 386,
	530, 1006, 387, 1007, 531, 388, 389, 381, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 532, 533,
	534, 399, 535, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 536, 411, 410, 412, 0,
	0, 0, 0, 0, 0, 413, 0, 415, 416, 417,
	414, 418, 419, 420, 421, 0, 422, 423, 424, 1008,
	425, 426, 427, 428, 537, 429, 0, 430, 435, 436,
	431, 437, 438, 439, 440, 441, 0, 443, 444, 442,
	445, 446, 447, 2903, 448, 432, 433, 449, 450, 1009,
	451, 452, 538, 0, 453, 0, 454, 455, 456, 457,
	434, 458, 463, 539, 459, 460, 461, 462, 540, 0,
	465, 466, 0, 464, 0, 467, 468, 469, 470, 471,
	302, 472, 0, 473, 541, 542, 543, 544, 0, 480,
	0, 474, 475, 545, 476, 546, 0, 477, 478, 479,
	0, 481, 482, 0, 0, 483, 484, 485, 487, 488,
	486, 489, 0, 490, 0, 0, 491, 492, 493, 547,
	548, 549, 228, 495, 494, 550, 0, 0, 0, 0,
	496, 497, 551, 498, 499, 500, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 503, 0, 504, 249,
	505, 0, 250, 251, 252, 253, 254, 0, 0, 0,
	255, 506, 507, 508, 0, 256, 257, 509, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 0, 0, 0, 0,
	0, 0, 276, 277, 278, 279, 0, 280, 510, 511,
	0, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 289, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 512, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 513, 514, 0, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 515, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 516,
	517, 315, 316, 0, 317, 518, 0, 519, 318, 0,
	319, 320, 321, 322, 323, 520, 521, 522, 377, 0,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 0, 332, 523, 524, 0,
	525, 0, 334, 0, 526, 0, 335, 336, 337, 0,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 527, 0, 347, 348, 0, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 0, 368, 369, 370, 373, 374, 372,
	0, 371, 0, 233, 0, 375, 0, 528, 376, 529,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 0, 387, 0, 531,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 534, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	536, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 0, 425, 426, 427, 428, 537,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 0, 448,
	432, 433, 449, 450, 0, 451, 452, 538, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 539, 459,
	460, 461, 462, 540, 0, 465, 466, 0, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 541,
	542, 543, 544, 0, 480, 0, 474, 475, 545, 476,
	546, 0, 477, 478, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 487, 488, 486, 489, 0, 490, 0,
	0, 491, 492, 493, 547, 548, 549, 0, 495, 494,
	550, 0, 0, 0, 0, 496, 497, 551, 498, 499,
	500, 1405, 0, 1232, 1231, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 642, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	1201, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 994, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 231,
	0, 0, 0, 0, 0, 1404, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 995, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	997, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 0, 330, 331, 333, 0, 996, 332, 523, 524,
	0, 525, 0, 334, 998, 526, 999, 335, 336, 337,
	1000, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 1001, 347, 348, 1002,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 1003, 368, 369, 370, 373, 374,
	372, 1004, 371, 0, 0, 1005, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 1006, 387, 1007,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 1403,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 1008, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 1402, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 1009, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 0, 495,
	494, 550, 0, 0, 0, 0, 496, 497, 551, 498,
	499, 500, 1364, 0, 1232, 1231, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 508, 0, 256, 257, 509,
	0, 1201, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 994, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 0, 0, 995, 313,
	314, 516, 517, 315, 316, 0, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 1363, 521, 522,
	377, 997, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 0, 330, 331, 333, 0, 996, 332, 523,
	524, 0, 525, 0, 334, 998, 526, 999, 335, 336,
	337, 1000, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 1001, 347, 348,
	1002, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 1003, 368, 369, 370, 373,
	374, 372, 1004, 371, 0, 0, 1005, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 1006, 387,
	1007, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 1008, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	0, 448, 432, 433, 449, 450, 1009, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 541, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 0,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 1298, 0, 1232, 1231, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 0, 250, 251, 252, 253, 254,
	0, 0, 0, 255, 506, 507, 508, 0, 256, 257,
	509, 0, 1201, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 994, 274, 275, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 278, 279, 0,
	280, 510, 511, 0, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	0, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 0, 312, 0, 0, 995,
	313, 314, 516, 517, 315, 316, 0, 317, 518, 0,
	519, 318, 0, 319, 320, 321, 322, 323, 1297, 521,
	522, 377, 997, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 0, 330, 331, 333, 0, 996, 332,
	523, 524, 0, 525, 0, 334, 998, 526, 999, 335,
	336, 337, 1000, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 527, 1001, 347,
	348, 1002, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 1003, 368, 369, 370,
	373, 374, 372, 1004, 371, 0, 0, 1005, 375, 0,
	528, 376, 529, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 1006,
	387, 1007, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 1008, 425, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 0, 448, 432, 433, 449, 450, 1009, 451, 452,
	538, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 0, 465, 466,
	0, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 541, 542, 543, 544, 0, 480, 0, 474,
	475, 545, 476, 546, 0, 477, 478, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 487, 488, 486, 489,
	0, 490, 0, 0, 491, 492, 493, 547, 548, 549,
	0, 495, 494, 550, 0, 0, 0, 0, 496, 497,
	551, 498, 499, 500, 1261, 0, 1232, 1231, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 1201, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 994, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 231, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	995, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 520,
	521, 522, 377, 997, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 996,
	332, 523, 524, 0, 525, 0, 334, 998, 526, 999,
	335, 336, 337, 1000, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 1001,
	347, 348, 1002, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 1003, 368, 369,
	370, 373, 374, 372, 1004, 371, 0, 0, 1005, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	1006, 387, 1007, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 1008, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 1009, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 0, 495, 494, 550, 0, 0, 0, 0, 496,
	497, 551, 498, 499, 500, 1227, 0, 1232, 1231, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 235, 236, 237, 238, 239,
	0, 240, 241, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 242, 243, 245, 244, 246, 247, 248,
	502, 503, 0, 504, 249, 505, 0, 250, 251, 252,
	253, 254, 0, 0, 0, 255, 506, 507, 508, 0,
	256, 257, 509, 0, 1201, 0, 258, 259, 260, 261,
	262, 263, 264, 0, 0, 266, 267, 268, 265, 0,
	269, 0, 270, 271, 272, 0, 273, 994, 274, 275,
	0, 0, 0, 0, 0, 0, 0, 276, 277, 278,
	279, 0, 280, 510, 511, 0, 284, 281, 282, 0,
	285, 283, 0, 286, 287, 0, 0, 288, 289, 290,
	0, 291, 292, 0, 293, 294, 0, 295, 296, 512,
	297, 298, 299, 301, 303, 300, 304, 305, 306, 307,
	513, 514, 0, 231, 0, 0, 0, 0, 0, 308,
	309, 310, 515, 0, 0, 0, 311, 0, 312, 0,
	0, 995, 313, 314, 516, 517, 315, 316, 0, 317,
	518, 0, 519, 318, 0, 319, 320, 321, 322, 323,
	1226, 521, 522, 377, 997, 324, 325, 0, 326, 327,
	328, 329, 0, 0, 0, 0, 330, 331, 333, 0,
	996, 332, 523, 524, 0, 525, 0, 334, 998, 526,
	999, 335, 336, 337, 1000, 338, 0, 0, 0, 339,
	340, 341, 342, 343, 0, 345, 344, 0, 346, 527,
	1001, 347, 348, 1002, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 355, 0, 356, 357, 359, 361, 358,
	360, 365, 362, 363, 364, 367, 0, 366, 1003, 368,
	369, 370, 373, 374, 372, 1004, 371, 0, 0, 1005,
	375, 0, 528, 376, 529, 378, 379, 0, 0, 380,
	0, 0, 0, 382, 383, 384, 0, 0, 385, 386,
	530, 1006, 387, 1007, 531, 388, 389, 381, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 532, 533,
	534, 399, 535, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 536, 411, 410, 412, 0,
	0, 0, 0, 0, 0, 413, 0, 415, 416, 417,
	414, 418, 419, 420, 421, 0, 422, 423, 424, 1008,
	425, 426, 427, 428, 537, 429, 0, 430, 435, 436,
	431, 437, 438, 439, 440, 441, 0, 443, 444, 442,
	445, 446, 447, 0, 448, 432, 433, 449, 450, 1009,
	451, 452, 538, 0, 453, 0, 454, 455, 456, 457,
	434, 458, 463, 539, 459, 460, 461, 462, 540, 0,
	465, 466, 0, 464, 0, 467, 468, 469, 470, 471,
	302, 472, 0, 473, 541, 542, 543, 544, 0, 480,
	0, 474, 475, 545, 476, 546, 0, 477, 478, 479,
	0, 481, 482, 0, 0, 483, 484, 485, 487, 488,
	486, 489, 0, 490, 0, 0, 491, 492, 493, 547,
	548, 549, 0, 495, 494, 550, 0, 0, 0, 0,
	496, 497, 551, 498, 499, 500, 1232, 1231, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 1201, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 994, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 231, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	995, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 520,
	521, 522, 377, 997, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 996,
	332, 523, 524, 0, 525, 0, 334, 998, 526, 999,
	335, 336, 337, 1000, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 1001,
	347, 348, 1002, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 1003, 368, 369,
	370, 373, 374, 372, 1004, 371, 0, 0, 1005, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	1006, 387, 1007, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 1008, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 1009, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 0, 495, 494, 550, 1232, 1231, 0, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 0, 250, 251, 252, 253, 254,
	0, 0, 0, 255, 506, 507, 508, 0, 256, 257,
	509, 0, 1201, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 994, 274, 275, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 278, 279, 0,
	280, 510, 511, 1756, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	0, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 0, 312, 0, 0, 995,
	313, 314, 516, 517, 315, 316, 0, 317, 518, 0,
	519, 318, 0, 319, 320, 321, 322, 323, 520, 521,
	522, 377, 997, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 0, 330, 331, 333, 0, 996, 332,
	523, 524, 0, 525, 0, 334, 998, 526, 999, 335,
	336, 337, 1000, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 527, 1001, 347,
	348, 1002, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 1003, 368, 369, 370,
	373, 374, 372, 1004, 371, 0, 0, 1005, 375, 0,
	528, 376, 529, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 1006,
	387, 1007, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 1008, 425, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 0, 448, 432, 433, 449, 450, 1009, 451, 452,
	538, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 0, 465, 466,
	0, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 541, 542, 543, 544, 0, 480, 0, 474,
	475, 545, 476, 546, 0, 477, 478, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 487, 488, 486, 489,
	0, 490, 0, 0, 491, 492, 493, 547, 548, 549,
	0, 495, 494, 550, 1232, 1231, 0, 0, 496, 497,
	551, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 508, 0, 256, 257, 509,
	0, 1201, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 994, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 0, 0, 995, 313,
	314, 516, 517, 315, 316, 0, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 520, 521, 522,
	377, 997, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 0, 330, 331, 333, 0, 996, 332, 523,
	524, 0, 525, 0, 334, 998, 526, 999, 335, 336,
	337, 1000, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 1001, 347, 348,
	1002, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 1003, 368, 369, 370, 373,
	374, 372, 1004, 371, 0, 0, 1005, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 1006, 387,
	1007, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 1008, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	0, 448, 432, 433, 449, 450, 1009, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 541, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 1232,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 0, 250,
	251, 252, 253, 254, 0, 0, 0, 255, 506, 507,
	508, 0, 256, 257, 509, 0, 1201, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 994,
	274, 275, 0, 0, 0, 0, 0, 0, 0, 276,
	277, 278, 279, 0, 280, 510, 511, 0, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	289, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 513, 514, 0, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 0,
	312, 0, 0, 995, 313, 314, 516, 517, 315, 316,
	0, 317, 518, 0, 519, 318, 0, 319, 320, 321,
	322, 323, 520, 521, 522, 377, 997, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 0, 330, 331,
	333, 0, 996, 332, 523, 524, 0, 525, 0, 334,
	998, 526, 999, 335, 336, 337, 1000, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 527, 1001, 347, 348, 1002, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	1003, 368, 369, 370, 373, 374, 372, 1004, 371, 0,
	0, 1005, 375, 0, 528, 376, 529, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 1006, 387, 1007, 531, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 534, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 1008, 425, 426, 427, 428, 537, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 0, 448, 432, 433, 449,
	450, 1009, 451, 452, 538, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	540, 0, 465, 466, 0, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 541, 542, 543, 544,
	0, 480, 0, 474, 475, 545, 476, 546, 0, 477,
	478, 479, 0, 481, 482, 0, 0, 483, 484, 485,
	487, 488, 486, 489, 0, 490, 0, 0, 491, 492,
	493, 547, 548, 549, 228, 495, 494, 550, 0, 0,
	0, 0, 496, 497, 551, 498, 499, 500, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 508, 2368, 256, 257, 509,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 2365, 269, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 2372, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	2539, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 2371, 0, 0, 313,
	314, 516, 517, 315, 316, 0, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 520, 521, 522,
	377, 0, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 2536, 330, 331, 333, 0, 0, 332, 523,
	524, 0, 525, 0, 2538, 0, 526, 0, 335, 336,
	337, 0, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 0, 347, 348,
	2535, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 0, 368, 369, 370, 373,
	374, 372, 0, 371, 0, 0, 0, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 0, 387,
	0, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 2370, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 0, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	0, 448, 432, 433, 449, 450, 0, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 541, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 2537, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 228,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 0, 250,
	251, 252, 253, 254, 0, 0, 0, 255, 506, 507,
	508, 2368, 256, 257, 509, 0, 0, 2362, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 2365, 269, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 0, 0, 0, 0, 0, 0, 276,
	277, 278, 279, 0, 280, 510, 511, 0, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	289, 290, 0, 291, 292, 0, 293, 294, 0, 2372,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 513, 514, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 0,
	312, 2371, 0, 0, 313, 314, 516, 517, 315, 316,
	0, 317, 518, 0, 519, 318, 0, 319, 320, 321,
	322, 323, 2361, 521, 522, 377, 0, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 0, 330, 331,
	333, 0, 0, 332, 523, 524, 0, 525, 0, 334,
	0, 526, 0, 335, 336, 337, 0, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 527, 0, 347, 348, 0, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	0, 368, 369, 370, 373, 374, 372, 0, 371, 0,
	0, 0, 375, 0, 528, 376, 529, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 0, 387, 0, 531, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 534, 399, 535, 400, 401, 2370, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 0, 425, 426, 427, 428, 537, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 0, 448, 432, 433, 449,
	450, 0, 451, 452, 538, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	540, 0, 465, 466, 0, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 541, 542, 543, 544,
	0, 480, 0, 474, 475, 545, 476, 546, 0, 477,
	478, 479, 0, 481, 482, 0, 2369, 483, 484, 485,
	487, 488, 486, 489, 0, 490, 0, 0, 491, 492,
	493, 547, 548, 549, 0, 495, 494, 550, 1463, 0,
	228, 0, 496, 497, 551, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 0, 240, 241, 0, 0, 0, 0,
	0, 501, 0, 0, 0, 0, 242, 243, 245, 244,
	246, 247, 248, 502, 503, 0, 504, 249, 505, 0,
	250, 251, 252, 253, 254, 0, 0, 0, 255, 506,
	507, 508, 0, 256, 257, 509, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 264, 0, 0, 266, 267,
	268, 265, 0, 269, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 0, 0, 0, 0, 0, 0,
	276, 277, 278, 279, 0, 280, 510, 511, 0, 284,
	281, 282, 0, 285, 283, 0, 286, 287, 0, 0,
	288, 289, 290, 0, 291, 292, 0, 293, 294, 0,
	295, 296, 512, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 513, 514, 0, 231, 0, 0, 0,
	0, 0, 308, 309, 310, 515, 0, 0, 0, 311,
	0, 312, 0, 0, 0, 313, 314, 516, 517, 315,
	316, 0, 317, 518, 0, 519, 318, 0, 319, 320,
	321, 322, 323, 520, 521, 522, 377, 0, 324, 325,
	0, 326, 327, 328, 329, 0, 0, 0, 232, 330,
	331, 333, 0, 0, 332, 523, 524, 0, 525, 0,
	334, 0, 526, 0, 335, 336, 337, 0, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 0, 345, 344,
	0, 346, 527, 0, 347, 348, 0, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 0, 368, 369, 370, 373, 374, 372, 0, 371,
	0, 233, 0, 375, 0, 528, 376, 529, 378, 379,
	0, 0, 380, 0, 0, 0, 382, 383, 384, 0,
	0, 385, 386, 530, 0, 387, 0, 531, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 532, 533, 534, 399, 535, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 536, 411,
	410, 412, 0, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 0, 422,
	423, 424, 0, 425, 426, 427, 428, 537, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 0,
	1466, 444, 442, 445, 446, 447, 0, 448, 432, 433,
	449, 450, 0, 451, 452, 538, 0, 453, 0, 454,
	455, 456, 457, 434, 458, 463, 539, 459, 460, 461,
	462, 540, 0, 465, 466, 0, 464, 1464, 467, 468,
	469, 470, 471, 302, 472, 0, 473, 541, 542, 543,
	544, 0, 480, 0, 474, 475, 545, 476, 546, 0,
	477, 478, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 487, 488, 486, 489, 0, 490, 0, 0, 491,
	492, 493, 547, 548, 549, 0, 1465, 494, 550, 1205,
	0, 228, 0, 496, 497, 551, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 231, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 1207, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 233, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 1043, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 0, 495, 494, 550,
	1202, 0, 228, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 503, 0, 504, 249,
	505, 0, 250, 251, 252, 253, 254, 0, 0, 0,
	255, 506, 507, 508, 0, 256, 257, 509, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 0, 0, 0, 0,
	0, 0, 276, 277, 278, 279, 0, 280, 510, 511,
	0, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 289, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 512, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 513, 514, 0, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 515, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 516,
	517, 315, 316, 0, 317, 518, 0, 519, 318, 0,
	319, 320, 321, 322, 323, 1204, 521, 522, 377, 0,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 0, 332, 523, 524, 0,
	525, 0, 334, 0, 526, 0, 335, 336, 337, 0,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 527, 0, 347, 348, 0, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 0, 368, 369, 370, 373, 374, 372,
	0, 371, 0, 233, 0, 375, 0, 528, 376, 529,
	378, 379, 0, 0, 380, 0, 0, 1043, 382, 383,
	384, 0, 0, 385, 386, 530, 0, 387, 0, 531,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 534, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	536, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 0, 425, 426, 427, 428, 537,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 0, 448,
	432, 433, 449, 450, 0, 451, 452, 538, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 539, 459,
	460, 461, 462, 540, 0, 465, 466, 0, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 541,
	542, 543, 544, 0, 480, 0, 474, 475, 545, 476,
	546, 0, 477, 478, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 487, 488, 486, 489, 0, 490, 0,
	0, 491, 492, 493, 547, 548, 549, 0, 495, 494,
	550, 1108, 0, 228, 0, 496, 497, 551, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 1110, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 233, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 1043, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 0, 495,
	494, 550, 583, 0, 228, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 582, 238, 239, 572, 240, 241,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 508, 0, 256, 257, 509,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 575, 273, 0, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 0, 0, 0, 313,
	314, 516, 517, 315, 316, 576, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 520, 521, 522,
	377, 0, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 0, 330, 331, 333, 0, 0, 332, 523,
	524, 0, 525, 0, 334, 0, 526, 0, 335, 336,
	337, 0, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 0, 347, 348,
	0, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 0, 368, 369, 370, 373,
	374, 372, 0, 371, 0, 0, 0, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 0, 387,
	0, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 0, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 577, 443, 444, 442, 445, 446, 447,
	0, 448, 432, 433, 449, 450, 0, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 541, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 0,
	495, 494, 550, 571, 0, 228, 0, 496, 497, 551,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 572, 240,
	241, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 0, 250, 251, 252, 253, 254,
	0, 0, 0, 255, 506, 507, 508, 0, 256, 257,
	509, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 575, 273, 0, 274, 275, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 278, 279, 0,
	280, 510, 511, 0, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 0, 312, 0, 0, 0,
	313, 314, 516, 517, 315, 316, 576, 317, 518, 0,
	519, 318, 0, 319, 320, 321, 322, 323, 520, 521,
	522, 377, 0, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 0, 330, 331, 333, 0, 0, 332,
	523, 524, 0, 525, 0, 334, 0, 526, 0, 335,
	336, 337, 0, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 527, 0, 347,
	348, 0, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 0, 368, 369, 370,
	373, 374, 372, 0, 371, 0, 0, 0, 375, 0,
	528, 376, 529, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 0,
	387, 0, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 0, 425, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 577, 443, 444, 442, 445, 446,
	447, 0, 448, 432, 433, 449, 450, 0, 451, 452,
	538, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 0, 465, 466,
	0, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 541, 542, 543, 544, 0, 480, 0, 474,
	475, 545, 476, 546, 0, 477, 478, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 487, 488, 486, 489,
	0, 490, 0, 0, 491, 492, 493, 547, 548, 549,
	228, 495, 494, 550, 0, 0, 0, 0, 496, 497,
	551, 498, 499, 500, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 0, 240, 241, 0, 0, 0, 0,
	0, 501, 0, 0, 0, 0, 242, 243, 245, 244,
	246, 247, 248, 502, 503, 0, 504, 249, 505, 0,
	250, 251, 252, 253, 254, 0, 0, 0, 255, 506,
	507, 508, 0, 256, 257, 509, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 264, 0, 0, 266, 267,
	268, 265, 0, 269, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 0, 0, 0, 0, 0, 0,
	276, 277, 278, 279, 0, 280, 510, 511, 0, 284,
	281, 282, 0, 285, 283, 0, 286, 287, 0, 0,
	288, 289, 290, 0, 291, 292, 0, 293, 294, 0,
	295, 296, 512, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 513, 514, 0, 231, 0, 0, 0,
	0, 0, 308, 309, 310, 515, 0, 0, 0, 311,
	0, 312, 0, 0, 0, 313, 314, 516, 517, 315,
	316, 0, 317, 518, 0, 519, 318, 0, 319, 320,
	321, 322, 323, 520, 521, 522, 377, 0, 324, 325,
	0, 326, 327, 328, 329, 0, 0, 0, 232, 330,
	331, 333, 0, 0, 332, 523, 524, 0, 525, 0,
	334, 0, 526, 0, 335, 336, 337, 0, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 0, 345, 344,
	0, 346, 527, 0, 347, 348, 0, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 0, 368, 369, 370, 373, 374, 372, 2877, 371,
	0, 233, 0, 375, 0, 528, 376, 529, 378, 379,
	0, 0, 380, 0, 0, 0, 382, 383, 384, 0,
	0, 385, 386, 530, 0, 387, 0, 531, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 532, 533, 534, 399, 535, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 536, 411,
	410, 412, 0, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 0, 422,
	423, 424, 0, 425, 426, 427, 428, 537, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 0,
	443, 444, 442, 445, 446, 447, 0, 448, 432, 433,
	449, 450, 0, 451, 452, 538, 0, 453, 0, 454,
	455, 456, 457, 434, 458, 463, 539, 459, 460, 461,
	462, 540, 0, 465, 466, 0, 464, 0, 467, 468,
	469, 470, 471, 302, 472, 0, 473, 541, 542, 543,
	544, 0, 480, 0, 474, 475, 545, 476, 546, 0,
	477, 478, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 487, 488, 486, 489, 0, 490, 0, 0, 491,
	492, 493, 547, 548, 549, 228, 495, 494, 550, 0,
	0, 0, 0, 496, 497, 551, 498, 499, 500, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 0, 250, 251, 252, 253, 254,
	0, 0, 0, 255, 506, 507, 508, 0, 256, 257,
	509, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 278, 279, 0,
	280, 510, 511, 0, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	0, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 0, 312, 0, 0, 0,
	313, 314, 516, 517, 315, 316, 0, 317, 518, 0,
	519, 318, 0, 319, 320, 321, 322, 323, 520, 521,
	522, 377, 0, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 232, 330, 331, 333, 0, 0, 332,
	523, 524, 0, 525, 0, 334, 0, 526, 0, 335,
	336, 337, 0, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 527, 0, 347,
	348, 0, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 0, 368, 369, 370,
	373, 374, 372, 0, 371, 0, 233, 0, 375, 0,
	528, 376, 529, 378, 379, 0, 0, 380, 0, 0,
	1043, 382, 383, 384, 0, 0, 385, 386, 530, 0,
	387, 0, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 0, 425, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 0, 448, 432, 433, 449, 450, 0, 451, 452,
	538, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 0, 465, 466,
	0, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 541, 542, 543, 544, 0, 480, 0, 474,
	475, 545, 476, 546, 0, 477, 478, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 487, 488, 486, 489,
	0, 490, 0, 0, 491, 492, 493, 547, 548, 549,
	0, 495, 494, 550, 2473, 0, 228, 0, 496, 497,
	551, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 231, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 2472,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 232, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 233, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 0, 495, 494, 550, 1956, 0, 228, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 235, 236, 237, 238, 239,
	0, 240, 241, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 242, 243, 245, 244, 246, 247, 248,
	502, 503, 0, 504, 249, 505, 0, 250, 251, 252,
	253, 254, 0, 0, 0, 255, 506, 507, 508, 0,
	256, 257, 509, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 264, 0, 0, 266, 267, 268, 265, 0,
	269, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 0, 0, 0, 0, 0, 0, 276, 277, 278,
	279, 0, 280, 510, 511, 0, 284, 281, 282, 0,
	285, 283, 0, 286, 287, 0, 0, 288, 289, 290,
	0, 291, 292, 0, 293, 294, 0, 295, 296, 512,
	297, 298, 299, 301, 303, 300, 304, 305, 306, 307,
	513, 514, 0, 231, 0, 0, 0, 0, 0, 308,
	309, 310, 515, 0, 0, 0, 311, 0, 312, 0,
	0, 0, 313, 314, 516, 517, 315, 316, 0, 317,
	518, 0, 519, 318, 0, 319, 320, 321, 322, 323,
	520, 521, 522, 377, 0, 324, 325, 0, 326, 327,
	328, 329, 0, 0, 0, 232, 330, 331, 333, 0,
	0, 332, 523, 524, 0, 525, 0, 334, 0, 526,
	0, 335, 336, 337, 0, 338, 0, 0, 0, 339,
	340, 341, 342, 343, 0, 345, 344, 0, 346, 527,
	0, 347, 348, 0, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 355, 0, 356, 357, 359, 361, 358,
	360, 365, 362, 363, 364, 367, 0, 366, 0, 368,
	369, 370, 373, 374, 372, 0, 371, 0, 233, 0,
	375, 0, 528, 376, 529, 378, 379, 0, 0, 380,
	0, 0, 0, 382, 383, 384, 0, 0, 385, 386,
	530, 0, 387, 0, 531, 388, 389, 381, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 532, 533,
	534, 399, 535, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 536, 411, 410, 412, 0,
	0, 0, 0, 0, 0, 413, 0, 415, 416, 417,
	414, 418, 419, 420, 421, 0, 422, 423, 424, 0,
	425, 426, 427, 428, 537, 429, 0, 430, 435, 436,
	431, 437, 438, 439, 440, 441, 0, 443, 444, 442,
	445, 446, 447, 0, 448, 432, 433, 449, 450, 0,
	451, 452, 538, 0, 453, 0, 454, 455, 456, 457,
	434, 458, 463, 539, 459, 460, 461, 462, 540, 0,
	465, 466, 0, 464, 0, 467, 468, 469, 470, 471,
	302, 472, 0, 473, 541, 542, 543, 544, 0, 480,
	0, 474, 475, 545, 476, 546, 0, 477, 478, 479,
	0, 481, 482, 0, 0, 483, 484, 485, 487, 488,
	486, 489, 0, 490, 0, 0, 491, 492, 493, 547,
	548, 549, 228, 495, 494, 550, 0, 0, 0, 0,
	496, 497, 551, 498, 499, 500, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 503, 0, 504, 249,
	505, 0, 250, 251, 252, 253, 254, 0, 0, 0,
	255, 506, 507, 508, 0, 256, 257, 509, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 0, 0, 0, 0,
	0, 0, 276, 277, 278, 279, 0, 280, 510, 511,
	0, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 289, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 512, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 513, 514, 0, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 515, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 516,
	517, 315, 316, 0, 317, 518, 0, 519, 318, 0,
	319, 320, 321, 322, 323, 520, 521, 522, 377, 0,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 0, 332, 523, 524, 0,
	525, 0, 334, 0, 526, 0, 335, 336, 337, 0,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 527, 0, 347, 348, 0, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 0, 368, 369, 370, 373, 374, 372,
	0, 371, 0, 233, 0, 375, 0, 528, 376, 529,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 0, 387, 0, 531,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 534, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	536, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 0, 425, 426, 427, 428, 537,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 0, 448,
	432, 433, 449, 450, 0, 451, 452, 538, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 539, 459,
	460, 461, 462, 540, 0, 465, 466, 0, 464, 1882,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 541,
	542, 543, 544, 0, 480, 0, 474, 475, 545, 476,
	546, 0, 477, 478, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 487, 488, 486, 489, 0, 490, 0,
	0, 491, 492, 493, 547, 548, 549, 0, 495, 494,
	550, 1887, 0, 228, 0, 496, 497, 551, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 1886, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 233, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 0, 495,
	494, 550, 1875, 0, 228, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 508, 0, 256, 257, 509,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	231, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 0, 0, 0, 313,
	314, 516, 517, 315, 316, 0, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 1877, 521, 522,
	377, 0, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 232, 330, 331, 333, 0, 0, 332, 523,
	524, 0, 525, 0, 334, 0, 526, 0, 335, 336,
	337, 0, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 0, 347, 348,
	0, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 0, 368, 369, 370, 373,
	374, 372, 0, 371, 0, 233, 0, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 0, 387,
	0, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 0, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	0, 448, 432, 433, 449, 450, 0, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 541, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 0,
	495, 494, 550, 1360, 0, 228, 0, 496, 497, 551,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 0, 250, 251, 252, 253, 254,
	0, 0, 0, 255, 506, 507, 508, 0, 256, 257,
	509, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 278, 279, 0,
	280, 510, 511, 0, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	0, 231, 0, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 0, 312, 0, 0, 0,
	313, 314, 516, 517, 315, 316, 0, 317, 518, 0,
	519, 318, 0, 319, 320, 321, 322, 323, 1359, 521,
	522, 377, 0, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 232, 330, 331, 333, 0, 0, 332,
	523, 524, 0, 525, 0, 334, 0, 526, 0, 335,
	336, 337, 0, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 527, 0, 347,
	348, 0, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 0, 368, 369, 370,
	373, 374, 372, 0, 371, 0, 233, 0, 375, 0,
	528, 376, 529, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 0,
	387, 0, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 0, 425, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 0, 448, 432, 433, 449, 450, 0, 451, 452,
	538, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 0, 465, 466,
	0, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 541, 542, 543, 544, 0, 480, 0, 474,
	475, 545, 476, 546, 0, 477, 478, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 487, 488, 486, 489,
	0, 490, 0, 0, 491, 492, 493, 547, 548, 549,
	0, 495, 494, 550, 1351, 0, 228, 0, 496, 497,
	551, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 231, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 1350,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 232, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 233, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 0, 495, 494, 550, 1348, 0, 228, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 235, 236, 237, 238, 239,
	0, 240, 241, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 242, 243, 245, 244, 246, 247, 248,
	502, 503, 0, 504, 249, 505, 0, 250, 251, 252,
	253, 254, 0, 0, 0, 255, 506, 507, 508, 0,
	256, 257, 509, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 264, 0, 0, 266, 267, 268, 265, 0,
	269, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 0, 0, 0, 0, 0, 0, 276, 277, 278,
	279, 0, 280, 510, 511, 0, 284, 281, 282, 0,
	285, 283, 0, 286, 287, 0, 0, 288, 289, 290,
	0, 291, 292, 0, 293, 294, 0, 295, 296, 512,
	297, 298, 299, 301, 303, 300, 304, 305, 306, 307,
	513, 514, 0, 231, 0, 0, 0, 0, 0, 308,
	309, 310, 515, 0, 0, 0, 311, 0, 312, 0,
	0, 0, 313, 314, 516, 517, 315, 316, 0, 317,
	518, 0, 519, 318, 0, 319, 320, 321, 322, 323,
	1347, 521, 522, 377, 0, 324, 325, 0, 326, 327,
	328, 329, 0, 0, 0, 232, 330, 331, 333, 0,
	0, 332, 523, 524, 0, 525, 0, 334, 0, 526,
	0, 335, 336, 337, 0, 338, 0, 0, 0, 339,
	340, 341, 342, 343, 0, 345, 344, 0, 346, 527,
	0, 347, 348, 0, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 355, 0, 356, 357, 359, 361, 358,
	360, 365, 362, 363, 364, 367, 0, 366, 0, 368,
	369, 370, 373, 374, 372, 0, 371, 0, 233, 0,
	375, 0, 528, 376, 529, 378, 379, 0, 0, 380,
	0, 0, 0, 382, 383, 384, 0, 0, 385, 386,
	530, 0, 387, 0, 531, 388, 389, 381, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 532, 533,
	534, 399, 535, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 536, 411, 410, 412, 0,
	0, 0, 0, 0, 0, 413, 0, 415, 416, 417,
	414, 418, 419, 420, 421, 0, 422, 423, 424, 0,
	425, 426, 427, 428, 537, 429, 0, 430, 435, 436,
	431, 437, 438, 439, 440, 441, 0, 443, 444, 442,
	445, 446, 447, 0, 448, 432, 433, 449, 450, 0,
	451, 452, 538, 0, 453, 0, 454, 455, 456, 457,
	434, 458, 463, 539, 459, 460, 461, 462, 540, 0,
	465, 466, 0, 464, 0, 467, 468, 469, 470, 471,
	302, 472, 0, 473, 541, 542, 543, 544, 0, 480,
	0, 474, 475, 545, 476, 546, 0, 477, 478, 479,
	0, 481, 482, 0, 0, 483, 484, 485, 487, 488,
	486, 489, 0, 490, 0, 0, 491, 492, 493, 547,
	548, 549, 0, 495, 494, 550, 1344, 0, 228, 0,
	496, 497, 551, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 503, 0, 504, 249, 505, 0, 250, 251,
	252, 253, 254, 0, 0, 0, 255, 506, 507, 508,
	0, 256, 257, 509, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	278, 279, 0, 280, 510, 511, 0, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 289,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	512, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 513, 514, 0, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 515, 0, 0, 0, 311, 0, 312,
	0, 0, 0, 313, 314, 516, 517, 315, 316, 0,
	317, 518, 0, 519, 318, 0, 319, 320, 321, 322,
	323, 1343, 521, 522, 377, 0, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 232, 330, 331, 333,
	0, 0, 332, 523, 524, 0, 525, 0, 334, 0,
	526, 0, 335, 336, 337, 0, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	527, 0, 347, 348, 0, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 0,
	368, 369, 370, 373, 374, 372, 0, 371, 0, 233,
	0, 375, 0, 528, 376, 529, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 0, 387, 0, 531, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 534, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 536, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	0, 425, 426, 427, 428, 537, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 0, 448, 432, 433, 449, 450,
	0, 451, 452, 538, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 539, 459, 460, 461, 462, 540,
	0, 465, 466, 0, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 541, 542, 543, 544, 0,
	480, 0, 474, 475, 545, 476, 546, 0, 477, 478,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 487,
	488, 486, 489, 0, 490, 0, 0, 491, 492, 493,
	547, 548, 549, 0, 495, 494, 550, 1300, 0, 228,
	0, 496, 497, 551, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 0, 250,
	251, 252, 253, 254, 0, 0, 0, 255, 506, 507,
	508, 0, 256, 257, 509, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 0, 0, 0, 0, 0, 0, 276,
	277, 278, 279, 0, 280, 510, 511, 0, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	289, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 513, 514, 0, 231, 0, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 0,
	312, 0, 0, 0, 313, 314, 516, 517, 315, 316,
	0, 317, 518, 0, 519, 318, 0, 319, 320, 321,
	322, 323, 520, 521, 522, 377, 0, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 232, 330, 331,
	333, 0, 0, 332, 523, 524, 0, 525, 0, 334,
	0, 526, 0, 335, 336, 337, 0, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 527, 0, 347, 348, 0, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	0, 368, 369, 370, 373, 374, 372, 0, 371, 0,
	233, 0, 375, 0, 528, 376, 529, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 0, 387, 0, 531, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 534, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 0, 425, 426, 427, 428, 537, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 0, 448, 432, 433, 449,
	450, 0, 451, 452, 538, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	540, 0, 465, 466, 0, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 541, 542, 543, 544,
	0, 480, 0, 474, 475, 545, 476, 546, 0, 477,
	478, 479, 0, 481, 482, 0, 0, 483, 484, 485,
	487, 488, 486, 489, 0, 490, 0, 0, 491, 492,
	493, 547, 548, 549, 0, 495, 494, 550, 1223, 0,
	228, 0, 496, 497, 551, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 0, 240, 241, 0, 0, 0, 0,
	0, 501, 0, 0, 0, 0, 242, 243, 245, 244,
	246, 247, 248, 502, 503, 0, 504, 249, 505, 0,
	250, 251, 252, 253, 254, 0, 0, 0, 255, 506,
	507, 508, 0, 256, 257, 509, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 264, 0, 0, 266, 267,
	268, 265, 0, 269, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 0, 0, 0, 0, 0, 0,
	276, 277, 278, 279, 0, 280, 510, 511, 0, 284,
	281, 282, 0, 285, 283, 0, 286, 287, 0, 0,
	288, 289, 290, 0, 291, 292, 0, 293, 294, 0,
	295, 296, 512, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 513, 514, 0, 231, 0, 0, 0,
	0, 0, 308, 309, 310, 515, 0, 0, 0, 311,
	0, 312, 0, 0, 0, 313, 314, 516, 517, 315,
	316, 0, 317, 518, 0, 519, 318, 0, 319, 320,
	321, 322, 323, 520, 521, 522, 377, 0, 324, 325,
	0, 326, 327, 328, 329, 0, 0, 0, 232, 330,
	331, 333, 0, 0, 332, 523, 524, 0, 525, 0,
	334, 0, 526, 0, 335, 336, 337, 0, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 0, 345, 344,
	0, 346, 527, 0, 347, 348, 0, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 0, 368, 369, 370, 373, 374, 372, 0, 371,
	0, 233, 0, 375, 0, 528, 376, 529, 378, 379,
	0, 0, 380, 0, 0, 0, 382, 383, 384, 0,
	0, 385, 386, 530, 0, 387, 0, 531, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 532, 533, 534, 399, 535, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 536, 411,
	410, 412, 0, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 0, 422,
	423, 424, 0, 425, 426, 427, 428, 537, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 0,
	443, 444, 442, 445, 446, 447, 0, 448, 432, 433,
	449, 450, 0, 451, 452, 538, 0, 453, 0, 454,
	455, 456, 457, 434, 458, 463, 539, 459, 460, 461,
	462, 540, 0, 465, 466, 0, 464, 0, 467, 468,
	469, 470, 471, 302, 472, 0, 473, 541, 542, 543,
	544, 0, 480, 0, 474, 475, 545, 476, 546, 0,
	477, 478, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 487, 488, 486, 489, 0, 490, 0, 0, 491,
	492, 493, 547, 548, 549, 0, 495, 494, 550, 1216,
	0, 228, 0, 496, 497, 551, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 231, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 1218, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 232,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 233, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 0, 495, 494, 550,
	553, 0, 228, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 503, 0, 504, 249,
	505, 0, 250, 251, 252, 253, 254, 0, 0, 0,
	255, 506, 507, 508, 0, 256, 257, 509, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 0, 0, 0, 0,
	0, 0, 276, 277, 278, 279, 0, 280, 510, 511,
	0, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 289, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 512, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 513, 514, 0, 231, 0,
	0, 0, 0, 0, 308, 309, 310, 515, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 516,
	517, 315, 316, 0, 317, 518, 0, 519, 318, 0,
	319, 320, 321, 322, 323, 520, 521, 522, 377, 0,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	232, 330, 331, 333, 0, 0, 332, 523, 524, 0,
	525, 0, 334, 0, 526, 0, 335, 336, 337, 0,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 527, 0, 347, 348, 0, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 0, 368, 369, 370, 373, 374, 372,
	0, 371, 0, 233, 0, 375, 0, 528, 376, 529,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 0, 387, 0, 531,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 534, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	536, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 0, 425, 426, 427, 428, 537,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 0, 448,
	432, 433, 449, 450, 0, 451, 452, 538, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 539, 459,
	460, 461, 462, 540, 0, 465, 466, 0, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 541,
	542, 543, 544, 0, 480, 0, 474, 475, 545, 476,
	546, 0, 477, 478, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 487, 488, 486, 489, 0, 490, 0,
	0, 491, 492, 493, 547, 548, 549, 0, 495, 494,
	550, 219, 0, 228, 0, 496, 497, 551, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 233, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 228, 495,
	494, 550, 0, 0, 0, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 503, 0, 504, 249, 505, 0, 250, 251,
	252, 253, 254, 0, 0, 0, 255, 506, 507, 508,
	0, 256, 257, 509, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	278, 279, 0, 280, 510, 511, 0, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 289,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	512, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 513, 514, 0, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 515, 0, 0, 0, 311, 0, 312,
	0, 0, 0, 313, 314, 516, 517, 315, 316, 0,
	317, 518, 0, 519, 318, 0, 319, 320, 321, 322,
	323, 520, 521, 522, 377, 0, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 232, 330, 331, 333,
	0, 0, 332, 523, 524, 0, 525, 0, 334, 0,
	526, 0, 335, 336, 337, 0, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	527, 0, 347, 348, 0, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 0,
	368, 369, 370, 373, 374, 372, 0, 371, 0, 233,
	0, 375, 0, 528, 376, 529, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 0, 387, 0, 531, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 534, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 536, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	0, 425, 426, 427, 428, 537, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 0, 448, 432, 433, 449, 450,
	0, 451, 452, 538, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 539, 459, 460, 461, 462, 540,
	0, 465, 466, 0, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 541, 542, 543, 544, 0,
	480, 0, 474, 475, 545, 476, 546, 0, 477, 478,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 487,
	488, 486, 489, 0, 490, 0, 0, 491, 492, 493,
	547, 548, 549, 228, 495, 494, 550, 0, 0, 0,
	0, 496, 497, 551, 498, 499, 500, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 575, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 576, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 0, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 0, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 577, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 228, 495,
	494, 550, 0, 0, 0, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 503, 0, 504, 249, 505, 0, 250, 251,
	252, 253, 254, 0, 0, 0, 255, 506, 507, 508,
	0, 256, 257, 509, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	1987, 279, 0, 280, 510, 511, 0, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 289,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	512, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 513, 514, 0, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 515, 0, 0, 0, 311, 0, 312,
	0, 0, 0, 313, 314, 516, 517, 315, 316, 0,
	317, 518, 0, 519, 318, 0, 319, 320, 321, 322,
	323, 520, 521, 522, 377, 0, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 232, 330, 331, 333,
	0, 0, 332, 523, 524, 0, 525, 0, 334, 0,
	526, 0, 335, 336, 337, 0, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	527, 0, 347, 348, 0, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 0,
	368, 369, 370, 373, 374, 372, 0, 371, 0, 233,
	0, 375, 0, 528, 376, 529, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 0, 387, 0, 531, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 534, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 536, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	0, 425, 426, 427, 428, 537, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 0, 448, 432, 433, 449, 450,
	0, 451, 452, 538, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 539, 459, 460, 461, 462, 540,
	0, 465, 466, 0, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 541, 542, 543, 544, 0,
	480, 0, 474, 475, 545, 476, 546, 0, 477, 478,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 487,
	488, 486, 489, 0, 490, 0, 0, 491, 492, 493,
	547, 548, 549, 228, 495, 494, 550, 0, 0, 0,
	0, 496, 497, 551, 498, 499, 500, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 1985, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 233, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 228, 495,
	494, 550, 0, 0, 0, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 503, 0, 504, 249, 505, 0, 250, 251,
	252, 253, 254, 0, 0, 0, 255, 506, 507, 508,
	0, 256, 257, 509, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	1983, 279, 0, 280, 510, 511, 0, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 289,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	512, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 513, 514, 0, 231, 0, 0, 0, 0, 0,
	308, 309, 310, 515, 0, 0, 0, 311, 0, 312,
	0, 0, 0, 313, 314, 516, 517, 315, 316, 0,
	317, 518, 0, 519, 318, 0, 319, 320, 321, 322,
	323, 520, 521, 522, 377, 0, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 232, 330, 331, 333,
	0, 0, 332, 523, 524, 0, 525, 0, 334, 0,
	526, 0, 335, 336, 337, 0, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	527, 0, 347, 348, 0, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 0,
	368, 369, 370, 373, 374, 372, 0, 371, 0, 233,
	0, 375, 0, 528, 376, 529, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 0, 387, 0, 531, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 534, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 536, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	0, 425, 426, 427, 428, 537, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 0, 448, 432, 433, 449, 450,
	0, 451, 452, 538, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 539, 459, 460, 461, 462, 540,
	0, 465, 466, 0, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 541, 542, 543, 544, 0,
	480, 0, 474, 475, 545, 476, 546, 0, 477, 478,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 487,
	488, 486, 489, 0, 490, 0, 0, 491, 492, 493,
	547, 548, 549, 228, 495, 494, 550, 0, 0, 0,
	0, 496, 497, 551, 498, 499, 500, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 231,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 1925, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 232, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 233, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 0, 495,
	494, 550, 732, 0, 228, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 508, 0, 256, 257, 509,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 0, 0, 0, 313,
	314, 516, 517, 315, 316, 0, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 520, 521, 522,
	377, 0, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 0, 330, 331, 333, 0, 0, 332, 523,
	524, 0, 525, 731, 334, 0, 526, 0, 335, 336,
	337, 0, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 0, 347, 348,
	0, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 0, 368, 369, 370, 373,
	374, 372, 0, 371, 0, 0, 0, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 0, 387,
	0, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 0, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	0, 448, 432, 433, 449, 450, 0, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 730, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 541, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 228,
	495, 494, 550, 0, 0, 0, 0, 496, 497, 551,
	498, 499, 500, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 0, 250,
	251, 252, 253, 254, 0, 0, 0, 255, 506, 507,
	508, 0, 256, 257, 509, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 0, 0, 0, 0, 0, 0, 276,
	277, 278, 279, 0, 280, 510, 511, 0, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	289, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 513, 514, 0, 2539, 0, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 0,
	312, 0, 0, 0, 313, 314, 516, 517, 315, 316,
	0, 317, 518, 0, 519, 318, 0, 319, 320, 321,
	322, 323, 520, 521, 522, 377, 0, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 0, 330, 331,
	333, 0, 0, 332, 523, 524, 0, 525, 0, 334,
	0, 526, 0, 335, 336, 337, 0, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 527, 0, 347, 348, 0, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	0, 368, 369, 370, 373, 374, 372, 0, 371, 0,
	0, 0, 375, 0, 528, 376, 529, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 0, 387, 0, 531, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 534, 399, 535, 400, 401, 3455, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 0, 425, 426, 427, 428, 537, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 0, 448, 432, 433, 449,
	450, 0, 451, 452, 538, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	540, 0, 465, 466, 0, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 541, 542, 543, 544,
	0, 480, 0, 474, 475, 545, 476, 546, 0, 477,
	478, 479, 0, 481, 482, 0, 0, 483, 484, 485,
	487, 488, 486, 489, 0, 490, 0, 0, 491, 492,
	493, 547, 548, 549, 0, 495, 494, 550, 562, 0,
	228, 0, 496, 497, 551, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 561, 240, 241, 0, 0, 0, 0,
	0, 501, 0, 0, 0, 0, 242, 243, 245, 244,
	246, 247, 248, 502, 503, 0, 504, 249, 505, 0,
	250, 251, 252, 253, 254, 0, 0, 0, 255, 506,
	507, 508, 0, 256, 257, 509, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 264, 0, 0, 266, 267,
	268, 265, 0, 269, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 0, 0, 0, 0, 0, 0,
	276, 277, 278, 279, 0, 280, 510, 511, 0, 284,
	281, 282, 0, 285, 283, 0, 286, 287, 0, 0,
	288, 289, 290, 0, 291, 292, 0, 293, 294, 0,
	295, 296, 512, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 310, 515, 0, 0, 0, 311,
	0, 312, 0, 0, 0, 313, 314, 516, 517, 315,
	316, 0, 317, 518, 0, 519, 318, 0, 319, 320,
	321, 322, 323, 520, 521, 522, 377, 0, 324, 325,
	0, 326, 327, 328, 329, 0, 0, 0, 0, 330,
	331, 333, 0, 0, 332, 523, 524, 0, 525, 0,
	334, 0, 526, 0, 335, 336, 337, 0, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 0, 345, 344,
	0, 346, 527, 0, 347, 348, 0, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 0, 368, 369, 370, 373, 374, 372, 0, 371,
	0, 0, 0, 375, 0, 528, 376, 529, 378, 379,
	0, 0, 380, 0, 0, 0, 382, 383, 384, 0,
	0, 385, 386, 530, 0, 387, 0, 531, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 532, 533, 534, 399, 535, 560, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 536, 411,
	410, 412, 0, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 0, 422,
	423, 424, 0, 425, 426, 427, 428, 537, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 0,
	443, 444, 442, 445, 446, 447, 0, 448, 432, 433,
	449, 450, 0, 451, 452, 538, 0, 453, 0, 454,
	455, 456, 457, 434, 458, 463, 539, 459, 460, 461,
	462, 540, 0, 465, 466, 0, 464, 0, 467, 468,
	469, 470, 471, 302, 472, 0, 473, 541, 542, 543,
	544, 0, 480, 0, 474, 475, 545, 476, 546, 0,
	477, 478, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 487, 488, 486, 489, 0, 490, 0, 0, 491,
	492, 493, 547, 548, 549, 0, 495, 494, 550, 228,
	2526, 0, 0, 496, 497, 551, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 0, 250,
	251, 252, 253, 254, 0, 0, 0, 255, 506, 507,
	508, 0, 256, 257, 509, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 0, 0, 0, 0, 0, 0, 276,
	277, 278, 279, 0, 280, 510, 511, 0, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	289, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 513, 514, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 0,
	312, 0, 0, 0, 313, 314, 516, 517, 315, 316,
	0, 317, 518, 0, 519, 318, 0, 319, 320, 321,
	322, 323, 520, 521, 522, 377, 0, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 0, 330, 331,
	333, 0, 0, 332, 523, 524, 0, 525, 0, 334,
	0, 526, 0, 335, 336, 337, 0, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 527, 0, 347, 348, 0, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	0, 368, 369, 370, 373, 374, 372, 0, 371, 0,
	0, 0, 375, 0, 528, 376, 529, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 0, 387, 0, 531, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 534, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 0, 425, 426, 427, 428, 537, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 0, 448, 432, 433, 449,
	450, 0, 451, 452, 538, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	540, 0, 465, 466, 0, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 541, 542, 543, 544,
	0, 480, 0, 474, 475, 545, 476, 546, 0, 477,
	478, 479, 0, 481, 482, 0, 0, 483, 484, 485,
	487, 488, 486, 489, 0, 490, 0, 0, 491, 492,
	493, 547, 548, 549, 0, 495, 494, 550, 228, 3464,
	0, 0, 496, 497, 551, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 503, 0, 504, 249, 505, 0, 250, 251,
	252, 253, 254, 0, 0, 0, 255, 506, 507, 508,
	0, 256, 257, 509, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	278, 279, 0, 280, 510, 511, 0, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 289,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	512, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 310, 515, 0, 0, 0, 311, 0, 312,
	0, 0, 0, 313, 314, 516, 517, 315, 316, 0,
	317, 518, 0, 519, 318, 0, 319, 320, 321, 322,
	323, 520, 521, 522, 377, 0, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 0, 330, 331, 333,
	0, 0, 332, 523, 524, 0, 525, 0, 334, 0,
	526, 0, 335, 336, 337, 0, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	527, 0, 347, 348, 0, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 0,
	368, 369, 370, 373, 374, 372, 0, 371, 0, 0,
	0, 375, 0, 528, 376, 529, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 0, 387, 0, 531, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 534, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 536, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	0, 425, 426, 427, 428, 537, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 0, 448, 432, 433, 449, 450,
	0, 451, 452, 538, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 539, 459, 460, 461, 462, 540,
	0, 465, 466, 0, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 541, 542, 543, 544, 0,
	480, 0, 474, 475, 545, 476, 546, 0, 477, 478,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 487,
	488, 486, 489, 0, 490, 0, 0, 491, 492, 493,
	547, 548, 549, 228, 495, 494, 550, 0, 0, 0,
	0, 496, 497, 551, 498, 499, 500, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 3204, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 0, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 0, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 228, 495,
	494, 550, 0, 0, 0, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 501,
	0, 2289, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 503, 0, 504, 249, 505, 0, 250, 251,
	252, 253, 254, 0, 0, 0, 255, 506, 507, 508,
	0, 256, 257, 509, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	278, 279, 0, 280, 510, 511, 0, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 289,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	512, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 310, 515, 0, 0, 0, 311, 0, 312,
	0, 0, 0, 313, 314, 516, 517, 315, 316, 0,
	317, 518, 0, 519, 318, 0, 319, 320, 321, 322,
	323, 520, 521, 522, 377, 0, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 0, 330, 331, 333,
	0, 0, 332, 523, 524, 0, 525, 0, 334, 0,
	526, 0, 335, 336, 337, 0, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	527, 0, 347, 348, 0, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 0,
	368, 369, 370, 373, 374, 372, 0, 371, 0, 0,
	0, 375, 0, 528, 376, 529, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 0, 387, 0, 531, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 534, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 536, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	0, 425, 426, 427, 428, 537, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 0, 448, 432, 433, 449, 450,
	0, 451, 452, 538, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 539, 459, 460, 461, 462, 540,
	0, 465, 466, 0, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 541, 542, 543, 544, 0,
	480, 0, 474, 475, 545, 476, 546, 0, 477, 478,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 487,
	488, 486, 489, 0, 490, 0, 0, 491, 492, 493,
	547, 548, 549, 0, 495, 494, 550, 228, 2526, 0,
	0, 496, 497, 551, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 234, 235, 236, 237, 238, 239,
	0, 240, 241, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 242, 243, 245, 244, 246, 247, 248,
	502, 503, 0, 504, 249, 505, 0, 250, 251, 252,
	253, 254, 0, 0, 0, 255, 506, 507, 508, 0,
	256, 257, 509, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 264, 0, 0, 266, 267, 268, 265, 0,
	269, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 0, 0, 0, 0, 0, 0, 276, 277, 278,
	279, 0, 280, 510, 511, 0, 284, 281, 282, 0,
	285, 283, 0, 286, 287, 0, 0, 288, 289, 290,
	0, 291, 292, 0, 293, 294, 0, 295, 296, 512,
	297, 298, 299, 301, 303, 300, 304, 305, 306, 307,
	513, 514, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 310, 515, 0, 0, 0, 311, 0, 312, 0,
	0, 0, 313, 314, 516, 517, 315, 316, 0, 317,
	518, 0, 519, 318, 0, 319, 320, 321, 322, 323,
	520, 521, 522, 377, 0, 324, 325, 0, 326, 327,
	328, 329, 0, 0, 0, 0, 330, 331, 333, 0,
	0, 332, 523, 524, 0, 525, 0, 334, 0, 526,
	0, 335, 336, 337, 0, 338, 0, 0, 0, 339,
	340, 341, 342, 343, 0, 345, 344, 0, 346, 527,
	0, 347, 348, 0, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 355, 0, 356, 357, 359, 361, 358,
	360, 365, 362, 363, 364, 367, 0, 366, 0, 368,
	369, 370, 373, 374, 372, 0, 371, 0, 0, 0,
	375, 0, 528, 376, 529, 378, 379, 0, 0, 380,
	0, 0, 0, 382, 383, 2523, 0, 0, 385, 386,
	530, 0, 387, 0, 531, 388, 389, 381, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 532, 533,
	534, 399, 535, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 536, 411, 410, 412, 0,
	0, 0, 0, 0, 0, 413, 0, 415, 416, 417,
	414, 418, 419, 420, 421, 0, 422, 423, 424, 0,
	425, 426, 427, 428, 537, 429, 0, 430, 435, 436,
	431, 437, 438, 439, 440, 441, 0, 443, 444, 442,
	445, 446, 447, 0, 448, 432, 433, 449, 450, 0,
	451, 452, 538, 0, 453, 0, 454, 455, 456, 457,
	434, 458, 463, 539, 459, 460, 461, 462, 540, 0,
	465, 466, 0, 464, 0, 467, 468, 469, 470, 471,
	302, 472, 0, 473, 541, 542, 543, 544, 0, 480,
	0, 474, 475, 545, 476, 546, 0, 477, 478, 479,
	0, 481, 482, 0, 0, 483, 484, 485, 487, 488,
	486, 489, 0, 490, 0, 0, 491, 492, 493, 547,
	548, 549, 228, 495, 494, 550, 0, 0, 0, 0,
	496, 497, 551, 498, 499, 500, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 1964, 240, 241, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 503, 0, 504, 249,
	505, 0, 250, 251, 252, 253, 254, 0, 0, 0,
	255, 506, 507, 508, 0, 256, 257, 509, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 269, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 0, 0, 0, 0,
	0, 0, 276, 277, 278, 279, 0, 280, 510, 511,
	0, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 289, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 512, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 310, 515, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 516,
	517, 315, 316, 0, 317, 518, 0, 519, 318, 0,
	319, 320, 321, 322, 323, 520, 521, 522, 377, 0,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	0, 330, 331, 333, 0, 0, 332, 523, 524, 0,
	525, 0, 334, 0, 526, 0, 335, 336, 337, 0,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 527, 0, 347, 348, 0, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 366, 0, 368, 369, 370, 373, 374, 372,
	0, 371, 0, 0, 0, 375, 0, 528, 376, 529,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 0, 387, 0, 531,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 534, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	536, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 0, 425, 426, 427, 428, 537,
	429, 0, 430, 435, 436, 431, 437, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 446, 447, 0, 448,
	432, 433, 449, 450, 0, 451, 452, 538, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 539, 459,
	460, 461, 462, 540, 0, 465, 466, 0, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 541,
	542, 543, 544, 0, 480, 0, 474, 475, 545, 476,
	546, 0, 477, 478, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 487, 488, 486, 489, 0, 490, 0,
	0, 491, 492, 493, 547, 548, 549, 0, 495, 494,
	550, 1954, 0, 228, 0, 496, 497, 551, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 0, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 0, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 435, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 0, 495,
	494, 550, 603, 0, 228, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	242, 243, 1082, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 1080, 0, 256, 257, 509,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 0, 0, 0, 313,
	314, 516, 517, 315, 316, 0, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 520, 521, 522,
	377, 0, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 0, 330, 331, 333, 0, 0, 332, 523,
	524, 0, 525, 0, 334, 0, 526, 0, 335, 336,
	337, 0, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 0, 347, 348,
	0, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 604, 0, 368, 369, 370, 373,
	374, 372, 0, 371, 0, 0, 0, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 0, 387,
	0, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 0, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 600, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 1083, 447,
	0, 448, 432, 433, 449, 450, 0, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 599, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 0,
	495, 494, 550, 603, 0, 228, 0, 496, 497, 551,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 0, 250, 251, 252, 253, 254,
	0, 0, 0, 255, 506, 507, 508, 0, 256, 593,
	509, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 278, 279, 0,
	280, 510, 511, 0, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 0, 312, 0, 0, 0,
	313, 314, 516, 517, 315, 316, 0, 317, 518, 0,
	519, 318, 0, 319, 320, 321, 322, 323, 520, 521,
	522, 377, 0, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 0, 330, 331, 333, 0, 0, 332,
	523, 524, 0, 525, 0, 334, 0, 526, 0, 335,
	336, 337, 0, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 527, 0, 347,
	348, 0, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 604, 0, 368, 369, 370,
	373, 374, 372, 0, 371, 0, 0, 0, 375, 0,
	528, 376, 529, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 0,
	387, 0, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 0, 425, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 600,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 1375,
	447, 0, 448, 432, 433, 449, 450, 0, 451, 452,
	538, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 0, 465, 466,
	0, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 599, 542, 543, 544, 0, 480, 0, 474,
	475, 545, 476, 546, 0, 477, 478, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 487, 488, 486, 489,
	0, 490, 0, 0, 491, 492, 493, 547, 548, 549,
	0, 495, 494, 550, 1357, 0, 228, 0, 496, 497,
	551, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 1356,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 0, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 0, 495, 494, 550, 1306, 0, 228, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 235, 236, 237, 238, 239,
	0, 240, 241, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 242, 243, 245, 244, 246, 247, 248,
	502, 503, 0, 504, 249, 505, 0, 250, 251, 252,
	253, 254, 0, 0, 0, 255, 506, 507, 508, 0,
	256, 257, 509, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 264, 0, 0, 266, 267, 268, 265, 0,
	269, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 0, 0, 0, 0, 0, 0, 276, 277, 278,
	279, 0, 280, 510, 511, 0, 284, 281, 282, 0,
	285, 283, 0, 286, 287, 0, 0, 288, 289, 290,
	0, 291, 292, 0, 293, 294, 0, 295, 296, 512,
	297, 298, 299, 301, 303, 300, 304, 305, 306, 307,
	513, 514, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 310, 515, 0, 0, 0, 311, 0, 312, 0,
	0, 0, 313, 314, 516, 517, 315, 316, 0, 317,
	518, 0, 519, 318, 0, 319, 320, 321, 322, 323,
	1305, 521, 522, 377, 0, 324, 325, 0, 326, 327,
	328, 329, 0, 0, 0, 0, 330, 331, 333, 0,
	0, 332, 523, 524, 0, 525, 0, 334, 0, 526,
	0, 335, 336, 337, 0, 338, 0, 0, 0, 339,
	340, 341, 342, 343, 0, 345, 344, 0, 346, 527,
	0, 347, 348, 0, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 355, 0, 356, 357, 359, 361, 358,
	360, 365, 362, 363, 364, 367, 0, 366, 0, 368,
	369, 370, 373, 374, 372, 0, 371, 0, 0, 0,
	375, 0, 528, 376, 529, 378, 379, 0, 0, 380,
	0, 0, 0, 382, 383, 384, 0, 0, 385, 386,
	530, 0, 387, 0, 531, 388, 389, 381, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 532, 533,
	534, 399, 535, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 536, 411, 410, 412, 0,
	0, 0, 0, 0, 0, 413, 0, 415, 416, 417,
	414, 418, 419, 420, 421, 0, 422, 423, 424, 0,
	425, 426, 427, 428, 537, 429, 0, 430, 435, 436,
	431, 437, 438, 439, 440, 441, 0, 443, 444, 442,
	445, 446, 447, 0, 448, 432, 433, 449, 450, 0,
	451, 452, 538, 0, 453, 0, 454, 455, 456, 457,
	434, 458, 463, 539, 459, 460, 461, 462, 540, 0,
	465, 466, 0, 464, 0, 467, 468, 469, 470, 471,
	302, 472, 0, 473, 541, 542, 543, 544, 0, 480,
	0, 474, 475, 545, 476, 546, 0, 477, 478, 479,
	0, 481, 482, 0, 0, 483, 484, 485, 487, 488,
	486, 489, 0, 490, 0, 0, 491, 492, 493, 547,
	548, 549, 0, 495, 494, 550, 1291, 0, 228, 0,
	496, 497, 551, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 242, 243, 245, 244, 246, 247,
	248, 502, 503, 0, 504, 249, 505, 0, 250, 251,
	252, 253, 254, 0, 0, 0, 255, 506, 507, 508,
	0, 256, 257, 509, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 264, 0, 0, 266, 267, 268, 265,
	0, 269, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	278, 279, 0, 280, 510, 511, 0, 284, 281, 282,
	0, 285, 283, 0, 286, 287, 0, 0, 288, 289,
	290, 0, 291, 292, 0, 293, 294, 0, 295, 296,
	512, 297, 298, 299, 301, 303, 300, 304, 305, 306,
	307, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 310, 515, 0, 0, 0, 311, 0, 312,
	0, 0, 0, 313, 314, 516, 517, 315, 316, 0,
	317, 518, 0, 519, 318, 0, 319, 320, 321, 322,
	323, 1290, 521, 522, 377, 0, 324, 325, 0, 326,
	327, 328, 329, 0, 0, 0, 0, 330, 331, 333,
	0, 0, 332, 523, 524, 0, 525, 0, 334, 0,
	526, 0, 335, 336, 337, 0, 338, 0, 0, 0,
	339, 340, 341, 342, 343, 0, 345, 344, 0, 346,
	527, 0, 347, 348, 0, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 355, 0, 356, 357, 359, 361,
	358, 360, 365, 362, 363, 364, 367, 0, 366, 0,
	368, 369, 370, 373, 374, 372, 0, 371, 0, 0,
	0, 375, 0, 528, 376, 529, 378, 379, 0, 0,
	380, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 530, 0, 387, 0, 531, 388, 389, 381, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 532,
	533, 534, 399, 535, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 536, 411, 410, 412,
	0, 0, 0, 0, 0, 0, 413, 0, 415, 416,
	417, 414, 418, 419, 420, 421, 0, 422, 423, 424,
	0, 425, 426, 427, 428, 537, 429, 0, 430, 435,
	436, 431, 437, 438, 439, 440, 441, 0, 443, 444,
	442, 445, 446, 447, 0, 448, 432, 433, 449, 450,
	0, 451, 452, 538, 0, 453, 0, 454, 455, 456,
	457, 434, 458, 463, 539, 459, 460, 461, 462, 540,
	0, 465, 466, 0, 464, 0, 467, 468, 469, 470,
	471, 302, 472, 0, 473, 541, 542, 543, 544, 0,
	480, 0, 474, 475, 545, 476, 546, 0, 477, 478,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 487,
	488, 486, 489, 0, 490, 0, 0, 491, 492, 493,
	547, 548, 549, 0, 495, 494, 550, 1286, 0, 228,
	0, 496, 497, 551, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 239, 0, 240, 241, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 242, 243, 245, 244, 246,
	247, 248, 502, 503, 0, 504, 249, 505, 0, 250,
	251, 252, 253, 254, 0, 0, 0, 255, 506, 507,
	508, 0, 256, 257, 509, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 264, 0, 0, 266, 267, 268,
	265, 0, 269, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 0, 0, 0, 0, 0, 0, 276,
	277, 278, 279, 0, 280, 510, 511, 0, 284, 281,
	282, 0, 285, 283, 0, 286, 287, 0, 0, 288,
	289, 290, 0, 291, 292, 0, 293, 294, 0, 295,
	296, 512, 297, 298, 299, 301, 303, 300, 304, 305,
	306, 307, 513, 514, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 310, 515, 0, 0, 0, 311, 0,
	312, 0, 0, 0, 313, 314, 516, 517, 315, 316,
	0, 317, 518, 0, 519, 318, 0, 319, 320, 321,
	322, 323, 520, 521, 522, 377, 0, 324, 325, 0,
	326, 327, 328, 329, 0, 0, 0, 0, 330, 331,
	333, 0, 0, 332, 523, 524, 0, 525, 0, 334,
	0, 526, 0, 335, 336, 337, 0, 338, 0, 0,
	0, 339, 340, 341, 342, 343, 0, 345, 344, 0,
	346, 527, 0, 347, 348, 0, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 355, 0, 356, 357, 359,
	361, 358, 360, 365, 362, 363, 364, 367, 0, 366,
	0, 368, 369, 370, 373, 374, 372, 0, 371, 0,
	0, 0, 375, 0, 528, 376, 529, 378, 379, 0,
	0, 380, 0, 0, 0, 382, 383, 384, 0, 0,
	385, 386, 530, 0, 387, 0, 531, 388, 389, 381,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	532, 533, 534, 399, 535, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 536, 411, 410,
	412, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 417, 414, 418, 419, 420, 421, 0, 422, 423,
	424, 0, 425, 426, 427, 428, 537, 429, 0, 430,
	435, 436, 431, 437, 438, 439, 440, 441, 0, 443,
	444, 442, 445, 446, 447, 0, 448, 432, 433, 449,
	450, 0, 451, 452, 538, 0, 453, 0, 454, 455,
	456, 457, 434, 458, 463, 539, 459, 460, 461, 462,
	540, 0, 465, 466, 0, 464, 0, 467, 468, 469,
	470, 471, 302, 472, 0, 473, 541, 542, 543, 544,
	0, 480, 0, 474, 475, 545, 476, 546, 0, 477,
	478, 479, 0, 481, 482, 0, 0, 483, 484, 485,
	487, 488, 486, 489, 0, 490, 0, 0, 491, 492,
	493, 547, 548, 549, 0, 495, 494, 550, 1210, 0,
	228, 0, 496, 497, 551, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 235, 236,
	237, 238, 239, 0, 240, 241, 0, 0, 0, 0,
	0, 501, 0, 0, 0, 0, 242, 243, 245, 244,
	246, 247, 248, 502, 503, 0, 504, 249, 505, 0,
	250, 251, 252, 253, 254, 0, 0, 0, 255, 506,
	507, 508, 0, 256, 257, 509, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 264, 0, 0, 266, 267,
	268, 265, 0, 269, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 0, 0, 0, 0, 0, 0,
	276, 277, 278, 279, 0, 280, 510, 511, 0, 284,
	281, 282, 0, 285, 283, 0, 286, 287, 0, 0,
	288, 289, 290, 0, 291, 292, 0, 293, 294, 0,
	295, 296, 512, 297, 298, 299, 301, 303, 300, 304,
	305, 306, 307, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 310, 515, 0, 0, 0, 311,
	0, 312, 0, 0, 0, 313, 314, 516, 517, 315,
	316, 0, 317, 518, 0, 519, 318, 0, 319, 320,
	321, 322, 323, 520, 521, 522, 377, 0, 324, 325,
	0, 326, 327, 328, 329, 0, 0, 0, 0, 330,
	331, 333, 0, 0, 332, 523, 524, 0, 525, 0,
	334, 0, 526, 0, 335, 336, 337, 0, 338, 0,
	0, 0, 339, 340, 341, 342, 343, 0, 345, 344,
	0, 346, 527, 0, 347, 348, 0, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 355, 0, 356, 357,
	359, 361, 358, 360, 365, 362, 363, 364, 367, 0,
	366, 0, 368, 369, 370, 373, 374, 372, 0, 371,
	0, 0, 0, 375, 0, 528, 376, 529, 378, 379,
	0, 0, 380, 0, 0, 0, 382, 383, 384, 0,
	0, 385, 386, 530, 0, 387, 0, 531, 388, 389,
	381, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 532, 533, 534, 399, 535, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 536, 411,
	410, 412, 0, 0, 0, 0, 0, 0, 413, 0,
	415, 416, 417, 414, 418, 419, 420, 421, 0, 422,
	423, 424, 0, 425, 426, 427, 428, 537, 429, 0,
	430, 435, 436, 431, 437, 438, 439, 440, 441, 0,
	443, 444, 442, 445, 446, 447, 0, 448, 432, 433,
	449, 450, 0, 451, 452, 538, 0, 453, 0, 454,
	455, 456, 457, 434, 458, 463, 539, 459, 460, 461,
	462, 540, 0, 465, 466, 0, 464, 0, 467, 468,
	469, 470, 471, 302, 472, 0, 473, 541, 542, 543,
	544, 0, 480, 0, 474, 475, 545, 476, 546, 0,
	477, 478, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 487, 488, 486, 489, 0, 490, 0, 0, 491,
	492, 493, 547, 548, 549, 0, 495, 494, 550, 603,
	0, 228, 0, 496, 497, 551, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 242, 243, 1082,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 1080, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 520, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 0,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 604, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 0, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 600, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 1083, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 599, 542,
	543, 544, 0, 480, 0, 474, 1081, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 228, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 1064,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 520,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 0, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 228, 495, 494, 550, 0, 0, 0, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 609, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 520, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 0,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 0, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 0, 495, 494, 550,
	603, 0, 228, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	235, 236, 237, 238, 239, 0, 240, 241, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 242, 243,
	245, 244, 246, 247, 248, 502, 503, 0, 504, 249,
	505, 0, 250, 251, 252, 253, 254, 0, 0, 0,
	255, 506, 507, 508, 0, 256, 593, 509, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 264, 0, 0,
	266, 267, 268, 265, 0, 591, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 0, 0, 0, 0,
	0, 0, 276, 277, 278, 279, 0, 280, 510, 511,
	0, 284, 281, 282, 0, 285, 283, 0, 286, 287,
	0, 0, 288, 289, 290, 0, 291, 292, 0, 293,
	294, 0, 295, 296, 512, 297, 298, 299, 301, 303,
	300, 304, 305, 306, 307, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 310, 515, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 516,
	517, 315, 316, 0, 317, 518, 0, 519, 318, 0,
	319, 320, 321, 322, 323, 520, 521, 522, 377, 0,
	324, 325, 0, 326, 327, 328, 329, 0, 0, 0,
	0, 330, 331, 333, 0, 0, 332, 523, 524, 0,
	525, 0, 334, 0, 526, 0, 335, 336, 337, 0,
	338, 0, 0, 0, 339, 340, 341, 342, 343, 0,
	345, 344, 0, 346, 527, 0, 347, 348, 0, 0,
	349, 350, 592, 0, 0, 352, 353, 354, 355, 0,
	356, 357, 359, 361, 358, 360, 365, 362, 363, 364,
	367, 0, 604, 0, 368, 369, 370, 373, 374, 372,
	0, 371, 0, 0, 0, 375, 0, 528, 376, 529,
	378, 379, 0, 0, 380, 0, 0, 0, 382, 383,
	384, 0, 0, 385, 386, 530, 0, 387, 0, 531,
	388, 389, 381, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 532, 533, 534, 399, 535, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	536, 411, 410, 412, 0, 0, 0, 0, 0, 0,
	413, 0, 415, 416, 417, 414, 418, 419, 420, 421,
	0, 422, 423, 424, 0, 425, 426, 427, 428, 594,
	429, 0, 430, 435, 436, 431, 600, 438, 439, 440,
	441, 0, 443, 444, 442, 445, 595, 447, 0, 448,
	432, 433, 449, 450, 0, 451, 452, 538, 0, 453,
	0, 454, 455, 456, 457, 434, 458, 463, 539, 459,
	460, 461, 462, 540, 0, 465, 466, 0, 464, 0,
	467, 468, 469, 470, 471, 302, 472, 0, 473, 599,
	542, 543, 544, 0, 480, 0, 474, 597, 545, 476,
	546, 0, 477, 478, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 487, 488, 486, 489, 0, 490, 0,
	0, 491, 492, 493, 547, 548, 549, 0, 495, 494,
	550, 587, 0, 228, 0, 496, 497, 551, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 242,
	243, 245, 244, 246, 247, 248, 502, 503, 0, 504,
	249, 505, 0, 250, 251, 252, 253, 254, 0, 0,
	0, 255, 506, 507, 508, 0, 256, 257, 509, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 264, 0,
	0, 266, 267, 268, 265, 0, 269, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 0, 0, 0,
	0, 0, 0, 276, 277, 278, 279, 0, 280, 510,
	511, 0, 284, 281, 282, 0, 285, 283, 0, 286,
	287, 0, 0, 288, 289, 290, 0, 291, 292, 0,
	293, 294, 0, 295, 296, 512, 297, 298, 299, 301,
	303, 300, 304, 305, 306, 307, 513, 514, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 310, 515, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	516, 517, 315, 316, 0, 317, 518, 0, 519, 318,
	0, 319, 320, 321, 322, 323, 520, 521, 522, 377,
	0, 324, 325, 0, 326, 327, 328, 329, 0, 0,
	0, 0, 330, 331, 333, 0, 0, 332, 523, 524,
	0, 525, 0, 334, 0, 526, 0, 335, 336, 337,
	0, 338, 0, 0, 0, 339, 340, 341, 342, 343,
	0, 345, 344, 0, 346, 527, 0, 347, 348, 0,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 355,
	0, 356, 357, 359, 361, 358, 360, 365, 362, 363,
	364, 367, 0, 366, 0, 368, 369, 370, 373, 374,
	372, 0, 371, 0, 0, 0, 375, 0, 528, 376,
	529, 378, 379, 0, 0, 380, 0, 0, 0, 382,
	383, 384, 0, 0, 385, 386, 530, 0, 387, 0,
	531, 388, 389, 381, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 532, 533, 534, 399, 535, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 536, 411, 410, 412, 0, 0, 0, 0, 0,
	0, 413, 0, 415, 416, 417, 414, 418, 419, 420,
	421, 0, 422, 423, 424, 0, 425, 426, 427, 428,
	537, 429, 0, 430, 588, 436, 431, 437, 438, 439,
	440, 441, 0, 443, 444, 442, 445, 446, 447, 0,
	448, 432, 433, 449, 450, 0, 451, 452, 538, 0,
	453, 0, 454, 455, 456, 457, 434, 458, 463, 539,
	459, 460, 461, 462, 540, 0, 465, 466, 0, 464,
	0, 467, 468, 469, 470, 471, 302, 472, 0, 473,
	541, 542, 543, 544, 0, 480, 0, 474, 475, 545,
	476, 546, 0, 477, 478, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 487, 488, 486, 489, 0, 490,
	0, 0, 491, 492, 493, 547, 548, 549, 0, 495,
	494, 550, 585, 0, 228, 0, 496, 497, 551, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	242, 243, 245, 244, 246, 247, 248, 502, 503, 0,
	504, 249, 505, 0, 250, 251, 252, 253, 254, 0,
	0, 0, 255, 506, 507, 508, 0, 256, 257, 509,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 264,
	0, 0, 266, 267, 268, 265, 0, 269, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 278, 279, 0, 280,
	510, 511, 0, 284, 281, 282, 0, 285, 283, 0,
	286, 287, 0, 0, 288, 289, 290, 0, 291, 292,
	0, 293, 294, 0, 295, 296, 512, 297, 298, 299,
	301, 303, 300, 304, 305, 306, 307, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 310, 515,
	0, 0, 0, 311, 0, 312, 0, 0, 0, 313,
	314, 516, 517, 315, 316, 0, 317, 518, 0, 519,
	318, 0, 319, 320, 321, 322, 323, 520, 521, 522,
	377, 0, 324, 325, 0, 326, 327, 328, 329, 0,
	0, 0, 0, 330, 331, 333, 0, 0, 332, 523,
	524, 0, 525, 0, 334, 0, 526, 0, 335, 336,
	337, 0, 338, 0, 0, 0, 339, 340, 341, 342,
	343, 0, 345, 344, 0, 346, 527, 0, 347, 348,
	0, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	355, 0, 356, 357, 359, 361, 358, 360, 365, 362,
	363, 364, 367, 0, 366, 0, 368, 369, 370, 373,
	374, 372, 0, 371, 0, 0, 0, 375, 0, 528,
	376, 529, 378, 379, 0, 0, 380, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 530, 0, 387,
	0, 531, 388, 389, 381, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 532, 533, 534, 399, 535,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 536, 411, 410, 412, 0, 0, 0, 0,
	0, 0, 413, 0, 415, 416, 417, 414, 418, 419,
	420, 421, 0, 422, 423, 424, 0, 425, 426, 427,
	428, 537, 429, 0, 430, 435, 436, 431, 437, 438,
	439, 440, 441, 0, 443, 444, 442, 445, 446, 447,
	0, 448, 432, 433, 449, 450, 0, 451, 452, 538,
	0, 453, 0, 454, 455, 456, 457, 434, 458, 463,
	539, 459, 460, 461, 462, 540, 0, 465, 466, 0,
	464, 0, 467, 468, 469, 470, 471, 302, 472, 0,
	473, 541, 542, 543, 544, 0, 480, 0, 474, 475,
	545, 476, 546, 0, 477, 478, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 487, 488, 486, 489, 0,
	490, 0, 0, 491, 492, 493, 547, 548, 549, 0,
	495, 494, 550, 579, 0, 228, 0, 496, 497, 551,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 242, 243, 245, 244, 246, 247, 248, 502, 503,
	0, 504, 249, 505, 0, 250, 251, 252, 253, 254,
	0, 0, 0, 255, 506, 507, 508, 0, 256, 257,
	509, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	264, 0, 0, 266, 267, 268, 265, 0, 269, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 278, 279, 0,
	280, 510, 511, 0, 284, 281, 282, 0, 285, 283,
	0, 286, 287, 0, 0, 288, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 512, 297, 298,
	299, 301, 303, 300, 304, 305, 306, 307, 513, 514,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 310,
	515, 0, 0, 0, 311, 0, 312, 0, 0, 0,
	313, 314, 516, 517, 315, 316, 0, 317, 518, 0,
	519, 318, 0, 319, 320, 321, 322, 323, 520, 521,
	522, 377, 0, 324, 325, 0, 326, 327, 328, 329,
	0, 0, 0, 0, 330, 331, 333, 0, 0, 332,
	523, 524, 0, 525, 0, 334, 0, 526, 0, 335,
	336, 337, 0, 338, 0, 0, 0, 339, 340, 341,
	342, 343, 0, 345, 344, 0, 346, 527, 0, 347,
	348, 0, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 355, 0, 356, 357, 359, 361, 358, 360, 365,
	362, 363, 364, 367, 0, 366, 0, 368, 369, 370,
	373, 374, 372, 0, 371, 0, 0, 0, 375, 0,
	528, 376, 529, 378, 379, 0, 0, 380, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 530, 0,
	387, 0, 531, 388, 389, 381, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 532, 533, 534, 399,
	535, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 536, 411, 410, 412, 0, 0, 0,
	0, 0, 0, 413, 0, 415, 416, 417, 414, 418,
	419, 420, 421, 0, 422, 423, 424, 0, 425, 426,
	427, 428, 537, 429, 0, 430, 435, 436, 431, 437,
	438, 439, 440, 441, 0, 443, 444, 442, 445, 446,
	447, 0, 448, 432, 433, 449, 450, 0, 451, 452,
	538, 0, 453, 0, 454, 455, 456, 457, 434, 458,
	463, 539, 459, 460, 461, 462, 540, 0, 465, 466,
	0, 464, 0, 467, 468, 469, 470, 471, 302, 472,
	0, 473, 541, 542, 543, 544, 0, 480, 0, 474,
	475, 545, 476, 546, 0, 477, 478, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 487, 488, 486, 489,
	0, 490, 0, 0, 491, 492, 493, 547, 548, 549,
	0, 495, 494, 550, 557, 0, 228, 0, 496, 497,
	551, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 520,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 0, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 228, 495, 494, 550, 0, 0, 0, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 520, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 0,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 0, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 228, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 2946,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 0, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 228, 495, 494, 550, 0, 0, 0, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 2907, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 0,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 0, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 228, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 2853,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 0, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 228, 495, 494, 550, 0, 0, 0, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 2851, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 0,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 0, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 228, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 2837,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 0, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 228, 495, 494, 550, 0, 0, 0, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 2481, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 0,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 0, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 228, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 520,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 0, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 588, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 228, 495, 494, 550, 0, 0, 0, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 1907, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 520, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 0,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 0, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 0, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 228, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 1328,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 0, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 411, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 228, 495, 494, 550, 0, 0, 0, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 318, 0, 319,
	320, 321, 322, 323, 1268, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 0,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 0, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 429,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 228, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	0, 0, 0, 234, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 242, 243, 245, 244, 246, 247, 248, 502,
	503, 0, 504, 249, 505, 0, 250, 251, 252, 253,
	254, 0, 0, 0, 255, 506, 507, 508, 0, 256,
	257, 509, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 264, 0, 0, 266, 267, 268, 265, 0, 269,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	0, 0, 0, 0, 0, 0, 276, 277, 278, 279,
	0, 280, 510, 511, 0, 284, 281, 282, 0, 285,
	283, 0, 286, 287, 0, 0, 288, 289, 290, 0,
	291, 292, 0, 293, 294, 0, 295, 296, 512, 297,
	298, 299, 301, 303, 300, 304, 305, 306, 307, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	310, 515, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 516, 517, 315, 316, 0, 317, 518,
	0, 519, 318, 0, 319, 320, 321, 322, 323, 520,
	521, 522, 377, 0, 324, 325, 0, 326, 327, 328,
	329, 0, 0, 0, 0, 330, 331, 333, 0, 0,
	332, 523, 524, 0, 525, 0, 334, 0, 526, 0,
	335, 336, 337, 0, 338, 0, 0, 0, 339, 340,
	341, 342, 343, 0, 345, 344, 0, 346, 527, 0,
	347, 348, 0, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 355, 0, 356, 357, 359, 361, 358, 360,
	365, 362, 363, 364, 367, 0, 366, 0, 368, 369,
	370, 373, 374, 372, 0, 371, 0, 0, 0, 375,
	0, 528, 376, 529, 378, 379, 0, 0, 380, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 530,
	0, 387, 0, 531, 388, 389, 381, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 532, 533, 534,
	399, 535, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 536, 1016, 410, 412, 0, 0,
	0, 0, 0, 0, 413, 0, 415, 416, 417, 414,
	418, 419, 420, 421, 0, 422, 423, 424, 0, 425,
	426, 427, 428, 537, 429, 0, 430, 435, 436, 431,
	437, 438, 439, 440, 441, 0, 443, 444, 442, 445,
	446, 447, 0, 448, 432, 433, 449, 450, 0, 451,
	452, 538, 0, 453, 0, 454, 455, 456, 457, 434,
	458, 463, 539, 459, 460, 461, 462, 540, 0, 465,
	466, 0, 464, 0, 467, 468, 469, 470, 471, 302,
	472, 0, 473, 541, 542, 543, 544, 0, 480, 0,
	474, 475, 545, 476, 546, 0, 477, 478, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 487, 488, 486,
	489, 0, 490, 0, 0, 491, 492, 493, 547, 548,
	549, 228, 495, 494, 550, 0, 0, 0, 0, 496,
	497, 551, 498, 499, 500, 0, 0, 0, 234, 235,
	236, 237, 238, 239, 0, 240, 241, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 242, 243, 245,
	244, 246, 247, 248, 502, 503, 0, 504, 249, 505,
	0, 250, 251, 252, 253, 254, 0, 0, 0, 255,
	506, 507, 508, 0, 256, 257, 509, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 264, 0, 0, 266,
	267, 268, 265, 0, 269, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 278, 279, 0, 280, 510, 511, 0,
	284, 281, 282, 0, 285, 283, 0, 286, 287, 0,
	0, 288, 289, 290, 0, 291, 292, 0, 293, 294,
	0, 295, 296, 512, 297, 298, 299, 301, 303, 300,
	304, 305, 306, 307, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 310, 515, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 516, 517,
	315, 316, 0, 317, 518, 0, 519, 0, 0, 319,
	320, 321, 322, 323, 520, 521, 522, 377, 0, 324,
	325, 0, 326, 327, 328, 329, 0, 0, 0, 0,
	330, 331, 333, 0, 0, 332, 523, 524, 0, 525,
	0, 334, 0, 526, 0, 335, 336, 337, 0, 338,
	0, 0, 0, 339, 340, 341, 342, 343, 0, 345,
	344, 0, 346, 527, 0, 347, 348, 0, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 355, 0, 356,
	357, 359, 361, 358, 360, 365, 362, 363, 364, 367,
	0, 366, 0, 368, 369, 370, 373, 374, 372, 0,
	371, 0, 0, 0, 375, 0, 528, 376, 529, 378,
	379, 0, 0, 380, 0, 0, 0, 382, 383, 384,
	0, 0, 385, 386, 530, 0, 387, 0, 531, 388,
	389, 381, 390, 391, 0, 393, 394, 395, 396, 0,
	397, 398, 532, 533, 534, 399, 535, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 0, 408, 409, 536,
	411, 410, 412, 0, 0, 0, 0, 0, 0, 413,
	0, 415, 416, 417, 414, 418, 419, 420, 421, 0,
	422, 423, 424, 0, 425, 426, 427, 428, 537, 0,
	0, 430, 435, 436, 431, 437, 438, 439, 440, 441,
	0, 443, 444, 442, 445, 446, 447, 0, 448, 432,
	433, 449, 450, 0, 451, 452, 538, 0, 453, 0,
	454, 455, 456, 457, 434, 458, 463, 539, 459, 460,
	461, 462, 540, 0, 465, 466, 0, 464, 0, 467,
	468, 469, 470, 471, 302, 472, 0, 473, 541, 542,
	543, 544, 0, 480, 0, 474, 475, 545, 476, 546,
	0, 477, 478, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 487, 488, 486, 489, 0, 490, 0, 0,
	491, 492, 493, 547, 548, 549, 0, 495, 494, 550,
	0, 0, 0, 0, 496, 497, 551, 498, 499, 500,
	1508, 1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1544, 1539, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 1557, 0, 0, 0,
	0, 0, 0, 0, 1508, 1509, 0, 1541, 1542, 1543,
	1551, 1552, 1553, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 1544, 1539, 0, 0, 1530,
	0, 0, 0, 1511, 0, 0, 0, 1527, 0, 0,
	1557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 1534, 1535, 1536, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 0, 0, 1558, 0, 1533, 1534, 1535, 1536, 1538,
	1540, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 1555, 0, 0, 0,
	0, 0, 0, 1525, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 1558, 0, 1546,
	0, 0, 0, 1538, 1540, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 0, 1554, 0,
	1555, 0, 0, 0, 0, 0, 0, 1525, 1526, 0,
	0, 0, 0, 0, 0, 1556, 0, 0, 0, 0,
	0, 0, 0, 1546, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1545, 0, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 0, 1508, 1509, 0, 1541,
	1542, 1543, 1551, 1552, 1553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1549, 1537, 1544, 1539, 0,
	0, 0, 0, 0, 0, 1511, 0, 0, 0, 0,
	0, 0, 1557, 0, 0, 0, 1532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 1549,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 0, 1522, 1523, 1529, 1550,
	1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515,
	1517, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	2681, 0, 0, 0, 0, 0, 0, 1533, 1534, 1535,
	1536, 0, 0, 0, 0, 0, 1547, 1516, 0, 0,
	1522, 1523, 1529, 1550, 1528, 1524, 0, 1521, 1519, 1520,
	1512, 1513, 1514, 1515, 1517, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 2143, 0, 1548, 0, 0, 1558,
	0, 0, 0, 0, 0, 1538, 1540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 0, 1555, 0, 0, 0, 0, 0, 0, 1525,
	1526, 0, 0, 1508, 1509, 0, 1541, 1542, 1543, 1551,
	1552, 1553, 0, 0, 0, 1546, 0, 0, 0, 0,
	0, 0, 0, 0, 1544, 1539, 1531, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 1545, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 1509, 0, 1541, 1542, 1543, 1551,
	1552, 1553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1544, 1539, 0, 0, 1537, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 1532, 0,
	0, 0, 0, 0, 1533, 1534, 1535, 1536, 0, 0,
	0, 0, 1510, 0, 1516, 0, 0, 0, 0, 0,
	0, 1549, 1530, 0, 0, 0, 0, 0, 0, 0,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 1558, 0, 0, 0,
	0, 0, 1538, 1540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 1555,
	0, 0, 0, 0, 0, 0, 1525, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1546, 0, 1533, 1534, 1535, 1536, 0, 0,
	0, 0, 0, 1531, 1516, 0, 0, 0, 1547, 0,
	0, 0, 1522, 1523, 1529, 1550, 1528, 1524, 0, 1521,
	1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518, 1556, 0,
	0, 0, 3766, 1548, 0, 0, 1558, 0, 0, 0,
	0, 0, 1538, 1540, 0, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 1555,
	0, 0, 0, 0, 0, 0, 1525, 1526, 0, 0,
	1508, 1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0,
	0, 0, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 1544, 1539, 1531, 0, 1537, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 1557, 0, 0, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 1556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 1545, 0, 0, 1549, 1530,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 0, 0,
	0, 1533, 1534, 1535, 1536, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 1547, 0, 0, 1549, 1522,
	1523, 1529, 1550, 1528, 1524, 0, 1521, 1519, 1520, 1512,
	1513, 1514, 1515, 1517, 1518, 0, 0, 0, 0, 3762,
	1548, 0, 0, 1558, 0, 0, 0, 0, 0, 1538,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 1555, 0, 0, 0,
	0, 0, 0, 1525, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 1547, 0, 0, 0, 1522,
	1523, 1529, 1550, 1528, 1524, 0, 1521, 1519, 1520, 1512,
	1513, 1514, 1515, 1517, 1518, 1556, 0, 0, 0, 3671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 1509, 0, 1541, 1542, 1543, 1551, 1552,
	1553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1544, 1539, 0, 0, 0, 0, 0,
	0, 1511, 1537, 0, 0, 0, 0, 0, 1557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 0, 0, 0, 1549, 0, 0, 0, 1527,
	0, 1508, 1509, 0, 1541, 1542, 1543, 1551, 1552, 1553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1544, 1539, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 1533, 1534, 1535, 1536, 0, 0, 0,
	1530, 0, 0, 1516, 0, 0, 0, 0, 1527, 0,
	0, 0, 1547, 0, 0, 0, 1522, 1523, 1529, 1550,
	1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515,
	1517, 1518, 1548, 0, 0, 1558, 3670, 0, 0, 0,
	0, 1538, 1540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 1555, 0,
	0, 0, 0, 0, 0, 1525, 1526, 0, 0, 0,
	0, 0, 1533, 1534, 1535, 1536, 0, 0, 0, 0,
	0, 1546, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1548, 0, 0, 1558, 0, 0, 1556, 0, 0,
	1538, 1540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 1554, 0, 1555, 0, 0,
	0, 0, 0, 0, 1525, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1556, 0, 0, 0,
	0, 0, 0, 0, 1532, 0, 0, 0, 0, 0,
	0, 0, 0, 1545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1549, 0, 0,
	0, 0, 0, 1508, 1509, 0, 1541, 1542, 1543, 1551,
	1552, 1553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1544, 1539, 0, 0, 0, 0,
	0, 0, 1511, 1537, 0, 0, 0, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 1549, 0, 0, 0,
	1527, 0, 0, 0, 1547, 0, 0, 0, 1522, 1523,
	1529, 1550, 1528, 1524, 0, 1521, 1519, 1520, 1512, 1513,
	1514, 1515, 1517, 1518, 0, 0, 0, 0, 3525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 1534, 1535, 1536, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 1522, 1523, 1529,
	1550, 1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514,
	1515, 1517, 1518, 1548, 0, 0, 1558, 3399, 0, 0,
	0, 0, 1538, 1540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 1555,
	0, 0, 0, 0, 0, 0, 1525, 1526, 0, 0,
	1508, 1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0,
	0, 0, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 1544, 1539, 1531, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 1557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 1545, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1544, 1539, 0, 0, 1537, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 1557, 0, 0, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 0, 0,
	0, 1533, 1534, 1535, 1536, 0, 0, 0, 0, 1510,
	0, 1516, 0, 0, 0, 0, 0, 0, 1549, 1530,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 0, 0, 1558, 0, 0, 0, 0, 0, 1538,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 1555, 0, 0, 0,
	0, 0, 0, 1525, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1546,
	0, 1533, 1534, 1535, 1536, 0, 0, 0, 0, 0,
	1531, 1516, 0, 0, 0, 1547, 0, 0, 0, 1522,
	1523, 1529, 1550, 1528, 1524, 0, 1521, 1519, 1520, 1512,
	1513, 1514, 1515, 1517, 1518, 1556, 0, 0, 0, 3345,
	1548, 0, 0, 1558, 0, 0, 0, 0, 0, 1538,
	1540, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 1555, 0, 0, 0,
	0, 0, 0, 1525, 1526, 0, 0, 1508, 1509, 0,
	1541, 1542, 1543, 1551, 1552, 1553, 0, 0, 0, 1546,
	0, 0, 0, 0, 0, 0, 0, 0, 1544, 1539,
	1531, 0, 1537, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 1556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 1545, 0, 0, 1549, 1530, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 0, 0, 0, 1533, 1534,
	1535, 1536, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 1547, 0, 0, 1549, 1522, 1523, 1529, 1550,
	1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515,
	1517, 1518, 0, 0, 0, 0, 3344, 1548, 0, 0,
	1558, 0, 0, 0, 0, 0, 1538, 1540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 1555, 0, 0, 0, 0, 0, 0,
	1525, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 0,
	0, 0, 1547, 0, 0, 0, 1522, 1523, 1529, 1550,
	1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515,
	1517, 1518, 1556, 0, 0, 0, 3343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1544, 1539, 0, 0, 0, 0, 0, 0, 1511, 1537,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 1549, 0, 0, 0, 1527, 0, 1508, 1509,
	0, 1541, 1542, 1543, 1551, 1552, 1553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1544,
	1539, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	1533, 1534, 1535, 1536, 0, 0, 0, 1530, 0, 0,
	1516, 0, 0, 0, 0, 1527, 0, 0, 0, 1547,
	0, 0, 0, 1522, 1523, 1529, 1550, 1528, 1524, 0,
	1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518, 1548,
	0, 0, 1558, 3076, 0, 0, 0, 0, 1538, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 1555, 0, 0, 0, 0,
	0, 0, 1525, 1526, 0, 0, 0, 0, 0, 1533,
	1534, 1535, 1536, 0, 0, 0, 0, 0, 1546, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 1558, 0, 0, 1556, 0, 0, 1538, 1540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 1554, 0, 1555, 0, 0, 0, 0, 0,
	0, 1525, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1556, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 0, 0, 0, 0,
	1508, 1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1544, 1539, 0, 0, 0, 0, 0, 0, 1511,
	1537, 0, 0, 0, 0, 0, 1557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 1549, 0, 0, 0, 1527, 0, 0,
	0, 1547, 0, 0, 0, 1522, 1523, 1529, 1550, 1528,
	1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517,
	1518, 0, 0, 0, 0, 2679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 1534, 1535, 1536, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 0, 1522, 1523, 1529, 1550, 1528, 1524,
	0, 1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518,
	1548, 0, 0, 1558, 2678, 0, 0, 0, 0, 1538,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 1555, 0, 0, 0,
	0, 0, 0, 1525, 1526, 0, 0, 1508, 1509, 0,
	1541, 1542, 1543, 1551, 1552, 1553, 0, 0, 0, 1546,
	0, 0, 0, 0, 0, 0, 0, 0, 1544, 1539,
	1531, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 1545, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 1509, 0,
	1541, 1542, 1543, 1551, 1552, 1553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1544, 1539,
	0, 0, 1537, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 0, 0, 0, 1533, 1534,
	1535, 1536, 0, 0, 0, 0, 1510, 0, 1516, 0,
	0, 0, 0, 0, 0, 1549, 1530, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1548, 0, 0,
	1558, 0, 0, 0, 0, 0, 1538, 1540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 1555, 0, 0, 0, 0, 0, 0,
	1525, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1546, 0, 1533, 1534,
	1535, 1536, 0, 0, 0, 0, 0, 1531, 1516, 0,
	0, 0, 1547, 0, 0, 0, 1522, 1523, 1529, 1550,
	1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515,
	1517, 1518, 1556, 0, 0, 0, 2677, 1548, 0, 0,
	1558, 0, 0, 0, 0, 0, 1538, 1540, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 1555, 0, 0, 0, 0, 0, 0,
	1525, 1526, 0, 0, 1508, 1509, 0, 1541, 1542, 1543,
	1551, 1552, 1553, 0, 0, 0, 1546, 0, 0, 0,
	0, 0, 0, 0, 0, 1544, 1539, 1531, 0, 1537,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	1557, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 1556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 1545,
	0, 0, 1549, 1530, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1537,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 0, 0, 0, 1533, 1534, 1535, 1536, 0,
	0, 0, 0, 0, 0, 1516, 3888, 0, 0, 1547,
	0, 0, 1549, 1522, 1523, 1529, 1550, 1528, 1524, 0,
	1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518, 0,
	0, 0, 0, 2676, 1548, 0, 0, 1558, 0, 0,
	0, 0, 0, 1538, 1540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1554, 0,
	1555, 0, 0, 0, 0, 0, 0, 1525, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 1547,
	0, 0, 0, 1522, 1523, 1529, 1550, 1528, 1524, 0,
	1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518, 1556,
	0, 2643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3887, 1508, 1509, 0, 1541, 1542, 1543, 1551, 1552,
	1553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1544, 1539, 0, 1537, 0, 0, 2614,
	0, 1511, 0, 0, 0, 0, 0, 0, 1557, 0,
	0, 0, 0, 0, 0, 0, 1532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 1508, 1509, 0, 1541, 1542, 1543, 1551, 1552,
	1553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1544, 1539, 0, 0, 0, 0, 0,
	2615, 1511, 0, 0, 0, 0, 0, 0, 1557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 1533, 1534, 1535, 1536, 0, 0, 0,
	0, 1530, 0, 1516, 0, 0, 1547, 0, 0, 1527,
	1522, 1523, 1529, 1550, 1528, 1524, 0, 1521, 1519, 1520,
	1512, 1513, 1514, 1515, 1517, 1518, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 1558, 0, 0, 0, 0,
	0, 1538, 1540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 1555, 0,
	0, 0, 0, 0, 0, 1525, 1526, 0, 0, 0,
	0, 0, 0, 1533, 1534, 1535, 1536, 0, 0, 0,
	0, 1546, 0, 1516, 0, 2739, 0, 0, 2738, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 1558, 0, 1556, 0, 0,
	0, 1538, 1540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 0, 1554, 0, 1555, 0,
	0, 0, 0, 0, 0, 1525, 1526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1556, 0, 0,
	0, 0, 0, 0, 1532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1549, 0, 2263,
	0, 0, 0, 0, 0, 0, 1508, 1509, 0, 1541,
	1542, 1543, 1551, 1552, 1553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1544, 1539, 0,
	0, 0, 2262, 0, 1537, 1511, 0, 0, 0, 0,
	0, 0, 1557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 1549, 0, 0,
	0, 0, 0, 1527, 1547, 0, 0, 0, 1522, 1523,
	1529, 1550, 1528, 1524, 0, 1521, 1519, 1520, 1512, 1513,
	1514, 1515, 1517, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 1509, 0, 1541, 1542,
	1543, 1551, 1552, 1553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1544, 1539, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 1533, 1534, 1535,
	1536, 1557, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 1547, 0, 0, 0, 1522, 1523,
	1529, 1550, 1528, 1524, 1510, 1521, 1519, 1520, 1512, 1513,
	1514, 1515, 1517, 1518, 1530, 0, 1548, 0, 0, 1558,
	0, 0, 1527, 0, 0, 1538, 1540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 0, 1555, 0, 0, 0, 0, 0, 0, 1525,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 1534, 1535, 1536,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 1556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 0, 0, 0, 0, 1548, 0, 0, 1558, 0,
	0, 0, 0, 0, 1538, 1540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 1555, 0, 0, 0, 0, 0, 0, 1525, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 0, 0, 0, 1546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 1532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1556, 1549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1544, 1539, 0, 0, 0, 0, 0, 1537, 1511, 0,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 1547, 0,
	0, 0, 1522, 1523, 1529, 1550, 1528, 1524, 1510, 1521,
	1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518, 1530, 0,
	1549, 0, 0, 0, 0, 0, 1527, 0, 1508, 1509,
	0, 1541, 1542, 1543, 1551, 1552, 1553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1544,
	1539, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	1533, 1534, 1535, 1536, 0, 0, 0, 1530, 0, 0,
	1516, 0, 0, 0, 0, 1527, 0, 1547, 0, 0,
	0, 1522, 1523, 1529, 1550, 1528, 1524, 0, 1521, 1519,
	1520, 1512, 1513, 1514, 1515, 1517, 1518, 0, 0, 1548,
	0, 0, 1558, 0, 0, 0, 0, 0, 1538, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 1555, 0, 0, 0, 0,
	0, 0, 1525, 1526, 0, 0, 0, 0, 0, 1533,
	1534, 1535, 1536, 0, 0, 0, 0, 0, 1546, 1516,
	0, 0, 0, 0, 2745, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 1558, 0, 0, 1556, 0, 0, 1538, 1540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 1554, 0, 1555, 0, 0, 0, 0, 0,
	0, 1525, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1556, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 0, 0, 0, 0,
	1508, 1509, 0, 1541, 1542, 1543, 1551, 1552, 1553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1544, 1539, 0, 0, 0, 2740, 3057, 0, 1511,
	1537, 0, 0, 0, 0, 0, 1557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 1549, 0, 0, 0, 1527, 0, 0,
	0, 1547, 0, 0, 0, 1522, 1523, 1529, 1550, 1528,
	1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 1534, 1535, 1536, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 0, 1522, 1523, 1529, 1550, 1528, 1524,
	0, 1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518,
	1548, 0, 0, 1558, 0, 0, 0, 0, 0, 1538,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 1555, 0, 0, 0,
	0, 0, 0, 1525, 1526, 0, 0, 1508, 1509, 0,
	1541, 1542, 1543, 1551, 1552, 1553, 0, 0, 0, 1546,
	0, 0, 0, 0, 0, 0, 0, 0, 1544, 1539,
	1531, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 1545, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 1509, 0,
	1541, 1542, 1543, 1551, 1552, 1553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1544, 1539,
	0, 0, 1537, 2680, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 0, 0, 0, 1533, 1534,
	1535, 1536, 0, 0, 0, 0, 1510, 0, 1516, 0,
	0, 0, 0, 0, 0, 1549, 1530, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1548, 0, 0,
	1558, 0, 0, 0, 0, 0, 1538, 1540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 1555, 0, 0, 0, 0, 0, 0,
	1525, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1546, 0, 1533, 1534,
	1535, 1536, 0, 0, 0, 0, 0, 1531, 1516, 0,
	0, 0, 1547, 0, 0, 0, 1522, 1523, 1529, 1550,
	1528, 1524, 0, 1521, 1519, 1520, 1512, 1513, 1514, 1515,
	1517, 1518, 1556, 0, 0, 0, 0, 1548, 0, 0,
	1558, 0, 0, 0, 0, 0, 1538, 1540, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 1555, 0, 0, 0, 0, 2707, 0,
	1525, 1526, 0, 0, 1508, 1509, 0, 1541, 1542, 1543,
	1551, 1552, 1553, 0, 0, 0, 1546, 0, 0, 0,
	0, 0, 0, 0, 0, 1544, 1539, 1531, 0, 1537,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	1557, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 1556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 1545,
	0, 0, 1549, 1530, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1537,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 0, 0, 0, 1533, 1534, 1535, 1536, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 1547,
	0, 0, 1549, 1522, 1523, 1529, 1550, 1528, 1524, 0,
	1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518, 0,
	0, 0, 0, 0, 1548, 0, 0, 1558, 0, 0,
	0, 0, 0, 1538, 1540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1554, 0,
	1555, 0, 0, 0, 0, 0, 0, 1525, 1526, 0,
	0, 0, 0, 1508, 1509, 0, 1541, 1542, 1543, 1551,
	1552, 1553, 0, 1546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1531, 1539, 0, 0, 0, 1547,
	0, 0, 1511, 1522, 1523, 1529, 1550, 1528, 1524, 1557,
	1521, 1519, 1520, 1512, 1513, 1514, 1515, 1517, 1518, 1556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 1545, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1532, 0, 0, 0,
	0, 0, 0, 0, 1533, 1534, 1535, 1536, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 1549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 1558, 0, 0, 0,
	0, 0, 1538, 1540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 1555,
	0, 0, 0, 0, 0, 0, 1525, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 1547, 0, 0, 0,
	1522, 1523, 1529, 1550, 1528, 1524, 0, 1521, 1519, 1520,
	1512, 1513, 1514, 1515, 1517, 1518, 0, 0, 1556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 0, 0, 0, 1522,
	1523, 1529, 1550, 1528, 1524, 0, 1521, 1519, 1520, 1512,
	1513, 1514, 1515, 1517, 1518,
}
var sqlPact = [...]int{

	403, -1000, -1000, -1000, -1000, 218, -1000, -1000, 215, 213,
	211, 210, 201, 192, 190, 179, -1000, -1000, -1000, -1000,
	-1000, -1000, 178, -1000, -1000, 177, -1000, 175, 169, 168,
	167, -1000, 164, 160, 158, -1000, -1000, -1000, -1000, 156,
	153, 151, 67669, 67208, 68124, 1929, 81882, 71776, 1736, 60311,
	81421, 59850, 80960, 80499, 148, -1000, 80038, 146, 145, 143,
	-1000, 79577, -1000, 1494, -1000, 139, 4341, 49221, 137, 135,
	134, 1981, 133, -1000, 132, 131, -1000, 9458, 1447, -1000,
	130, -1000, 7907, 346, 70860, 2442, 126, 123, 48759, 2383,
	2464, -1000, -1000, 1707, -1000, -1000, 122, 117, 115, 114,
	113, 112, 111, 110, 109, -1000, 107, 101, 100, 98,
	95, 94, 93, -1000, 91, 90, 89, 87, 86, 85,
	84, 82, 78, 77, 76, 74, -1000, 12404, 73, 1657,
	1451, 1449, 1445, 1444, 1443, 911, 72, 68, 67, 66,
	64, 63, 62, 61, -1000, 60, 54, 53, 52, 51,
	50, 47, 46, 147, 42, 31, 29, 26, 24, 23,
	2232, -1000, 1550, 737, 23931, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 87342, 82337,
	22, -46, 16, -1000, 2869, 839, 40437, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 309, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 508, 1661, 739, -1000, -1000, -1000,
	79122, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1928,
	-142, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 736, -1000,
	1927, 290, 1840, -1000, -1000, -1000, -1000, -1000, 82337, -1000,
	-1000, 3207, 3205, 1744, 734, 78667, -1000, 1413, -1000, 865,
	26853, -1000, 1147, -1000, 26853, 307, -1000, -1000, -1000, -1000,
	-1000, -1000, 3204, 3203, 3202, 3198, -1000, -1000, 59389, 18057,
	58928, 58467, 78206, 17586, 66747, 66286, 54793, -1000, -1000, -1000,
	1080, -1000, -1000, -1000, -1000, -1000, -1000, -9, 52438, 82337,
	-1000, 288, -1000, -1000, -1000, -1000, -1000, -1000, 33775, 646,
	33278, 503, 32781, 300, -1000, -1000, -1000, 54322, -1000, 3197,
	3196, 1012, 3195, 2790, 86887, 1546, 3194, 1505, 1140, 939,
	3193, 3192, 3191, 3190, 3189, 3187, 1255, 77745, 2501, 77284,
	1404, 53851, 65825, 68124, 2236, 76823, 1254, 1249, -1000, -1000,
	-1000, -1000, 2598, 2446, 2418, 45550, -1000, 3186, 3185, 3184,
	3181, 3179, 86432, 1529, 3178, 2112, 3177, 3176, 3175, 3174,
	3173, 3172, 3171, 3169, -1000, 65364, 64903, 64442, 2915, 76362,
	63981, 53380, -1000, -1000, -1000, 42295, 5709, 5396, 75901, 43709,
	68124, 68124, -1000, -1000, 34260, 108, -1000, -1000, -1000, 42771,
	2448, -1000, 34260, 108, -1000, 82337, -1000, 2500, 1648, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2315,
	1433, 3026, 52909, 1753, 1217, 2852, 2597, 2596, 1343, 2135,
	2591, 2584, 2583, 2575, 2568, 1469, 2169, 297, 23434, 1481,
	1345, 2566, 2542, 3070, 1595, 1725, 1697, 58006, 3168, 3167,
	2825, 2532, 2531, 2447, -1000, -1000, -1000, -1000, 1313, -1000,
	-1000, -1000, 61221, -1000, -1000, 1105, -1000, -1000, 1105, -1000,
	-1000, -1000, -1000, -1000, 1078, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1550, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1626, -1000, 1739, -1000, -1000,
	2141, 2834, 2834, 2834, 2884, 477, 474, -1000, 147, -1000,
	-1000, 93563, -1000, -1000, 34260, 34260, 34260, 34260, 34260, 34260,
	34260, 1704, -1000, 733, -1000, -1000, 764, -1000, 732, 618,
	-1000, -1000, -1000, -1000, -1000, -1000, 731, -1000, -1000, -1000,
	-1000, -1000, -1000, 3030, -1000, 20464, -1000, -1000, -1000, 439,
	730, 34260, -1000, -1000, 3098, 3087, 539, -1000, 287, 877,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2494, 728, 727, -1000, 726, 725, 724, 718,
	716, -1000, -1000, -1000, 713, 712, 704, 701, 699, 698,
	696, 695, -1000, 1632, -1000, -1000, -1000, -1000, -1000, -1000,
	656, 655, 655, 655, -1000, 935, -1000, -1000, -1000, 384,
	654, 296, 653, 641, 637, 694, 693, 692, 691, 690,
	689, 688, 687, 685, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	933, -1000, -1000, -1000, -1000, -12, 82337, -1000, 508, -12,
	-1000, -1000, 684, -1000, 27338, 27338, 27338, -1000, -1000, 1926,
	34260, -1000, 2436, -1000, 2, 2, 800, 41357, -1000, 39499,
	800, 250, 784, 45088, -1000, 2444, -1000, -1000, 680, 280,
	-1000, -1000, -1000, -1000, 18526, 2441, 82337, 82337, 68124, 68124,
	68124, 2729, 34260, -1000, -1000, 49676, 82337, 68579, 2974, 50586,
	49676, 82337, 2491, -1000, -1000, -1000, 82337, -1000, 34260, -1000,
	2971, 1411, 55721, 2917, -27, -1000, -1000, -1000, -1000, -1000,
	-1000, 2082, 2099, 1093, 1959, 1467, -1000, 26853, 2780, -1000,
	-1000, -1000, 275, 18526, -1000, -1000, -1000, -1000, -1000, 2252,
	2701, 1216, -1000, 1951, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1553, 2699, -1000, 2077, 2698, 1517, -1000,
	-1000, 1722, -1000, -1000, 2810, -1000, -1000, 1635, 2689, 3,
	-1000, -1000, 2161, -1000, -1000, 913, 2688, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42771, 52438, -18, -1000,
	-1000, -33, -1000, 17115, 93563, -1000, -1000, -1000, 93563, 860,
	-1000, -1000, 2684, -1000, 93563, 825, -1000, -1000, 2674, -1000,
	2488, -1000, -1000, -1000, -1000, 3166, -1000, 3165, 2025, 3164,
	3162, 3161, -1000, 1454, 1605, 3160, -1000, 3159, -1000, -1000,
	-1000, -1000, -1000, -1000, 63520, 1925, -1000, -1000, 62598, -1000,
	2022, -1000, -1000, 63059, 938, -1000, 913, 2020, -1000, 899,
	-1000, 3158, 2908, 2272, 913, 2019, -1000, -1000, -1000, -1000,
	-1000, 46924, -1000, 46924, -1000, 46924, -1000, 1344, -1000, 85977,
	2, 2, 3030, -1000, -1000, -1000, -1000, -1000, 2673, 3152,
	3151, 3150, -1000, 82337, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 186, 2670, -1000, -1000, 186, 2668, -1000, 186,
	2653, -1000, 70399, -1000, -1000, 1841, 2649, -1000, 185, 2646,
	-1000, -1000, -42, 2643, -1000, -1000, -45, -1000, -1000, -1000,
	839, -1000, 41819, -1000, 41819, 75440, 55262, 880, 714, 48297,
	93563, -1000, -57, -1000, -1000, 55262, 42771, 93563, -1000, 55262,
	62598, -1000, 74979, 62143, -1000, -1000, 1235, 2122, -1000, -1000,
	-1000, 880, 55262, 55262, 55262, -1000, 74518, -1000, -1000, 1729,
	1438, 2816, 1699, 68124, -1000, 1570, -1000, -1000, -1000, 2840,
	2486, -1000, 50131, 69944, -1000, 69489, -1000, 69034, -1000, 68124,
	-1000, 68124, -1000, 3149, 3148, 3147, -1000, 3145, 2832, 93563,
	2826, -1000, 2620, 1461, 1455, 82337, -1000, -1000, 82337, -1000,
	82337, -1000, -1000, -1000, 1278, -1000, -1000, 2081, -1000, -1000,
	-1000, -1000, 68124, -1000, -1000, -1000, -1000, -1000, -1000, 2485,
	-1000, 1476, -1000, 1519, -1000, 1208, -1000, -1000, 187, -1000,
	-1000, -27, -1000, 85522, -1000, 2141, -1000, 82337, -1000, 2084,
	2465, 2482, 1462, 1943, 2164, -1000, 32284, 2160, 36685, 1949,
	147, -1000, -1000, 147, 147, 24901, -1000, -1000, 50586, 50586,
	18526, 1174, 34260, 34260, 34260, 34260, 34260, 34260, 34260, 34260,
	34260, 34260, 34260, 34260, 34260, 34260, 34260, 34260, 34260, 34260,
	34260, 34260, 34260, 34260, 34260, 34260, 34260, 34260, 34260, 34260,
	34260, 34260, 34260, 34260, 34260, 34260, 34260, 2061, 34260, 1077,
	34260, 34260, 34260, 34260, 2585, -1000, -1000, 1659, 538, 1761,
	-1000, 3044, 3044, 3044, 558, 558, 93782, 93782, 612, 3141,
	764, -1000, 34260, -1000, 108, 34260, 18997, -1000, -1000, 474,
	8022, 1988, -1000, 473, 19494, -1000, -1000, -1000, 20464, 618,
	31787, 34260, 928, 93563, -1000, -1000, 1613, 3040, 16646, 2471,
	2345, 678, 682, 644, 22937, 22440, 21943, 21446, 525, 34260,
	34260, 34260, 34260, 34260, 34260, 34260, 34260, -1000, -1000, 3060,
	-1000, 3040, -1000, -1000, -1000, -1000, 3040, 1172, 1157, 3040,
	-1000, 3040, 3040, 2433, 2433, 31302, 30805, 30308, 37170, 29811,
	34260, 20949, 29314, 28817, -1000, 82337, -12, 2970, 34260, 281,
	-1000, 92245, -1000, 281, 281, 666, -51, 93563, 2180, 2180,
	40897, 2005, 1715, 1715, 1715, -1000, 800, 12865, 800, 73604,
	1740, 800, 800, 271, 293, 470, 39039, 2436, 73604, 753,
	664, 15, 14, 13, -1000, -1000, 9, 1, -1000, -1000,
	68124, 662, 18997, 18526, 257, 1272, -58, 2204, 2189, 2186,
	-1000, 2181, 1439, -60, 1076, -59, -1000, 206, -61, -1000,
	1141, 246, 3040, -1000, -1000, -1000, -1000, -1000, 3138, 3136,
	-1000, 932, 660, 657, 810, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 656, 655, 655, 655, -1000, 384, 654,
	296, 653, 641, 637, -1000, -1000, -1000, -1000, 2440, -33,
	68579, 852, -69, 1015, -27, -1000, -1000, -1000, 55721, 1105,
	-1000, 1816, -1000, -1000, -1000, -1000, -1000, -1000, 1246, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 539, -1000, -1000, -1000,
	-1000, -1000, -1000, 3053, 3051, -15, -1000, -1000, 18526, -1000,
	-28, 1383, -1000, 57545, 2118, 2815, 2802, 1334, -1000, 1277,
	2876, 61221, 2938, 2947, 506, -1000, 2434, -1000, -1000, 861,
	1422, 1075, 61221, 2077, -1000, 50586, -1000, 2230, 2875, 1264,
	1262, 1264, 1264, 1260, -1000, 61221, 1073, -1000, 1071, -1000,
	-30, 2928, 2937, 404, -1000, 2430, 1070, -1000, -1000, 68124,
	18526, 1376, 1359, 1396, 1068, -17, -1000, 2922, 2920, -1000,
	1607, -1000, 55262, 838, -18, 52438, 82337, 244, -1000, 34260,
	108, 34260, 108, 2914, -1000, -1000, 2642, -1000, -1000, -1000,
	3135, 1585, 2101, -1000, -1000, -1000, 636, 2017, 2417, 82337,
	2182, -19, 68124, -1000, 2641, 2077, 2015, -1000, -1000, 61682,
	-1000, 2640, 634, 3134, -1000, 85067, -1000, 2819, 1069, 2639,
	973, 323, 2968, -1000, 323, 47379, -1000, 82337, -1000, -1000,
	82337, -1000, -1000, -1000, 3133, -1000, 68124, -1000, -1000, 68124,
	-1000, 68124, -1000, 68124, 182, 2625, -1000, -1000, 82337, -1000,
	68124, 68124, 55262, 55262, 868, 56635, -75, -76, 468, -1000,
	74063, 82337, 971, 57090, 82337, 2768, 880, 42771, -1000, -78,
	-57, 880, 880, 838, -1000, 838, -1000, 68124, 2478, -1000,
	880, 880, 880, -1000, -1000, -1000, -1000, 3131, 3130, -1000,
	-1000, -1000, 910, 68124, 82337, 68124, -1000, -1000, 82337, -1000,
	82337, -1000, 910, 82337, 910, 82337, 910, 82337, -1000, -1000,
	-1000, -1000, -1000, -1000, 108, 34260, 1382, -1000, 2469, -1000,
	2468, -1000, 45, -1000, -1000, -1000, -1000, -1000, 1839, 68124,
	68124, 68124, 68124, 82337, 68124, -1000, 61221, -1000, 2084, 2465,
	-1000, -1000, -1000, -1000, -1000, -1000, 1200, 1877, -1000, 2132,
	-1000, 1291, -1000, -1000, -1000, 93563, 37639, -1000, -1000, 93563,
	1420, -1000, 36200, 35715, -1000, -1000, 1409, 68124, 2226, -1000,
	2226, -149, -1000, 91861, 2131, 68124, -1000, -1000, -1000, -1000,
	-1000, 857, 999, 999, 1135, 1135, 1135, 1135, 2911, 418,
	464, 2021, 6920, 6920, 4844, 4844, 4844, 4844, 4844, 6920,
	498, 558, 558, 498, 498, 498, 498, 498, 558, 558,
	558, 6920, 6920, 6920, 93782, 11477, 8595, 34260, 34260, 1067,
	1651, 538, 8324, 34260, 4001, 4001, 4001, 4001, -1000, 1880,
	-1000, -1000, -1000, -1000, 2408, 633, 37170, 37170, -1000, -1000,
	-1000, -1000, 19979, 34260, -1000, -1000, -1000, -1000, 28320, -1000,
	-1000, 91336, -268, 467, -133, 55, -1000, 34260, 34260, 34260,
	461, -1000, 239, 34260, 82337, -1000, 88303, 751, -81, -1000,
	-84, 1265, -1000, 34260, -1000, -1000, 1062, -1000, 1059, 1056,
	1055, -1000, 632, 460, -1000, 238, -1000, 1713, 631, 630,
	34260, -1000, -1000, -1000, -1000, -1000, 91246, -1000, -1000, 91029,
	-1000, -1000, 90727, -1000, -1000, 90648, -1000, -1000, -1000, 93346,
	88259, 12080, 12036, 6378, 11694, 11127, -85, 452, -91, 451,
	850, 832, 450, 449, 440, -92, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -93, 437, -1000, 2407, -133, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 434, -1000, 433,
	-1000, 93256, -133, 432, 4218, -1000, 37170, 37170, 37170, -1000,
	431, -1000, 91941, -1000, 93039, 27835, 27835, 27835, 430, 92737,
	34260, -133, -99, -1000, -100, -1000, -1000, 485, -101, 901,
	27338, 39975, 18526, -1000, 901, 901, 34260, -1000, 34260, 2156,
	-1000, -1000, -1000, 2154, 1920, 2180, 40897, -1000, -1000, -1000,
	-1000, 73604, -1000, 3030, 2305, -1000, 73604, -1000, -1000, 82337,
	508, -1000, 73604, 73604, 18526, 800, -1000, 800, 73604, 599,
	-1000, -1000, -1000, -1000, -1000, 429, 44168, 55, 235, 18526,
	880, -1000, 2260, 2260, 2260, 2260, -1000, -1000, 82337, 2996,
	-1000, 1646, -1000, 50586, -1000, 763, 1013, 18526, -1000, -1000,
	-1000, 629, -1000, 3040, 3040, -1000, 3040, 82337, 180, 26853,
	-1000, 1105, -1000, -1000, 1361, -1000, 1590, -1000, 1086, -1000,
	-1000, -1000, -1000, 26853, -1000, 1916, 82337, 82337, 68124, -1000,
	-1000, 2012, 84612, 2009, 50586, 82337, -1000, -1000, 628, 627,
	2127, 2126, 969, 82337, 82337, 2125, 84157, 83702, 82337, 1663,
	34260, 1889, 1896, 108, 108, -1000, -1000, 108, 623, 1169,
	68124, 68124, 68124, 1515, -1000, -1000, -1000, -1000, -1000, 60766,
	-1000, -1000, 3059, 3057, -1000, 1264, -1000, -1000, -1000, 1264,
	2077, 1508, 68124, 82337, 1653, 108, 108, -1000, -1000, 108,
	622, 18526, 1584, -1000, 2510, 82337, 3084, 68124, 82337, 82337,
	51983, 2820, 83247, 82337, 1607, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 51524, 978, 913, 2277, -1000, -1000, 16177, 93563,
	-1000, 93563, -1000, 49676, 82337, -1000, 937, 82337, 57090, 875,
	2624, 46469, -33, 880, 55262, 68124, -19, 82337, -1000, 2077,
	2623, 508, 2007, -1000, -1000, 55262, 621, 3129, 3128, -1000,
	1923, 1999, -1000, -1000, 82792, 2714, 803, 82337, 901, 40897,
	1561, -1000, 44629, 950, 82337, 1460, 174, -1000, -1000, -1000,
	28, 82337, -1000, 3127, -1000, -1000, 186, 186, 186, -1000,
	68124, 68124, 1841, -1000, 185, -1000, -42, -1000, -1000, 868,
	868, 880, -173, 620, -1000, 830, 829, 43240, 55262, -106,
	-1000, -1000, -1000, -1000, -1000, 68124, 82337, 722, 2258, 82337,
	-109, -1000, 234, 619, -1000, -1000, -1000, 880, 2402, -1000,
	-1000, 918, -1000, 1207, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1, -33, -33, -1000, 910, -1000, 910,
	-1000, 910, -1000, 93563, -1000, 1375, 1367, 82337, -1000, 18526,
	82337, 68124, 18526, 68124, 2462, 2454, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 992, -1000, 1420, 1866, -1000, 618,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2067,
	-1000, -21, 24901, 1965, -1000, -1000, 68124, -2, 34260, 34260,
	7469, 6980, 34260, 37170, 37170, -1000, 34260, 6149, -1000, -1000,
	-1000, -1000, -1000, 2400, 613, 34260, 50586, 6610, 6302, -1000,
	426, 10569, 498, -1000, 34260, -1000, 424, 26368, -1000, 92354,
	0, -114, -1000, 13347, -133, -116, -1000, -1000, 762, -1000,
	2572, -1000, 34260, 92658, 2044, 1758, 1523, 1390, 3040, 3082,
	15708, -1000, 47838, 924, 1786, 90346, -1000, -1000, -1000, -1000,
	50586, 50586, 34260, 34260, -1000, 34260, 34260, 34260, -1000, -1000,
	-1000, 3040, 864, -1000, -1000, -1000, 864, -1000, -1000, 1264,
	-1000, 1264, -1000, 34260, -1000, -1000, 2396, 34260, -1000, 50586,
	50586, 37170, 37170, 37170, 37170, 37170, 37170, 37170, 37170, 37170,
	37170, 37170, 37170, 37170, 37170, 37170, 37170, 37170, 37170, 37170,
	2106, 37170, 3020, 3020, 3020, -1000, 2445, 2396, 34260, 34260,
	50586, 423, 421, 416, -1000, 34260, -133, -1000, -1000, 868,
	610, -1000, 2051, -1000, 2343, -1000, 34260, -1000, -131, -1000,
	2436, -1000, -1000, 2343, 2343, -117, 93563, 40897, 40897, -1000,
	609, 34260, 2153, -1000, -1000, 748, -266, -1000, 826, -1000,
	-1000, -1000, -1000, -1000, 508, -1000, -1000, -1000, 227, 73604,
	73604, 747, -1000, -119, -1000, -1000, -122, -1000, 2966, 414,
	18526, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -33,
	1792, 3081, -1000, 3056, 758, 745, 223, 3040, 401, 400,
	398, -33, 82337, -1000, -27, -1000, -1000, -1000, 34260, -1000,
	-1000, 2809, 1054, 1052, -1000, 2618, -1000, 1997, -1000, 958,
	-1000, 1702, -1000, 34260, 34260, 603, 596, 3126, 1569, 3125,
	970, 2617, 1841, 2616, 1841, -1000, -1000, 866, -1000, 93563,
	595, 593, -1000, -28, 1378, 917, -1000, -1000, 34260, 34260,
	73149, -1000, 394, 2810, -6, -1000, 1045, -1000, -1000, -1000,
	-1000, 2077, 1041, -1000, -1000, -1000, 915, -1000, -1000, 34260,
	-1000, -30, 1040, 2927, 1996, 68124, 1037, -1000, 1034, -1000,
	-1000, -1000, -1000, -1000, -1000, 2919, 1841, 2611, 1058, -1000,
	-1000, -1000, 51055, -1000, 904, 2384, -1000, 1033, 3124, 68124,
	3122, 395, -128, -32, 50586, 2965, 1939, 607, 68124, 837,
	-1000, 3030, -1000, -1000, -1000, -1000, 68124, 2964, 2608, 913,
	3075, -1000, -1000, 68124, 2602, 1918, 1992, 2093, 803, 56180,
	-1000, 913, 1751, -39, -1000, 1460, 25871, 2807, -130, -1000,
	-1000, -1000, 901, 47379, 40897, 34260, 3120, -135, -1000, -1000,
	-1000, -1000, -1000, 182, -1000, -1000, -1000, -1000, -1000, 72235,
	72235, 55262, 55262, 55262, 880, 82337, 82337, 57090, -1000, 591,
	82337, 82337, 588, -1000, 82337, 82337, 3119, 55262, -1000, 108,
	-1000, 1817, 68124, 15239, -1000, -1000, -1000, -1000, -1000, 910,
	-1000, -1000, 1655, 1948, 1655, 1479, 1474, -1000, 1859, -1000,
	-1000, -1000, -1000, 2211, 2817, 18526, 2916, 4001, 34260, 34260,
	4860, 5205, 4088, 4001, 34260, 34260, 50586, 4827, -136, 34260,
	34260, -1000, 34260, 741, 93563, 3074, 34260, 387, 378, -1000,
	-1000, -1000, 3037, -1000, -1000, -1000, 93563, 34260, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 371, -1000, 220, -1000, -1000,
	-1000, 87797, -1000, 34260, 369, 2874, -1000, 368, 367, 9975,
	5588, 90129, 90039, 89822, 366, -1000, -1000, 360, 359, 93563,
	2445, 93563, -1000, -1000, 836, 836, 1243, 1243, 1243, 1243,
	3020, 862, 871, 453, 681, 681, 681, 344, 806, 806,
	681, 681, 681, 2382, 2110, 585, 3989, -1000, -1000, 93563,
	93563, 358, -1000, -1000, -1000, -133, 357, 868, -1000, 2338,
	2871, 93563, -1000, 40897, 2338, 2338, -1000, -1000, 1920, 82337,
	93563, 40897, -1000, 2305, -1000, 13827, -1000, 18526, -1000, -1000,
	-1000, -1000, 3030, -1000, 44168, -1000, 584, -1000, 181, -1000,
	-1000, 645, 3118, 757, 18526, 356, -1000, -1000, -1000, -33,
	93563, 82337, 82337, 82337, 2564, -1000, 2823, -1000, 969, 89520,
	-137, -1000, 91861, 34260, 82337, -1000, -1000, 1742, 2185, 1005,
	-1000, 2845, 82337, -1000, 82337, -1000, -1000, 82337, 82337, 68124,
	2535, -143, 93563, -34, -1000, 822, -1000, 1269, -1000, 14770,
	68124, 68124, 2533, -155, 18526, -1000, 3073, 3072, 2555, 2849,
	3071, 82337, -1000, 82337, 68124, 2767, -1000, -1000, -1000, 1890,
	55262, 42771, -1000, 508, -1000, 2237, -1000, 71315, 1791, 108,
	-1000, 72694, 3117, 582, -1000, 1811, -1000, 600, 2077, 108,
	68124, -1000, 343, -35, -1000, 965, 18526, 68124, 2549, 2095,
	803, 56180, -1000, 1069, 2164, -1000, -38, -1000, 562, 108,
	1751, -1000, -39, 93563, -1000, 820, -1000, -1000, -158, -1000,
	-1000, 342, -1000, 2761, 2757, -1000, 2368, 34260, 576, 569,
	82337, 2748, -1000, -1000, -161, -1000, 1932, -1000, -1000, -1000,
	-1000, -1000, 18526, 1402, -1000, 568, 566, -1000, -1000, -1000,
	-1000, 2817, 4001, 4001, 34260, 34260, 34260, 4001, 4827, -163,
	-1000, 4001, 4001, -133, -1000, -1000, 92354, -1000, -1000, -1000,
	93563, -1000, 14301, 1656, -1000, 89441, -1000, 24901, -1000, -1000,
	34260, 34260, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	37170, 2381, 563, 50586, -1000, -1000, 328, 920, 34260, 34260,
	2436, 920, 920, -1000, -164, -1000, -1000, -1000, 3030, 181,
	-1000, -1000, 3114, 18526, 756, -1000, 3112, -1000, -1000, -1000,
	-1000, -1000, 82337, -1000, 82337, -1000, 18526, 82337, 2395, 1980,
	-1000, -1000, 2120, 560, 37170, 68124, 824, -1000, 2985, 2329,
	1652, 34260, 1965, -166, -174, 1979, -1000, -1000, 1975, 34260,
	-1000, 50586, 557, 1841, 1841, -175, -176, -1000, 34260, 1031,
	82337, 25386, -1000, 3106, 2810, -1000, -1000, 34260, 1029, -1000,
	-1000, -1000, 3066, 1841, 18526, -1000, 1841, 1841, 2849, 1004,
	-40, 556, -1000, 809, -1000, -1000, -42, 904, 2963, 1653,
	2304, -1000, -1000, -1000, -1000, 2113, -1000, -1000, 82337, 2109,
	891, -177, -1000, 808, 804, -1000, 57090, 875, 892, -1000,
	-1000, -1000, 508, -1000, 3047, 547, 82337, 1917, 545, 18526,
	-1000, 803, 56180, -1000, 2714, 1460, -1000, 2726, 82337, 2798,
	-1000, 2164, 538, -1000, 880, 536, 534, 3069, 3069, -182,
	34260, 34260, -183, 533, 880, -56, -1000, 811, 795, -1000,
	-1000, 68124, 68124, 34260, 34260, -1000, 4001, 4001, 4001, -1000,
	324, -1000, -1000, 1751, 2866, -1000, -74, 89139, 88922, 4484,
	37170, 50586, -184, -1000, -1000, 82337, 93563, -133, -1000, -1000,
	-1000, 559, -1000, 3105, -1000, -1000, 1733, -1000, -1000, -1000,
	82337, 1990, -1000, 968, 34260, 3989, 532, 34260, -1000, 2958,
	-1000, 2240, 2399, 2237, 527, -1000, -1000, -1000, -1000, -1000,
	961, 1568, -1000, -1000, 93563, 2849, 34260, -1000, -1000, 524,
	521, 93563, 519, 801, 2379, -1000, -1000, -1000, 93563, 518,
	2927, -1000, -1000, -1000, -1000, 1841, 68124, 1818, 1818, 55262,
	1586, 108, 875, -1000, 1693, 1791, 513, -1000, -1000, 1882,
	2201, -1000, 72694, 38577, 38577, 316, 2951, 892, -1000, 3014,
	-1000, 2948, -1000, 34260, -1000, 68124, 34260, 1909, 56180, -1000,
	2093, -1000, 1158, -185, 82337, 1460, -1000, -1000, 55262, 55262,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 961, -191, -192, -1000, 55262, -1000, 1932, -1000, 82337,
	-1000, 82337, -1000, -1000, -193, -194, -1000, 1757, 34260, 24901,
	-1000, -1000, 4484, -200, -1000, -115, -1000, 2930, -1000, -1000,
	-1000, -1000, 2544, 2336, 88832, 2060, 82337, 88615, -1000, 2397,
	-1000, -1000, 1653, 82337, 2237, 2318, 68124, 967, -201, 1655,
	1655, 34260, 24416, 1675, 34260, -1000, -1000, 2849, -1000, -206,
	-1000, 2356, 2306, -1000, 1882, 68124, 82337, -1000, 2836, -1000,
	2747, -1000, -1000, -1000, 2237, 108, -1000, -1000, 108, -208,
	965, -209, 68124, -1000, 2095, 1300, -1000, 901, -1000, -1000,
	-215, -216, 1652, 961, 901, -217, -1000, -222, -224, -1000,
	-1000, 314, 35230, 35230, 35230, -133, -149, -1000, 82337, 510,
	2517, 903, -1000, 1892, 1728, 251, 986, -1000, -1000, 2329,
	-225, -1000, 902, 508, -1000, 34260, 961, -227, -1000, 946,
	-230, -1000, 945, -232, -1000, 2369, -1000, -233, 1841, -1000,
	900, 2910, -1000, -1000, -1000, -1000, -1000, 507, -235, -1000,
	-1000, 2034, -1000, 1653, 891, -1000, 961, 505, 1652, 504,
	-1000, 47379, -1000, 880, 880, 2237, 1652, -1000, 880, -1000,
	-1000, -1000, 2622, -1000, 38108, 1860, 1473, 91553, 2622, 2622,
	-1000, -1000, 82337, 2894, -1000, 1899, 1898, 1312, -1000, -1000,
	-1000, -1000, -1000, -1000, 901, -1000, 2873, 2060, 93563, 2237,
	-1000, 1655, 2286, -1000, 1655, 2358, -1000, 1670, -1000, -1000,
	-1000, 2540, 3034, 82337, -1000, 82337, 1428, 1425, 3103, 875,
	1882, 1652, 34260, 2237, 34260, -223, -1000, -1000, 1653, 2237,
	-1000, -1000, 1643, 2981, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 799, -1000, 2733, -1000, 984, 1848, 1848, -1000,
	797, 1892, -1000, -1000, 497, -1000, 496, -1000, 1412, -1000,
	-1000, -240, -1000, -1000, 3102, -1000, 1882, -1000, 2237, -241,
	1653, -242, -1000, 901, 1653, 1446, -1000, -1000, 1721, 34745,
	34260, -1000, 3000, -1000, -1000, 2137, -1000, 34260, 2329, 34260,
	34260, 1810, 1800, -1000, -1000, 1653, 961, 901, 1652, -1000,
	901, -1000, -1000, -1000, 93563, -1000, -1000, -1000, 93563, -1000,
	-248, -249, 46010, -1000, -1000, -1000, 901, 1652, -1000, 2237,
	-1000, 1653, 1027, -173, 72235, -1000, 2237, 1653, -1000, 495,
	-250, 1653, 901, 34260, -1000, 901, -1000, -255, -1000, 1653,
	-1000,
}
var sqlPgo = [...]int{

	0, 3816, 3813, 3812, 3808, 3807, 3803, 3799, 3798, 3794,
	3793, 3786, 3779, 3775, 3774, 3771, 3770, 3766, 3765, 3763,
	3761, 3759, 3757, 3751, 3748, 3747, 3745, 3744, 3743, 3742,
	3741, 3740, 3738, 3737, 3736, 3734, 3733, 3732, 3731, 3729,
	3728, 3727, 3724, 3723, 3722, 3720, 3719, 3718, 35, 3715,
	3711, 3710, 3709, 3706, 3701, 3699, 3698, 3697, 3696, 3695,
	3692, 3691, 3690, 3689, 3686, 3684, 3683, 43, 3682, 224,
	3673, 3672, 3668, 3666, 3662, 3657, 3655, 3654, 3652, 3646,
	3643, 223, 3638, 118, 3636, 3635, 3632, 3631, 3630, 220,
	3628, 3626, 3625, 3623, 3622, 3621, 3619, 3616, 82, 200,
	3613, 51, 3612, 3611, 3610, 3609, 3607, 3606, 3604, 3603,
	3599, 3598, 212, 3597, 219, 3596, 3593, 3591, 3590, 3589,
	3588, 3586, 3584, 3583, 3582, 3581, 3580, 3579, 3575, 3574,
	3572, 3570, 3568, 3567, 3564, 3563, 3562, 3561, 3560, 3559,
	3548, 3545, 3544, 3542, 228, 168, 3541, 3540, 218, 217,
	3538, 3537, 3536, 3535, 3534, 101, 11, 25, 3524, 3523,
	65, 52, 46, 98, 47, 3522, 14, 290, 209, 7428,
	203, 3521, 3519, 3517, 206, 156, 3512, 195, 3510, 3508,
	3506, 3503, 77, 66, 145, 143, 135, 138, 602, 3500,
	3497, 79, 58, 40, 34, 3495, 3494, 3493, 2743, 107,
	3492, 216, 196, 131, 3491, 3490, 3487, 2101, 3486, 42,
	3485, 181, 72, 103, 29, 95, 3484, 126, 20, 3478,
	140, 39, 3477, 123, 73, 63, 7141, 5531, 3476, 84,
	45, 99, 353, 136, 133, 160, 124, 171, 170, 141,
	1372, 3473, 232, 3468, 2955, 60, 129, 3467, 3466, 3462,
	61, 163, 78, 3456, 3454, 54, 6, 5, 1, 137,
	16, 91, 15, 3451, 17, 3449, 3448, 3444, 3443, 32,
	128, 3441, 230, 3438, 120, 38, 24, 3437, 18, 174,
	3436, 183, 104, 3432, 3431, 211, 166, 154, 3430, 80,
	192, 3425, 3420, 3418, 3417, 3416, 109, 26, 106, 3413,
	3411, 113, 205, 158, 3406, 41, 3405, 132, 81, 108,
	227, 102, 178, 88, 177, 150, 186, 3404, 3403, 3401,
	152, 3400, 3396, 176, 148, 3394, 3393, 164, 233, 33,
	62, 188, 64, 157, 134, 3392, 162, 3390, 3386, 3385,
	231, 149, 172, 12, 9, 70, 100, 30, 13, 185,
	122, 239, 93, 3384, 3860, 1558, 1596, 44, 3381, 116,
	94, 57, 90, 121, 215, 53, 3380, 3379, 2096, 3378,
	3377, 3375, 3373, 151, 3372, 3371, 3370, 112, 115, 155,
	3367, 76, 69, 10, 114, 254, 229, 87, 173, 182,
	238, 3363, 146, 3361, 49, 139, 3358, 161, 208, 3357,
	3356, 92, 3355, 117, 372, 50, 125, 3353, 190, 3352,
	3349, 3348, 3347, 3346, 3345, 3344, 193, 194, 3340, 3337,
	3335, 119, 159, 3334, 214, 144, 147, 83, 36, 3331,
	67, 862, 3326, 175, 189, 56, 3325, 415, 48, 0,
	9242, 8268, 5962, 8643, 3324, 966, 3319, 3313, 3308, 179,
	111, 3307, 3302, 3300, 85, 3298, 59, 3295, 3293, 55,
	3292, 21, 4, 8, 23, 19, 1931, 1628, 3286, 3285,
	86, 105, 96, 3284, 221, 184, 3283, 3282, 3281, 3280,
	71, 3278, 31, 3277, 28, 3275, 3274, 37, 2, 22,
	3273, 3271, 198, 3269, 207, 3268, 127, 3265, 2942, 110,
	3263, 3259, 213, 74, 3258, 199, 3254, 2897, 3252, 3250,
	7, 3247, 142, 169, 3245, 3243, 3240, 130, 3238, 3233,
	3228, 210, 3223, 3221, 27, 3220, 3, 3219, 3214, 167,
	2705, 3213, 3211, 75, 3042, 153,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 8, 8, 8, 36, 36, 9, 9,
	9, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 15, 15, 26, 26, 16, 16, 28, 28,
	17, 17, 29, 29, 502, 502, 20, 31, 21, 32,
	14, 503, 503, 503, 503, 25, 22, 33, 23, 23,
	23, 23, 23, 158, 158, 158, 158, 19, 19, 27,
	27, 185, 185, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 501, 501, 187, 187, 186,
	181, 181, 504, 504, 188, 188, 188, 190, 190, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 405, 405,
	405, 515, 515, 515, 516, 516, 517, 517, 517, 517,
	517, 37, 37, 496, 496, 160, 160, 160, 162, 162,
	161, 161, 161, 58, 58, 509, 509, 510, 510, 508,
	508, 511, 511, 511, 159, 159, 159, 97, 97, 97,
	98, 98, 99, 99, 163, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 85, 85, 437, 437, 438, 438,
	154, 154, 155, 155, 155, 155, 156, 156, 157, 157,
	157, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 41, 41, 41, 41, 41, 41, 42,
	42, 42, 42, 42, 42, 49, 49, 49, 49, 145,
	145, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	519, 519, 520, 520, 521, 521, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 64, 64, 271, 271, 243, 243, 65,
	65, 65, 66, 66, 67, 67, 53, 53, 494, 494,
	286, 286, 396, 396, 69, 69, 306, 306, 70, 70,
	70, 70, 70, 70, 71, 71, 71, 71, 71, 72,
	72, 72, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 78, 78, 78, 79, 79, 79, 76, 76, 76,
	74, 74, 74, 73, 73, 73, 77, 77, 77, 235,
	235, 75, 75, 75, 287, 287, 80, 80, 80, 80,
	244, 81, 81, 81, 81, 81, 81, 81, 81, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 398, 398, 82, 82, 82, 366,
	366, 86, 86, 86, 321, 321, 87, 87, 87, 87,
	87, 88, 88, 88, 88, 100, 100, 100, 100, 498,
	498, 279, 279, 201, 201, 201, 201, 93, 93, 93,
	93, 94, 94, 94, 95, 95, 150, 150, 106, 106,
	106, 106, 106, 105, 105, 105, 105, 105, 105, 43,
	43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
	48, 48, 48, 48, 48, 108, 108, 512, 512, 110,
	107, 107, 107, 109, 109, 109, 109, 111, 112, 112,
	112, 112, 112, 112, 112, 112, 113, 113, 430, 430,
	295, 295, 428, 428, 446, 446, 429, 429, 248, 248,
	248, 248, 248, 249, 249, 249, 436, 436, 436, 436,
	436, 436, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 151, 151,
	152, 153, 153, 153, 153, 133, 133, 133, 144, 144,
	144, 144, 144, 144, 144, 136, 136, 136, 123, 123,
	115, 115, 115, 115, 115, 119, 119, 119, 119, 119,
	119, 119, 119, 116, 116, 125, 125, 125, 125, 125,
	120, 120, 122, 122, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 117, 117, 117, 117, 127, 127, 127,
	127, 328, 328, 328, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 140, 140, 140, 140, 140, 140,
	380, 380, 134, 134, 134, 134, 139, 139, 139, 139,
	311, 311, 131, 131, 131, 132, 132, 132, 137, 137,
	138, 135, 135, 141, 141, 141, 141, 118, 118, 118,
	523, 523, 523, 142, 142, 130, 130, 143, 143, 143,
	143, 143, 143, 143, 143, 129, 129, 129, 128, 128,
	128, 128, 121, 495, 495, 492, 492, 492, 492, 492,
	492, 492, 493, 493, 497, 497, 91, 91, 91, 59,
	59, 59, 60, 60, 166, 166, 166, 166, 256, 256,
	256, 256, 164, 164, 165, 165, 61, 61, 524, 524,
	524, 505, 505, 505, 506, 506, 506, 506, 506, 506,
	250, 250, 251, 251, 346, 346, 346, 346, 346, 254,
	254, 254, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 257, 257, 189, 189, 189, 260, 261, 261, 258,
	258, 259, 259, 259, 263, 263, 262, 265, 265, 264,
	345, 455, 455, 457, 457, 457, 457, 457, 457, 457,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 525, 525, 453, 453, 453, 454, 449, 449, 450,
	450, 450, 450, 450, 252, 252, 253, 253, 253, 253,
	451, 452, 277, 277, 383, 456, 456, 458, 458, 460,
	526, 526, 526, 526, 526, 526, 527, 527, 527, 344,
	344, 343, 343, 269, 269, 461, 461, 461, 461, 462,
	462, 462, 462, 462, 465, 464, 463, 463, 463, 463,
	463, 63, 63, 63, 308, 308, 307, 307, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 147, 147, 204, 204, 57, 57, 57,
	12, 12, 12, 507, 507, 507, 62, 62, 62, 62,
	203, 203, 203, 203, 203, 203, 500, 500, 499, 499,
	205, 205, 529, 529, 68, 68, 68, 68, 68, 68,
	68, 399, 399, 400, 400, 56, 56, 56, 56, 56,
	329, 329, 327, 327, 326, 326, 276, 276, 382, 209,
	209, 182, 182, 182, 24, 18, 18, 34, 34, 35,
	35, 30, 30, 513, 513, 514, 514, 92, 92, 96,
	96, 96, 104, 104, 146, 146, 146, 146, 146, 146,
	146, 38, 38, 38, 38, 50, 50, 50, 50, 102,
	531, 531, 531, 103, 103, 103, 530, 530, 202, 202,
	340, 340, 341, 341, 532, 532, 342, 342, 342, 342,
	196, 195, 197, 197, 55, 55, 55, 191, 191, 192,
	192, 193, 193, 194, 194, 533, 533, 89, 89, 89,
	149, 149, 242, 242, 242, 336, 336, 336, 270, 270,
	215, 215, 339, 339, 337, 337, 337, 337, 305, 305,
	305, 148, 148, 284, 284, 297, 297, 298, 298, 393,
	393, 299, 101, 101, 169, 169, 167, 167, 167, 167,
	167, 167, 167, 167, 174, 174, 175, 175, 176, 176,
	177, 178, 178, 178, 178, 288, 288, 179, 179, 179,
	168, 168, 168, 170, 170, 170, 170, 170, 170, 170,
	173, 173, 173, 173, 180, 180, 180, 172, 172, 472,
	472, 472, 474, 474, 476, 476, 475, 475, 471, 471,
	473, 473, 528, 528, 310, 310, 310, 267, 268, 266,
	266, 274, 274, 272, 273, 273, 275, 275, 381, 381,
	381, 183, 183, 183, 302, 302, 302, 302, 303, 303,
	332, 332, 330, 330, 330, 330, 331, 331, 333, 333,
	333, 334, 334, 335, 335, 301, 301, 362, 362, 171,
	171, 171, 281, 281, 281, 282, 282, 352, 352, 352,
	352, 352, 352, 353, 353, 351, 351, 351, 351, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 385, 386,
	386, 283, 283, 387, 338, 338, 490, 490, 490, 491,
	491, 379, 379, 388, 388, 388, 388, 388, 388, 377,
	377, 378, 378, 394, 395, 395, 314, 314, 314, 314,
	312, 312, 315, 315, 315, 315, 313, 313, 389, 389,
	389, 389, 304, 304, 390, 390, 390, 390, 391, 347,
	348, 348, 401, 401, 401, 401, 403, 280, 280, 280,
	280, 280, 448, 447, 447, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 417, 417, 417, 417, 417, 417,
	417, 417, 418, 418, 418, 418, 418, 418, 404, 404,
	404, 404, 404, 408, 408, 408, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 409, 409, 414,
	414, 415, 415, 415, 410, 411, 416, 416, 416, 416,
	534, 534, 420, 420, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 406, 406, 406, 413, 413, 413, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 322, 322, 324, 324, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 356, 356, 356, 356, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 466, 466, 466, 466, 466, 466, 466, 466,
	358, 358, 469, 469, 470, 470, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 477, 477, 478, 478, 480,
	480, 481, 481, 482, 483, 483, 483, 484, 485, 485,
	479, 479, 486, 486, 486, 486, 487, 487, 488, 488,
	488, 488, 488, 489, 489, 489, 489, 489, 368, 368,
	369, 369, 375, 375, 375, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 206, 206, 206, 206, 206, 293, 293, 291, 291,
	291, 294, 294, 292, 292, 290, 290, 289, 289, 365,
	365, 363, 363, 367, 367, 316, 316, 419, 419, 419,
	419, 419, 419, 419, 419, 317, 317, 317, 325, 318,
	318, 319, 319, 319, 319, 319, 359, 360, 320, 320,
	320, 361, 361, 370, 374, 374, 373, 372, 372, 371,
	371, 349, 349, 350, 350, 300, 300, 535, 535, 296,
	296, 392, 392, 392, 392, 246, 246, 285, 285, 245,
	245, 237, 237, 238, 238, 238, 238, 278, 278, 376,
	376, 421, 421, 422, 422, 423, 423, 424, 424, 425,
	426, 427, 364, 364, 225, 224, 212, 213, 223, 222,
	221, 211, 214, 218, 219, 220, 216, 217, 231, 230,
	229, 236, 227, 228, 397, 210, 239, 239, 240, 240,
	240, 241, 241, 241, 241, 207, 207, 208, 208, 232,
	232, 233, 234, 234, 226, 226, 226, 198, 198, 198,
	199, 199, 200, 200, 435, 435, 432, 432, 432, 433,
	433, 433, 434, 434, 434, 434, 431, 431, 431, 431,
	431, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 440,
	440, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 442, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 445,
	445,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 3, 1, 1, 3, 4, 6, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 12, 3, 1, 0, 1, 1, 2,
	2, 3, 3, 0, 5, 7, 0, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 6, 4, 7, 2, 6, 4, 7, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 3, 2, 4, 3, 3, 5,
	4, 3, 5, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 4, 3,
	1, 1, 1, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 3, 4, 10, 10, 3, 5, 5,
	5, 3, 5, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 1, 2, 0, 3, 3, 2, 3,
	6, 3, 11, 14, 0, 2, 4, 3, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 1, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 9, 9, 3, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 1, 2, 8, 4, 2, 5, 5, 5,
	2, 1, 3, 10, 11, 7, 5, 3, 1, 5,
	9, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 5,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 16, 19, 15, 18, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 6, 6, 8, 6, 8, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 2, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 8, 11, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 8, 5, 3, 4, 3, 0, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 2, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 499, -83, -80, -51, -49, -86, -87,
	-70, -88, -82, -100, -104, -92, -106, -146, -151, -152,
	-153, -3, -37, -39, -52, -69, -71, -81, -90, -89,
	-91, -93, -97, -96, -85, -43, -101, -105, -114, -147,
	-148, -149, 31, 30, 90, 74, 137, 114, 121, 175,
	320, 355, 365, 347, -109, -110, 381, -38, -50, -103,
	-102, 67, 115, 342, -4, -12, 28, 44, -40, -41,
	-42, 57, -57, -54, -64, -58, -518, 92, -473, -72,
	-75, -522, 126, 144, 193, 310, -94, -95, 349, 351,
	145, -45, -44, 139, -167, -169, -107, -108, -150, -115,
	-116, -117, -118, -119, -120, -121, -122, -123, -124, -125,
	-126, -127, -128, -129, -130, -135, -131, -132, -133, -134,
	-136, -137, -139, -140, -141, -142, -143, 385, -138, 434,
	46, 395, 76, 130, 359, 21, -5, -6, -7, -8,
	-9, -10, -11, -13, -53, -55, -56, -59, -60, -61,
	-68, -62, -63, -472, -73, -74, -76, -78, -79, -77,
	348, -170, -168, 496, 448, -15, -20, -21, -16, -17,
	-19, -22, -18, -26, -31, -32, -28, -29, -27, -30,
	-33, -34, -35, -36, -24, -25, -14, -23, 466, 474,
	-173, -171, -172, -180, 373, 456, 411, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, -244, 2,
	-227, -232, -233, -234, -226, -198, -442, -445, 4, -439,
	-443, 150, 202, 275, 21, 22, 23, 24, 25, 26,
	28, 29, 40, 41, 43, 42, 44, 45, 46, 51,
	54, 55, 56, 57, 58, 62, 67, 68, 73, 74,
	75, 76, 77, 78, 79, 85, 82, 83, 84, 87,
	89, 90, 91, 93, 95, 96, 104, 105, 106, 107,
	109, 114, 115, 118, 113, 117, 120, 121, 124, 125,
	126, 128, 129, 131, 132, 134, 135, 137, 138, 139,
	142, 140, 417, 141, 143, 144, 145, 146, 156, 157,
	158, 163, 165, 169, 170, 173, 174, 176, 180, 182,
	183, 184, 185, 186, 192, 193, 195, 196, 197, 198,
	203, 204, 208, 205, 214, 218, 219, 220, 222, 226,
	227, 228, 229, 230, 233, 232, 235, 238, 239, 242,
	243, 244, 247, 248, 249, 250, 252, 253, 256, 254,
	257, 255, 259, 260, 261, 258, 264, 262, 266, 267,
	268, 273, 271, 269, 270, 277, 280, 190, 282, 283,
	286, 304, 290, 291, 292, 295, 296, 299, 302, 303,
	305, 306, 307, 308, 309, 310, 311, 313, 314, 318,
	320, 321, 323, 325, 326, 327, 328, 329, 330, 331,
	334, 333, 335, 342, 347, 344, 345, 346, 348, 349,
	350, 351, 353, 354, 355, 357, 358, 359, 360, 362,
	364, 367, 382, 383, 397, 365, 366, 368, 369, 370,
	371, 372, 376, 374, 375, 377, 378, 379, 381, 384,
	385, 387, 388, 391, 393, 394, 395, 396, 398, 401,
	402, 403, 404, 399, 410, 407, 408, 412, 413, 414,
	415, 416, 418, 420, 428, 429, 431, 434, 435, 436,
	426, 438, 439, 442, 443, 444, 447, 445, 446, 448,
	450, 453, 454, 455, 461, 460, 467, 468, 470, 471,
	472, 35, 47, 48, 50, 52, 63, 64, 65, 69,
	110, 111, 136, 147, 148, 159, 171, 172, 177, 179,
	187, 188, 189, 209, 210, 212, 216, 236, 279, 281,
	297, 301, 315, 316, 317, 319, 332, 361, 389, 400,
	405, 421, 422, 423, 424, 430, 432, 456, 457, 458,
	462, 469, -244, 2, -227, 288, -220, 2, -198, -198,
	320, 27, 2, 27, 314, 375, 413, 415, 2, -498,
	-279, 2, 27, -201, -198, 92, 175, 373, -220, 2,
	-498, -279, 24, 2, -198, 2, -202, 2, 365, -198,
	499, 87, 244, 68, 361, 378, -112, 429, -111, 421,
	368, -113, -430, 2, 264, -198, 499, 499, 499, 27,
	-210, -198, 411, 202, 106, 408, 499, 2, 411, 307,
	460, 374, 106, 329, 202, 436, -507, 357, 178, 449,
	-496, 2, -492, 4, -443, -439, -238, -237, 411, 106,
	-234, -226, 489, -233, 499, 499, 499, 2, 219, 220,
	328, 327, 378, 379, 499, 499, 499, 367, 2, 26,
	60, 86, 89, 112, 146, 166, 169, 293, -519, 253,
	304, 326, 377, 410, 418, 431, -506, 396, 62, 368,
	-505, -507, 436, 124, -326, 106, 244, 174, 443, 415,
	413, 441, 118, 208, 446, 445, 499, 26, 60, 71,
	89, 124, 146, 166, 169, -521, 304, 326, 364, 368,
	377, 410, 418, 431, 2, 460, 374, 411, 202, 106,
	436, -507, 324, -83, 2, 496, 31, 30, 381, -163,
	411, 213, 2, -198, 219, 220, 2, 499, 499, 167,
	-492, 2, 219, 220, 2, 213, 2, 62, 370, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 2, -144, 378,
	396, 184, 44, 68, 27, 325, 73, 308, 107, 176,
	202, 203, 227, 86, 87, -328, 43, 220, 219, -380,
	412, 369, 375, 407, 230, 365, 429, 92, 450, 358,
	472, 329, 330, 140, 4, 106, 264, 380, 421, 244,
	78, 499, -528, 2, 411, -530, 2, 429, 429, 2,
	-530, 2, -530, 2, -530, 2, -531, 429, 469, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, -168, -170, -169, 499, 499,
	499, 499, 499, 499, -144, 378, 2, 68, 27, -272,
	-274, 440, 211, 133, 294, -167, -169, 2, -472, -428,
	2, -354, -446, -356, 487, 488, 480, 409, 61, 274,
	473, -368, 112, 441, 288, -445, -357, -370, 136, 361,
	-294, 8, 9, 5, 6, 7, -207, -358, -364, 433,
	149, 278, -241, 500, 10, 496, -469, -169, -369, 36,
	179, 59, -432, -240, -208, -404, 212, -239, -226, -466,
	-467, 4, -439, -440, -433, -407, -415, -411, -412, -418,
	-198, -442, 71, 98, 99, 97, 102, 101, 246, 245,
	103, 100, 380, 449, 60, 35, 187, 188, 216, 279,
	189, 69, -468, 125, -441, 209, 210, 389, 48, 332,
	159, 111, 110, 281, 52, 50, 457, -416, 108, 421,
	422, 423, 424, 171, 172, 147, 148, 301, 317, 405,
	430, 432, 177, 236, 94, 168, 207, 191, 215, 217,
	221, 237, 240, 265, 272, 276, 298, 300, 356, 386,
	-534, 458, 400, 63, 64, -474, 333, -475, -220, -474,
	499, 499, 501, 499, -266, -267, -268, 2, 27, 122,
	496, 2, -384, 2, -385, -389, -169, 231, -388, 496,
	-386, 494, -227, 289, -470, 362, -466, -467, -207, -226,
	-240, 4, -439, -441, 498, -269, 496, 106, 411, 72,
	202, -321, 496, -198, 27, 288, 425, 501, -366, 496,
	288, 167, 291, -198, 2, 2, 382, 2, 496, -112,
	65, 429, 42, 378, -341, 2, -342, -195, -196, -197,
	-394, 218, 323, 331, 475, 472, -428, -512, 167, 479,
	425, -428, -295, 498, 2, 2, 2, 2, 2, -389,
	187, -227, 2, -224, -431, 4, -439, -443, -440, -444,
	-442, 27, 30, 31, 32, 34, 36, 37, 38, 39,
	53, 59, 60, 66, 70, 72, 81, 86, 92, 97,
	98, 100, 99, 101, 102, 103, 112, 116, 119, 122,
	123, 127, 130, 133, 149, 151, 164, 166, 167, 175,
	178, 181, 194, 206, 211, 213, 231, 234, 241, 245,
	246, 274, 278, 284, 288, 289, 293, 294, 312, 322,
	336, 352, 373, 380, 392, 406, 411, 419, 425, 427,
	433, 440, 441, 449, 451, 459, 463, 464, 465, 466,
	-445, 71, 2, -389, 187, 2, -229, 187, -389, -232,
	2, -211, -198, 2, -223, -431, 2, -245, 187, -227,
	-228, -232, -230, 2, -232, -437, 187, 2, -435, 10,
	-434, 5, 4, -439, -443, -440, 425, 501, -285, -237,
	-238, -278, -198, 498, -354, 2, -101, 2, -354, 187,
	2, -101, 187, 2, -354, 187, 2, -101, 187, 2,
	-509, 2, -437, 2, 2, 431, 2, 89, 187, -198,
	411, 105, 2, 346, -520, 364, 435, 460, 2, 2,
	2, 2, 2, 2, 411, -216, 2, -198, 164, -236,
	187, 2, -198, 374, -529, 333, -437, 187, 2, -230,
	2, -230, 202, 214, -211, 187, 2, 415, 413, 415,
	413, 167, 2, 213, 2, 213, 2, -390, 2, -391,
	-385, -227, 494, 2, 2, 2, 2, 2, 187, -198,
	411, 105, 2, 229, 2, 2, 2, 2, 2, 2,
	2, 2, -287, 187, 2, -227, -287, 187, 2, -287,
	187, 2, -327, 2, 81, -211, 187, 2, -235, 187,
	2, -230, -438, 187, 2, -437, -398, 2, -397, -434,
	456, -83, 496, -83, 496, 378, 496, -437, -227, -227,
	-354, -101, -99, -98, -437, 496, 167, -354, -101, -163,
	164, 2, 106, 411, -144, 2, 164, 451, 2, 8,
	2, -437, 369, 330, 156, 2, 382, 2, 383, 68,
	-328, 472, 68, 167, 2, 167, 2, -311, 2, 466,
	-495, 2, 288, 167, 2, 167, 2, 167, 2, 167,
	2, 167, 2, 327, 379, 220, 2, -101, 463, -354,
	463, 2, 428, 228, 141, 167, -311, 2, 167, 2,
	167, 2, 5, 2, 328, 397, 2, 218, 323, 397,
	2, -227, -523, 2, 411, 460, 374, 2, 2, 82,
	83, 167, 2, 167, 2, 167, 472, 2, -304, -389,
	-340, -341, -340, 425, -272, -274, -144, 382, 2, -174,
	-302, -176, 164, -330, -331, -177, 241, 151, 284, -178,
	-310, 27, 122, -310, -310, 55, 497, 497, 11, 12,
	70, 40, 487, 488, 489, 490, 162, 491, 492, 485,
	486, 484, 477, 478, 482, 224, 225, 88, 481, 479,
	80, 251, 363, 152, 153, 154, 155, 343, 200, 33,
	201, 14, 15, 16, 32, 293, 240, 473, 191, 386,
	480, 17, 18, 19, 215, 217, 276, 47, 194, -206,
	-247, -354, -354, -354, -354, -354, -354, -354, 300, 496,
	-300, -349, 494, -169, 496, 496, 496, -427, 8, -169,
	-354, -368, 497, -292, 496, -169, -368, -363, 496, 361,
	494, 496, -371, -354, 5, 5, 5, 496, 498, -477,
	467, 164, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 319, -409, 496,
	-408, 496, -408, -408, 461, -406, 496, 474, 468, 496,
	-406, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 461, 501, -474, -269, 496, -296,
	-392, -354, 489, -296, -296, 288, -289, -354, 94, -314,
	221, 265, 168, 237, 356, 207, -351, 500, -351, -379,
	474, -169, -386, -226, -169, -388, 496, -384, -379, -84,
	-427, -69, -81, -89, -101, -114, -148, -149, 489, -227,
	496, 167, 496, 498, -431, 167, -278, -211, -227, -239,
	-240, -245, 121, -289, -492, -278, -201, 37, -365, -401,
	-402, -448, 500, -447, -404, -414, -410, -413, 315, 316,
	-433, 50, 457, -416, 212, 4, -439, -441, 209, 210,
	389, 48, 332, 159, 111, 110, 281, 52, 421, 422,
	423, 424, 171, 172, 458, 400, 63, 64, -492, -278,
	164, -430, -289, 37, -341, 2, 112, -435, 42, -532,
	501, 239, -249, 250, 273, 183, 289, 470, 282, -436,
	5, 4, -364, -376, 112, 244, 212, -421, -423, 8,
	-422, 9, -424, 487, 488, -429, -428, 96, 498, -431,
	-185, 344, -184, 23, 28, 126, 454, 142, -259, 204,
	307, 136, 393, 444, -502, -503, 366, 416, 417, 84,
	282, 344, 136, -307, -309, 37, 104, 268, 302, 56,
	197, 255, 256, 395, 462, 136, 344, -503, 344, -503,
	-187, 393, 444, -502, -503, 366, 344, -186, -259, 136,
	500, 23, 344, 381, 303, -516, -517, 126, 28, -499,
	-471, 466, 136, -98, -285, 501, 501, -431, 489, 136,
	136, 136, 136, 164, 2, 2, 274, 2, 2, 2,
	169, -505, -521, 2, 2, 2, -227, 187, -271, 288,
	-494, -286, 411, -227, 274, -229, 187, 2, -232, 460,
	-499, 274, 37, 496, 2, -327, 2, 202, -471, 274,
	-390, -242, -227, -385, -242, 381, -220, 37, -351, -351,
	136, 2, 2, 2, -198, -188, 501, 58, 350, 136,
	-188, 136, -188, 136, -246, 187, -245, -188, 136, -188,
	501, 136, 501, 136, 497, 501, -398, -398, -437, -157,
	466, 167, 92, 496, 496, -163, -395, 501, -394, -438,
	-99, -437, -494, -211, 2, -227, 2, 411, 222, -157,
	-437, -437, -437, -430, 27, 383, 2, 327, 379, 83,
	383, 2, -227, 411, 106, 202, 74, -497, 164, -493,
	357, -492, -227, 106, -227, 106, -227, 106, -227, -227,
	2, 2, 2, 2, 79, 79, 164, 2, 428, 2,
	428, 2, -198, -198, -198, 396, 239, -227, 164, 411,
	202, 411, 202, 106, 411, -188, 501, -202, -174, -302,
	-430, -303, -302, -175, -174, -177, 164, 331, 445, 268,
	384, 226, -331, -330, 27, -354, -335, 158, 267, -354,
	-333, -356, 487, 488, -422, -424, -288, 282, -168, -168,
	-168, -275, -381, -354, 322, 202, -403, -401, -401, -225,
	-431, 421, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, 240, 191, 386,
	47, 194, -354, 425, -354, -354, -354, -354, 262, 274,
	278, 433, 149, 442, 122, 282, -535, 406, 39, -361,
	-169, -293, 496, -375, 34, 392, 27, -368, 496, 2,
	-349, -354, -350, -290, -289, -289, 497, 459, 27, 122,
	489, 2, 497, 501, 37, 497, -354, -290, -367, -363,
	-289, -374, -373, 463, -322, -323, 471, 258, 109, 185,
	257, -324, 372, -425, 8, -431, 489, -478, 157, 178,
	496, 497, 2, 497, 2, 497, -354, 2, 497, -354,
	2, 497, -354, 2, 497, -354, 2, 497, 2, -354,
	-354, -354, -354, -354, -354, -354, -289, 8, -425, -425,
	421, 421, -425, -425, -425, -417, 315, 242, 316, 173,
	261, 259, 260, 172, -417, -316, 2, -419, -289, 4,
	471, 258, 109, 185, 257, 372, 5, -316, 2, -317,
	2, -354, -289, -318, -355, -356, 487, 488, 480, -368,
	-319, 2, -354, -290, -354, 53, 234, 427, -320, -354,
	167, -289, -289, 2, -289, 2, -475, 37, -289, -281,
	501, 167, 37, 4, -281, -281, 496, 497, 501, -315,
	182, 254, 249, -315, -384, -314, 221, -312, 298, -312,
	-312, -379, -212, 494, 502, -431, -379, -378, -377, 37,
	-220, 295, -379, -379, 498, 497, -378, 495, -490, 496,
	499, 499, 499, 499, 499, -227, 496, -289, -431, 498,
	398, 497, 215, 215, 215, 215, 362, 497, 425, 466,
	-83, 290, 497, 501, -280, 36, 494, 498, -425, 2,
	2, -420, 461, 496, 496, -323, 496, 167, -279, -512,
	497, 429, -342, -248, 331, 391, 345, 376, 408, 8,
	9, 8, 9, 501, -431, 501, -513, 86, 425, 72,
	-345, 187, 72, -449, -214, 86, -450, -198, 66, 441,
	322, 166, 134, -513, 86, 322, -513, 86, 86, 381,
	396, 55, -389, 40, 40, 27, -101, 235, 167, 472,
	411, 202, 425, -389, -309, -401, 104, 255, 256, 55,
	-426, -421, 487, 488, -426, 55, -426, -426, -426, 466,
	-229, -389, 425, 425, 501, 40, 40, 27, -101, 235,
	167, 425, -245, -212, 455, 41, 455, 425, 41, 368,
	425, 501, 41, 41, -500, -203, 93, 269, 248, 270,
	-204, -205, 309, 453, -437, -395, -237, -198, 498, -354,
	-101, -354, -101, 44, 136, 2, -529, 229, 496, -252,
	274, 167, -278, -396, 213, 501, -286, 136, -308, -307,
	274, -231, 187, 2, -227, 136, 131, 496, 329, 2,
	-213, 187, -199, -198, -327, -191, 414, 136, -306, 451,
	-336, -101, 496, 112, 37, -336, -297, -298, -393, -299,
	-214, 496, -220, -198, 2, -227, -287, -287, -287, -188,
	501, 136, -211, -230, -235, -437, -438, -83, -397, 497,
	497, 497, -156, 292, -155, -198, 5, -163, 451, -251,
	-346, -345, -453, -454, -449, 240, 202, 441, 214, 150,
	-270, -215, -214, 105, -157, -98, 497, -395, -157, -157,
	-395, -395, -227, 164, -157, -157, -157, 2, 2, -311,
	-227, -211, -245, -227, -278, -278, -311, -211, -311, -211,
	-311, -211, -101, -354, 378, 164, 164, 498, -311, 329,
	106, 411, 307, 202, -227, -245, -227, -245, -211, -227,
	-389, -303, -175, 289, 226, 384, -333, -334, -356, 361,
	362, -334, 361, 362, 8, 9, 8, 9, -179, 388,
	277, -287, 501, -182, 38, 119, 226, -227, 472, 132,
	-354, -354, 425, -535, 406, -361, 132, -354, 262, 278,
	433, 149, 442, 122, 282, 167, 496, -355, -355, 497,
	-291, -354, -354, 495, 504, 497, -274, 501, -272, -354,
	-289, -289, 497, 498, -289, -278, 495, 495, 501, 497,
	-372, -373, 127, -354, 425, 425, 425, 425, 496, 497,
	498, -483, 299, 496, 496, -354, 497, 497, 497, 497,
	37, 501, 501, 501, 497, 501, 501, 501, 497, 497,
	497, 501, 497, 472, 472, 497, 497, 497, 497, 501,
	497, 501, 497, 167, 497, 497, -325, 312, 497, 11,
	12, 487, 488, 489, 490, 162, 491, 492, 485, 486,
	484, 477, 478, 479, 80, 251, 363, 14, 15, 16,
	215, 194, -355, -355, -355, 497, -359, -360, 167, 164,
	37, -320, -320, -320, 497, 167, -289, 497, 497, 496,
	-476, 253, 274, 497, -348, -347, 464, -392, -282, 2,
	-384, -222, -431, -348, -348, -289, -354, 221, 221, -313,
	451, 288, -315, -384, -378, -427, -353, -352, 165, 38,
	119, 271, 190, -378, -220, -269, -378, -378, -431, -379,
	-379, -377, 497, -491, -427, 497, -283, -387, -470, -274,
	498, -431, -157, -145, 5, 278, -145, -145, -145, -278,
	24, 313, -401, 494, 495, 8, -431, 496, -425, -425,
	-425, -278, 167, -428, -341, 439, 77, 331, 421, -428,
	-184, 344, -214, -214, -227, 274, -345, 187, -190, 274,
	-401, -221, -198, 496, 496, 226, 226, 451, -214, -221,
	226, 187, -214, 187, -221, -221, -501, 331, 283, -354,
	243, 329, 275, -185, 344, -101, -101, -101, 496, -512,
	451, 121, -227, -245, -227, -231, 344, 272, -239, -426,
	-426, -307, 344, -229, -211, -186, -101, -101, -101, 496,
	-212, -187, 344, 5, 187, -214, 5, -230, -214, -236,
	-515, -435, 103, 380, -517, 23, -214, 187, -214, -203,
	-437, 278, 447, -499, -154, 198, 489, -496, -198, 460,
	-198, -250, -253, -251, -214, -166, 468, 466, 136, -243,
	-227, 494, -157, -437, -227, -236, 136, -269, 274, -437,
	496, 2, 2, 288, 274, -213, 187, -192, 128, -533,
	479, -211, -348, -282, -305, -339, 352, 288, -270, 456,
	-220, -305, -284, 501, 167, 479, 498, -270, 2, -188,
	-188, -188, -245, -246, -188, -188, -83, -83, -157, 501,
	496, 479, 479, 496, -437, -437, 497, 501, -227, -213,
	202, 202, -219, -199, 497, 501, 498, 496, -157, 167,
	-46, 466, 411, 500, -311, -311, -311, 378, 378, -198,
	-223, -211, -227, -224, -245, 164, 164, 445, -334, 289,
	247, -381, -183, 280, -227, 500, -354, -354, 132, 132,
	-354, -355, -355, -354, 132, 167, 496, -354, -365, 32,
	32, 497, 501, -350, -354, 497, 459, -274, -274, 497,
	489, -431, 500, 497, -363, 130, -354, 419, 258, 185,
	257, -324, 257, -324, -324, -425, 5, -431, 489, -484,
	-217, 496, -198, 464, -273, 294, 497, -403, -401, -354,
	-354, -354, -354, -354, -425, -406, -406, -421, -421, -354,
	-359, -354, -403, -401, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, 122, 274, 282, -355, -360, -359, -354,
	-354, -401, 497, 497, 497, -289, -83, 496, 253, -301,
	178, -354, -395, 501, -301, -301, 497, -384, -384, 496,
	-354, 221, 495, 501, 503, 479, -269, 498, -377, -378,
	495, 497, 501, 497, 501, -338, 37, 497, -431, 291,
	5, 8, 494, 495, 498, -425, 497, 497, 497, -278,
	-354, 425, 425, 136, 274, 453, -455, -450, 134, -354,
	-276, -382, -354, 496, 496, 2, -181, 126, 381, -514,
	2, 451, 136, -188, 136, -188, 470, 496, 496, 425,
	466, -289, -354, -158, 112, -430, -503, 500, -503, 500,
	425, 425, 466, -289, 425, -405, 45, 25, 274, -230,
	425, 425, -188, 136, 436, 381, -437, 278, -160, 466,
	167, 425, 2, -231, 2, 497, 497, 501, -456, 37,
	286, 496, 286, -227, -65, 466, -394, -427, -229, 37,
	136, -499, -399, -400, 5, -227, 136, 288, 274, -193,
	233, -533, -435, -471, -274, -305, -296, 275, 85, 497,
	-348, -298, -282, -354, 2, 497, -188, -155, -156, -437,
	-437, -437, -157, -163, -163, -346, -254, 496, -213, -199,
	496, -163, -215, 2, -438, -101, 292, -227, 489, -311,
	-261, -260, 307, 282, -261, 361, 361, 289, 158, 230,
	-182, -212, -354, -354, 132, 32, 32, -354, -354, -365,
	497, -354, -354, -289, 495, 5, -354, 497, 497, 8,
	-354, 497, 498, -485, -198, -354, 497, 55, 497, 497,
	501, 501, 497, 497, 497, 497, 497, 497, 497, -360,
	167, 122, 282, 496, 497, 497, -83, -362, 181, 55,
	-384, -362, -362, -313, -278, -384, -352, -212, 494, -431,
	-427, -387, 496, 498, 495, 2, 494, -431, 497, -214,
	-214, -345, 136, -457, 86, -459, 70, 150, 92, 274,
	278, 441, 322, 66, 112, 336, -525, 37, 476, 497,
	497, 501, -182, -276, -278, 274, 403, 112, 274, 112,
	105, 436, 73, -214, -221, -278, -278, -227, 143, 497,
	501, 479, 2, 489, 489, -231, -229, 143, 497, -212,
	5, 5, 136, -209, 70, 5, -214, -214, -230, 105,
	-162, 292, -161, 129, 354, 120, -438, -98, -269, -257,
	205, -214, -454, -451, -452, 322, -458, -460, 150, 322,
	-101, -165, -164, -198, 5, 2, 496, -252, 292, 495,
	-308, -101, -231, 497, 501, -329, 451, -212, -227, 136,
	-194, 232, -533, -435, -191, -332, -330, -337, 496, 288,
	-101, -274, 479, 497, 497, 105, 105, 196, 135, -276,
	496, 496, -278, 105, 497, -47, -48, 202, 86, 311,
	-224, 411, 202, 496, 496, -182, -354, -354, -354, 497,
	-274, -431, 489, -479, 307, 497, -381, -354, -354, -355,
	167, 496, -365, 497, -480, 465, -354, -289, -480, -480,
	497, -427, 2, 494, 2, -345, -221, -225, -218, -198,
	150, 187, 278, 226, 496, -355, -227, 496, 2, 29,
	-526, 116, 206, -344, -527, 91, 404, 195, -382, -183,
	497, 497, 278, 278, -354, -401, 496, -188, -188, 497,
	497, -354, 425, -430, 90, -428, 2, -503, -354, 425,
	5, -188, -225, -188, -188, -209, 436, 501, 496, 479,
	-160, 37, -258, -259, 194, -456, 226, -218, 226, -524,
	466, 497, 501, 479, 479, -250, -166, -66, -67, 426,
	-394, -269, 5, 496, -198, 288, 496, -212, -533, -435,
	-192, -305, 123, -278, 86, -332, -361, -157, 496, 496,
	-255, 75, 87, 113, 186, 170, 203, 396, 401, 27,
	-255, 497, -276, -276, 497, 496, -157, 501, 27, 496,
	27, 496, -227, -245, -289, -289, 497, -274, 55, 501,
	497, 497, -355, -365, 497, -481, -482, -217, 495, 2,
	-459, -218, 274, 451, -354, -200, 496, -354, 37, 206,
	117, 192, -257, 496, -343, 451, 336, -209, -276, 496,
	496, 496, 479, 167, 496, -405, -188, -230, -161, -162,
	-437, -508, 334, -101, -166, 305, 496, -256, 288, 105,
	268, -164, -357, -357, 497, 37, -67, 9, 37, -276,
	-227, -276, 288, -435, -193, 445, 275, 497, -221, -305,
	-438, -438, -343, 497, 497, -438, -48, -278, -278, 497,
	497, -486, 329, 362, 180, -289, -275, 497, 501, 37,
	136, 182, 497, -461, 252, -198, 497, 117, 192, -258,
	-278, -257, 182, -227, -504, 451, 497, -263, -262, -260,
	-265, -264, -260, -289, -428, 90, 305, -289, -209, 497,
	-511, 168, 266, -510, 5, 10, -256, -227, -277, -383,
	-214, 76, 105, -257, -101, -101, 497, -329, 497, -227,
	-194, 381, -347, 497, 497, -344, -343, -348, 497, 497,
	497, 497, -487, -488, 47, 438, 96, -354, -487, -487,
	-482, -484, 150, 466, -462, -465, -464, 288, 387, 168,
	306, 497, 403, 462, -526, 497, 466, -269, -354, -343,
	497, 501, 456, 497, 501, 456, 497, 167, 497, -188,
	-159, 466, 44, 496, 497, 501, 321, 118, 126, -258,
	-524, -343, 496, -344, 496, -297, -157, -157, -257, -344,
	-157, -489, 134, -488, 318, 163, 361, 318, 163, -489,
	-489, -218, 51, -464, 288, -465, 288, 445, 118, -348,
	51, -461, -257, -262, 194, -264, 167, 305, 139, -510,
	29, -278, -383, 362, 362, 2, -166, -256, -344, -276,
	-257, -276, -348, -258, -257, 96, 178, 420, 268, 32,
	479, -463, 268, 350, 58, 381, -463, 479, -462, 496,
	496, 367, 497, 2, -256, -257, 497, -258, 497, -348,
	-258, 361, 296, -488, -354, 22, 278, 112, -354, -526,
	-289, -289, 292, -189, 58, 350, -258, -343, -348, -344,
	-348, 497, 497, -156, 496, -348, -344, -257, -258, 425,
	-156, -257, -258, 496, 497, -258, -348, -289, -348, 497,
	-258,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 429, 430, 432, 433, 434, 436, 437, 439, 441,
	443, 445, 446, 448, 450, 452, 453, 454, 455, 456,
	458, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 520, 0, 1054, 1056, 1058,
	1060, 0, 650, 0, 30, 31, 0, -2, 242, 244,
	246, 0, 271, 273, 274, 276, 278, -2, 0, 374,
	375, 377, -2, -2, 0, 0, 507, 509, 0, 0,
	0, 529, 530, 0, 1142, -2, 523, 525, 527, 592,
	594, 596, 598, 600, 602, 604, 605, 607, 609, 611,
	613, 615, 617, 619, 620, 622, 624, 626, 628, 630,
	632, 634, 636, 638, 640, 642, 644, -2, 646, -2,
	-2, 0, -2, -2, -2, 1072, 34, 36, 38, 40,
	42, 44, 46, 48, 325, 326, 328, 330, 332, 334,
	337, 339, 341, 1200, 379, 381, 383, 385, 387, 389,
	0, -2, 1212, 0, 0, 50, 51, 52, 53, 54,
	55, 56, 57, 73, 74, 75, 76, 77, 78, 79,
	80, 61, 63, 64, 68, 69, 71, 59, 0, 0,
	1173, 1175, 1177, 1179, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 431, 435, 438, 440,
	442, 444, 447, 449, 451, 457, 459, 461, 416, 417,
	420, 1832, 1849, 1850, 1851, 1854, 1855, 1856, 1857, 1858,
	1859, 2218, 2299, 2300, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 418, 419, 934, 0, 485, 483, 1825, 486,
	2047, 488, 490, 368, 369, 370, 371, 372, 373, 0,
	500, 494, 499, 501, 503, 504, 505, 506, 480, 478,
	0, 500, 1884, 498, 1052, 1053, 1047, 1048, 2082, 1079,
	519, -2, -2, -2, 2184, -2, 551, -2, 558, 2188,
	2084, 563, 0, 565, -2, 568, 1055, 1057, 1059, 648,
	649, 1835, 0, 0, 0, 0, 32, 33, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 983, 984, 985,
	0, 182, 184, -2, -2, -2, -2, 0, 0, 1925,
	1793, 1851, 1796, 1791, 243, 245, 247, 248, 0, 0,
	0, 0, 0, 0, 272, 275, 277, -2, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 829, 821,
	822, 1024, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, -2, 0,
	0, 0, 304, 421, 422, 0, 1201, 1201, 0, 0,
	0, 0, 223, 214, 0, 0, 798, 508, 510, 0,
	0, 209, 0, 0, 1051, 0, 225, 0, 0, 524,
	526, 528, 593, 595, 597, 599, 601, 603, 606, 608,
	610, 612, 614, 616, 618, 621, 623, 625, 627, 629,
	631, 633, 635, 637, 639, 641, 643, 645, 655, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 658, 660, 661, 662, 0, 713,
	730, 647, 0, 974, 1202, 1081, 1062, 1076, 1081, 1064,
	1065, 1066, 1067, 1068, 1073, 1075, 1069, 1070, 1071, 35,
	37, 39, 41, 43, 45, 47, 49, 327, 329, 331,
	333, 335, 338, 340, 342, -2, 1171, 1172, 380, 382,
	384, 386, 388, 390, 511, 0, 513, 0, 659, -2,
	0, 1206, 1206, 1206, 0, 0, 1172, 1170, 0, 516,
	517, 572, 573, 1436, 0, 0, 0, 0, 0, 0,
	0, 1690, 1522, 0, 574, -2, 1553, 1555, 2159, 2184,
	1689, 1557, 1558, 1559, 1560, 1561, 0, 1563, 1564, 1565,
	1566, 1567, 1568, 0, 1570, 0, 1575, 1576, 1577, 0,
	2166, 1770, 1845, -2, 0, 0, 2172, 1841, 0, 1656,
	1593, -2, -2, 1868, 1847, 1368, 1369, 1370, 1371, 1372,
	-2, -2, 2201, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 0, 2148, 2167, 2168, 2173, 2175,
	2169, 2156, 1618, 1936, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1395, 1404, -2,
	-2, -2, -2, -2, -2, 2160, 2161, 2178, 2181, 2187,
	2192, 2193, 2165, 2174, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	1396, -2, -2, -2, -2, 1189, 2058, 1192, 934, 1190,
	1174, 1176, 0, 1178, 0, 0, 0, 1183, 1209, 1207,
	0, 1250, 1187, 1188, 1268, 1268, 1292, 0, 1273, 0,
	1292, 1201, 1318, 0, 1279, 2076, 1594, 1595, 0, 1851,
	1846, -2, -2, 2199, 0, 0, 0, 0, 0, 0,
	0, 481, 0, 487, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 1078, 521, 522, 0, 546, 0, 550,
	2155, -2, 1892, 2093, -2, 554, 1082, 1086, 1087, 1088,
	1089, 0, 0, 0, 0, 0, 560, 0, 0, 547,
	548, 566, 569, 0, 651, 652, 653, 654, 58, 0,
	2167, 1318, 60, 0, 1815, 1876, 1877, 1878, 1879, 1880,
	2200, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2201, 62, 0, 2167, 65, 0, 2167, 0, -2,
	70, 0, 1821, 72, 0, 1818, 81, 0, 2167, 0,
	1790, -2, 0, 167, 1829, -2, 2167, 982, 226, 227,
	1864, 1865, 1872, 1873, 1874, 1875, 0, 0, 790, 1787,
	1792, 791, 1797, 0, 249, 250, 251, 252, 253, 2167,
	255, 256, 0, 258, 259, 2167, 261, 262, 0, 264,
	0, 194, 195, 280, 281, 0, 283, 0, 2167, 0,
	0, 0, 289, -2, 305, 0, 302, 0, 293, 294,
	296, 297, 298, 299, 0, 346, 344, 1826, 0, 799,
	2167, 801, 1831, 0, 0, 1003, -2, 2167, 979, 1009,
	1005, 0, -2, 0, 1199, 2167, 1096, 825, 826, 827,
	828, 0, 365, 0, 1109, 0, 1111, 0, 1132, 1324,
	1268, 1268, 0, 306, 307, 308, 309, 310, 2167, 0,
	0, 0, 315, 0, 317, 318, 319, 320, 321, 322,
	323, 324, 156, 2167, 393, 414, 156, 2167, 396, 156,
	2167, 399, 0, 402, 1022, 156, 2167, 405, 156, 2167,
	408, 409, 411, 2167, 413, 228, 0, -2, 474, 1834,
	-2, 424, 0, 425, 0, -2, 0, 240, 0, 0,
	796, 797, 1305, 212, 210, 0, 0, 1049, 1050, 0,
	0, 531, 0, 0, 656, 657, 0, 0, 667, 668,
	669, 240, 2085, 2055, 1955, 674, 0, 677, 680, -2,
	0, 0, 0, 0, 684, 0, 689, 690, 691, 0,
	795, 693, 0, 0, 695, 0, 699, 0, 702, 0,
	704, 0, 706, -2, -2, -2, 717, -2, 0, 721,
	0, 723, 0, 0, 0, 0, 738, 739, 0, 744,
	0, 747, 748, 749, 0, 751, 752, 0, 754, 755,
	756, 757, 0, 759, 760, -2, -2, 764, 766, 0,
	773, 0, 777, 0, 781, 0, 663, 664, 156, 1322,
	1061, -2, 1063, 0, -2, 0, 512, 0, 515, 1229,
	1157, 1154, 0, 1226, 1227, 1158, 0, 0, 0, 1165,
	0, 1204, 1205, 0, 0, 0, 1144, 1145, 0, 0,
	0, 0, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1704,
	1701, 1702, 1705, 1706, 0, 0, 0, 0, 0, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 1709, 1710, 0, 0, 1712, 0, 1714, 0,
	0, 0, 0, 0, 0, 1501, 1503, 1778, 0, 0,
	1711, 1441, 1442, 1443, 1444, 1445, 1480, 1481, 0, 0,
	1554, 1775, 1774, 1556, 0, 1726, 0, 1569, 1811, -2,
	0, 1690, 1721, 0, 0, 1578, 1579, 1580, 0, 0,
	1726, 0, 0, 1769, 1590, 1591, 1433, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1382, 1381, 0,
	1383, 0, 1384, 1385, 1392, 1405, 0, 0, 0, 0,
	1409, 0, 0, 0, 0, 0, 0, 0, 1750, -2,
	0, 0, 0, 0, 1397, 0, 1191, 0, 0, 1254,
	1779, 1783, 1784, 1254, 1254, 0, 0, 1727, 1315, 1315,
	0, 0, 1311, 1311, 1311, 1309, 1292, 0, 1292, 1302,
	0, 1292, 1292, 0, -2, 1273, 0, 0, 1302, 0,
	1286, 462, 464, 466, 468, 469, 470, 472, 1319, 1320,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 492, 502, 1201, 0, 1729,
	1341, 1345, 0, 1347, 1348, 1349, 1350, 1351, 0, 0,
	1342, -2, 1393, 1395, 1416, 1869, 1870, 1871, 1376, 1377,
	1378, 1379, 1380, 1388, 1375, 1375, 1375, 1386, 1415, 1407,
	1415, 1411, 1362, 1363, 1398, 1399, 1400, 1401, 0, 496,
	0, 0, 0, 0, -2, 556, 561, 562, 0, 0,
	1084, 0, 1090, 583, 584, 585, 1092, 1093, 0, 559,
	586, 587, 588, 589, 590, 591, 0, 1799, 1800, 1801,
	1802, 1805, 1806, 0, 0, 557, 576, 564, 0, 570,
	82, 1044, 121, 0, 1044, 1044, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 106, 117, 94, 95, 0,
	0, 0, 0, 66, 956, 0, 959, 0, 0, 0,
	0, 0, 0, 0, 972, 0, 0, 105, 0, 100,
	84, 0, 0, 0, 107, 119, 0, 147, 149, 0,
	0, 0, 0, 0, 0, 166, 174, 0, 0, 980,
	0, 1198, 0, 1305, 789, 0, 0, 1852, 1795, 0,
	0, 0, 0, 0, 282, 284, 0, 286, 287, 288,
	0, 1002, 0, 295, 292, 336, 905, 2167, 0, 0,
	363, 358, 0, 360, 0, 955, 2167, 953, 1830, 0,
	977, 0, 0, 0, 1010, 1861, 1019, 1023, 1098, 0,
	367, 0, 1112, 1114, 0, 0, 1325, 0, 1327, 1328,
	0, 312, 313, 314, 0, 391, 0, 154, 155, 0,
	394, 0, 397, 0, 156, 2167, 1785, 403, 0, 406,
	0, 0, 0, 0, 1201, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 240, 0, 1304, 0,
	1305, 240, 240, 1305, 533, 1305, 535, 0, 0, 670,
	240, 240, 240, 675, 676, 678, 679, -2, -2, 774,
	681, 682, 741, 0, 0, 0, 740, 692, 0, 783,
	2072, 793, 741, 1925, 741, 1925, 741, 1925, 703, 705,
	708, 733, 716, 720, 0, 0, 0, 725, 0, 727,
	0, 729, 741, 742, 745, 750, 753, 758, 0, 0,
	0, 0, 0, 0, 0, 973, 0, 1074, 1229, 1157,
	514, 1148, 1228, 1149, 1156, 1159, 0, 0, 1161, 0,
	1163, 0, 1224, 1225, 1232, 1233, 0, 1243, 1244, 1236,
	0, -2, 0, 0, 1239, 1240, 1167, 0, 1184, 1185,
	1186, 1213, 1216, 1033, 0, 2299, 1437, 1336, 1438, 1439,
	1814, 0, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, -2, -2, -2, -2, -2, -2, -2, -2,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, -2, -2, -2, 1478, 1479, -2, 1713, 1715, 0,
	1778, 0, -2, 0, -2, -2, -2, -2, 1498, 0,
	1500, 1505, 1507, 1509, 0, 0, 0, 0, 1777, 1519,
	1761, 1762, 0, 0, 1692, 1693, 1694, 1504, 0, 1523,
	1776, 1773, 0, 0, 1725, 1212, 1582, 0, 0, 0,
	0, 1589, 1574, 1723, 0, 1722, 0, 0, 0, 1733,
	0, 1768, 1764, 0, 1812, 1432, 1419, 1420, 1421, 1422,
	1423, 1424, 1434, 0, 1809, 1838, 1844, 1666, 0, 0,
	0, 1619, 1620, 1621, 1622, 1623, 0, 1625, 1626, 0,
	1628, 1629, 0, 1631, 1632, 0, 1634, 1635, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 0, 0, 1638, 0, 1736, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1640, 0,
	1642, 1727, 1747, 0, 0, 1524, 0, 0, 0, 1690,
	0, 1645, 1727, 1755, 0, 0, 0, 0, 0, 1727,
	0, 1760, 0, 1652, 0, 1654, 1193, 0, 0, 1331,
	0, 0, 0, 1782, 1331, 1331, 0, 1249, 0, 0,
	1312, 1313, 1314, 0, 0, 1315, 0, 1306, 1310, 1307,
	1308, 1302, 1265, 0, 0, 1816, 1302, 1271, 1301, 0,
	934, 1291, 1302, 1302, 0, -2, 1275, 1292, 0, 0,
	463, 465, 467, 471, 473, 0, 0, 1212, -2, 0,
	240, 933, 0, 0, 0, 0, 482, 484, 0, 0,
	476, 0, 479, 0, 1332, 1335, 0, 0, 1346, 1352,
	1353, 0, -2, 0, 0, 1417, 0, 0, 0, 0,
	549, 0, 1083, 1091, 0, 580, 0, 582, 0, 1803,
	1807, 1804, 1808, 0, 571, 0, 0, 0, 0, 1043,
	125, 2167, 0, 158, 0, 0, 898, 1822, 0, 0,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 91, 96, 0, 0, 0,
	0, 0, 0, 0, 957, 958, 960, 967, 969, 0,
	963, 1810, 0, 0, 964, 0, 966, 968, 970, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 97, 0,
	0, 0, 0, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 998, 996, 990, 991, 992, 993,
	994, 995, 0, 0, -2, 231, 1788, 1798, 0, 254,
	257, 260, 263, 183, 0, 290, 0, 0, 831, 804,
	0, 0, 345, 240, 0, 0, 359, 0, 951, 954,
	0, 934, 2167, 989, 1828, 0, 0, 0, 0, 1008,
	0, 2167, 1817, 1860, 1861, 1100, 1106, 0, 1331, 0,
	1130, 1115, 0, 0, 0, 1130, 1134, 1135, 1137, 1138,
	0, 0, 1326, 0, 316, 415, 156, 156, 156, 400,
	0, 0, 156, 410, 156, 229, 412, 423, 475, 1201,
	1201, 240, 238, 2031, 236, 233, 235, 0, 0, 0,
	832, 834, 835, 836, 837, 0, 1861, 0, 1981, 1861,
	0, 1118, 1120, 0, 207, 213, 211, 240, 0, 357,
	532, 537, 665, 0, 671, 672, 673, 710, 735, 683,
	685, 686, 687, 0, 794, 792, 694, 741, 697, 741,
	700, 741, 719, 722, 724, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 778, 779, 780, 782,
	1323, 1152, 1153, 1155, 0, 1164, 0, 0, 1238, -2,
	-2, 1237, 1241, 1242, -2, -2, -2, -2, 1160, 0,
	1169, 1166, 0, 1223, 1031, 1032, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1520, 0, -2, 1499, 1502,
	1506, 1508, 1510, 0, 0, 0, 0, 0, 0, 1716,
	0, 1718, 1521, 1771, 1774, 1688, 0, 0, 1211, 1212,
	1212, 0, 1588, 0, 1724, 0, 1731, 1732, 0, 1581,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 1624, 1627, 1630, 1633,
	0, 0, 0, 0, 1613, 0, 0, 0, 1617, 1387,
	1373, 0, 1415, 1413, 1414, 1408, 1415, 1412, 1365, 0,
	1364, 0, 1637, 0, 1639, 1641, 0, 0, 1643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1527, 1528, 1529, 1644, 1753, 1754, 0, 0,
	0, 0, 0, 0, 1650, 0, 1759, 1651, 1653, 1201,
	0, 1194, 0, 1251, 1246, 1330, 0, 1780, 1305, 1253,
	1255, 1781, 1819, 1246, 1246, 0, 1728, 0, 0, 1296,
	0, 0, 0, 1298, 1269, 0, 0, 1263, 0, 1259,
	1260, 1261, 1262, 1270, 934, 1300, 1272, 1276, 1838, 0,
	1302, 0, 1287, 0, 1289, 1321, 0, 1281, 1284, 0,
	0, 1853, 241, 265, 269, 270, 266, 267, 268, 491,
	0, 0, 1730, 0, 1337, 0, 1343, 0, 0, 0,
	0, 495, 0, 545, -2, 578, 579, 581, 0, 577,
	122, 1044, 0, 0, 1035, 0, 127, 2167, 136, 0,
	872, 0, 1820, 0, 0, 0, 0, 0, 1046, 0,
	0, 2167, 156, 2167, 156, 139, 142, 0, 146, 144,
	0, 0, 863, 83, 1044, 86, 90, 98, 0, 0,
	0, 104, 0, 0, 0, 1037, 0, 961, 962, 965,
	971, 67, 0, 1039, 1034, 148, 88, 92, 99, 0,
	1041, 85, 0, 170, 0, 0, 0, 162, 0, 163,
	164, 171, 172, 173, 175, 0, 156, 2167, 0, 997,
	975, 976, 0, 981, 187, 0, 1794, 0, 0, 0,
	0, 0, 0, 830, 916, 0, 0, 0, 0, 351,
	347, 0, 356, 362, 361, 800, 0, 0, 0, -2,
	1012, 1006, 1007, 0, 0, 0, 2167, 1102, 1106, 0,
	1105, 1199, 1212, 366, 1107, 1130, 0, 0, 0, 1117,
	1113, 1110, 1331, 0, 0, 0, 0, 0, 311, 392,
	395, 398, 1786, 156, 404, 407, 426, 427, 215, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 841, 0,
	1861, 1861, 0, 1824, 0, 0, 0, 0, 208, 0,
	534, 0, 0, 0, 696, 698, 701, 726, 728, 741,
	767, 768, 858, 0, 858, 0, 0, 1162, 0, 1235,
	1168, 1217, 1218, 0, 1033, 0, 1440, 1483, 0, 0,
	-2, 0, 0, 1487, 0, 0, 0, -2, 0, 0,
	0, 1717, 1719, 0, 1773, 1583, 0, 0, 0, 1587,
	1571, 1572, 0, 1691, 1734, 1763, 1767, 0, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 0, 1813, 1839, 1843, 1664,
	1665, 1669, 1827, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 1410, 0, 0, 1735,
	1746, 1748, 1525, 1526, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, -2, -2, -2, 1543, 1544, 1545,
	-2, -2, -2, 0, 0, 0, 1749, 1751, 1752, 1756,
	1757, 0, 1647, 1648, 1649, 1758, 0, 1201, 1195, 1248,
	0, 1329, 1252, 0, 1248, 1248, 1208, 1294, 0, 0,
	1317, 0, 1266, 0, 1267, 0, 1299, 0, 1274, 1277,
	1278, 1288, 0, 1280, 0, 1283, 0, 1583, -2, 493,
	477, 0, 0, 1339, 0, 0, 1390, 1394, 1418, 497,
	1303, 0, 0, 0, 0, 157, 870, 897, 0, 0,
	0, 1026, 1033, 0, 0, 903, 129, 0, 0, 0,
	137, 0, 0, 134, 0, 141, 145, 0, 0, 0,
	0, 0, 101, 102, 103, 0, 108, 0, 109, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 1030,
	0, 0, 177, 0, 0, 0, 1000, 1001, 181, 0,
	0, 0, 285, 934, 291, 852, 904, 0, 906, 0,
	805, 0, 0, 905, 343, 0, 350, 0, 955, 0,
	0, 978, 0, 1011, 1013, 1021, 0, 0, 0, 1104,
	1106, 0, 1097, 1098, 1231, 1108, 1128, -2, 1127, 0,
	1212, 1136, 1133, 1139, 1140, 0, 401, 237, 0, 232,
	234, 0, 218, 0, 0, 833, 838, 0, 0, 0,
	0, 0, 1119, 1121, 0, 224, 0, 666, 688, 736,
	769, 857, 0, 0, 771, 0, 0, 1234, 1221, 1222,
	1219, 1033, 1485, 1489, 0, 0, 0, 1491, -2, 0,
	1513, -2, -2, 1720, 1772, 1562, 1212, 1584, 1586, 1573,
	1766, 1435, 0, 1671, 1668, 0, 1655, 0, 1608, 1609,
	0, 0, 1612, 1614, 1615, 1616, 1374, 1367, 1366, 1745,
	0, 0, 0, 0, 1646, 1196, 0, 1660, 0, 0,
	1256, 1660, 1660, 1295, 0, 1297, 1264, 1257, 0, 1839,
	1290, 1282, 0, 0, 1333, 1338, 0, 1344, 1389, 123,
	124, 126, 0, 871, 0, 874, 0, 0, 0, 0,
	881, 882, 0, 0, 0, 0, 0, 891, 0, 920,
	930, 0, 1223, 0, 0, 0, 131, 151, 0, 0,
	1045, 0, 0, 156, 156, 0, 0, 1036, 0, 0,
	0, 0, 111, 0, 0, 1038, 1040, 0, 0, 1042,
	168, 169, 0, 156, 0, 161, 156, 156, 1030, 0,
	185, 0, 188, 0, 191, 192, 230, 187, 0, 860,
	0, 916, 908, 909, 910, 0, 915, 917, 0, 0,
	818, 0, 814, 0, 0, 807, 831, 804, 0, 348,
	952, 986, 934, 1004, 0, 0, 0, 0, 0, 0,
	1094, 1106, 0, 1099, 1100, 1130, 1230, 0, 0, 0,
	1116, 1231, 0, 239, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 536, 538, 0, 0, 544,
	856, 0, 0, 0, 0, 1220, 1493, -2, -2, 1514,
	0, 1840, 1842, 1212, 0, 1657, 1214, 0, 0, -2,
	0, 0, 0, 1197, 1180, 0, 1247, 1245, 1181, 1182,
	1316, 0, 1285, 0, 1340, 128, 0, 875, 876, 1823,
	878, 0, 880, 883, 0, 886, 1863, 0, 890, 0,
	899, 921, 0, 852, 0, 926, 927, 928, 1027, 1028,
	932, 0, 130, 132, 150, 1030, 0, 133, 140, 0,
	0, 87, 0, 0, 1918, 114, 112, 110, 89, 0,
	170, 176, 1029, 165, 178, 156, 0, 0, 0, 0,
	0, 0, 804, 859, 0, 907, 0, 918, 919, 808,
	0, 806, 0, 0, 0, 0, 0, 349, 352, 0,
	355, 0, 1014, 0, 1020, 0, 0, 0, 0, 1101,
	1102, 364, 0, 0, 0, 1130, 1141, 217, 0, 0,
	839, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	840, 932, 0, 0, 896, 0, 222, 0, 540, 0,
	542, 0, 770, 772, 0, 0, 1585, 1675, 0, 0,
	1610, 1611, -2, 0, 1551, 1659, 1661, 0, 1258, 1334,
	873, 877, 0, 0, 0, 938, 0, 0, 892, 0,
	924, 925, 860, 0, 852, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 160, 179, 1030, 189, 0,
	190, 203, 0, 987, 808, 0, 0, 816, 0, 819,
	0, 815, 812, 813, 852, 0, 353, 354, 0, 0,
	1021, 0, 0, 1103, 1104, 0, 1123, 1124, 1126, 1131,
	0, 0, 930, 932, 1331, 0, 539, 0, 0, 775,
	776, 0, 0, 0, 0, 1670, 1215, 1552, 0, 0,
	0, 0, 885, 943, 0, 0, 0, 922, 923, 920,
	0, 901, 0, 934, 135, 0, 932, 0, 864, 0,
	0, 867, 0, 0, 115, 1918, 113, 0, 156, 186,
	206, 0, 199, 200, 197, 198, 802, 0, 0, 912,
	914, 0, 820, 860, 818, 988, 932, 0, 930, 0,
	1095, 0, 1125, 240, 240, 852, 930, 895, 240, 541,
	543, 1667, 1687, 1676, -2, 2128, 1922, 0, 1687, 1687,
	1662, 1663, 0, 0, 887, 939, 940, 0, 935, 936,
	937, 1862, 888, 889, 1331, 929, 0, 938, 152, 852,
	861, 0, 0, 862, 0, 0, 118, 0, 120, 180,
	193, 0, 0, 0, 911, 0, 0, 0, 0, 804,
	808, 930, 0, 852, 0, 1331, 219, 220, 860, 852,
	221, 1672, 0, 0, 1678, 1679, 1680, 1681, 1682, 1673,
	1674, 879, 0, 941, 0, 942, 0, 0, 0, 900,
	0, 943, 138, 865, 0, 868, 0, 116, 0, 201,
	202, 0, 913, 809, 0, 811, 808, 817, 852, 0,
	860, 0, 1122, 1331, 860, 0, 1684, 1685, 0, 0,
	0, 944, 0, 947, 948, 0, 945, 0, 920, 0,
	0, 0, 855, 810, 803, 860, 932, 1331, 930, 893,
	1331, 1683, 1686, 1677, 884, 946, 949, 950, 931, 902,
	0, 0, 0, 851, 853, 854, 1331, 930, 1017, 852,
	894, 860, 0, 204, 0, 1015, 852, 860, 866, 0,
	0, 860, 1331, 0, 205, 1331, 1018, 0, 1016, 860,
	869,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 485, 3, 491, 486, 3,
	496, 497, 489, 487, 501, 488, 498, 490, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 504, 3,
	477, 479, 478, 482, 500, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 494, 3, 495, 492, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 502, 484, 503, 480,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 481,
	57820, 483, 57821, 493, 57822, 499, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1179
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1184
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1186
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1189
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1190
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1191
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1192
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1193
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1194
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1195
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1196
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1203
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1216
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1217
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1303
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1329
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1333
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 67:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1337
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1370
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1402
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1406
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1410
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1416
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1420
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1426
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1435
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1446
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1450
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1456
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1464
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1474
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1478
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1488
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1499
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1518
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1525
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1533
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1538
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1542
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1547
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1553
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1561
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1572
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1582
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1592
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1601
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1612
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1618
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1626
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1630
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1638
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1644
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1649
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1674
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1686
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1701
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1752
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1769
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 138:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1788
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1818
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1853
		{
			sqlVAL.union.val = nil
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = nil
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1935
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].union.unresolvedObjectName(),
				},
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1963
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1967
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1971
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1974
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1985
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1992
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2036
		{
			backup := &tree.Backup{
				To:              sqlDollar[4].union.partitionedBackup(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}

			tl := sqlDollar[2].union.targetListPtr()
			if tl == nil {
				backup.DescriptorCoverage = tree.AllDescriptors
			} else {
				backup.DescriptorCoverage = tree.RequestedDescriptors
				backup.Targets = *tl
			}

			sqlVAL.union.val = backup
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2054
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2062
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2089
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.partitionedBackup(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2199
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2216
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = nil
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2230
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2293
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2354
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2363
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2369
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2374
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2379
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2384
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2389
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2393
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2412
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2420
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = nil
		}
	case 241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2490
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2504
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2505
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2506
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2507
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2525
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2557
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2566
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2593
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2602
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2614
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2633
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2638
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2650
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2652
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2653
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2655
		{
			return helpWith(sqllex, "CREATE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			return unimplemented(sqllex, "create cast")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2660
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2661
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2662
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2663
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2664
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2665
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2666
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2668
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2669
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2670
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2671
		{
			return unimplemented(sqllex, "create operator")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2672
		{
			return unimplemented(sqllex, "create publication")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2673
		{
			return unimplemented(sqllex, "create rule")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{
			return unimplemented(sqllex, "create server")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2676
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2680
		{
		}
	case 301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2681
		{
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2684
		{
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2685
		{
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2688
		{
		}
	case 305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2689
		{
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2693
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2695
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2696
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2697
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2698
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2699
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2700
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2701
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2702
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2705
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			return unimplemented(sqllex, "drop server")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2708
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2709
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2710
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2718
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2720
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2721
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2723
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2741
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2759
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2768
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2791
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2802
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2830
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2865
		{

			sqlVAL.union.val = nil
		}
	case 364:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2889
		{
			return helpWith(sqllex, "DELETE")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2892
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2893
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2904
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2906
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2907
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2908
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2918
		{
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			return helpWith(sqllex, "DROP")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2922
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2923
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2972
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3073
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3138
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3162
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3170
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "DELETE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3191
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "INSERT")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3193
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3196
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3197
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3205
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3212
		{
			return helpWith(sqllex, "DELETE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "INSERT")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3247
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3255
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3280
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3321
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "GRANT")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3392
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "RESET")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3421
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "RESET")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "USE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3466
		{
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "USE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3542
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{
			return unimplemented(sqllex, "set from current")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3702
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3707
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = tree.Low
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = tree.Normal
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = tree.High
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3841
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3842
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "SHOW")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3872
		{
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3876
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3890
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3895
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.str = "client_encoding"
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.str = "timezone"
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3922
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3940
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3955
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3979
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3988
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3997
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4005
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4015
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4070
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4094
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = true
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = true
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = false
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4239
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = true
		}
	case 731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = false
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = true
		}
	case 741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = false
		}
	case 742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4312
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4326
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4344
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4365
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4370
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4379
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4391
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4434
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4442
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4479
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4502
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4518
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4525
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4658
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4742
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4813
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4828
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = nil
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{

			sqlVAL.union.val = nil
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4855
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4870
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4875
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4880
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 816:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4907
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4920
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4934
		{
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = true
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = true
		}
	case 823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = false
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = true
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = true
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = true
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = true
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4964
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5008
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5019
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5022
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5025
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5026
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5032
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5048
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5053
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.str = ""
		}
	case 860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 861:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 866:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 869:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5242
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5256
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5267
		{
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
		}
	case 893:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5363
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5374
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5401
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5416
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5481
		{
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5482
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5485
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5486
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5558
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5642
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5651
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5659
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5675
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5685
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5688
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5690
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5695
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5700
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5713
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5738
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = true
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5763
		{

			sqlVAL.union.val = true
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = false
		}
	case 986:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5778
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5792
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5804
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5815
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = nil
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5868
		{
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5869
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5885
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5887
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5889
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5891
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5893
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5931
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:5948
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5966
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5982
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5998
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6002
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = false
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = true
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6027
		{
			sqlVAL.union.val = false
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = true
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = false
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.str = ""
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6103
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6109
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6117
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6123
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6131
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6137
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6155
		{
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6158
		{
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6159
		{
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6170
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6203
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6209
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6228
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6261
		{
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6262
		{
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6282
		{
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6283
		{
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6311
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6324
		{
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6326
		{
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6330
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6395
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.str = ""
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.str = ""
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.str = ""
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.str = ""
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6439
		{
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6483
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6487
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6496
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6545
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6562
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6563
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6571
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6609
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6641
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6791
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6827
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6828
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6889
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6949
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = true
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = false
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7002
		{
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7003
		{
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = nil
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7016
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7017
		{
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = true
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = false
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = false
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = true
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7046
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7047
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7088
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7109
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7114
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7289
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7291
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7306
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7328
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7333
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7349
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7361
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7380
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7419
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7429
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7464
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7475
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7505
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7538
		{
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7540
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = nil
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = true
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = false
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.str = tree.AstFull
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.str = tree.AstRight
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.str = tree.AstInner
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7657
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7658
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.str = tree.AstHash
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.str = ""
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7720
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7725
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7743
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7749
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7755
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7765
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7807
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7815
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7816
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7834
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7836
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7844
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7857
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7864
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7873
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7913
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7925
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = types.Geography
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7950
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7958
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7984
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7992
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = nil
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = types.Int2
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = types.Int
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = types.Float4
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = types.Float
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8035
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8043
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8051
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = types.Bool
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8065
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = types.Float
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8084
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8090
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8112
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = types.String
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = true
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = false
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = types.Date
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8161
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8169
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8183
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8192
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8200
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8217
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = true
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = false
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = false
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = types.Interval
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8241
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8325
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8340
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = nil
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8370
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8430
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8682
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8748
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8770
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8964
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8969
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8995
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9004
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9019
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9049
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9060
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9061
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9085
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9151
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9276
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9290
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9299
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9308
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9327
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9332
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9347
		{
			return unimplemented(sqllex, "treat")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9368
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9373
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9420
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.str = ""
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9509
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9522
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9590
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9619
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = tree.Any
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = tree.Some
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = tree.All
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = tree.Div
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = tree.LT
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = tree.GT
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = tree.LE
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = tree.GE
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = tree.NE
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = tree.Like
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9981
		{
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10053
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10134
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10150
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10159
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10170
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10187
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10199
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10390
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10397
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.str = ""
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
