// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) fetchCursor() *tree.FetchCursor {
	return u.val.(*tree.FetchCursor)
}

//line sql-gen.y:917
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14442

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 39,
	-2, 1704,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 58,
	270, 435,
	-2, 0,
	-1, 70,
	8, 888,
	29, 888,
	615, 888,
	616, 888,
	-2, 0,
	-1, 77,
	252, 260,
	538, 260,
	-2, 0,
	-1, 91,
	240, 1437,
	254, 1437,
	270, 431,
	407, 431,
	418, 1184,
	459, 431,
	473, 1184,
	522, 1184,
	550, 431,
	577, 1184,
	-2, 0,
	-1, 97,
	137, 1704,
	247, 1704,
	561, 1704,
	562, 1704,
	-2, 0,
	-1, 115,
	156, 1675,
	176, 1675,
	189, 1675,
	250, 1675,
	283, 1675,
	356, 1675,
	367, 1675,
	556, 1675,
	-2, 1646,
	-1, 157,
	164, 1015,
	269, 1015,
	410, 976,
	478, 976,
	521, 976,
	541, 1015,
	543, 976,
	-2, 0,
	-1, 162,
	4, 1706,
	21, 1706,
	22, 1706,
	23, 1706,
	24, 1706,
	25, 1706,
	26, 1706,
	27, 1706,
	28, 1706,
	30, 1706,
	31, 1706,
	37, 1706,
	41, 1706,
	43, 1706,
	44, 1706,
	46, 1706,
	47, 1706,
	48, 1706,
	49, 1706,
	50, 1706,
	51, 1706,
	52, 1706,
	53, 1706,
	54, 1706,
	56, 1706,
	57, 1706,
	58, 1706,
	59, 1706,
	61, 1706,
	62, 1706,
	63, 1706,
	64, 1706,
	65, 1706,
	66, 1706,
	67, 1706,
	71, 1706,
	72, 1706,
	73, 1706,
	74, 1706,
	76, 1706,
	77, 1706,
	78, 1706,
	82, 1706,
	83, 1706,
	84, 1706,
	85, 1706,
	86, 1706,
	87, 1706,
	88, 1706,
	89, 1706,
	92, 1706,
	93, 1706,
	94, 1706,
	95, 1706,
	96, 1706,
	98, 1706,
	100, 1706,
	101, 1706,
	102, 1706,
	103, 1706,
	104, 1706,
	105, 1706,
	107, 1706,
	108, 1706,
	109, 1706,
	111, 1706,
	112, 1706,
	113, 1706,
	121, 1706,
	122, 1706,
	123, 1706,
	124, 1706,
	125, 1706,
	127, 1706,
	128, 1706,
	129, 1706,
	130, 1706,
	132, 1706,
	133, 1706,
	134, 1706,
	136, 1706,
	137, 1706,
	138, 1706,
	140, 1706,
	141, 1706,
	142, 1706,
	145, 1706,
	146, 1706,
	147, 1706,
	149, 1706,
	150, 1706,
	151, 1706,
	153, 1706,
	154, 1706,
	155, 1706,
	157, 1706,
	158, 1706,
	159, 1706,
	160, 1706,
	161, 1706,
	162, 1706,
	163, 1706,
	164, 1706,
	165, 1706,
	166, 1706,
	167, 1706,
	168, 1706,
	169, 1706,
	170, 1706,
	171, 1706,
	172, 1706,
	173, 1706,
	175, 1706,
	181, 1706,
	182, 1706,
	183, 1706,
	184, 1706,
	188, 1706,
	190, 1706,
	191, 1706,
	192, 1706,
	194, 1706,
	197, 1706,
	198, 1706,
	199, 1706,
	200, 1706,
	201, 1706,
	202, 1706,
	203, 1706,
	204, 1706,
	205, 1706,
	206, 1706,
	207, 1706,
	208, 1706,
	209, 1706,
	210, 1706,
	212, 1706,
	213, 1706,
	215, 1706,
	216, 1706,
	218, 1706,
	219, 1706,
	220, 1706,
	221, 1706,
	222, 1706,
	223, 1706,
	224, 1706,
	225, 1706,
	226, 1706,
	227, 1706,
	229, 1706,
	230, 1706,
	232, 1706,
	233, 1706,
	234, 1706,
	235, 1706,
	236, 1706,
	240, 1706,
	241, 1706,
	242, 1706,
	243, 1706,
	246, 1706,
	247, 1706,
	248, 1706,
	249, 1706,
	251, 1706,
	253, 1706,
	254, 1706,
	256, 1706,
	258, 1706,
	259, 1706,
	260, 1706,
	262, 1706,
	266, 1706,
	267, 1706,
	268, 1706,
	269, 1706,
	270, 1706,
	271, 1706,
	273, 1706,
	274, 1706,
	275, 1706,
	277, 1706,
	278, 1706,
	280, 1706,
	281, 1706,
	284, 1706,
	285, 1706,
	286, 1706,
	287, 1706,
	288, 1706,
	289, 1706,
	290, 1706,
	293, 1706,
	294, 1706,
	295, 1706,
	296, 1706,
	298, 1706,
	299, 1706,
	300, 1706,
	301, 1706,
	302, 1706,
	303, 1706,
	304, 1706,
	305, 1706,
	306, 1706,
	307, 1706,
	308, 1706,
	309, 1706,
	310, 1706,
	311, 1706,
	312, 1706,
	313, 1706,
	314, 1706,
	315, 1706,
	316, 1706,
	317, 1706,
	318, 1706,
	319, 1706,
	321, 1706,
	323, 1706,
	324, 1706,
	325, 1706,
	326, 1706,
	327, 1706,
	328, 1706,
	329, 1706,
	330, 1706,
	331, 1706,
	332, 1706,
	333, 1706,
	334, 1706,
	335, 1706,
	336, 1706,
	337, 1706,
	338, 1706,
	339, 1706,
	341, 1706,
	342, 1706,
	344, 1706,
	346, 1706,
	347, 1706,
	348, 1706,
	349, 1706,
	351, 1706,
	352, 1706,
	353, 1706,
	354, 1706,
	355, 1706,
	358, 1706,
	360, 1706,
	362, 1706,
	363, 1706,
	364, 1706,
	365, 1706,
	368, 1706,
	369, 1706,
	370, 1706,
	372, 1706,
	374, 1706,
	375, 1706,
	376, 1706,
	377, 1706,
	378, 1706,
	379, 1706,
	380, 1706,
	381, 1706,
	382, 1706,
	383, 1706,
	384, 1706,
	385, 1706,
	386, 1706,
	388, 1706,
	389, 1706,
	390, 1706,
	391, 1706,
	392, 1706,
	393, 1706,
	394, 1706,
	395, 1706,
	396, 1706,
	397, 1706,
	398, 1706,
	399, 1706,
	400, 1706,
	401, 1706,
	402, 1706,
	404, 1706,
	405, 1706,
	406, 1706,
	408, 1706,
	409, 1706,
	410, 1706,
	411, 1706,
	412, 1706,
	413, 1706,
	414, 1706,
	415, 1706,
	416, 1706,
	417, 1706,
	418, 1706,
	419, 1706,
	420, 1706,
	422, 1706,
	424, 1706,
	425, 1706,
	426, 1706,
	432, 1706,
	433, 1706,
	434, 1706,
	436, 1706,
	437, 1706,
	438, 1706,
	439, 1706,
	440, 1706,
	441, 1706,
	442, 1706,
	443, 1706,
	444, 1706,
	445, 1706,
	447, 1706,
	448, 1706,
	449, 1706,
	451, 1706,
	452, 1706,
	453, 1706,
	454, 1706,
	455, 1706,
	456, 1706,
	457, 1706,
	459, 1706,
	460, 1706,
	461, 1706,
	462, 1706,
	463, 1706,
	464, 1706,
	465, 1706,
	466, 1706,
	467, 1706,
	468, 1706,
	469, 1706,
	470, 1706,
	471, 1706,
	473, 1706,
	474, 1706,
	475, 1706,
	476, 1706,
	477, 1706,
	478, 1706,
	480, 1706,
	481, 1706,
	482, 1706,
	483, 1706,
	484, 1706,
	485, 1706,
	487, 1706,
	488, 1706,
	489, 1706,
	490, 1706,
	491, 1706,
	492, 1706,
	493, 1706,
	494, 1706,
	496, 1706,
	498, 1706,
	499, 1706,
	500, 1706,
	501, 1706,
	502, 1706,
	503, 1706,
	504, 1706,
	505, 1706,
	506, 1706,
	507, 1706,
	508, 1706,
	509, 1706,
	510, 1706,
	511, 1706,
	512, 1706,
	513, 1706,
	514, 1706,
	515, 1706,
	517, 1706,
	518, 1706,
	520, 1706,
	521, 1706,
	523, 1706,
	524, 1706,
	525, 1706,
	526, 1706,
	527, 1706,
	528, 1706,
	529, 1706,
	530, 1706,
	531, 1706,
	533, 1706,
	534, 1706,
	535, 1706,
	536, 1706,
	537, 1706,
	539, 1706,
	541, 1706,
	542, 1706,
	543, 1706,
	544, 1706,
	545, 1706,
	546, 1706,
	547, 1706,
	549, 1706,
	550, 1706,
	551, 1706,
	552, 1706,
	554, 1706,
	555, 1706,
	558, 1706,
	559, 1706,
	560, 1706,
	561, 1706,
	562, 1706,
	563, 1706,
	564, 1706,
	565, 1706,
	567, 1706,
	570, 1706,
	571, 1706,
	572, 1706,
	573, 1706,
	574, 1706,
	575, 1706,
	577, 1706,
	578, 1706,
	579, 1706,
	580, 1706,
	581, 1706,
	582, 1706,
	583, 1706,
	584, 1706,
	589, 1706,
	590, 1706,
	591, 1706,
	592, 1706,
	593, 1706,
	594, 1706,
	-2, 0,
	-1, 163,
	1, 1554,
	135, 1554,
	258, 1554,
	343, 1554,
	405, 1554,
	414, 1554,
	598, 1554,
	628, 1554,
	-2, 0,
	-1, 165,
	1, 1554,
	628, 1554,
	-2, 0,
	-1, 166,
	1, 1554,
	628, 1554,
	-2, 0,
	-1, 167,
	1, 1554,
	538, 1554,
	628, 1554,
	-2, 0,
	-1, 199,
	156, 1674,
	176, 1674,
	189, 1674,
	250, 1674,
	283, 1674,
	356, 1674,
	367, 1674,
	556, 1674,
	-2, 1649,
	-1, 247,
	4, 1713,
	5, 1713,
	6, 1713,
	7, 1713,
	8, 1713,
	9, 1713,
	10, 1713,
	21, 1713,
	22, 1713,
	23, 1713,
	24, 1713,
	25, 1713,
	26, 1713,
	27, 1713,
	28, 1713,
	30, 1713,
	31, 1713,
	37, 1713,
	38, 1713,
	41, 1713,
	43, 1713,
	44, 1713,
	45, 1713,
	46, 1713,
	47, 1713,
	48, 1713,
	49, 1713,
	50, 1713,
	51, 1713,
	52, 1713,
	53, 1713,
	54, 1713,
	56, 1713,
	57, 1713,
	58, 1713,
	59, 1713,
	61, 1713,
	62, 1713,
	63, 1713,
	64, 1713,
	65, 1713,
	66, 1713,
	67, 1713,
	68, 1713,
	69, 1713,
	70, 1713,
	71, 1713,
	72, 1713,
	73, 1713,
	74, 1713,
	76, 1713,
	77, 1713,
	78, 1713,
	80, 1713,
	82, 1713,
	83, 1713,
	84, 1713,
	85, 1713,
	86, 1713,
	87, 1713,
	88, 1713,
	89, 1713,
	92, 1713,
	93, 1713,
	94, 1713,
	95, 1713,
	96, 1713,
	98, 1713,
	100, 1713,
	101, 1713,
	102, 1713,
	103, 1713,
	104, 1713,
	105, 1713,
	107, 1713,
	108, 1713,
	109, 1713,
	110, 1713,
	111, 1713,
	112, 1713,
	113, 1713,
	114, 1713,
	115, 1713,
	116, 1713,
	117, 1713,
	118, 1713,
	119, 1713,
	120, 1713,
	121, 1713,
	122, 1713,
	123, 1713,
	124, 1713,
	125, 1713,
	126, 1713,
	127, 1713,
	128, 1713,
	129, 1713,
	130, 1713,
	131, 1713,
	132, 1713,
	133, 1713,
	134, 1713,
	136, 1713,
	137, 1713,
	138, 1713,
	140, 1713,
	141, 1713,
	142, 1713,
	145, 1713,
	146, 1713,
	147, 1713,
	149, 1713,
	150, 1713,
	151, 1713,
	153, 1713,
	154, 1713,
	155, 1713,
	157, 1713,
	158, 1713,
	159, 1713,
	160, 1713,
	161, 1713,
	162, 1713,
	163, 1713,
	164, 1713,
	165, 1713,
	166, 1713,
	167, 1713,
	168, 1713,
	169, 1713,
	170, 1713,
	171, 1713,
	172, 1713,
	173, 1713,
	174, 1713,
	175, 1713,
	181, 1713,
	182, 1713,
	183, 1713,
	184, 1713,
	188, 1713,
	190, 1713,
	191, 1713,
	192, 1713,
	194, 1713,
	196, 1713,
	197, 1713,
	198, 1713,
	199, 1713,
	200, 1713,
	201, 1713,
	202, 1713,
	203, 1713,
	204, 1713,
	205, 1713,
	206, 1713,
	207, 1713,
	208, 1713,
	209, 1713,
	210, 1713,
	212, 1713,
	213, 1713,
	215, 1713,
	216, 1713,
	218, 1713,
	219, 1713,
	220, 1713,
	221, 1713,
	222, 1713,
	223, 1713,
	224, 1713,
	225, 1713,
	226, 1713,
	227, 1713,
	228, 1713,
	229, 1713,
	230, 1713,
	232, 1713,
	233, 1713,
	234, 1713,
	235, 1713,
	236, 1713,
	240, 1713,
	241, 1713,
	242, 1713,
	243, 1713,
	245, 1713,
	246, 1713,
	247, 1713,
	248, 1713,
	249, 1713,
	251, 1713,
	253, 1713,
	254, 1713,
	255, 1713,
	256, 1713,
	257, 1713,
	258, 1713,
	259, 1713,
	260, 1713,
	261, 1713,
	262, 1713,
	266, 1713,
	267, 1713,
	268, 1713,
	269, 1713,
	270, 1713,
	271, 1713,
	273, 1713,
	274, 1713,
	275, 1713,
	277, 1713,
	278, 1713,
	279, 1713,
	280, 1713,
	281, 1713,
	282, 1713,
	284, 1713,
	285, 1713,
	286, 1713,
	287, 1713,
	288, 1713,
	289, 1713,
	290, 1713,
	291, 1713,
	292, 1713,
	293, 1713,
	294, 1713,
	295, 1713,
	296, 1713,
	298, 1713,
	299, 1713,
	300, 1713,
	301, 1713,
	302, 1713,
	303, 1713,
	304, 1713,
	305, 1713,
	306, 1713,
	307, 1713,
	308, 1713,
	309, 1713,
	310, 1713,
	311, 1713,
	312, 1713,
	313, 1713,
	314, 1713,
	315, 1713,
	316, 1713,
	317, 1713,
	318, 1713,
	319, 1713,
	321, 1713,
	322, 1713,
	323, 1713,
	324, 1713,
	325, 1713,
	326, 1713,
	327, 1713,
	328, 1713,
	329, 1713,
	330, 1713,
	331, 1713,
	332, 1713,
	333, 1713,
	334, 1713,
	335, 1713,
	336, 1713,
	337, 1713,
	338, 1713,
	339, 1713,
	340, 1713,
	341, 1713,
	342, 1713,
	343, 1713,
	344, 1713,
	345, 1713,
	346, 1713,
	347, 1713,
	348, 1713,
	349, 1713,
	350, 1713,
	351, 1713,
	352, 1713,
	353, 1713,
	354, 1713,
	355, 1713,
	358, 1713,
	360, 1713,
	363, 1713,
	364, 1713,
	365, 1713,
	368, 1713,
	369, 1713,
	370, 1713,
	371, 1713,
	372, 1713,
	373, 1713,
	374, 1713,
	375, 1713,
	376, 1713,
	377, 1713,
	378, 1713,
	379, 1713,
	380, 1713,
	381, 1713,
	382, 1713,
	383, 1713,
	384, 1713,
	385, 1713,
	386, 1713,
	388, 1713,
	389, 1713,
	390, 1713,
	391, 1713,
	392, 1713,
	393, 1713,
	394, 1713,
	395, 1713,
	396, 1713,
	397, 1713,
	398, 1713,
	399, 1713,
	400, 1713,
	401, 1713,
	402, 1713,
	404, 1713,
	405, 1713,
	406, 1713,
	408, 1713,
	409, 1713,
	410, 1713,
	411, 1713,
	412, 1713,
	413, 1713,
	414, 1713,
	415, 1713,
	416, 1713,
	417, 1713,
	418, 1713,
	419, 1713,
	420, 1713,
	422, 1713,
	424, 1713,
	425, 1713,
	426, 1713,
	432, 1713,
	433, 1713,
	434, 1713,
	436, 1713,
	437, 1713,
	438, 1713,
	439, 1713,
	440, 1713,
	441, 1713,
	442, 1713,
	443, 1713,
	444, 1713,
	445, 1713,
	447, 1713,
	448, 1713,
	449, 1713,
	450, 1713,
	451, 1713,
	452, 1713,
	453, 1713,
	454, 1713,
	455, 1713,
	456, 1713,
	457, 1713,
	459, 1713,
	460, 1713,
	461, 1713,
	462, 1713,
	463, 1713,
	464, 1713,
	465, 1713,
	466, 1713,
	467, 1713,
	468, 1713,
	469, 1713,
	470, 1713,
	471, 1713,
	473, 1713,
	474, 1713,
	475, 1713,
	476, 1713,
	477, 1713,
	478, 1713,
	479, 1713,
	480, 1713,
	481, 1713,
	482, 1713,
	483, 1713,
	484, 1713,
	485, 1713,
	486, 1713,
	487, 1713,
	488, 1713,
	489, 1713,
	490, 1713,
	491, 1713,
	492, 1713,
	493, 1713,
	494, 1713,
	496, 1713,
	498, 1713,
	499, 1713,
	500, 1713,
	501, 1713,
	502, 1713,
	503, 1713,
	504, 1713,
	505, 1713,
	506, 1713,
	507, 1713,
	508, 1713,
	509, 1713,
	510, 1713,
	511, 1713,
	512, 1713,
	513, 1713,
	514, 1713,
	515, 1713,
	517, 1713,
	518, 1713,
	519, 1713,
	520, 1713,
	521, 1713,
	523, 1713,
	524, 1713,
	525, 1713,
	526, 1713,
	527, 1713,
	528, 1713,
	529, 1713,
	530, 1713,
	531, 1713,
	533, 1713,
	534, 1713,
	535, 1713,
	536, 1713,
	537, 1713,
	539, 1713,
	541, 1713,
	542, 1713,
	543, 1713,
	544, 1713,
	545, 1713,
	546, 1713,
	547, 1713,
	548, 1713,
	549, 1713,
	550, 1713,
	551, 1713,
	552, 1713,
	554, 1713,
	555, 1713,
	557, 1713,
	558, 1713,
	559, 1713,
	560, 1713,
	561, 1713,
	562, 1713,
	563, 1713,
	564, 1713,
	565, 1713,
	566, 1713,
	567, 1713,
	570, 1713,
	571, 1713,
	572, 1713,
	573, 1713,
	574, 1713,
	575, 1713,
	577, 1713,
	578, 1713,
	579, 1713,
	580, 1713,
	581, 1713,
	582, 1713,
	583, 1713,
	584, 1713,
	589, 1713,
	590, 1713,
	591, 1713,
	592, 1713,
	593, 1713,
	594, 1713,
	595, 1713,
	608, 1713,
	615, 1713,
	616, 1713,
	617, 1713,
	625, 1713,
	629, 1713,
	-2, 0,
	-1, 787,
	4, 1435,
	21, 1435,
	22, 1435,
	23, 1435,
	24, 1435,
	25, 1435,
	26, 1435,
	27, 1435,
	28, 1435,
	30, 1435,
	31, 1435,
	37, 1435,
	41, 1435,
	43, 1435,
	44, 1435,
	46, 1435,
	47, 1435,
	48, 1435,
	49, 1435,
	50, 1435,
	51, 1435,
	52, 1435,
	53, 1435,
	54, 1435,
	56, 1435,
	57, 1435,
	58, 1435,
	59, 1435,
	61, 1435,
	62, 1435,
	63, 1435,
	64, 1435,
	65, 1435,
	66, 1435,
	67, 1435,
	71, 1435,
	72, 1435,
	73, 1435,
	74, 1435,
	76, 1435,
	77, 1435,
	78, 1435,
	82, 1435,
	83, 1435,
	84, 1435,
	85, 1435,
	86, 1435,
	87, 1435,
	88, 1435,
	89, 1435,
	92, 1435,
	93, 1435,
	94, 1435,
	95, 1435,
	96, 1435,
	98, 1435,
	100, 1435,
	101, 1435,
	102, 1435,
	103, 1435,
	104, 1435,
	105, 1435,
	107, 1435,
	108, 1435,
	109, 1435,
	111, 1435,
	112, 1435,
	113, 1435,
	121, 1435,
	122, 1435,
	123, 1435,
	124, 1435,
	125, 1435,
	127, 1435,
	128, 1435,
	129, 1435,
	130, 1435,
	132, 1435,
	133, 1435,
	134, 1435,
	136, 1435,
	137, 1435,
	138, 1435,
	140, 1435,
	141, 1435,
	142, 1435,
	145, 1435,
	146, 1435,
	147, 1435,
	149, 1435,
	150, 1435,
	151, 1435,
	153, 1435,
	154, 1435,
	155, 1435,
	157, 1435,
	158, 1435,
	159, 1435,
	160, 1435,
	161, 1435,
	162, 1435,
	163, 1435,
	164, 1435,
	165, 1435,
	166, 1435,
	167, 1435,
	168, 1435,
	169, 1435,
	170, 1435,
	171, 1435,
	172, 1435,
	173, 1435,
	175, 1435,
	181, 1435,
	182, 1435,
	183, 1435,
	184, 1435,
	188, 1435,
	190, 1435,
	191, 1435,
	192, 1435,
	194, 1435,
	197, 1435,
	198, 1435,
	199, 1435,
	200, 1435,
	201, 1435,
	202, 1435,
	203, 1435,
	204, 1435,
	205, 1435,
	206, 1435,
	207, 1435,
	208, 1435,
	209, 1435,
	210, 1435,
	212, 1435,
	213, 1435,
	215, 1435,
	216, 1435,
	218, 1435,
	219, 1435,
	220, 1435,
	221, 1435,
	222, 1435,
	223, 1435,
	224, 1435,
	225, 1435,
	226, 1435,
	227, 1435,
	229, 1435,
	230, 1435,
	232, 1435,
	233, 1435,
	234, 1435,
	235, 1435,
	236, 1435,
	240, 1435,
	241, 1435,
	242, 1435,
	243, 1435,
	246, 1435,
	247, 1435,
	248, 1435,
	249, 1435,
	251, 1435,
	253, 1435,
	254, 1435,
	256, 1435,
	258, 1435,
	259, 1435,
	260, 1435,
	262, 1435,
	266, 1435,
	267, 1435,
	268, 1435,
	269, 1435,
	270, 1435,
	271, 1435,
	273, 1435,
	274, 1435,
	275, 1435,
	277, 1435,
	278, 1435,
	280, 1435,
	281, 1435,
	284, 1435,
	285, 1435,
	286, 1435,
	287, 1435,
	288, 1435,
	289, 1435,
	290, 1435,
	293, 1435,
	294, 1435,
	295, 1435,
	296, 1435,
	298, 1435,
	299, 1435,
	300, 1435,
	301, 1435,
	302, 1435,
	303, 1435,
	304, 1435,
	305, 1435,
	306, 1435,
	307, 1435,
	308, 1435,
	309, 1435,
	310, 1435,
	311, 1435,
	312, 1435,
	313, 1435,
	314, 1435,
	315, 1435,
	316, 1435,
	317, 1435,
	318, 1435,
	319, 1435,
	321, 1435,
	323, 1435,
	324, 1435,
	325, 1435,
	326, 1435,
	327, 1435,
	328, 1435,
	329, 1435,
	330, 1435,
	331, 1435,
	332, 1435,
	333, 1435,
	334, 1435,
	335, 1435,
	336, 1435,
	337, 1435,
	338, 1435,
	339, 1435,
	341, 1435,
	342, 1435,
	344, 1435,
	346, 1435,
	347, 1435,
	348, 1435,
	349, 1435,
	351, 1435,
	352, 1435,
	353, 1435,
	354, 1435,
	355, 1435,
	358, 1435,
	360, 1435,
	363, 1435,
	364, 1435,
	365, 1435,
	368, 1435,
	369, 1435,
	370, 1435,
	372, 1435,
	374, 1435,
	375, 1435,
	376, 1435,
	377, 1435,
	378, 1435,
	379, 1435,
	380, 1435,
	381, 1435,
	382, 1435,
	383, 1435,
	384, 1435,
	385, 1435,
	386, 1435,
	388, 1435,
	389, 1435,
	390, 1435,
	391, 1435,
	392, 1435,
	393, 1435,
	394, 1435,
	395, 1435,
	396, 1435,
	397, 1435,
	398, 1435,
	399, 1435,
	400, 1435,
	401, 1435,
	402, 1435,
	404, 1435,
	405, 1435,
	406, 1435,
	408, 1435,
	409, 1435,
	410, 1435,
	411, 1435,
	412, 1435,
	413, 1435,
	414, 1435,
	415, 1435,
	416, 1435,
	417, 1435,
	418, 1435,
	419, 1435,
	420, 1435,
	422, 1435,
	424, 1435,
	425, 1435,
	426, 1435,
	432, 1435,
	433, 1435,
	434, 1435,
	436, 1435,
	437, 1435,
	438, 1435,
	439, 1435,
	440, 1435,
	441, 1435,
	442, 1435,
	443, 1435,
	444, 1435,
	445, 1435,
	447, 1435,
	448, 1435,
	449, 1435,
	451, 1435,
	452, 1435,
	453, 1435,
	454, 1435,
	455, 1435,
	456, 1435,
	457, 1435,
	459, 1435,
	460, 1435,
	461, 1435,
	462, 1435,
	463, 1435,
	464, 1435,
	465, 1435,
	466, 1435,
	467, 1435,
	468, 1435,
	469, 1435,
	470, 1435,
	471, 1435,
	473, 1435,
	474, 1435,
	475, 1435,
	476, 1435,
	477, 1435,
	478, 1435,
	480, 1435,
	481, 1435,
	482, 1435,
	483, 1435,
	484, 1435,
	485, 1435,
	487, 1435,
	488, 1435,
	489, 1435,
	490, 1435,
	491, 1435,
	492, 1435,
	493, 1435,
	494, 1435,
	496, 1435,
	498, 1435,
	499, 1435,
	500, 1435,
	501, 1435,
	502, 1435,
	503, 1435,
	504, 1435,
	505, 1435,
	506, 1435,
	507, 1435,
	508, 1435,
	509, 1435,
	510, 1435,
	511, 1435,
	512, 1435,
	513, 1435,
	514, 1435,
	515, 1435,
	517, 1435,
	518, 1435,
	520, 1435,
	521, 1435,
	523, 1435,
	524, 1435,
	525, 1435,
	526, 1435,
	527, 1435,
	528, 1435,
	529, 1435,
	530, 1435,
	531, 1435,
	533, 1435,
	534, 1435,
	535, 1435,
	536, 1435,
	537, 1435,
	539, 1435,
	541, 1435,
	542, 1435,
	543, 1435,
	544, 1435,
	545, 1435,
	546, 1435,
	547, 1435,
	549, 1435,
	550, 1435,
	551, 1435,
	552, 1435,
	554, 1435,
	555, 1435,
	558, 1435,
	559, 1435,
	560, 1435,
	561, 1435,
	562, 1435,
	563, 1435,
	564, 1435,
	565, 1435,
	567, 1435,
	570, 1435,
	571, 1435,
	572, 1435,
	573, 1435,
	574, 1435,
	575, 1435,
	577, 1435,
	578, 1435,
	579, 1435,
	580, 1435,
	581, 1435,
	582, 1435,
	583, 1435,
	584, 1435,
	589, 1435,
	590, 1435,
	591, 1435,
	592, 1435,
	593, 1435,
	594, 1435,
	-2, 0,
	-1, 806,
	195, 2509,
	538, 2509,
	607, 2509,
	627, 2509,
	-2, 0,
	-1, 807,
	195, 2495,
	538, 2495,
	607, 2495,
	627, 2495,
	-2, 0,
	-1, 809,
	195, 2772,
	538, 2772,
	607, 2772,
	627, 2772,
	-2, 0,
	-1, 812,
	195, 2623,
	538, 2623,
	607, 2623,
	627, 2623,
	-2, 0,
	-1, 813,
	195, 2816,
	538, 2816,
	607, 2816,
	627, 2816,
	-2, 0,
	-1, 821,
	195, 2650,
	538, 2650,
	607, 2650,
	627, 2650,
	-2, 756,
	-1, 837,
	8, 887,
	29, 887,
	615, 887,
	616, 887,
	-2, 892,
	-1, 841,
	1, 2563,
	628, 2563,
	-2, 892,
	-1, 842,
	1, 2611,
	628, 2611,
	-2, 892,
	-1, 845,
	1, 2655,
	628, 2655,
	-2, 885,
	-1, 846,
	1, 2711,
	628, 2711,
	-2, 886,
	-1, 847,
	1, 2568,
	628, 2568,
	-2, 889,
	-1, 848,
	1, 2482,
	628, 2482,
	-2, 890,
	-1, 881,
	627, 2441,
	630, 2441,
	-2, 1101,
	-1, 882,
	627, 2443,
	630, 2443,
	-2, 1102,
	-1, 883,
	627, 2442,
	630, 2442,
	-2, 1103,
	-1, 884,
	630, 2367,
	-2, 1104,
	-1, 909,
	189, 279,
	-2, 0,
	-1, 933,
	45, 2414,
	-2, 0,
	-1, 934,
	577, 1413,
	-2, 1185,
	-1, 950,
	4, 1847,
	21, 1847,
	22, 1847,
	23, 1847,
	24, 1847,
	25, 1847,
	26, 1847,
	27, 1847,
	28, 1847,
	30, 1847,
	31, 1847,
	37, 1847,
	41, 1847,
	43, 1847,
	44, 1847,
	46, 1847,
	47, 1847,
	48, 1847,
	49, 1847,
	50, 1847,
	51, 1847,
	52, 1847,
	53, 1847,
	54, 1847,
	56, 1847,
	57, 1847,
	58, 1847,
	59, 1847,
	61, 1847,
	62, 1847,
	63, 1847,
	64, 1847,
	65, 1847,
	66, 1847,
	67, 1847,
	71, 1847,
	72, 1847,
	73, 1847,
	74, 1847,
	76, 1847,
	77, 1847,
	78, 1847,
	82, 1847,
	83, 1847,
	84, 1847,
	85, 1847,
	86, 1847,
	87, 1847,
	88, 1847,
	89, 1847,
	92, 1847,
	93, 1847,
	94, 1847,
	95, 1847,
	96, 1847,
	98, 1847,
	100, 1847,
	101, 1847,
	102, 1847,
	103, 1847,
	104, 1847,
	105, 1847,
	107, 1847,
	108, 1847,
	109, 1847,
	111, 1847,
	112, 1847,
	113, 1847,
	121, 1847,
	122, 1847,
	123, 1847,
	124, 1847,
	125, 1847,
	127, 1847,
	128, 1847,
	129, 1847,
	130, 1847,
	132, 1847,
	133, 1847,
	134, 1847,
	136, 1847,
	137, 1847,
	138, 1847,
	140, 1847,
	141, 1847,
	142, 1847,
	145, 1847,
	146, 1847,
	147, 1847,
	149, 1847,
	150, 1847,
	151, 1847,
	153, 1847,
	154, 1847,
	155, 1847,
	157, 1847,
	158, 1847,
	159, 1847,
	160, 1847,
	161, 1847,
	162, 1847,
	163, 1847,
	164, 1847,
	165, 1847,
	166, 1847,
	167, 1847,
	168, 1847,
	169, 1847,
	170, 1847,
	171, 1847,
	172, 1847,
	173, 1847,
	175, 1847,
	181, 1847,
	182, 1847,
	183, 1847,
	184, 1847,
	188, 1847,
	190, 1847,
	191, 1847,
	192, 1847,
	194, 1847,
	197, 1847,
	198, 1847,
	199, 1847,
	200, 1847,
	201, 1847,
	202, 1847,
	203, 1847,
	204, 1847,
	205, 1847,
	206, 1847,
	207, 1847,
	208, 1847,
	209, 1847,
	210, 1847,
	212, 1847,
	213, 1847,
	215, 1847,
	216, 1847,
	218, 1847,
	219, 1847,
	220, 1847,
	221, 1847,
	222, 1847,
	223, 1847,
	224, 1847,
	225, 1847,
	226, 1847,
	227, 1847,
	229, 1847,
	230, 1847,
	232, 1847,
	233, 1847,
	234, 1847,
	235, 1847,
	236, 1847,
	240, 1847,
	241, 1847,
	242, 1847,
	243, 1847,
	246, 1847,
	247, 1847,
	248, 1847,
	249, 1847,
	251, 1847,
	253, 1847,
	254, 1847,
	256, 1847,
	258, 1847,
	259, 1847,
	260, 1847,
	262, 1847,
	266, 1847,
	267, 1847,
	268, 1847,
	269, 1847,
	270, 1847,
	271, 1847,
	273, 1847,
	274, 1847,
	275, 1847,
	277, 1847,
	278, 1847,
	280, 1847,
	281, 1847,
	284, 1847,
	285, 1847,
	286, 1847,
	287, 1847,
	288, 1847,
	289, 1847,
	290, 1847,
	293, 1847,
	294, 1847,
	295, 1847,
	296, 1847,
	298, 1847,
	299, 1847,
	300, 1847,
	301, 1847,
	302, 1847,
	303, 1847,
	304, 1847,
	305, 1847,
	306, 1847,
	307, 1847,
	308, 1847,
	309, 1847,
	310, 1847,
	311, 1847,
	312, 1847,
	313, 1847,
	314, 1847,
	315, 1847,
	316, 1847,
	317, 1847,
	318, 1847,
	319, 1847,
	321, 1847,
	323, 1847,
	324, 1847,
	325, 1847,
	326, 1847,
	327, 1847,
	328, 1847,
	329, 1847,
	330, 1847,
	331, 1847,
	332, 1847,
	333, 1847,
	334, 1847,
	335, 1847,
	336, 1847,
	337, 1847,
	338, 1847,
	339, 1847,
	341, 1847,
	342, 1847,
	344, 1847,
	346, 1847,
	347, 1847,
	348, 1847,
	349, 1847,
	351, 1847,
	352, 1847,
	353, 1847,
	354, 1847,
	355, 1847,
	358, 1847,
	360, 1847,
	363, 1847,
	364, 1847,
	365, 1847,
	368, 1847,
	369, 1847,
	370, 1847,
	372, 1847,
	374, 1847,
	375, 1847,
	376, 1847,
	377, 1847,
	378, 1847,
	379, 1847,
	380, 1847,
	381, 1847,
	382, 1847,
	383, 1847,
	384, 1847,
	385, 1847,
	386, 1847,
	388, 1847,
	389, 1847,
	390, 1847,
	391, 1847,
	392, 1847,
	393, 1847,
	394, 1847,
	395, 1847,
	396, 1847,
	397, 1847,
	398, 1847,
	399, 1847,
	400, 1847,
	401, 1847,
	402, 1847,
	404, 1847,
	405, 1847,
	406, 1847,
	408, 1847,
	409, 1847,
	410, 1847,
	411, 1847,
	412, 1847,
	413, 1847,
	414, 1847,
	415, 1847,
	416, 1847,
	417, 1847,
	418, 1847,
	419, 1847,
	420, 1847,
	422, 1847,
	424, 1847,
	425, 1847,
	426, 1847,
	432, 1847,
	433, 1847,
	434, 1847,
	436, 1847,
	437, 1847,
	438, 1847,
	439, 1847,
	440, 1847,
	441, 1847,
	442, 1847,
	443, 1847,
	444, 1847,
	445, 1847,
	447, 1847,
	448, 1847,
	449, 1847,
	451, 1847,
	452, 1847,
	453, 1847,
	454, 1847,
	455, 1847,
	456, 1847,
	457, 1847,
	459, 1847,
	460, 1847,
	461, 1847,
	462, 1847,
	463, 1847,
	464, 1847,
	465, 1847,
	466, 1847,
	467, 1847,
	468, 1847,
	469, 1847,
	470, 1847,
	471, 1847,
	473, 1847,
	474, 1847,
	475, 1847,
	476, 1847,
	477, 1847,
	478, 1847,
	480, 1847,
	481, 1847,
	482, 1847,
	483, 1847,
	484, 1847,
	485, 1847,
	487, 1847,
	488, 1847,
	489, 1847,
	490, 1847,
	491, 1847,
	492, 1847,
	493, 1847,
	494, 1847,
	496, 1847,
	498, 1847,
	499, 1847,
	500, 1847,
	501, 1847,
	502, 1847,
	503, 1847,
	504, 1847,
	505, 1847,
	506, 1847,
	507, 1847,
	508, 1847,
	509, 1847,
	510, 1847,
	511, 1847,
	512, 1847,
	513, 1847,
	514, 1847,
	515, 1847,
	517, 1847,
	518, 1847,
	520, 1847,
	521, 1847,
	523, 1847,
	524, 1847,
	525, 1847,
	526, 1847,
	527, 1847,
	528, 1847,
	529, 1847,
	530, 1847,
	531, 1847,
	533, 1847,
	534, 1847,
	535, 1847,
	536, 1847,
	537, 1847,
	539, 1847,
	541, 1847,
	542, 1847,
	543, 1847,
	544, 1847,
	545, 1847,
	546, 1847,
	547, 1847,
	549, 1847,
	550, 1847,
	551, 1847,
	552, 1847,
	554, 1847,
	555, 1847,
	558, 1847,
	559, 1847,
	560, 1847,
	561, 1847,
	562, 1847,
	563, 1847,
	564, 1847,
	565, 1847,
	567, 1847,
	570, 1847,
	571, 1847,
	572, 1847,
	573, 1847,
	574, 1847,
	575, 1847,
	577, 1847,
	578, 1847,
	579, 1847,
	580, 1847,
	581, 1847,
	582, 1847,
	583, 1847,
	584, 1847,
	589, 1847,
	590, 1847,
	591, 1847,
	592, 1847,
	593, 1847,
	594, 1847,
	-2, 0,
	-1, 960,
	270, 435,
	-2, 0,
	-1, 1039,
	410, 977,
	478, 977,
	521, 977,
	543, 977,
	-2, 0,
	-1, 1040,
	410, 976,
	478, 976,
	521, 976,
	543, 976,
	-2, 905,
	-1, 1044,
	1, 1029,
	624, 1029,
	626, 1029,
	628, 1029,
	-2, 0,
	-1, 1046,
	1, 951,
	624, 951,
	626, 951,
	628, 951,
	-2, 0,
	-1, 1047,
	1, 955,
	624, 955,
	626, 955,
	628, 955,
	-2, 0,
	-1, 1048,
	1, 1100,
	189, 1100,
	624, 1100,
	626, 1100,
	628, 1100,
	-2, 0,
	-1, 1056,
	1, 982,
	624, 982,
	626, 982,
	628, 982,
	-2, 0,
	-1, 1063,
	1, 1029,
	624, 1029,
	626, 1029,
	628, 1029,
	-2, 0,
	-1, 1064,
	1, 1031,
	624, 1031,
	626, 1031,
	628, 1031,
	-2, 0,
	-1, 1065,
	1, 1034,
	624, 1034,
	626, 1034,
	628, 1034,
	-2, 0,
	-1, 1073,
	1, 1064,
	624, 1064,
	626, 1064,
	628, 1064,
	-2, 0,
	-1, 1074,
	1, 1066,
	624, 1066,
	626, 1066,
	628, 1066,
	-2, 0,
	-1, 1079,
	1, 1094,
	624, 1094,
	626, 1094,
	628, 1094,
	-2, 0,
	-1, 1133,
	176, 1717,
	189, 1717,
	283, 1717,
	356, 1717,
	-2, 1653,
	-1, 1149,
	176, 1716,
	189, 1716,
	283, 1716,
	356, 1716,
	-2, 1650,
	-1, 1176,
	627, 2440,
	-2, 764,
	-1, 1205,
	5, 2432,
	625, 2430,
	-2, 2421,
	-1, 1213,
	5, 2453,
	625, 2450,
	-2, 2441,
	-1, 1214,
	5, 2454,
	625, 2451,
	-2, 2442,
	-1, 1222,
	627, 2438,
	-2, 2420,
	-1, 1223,
	625, 2904,
	-2, 2439,
	-1, 1246,
	625, 2903,
	-2, 2455,
	-1, 1247,
	5, 1922,
	-2, 2874,
	-1, 1248,
	5, 1923,
	-2, 2875,
	-1, 1249,
	5, 1924,
	-2, 2889,
	-1, 1250,
	5, 1925,
	-2, 2853,
	-1, 1251,
	5, 1926,
	-2, 2887,
	-1, 1252,
	5, 1934,
	-2, 2866,
	-1, 1253,
	5, 1921,
	-2, 2862,
	-1, 1254,
	5, 1921,
	-2, 2861,
	-1, 1255,
	5, 1921,
	-2, 2880,
	-1, 1256,
	5, 1932,
	-2, 2855,
	-1, 1257,
	5, 1937,
	-2, 2854,
	-1, 1258,
	5, 1939,
	-2, 2899,
	-1, 1261,
	5, 1961,
	-2, 2892,
	-1, 1262,
	5, 1953,
	-2, 2893,
	-1, 1263,
	5, 1961,
	-2, 2894,
	-1, 1264,
	5, 1957,
	-2, 2895,
	-1, 1265,
	5, 1907,
	-2, 2867,
	-1, 1266,
	5, 1908,
	-2, 2868,
	-1, 1267,
	5, 1909,
	-2, 2856,
	-1, 1295,
	5, 1944,
	-2, 2900,
	-1, 1296,
	5, 1945,
	-2, 2890,
	-1, 1297,
	5, 1946,
	578, 1946,
	-2, 2857,
	-1, 1298,
	5, 1947,
	578, 1947,
	-2, 2858,
	-1, 1336,
	625, 2450,
	-2, 2441,
	-1, 1337,
	625, 2451,
	-2, 2442,
	-1, 1435,
	195, 2816,
	538, 2816,
	607, 2816,
	627, 2816,
	-2, 0,
	-1, 1440,
	1, 740,
	628, 740,
	-2, 1562,
	-1, 1587,
	376, 2415,
	436, 2415,
	480, 2415,
	617, 2415,
	-2, 2405,
	-1, 1593,
	195, 139,
	277, 139,
	341, 139,
	584, 139,
	-2, 2812,
	-1, 1594,
	195, 140,
	277, 140,
	341, 140,
	584, 140,
	-2, 2554,
	-1, 1595,
	195, 141,
	277, 141,
	341, 141,
	584, 141,
	-2, 2733,
	-1, 1601,
	629, 2415,
	-2, 2417,
	-1, 1625,
	1, 1410,
	441, 1365,
	480, 1365,
	601, 1365,
	624, 1410,
	626, 1410,
	628, 1410,
	-2, 1702,
	-1, 1631,
	211, 1507,
	231, 1507,
	449, 1507,
	-2, 0,
	-1, 1680,
	418, 1184,
	577, 1184,
	-2, 430,
	-1, 1697,
	45, 2413,
	-2, 1147,
	-1, 1704,
	1, 1410,
	624, 1410,
	626, 1410,
	628, 1410,
	-2, 1702,
	-1, 1712,
	4, 1435,
	21, 1435,
	22, 1435,
	23, 1435,
	24, 1435,
	25, 1435,
	26, 1435,
	27, 1435,
	28, 1435,
	30, 1435,
	31, 1435,
	37, 1435,
	41, 1435,
	43, 1435,
	44, 1435,
	46, 1435,
	47, 1435,
	48, 1435,
	49, 1435,
	50, 1435,
	51, 1435,
	52, 1435,
	53, 1435,
	54, 1435,
	56, 1435,
	57, 1435,
	58, 1435,
	59, 1435,
	61, 1435,
	62, 1435,
	63, 1435,
	64, 1435,
	65, 1435,
	66, 1435,
	67, 1435,
	71, 1435,
	72, 1435,
	73, 1435,
	74, 1435,
	76, 1435,
	77, 1435,
	78, 1435,
	82, 1435,
	83, 1435,
	84, 1435,
	85, 1435,
	86, 1435,
	87, 1435,
	88, 1435,
	89, 1435,
	92, 1435,
	93, 1435,
	94, 1435,
	95, 1435,
	96, 1435,
	98, 1435,
	100, 1435,
	101, 1435,
	102, 1435,
	103, 1435,
	104, 1435,
	105, 1435,
	107, 1435,
	108, 1435,
	109, 1435,
	111, 1435,
	112, 1435,
	113, 1435,
	121, 1435,
	122, 1435,
	123, 1435,
	124, 1435,
	125, 1435,
	127, 1435,
	128, 1435,
	129, 1435,
	130, 1435,
	132, 1435,
	133, 1435,
	134, 1435,
	136, 1435,
	137, 1435,
	138, 1435,
	140, 1435,
	141, 1435,
	142, 1435,
	145, 1435,
	146, 1435,
	147, 1435,
	149, 1435,
	150, 1435,
	151, 1435,
	153, 1435,
	154, 1435,
	155, 1435,
	157, 1435,
	158, 1435,
	159, 1435,
	160, 1435,
	161, 1435,
	162, 1435,
	163, 1435,
	164, 1435,
	165, 1435,
	166, 1435,
	167, 1435,
	168, 1435,
	169, 1435,
	170, 1435,
	171, 1435,
	172, 1435,
	173, 1435,
	181, 1435,
	182, 1435,
	183, 1435,
	184, 1435,
	188, 1435,
	190, 1435,
	191, 1435,
	192, 1435,
	194, 1435,
	197, 1435,
	198, 1435,
	199, 1435,
	200, 1435,
	201, 1435,
	202, 1435,
	203, 1435,
	204, 1435,
	205, 1435,
	206, 1435,
	207, 1435,
	208, 1435,
	209, 1435,
	210, 1435,
	212, 1435,
	213, 1435,
	215, 1435,
	216, 1435,
	218, 1435,
	219, 1435,
	220, 1435,
	221, 1435,
	222, 1435,
	223, 1435,
	224, 1435,
	225, 1435,
	226, 1435,
	227, 1435,
	229, 1435,
	230, 1435,
	232, 1435,
	233, 1435,
	234, 1435,
	235, 1435,
	236, 1435,
	241, 1435,
	242, 1435,
	243, 1435,
	246, 1435,
	247, 1435,
	248, 1435,
	249, 1435,
	251, 1435,
	253, 1435,
	254, 1435,
	256, 1435,
	258, 1435,
	259, 1435,
	260, 1435,
	262, 1435,
	266, 1435,
	267, 1435,
	268, 1435,
	269, 1435,
	270, 1435,
	271, 1435,
	273, 1435,
	274, 1435,
	275, 1435,
	277, 1435,
	278, 1435,
	280, 1435,
	281, 1435,
	284, 1435,
	285, 1435,
	286, 1435,
	287, 1435,
	288, 1435,
	289, 1435,
	290, 1435,
	293, 1435,
	294, 1435,
	295, 1435,
	296, 1435,
	298, 1435,
	299, 1435,
	300, 1435,
	301, 1435,
	302, 1435,
	303, 1435,
	304, 1435,
	305, 1435,
	306, 1435,
	307, 1435,
	308, 1435,
	309, 1435,
	310, 1435,
	311, 1435,
	312, 1435,
	313, 1435,
	314, 1435,
	315, 1435,
	316, 1435,
	317, 1435,
	318, 1435,
	319, 1435,
	321, 1435,
	323, 1435,
	324, 1435,
	325, 1435,
	326, 1435,
	327, 1435,
	328, 1435,
	329, 1435,
	330, 1435,
	331, 1435,
	332, 1435,
	333, 1435,
	334, 1435,
	335, 1435,
	336, 1435,
	337, 1435,
	338, 1435,
	339, 1435,
	341, 1435,
	342, 1435,
	346, 1435,
	347, 1435,
	348, 1435,
	349, 1435,
	351, 1435,
	352, 1435,
	353, 1435,
	354, 1435,
	355, 1435,
	358, 1435,
	360, 1435,
	361, 1435,
	363, 1435,
	364, 1435,
	365, 1435,
	368, 1435,
	369, 1435,
	370, 1435,
	372, 1435,
	374, 1435,
	375, 1435,
	376, 1435,
	377, 1435,
	378, 1435,
	379, 1435,
	380, 1435,
	381, 1435,
	382, 1435,
	383, 1435,
	384, 1435,
	385, 1435,
	386, 1435,
	388, 1435,
	389, 1435,
	390, 1435,
	391, 1435,
	392, 1435,
	393, 1435,
	394, 1435,
	395, 1435,
	396, 1435,
	397, 1435,
	398, 1435,
	399, 1435,
	400, 1435,
	401, 1435,
	402, 1435,
	404, 1435,
	405, 1435,
	406, 1435,
	408, 1435,
	409, 1435,
	410, 1435,
	411, 1435,
	412, 1435,
	413, 1435,
	414, 1435,
	415, 1435,
	416, 1435,
	417, 1435,
	418, 1435,
	419, 1435,
	420, 1435,
	422, 1435,
	424, 1435,
	425, 1435,
	426, 1435,
	432, 1435,
	433, 1435,
	434, 1435,
	436, 1435,
	437, 1435,
	438, 1435,
	439, 1435,
	440, 1435,
	441, 1435,
	442, 1435,
	443, 1435,
	444, 1435,
	445, 1435,
	447, 1435,
	448, 1435,
	449, 1435,
	451, 1435,
	452, 1435,
	453, 1435,
	454, 1435,
	455, 1435,
	456, 1435,
	457, 1435,
	459, 1435,
	460, 1435,
	461, 1435,
	462, 1435,
	463, 1435,
	464, 1435,
	465, 1435,
	466, 1435,
	467, 1435,
	468, 1435,
	469, 1435,
	470, 1435,
	471, 1435,
	473, 1435,
	474, 1435,
	475, 1435,
	476, 1435,
	477, 1435,
	478, 1435,
	480, 1435,
	481, 1435,
	482, 1435,
	483, 1435,
	484, 1435,
	485, 1435,
	487, 1435,
	488, 1435,
	489, 1435,
	490, 1435,
	491, 1435,
	492, 1435,
	493, 1435,
	494, 1435,
	496, 1435,
	498, 1435,
	499, 1435,
	500, 1435,
	501, 1435,
	502, 1435,
	503, 1435,
	504, 1435,
	505, 1435,
	506, 1435,
	507, 1435,
	508, 1435,
	509, 1435,
	510, 1435,
	511, 1435,
	512, 1435,
	513, 1435,
	514, 1435,
	515, 1435,
	517, 1435,
	518, 1435,
	520, 1435,
	521, 1435,
	523, 1435,
	524, 1435,
	525, 1435,
	526, 1435,
	527, 1435,
	528, 1435,
	529, 1435,
	530, 1435,
	531, 1435,
	533, 1435,
	534, 1435,
	535, 1435,
	536, 1435,
	537, 1435,
	539, 1435,
	541, 1435,
	542, 1435,
	543, 1435,
	544, 1435,
	545, 1435,
	546, 1435,
	547, 1435,
	549, 1435,
	550, 1435,
	551, 1435,
	552, 1435,
	554, 1435,
	555, 1435,
	558, 1435,
	559, 1435,
	560, 1435,
	561, 1435,
	562, 1435,
	563, 1435,
	564, 1435,
	565, 1435,
	567, 1435,
	570, 1435,
	571, 1435,
	572, 1435,
	573, 1435,
	574, 1435,
	575, 1435,
	577, 1435,
	578, 1435,
	579, 1435,
	580, 1435,
	581, 1435,
	582, 1435,
	583, 1435,
	584, 1435,
	589, 1435,
	590, 1435,
	591, 1435,
	592, 1435,
	593, 1435,
	594, 1435,
	-2, 0,
	-1, 1735,
	1, 575,
	624, 575,
	626, 575,
	628, 575,
	-2, 1673,
	-1, 1738,
	4, 2898,
	11, 2898,
	12, 2898,
	14, 2898,
	15, 2898,
	16, 2898,
	17, 2898,
	18, 2898,
	19, 2898,
	21, 2898,
	22, 2898,
	23, 2898,
	24, 2898,
	25, 2898,
	26, 2898,
	27, 2898,
	28, 2898,
	30, 2898,
	31, 2898,
	34, 2898,
	35, 2898,
	37, 2898,
	39, 2898,
	41, 2898,
	43, 2898,
	44, 2898,
	46, 2898,
	47, 2898,
	48, 2898,
	49, 2898,
	50, 2898,
	51, 2898,
	52, 2898,
	53, 2898,
	54, 2898,
	56, 2898,
	57, 2898,
	58, 2898,
	59, 2898,
	61, 2898,
	62, 2898,
	63, 2898,
	64, 2898,
	65, 2898,
	66, 2898,
	67, 2898,
	70, 2898,
	71, 2898,
	72, 2898,
	73, 2898,
	74, 2898,
	76, 2898,
	77, 2898,
	78, 2898,
	79, 2898,
	82, 2898,
	83, 2898,
	84, 2898,
	85, 2898,
	86, 2898,
	87, 2898,
	88, 2898,
	89, 2898,
	90, 2898,
	92, 2898,
	93, 2898,
	94, 2898,
	95, 2898,
	96, 2898,
	98, 2898,
	99, 2898,
	100, 2898,
	101, 2898,
	102, 2898,
	103, 2898,
	104, 2898,
	105, 2898,
	107, 2898,
	108, 2898,
	109, 2898,
	110, 2898,
	111, 2898,
	112, 2898,
	113, 2898,
	121, 2898,
	122, 2898,
	123, 2898,
	124, 2898,
	125, 2898,
	127, 2898,
	128, 2898,
	129, 2898,
	130, 2898,
	132, 2898,
	133, 2898,
	134, 2898,
	136, 2898,
	137, 2898,
	138, 2898,
	140, 2898,
	141, 2898,
	142, 2898,
	145, 2898,
	146, 2898,
	147, 2898,
	149, 2898,
	150, 2898,
	151, 2898,
	153, 2898,
	154, 2898,
	155, 2898,
	157, 2898,
	158, 2898,
	159, 2898,
	160, 2898,
	161, 2898,
	162, 2898,
	163, 2898,
	164, 2898,
	165, 2898,
	166, 2898,
	167, 2898,
	168, 2898,
	169, 2898,
	170, 2898,
	171, 2898,
	172, 2898,
	173, 2898,
	177, 2898,
	178, 2898,
	179, 2898,
	180, 2898,
	181, 2898,
	182, 2898,
	183, 2898,
	184, 2898,
	187, 2898,
	188, 2898,
	190, 2898,
	191, 2898,
	192, 2898,
	194, 2898,
	196, 2898,
	197, 2898,
	198, 2898,
	199, 2898,
	200, 2898,
	201, 2898,
	202, 2898,
	203, 2898,
	204, 2898,
	205, 2898,
	206, 2898,
	207, 2898,
	208, 2898,
	209, 2898,
	210, 2898,
	212, 2898,
	213, 2898,
	215, 2898,
	216, 2898,
	218, 2898,
	219, 2898,
	220, 2898,
	221, 2898,
	222, 2898,
	223, 2898,
	224, 2898,
	225, 2898,
	226, 2898,
	227, 2898,
	228, 2898,
	229, 2898,
	230, 2898,
	231, 2898,
	232, 2898,
	233, 2898,
	234, 2898,
	235, 2898,
	236, 2898,
	238, 2898,
	239, 2898,
	241, 2898,
	242, 2898,
	243, 2898,
	245, 2898,
	246, 2898,
	247, 2898,
	248, 2898,
	249, 2898,
	251, 2898,
	253, 2898,
	254, 2898,
	255, 2898,
	256, 2898,
	257, 2898,
	258, 2898,
	259, 2898,
	260, 2898,
	261, 2898,
	262, 2898,
	264, 2898,
	265, 2898,
	266, 2898,
	267, 2898,
	268, 2898,
	269, 2898,
	270, 2898,
	271, 2898,
	273, 2898,
	274, 2898,
	275, 2898,
	277, 2898,
	278, 2898,
	279, 2898,
	280, 2898,
	281, 2898,
	282, 2898,
	284, 2898,
	285, 2898,
	286, 2898,
	287, 2898,
	288, 2898,
	289, 2898,
	290, 2898,
	293, 2898,
	294, 2898,
	295, 2898,
	296, 2898,
	297, 2898,
	298, 2898,
	299, 2898,
	300, 2898,
	301, 2898,
	302, 2898,
	303, 2898,
	304, 2898,
	305, 2898,
	306, 2898,
	307, 2898,
	308, 2898,
	309, 2898,
	310, 2898,
	311, 2898,
	312, 2898,
	313, 2898,
	314, 2898,
	315, 2898,
	316, 2898,
	317, 2898,
	318, 2898,
	319, 2898,
	321, 2898,
	322, 2898,
	323, 2898,
	324, 2898,
	325, 2898,
	326, 2898,
	327, 2898,
	328, 2898,
	329, 2898,
	330, 2898,
	331, 2898,
	332, 2898,
	333, 2898,
	334, 2898,
	335, 2898,
	336, 2898,
	337, 2898,
	338, 2898,
	339, 2898,
	341, 2898,
	342, 2898,
	345, 2898,
	346, 2898,
	347, 2898,
	348, 2898,
	349, 2898,
	351, 2898,
	352, 2898,
	353, 2898,
	354, 2898,
	355, 2898,
	358, 2898,
	360, 2898,
	363, 2898,
	364, 2898,
	365, 2898,
	366, 2898,
	368, 2898,
	369, 2898,
	370, 2898,
	372, 2898,
	374, 2898,
	375, 2898,
	376, 2898,
	377, 2898,
	378, 2898,
	379, 2898,
	380, 2898,
	381, 2898,
	382, 2898,
	383, 2898,
	384, 2898,
	385, 2898,
	386, 2898,
	388, 2898,
	389, 2898,
	390, 2898,
	391, 2898,
	392, 2898,
	393, 2898,
	394, 2898,
	395, 2898,
	396, 2898,
	397, 2898,
	398, 2898,
	399, 2898,
	400, 2898,
	401, 2898,
	402, 2898,
	404, 2898,
	405, 2898,
	406, 2898,
	408, 2898,
	409, 2898,
	410, 2898,
	411, 2898,
	412, 2898,
	413, 2898,
	414, 2898,
	415, 2898,
	416, 2898,
	417, 2898,
	418, 2898,
	419, 2898,
	420, 2898,
	422, 2898,
	424, 2898,
	425, 2898,
	426, 2898,
	432, 2898,
	433, 2898,
	434, 2898,
	435, 2898,
	436, 2898,
	437, 2898,
	438, 2898,
	439, 2898,
	440, 2898,
	441, 2898,
	442, 2898,
	443, 2898,
	444, 2898,
	445, 2898,
	447, 2898,
	448, 2898,
	449, 2898,
	450, 2898,
	451, 2898,
	452, 2898,
	453, 2898,
	454, 2898,
	455, 2898,
	456, 2898,
	457, 2898,
	458, 2898,
	459, 2898,
	460, 2898,
	461, 2898,
	462, 2898,
	463, 2898,
	464, 2898,
	465, 2898,
	466, 2898,
	467, 2898,
	468, 2898,
	469, 2898,
	470, 2898,
	471, 2898,
	473, 2898,
	474, 2898,
	475, 2898,
	476, 2898,
	477, 2898,
	478, 2898,
	480, 2898,
	481, 2898,
	482, 2898,
	483, 2898,
	484, 2898,
	485, 2898,
	486, 2898,
	487, 2898,
	488, 2898,
	489, 2898,
	490, 2898,
	491, 2898,
	492, 2898,
	493, 2898,
	494, 2898,
	496, 2898,
	498, 2898,
	499, 2898,
	500, 2898,
	501, 2898,
	502, 2898,
	503, 2898,
	504, 2898,
	505, 2898,
	506, 2898,
	507, 2898,
	508, 2898,
	509, 2898,
	510, 2898,
	511, 2898,
	512, 2898,
	513, 2898,
	514, 2898,
	515, 2898,
	517, 2898,
	518, 2898,
	519, 2898,
	520, 2898,
	521, 2898,
	523, 2898,
	524, 2898,
	525, 2898,
	526, 2898,
	527, 2898,
	528, 2898,
	529, 2898,
	530, 2898,
	531, 2898,
	533, 2898,
	534, 2898,
	535, 2898,
	536, 2898,
	537, 2898,
	539, 2898,
	541, 2898,
	542, 2898,
	543, 2898,
	544, 2898,
	545, 2898,
	546, 2898,
	547, 2898,
	549, 2898,
	550, 2898,
	551, 2898,
	552, 2898,
	554, 2898,
	555, 2898,
	558, 2898,
	559, 2898,
	560, 2898,
	561, 2898,
	562, 2898,
	563, 2898,
	564, 2898,
	565, 2898,
	567, 2898,
	570, 2898,
	571, 2898,
	572, 2898,
	573, 2898,
	574, 2898,
	575, 2898,
	577, 2898,
	578, 2898,
	579, 2898,
	580, 2898,
	581, 2898,
	582, 2898,
	583, 2898,
	584, 2898,
	589, 2898,
	590, 2898,
	591, 2898,
	592, 2898,
	593, 2898,
	594, 2898,
	595, 2898,
	597, 2898,
	605, 2898,
	606, 2898,
	607, 2898,
	608, 2898,
	609, 2898,
	610, 2898,
	612, 2898,
	613, 2898,
	614, 2898,
	615, 2898,
	616, 2898,
	617, 2898,
	618, 2898,
	619, 2898,
	620, 2898,
	623, 2898,
	626, 2898,
	627, 2898,
	629, 2898,
	630, 2898,
	-2, 0,
	-1, 1743,
	195, 2772,
	538, 2772,
	607, 2772,
	627, 2772,
	-2, 0,
	-1, 1797,
	410, 977,
	478, 977,
	521, 977,
	543, 977,
	-2, 0,
	-1, 1808,
	1, 1507,
	624, 1507,
	626, 1507,
	628, 1507,
	-2, 0,
	-1, 1825,
	1, 972,
	624, 972,
	626, 972,
	628, 972,
	-2, 0,
	-1, 1826,
	1, 1016,
	624, 1016,
	626, 1016,
	628, 1016,
	-2, 0,
	-1, 1827,
	1, 1024,
	624, 1024,
	626, 1024,
	628, 1024,
	-2, 0,
	-1, 1830,
	1, 981,
	624, 981,
	626, 981,
	628, 981,
	-2, 0,
	-1, 1832,
	1, 987,
	624, 987,
	626, 987,
	628, 987,
	-2, 0,
	-1, 1835,
	1, 983,
	624, 983,
	626, 983,
	628, 983,
	-2, 0,
	-1, 1840,
	1, 997,
	624, 997,
	626, 997,
	628, 997,
	-2, 0,
	-1, 1874,
	1, 2754,
	624, 2754,
	626, 2754,
	627, 2754,
	628, 2754,
	-2, 0,
	-1, 1878,
	1, 1075,
	624, 1075,
	626, 1075,
	628, 1075,
	-2, 0,
	-1, 1895,
	1, 1557,
	628, 1557,
	-2, 1562,
	-1, 1898,
	176, 1716,
	189, 1716,
	283, 1716,
	356, 1716,
	-2, 1654,
	-1, 1998,
	156, 1675,
	176, 1675,
	189, 1675,
	250, 1675,
	283, 1675,
	356, 1675,
	367, 1675,
	556, 1675,
	-2, 2126,
	-1, 2059,
	626, 2301,
	-2, 0,
	-1, 2095,
	156, 1675,
	176, 1675,
	189, 1675,
	250, 1675,
	283, 1675,
	356, 1675,
	367, 1675,
	556, 1675,
	-2, 1808,
	-1, 2135,
	538, 2769,
	627, 2769,
	630, 2769,
	-2, 0,
	-1, 2152,
	625, 1949,
	-2, 1937,
	-1, 2184,
	195, 2769,
	627, 2769,
	630, 2769,
	-2, 0,
	-1, 2227,
	1, 742,
	628, 742,
	-2, 1562,
	-1, 2401,
	231, 274,
	-2, 2449,
	-1, 2402,
	231, 275,
	-2, 330,
	-1, 2513,
	1, 974,
	624, 974,
	626, 974,
	628, 974,
	-2, 0,
	-1, 2514,
	1, 1018,
	624, 1018,
	626, 1018,
	628, 1018,
	-2, 0,
	-1, 2515,
	1, 1026,
	624, 1026,
	626, 1026,
	628, 1026,
	-2, 0,
	-1, 2516,
	1, 1077,
	624, 1077,
	626, 1077,
	628, 1077,
	-2, 0,
	-1, 2557,
	1, 999,
	624, 999,
	626, 999,
	628, 999,
	-2, 0,
	-1, 2579,
	1, 1060,
	624, 1060,
	626, 1060,
	628, 1060,
	-2, 0,
	-1, 2626,
	456, 1743,
	457, 1743,
	-2, 1982,
	-1, 2657,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2002,
	-1, 2658,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2003,
	-1, 2659,
	99, 0,
	264, 0,
	265, 0,
	609, 0,
	610, 0,
	-2, 2004,
	-1, 2660,
	99, 0,
	264, 0,
	265, 0,
	609, 0,
	610, 0,
	-2, 2005,
	-1, 2661,
	99, 0,
	264, 0,
	265, 0,
	609, 0,
	610, 0,
	-2, 2006,
	-1, 2662,
	99, 0,
	264, 0,
	265, 0,
	609, 0,
	610, 0,
	-2, 2007,
	-1, 2663,
	99, 0,
	264, 0,
	265, 0,
	609, 0,
	610, 0,
	-2, 2008,
	-1, 2664,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2009,
	-1, 2676,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2021,
	-1, 2677,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2022,
	-1, 2678,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2023,
	-1, 2682,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2030,
	-1, 2688,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2034,
	-1, 2690,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2042,
	-1, 2691,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2043,
	-1, 2692,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2044,
	-1, 2693,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2045,
	-1, 2867,
	5, 2453,
	195, 2312,
	625, 2450,
	-2, 2441,
	-1, 2868,
	195, 2313,
	-2, 2849,
	-1, 2869,
	195, 2314,
	-2, 2649,
	-1, 2870,
	195, 2315,
	-2, 2527,
	-1, 2871,
	195, 2316,
	-2, 2587,
	-1, 2872,
	195, 2317,
	-2, 2634,
	-1, 2873,
	195, 2318,
	-2, 2767,
	-1, 2874,
	195, 2319,
	-2, 2109,
	-1, 2946,
	1, 1809,
	2, 1809,
	110, 1809,
	156, 1809,
	176, 1809,
	189, 1809,
	196, 1809,
	214, 1809,
	217, 1809,
	245, 1809,
	250, 1809,
	261, 1809,
	279, 1809,
	283, 1809,
	322, 1809,
	356, 1809,
	361, 1809,
	367, 1809,
	446, 1809,
	450, 1809,
	556, 1809,
	568, 1809,
	586, 1809,
	587, 1809,
	588, 1809,
	598, 1809,
	624, 1809,
	626, 1809,
	628, 1809,
	630, 1809,
	-2, 1808,
	-1, 2959,
	625, 2422,
	-2, 2436,
	-1, 2961,
	1, 347,
	586, 347,
	-2, 1702,
	-1, 2991,
	625, 1948,
	-2, 1938,
	-1, 3203,
	1, 1410,
	441, 1365,
	480, 1365,
	601, 1365,
	624, 1410,
	626, 1410,
	628, 1410,
	-2, 1702,
	-1, 3380,
	362, 1746,
	-2, 2888,
	-1, 3381,
	362, 1747,
	-2, 2751,
	-1, 3385,
	456, 2378,
	457, 2378,
	-2, 2107,
	-1, 3386,
	456, 2382,
	457, 2382,
	-2, 2108,
	-1, 3387,
	456, 2379,
	457, 2379,
	-2, 2107,
	-1, 3388,
	456, 2383,
	457, 2383,
	-2, 2108,
	-1, 3401,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2032,
	-1, 3402,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2036,
	-1, 3408,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2038,
	-1, 3635,
	1, 737,
	624, 737,
	626, 737,
	628, 737,
	-2, 1562,
	-1, 3827,
	45, 2413,
	-2, 1148,
	-1, 3832,
	1, 1410,
	624, 1410,
	626, 1410,
	628, 1410,
	-2, 1702,
	-1, 3938,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2040,
	-1, 3945,
	255, 0,
	257, 0,
	345, 0,
	-2, 2059,
	-1, 4013,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2088,
	-1, 4014,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2089,
	-1, 4015,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2090,
	-1, 4019,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2094,
	-1, 4020,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2095,
	-1, 4021,
	14, 0,
	15, 0,
	16, 0,
	605, 0,
	606, 0,
	607, 0,
	-2, 2096,
	-1, 4069,
	625, 2423,
	-2, 2437,
	-1, 4275,
	627, 3005,
	-2, 1628,
	-1, 4331,
	255, 0,
	257, 0,
	345, 0,
	-2, 2060,
	-1, 4334,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2063,
	-1, 4335,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2065,
	-1, 4449,
	627, 2438,
	-2, 1445,
	-1, 4610,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2064,
	-1, 4611,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2066,
	-1, 4622,
	255, 0,
	-2, 2099,
	-1, 4810,
	255, 0,
	-2, 2100,
	-1, 5030,
	53, 0,
	228, 0,
	282, 0,
	486, 0,
	595, 0,
	608, 0,
	-2, 2852,
}

const sqlPrivate = 57344

const sqlLast = 145952

var sqlAct = [...]int{
	286, 5148, 4965, 5221, 1416, 3539, 4850, 3276, 4679, 4858,
	3127, 5092, 4964, 5076, 5029, 5016, 5042, 3157, 5162, 4921,
	3062, 2398, 3816, 4976, 4902, 1641, 4998, 5043, 4955, 4979,
	3815, 5044, 2476, 5101, 4314, 4756, 4814, 4661, 2287, 4779,
	4743, 4727, 5040, 3978, 1472, 4569, 4558, 5028, 4525, 4498,
	4564, 4079, 4684, 1340, 3930, 3661, 2636, 4599, 1408, 4259,
	4631, 4267, 4549, 746, 2488, 3849, 4551, 4183, 4762, 1413,
	4887, 3394, 1159, 3664, 2486, 4426, 4446, 3063, 883, 1406,
	3298, 2705, 2899, 1611, 3724, 1907, 4574, 1150, 3843, 2196,
	3800, 3246, 3789, 4214, 2644, 1205, 4216, 2209, 4233, 3667,
	2139, 1761, 3805, 818, 4627, 3877, 883, 3879, 1491, 3265,
	3804, 3235, 2296, 3262, 3649, 3651, 3807, 1584, 3782, 757,
	3585, 2140, 3260, 2637, 3781, 1399, 3650, 4072, 3562, 3554,
	4370, 3277, 2973, 1158, 189, 3522, 1805, 3543, 1759, 4313,
	2119, 2070, 2101, 958, 4, 962, 3293, 1329, 2385, 3210,
	3545, 2387, 3158, 3521, 2374, 2324, 3592, 3688, 5077, 4039,
	280, 2308, 2006, 4815, 279, 1976, 2641, 3292, 880, 2718,
	2939, 3378, 953, 3142, 2045, 114, 2386, 2941, 1699, 1411,
	1216, 3239, 878, 2785, 814, 1320, 3172, 2372, 2345, 2364,
	2352, 1209, 1455, 2774, 2275, 3247, 2279, 1385, 2071, 2919,
	2207, 2608, 2783, 1214, 2702, 1895, 2090, 1474, 2449, 2625,
	2606, 2974, 791, 4445, 1736, 3270, 2436, 1702, 2367, 3087,
	1470, 3088, 1613, 884, 885, 2435, 1442, 1033, 733, 3048,
	4922, 189, 755, 3808, 3002, 1323, 2896, 2777, 889, 2928,
	2087, 2040, 892, 2080, 2909, 2938, 1302, 1259, 827, 1177,
	1337, 2863, 1990, 1908, 2829, 2607, 2755, 1396, 1909, 2609,
	799, 2462, 1840, 199, 2395, 810, 889, 1319, 1825, 200,
	892, 1734, 118, 1727, 979, 1635, 104, 2376, 1592, 5093,
	1467, 1212, 5149, 2630, 1190, 750, 45, 44, 747, 873,
	759, 774, 42, 934, 33, 31, 29, 1325, 1894, 1300,
	1054, 1914, 3431, 1647, 935, 4053, 3425, 4054, 5232, 2198,
	2198, 5224, 2918, 2198, 3541, 3762, 5212, 2198, 830, 834,
	2918, 2198, 4080, 4645, 5211, 2484, 3492, 3493, 2918, 5181,
	5179, 5122, 2198, 4683, 4683, 2407, 5078, 5068, 5066, 168,
	5079, 2918, 2918, 5063, 1154, 1335, 5038, 5064, 76, 5060,
	47, 46, 5026, 5061, 4651, 4397, 2407, 5025, 3858, 1211,
	1154, 2407, 4648, 5024, 2219, 5014, 77, 3303, 1188, 4683,
	163, 5012, 5007, 3762, 5002, 4683, 4765, 1155, 4683, 3859,
	5001, 4974, 4941, 82, 4683, 4683, 2982, 4934, 4933, 4926,
	3620, 2918, 2918, 2407, 68, 4901, 3617, 2219, 4898, 2407,
	1317, 49, 4683, 165, 1922, 1923, 4880, 4812, 4793, 4758,
	4515, 2982, 4293, 4113, 4702, 2216, 1451, 4701, 2407, 1303,
	1303, 2407, 48, 4690, 91, 1143, 4689, 2407, 1953, 4682,
	4683, 4638, 3602, 4683, 4612, 2407, 1925, 4585, 2982, 4582,
	4493, 3303, 4473, 3762, 2918, 4333, 2918, 3004, 2485, 2982,
	4283, 51, 69, 1134, 3872, 2407, 1451, 4277, 4230, 1133,
	52, 3872, 4231, 1978, 4144, 58, 2219, 4112, 4145, 1771,
	166, 4113, 1924, 4064, 2911, 4062, 3440, 4065, 50, 4063,
	113, 4046, 3441, 2978, 1355, 2918, 97, 110, 4043, 3962,
	1363, 3958, 3871, 2407, 70, 2918, 3872, 3538, 1922, 1923,
	2780, 2918, 3498, 1149, 1966, 1967, 1968, 3533, 3532, 3483,
	3481, 2918, 2918, 3484, 3482, 3473, 3471, 3442, 3393, 3474,
	2918, 2918, 1953, 3302, 2216, 2219, 2918, 3303, 3287, 53,
	1925, 1332, 2472, 3286, 3027, 247, 4942, 2472, 2918, 2219,
	1972, 2981, 1304, 2971, 4816, 2982, 2963, 2918, 98, 2917,
	2407, 2471, 1306, 2918, 1307, 2472, 1640, 1978, 2731, 2732,
	2733, 2750, 2751, 2752, 4807, 4795, 1924, 4765, 3303, 4043,
	2910, 4562, 4515, 2216, 4474, 4293, 1356, 1944, 4232, 2753,
	1930, 3134, 3047, 2233, 2301, 249, 1941, 2197, 2213, 3241,
	1356, 2406, 3152, 3038, 2066, 2781, 1634, 4162, 3933, 3905,
	2088, 2357, 3860, 2955, 2954, 5053, 2953, 2918, 1831, 1331,
	1807, 2952, 3508, 2951, 1978, 1752, 1308, 1305, 1333, 1142,
	1141, 4388, 3861, 3430, 1140, 1139, 1138, 1137, 1136, 1132,
	1131, 1952, 1954, 1130, 2743, 1129, 248, 1128, 1127, 1126,
	1125, 3492, 3493, 2739, 3510, 3511, 3512, 1124, 247, 3349,
	4345, 241, 1123, 1122, 1121, 1120, 1649, 1119, 1118, 1117,
	242, 1116, 1922, 1923, 1947, 1948, 1949, 1950, 1661, 1115,
	1114, 1113, 1095, 40, 1930, 1031, 1030, 2782, 1029, 2779,
	1028, 1027, 1026, 1025, 1024, 2199, 2199, 1023, 201, 2199,
	1945, 4089, 1975, 2199, 1925, 1022, 1021, 2199, 249, 3492,
	3493, 102, 3510, 3511, 3512, 1020, 1019, 1018, 2199, 1017,
	1016, 1015, 1014, 3492, 3493, 1963, 97, 1013, 1973, 54,
	3507, 2744, 2745, 2746, 2747, 1952, 1954, 1012, 3492, 3493,
	1924, 2738, 1011, 1010, 1009, 57, 1008, 1007, 1006, 1005,
	60, 1004, 3492, 3493, 1003, 1002, 1001, 1000, 999, 248,
	71, 1939, 1940, 998, 997, 996, 995, 984, 59, 197,
	105, 983, 982, 109, 977, 976, 969, 55, 968, 1961,
	1975, 167, 967, 3509, 952, 951, 908, 907, 3507, 56,
	906, 2216, 3492, 3493, 1945, 3510, 3511, 3512, 905, 2216,
	247, 896, 1418, 1214, 895, 1649, 894, 2216, 63, 893,
	855, 201, 1649, 157, 4576, 4329, 854, 3507, 2748, 2749,
	825, 824, 1640, 823, 3858, 805, 274, 3498, 273, 164,
	1214, 1214, 1214, 2812, 272, 1356, 271, 270, 269, 5052,
	268, 2216, 267, 266, 265, 264, 263, 262, 1930, 261,
	249, 2741, 260, 259, 2784, 258, 257, 256, 255, 254,
	253, 1946, 252, 251, 250, 3055, 1207, 4058, 3873, 1494,
	3588, 3507, 3453, 1214, 1975, 3436, 3427, 162, 3329, 1214,
	1616, 1214, 2219, 3014, 1418, 3498, 2197, 2810, 1625, 3536,
	2216, 3255, 3220, 202, 2213, 3514, 2986, 2960, 1446, 3498,
	1660, 248, 1459, 1460, 1461, 2601, 2945, 3055, 2598, 1214,
	2260, 1214, 2218, 1214, 3498, 2796, 241, 2048, 2114, 2910,
	1616, 2794, 1977, 2017, 2047, 242, 1889, 1643, 3498, 198,
	2008, 2091, 1951, 3537, 1463, 1356, 1339, 3508, 3501, 3502,
	3494, 3495, 3496, 3497, 3499, 3500, 1418, 3273, 5049, 247,
	1704, 4243, 2051, 201, 1602, 1946, 3, 2048, 3492, 3493,
	1921, 3510, 3511, 3512, 2047, 5027, 1616, 5011, 3498, 4906,
	4804, 1597, 4798, 1616, 4626, 4819, 2778, 4796, 4674, 4583,
	4561, 4328, 1214, 1964, 1214, 4403, 4368, 4367, 4361, 1616,
	4360, 4359, 2046, 1390, 1393, 3508, 4352, 1589, 1214, 249,
	1214, 4351, 4349, 1655, 4344, 4341, 4340, 1438, 2995, 2452,
	4229, 1403, 2742, 4093, 4092, 4091, 1977, 1975, 1926, 1927,
	1928, 1929, 1931, 1932, 3508, 4068, 4034, 1708, 1711, 1440,
	247, 4578, 4033, 3492, 3493, 4032, 3514, 3507, 3508, 3954,
	1638, 3949, 4150, 157, 3583, 3529, 3520, 3491, 3488, 1616,
	248, 3487, 3485, 1487, 3480, 1581, 1586, 889, 3479, 1922,
	1923, 892, 1623, 3478, 1648, 241, 3475, 3472, 3452, 1214,
	1477, 1478, 1214, 1977, 242, 1975, 1714, 3435, 3508, 3428,
	249, 3426, 3288, 2946, 3053, 1432, 2015, 2767, 247, 1975,
	1921, 1925, 1962, 2008, 1466, 247, 1316, 2009, 3509, 2007,
	189, 189, 201, 5227, 1975, 1965, 1942, 1938, 1920, 1935,
	1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 1975, 2010,
	1637, 1636, 2414, 1697, 2412, 3609, 5170, 1924, 1469, 4160,
	1619, 248, 1479, 1480, 3498, 5169, 5091, 2549, 249, 1739,
	1741, 1155, 5089, 1341, 3980, 249, 241, 1776, 247, 4966,
	3257, 4244, 4885, 4870, 4866, 242, 3509, 4865, 1975, 2728,
	2729, 2730, 2754, 2740, 2734, 4864, 2736, 2737, 2735, 2722,
	2723, 2724, 2725, 2726, 2727, 1214, 1214, 1214, 1214, 1214,
	1214, 1214, 1214, 201, 1446, 3509, 4844, 1446, 1737, 248,
	4843, 4841, 4818, 4817, 4791, 2708, 248, 4777, 249, 3509,
	3052, 1833, 3514, 4774, 241, 1775, 4773, 4766, 1214, 3498,
	1849, 241, 4754, 242, 1214, 3534, 4753, 4698, 4244, 4669,
	242, 4624, 4607, 4606, 4545, 1654, 1756, 1424, 1730, 4541,
	4538, 1899, 4516, 3492, 3493, 1930, 4387, 4366, 4294, 3509,
	4148, 201, 3052, 4147, 3508, 3504, 3505, 3506, 201, 248,
	4128, 1649, 3503, 3501, 3502, 3494, 3495, 3496, 3497, 3499,
	3500, 4127, 2714, 4125, 241, 1733, 3052, 4049, 4037, 3944,
	1995, 3874, 1781, 242, 3868, 3835, 3743, 3699, 1928, 1929,
	1931, 1932, 3666, 3492, 3493, 3611, 1751, 3457, 247, 3456,
	3451, 3417, 1893, 3234, 3080, 4577, 2054, 2053, 2052, 2049,
	2041, 201, 1770, 3504, 3505, 3506, 2039, 2993, 2992, 2957,
	3503, 3501, 3502, 3494, 3495, 3496, 3497, 3499, 3500, 2950,
	1214, 1214, 1214, 4821, 1975, 2916, 1214, 3494, 3495, 3496,
	3497, 3499, 3500, 1337, 2792, 1337, 1994, 4820, 249, 3503,
	3501, 3502, 3494, 3495, 3496, 3497, 3499, 3500, 1997, 2113,
	1494, 1798, 4548, 3503, 3501, 3502, 3494, 3495, 3496, 3497,
	3499, 3500, 1214, 3256, 2069, 883, 1418, 2068, 2063, 2062,
	1834, 2157, 883, 2061, 1418, 2060, 1418, 2117, 2059, 2058,
	2057, 2056, 1900, 1155, 2055, 2036, 3504, 3505, 3506, 248,
	2035, 2034, 2033, 3503, 3501, 3502, 3494, 3495, 3496, 3497,
	3499, 3500, 2032, 2031, 241, 3509, 1728, 2030, 2077, 3498,
	2029, 1896, 2028, 242, 2027, 2026, 1904, 2025, 2024, 2023,
	1903, 2022, 2021, 2010, 1996, 1975, 1993, 1988, 1335, 1431,
	1335, 2125, 1134, 1360, 1351, 2136, 1418, 4399, 1133, 4337,
	3580, 3272, 1214, 2186, 2130, 2188, 1898, 4088, 2050, 4061,
	4052, 2123, 3439, 2984, 2124, 1473, 2948, 2811, 4646, 3498,
	4401, 4087, 2074, 2075, 1917, 1918, 1214, 2009, 3607, 1991,
	189, 1473, 3864, 247, 1494, 3492, 3493, 1423, 2118, 4476,
	2109, 1922, 1923, 3128, 1456, 2098, 5161, 1458, 4874, 1303,
	2203, 4867, 5041, 2205, 4767, 4581, 4519, 1473, 4518, 2210,
	2290, 4517, 1473, 2212, 4475, 2221, 2042, 2043, 2215, 2251,
	1155, 2809, 4390, 1925, 4301, 4300, 4299, 4298, 1471, 3508,
	1446, 4297, 4296, 249, 2225, 889, 1732, 4295, 4114, 892,
	4056, 4055, 889, 2131, 247, 3876, 892, 3875, 2258, 2795,
	2180, 1157, 2099, 2224, 3766, 2793, 3764, 2122, 3763, 1924,
	5045, 2151, 3504, 3505, 3506, 5118, 1457, 3106, 5116, 3503,
	3501, 3502, 3494, 3495, 3496, 3497, 3499, 3500, 4799, 3508,
	2096, 2089, 1451, 4797, 248, 4763, 2091, 3931, 4174, 3477,
	1891, 1797, 2335, 1646, 249, 1653, 1452, 1659, 2031, 241,
	2031, 3702, 4247, 2048, 3476, 2453, 3399, 2201, 242, 1975,
	2047, 4673, 1451, 3091, 1454, 2239, 4143, 247, 2245, 2244,
	2354, 2067, 1473, 2253, 1332, 3818, 1332, 3817, 2154, 3733,
	1111, 3170, 3668, 2108, 2107, 4108, 201, 4109, 4836, 2106,
	2093, 2104, 2103, 2102, 1451, 248, 4237, 2388, 1850, 3496,
	3497, 3499, 3500, 1616, 1616, 2019, 1806, 4837, 4837, 1975,
	241, 2227, 2137, 278, 1494, 2505, 1750, 249, 1755, 242,
	2477, 4757, 5074, 1926, 1927, 1928, 1929, 1931, 1932, 1112,
	4559, 3299, 1769, 3790, 1774, 247, 4505, 1807, 2389, 4251,
	3509, 4226, 3445, 4180, 4171, 2780, 4153, 201, 3902, 3633,
	2570, 2482, 1331, 2420, 1331, 2223, 247, 247, 4628, 3541,
	3982, 1333, 2991, 1333, 2775, 2064, 2016, 2044, 248, 1448,
	5050, 3798, 2331, 2446, 2339, 1707, 1630, 1427, 3089, 1315,
	2349, 1389, 3149, 241, 2301, 249, 2265, 5065, 2266, 5062,
	3509, 3854, 242, 3146, 3144, 2248, 4119, 3328, 2273, 2274,
	1832, 3608, 2334, 3130, 2399, 2404, 249, 249, 2254, 2246,
	2341, 1616, 4859, 1616, 4565, 1616, 4973, 4693, 4665, 3671,
	201, 2267, 2268, 4138, 3269, 1764, 1733, 3637, 2271, 2272,
	3773, 5119, 5120, 1616, 1616, 4696, 248, 4692, 2295, 4671,
	2781, 5051, 2344, 4193, 3925, 4722, 2579, 1616, 947, 2576,
	2307, 241, 2228, 1091, 1453, 4462, 2299, 248, 248, 1616,
	242, 1616, 1616, 1616, 1682, 889, 5153, 2344, 1674, 892,
	2368, 1785, 241, 241, 2344, 2391, 2392, 1109, 3028, 5223,
	1107, 242, 242, 4875, 2342, 883, 2393, 1458, 201, 2442,
	2329, 1848, 2504, 4715, 4704, 2240, 3502, 3494, 3495, 3496,
	3497, 3499, 3500, 5098, 2577, 3212, 1105, 1214, 2563, 201,
	201, 1103, 1100, 1632, 4192, 2250, 1449, 2561, 3051, 3639,
	4508, 4732, 2782, 2447, 2779, 1450, 4507, 1441, 1637, 1636,
	4191, 4190, 4182, 2578, 3049, 4168, 2459, 4167, 4165, 2328,
	2340, 3051, 2325, 2825, 4164, 1214, 2348, 3494, 3495, 3496,
	3497, 3499, 3500, 2249, 4152, 1683, 1457, 3049, 948, 4111,
	4110, 3779, 2378, 2480, 3778, 2378, 2377, 3735, 2509, 2377,
	2381, 1163, 2490, 3065, 3601, 2497, 3450, 2467, 3449, 3448,
	2405, 1214, 797, 1214, 3447, 1452, 1155, 2616, 1155, 3403,
	1214, 3168, 2369, 2157, 2157, 1494, 3167, 1214, 1214, 1214,
	1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214,
	1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214,
	1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214,
	1214, 1214, 1214, 1737, 1214, 1737, 1214, 1214, 1214, 1214,
	2456, 2469, 3151, 2428, 2427, 889, 3668, 1458, 2614, 892,
	4694, 4666, 2600, 2534, 2389, 4122, 3731, 2465, 1783, 1730,
	1452, 2464, 1214, 2464, 2618, 2461, 1214, 1214, 2824, 2301,
	2105, 247, 2477, 2496, 1214, 2605, 3140, 3701, 1214, 1432,
	1214, 1214, 2473, 5154, 2474, 2343, 3132, 1732, 1494, 2784,
	797, 3068, 2646, 1847, 1214, 1214, 1214, 1214, 2985, 3122,
	1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214, 1448, 1451,
	2343, 3110, 3121, 1153, 2642, 2643, 1457, 2343, 3116, 2616,
	5099, 249, 1475, 1476, 2300, 3115, 1214, 1214, 1214, 1214,
	1214, 1214, 1214, 1214, 1214, 2612, 1214, 2513, 1475, 1476,
	1214, 2299, 3114, 2524, 3500, 3096, 3095, 3056, 2756, 2757,
	1932, 2972, 1337, 2297, 4477, 2689, 2426, 1897, 1799, 1494,
	1622, 2065, 2756, 2772, 1475, 1476, 3266, 4408, 1337, 1475,
	1476, 2999, 248, 2151, 2151, 2557, 4605, 4441, 4733, 2775,
	2614, 2976, 3093, 1448, 1214, 1494, 4460, 241, 2293, 2820,
	2629, 4731, 1097, 1453, 4457, 4418, 242, 4729, 1846, 1633,
	1720, 1718, 1719, 1717, 1678, 2615, 3903, 1152, 2866, 2866,
	2880, 2778, 2756, 4434, 2596, 2900, 2902, 4427, 2588, 796,
	2298, 1375, 2908, 2501, 201, 2604, 3732, 1778, 2602, 2603,
	2720, 2617, 1890, 3035, 2610, 4425, 1887, 3357, 745, 1155,
	2154, 2154, 2771, 5156, 4429, 2704, 4728, 1335, 1134, 1155,
	2294, 1134, 1134, 1155, 2633, 1449, 5119, 2634, 2635, 1691,
	2337, 4417, 2975, 1335, 1450, 740, 2958, 3306, 1453, 4435,
	1864, 1696, 950, 949, 1860, 4730, 3148, 1829, 4852, 2255,
	2256, 3344, 2613, 852, 1807, 2591, 2521, 2145, 2704, 3079,
	1418, 1418, 1807, 2962, 3022, 2822, 3636, 2568, 1866, 2555,
	2823, 3067, 2925, 2826, 3391, 2827, 2828, 2109, 3376, 1430,
	3147, 2998, 2716, 4428, 1303, 2379, 2518, 3912, 2098, 3001,
	2512, 3145, 3143, 5185, 1154, 2370, 1795, 796, 5155, 1902,
	1449, 1494, 2933, 3911, 798, 3078, 2769, 2615, 4454, 1450,
	2936, 2466, 189, 1155, 5157, 2514, 3020, 3346, 3971, 1779,
	2924, 2309, 2979, 3360, 2380, 2355, 2784, 1703, 1829, 5047,
	3023, 3009, 4827, 3017, 2932, 2712, 2937, 3013, 3031, 2943,
	2944, 4206, 2710, 2382, 4506, 4149, 2313, 1446, 2875, 2862,
	2157, 3024, 2358, 2906, 2997, 2904, 2891, 2365, 1828, 2914,
	2915, 3033, 4135, 993, 2930, 2931, 2926, 2987, 3050, 850,
	4166, 2590, 2522, 2096, 4163, 4854, 4456, 3016, 2371, 2300,
	2515, 2351, 1701, 4096, 2613, 2947, 2050, 1101, 3492, 3493,
	1101, 3510, 3511, 3512, 4458, 4083, 1826, 2280, 1494, 3034,
	3718, 4207, 2281, 1332, 2310, 3785, 3777, 1784, 2350, 3729,
	3150, 3948, 798, 3390, 1616, 5165, 1101, 2562, 1451, 1332,
	3032, 1102, 1101, 3057, 3113, 3066, 2560, 5159, 4604, 3094,
	3642, 1418, 3042, 2994, 3092, 3203, 3019, 3161, 3008, 1828,
	1845, 1842, 3011, 2346, 3012, 4205, 2411, 2410, 2042, 2043,
	5131, 4430, 1214, 1214, 945, 1214, 944, 3026, 4431, 2597,
	3719, 1827, 3003, 3359, 5140, 897, 3018, 3507, 5139, 4436,
	2587, 3099, 3025, 1407, 2359, 2298, 3054, 3111, 3383, 3384,
	883, 1331, 1418, 1151, 4133, 2784, 3245, 2970, 5187, 3906,
	1333, 5106, 904, 1451, 3141, 3356, 1861, 1331, 4319, 3029,
	3238, 2882, 3414, 4318, 3717, 2347, 1333, 3786, 3851, 3098,
	3353, 4433, 5048, 1616, 4441, 4219, 2314, 3126, 3083, 2282,
	4452, 4950, 2198, 1680, 3655, 4217, 1616, 3280, 1616, 4437,
	2151, 4656, 3097, 3412, 1616, 3289, 3783, 2286, 4455, 1782,
	3294, 1083, 3129, 3253, 1587, 3112, 1616, 1601, 1407, 2550,
	4434, 3070, 3073, 1703, 3060, 3120, 3043, 3044, 3118, 2326,
	3045, 3046, 2700, 3710, 3498, 3852, 1147, 3162, 3309, 3310,
	1418, 3041, 1418, 1677, 3104, 3105, 3107, 3108, 3109, 3316,
	3317, 3318, 3169, 2315, 2316, 3117, 3207, 3204, 3205, 4860,
	1374, 3968, 3297, 2698, 1214, 741, 851, 2154, 4938, 2384,
	2355, 3119, 3131, 3124, 4882, 3358, 4435, 889, 3138, 2311,
	4221, 892, 3296, 3638, 2283, 2288, 4459, 5018, 2686, 5019,
	5046, 1407, 1407, 3711, 3683, 3154, 1858, 3300, 2301, 2079,
	1808, 3332, 3514, 5158, 3155, 3156, 1145, 2332, 1083, 3330,
	889, 3331, 4220, 1862, 892, 189, 3208, 853, 3243, 3213,
	3851, 849, 795, 2589, 2520, 4853, 3746, 2312, 1631, 2383,
	3326, 1084, 1214, 1147, 3291, 4432, 3301, 3709, 1214, 1214,
	1637, 3218, 3307, 3969, 3508, 5163, 1358, 2321, 3409, 2338,
	742, 2327, 1098, 3682, 3284, 3232, 3282, 3325, 4453, 3405,
	3206, 5084, 3605, 2304, 3242, 3249, 3323, 2336, 2037, 2284,
	3770, 5085, 3335, 2362, 3337, 5105, 3339, 4442, 4443, 3410,
	4535, 1146, 3334, 3415, 3336, 2083, 3338, 1780, 3340, 3341,
	2556, 3275, 898, 899, 1214, 1214, 3362, 3285, 3364, 2355,
	1214, 743, 2703, 744, 4315, 1737, 4601, 2322, 2694, 4215,
	3656, 3350, 1863, 1214, 1214, 2291, 1859, 1083, 3695, 1214,
	1214, 3283, 2291, 2305, 1975, 1214, 3264, 3365, 1084, 1429,
	3367, 994, 2695, 2360, 2086, 3215, 2961, 2517, 1865, 2696,
	3217, 2511, 1147, 2701, 3784, 4617, 1794, 1796, 3213, 1901,
	2081, 2320, 2379, 2317, 5129, 3333, 4984, 4487, 3689, 5183,
	764, 5164, 3455, 2684, 4936, 1987, 2687, 2303, 2084, 2929,
	1214, 1214, 1214, 2711, 985, 4219, 1214, 2361, 3693, 3406,
	3051, 1089, 1088, 2289, 5188, 4217, 1214, 4134, 4430, 2145,
	2145, 2380, 4218, 5172, 2942, 4431, 3071, 3371, 5166, 1154,
	3125, 986, 3438, 1214, 3984, 3509, 4436, 3382, 4547, 4937,
	2784, 2082, 4896, 4308, 3691, 4643, 3373, 2683, 2766, 4511,
	2083, 4084, 3694, 1364, 3372, 1362, 3304, 4320, 1085, 3927,
	1345, 4552, 1813, 3311, 2318, 3312, 3374, 1084, 4903, 2629,
	3392, 3377, 4990, 901, 900, 4920, 1347, 4776, 4433, 4600,
	3556, 4553, 4510, 3433, 3434, 3429, 4509, 2079, 3437, 4265,
	3839, 3619, 2969, 2434, 2076, 1912, 4437, 4888, 2199, 2086,
	4221, 1361, 1354, 1342, 732, 4723, 4242, 3411, 1089, 1088,
	2323, 4889, 3690, 2567, 4023, 2927, 5104, 3413, 1911, 3593,
	2336, 4316, 2632, 2302, 1155, 1214, 1214, 1214, 1214, 2241,
	4691, 3404, 4220, 2084, 1214, 1214, 1214, 2338, 4536, 1214,
	902, 903, 4785, 2285, 4074, 4890, 3662, 4834, 5193, 1348,
	1911, 1214, 1337, 1494, 970, 1085, 5083, 1214, 4266, 1214,
	3548, 3549, 4186, 1906, 4364, 2238, 4169, 2697, 1337, 2085,
	2333, 4120, 4118, 2083, 3840, 2335, 1349, 2699, 3831, 3658,
	3254, 975, 3504, 3505, 3506, 3248, 1494, 3236, 1086, 3503,
	3501, 3502, 3494, 3495, 3496, 3497, 3499, 3500, 1337, 4075,
	2460, 1494, 2454, 2448, 2440, 2419, 2418, 3444, 3165, 3967,
	1671, 1366, 4892, 1418, 2330, 4038, 1087, 1089, 1088, 1346,
	3100, 3531, 2086, 2157, 4602, 1910, 4076, 1494, 4073, 804,
	1601, 4904, 4432, 4770, 4956, 3573, 4891, 1418, 2081, 3550,
	4104, 3928, 2236, 3055, 2622, 1418, 4923, 1335, 2337, 3621,
	2569, 2685, 4570, 2234, 4893, 4268, 2084, 1910, 3233, 4321,
	1377, 987, 988, 1335, 1085, 4749, 4747, 1214, 2494, 4668,
	3674, 1090, 3670, 3669, 4442, 4443, 1911, 3397, 3375, 1214,
	1601, 2502, 3600, 4051, 3553, 1086, 3587, 3555, 2237, 3552,
	2290, 1836, 1835, 1335, 2483, 2416, 1830, 1418, 1912, 2082,
	4078, 3657, 2968, 2157, 2085, 4550, 3615, 2967, 2966, 3646,
	3647, 1144, 4218, 1087, 4024, 4225, 2264, 3560, 3558, 2965,
	1214, 2964, 1726, 1712, 3221, 4025, 2290, 3224, 1724, 3226,
	1912, 3672, 3072, 3582, 3676, 2334, 1418, 1713, 3623, 3634,
	3707, 3625, 3626, 1446, 3606, 3586, 3629, 4322, 3630, 3542,
	3631, 3640, 3627, 3591, 3564, 1418, 992, 1418, 3572, 3721,
	3579, 3723, 3595, 3596, 3597, 3598, 3557, 5192, 1090, 1492,
	3526, 3527, 3528, 1214, 1214, 4365, 3271, 2354, 3240, 3271,
	3734, 1494, 1987, 1910, 2354, 3673, 1152, 2623, 3678, 4680,
	4847, 3680, 1418, 3577, 1086, 3578, 3757, 4526, 3076, 3101,
	3102, 4238, 3659, 2151, 4126, 3749, 2145, 3751, 2458, 1418,
	3755, 971, 972, 3768, 3761, 3793, 3612, 3613, 3559, 3614,
	2375, 1814, 1087, 3571, 3665, 4751, 4115, 2085, 5126, 3574,
	3575, 3704, 4654, 1332, 3654, 4905, 3686, 4769, 4077, 2123,
	843, 1616, 4652, 3727, 4105, 3211, 1343, 3899, 3624, 1332,
	3618, 3603, 3305, 3565, 1418, 1616, 3628, 1616, 4962, 3216,
	3214, 1494, 3342, 2487, 3594, 2388, 989, 990, 883, 1616,
	2154, 1788, 4676, 3722, 3635, 3706, 844, 1090, 3747, 1332,
	4848, 1616, 4675, 2151, 3643, 4663, 4412, 4411, 3730, 4970,
	4953, 4040, 2920, 1418, 3720, 3803, 4371, 3832, 4681, 2791,
	4750, 1344, 4394, 1883, 4644, 3563, 3570, 4992, 5130, 2583,
	1337, 1331, 3823, 5128, 3847, 2790, 4894, 3845, 3692, 5067,
	1333, 2263, 4895, 3787, 3700, 1885, 803, 1331, 2923, 1882,
	4878, 3756, 1616, 3294, 4664, 3713, 1333, 1880, 4868, 2559,
	4650, 3569, 3294, 3830, 1616, 3708, 1616, 3716, 3767, 5039,
	2154, 4963, 4623, 4405, 3744, 4363, 3788, 1331, 3791, 4224,
	3523, 3867, 3943, 3900, 3897, 3739, 1333, 3714, 3774, 2922,
	3745, 3715, 1725, 4849, 2921, 1854, 3736, 1852, 1723, 3838,
	1824, 3856, 3758, 1822, 1820, 2445, 1818, 1816, 3904, 3616,
	1810, 3765, 3775, 3486, 4116, 3120, 3416, 1494, 3769, 1804,
	1494, 3237, 1802, 1722, 3139, 1335, 991, 3133, 3090, 2996,
	2592, 2493, 2478, 2116, 2112, 1886, 973, 974, 1763, 3915,
	3776, 2526, 2397, 4735, 4410, 3895, 2373, 3841, 889, 3524,
	3923, 3922, 892, 3846, 1214, 3780, 3914, 1906, 3348, 3347,
	1214, 1214, 3314, 2611, 1214, 1214, 1214, 3848, 1214, 3098,
	3795, 3566, 3567, 3568, 1841, 2529, 2439, 1214, 2157, 2417,
	189, 189, 4488, 3828, 3827, 3826, 1214, 2187, 2185, 2020,
	1777, 1214, 1695, 1299, 4173, 4492, 4172, 1494, 3889, 1099,
	3853, 4472, 5102, 4952, 3896, 4568, 1214, 4497, 1155, 3862,
	4485, 3887, 3855, 4423, 1494, 4422, 2585, 3748, 3921, 3865,
	3866, 3880, 2584, 4264, 2157, 2157, 1214, 1214, 3920, 1214,
	1214, 1214, 3908, 4394, 3909, 4255, 3910, 4189, 1884, 4170,
	4141, 4139, 1881, 3918, 4117, 3834, 2558, 1214, 3829, 3819,
	1879, 1214, 3924, 2157, 2157, 1214, 1214, 1214, 1214, 1214,
	1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214, 1214,
	1214, 1214, 1214, 1214, 1214, 2575, 1214, 3929, 3946, 4563,
	3956, 3957, 3267, 3259, 1214, 1214, 2157, 3996, 1853, 3997,
	1851, 1214, 3252, 1823, 3244, 3229, 1821, 1819, 5097, 1817,
	1815, 3228, 1214, 1809, 3209, 3015, 3891, 3010, 2415, 3926,
	2413, 1332, 1803, 1337, 1337, 1801, 1721, 1214, 2390, 2356,
	2319, 2306, 2292, 3882, 2220, 2217, 2214, 2211, 2525, 2396,
	2206, 2204, 2200, 2191, 3964, 3844, 5023, 3759, 3881, 4552,
	1915, 1312, 2365, 2129, 3395, 2642, 3987, 5120, 2242, 1494,
	2230, 2231, 4846, 3953, 2595, 3951, 4070, 3368, 2151, 4553,
	3366, 3202, 1418, 1418, 3963, 1104, 1106, 1108, 1313, 5004,
	2115, 4914, 4584, 4035, 2642, 4002, 4504, 1418, 1418, 3979,
	883, 1418, 4409, 3295, 3641, 2259, 4057, 3893, 1676, 1331,
	3986, 4787, 3077, 3898, 3890, 3974, 4780, 4276, 1333, 3051,
	1214, 2301, 2593, 3999, 2151, 2151, 2516, 4031, 1335, 1335,
	3994, 3970, 3972, 3973, 3995, 3049, 2457, 4027, 3993, 4001,
	1397, 3051, 1877, 1878, 1398, 2154, 2553, 1214, 189, 2548,
	5003, 4081, 4082, 2151, 2151, 3878, 4028, 3074, 4036, 2523,
	4463, 4499, 3166, 3396, 1922, 1923, 4094, 4095, 1146, 2594,
	4101, 1800, 3081, 2280, 1916, 1922, 1923, 4806, 2281, 3760,
	1214, 1214, 4678, 4047, 4048, 4372, 2151, 1468, 4044, 4045,
	4350, 2154, 2154, 3687, 4102, 3082, 1925, 2229, 4103, 2403,
	3103, 1465, 1314, 1919, 1425, 1365, 3082, 5114, 5075, 4185,
	3227, 4252, 2441, 275, 2261, 1436, 1214, 1214, 3146, 3144,
	2154, 2154, 4121, 3153, 1214, 1398, 3137, 3135, 4059, 1398,
	3084, 1857, 1924, 4184, 4961, 3086, 5160, 4943, 3696, 3697,
	3136, 3698, 1172, 1924, 1616, 1616, 4140, 1616, 4142, 3085,
	4913, 1616, 4907, 2154, 1616, 4845, 1407, 4771, 835, 1418,
	889, 729, 4154, 4203, 892, 4742, 4655, 4262, 4097, 4254,
	4241, 4067, 3833, 3274, 2907, 4090, 2226, 2138, 4677, 3888,
	3883, 3884, 3885, 3886, 2157, 4158, 4994, 3123, 1629, 3740,
	3741, 4995, 3742, 1628, 2626, 2282, 4159, 4161, 1148, 4175,
	3604, 2375, 5191, 4909, 4060, 1407, 4181, 3492, 3493, 4187,
	1922, 1923, 5133, 2286, 1332, 1332, 1640, 4994, 3892, 2145,
	3370, 4188, 4995, 4342, 4211, 4146, 1616, 4208, 4209, 2270,
	3037, 2786, 1214, 4151, 4086, 4269, 1787, 1407, 1407, 3351,
	1337, 1214, 1786, 4278, 4234, 2269, 3036, 1639, 4197, 4042,
	1616, 1640, 2821, 2270, 2269, 1616, 1616, 1616, 3098, 3280,
	1856, 4261, 4772, 1855, 4716, 4223, 4284, 4501, 4496, 4495,
	4338, 4312, 4085, 3294, 3975, 4248, 3753, 3750, 1616, 3354,
	1616, 2014, 2013, 4286, 2599, 5176, 1494, 5141, 5009, 4947,
	2283, 2288, 1331, 1331, 2408, 4194, 4273, 4946, 4202, 2145,
	3162, 1333, 1333, 4945, 4877, 3665, 4876, 4240, 4823, 4270,
	4745, 4708, 4201, 4236, 1494, 4272, 4212, 1214, 1214, 4290,
	4647, 4641, 4543, 1214, 1214, 2157, 4523, 4253, 1214, 1214,
	4461, 1214, 4400, 4289, 1222, 1335, 1214, 4282, 4228, 4137,
	2883, 4129, 3837, 1587, 3836, 4249, 3679, 1214, 3622, 3355,
	3345, 3322, 3321, 3320, 4302, 3319, 3258, 3231, 3230, 4305,
	3075, 4256, 3006, 1214, 2151, 3000, 2989, 2988, 4204, 2977,
	4279, 2715, 2586, 4274, 2554, 2284, 2547, 4280, 4271, 4304,
	1601, 282, 282, 282, 4323, 735, 736, 4227, 751, 735,
	751, 762, 2546, 2545, 802, 2544, 2543, 4287, 822, 4288,
	2455, 2429, 2425, 829, 829, 829, 2424, 2423, 2422, 2421,
	2194, 2193, 282, 4336, 2192, 2190, 2128, 2127, 4306, 1876,
	1875, 1811, 1690, 4258, 1337, 4332, 1689, 1688, 2291, 1687,
	4311, 2154, 1337, 966, 1686, 1685, 1494, 1494, 1684, 1494,
	282, 4317, 1679, 1675, 1673, 1672, 1337, 1606, 1605, 1604,
	1485, 1484, 1483, 1482, 1481, 4377, 1428, 1616, 1616, 1384,
	1383, 1382, 1381, 1380, 1379, 1378, 1376, 1371, 1370, 1369,
	1494, 1368, 1367, 959, 8, 1294, 2232, 1110, 1096, 4851,
	4440, 4439, 4438, 2582, 3644, 96, 1681, 4324, 921, 2289,
	90, 2363, 4136, 1060, 4213, 1214, 4991, 4222, 4881, 1664,
	929, 4972, 4250, 3681, 3171, 2151, 1337, 2528, 1337, 1812,
	2530, 4413, 4414, 4395, 4396, 4362, 3581, 2949, 4935, 1335,
	4346, 1332, 4398, 3454, 4813, 4616, 2789, 1335, 3645, 2018,
	3535, 92, 1198, 1418, 4451, 4404, 1244, 4471, 4407, 4534,
	4464, 1335, 4533, 1494, 4424, 1418, 1601, 4123, 1418, 4480,
	3806, 189, 4483, 4467, 4468, 4374, 4375, 1407, 4376, 4530,
	1214, 4369, 4379, 1494, 4529, 2142, 4386, 4416, 2144, 1162,
	1497, 5017, 2154, 2243, 4373, 2645, 735, 735, 5182, 4389,
	1204, 4419, 4378, 2257, 282, 2252, 4385, 2990, 2865, 1221,
	4500, 1218, 4502, 3586, 2146, 4465, 2148, 1220, 1219, 1331,
	4421, 1335, 4303, 1335, 2147, 1616, 1616, 2038, 1333, 4380,
	4382, 4406, 1601, 1217, 1601, 4393, 2141, 4260, 3278, 2285,
	4415, 3863, 1731, 1729, 1062, 2247, 2709, 2773, 3443, 2011,
	1178, 1200, 4527, 1418, 2770, 4486, 1359, 4554, 1189, 3561,
	3540, 4466, 3850, 4066, 2621, 1494, 939, 3489, 2776, 1350,
	1616, 2888, 4503, 4447, 2145, 4447, 2881, 2877, 3632, 4571,
	3268, 4524, 1892, 4630, 1989, 3279, 4484, 1888, 2787, 4521,
	1462, 4470, 1182, 2707, 2002, 3421, 1616, 1616, 1616, 1616,
	1616, 1616, 1616, 2631, 4479, 3857, 4514, 4482, 3584, 2983,
	4997, 3983, 4560, 3352, 2433, 4520, 1494, 1311, 1310, 1357,
	2145, 2145, 1309, 4978, 4975, 1332, 2353, 4522, 1214, 1214,
	1214, 4513, 4537, 1332, 3801, 3802, 2235, 4512, 3030, 2719,
	3820, 4450, 1194, 4532, 1600, 4555, 1494, 1332, 4528, 2145,
	2145, 1214, 4540, 4572, 1214, 1214, 4494, 4546, 4575, 4544,
	4539, 2574, 3916, 3546, 1214, 4239, 4580, 2157, 1692, 4685,
	1206, 1974, 1214, 1214, 4481, 3198, 3197, 4840, 1447, 1445,
	1444, 4573, 2145, 1443, 4595, 2959, 5150, 3164, 2366, 1494,
	4132, 1616, 4131, 4130, 246, 3389, 4608, 1913, 4589, 1905,
	4587, 4586, 4593, 1331, 243, 245, 1418, 1332, 244, 1332,
	3685, 1331, 1333, 4071, 3590, 5073, 4156, 3792, 24, 836,
	1333, 837, 838, 3040, 4603, 1331, 2262, 4613, 1494, 1464,
	4107, 832, 23, 22, 1333, 21, 1214, 119, 4566, 43,
	20, 161, 159, 136, 156, 155, 128, 154, 153, 1214,
	152, 151, 150, 158, 149, 148, 143, 147, 1214, 146,
	145, 144, 142, 2157, 4557, 140, 141, 4625, 135, 139,
	138, 137, 134, 1214, 4619, 4649, 1214, 133, 132, 4636,
	4637, 131, 130, 129, 127, 1331, 160, 1331, 126, 125,
	1214, 203, 124, 1214, 1333, 123, 1333, 4658, 122, 4659,
	1494, 121, 4688, 120, 815, 816, 62, 4257, 1418, 61,
	116, 117, 4725, 19, 41, 14, 66, 67, 1616, 1616,
	1616, 18, 4660, 3379, 4639, 4657, 4640, 13, 2290, 36,
	95, 3039, 4667, 108, 107, 106, 37, 103, 35, 1337,
	17, 16, 15, 101, 100, 99, 34, 2151, 4707, 32,
	11, 9, 4734, 4721, 4699, 4700, 38, 2100, 12, 5,
	194, 193, 196, 192, 4744, 195, 3803, 4755, 94, 1494,
	4710, 191, 1616, 4748, 4307, 190, 93, 4760, 4705, 30,
	10, 4781, 186, 4761, 4697, 4246, 85, 188, 4717, 1609,
	4719, 4709, 4720, 187, 4718, 185, 184, 183, 86, 83,
	182, 89, 181, 4786, 2883, 2883, 84, 1214, 1214, 88,
	4737, 4768, 4736, 4711, 2154, 4741, 4790, 87, 4792, 28,
	4739, 4740, 4764, 6, 1214, 2157, 4746, 65, 7, 1666,
	4596, 4598, 4597, 1621, 1335, 3901, 4759, 111, 112, 39,
	4784, 81, 80, 2151, 79, 78, 1418, 4724, 27, 1418,
	64, 1418, 1418, 26, 178, 4782, 227, 226, 1601, 1601,
	2145, 225, 4783, 4789, 224, 223, 4575, 4788, 222, 221,
	1214, 220, 1214, 215, 1214, 219, 217, 216, 4794, 218,
	214, 237, 1745, 236, 1337, 230, 4447, 229, 235, 4802,
	4803, 4835, 1352, 234, 233, 232, 231, 1214, 1760, 1337,
	228, 4833, 240, 4801, 4805, 74, 213, 212, 211, 209,
	2154, 205, 208, 210, 207, 4822, 206, 4726, 4824, 204,
	4825, 4826, 239, 238, 75, 4811, 1373, 176, 177, 73,
	175, 174, 173, 172, 171, 4832, 4831, 1601, 282, 4828,
	282, 282, 4778, 1402, 282, 1412, 170, 4862, 169, 72,
	180, 179, 4752, 25, 1337, 1337, 1426, 4856, 1789, 2445,
	4855, 2, 1, 0, 822, 0, 0, 822, 1214, 0,
	0, 0, 4886, 0, 4884, 1337, 0, 0, 1337, 1335,
	0, 0, 1616, 0, 4871, 0, 2883, 2883, 2883, 2883,
	829, 0, 1616, 0, 1335, 0, 0, 0, 0, 4879,
	0, 2145, 4873, 0, 0, 2151, 0, 1214, 1214, 0,
	0, 4872, 282, 0, 282, 282, 1402, 1214, 282, 282,
	1332, 0, 4897, 4931, 0, 4932, 0, 1412, 0, 4911,
	4908, 4447, 4910, 4916, 0, 0, 4764, 0, 0, 0,
	0, 282, 0, 1642, 0, 4925, 4447, 0, 0, 1335,
	1335, 0, 4490, 4930, 4928, 0, 4929, 0, 0, 1662,
	0, 4927, 0, 0, 4940, 4924, 1669, 1214, 1214, 0,
	1335, 1214, 2154, 1335, 4948, 1616, 1418, 4944, 0, 1418,
	0, 4969, 0, 0, 0, 1694, 4949, 4951, 1412, 4939,
	0, 0, 282, 282, 0, 1402, 0, 0, 1331, 4977,
	4980, 4447, 4447, 1407, 4993, 0, 4999, 1333, 5000, 4996,
	4968, 4967, 4863, 0, 0, 4542, 822, 0, 282, 282,
	0, 0, 4447, 4986, 0, 4447, 0, 0, 4556, 0,
	1757, 0, 5022, 0, 5020, 4959, 4960, 1214, 1214, 1214,
	4982, 1765, 0, 0, 0, 4988, 966, 0, 4989, 4981,
	0, 4579, 0, 4985, 0, 5005, 0, 0, 0, 0,
	2000, 0, 5010, 0, 2005, 1332, 0, 4899, 4900, 5013,
	0, 5021, 0, 5054, 1214, 0, 4987, 0, 0, 5036,
	1332, 0, 0, 0, 5059, 5034, 5035, 5037, 4917, 0,
	0, 4919, 5055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 5080, 2290, 0,
	0, 5081, 0, 5056, 0, 5082, 0, 0, 0, 0,
	0, 5090, 5088, 0, 0, 5057, 0, 282, 5094, 0,
	0, 1214, 5072, 0, 0, 1332, 1332, 0, 0, 1418,
	5070, 0, 5087, 1331, 4744, 5103, 5086, 0, 0, 0,
	0, 282, 1333, 0, 0, 0, 1332, 5100, 1331, 1332,
	5121, 5096, 0, 5113, 0, 5095, 0, 1333, 5109, 5110,
	0, 0, 5117, 0, 0, 5115, 5069, 5112, 0, 5071,
	0, 0, 5124, 0, 4653, 5125, 5123, 0, 5137, 0,
	1337, 0, 1337, 5136, 5127, 5144, 4977, 5132, 0, 4980,
	4999, 5134, 0, 5146, 0, 5138, 5135, 0, 5111, 0,
	0, 0, 5143, 1331, 1331, 0, 5152, 5142, 0, 0,
	5151, 0, 1333, 1333, 2280, 1327, 0, 0, 0, 2281,
	0, 1418, 0, 0, 1331, 0, 0, 1331, 0, 5167,
	5168, 0, 0, 1333, 5175, 0, 1333, 0, 0, 0,
	5174, 0, 0, 0, 0, 0, 0, 5178, 0, 5173,
	0, 1214, 1214, 5186, 3418, 3419, 0, 5177, 5184, 5180,
	1214, 1214, 277, 277, 731, 5189, 3280, 5194, 0, 5200,
	0, 0, 0, 3547, 0, 1335, 5205, 1335, 5206, 5204,
	5198, 5202, 5210, 5209, 5207, 0, 5208, 5201, 0, 0,
	5171, 5203, 0, 0, 0, 0, 3280, 5214, 1418, 5215,
	5219, 5216, 5218, 0, 5222, 5220, 3576, 5213, 0, 5217,
	0, 0, 0, 2145, 0, 0, 0, 0, 1214, 5225,
	0, 3589, 5229, 0, 5231, 5222, 5233, 4447, 0, 4447,
	5226, 0, 0, 0, 0, 0, 2282, 0, 5228, 0,
	0, 0, 5195, 5196, 0, 0, 735, 3610, 0, 0,
	0, 5197, 0, 0, 2286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 282,
	0, 3492, 3493, 282, 3510, 3511, 3512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1402, 2120, 282,
	0, 282, 2126, 5145, 3947, 5147, 2883, 2883, 0, 282,
	5230, 751, 0, 0, 0, 0, 282, 0, 0, 2145,
	0, 1922, 1923, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 2195, 0, 0, 0, 0, 0, 0, 0,
	0, 2283, 2288, 0, 282, 1953, 3516, 3517, 3518, 3519,
	0, 282, 0, 1925, 0, 3889, 0, 0, 0, 0,
	3507, 0, 0, 0, 0, 0, 0, 0, 3887, 0,
	0, 1332, 0, 1332, 0, 0, 0, 0, 3880, 0,
	1978, 0, 0, 0, 822, 0, 0, 4869, 0, 1924,
	0, 0, 0, 1407, 0, 0, 2883, 2883, 2883, 2883,
	2883, 2883, 2883, 2883, 2883, 2883, 2883, 2883, 2883, 2883,
	2883, 2883, 2883, 2883, 2883, 2883, 4883, 2883, 0, 0,
	0, 0, 829, 0, 829, 0, 2284, 0, 0, 0,
	0, 0, 0, 0, 829, 829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4915, 0, 0, 0, 1331,
	0, 1331, 0, 0, 0, 0, 0, 3498, 1333, 0,
	1333, 0, 0, 3891, 2475, 0, 0, 0, 1922, 1923,
	0, 0, 0, 2445, 0, 2278, 0, 0, 0, 2291,
	3882, 2145, 2489, 2491, 0, 0, 0, 0, 0, 0,
	0, 3589, 1953, 0, 0, 3881, 2495, 1930, 1922, 1923,
	1925, 0, 0, 0, 0, 0, 0, 0, 2503, 0,
	2506, 2507, 2508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 3514, 1176, 1978, 0, 0,
	1925, 0, 0, 0, 0, 2276, 1924, 0, 0, 0,
	2289, 0, 0, 0, 0, 0, 0, 1944, 1952, 1954,
	0, 3890, 0, 0, 0, 0, 0, 1978, 0, 0,
	0, 0, 0, 0, 0, 0, 1924, 3508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 2277,
	0, 5006, 0, 0, 0, 282, 1941, 5008, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3917, 0, 0,
	1492, 0, 0, 0, 1947, 1948, 1949, 1950, 0, 0,
	0, 0, 4327, 0, 1930, 0, 282, 1975, 0, 0,
	282, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 282, 0, 1947, 1948, 1949, 1950, 0, 0,
	2285, 0, 0, 0, 1930, 0, 0, 0, 282, 0,
	282, 0, 0, 0, 735, 0, 282, 1975, 0, 0,
	0, 0, 0, 0, 0, 1952, 1954, 0, 822, 0,
	0, 0, 966, 0, 0, 0, 0, 3960, 0, 0,
	0, 0, 0, 0, 0, 0, 3888, 3883, 3884, 3885,
	3886, 0, 0, 0, 3976, 1952, 1954, 0, 3509, 0,
	0, 0, 282, 0, 1402, 282, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 822,
	2713, 1939, 1940, 0, 1945, 3892, 282, 0, 0, 0,
	0, 0, 0, 0, 2527, 0, 2000, 0, 1946, 282,
	282, 0, 282, 0, 282, 0, 282, 0, 282, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2564, 0, 0, 2565, 0, 2566, 0,
	0, 0, 2445, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 282, 282, 282, 282, 0, 1621, 1977,
	0, 0, 0, 0, 1975, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 802, 0, 0, 0, 822, 0, 0, 4069,
	0, 0, 0, 0, 1975, 0, 3939, 3940, 0, 0,
	0, 0, 0, 0, 0, 3504, 3505, 3506, 0, 0,
	0, 0, 3503, 3501, 3502, 3494, 3495, 3496, 3497, 3499,
	3500, 0, 1951, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1388,
	0, 1388, 1388, 0, 0, 1946, 0, 0, 0, 0,
	0, 0, 1951, 1933, 1934, 1926, 1927, 1928, 1929, 1931,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 0, 0, 0, 2721,
	0, 0, 0, 0, 0, 0, 4003, 4004, 4005, 4006,
	4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016,
	4017, 4018, 4019, 4020, 4021, 4022, 1977, 4026, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 0, 0, 0, 0,
	0, 0, 282, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 1935,
	1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 1412, 1746,
	1747, 0, 0, 3163, 0, 0, 1942, 1938, 0, 1935,
	1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 1412, 0, 77,
	751, 0, 751, 1176, 1176, 1176, 3005, 0, 0, 0,
	0, 0, 282, 0, 0, 282, 82, 0, 0, 282,
	0, 282, 0, 0, 0, 0, 1402, 0, 282, 282,
	0, 1412, 1412, 3021, 0, 0, 0, 0, 282, 0,
	0, 0, 1578, 0, 0, 0, 0, 1922, 1923, 0,
	1955, 1956, 1957, 1966, 1967, 1968, 0, 91, 1867, 0,
	0, 0, 0, 0, 3492, 3493, 0, 3510, 3511, 3512,
	0, 1953, 0, 3308, 0, 0, 0, 0, 0, 1925,
	0, 0, 829, 829, 0, 3315, 829, 829, 0, 1972,
	0, 0, 0, 0, 0, 3064, 0, 0, 960, 0,
	0, 0, 0, 0, 0, 0, 1978, 282, 0, 1601,
	0, 50, 0, 113, 0, 1924, 0, 0, 0, 97,
	110, 282, 0, 0, 0, 2883, 1944, 0, 0, 0,
	0, 0, 0, 0, 282, 1941, 0, 0, 0, 0,
	0, 0, 0, 3507, 954, 822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 76, 0, 957, 956, 0, 0, 0, 0,
	0, 98, 0, 282, 282, 3159, 1642, 0, 0, 4384,
	77, 0, 0, 0, 0, 0, 0, 2883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 0, 0,
	0, 0, 0, 1947, 1948, 1949, 1950, 0, 0, 0,
	4402, 282, 3219, 1930, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3498, 0, 0, 0, 1621, 0, 0, 0, 91, 1642,
	0, 0, 282, 0, 282, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 1963, 0, 0, 1973, 0, 0,
	0, 3263, 0, 0, 1952, 1954, 0, 0, 0, 0,
	0, 3064, 0, 735, 3515, 0, 0, 0, 0, 960,
	0, 0, 3159, 966, 3064, 0, 0, 0, 0, 0,
	1939, 1940, 50, 0, 113, 0, 0, 0, 3514, 0,
	97, 110, 0, 0, 2110, 0, 282, 0, 1961, 0,
	0, 0, 0, 0, 0, 1621, 1621, 0, 0, 0,
	2121, 0, 1599, 1945, 102, 282, 1402, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 282, 0,
	3508, 1402, 0, 1402, 0, 1402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 0, 0, 1388, 0, 0, 0, 0,
	0, 1169, 1599, 0, 0, 2883, 0, 0, 0, 0,
	0, 0, 197, 105, 0, 0, 109, 0, 0, 0,
	0, 0, 282, 282, 282, 282, 1402, 0, 0, 1402,
	0, 282, 0, 1975, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	1975, 961, 0, 2883, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 282, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 2883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1951, 0, 249, 0, 0, 4614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 1621, 1621, 1621,
	1621, 3509, 0, 0, 0, 0, 202, 0, 0, 4614,
	0, 0, 1964, 1578, 248, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 198, 0, 0, 1977, 0, 0, 2645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 1642, 0, 197, 105, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 961, 0, 0, 0, 0, 157, 0, 0,
	2645, 1962, 0, 0, 0, 0, 0, 0, 0, 1176,
	0, 1936, 1937, 1943, 1965, 1942, 1938, 1578, 1935, 1933,
	1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 3504, 3505,
	3506, 0, 0, 0, 249, 3503, 3501, 3502, 3494, 3495,
	3496, 3497, 3499, 3500, 0, 0, 0, 2431, 0, 0,
	0, 2438, 0, 0, 0, 4622, 0, 0, 0, 0,
	0, 162, 0, 2451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 2463,
	0, 2463, 0, 0, 0, 248, 0, 2470, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	241, 2858, 2859, 2860, 2861, 2854, 2855, 2856, 2857, 242,
	0, 0, 282, 198, 0, 0, 0, 735, 0, 0,
	0, 0, 735, 0, 0, 735, 0, 4670, 735, 735,
	0, 0, 0, 2438, 735, 0, 2499, 955, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	3771, 0, 0, 0, 282, 0, 0, 2519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2535, 0, 2537, 0, 2539, 0, 2541, 3796, 2542,
	0, 0, 0, 0, 2834, 2835, 2836, 2837, 0, 0,
	3824, 0, 0, 0, 0, 282, 0, 1578, 0, 282,
	282, 0, 0, 0, 0, 0, 0, 2846, 2847, 2848,
	2849, 2842, 2843, 2844, 2845, 2850, 2851, 2852, 2853, 0,
	0, 0, 0, 0, 2571, 2572, 2573, 0, 0, 0,
	0, 0, 0, 3064, 3064, 282, 0, 3652, 2120, 0,
	0, 3870, 0, 0, 3064, 0, 2126, 0, 0, 0,
	0, 0, 0, 3894, 0, 3064, 2126, 0, 3064, 2126,
	0, 0, 2126, 0, 0, 3652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 282, 2120,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	2830, 2831, 2832, 2833, 2838, 2839, 2840, 2841, 2120, 0,
	282, 0, 3726, 3726, 0, 0, 0, 1402, 0, 0,
	0, 0, 0, 0, 0, 4810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3064,
	0, 3064, 0, 3754, 3064, 2120, 0, 0, 3064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2120, 0, 0, 822, 0, 0, 0, 0,
	0, 0, 0, 4839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1402, 4861, 0,
	0, 0, 0, 0, 282, 0, 0, 1621, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 3797, 0, 0, 0, 3799, 3064,
	0, 0, 282, 0, 0, 0, 282, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 3263,
	0, 0, 1402, 0, 282, 0, 0, 3064, 0, 735,
	0, 0, 0, 0, 0, 0, 3064, 2956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1621, 1621,
	1621, 1621, 1621, 1621, 1621, 1621, 1621, 1621, 1621, 1621,
	1621, 1621, 1621, 1621, 1621, 1621, 1621, 0, 1621, 0,
	0, 0, 0, 0, 3907, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1922, 1923, 0, 1955, 1956,
	1957, 1966, 1967, 1968, 3913, 0, 0, 0, 1642, 0,
	0, 0, 1402, 282, 0, 282, 0, 0, 1959, 1953,
	0, 1402, 0, 3007, 0, 0, 1388, 1925, 0, 0,
	1388, 0, 1388, 0, 0, 0, 0, 1972, 0, 0,
	0, 1578, 0, 0, 0, 0, 0, 0, 0, 2451,
	0, 0, 282, 0, 1978, 0, 0, 0, 1922, 1923,
	0, 0, 0, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 0, 0, 1922, 1923, 0,
	0, 0, 1953, 1941, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 1925,
	3981, 0, 1578, 0, 0, 0, 0, 1978, 0, 0,
	0, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 1944, 1578, 0,
	0, 0, 0, 0, 0, 1924, 1941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 0, 0, 0,
	0, 1947, 1948, 1949, 1950, 1941, 0, 0, 0, 0,
	0, 1930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 4195, 4196, 0, 0, 0, 0, 0,
	4198, 0, 0, 4199, 2438, 2438, 0, 0, 0, 0,
	0, 0, 3942, 0, 0, 0, 0, 282, 282, 0,
	0, 0, 1963, 0, 0, 1973, 0, 0, 0, 0,
	0, 3937, 1952, 1954, 1947, 1948, 1949, 1950, 0, 0,
	0, 0, 735, 735, 1930, 0, 0, 0, 0, 1969,
	0, 1970, 0, 1947, 1948, 1949, 1950, 0, 1939, 1940,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2438, 0, 0, 1961, 0, 0, 0,
	0, 0, 2451, 0, 282, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 1578, 1952, 1954, 0, 0, 4285,
	0, 0, 0, 0, 2489, 4291, 4292, 0, 0, 0,
	0, 0, 0, 0, 1952, 1954, 0, 0, 0, 0,
	0, 1939, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3313, 0, 1971,
	1939, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1922, 1923, 1945, 0, 3324, 0, 3327, 0,
	1960, 0, 0, 0, 0, 0, 822, 0, 0, 0,
	0, 1975, 0, 1945, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 1925, 0, 0, 0, 0, 0,
	0, 1578, 0, 1958, 0, 0, 0, 0, 0, 3726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 282, 0, 0, 0, 0, 0,
	1924, 0, 0, 3361, 1599, 3363, 1599, 3159, 0, 1951,
	0, 0, 3369, 0, 1975, 0, 0, 0, 0, 0,
	0, 0, 2120, 0, 282, 0, 0, 0, 751, 751,
	1412, 0, 1946, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 282, 3263, 3398, 0, 3263, 2126,
	1964, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 282, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 282, 0, 4391, 4392, 0, 0,
	0, 1951, 0, 1977, 0, 1946, 0, 0, 0, 0,
	0, 0, 0, 3064, 282, 0, 0, 0, 1930, 0,
	0, 0, 0, 3159, 1946, 0, 966, 3064, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 1952,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 1936,
	1937, 1943, 1965, 1942, 1938, 0, 1935, 1933, 1934, 1926,
	1927, 1928, 1929, 1931, 1932, 0, 0, 0, 0, 0,
	4355, 0, 0, 0, 4354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 0,
	0, 0, 0, 0, 0, 4347, 0, 0, 0, 0,
	0, 0, 0, 1958, 2489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1942, 1938, 0, 1935,
	1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0,
	0, 0, 0, 0, 0, 1942, 1938, 0, 1935, 1933,
	1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 1642, 0, 282, 0, 1975, 0,
	0, 0, 0, 0, 0, 4588, 0, 4590, 4591, 4592,
	282, 4594, 0, 0, 0, 1922, 1923, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	77, 1412, 0, 282, 1412, 0, 0, 1925, 0, 0,
	0, 0, 0, 0, 0, 3064, 3064, 82, 3652, 0,
	0, 3726, 3064, 0, 0, 0, 0, 0, 0, 0,
	4449, 0, 4449, 1642, 1978, 0, 0, 0, 0, 1946,
	0, 0, 0, 1924, 3064, 3599, 2126, 0, 0, 0,
	3652, 0, 1642, 1642, 282, 2120, 0, 0, 91, 0,
	4642, 0, 0, 1958, 0, 0, 0, 0, 2120, 0,
	282, 2120, 0, 282, 76, 3726, 1621, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 1388, 0, 0, 0,
	1599, 1599, 77, 0, 3064, 0, 3064, 282, 0, 960,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	0, 0, 50, 0, 113, 0, 1958, 0, 0, 0,
	97, 110, 1958, 0, 0, 0, 3648, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 3064, 3064, 0, 0,
	0, 0, 3263, 3263, 0, 0, 0, 0, 1621, 3652,
	91, 1930, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 3703, 3705,
	282, 0, 2451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 0, 0, 0, 1578, 4738, 0, 0,
	0, 960, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929,
	1931, 1932, 1952, 1954, 0, 0, 113, 0, 0, 0,
	0, 0, 97, 110, 0, 0, 0, 0, 0, 1578,
	1958, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1578, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 1176, 3821, 0, 1958, 0, 3825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3064, 2126, 0,
	2126, 0, 0, 4662, 0, 102, 1621, 0, 0, 0,
	0, 1975, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4686, 0, 4686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 822,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	3726, 0, 1402, 197, 105, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2980, 0, 1621,
	0, 2120, 0, 282, 1578, 0, 0, 0, 0, 0,
	0, 0, 1946, 0, 247, 0, 0, 102, 0, 0,
	0, 0, 961, 0, 3919, 0, 1599, 157, 0, 0,
	4662, 0, 0, 4449, 0, 0, 1642, 0, 0, 0,
	3064, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 0,
	0, 2489, 0, 0, 0, 0, 0, 0, 0, 0,
	4775, 1958, 3189, 3932, 249, 0, 0, 0, 0, 0,
	0, 0, 1642, 1977, 1958, 197, 105, 0, 0, 109,
	0, 0, 0, 0, 1578, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 3179, 3177, 0, 282,
	282, 0, 0, 3181, 3183, 3173, 247, 202, 0, 0,
	0, 0, 0, 0, 961, 248, 0, 0, 0, 157,
	2887, 0, 0, 3981, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 1958, 0, 0, 0, 0, 242,
	1958, 0, 0, 198, 0, 0, 3199, 0, 0, 3726,
	4830, 0, 0, 0, 0, 0, 249, 0, 4662, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 1934, 1926,
	1927, 1928, 1929, 1931, 1932, 0, 0, 0, 4449, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4449, 0, 0, 0, 1922, 1923, 202,
	1955, 1956, 1957, 1966, 1967, 1968, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	1578, 1953, 241, 1578, 0, 0, 0, 0, 0, 1925,
	751, 242, 0, 0, 0, 198, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 4449, 4449,
	0, 0, 0, 0, 0, 0, 1978, 0, 0, 201,
	0, 0, 0, 0, 0, 1924, 0, 0, 0, 4449,
	0, 282, 4449, 0, 0, 0, 1944, 0, 0, 0,
	0, 0, 2126, 0, 0, 1941, 0, 0, 0, 0,
	3175, 0, 1642, 0, 1642, 0, 0, 0, 0, 0,
	1578, 3191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 1412, 0, 3190, 3180, 3178, 3182, 3184, 3174,
	3176, 3192, 3194, 0, 0, 0, 4957, 0, 0, 0,
	0, 0, 3186, 3188, 3196, 0, 0, 0, 0, 0,
	0, 0, 4686, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 1947, 1948, 1949, 1950, 0, 0, 0,
	0, 0, 0, 1930, 0, 0, 0, 0, 3200, 0,
	3064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 282, 0, 1973, 0, 0,
	0, 0, 0, 0, 1952, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3981, 0, 0,
	0, 1969, 0, 1970, 0, 2451, 0, 0, 0, 0,
	1939, 1940, 1578, 0, 0, 0, 0, 0, 0, 0,
	0, 1642, 0, 0, 2451, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 4235, 0, 0, 0, 0,
	0, 0, 0, 1945, 0, 4245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 76, 3193, 0, 0, 0,
	2451, 0, 0, 0, 0, 4263, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 1971, 0, 0, 4662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 3201, 0, 0, 4309,
	0, 91, 0, 0, 3064, 3185, 3187, 3195, 0, 0,
	0, 0, 0, 0, 4449, 0, 4449, 0, 0, 1642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 960, 1958, 0, 0, 0, 0, 0, 0,
	0, 1951, 0, 0, 0, 50, 0, 113, 0, 0,
	0, 0, 0, 97, 110, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 1946, 0, 0, 0, 0, 0,
	3064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3159, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	3064, 0, 1958, 0, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 3159, 98, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 1977, 0, 0, 0, 1958,
	1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
	1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
	1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
	1958, 1958, 1958, 1958, 1958, 0, 0, 0, 0, 0,
	1958, 0, 1958, 1958, 1958, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 2887, 2887, 0, 0, 0, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1936, 1937, 1943, 1965, 1942, 1938, 1578, 1935, 1933,
	1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 4469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 2451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 1958, 0, 0, 1958, 0, 0, 1958,
	0, 0, 0, 0, 0, 1958, 1958, 1958, 1958, 1958,
	1958, 1958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 105, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	1578, 2451, 1578, 0, 0, 0, 0, 0, 0, 0,
	0, 4567, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 1958, 0, 0, 3513, 961, 2887, 2887, 2887, 2887,
	157, 0, 1958, 1578, 1958, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 1922,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 162, 0, 0, 0, 0, 0,
	0, 1925, 0, 0, 0, 0, 1578, 0, 1922, 1923,
	202, 1955, 1956, 1957, 1966, 1967, 1968, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 1578, 0, 1978, 0,
	0, 1959, 1953, 241, 1161, 0, 0, 1924, 0, 0,
	1925, 0, 242, 0, 0, 0, 198, 0, 1944, 0,
	1972, 0, 0, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1978, 0, 0,
	1740, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 4672, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 0,
	0, 0, 0, 3936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1947, 1948, 1949, 1950, 0,
	0, 0, 0, 0, 0, 1930, 0, 0, 0, 0,
	0, 0, 0, 0, 2451, 0, 0, 0, 0, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 1948, 1949, 1950, 0, 0,
	0, 0, 0, 0, 1930, 0, 0, 0, 0, 1578,
	0, 0, 0, 0, 0, 0, 1952, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1939, 1940, 0, 1963, 0, 0, 1973, 0,
	0, 0, 1578, 0, 0, 1952, 1954, 0, 0, 0,
	0, 0, 1922, 1923, 0, 0, 0, 0, 0, 0,
	4800, 1599, 1969, 0, 1970, 1945, 0, 0, 0, 0,
	0, 1939, 1940, 0, 1958, 1958, 1953, 1958, 0, 0,
	0, 1578, 0, 0, 1925, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	0, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	1941, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 1971, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 3407, 0, 856, 0,
	0, 0, 0, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 1948,
	1949, 1950, 1578, 0, 867, 871, 1946, 0, 1930, 0,
	0, 0, 4918, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 869, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 1958, 0, 2887, 2887, 0, 0,
	1958, 0, 0, 0, 0, 1946, 0, 868, 0, 0,
	3513, 3513, 0, 0, 1958, 1958, 0, 0, 0, 1952,
	1954, 0, 0, 0, 1958, 0, 0, 1977, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 1939, 1940, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 4971, 0, 0, 0,
	861, 0, 0, 0, 0, 0, 1977, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 0,
	0, 866, 0, 0, 0, 0, 2887, 2887, 2887, 2887,
	2887, 2887, 2887, 2887, 2887, 2887, 2887, 2887, 2887, 2887,
	2887, 2887, 2887, 2887, 2887, 2887, 0, 2887, 3513, 3513,
	3513, 3513, 0, 0, 0, 0, 5015, 1942, 1938, 0,
	1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 1958, 0, 0, 0, 0, 0, 0,
	797, 0, 1936, 1937, 1943, 1965, 1942, 1938, 1975, 1935,
	1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0,
	0, 0, 0, 3467, 1421, 0, 863, 3468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1161, 1161, 1161, 0, 0, 1922, 1923, 0, 1955,
	1956, 1957, 1966, 1967, 1968, 0, 1951, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1953, 0, 0, 0, 0, 876, 0, 0, 1925, 1946,
	0, 0, 0, 0, 1591, 0, 0, 0, 1972, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 1978, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 0, 1958, 0, 0, 0,
	1644, 0, 1650, 0, 1656, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 862, 0,
	0, 0, 0, 1748, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 1772, 1947, 1948, 1949, 1950, 0, 0, 0, 0,
	0, 0, 1930, 0, 0, 0, 0, 796, 0, 0,
	1942, 1938, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929,
	1931, 1932, 0, 872, 0, 0, 0, 0, 0, 860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1963, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 1952, 1954, 0, 0, 0, 0, 0,
	1837, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	1969, 0, 1970, 0, 0, 0, 0, 0, 857, 1939,
	1940, 0, 0, 0, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 864, 0, 0,
	0, 0, 1945, 0, 0, 0, 0, 0, 0, 76,
	0, 0, 798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 859, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 1958, 1958, 0, 0,
	1958, 3513, 3513, 1958, 82, 0, 0, 1958, 874, 875,
	1971, 0, 0, 0, 1958, 0, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 0, 0, 0, 1958, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 91, 0, 0, 0, 1999,
	1958, 1958, 1958, 1958, 1958, 2012, 0, 0, 0, 0,
	1958, 0, 1958, 0, 0, 3513, 3513, 3513, 3513, 3513,
	3513, 3513, 3513, 3513, 3513, 3513, 3513, 3513, 3513, 3513,
	3513, 3513, 3513, 3513, 3513, 0, 960, 0, 3513, 0,
	0, 1958, 1958, 0, 0, 0, 0, 0, 0, 0,
	1951, 113, 0, 1958, 0, 0, 0, 97, 110, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 2072, 2072, 0, 0, 0, 0, 1958, 98,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1210, 0, 0,
	1962, 0, 1922, 1923, 0, 0, 0, 0, 0, 0,
	1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933, 1934,
	1926, 1927, 1928, 1929, 1931, 1932, 1953, 0, 0, 0,
	0, 2764, 0, 0, 1925, 2765, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 281, 281, 1161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 102, 0, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 0, 0, 890, 0, 0, 0, 0,
	0, 1944, 0, 1958, 0, 0, 0, 0, 0, 0,
	1941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 890, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 105, 0, 0, 109, 0, 0, 1958, 1958, 0,
	1922, 1923, 1958, 1958, 0, 0, 1958, 1958, 0, 0,
	0, 1958, 0, 0, 0, 1958, 3400, 0, 0, 0,
	1958, 247, 0, 0, 1953, 0, 0, 0, 0, 961,
	0, 0, 1925, 0, 157, 2887, 0, 0, 1947, 1948,
	1949, 1950, 0, 0, 0, 0, 0, 0, 1930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 1941, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 1952,
	1954, 0, 0, 0, 0, 0, 0, 2887, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 1334, 0, 0,
	0, 0, 248, 0, 0, 1939, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 1945, 0,
	0, 0, 0, 1958, 0, 0, 1947, 1948, 1949, 1950,
	0, 0, 0, 0, 201, 0, 1930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1939, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1958, 1958, 1958, 0, 0, 1945, 0, 0, 0,
	0, 0, 1958, 1958, 3513, 2887, 1951, 0, 2551, 0,
	0, 1958, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1946,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2580, 0, 0, 0,
	0, 0, 3513, 2887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 1975, 1958, 2887, 0,
	0, 0, 2620, 0, 2624, 1958, 0, 0, 0, 0,
	1977, 2638, 0, 0, 1958, 0, 1958, 0, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 1951, 2688, 0, 2690, 2691, 2692,
	2693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1946, 0, 0,
	1246, 0, 0, 2717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 0, 0, 2768,
	1942, 1938, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929,
	1931, 1932, 3513, 0, 0, 2798, 2801, 2804, 2807, 0,
	0, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	1958, 3513, 0, 0, 1958, 0, 0, 0, 0, 2879,
	0, 2890, 2892, 2897, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 910, 0, 0, 1942, 1938,
	0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932,
	0, 0, 0, 0, 0, 0, 912, 0, 0, 0,
	0, 913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 281, 281, 0, 0, 281, 0, 0,
	0, 0, 914, 0, 931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1922, 1923, 0, 1955, 1956, 1957,
	1966, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 0, 0, 916, 0, 1959, 1953, 0,
	1338, 0, 0, 0, 0, 1958, 1925, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 940, 0, 0,
	0, 0, 0, 0, 917, 281, 0, 281, 281, 0,
	1958, 281, 281, 1978, 0, 0, 0, 0, 938, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 890, 0, 0, 0, 0, 0,
	0, 0, 1941, 911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 0,
	0, 0, 0, 0, 0, 0, 918, 0, 0, 0,
	919, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	0, 0, 942, 0, 766, 281, 281, 797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 281, 0, 0, 0, 0, 0, 0, 0,
	1947, 1948, 1949, 1950, 0, 767, 0, 0, 0, 0,
	1930, 0, 0, 0, 0, 0, 768, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3222, 3223, 0, 3225, 0, 769, 0,
	0, 0, 941, 0, 0, 0, 0, 782, 0, 0,
	0, 1963, 936, 0, 1973, 0, 0, 0, 0, 0,
	788, 1952, 1954, 0, 0, 0, 0, 0, 765, 0,
	0, 0, 0, 766, 0, 0, 0, 0, 1969, 0,
	1970, 770, 0, 0, 0, 0, 0, 1939, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 1961, 771, 0, 0, 0,
	0, 0, 0, 0, 767, 0, 0, 0, 0, 920,
	1945, 0, 0, 0, 281, 768, 0, 0, 0, 772,
	922, 0, 0, 773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 769, 0, 0,
	797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 923, 0, 0, 0, 0, 0, 1971, 788,
	0, 0, 0, 0, 0, 3343, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	770, 0, 932, 0, 0, 0, 0, 0, 0, 0,
	1975, 0, 0, 0, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 909, 0, 0,
	933, 0, 0, 0, 0, 0, 0, 0, 0, 924,
	0, 0, 0, 0, 0, 784, 0, 0, 772, 0,
	0, 0, 773, 0, 0, 0, 0, 0, 0, 1979,
	1980, 0, 0, 0, 0, 0, 930, 0, 1951, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 925, 0, 0, 0, 926, 945, 0,
	944, 1946, 0, 0, 927, 787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 937, 3401, 3402, 0, 0, 1964,
	946, 3408, 943, 775, 0, 0, 0, 1922, 1923, 798,
	1955, 1956, 1957, 1966, 1967, 1968, 0, 0, 0, 0,
	3422, 3423, 0, 0, 0, 0, 2768, 0, 0, 0,
	1959, 1953, 1977, 795, 784, 776, 0, 0, 0, 1925,
	2094, 0, 1334, 0, 0, 0, 281, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 2094, 281, 0, 1978, 0, 0, 0,
	0, 3432, 890, 0, 0, 1924, 0, 796, 0, 890,
	0, 0, 0, 0, 0, 777, 1944, 3446, 0, 0,
	792, 793, 0, 790, 0, 1941, 0, 0, 0, 785,
	0, 0, 778, 0, 3458, 0, 0, 281, 1962, 0,
	794, 0, 775, 0, 281, 0, 0, 0, 1936, 1937,
	1943, 1965, 1942, 1938, 0, 1935, 1933, 1934, 1926, 1927,
	1928, 1929, 1931, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 795, 4353, 776, 0, 779, 0, 786, 0,
	0, 0, 0, 0, 0, 0, 0, 780, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 781, 1947, 1948, 1949, 1950, 789, 0, 0,
	0, 0, 0, 1930, 0, 0, 796, 0, 0, 0,
	0, 0, 798, 0, 777, 0, 0, 0, 0, 792,
	793, 0, 790, 783, 0, 2897, 2897, 2897, 785, 0,
	1338, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 1963, 0, 0, 1973, 0, 0,
	3551, 0, 0, 0, 1952, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 1970, 0, 779, 1338, 786, 0, 0,
	1939, 1940, 0, 1338, 0, 0, 780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 1338,
	0, 781, 0, 0, 0, 0, 789, 0, 0, 0,
	0, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1161, 1338,
	0, 1971, 0, 0, 0, 0, 0, 0, 281, 0,
	1161, 0, 890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3684, 0, 0, 0, 0, 0, 0, 0, 0,
	1922, 1923, 0, 1955, 1956, 1957, 1966, 1967, 1968, 281,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 1959, 1953, 281, 0, 0, 0, 0,
	0, 1951, 1925, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 1972, 281, 3737, 3738, 0, 0, 0, 281,
	0, 0, 0, 0, 1946, 0, 0, 0, 0, 1978,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	0, 0, 1964, 0, 0, 0, 0, 0, 1941, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 890, 281, 0, 281, 0, 281, 0, 281,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 1948, 1949, 1950,
	0, 0, 0, 0, 0, 0, 1930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 281, 281, 281,
	0, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933,
	1934, 1926, 1927, 1928, 1929, 1931, 1932, 1963, 0, 0,
	1973, 0, 0, 1338, 0, 1338, 3950, 1952, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 1969, 0, 1970, 0, 0, 0,
	0, 0, 0, 1939, 1940, 0, 0, 0, 0, 0,
	0, 2158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2638, 0, 0, 0, 0,
	0, 3934, 3935, 0, 0, 3938, 0, 0, 0, 3941,
	0, 0, 0, 0, 0, 0, 0, 0, 3945, 0,
	0, 0, 0, 0, 1971, 0, 0, 3952, 0, 0,
	0, 0, 3551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 3965, 0, 0,
	0, 0, 0, 0, 1338, 0, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3988, 3989, 0,
	3990, 3991, 3992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3998, 1334,
	0, 0, 4000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 1951, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 4029, 4030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1946, 0, 0,
	281, 0, 0, 4041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4050, 0,
	0, 0, 0, 0, 0, 1964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 281, 0,
	0, 0, 281, 0, 281, 0, 0, 0, 0, 0,
	0, 281, 281, 1338, 1338, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 4106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4124, 0,
	0, 0, 0, 0, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1936, 1937, 1943, 1965, 1942, 1938,
	0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932,
	281, 0, 4155, 0, 0, 0, 0, 0, 0, 3470,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 1338, 0, 1338, 0, 1338, 0, 4176, 4177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 281, 0, 1338,
	0, 1338, 1338, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1922, 1923, 0,
	1955, 1956, 1957, 1966, 1967, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 890, 0, 0, 0, 0, 0,
	1959, 1953, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 281, 0, 890, 0, 0,
	0, 0, 0, 2072, 281, 0, 1978, 0, 0, 0,
	0, 0, 4281, 0, 0, 1924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 2158, 2158, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 4325, 4326,
	0, 281, 0, 0, 4330, 4331, 0, 0, 0, 4334,
	4335, 0, 0, 0, 0, 0, 0, 4339, 0, 0,
	0, 0, 0, 1947, 1948, 1949, 1950, 0, 4343, 0,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 281, 281, 281, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 1338, 281,
	0, 0, 0, 0, 1963, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 1952, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 1969, 0, 1970, 0, 0, 0, 0, 281, 0,
	1939, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 1945, 0, 0, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 1199, 115, 0, 0, 0, 1161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 0, 0, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2158, 1135, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 1156, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4609,
	4610, 4611, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	0, 0, 2638, 0, 0, 4620, 4621, 0, 0, 0,
	0, 1321, 0, 0, 1338, 2094, 0, 0, 0, 0,
	0, 0, 0, 4629, 4632, 0, 0, 281, 0, 0,
	0, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933,
	1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3469, 0, 281, 0,
	0, 0, 281, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4687, 0, 0, 0, 0, 0, 0, 0, 281, 4695,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4703, 0, 1338, 1161, 1338, 0,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 4712, 0, 0, 4714, 0, 1338, 0, 0, 0,
	281, 281, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1922, 1923, 0, 1955, 1956, 1957, 1966,
	1967, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1953, 0, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 283,
	283, 283, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 0, 0, 0, 0, 0, 0,
	283, 1924, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 1941, 0, 0, 0, 890, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 4838, 0, 0, 0, 4842, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	1948, 1949, 1950, 0, 0, 0, 0, 0, 0, 1930,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 0, 0, 1973, 0, 0, 281, 0, 281, 4912,
	1952, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 1970,
	0, 0, 0, 0, 0, 0, 1939, 1940, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 2638,
	0, 0, 0, 0, 1961, 0, 0, 0, 4632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1161,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 1338, 1338, 0, 115, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 5033, 5033,
	5033, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 1334, 0, 0, 0, 0, 0, 1951, 0, 0,
	0, 0, 0, 2158, 0, 5058, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 115, 0, 115, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 890, 0, 0,
	0, 0, 5033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 2158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1156, 115, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 1936, 1937, 1943,
	1965, 1942, 1938, 0, 1935, 1933, 1934, 1926, 1927, 1928,
	1929, 1931, 1932, 0, 0, 0, 0, 281, 4958, 0,
	0, 0, 5033, 5190, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 281, 1338, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 281, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 281, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	1135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 1992, 0, 0, 1338, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 281, 0, 2004, 0, 0, 283, 0, 283, 283,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 1498, 283, 283, 0, 0, 283, 283, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 0, 2158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 2092, 0, 2095, 0, 115, 0,
	0, 0, 1498, 0, 1338, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 2158, 2158, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 283, 0, 2094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2158, 2158, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 1498, 283, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 2158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2094, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 1338, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 281, 0, 0, 281, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 882, 0, 1338, 1338, 0, 1338, 0, 0,
	0, 1338, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 1215, 0, 0, 0, 0, 0, 0, 0,
	882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	1338, 0, 1156, 0, 1156, 0, 0, 0, 0, 0,
	1338, 283, 0, 0, 0, 1338, 1338, 1338, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 283, 283, 283,
	0, 0, 0, 0, 0, 0, 0, 283, 1338, 0,
	1338, 0, 0, 0, 283, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 283, 0, 1338, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 2158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1135, 0, 0, 1135,
	1135, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 1338, 1338, 0, 1338,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 2706, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1156, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 1338, 0, 1338, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 2094, 2094, 283, 0, 1498, 1498, 283, 0, 0,
	0, 0, 0, 1338, 0, 0, 1498, 0, 0, 0,
	0, 0, 2094, 0, 281, 2094, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2095,
	0, 0, 0, 0, 0, 1338, 1338, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 283, 0, 0, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 1338, 283, 0, 283, 0,
	1338, 0, 0, 0, 283, 0, 0, 0, 281, 0,
	0, 0, 0, 1498, 0, 1498, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 1338, 1338, 1338,
	1338, 1338, 1338, 0, 0, 1498, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 1498,
	283, 0, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 1498, 1498, 1498, 0, 0, 281, 0,
	0, 0, 0, 0, 283, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 283, 0,
	283, 0, 283, 0, 283, 0, 283, 2158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 283, 283, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2158, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 2094, 0, 2094,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 1338,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 115, 0, 115, 0, 1338,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 115, 0, 0,
	0, 0, 0, 115, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2158, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	1617, 1496, 0, 0, 0, 0, 0, 1617, 0, 0,
	0, 0, 1618, 0, 283, 0, 0, 1498, 0, 0,
	0, 0, 0, 1617, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	283, 0, 0, 283, 0, 1618, 0, 283, 0, 283,
	0, 0, 0, 0, 1338, 1338, 283, 283, 0, 0,
	0, 1618, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 1338, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 2706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 283, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 283, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 1498, 0,
	1498, 0, 0, 1321, 0, 0, 1498, 0, 0, 882,
	0, 0, 0, 0, 283, 0, 882, 0, 1498, 1321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 0,
	283, 283, 283, 283, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 283, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 115, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 115, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1321, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 115,
	0, 0, 0, 0, 0, 1618, 1618, 0, 0, 0,
	0, 0, 0, 0, 0, 1617, 1496, 1617, 0, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 1617, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 0, 1617, 1617, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 882,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 1618, 0, 1618, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1618, 1618, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 283, 283, 1618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 1618, 1618, 1618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	1922, 1923, 0, 1955, 1956, 1957, 1966, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 1953, 283, 283, 0, 0, 283,
	0, 0, 1925, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 115, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 0, 0, 0, 1321, 1321, 0, 0, 1924, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 1941, 0,
	0, 0, 1495, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 1498, 0, 1498,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	283, 1498, 0, 1495, 0, 0, 1947, 1948, 1949, 1950,
	283, 0, 0, 1498, 283, 0, 1930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	1496, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	1973, 0, 0, 0, 1498, 0, 0, 1952, 1954, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 1498, 0,
	0, 0, 0, 0, 1969, 0, 1970, 0, 0, 0,
	0, 0, 0, 1939, 1940, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1945, 1496, 0, 1498,
	0, 283, 1498, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 0, 0, 1971, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 1498,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1922, 1923,
	0, 1955, 1956, 1957, 1966, 1967, 1968, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1953, 0, 1951, 0, 0, 0, 0, 0,
	1925, 0, 1495, 1496, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 1946, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 1978, 0, 0,
	0, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 1964, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1618, 1617, 0, 115,
	0, 0, 283, 0, 0, 1321, 0, 0, 0, 0,
	1617, 0, 1617, 1321, 1947, 1948, 1949, 1950, 1617, 0,
	0, 0, 0, 0, 1930, 0, 0, 0, 0, 0,
	1617, 0, 0, 0, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1936, 1937, 1943, 1965, 1942, 1938,
	0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932,
	0, 0, 0, 0, 0, 1963, 0, 0, 1973, 3466,
	0, 0, 0, 0, 0, 1952, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 1970, 1618, 0, 0, 0, 0,
	0, 1939, 1940, 0, 0, 0, 0, 0, 1618, 0,
	1618, 0, 0, 0, 0, 0, 1618, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 283, 0, 1945, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 1498, 1498, 0, 1498,
	0, 0, 0, 1498, 0, 0, 1498, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 1975, 0, 115, 283, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 1498, 1498, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 0, 0,
	1498, 0, 1498, 0, 0, 0, 283, 0, 1498, 0,
	0, 0, 0, 0, 0, 1946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 1495, 1498, 1498,
	0, 1498, 1936, 1937, 1943, 1965, 1942, 1938, 0, 1935,
	1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 1498,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 0, 2706, 0, 1498, 0, 0, 283, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 1922, 1923, 1496, 1955, 1956, 1957, 1966, 1967, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1953, 0, 1498, 1498, 1496,
	0, 0, 0, 1925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	1978, 0, 0, 0, 0, 0, 0, 1498, 283, 1924,
	0, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	1944, 0, 0, 0, 0, 1495, 0, 0, 0, 1941,
	0, 0, 0, 0, 0, 115, 0, 0, 1498, 1498,
	1498, 1498, 1498, 1498, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1617, 0, 0, 1498, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 1617,
	0, 1617, 0, 0, 0, 1495, 0, 1947, 1948, 1949,
	1950, 0, 882, 1617, 0, 0, 0, 1930, 0, 0,
	0, 0, 0, 1496, 0, 1617, 0, 0, 0, 0,
	0, 1498, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 1952, 1954,
	1498, 0, 0, 0, 0, 0, 1617, 0, 0, 0,
	283, 0, 0, 1618, 0, 1969, 0, 1970, 1617, 0,
	1617, 0, 0, 0, 1939, 1940, 0, 1618, 0, 1618,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 1618, 1961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 1945, 0, 115,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 1495, 1498, 0, 1495, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1498, 1498, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1618, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1618, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 1498, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 1496,
	0, 0, 1496, 0, 0, 0, 0, 283, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 1498, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 1498, 1936, 1937, 1943, 1965, 1942,
	1938, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1617, 1617,
	0, 1617, 0, 0, 0, 1617, 0, 0, 1617, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1618, 1618, 0, 1618,
	0, 0, 0, 1618, 1617, 0, 1618, 0, 0, 1617,
	1617, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1617, 0, 1617, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1618, 0, 0, 0, 0, 1618, 1618, 1618,
	0, 0, 0, 0, 0, 0, 0, 1922, 1923, 0,
	1955, 1956, 1957, 1966, 1967, 1968, 0, 0, 0, 0,
	1618, 0, 1618, 0, 0, 0, 0, 0, 1496, 0,
	1959, 1953, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 0, 0,
	0, 0, 0, 0, 0, 1924, 0, 0, 0, 0,
	1495, 1495, 0, 1495, 0, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 0, 0, 0, 0,
	0, 1617, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 1948, 1949, 1950, 0, 1496, 1496,
	0, 1496, 0, 1930, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1618,
	1618, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 1952, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	1617, 1969, 0, 1970, 0, 0, 0, 0, 0, 0,
	1939, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 1495,
	0, 0, 0, 1945, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1617, 1617, 1617, 1617, 1617, 1617, 1617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 1971, 0, 0, 0, 0, 0, 1618, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 1617, 0, 0, 1618, 1618,
	1618, 1618, 1618, 1618, 1618, 0, 0, 0, 0, 0,
	0, 1951, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 1946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 0, 1618, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1617, 1617, 1617, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1962, 0, 1495, 0, 0, 1617, 0, 0, 0,
	0, 1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933,
	1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 3464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1618, 1618, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 1493, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1618, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 1499, 299, 300,
	1500, 1501, 1502, 0, 1503, 677, 1504, 1505, 1506, 301,
	1507, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 1508, 682,
	313, 314, 315, 316, 317, 318, 1509, 1510, 0, 319,
	683, 684, 685, 1511, 320, 321, 686, 1512, 1579, 1513,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 1514,
	331, 332, 333, 330, 334, 1515, 335, 1618, 336, 337,
	338, 339, 340, 341, 1516, 342, 343, 344, 1278, 345,
	346, 347, 1517, 1518, 1520, 1519, 1521, 1522, 1523, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 1524,
	358, 354, 356, 1525, 359, 357, 360, 1526, 361, 362,
	363, 1527, 1528, 364, 365, 366, 1529, 367, 368, 369,
	1530, 370, 371, 372, 1531, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 1532, 288, 1533, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 1534, 391, 392,
	393, 1535, 394, 1536, 1279, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 1537,
	407, 695, 1538, 696, 408, 1539, 409, 410, 411, 412,
	413, 414, 697, 698, 699, 502, 1281, 415, 416, 1540,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 1541, 1280, 503, 425, 700, 701, 1542, 702,
	1543, 426, 427, 1282, 703, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	1544, 438, 440, 439, 1545, 441, 704, 1285, 442, 443,
	1286, 1546, 444, 445, 446, 447, 448, 449, 452, 1547,
	1548, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1549, 290, 1289, 497, 498, 499, 500, 1550, 705,
	501, 706, 504, 505, 1551, 0, 506, 0, 507, 1552,
	1553, 509, 510, 511, 1554, 1555, 512, 513, 707, 1290,
	514, 1291, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 1556, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 1557, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 1558,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 1559, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	1560, 595, 596, 594, 597, 598, 599, 1561, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 1562, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 1563, 629, 630, 0, 626, 617,
	1564, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	1565, 640, 718, 719, 720, 721, 1566, 650, 1567, 641,
	642, 643, 644, 722, 645, 723, 1568, 646, 647, 648,
	649, 0, 651, 652, 1569, 1570, 653, 654, 656, 658,
	659, 655, 657, 660, 1571, 661, 1572, 0, 662, 663,
	664, 724, 725, 726, 1573, 666, 665, 667, 668, 669,
	727, 670, 671, 1574, 1575, 1576, 1577, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 2934, 0, 0, 0, 0, 0, 0, 0, 2935,
	291, 292, 294, 293, 295, 296, 297, 298, 1499, 299,
	300, 1500, 1501, 1502, 0, 1503, 677, 1504, 1505, 1506,
	301, 1507, 302, 303, 1277, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 1508,
	682, 313, 314, 315, 316, 317, 318, 1509, 1510, 0,
	319, 683, 684, 685, 1511, 320, 321, 686, 1512, 1579,
	1513, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	1514, 331, 332, 333, 330, 334, 1515, 335, 0, 336,
	337, 338, 339, 340, 341, 1516, 342, 343, 344, 1278,
	345, 346, 347, 1517, 1518, 1520, 1519, 1521, 1522, 1523,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	1524, 358, 354, 356, 1525, 359, 357, 360, 1526, 361,
	362, 363, 1527, 1528, 364, 365, 366, 1529, 367, 368,
	369, 1530, 370, 371, 372, 1531, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 1532, 288, 1533, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 1534, 391,
	392, 393, 1535, 394, 1536, 1279, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	1537, 407, 695, 1538, 696, 408, 1539, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 1281, 415, 416,
	1540, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 1541, 1280, 503, 425, 700, 701, 1542,
	702, 1543, 426, 427, 1282, 703, 1283, 428, 429, 430,
	1284, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 1544, 438, 440, 439, 1545, 441, 704, 1285, 442,
	443, 1286, 1546, 444, 445, 446, 447, 448, 449, 452,
	1547, 1548, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1287, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1288,
	495, 483, 1549, 290, 1289, 497, 498, 499, 500, 1550,
	705, 501, 706, 504, 505, 1551, 0, 506, 0, 507,
	1552, 1553, 509, 510, 511, 1554, 1555, 512, 513, 707,
	1290, 514, 1291, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 1556, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 1557, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	1558, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 1559, 569, 570, 571, 1292,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 1560, 595, 596, 594, 597, 598, 599, 1561, 600,
	601, 583, 584, 602, 603, 1293, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 1562, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 1563, 629, 630, 0, 626,
	617, 1564, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 1565, 640, 718, 719, 720, 721, 1566, 650, 1567,
	641, 642, 643, 644, 722, 645, 723, 1568, 646, 647,
	648, 649, 0, 651, 652, 1569, 1570, 653, 654, 656,
	658, 659, 655, 657, 660, 1571, 661, 1572, 0, 662,
	663, 664, 724, 725, 726, 1573, 666, 665, 667, 668,
	669, 727, 670, 671, 1574, 1575, 1576, 1577, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 3959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3961, 291,
	292, 294, 293, 295, 296, 297, 298, 1499, 299, 300,
	1500, 1501, 1502, 0, 1503, 677, 1504, 1505, 1506, 301,
	1507, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 1508, 682,
	313, 314, 315, 316, 317, 318, 1509, 1510, 0, 319,
	683, 684, 685, 1511, 320, 321, 686, 1512, 1579, 1513,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 1514,
	331, 332, 333, 330, 334, 1515, 335, 0, 336, 337,
	338, 339, 340, 341, 1516, 342, 343, 344, 1278, 345,
	346, 347, 1517, 1518, 1520, 1519, 1521, 1522, 1523, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 1524,
	358, 354, 356, 1525, 359, 357, 360, 1526, 361, 362,
	363, 1527, 1528, 364, 365, 366, 1529, 367, 368, 369,
	1530, 370, 371, 372, 1531, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 1532, 288, 1533, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 1534, 391, 392,
	393, 1535, 394, 1536, 1279, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 1537,
	407, 695, 1538, 696, 408, 1539, 409, 410, 411, 412,
	413, 414, 697, 698, 699, 502, 1281, 415, 416, 1540,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 1541, 1280, 503, 425, 700, 701, 1542, 702,
	1543, 426, 427, 1282, 703, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	1544, 438, 440, 439, 1545, 441, 704, 1285, 442, 443,
	1286, 1546, 444, 445, 446, 447, 448, 449, 452, 1547,
	1548, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1549, 290, 1289, 497, 498, 499, 500, 1550, 705,
	501, 706, 504, 505, 1551, 0, 506, 0, 507, 1552,
	1553, 509, 510, 511, 1554, 1555, 512, 513, 707, 1290,
	514, 1291, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 1556, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 1557, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 1558,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 1559, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	1560, 595, 596, 594, 597, 598, 599, 1561, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 1562, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 1563, 629, 630, 0, 626, 617,
	1564, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	1565, 640, 718, 719, 720, 721, 1566, 650, 1567, 641,
	642, 643, 644, 722, 645, 723, 1568, 646, 647, 648,
	649, 0, 651, 652, 1569, 1570, 653, 654, 656, 658,
	659, 655, 657, 660, 1571, 661, 1572, 0, 662, 663,
	664, 724, 725, 726, 1573, 666, 665, 667, 668, 669,
	727, 670, 671, 1574, 1575, 1576, 1577, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4383, 291, 292, 294, 293, 295, 296, 297, 298,
	1499, 299, 300, 1500, 1501, 1502, 0, 1503, 677, 1504,
	1505, 1506, 301, 1507, 302, 303, 1277, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 1508, 682, 313, 314, 315, 316, 317, 318, 1509,
	1510, 0, 319, 683, 684, 685, 1511, 320, 321, 686,
	1512, 1579, 1513, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 1514, 331, 332, 333, 330, 334, 1515, 335,
	0, 336, 337, 338, 339, 340, 341, 1516, 342, 343,
	344, 1278, 345, 346, 347, 1517, 1518, 1520, 1519, 1521,
	1522, 1523, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 1524, 358, 354, 356, 1525, 359, 357, 360,
	1526, 361, 362, 363, 1527, 1528, 364, 365, 366, 1529,
	367, 368, 369, 1530, 370, 371, 372, 1531, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 1532, 288, 1533, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	1534, 391, 392, 393, 1535, 394, 1536, 1279, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 1537, 407, 695, 1538, 696, 408, 1539, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 1281,
	415, 416, 1540, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 1541, 1280, 503, 425, 700,
	701, 1542, 702, 1543, 426, 427, 1282, 703, 1283, 428,
	429, 430, 1284, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 1544, 438, 440, 439, 1545, 441, 704,
	1285, 442, 443, 1286, 1546, 444, 445, 446, 447, 448,
	449, 452, 1547, 1548, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1287, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1288, 495, 483, 1549, 290, 1289, 497, 498, 499,
	500, 1550, 705, 501, 706, 504, 505, 1551, 0, 506,
	0, 507, 1552, 1553, 509, 510, 511, 1554, 1555, 512,
	513, 707, 1290, 514, 1291, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 1556, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 1557, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 1558, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 1559, 569, 570,
	571, 1292, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 1560, 595, 596, 594, 597, 598, 599,
	1561, 600, 601, 583, 584, 602, 603, 1293, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 1562, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 1563, 629, 630,
	0, 626, 617, 1564, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 1565, 640, 718, 719, 720, 721, 1566,
	650, 1567, 641, 642, 643, 644, 722, 645, 723, 1568,
	646, 647, 648, 649, 0, 651, 652, 1569, 1570, 653,
	654, 656, 658, 659, 655, 657, 660, 1571, 661, 1572,
	0, 662, 663, 664, 724, 725, 726, 1573, 666, 665,
	667, 668, 669, 727, 670, 671, 1574, 1575, 1576, 1577,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4381, 291, 292, 294, 293, 295,
	296, 297, 298, 1499, 299, 300, 1500, 1501, 1502, 0,
	1503, 677, 1504, 1505, 1506, 301, 1507, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 1508, 682, 313, 314, 315, 316,
	317, 318, 1509, 1510, 0, 319, 683, 684, 685, 1511,
	320, 321, 686, 1512, 1579, 1513, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 1514, 331, 332, 333, 330,
	334, 1515, 335, 0, 336, 337, 338, 339, 340, 341,
	1516, 342, 343, 344, 1278, 345, 346, 347, 1517, 1518,
	1520, 1519, 1521, 1522, 1523, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 1524, 358, 354, 356, 1525,
	359, 357, 360, 1526, 361, 362, 363, 1527, 1528, 364,
	365, 366, 1529, 367, 368, 369, 1530, 370, 371, 372,
	1531, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 1532, 288,
	1533, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 1534, 391, 392, 393, 1535, 394, 1536,
	1279, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 1537, 407, 695, 1538, 696,
	408, 1539, 409, 410, 411, 412, 413, 414, 697, 698,
	699, 502, 1281, 415, 416, 1540, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 1541, 1280,
	503, 425, 700, 701, 1542, 702, 1543, 426, 427, 1282,
	703, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 1544, 438, 440, 439,
	1545, 441, 704, 1285, 442, 443, 1286, 1546, 444, 445,
	446, 447, 448, 449, 452, 1547, 1548, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1549, 290, 1289,
	497, 498, 499, 500, 1550, 705, 501, 706, 504, 505,
	1551, 0, 506, 0, 507, 1552, 1553, 509, 510, 511,
	1554, 1555, 512, 513, 707, 1290, 514, 1291, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 1556, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 1557, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 1558, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	1559, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 1560, 595, 596, 594,
	597, 598, 599, 1561, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 1562, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	1563, 629, 630, 0, 626, 617, 1564, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 1565, 640, 718, 719,
	720, 721, 1566, 650, 1567, 641, 642, 643, 644, 722,
	645, 723, 1568, 646, 647, 648, 649, 0, 651, 652,
	1569, 1570, 653, 654, 656, 658, 659, 655, 657, 660,
	1571, 661, 1572, 0, 662, 663, 664, 724, 725, 726,
	1573, 666, 665, 667, 668, 669, 727, 670, 671, 1574,
	1575, 1576, 1577, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4615, 291, 292, 294, 293, 295, 296, 297, 298,
	1499, 299, 300, 1500, 1501, 1502, 0, 1503, 677, 1504,
	1505, 1506, 301, 1507, 302, 303, 1277, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 1508, 682, 313, 314, 315, 316, 317, 318, 1509,
	1510, 0, 319, 683, 684, 685, 1511, 320, 321, 686,
	1512, 1579, 1513, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 1514, 331, 332, 333, 330, 334, 1515, 335,
	0, 336, 337, 338, 339, 340, 341, 1516, 342, 343,
	344, 1278, 345, 346, 347, 1517, 1518, 1520, 1519, 1521,
	1522, 1523, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 1524, 358, 354, 356, 1525, 359, 357, 360,
	1526, 361, 362, 363, 1527, 1528, 364, 365, 366, 1529,
	367, 368, 369, 1530, 370, 371, 372, 1531, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 1532, 288, 1533, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	1534, 391, 392, 393, 1535, 394, 1536, 1279, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 1537, 407, 695, 1538, 696, 408, 1539, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 1281,
	415, 416, 1540, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 1541, 1280, 503, 425, 700,
	701, 1542, 702, 1543, 426, 427, 1282, 703, 1283, 428,
	429, 430, 1284, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 1544, 438, 440, 439, 1545, 441, 704,
	1285, 442, 443, 1286, 1546, 444, 445, 446, 447, 448,
	449, 452, 1547, 1548, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1287, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1288, 495, 483, 1549, 290, 1289, 497, 498, 499,
	500, 1550, 705, 501, 706, 504, 505, 1551, 0, 506,
	0, 507, 1552, 1553, 509, 510, 511, 1554, 1555, 512,
	513, 707, 1290, 514, 1291, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 1556, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 1557, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 1558, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 1559, 569, 570,
	571, 1292, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 1560, 595, 596, 594, 597, 598, 599,
	1561, 600, 601, 583, 584, 602, 603, 1293, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 1562, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 1563, 629, 630,
	0, 626, 617, 1564, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 1565, 640, 718, 719, 720, 721, 1566,
	650, 1567, 641, 642, 643, 644, 722, 645, 723, 1568,
	646, 647, 648, 649, 0, 651, 652, 1569, 1570, 653,
	654, 656, 658, 659, 655, 657, 660, 1571, 661, 1572,
	0, 662, 663, 664, 724, 725, 726, 1573, 666, 665,
	667, 668, 669, 727, 670, 671, 1574, 1575, 1576, 1577,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4478, 291,
	292, 294, 293, 295, 296, 297, 298, 1499, 299, 300,
	1500, 1501, 1502, 0, 1503, 677, 1504, 1505, 1506, 301,
	1507, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 1508, 682,
	313, 314, 315, 316, 317, 318, 1509, 1510, 0, 319,
	683, 684, 685, 1511, 320, 321, 686, 1512, 1579, 1513,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 1514,
	331, 332, 333, 330, 334, 1515, 335, 0, 336, 337,
	338, 339, 340, 341, 1516, 342, 343, 344, 1278, 345,
	346, 347, 1517, 1518, 1520, 1519, 1521, 1522, 1523, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 1524,
	358, 354, 356, 1525, 359, 357, 360, 1526, 361, 362,
	363, 1527, 1528, 364, 365, 366, 1529, 367, 368, 369,
	1530, 370, 371, 372, 1531, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 1532, 288, 1533, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 1534, 391, 392,
	393, 1535, 394, 1536, 1279, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 1537,
	407, 695, 1538, 696, 408, 1539, 409, 410, 411, 412,
	413, 414, 697, 698, 699, 502, 1281, 415, 416, 1540,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 1541, 1280, 503, 425, 700, 701, 1542, 702,
	1543, 426, 427, 1282, 703, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	1544, 438, 440, 439, 1545, 441, 704, 1285, 442, 443,
	1286, 1546, 444, 445, 446, 447, 448, 449, 452, 1547,
	1548, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1549, 290, 1289, 497, 498, 499, 500, 1550, 705,
	501, 706, 504, 505, 1551, 0, 506, 0, 507, 1552,
	1553, 509, 510, 511, 1554, 1555, 512, 513, 707, 1290,
	514, 1291, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 1556, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 1557, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 1558,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 1559, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	1560, 595, 596, 594, 597, 598, 599, 1561, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 1562, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 1563, 629, 630, 0, 626, 617,
	1564, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	1565, 640, 718, 719, 720, 721, 1566, 650, 1567, 641,
	642, 643, 644, 722, 645, 723, 1568, 646, 647, 648,
	649, 0, 651, 652, 1569, 1570, 653, 654, 656, 658,
	659, 655, 657, 660, 1571, 661, 1572, 0, 662, 663,
	664, 724, 725, 726, 1573, 666, 665, 667, 668, 669,
	727, 670, 671, 1574, 1575, 1576, 1577, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4310, 291, 292, 294, 293,
	295, 296, 297, 298, 1499, 299, 300, 1500, 1501, 1502,
	0, 1503, 677, 1504, 1505, 1506, 301, 1507, 302, 303,
	1277, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 1508, 682, 313, 314, 315,
	316, 317, 318, 1509, 1510, 0, 319, 683, 684, 685,
	1511, 320, 321, 686, 1512, 1579, 1513, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 1514, 331, 332, 333,
	330, 334, 1515, 335, 0, 336, 337, 338, 339, 340,
	341, 1516, 342, 343, 344, 1278, 345, 346, 347, 1517,
	1518, 1520, 1519, 1521, 1522, 1523, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 1524, 358, 354, 356,
	1525, 359, 357, 360, 1526, 361, 362, 363, 1527, 1528,
	364, 365, 366, 1529, 367, 368, 369, 1530, 370, 371,
	372, 1531, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 1532,
	288, 1533, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 1534, 391, 392, 393, 1535, 394,
	1536, 1279, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 1537, 407, 695, 1538,
	696, 408, 1539, 409, 410, 411, 412, 413, 414, 697,
	698, 699, 502, 1281, 415, 416, 1540, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 1541,
	1280, 503, 425, 700, 701, 1542, 702, 1543, 426, 427,
	1282, 703, 1283, 428, 429, 430, 1284, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 1544, 438, 440,
	439, 1545, 441, 704, 1285, 442, 443, 1286, 1546, 444,
	445, 446, 447, 448, 449, 452, 1547, 1548, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1287, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1288, 495, 483, 1549, 290,
	1289, 497, 498, 499, 500, 1550, 705, 501, 706, 504,
	505, 1551, 0, 506, 0, 507, 1552, 1553, 509, 510,
	511, 1554, 1555, 512, 513, 707, 1290, 514, 1291, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 1556, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 1557, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 1558, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 1559, 569, 570, 571, 1292, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 1560, 595, 596,
	594, 597, 598, 599, 1561, 600, 601, 583, 584, 602,
	603, 1293, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 1562, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 1563, 629, 630, 0, 626, 617, 1564, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 1565, 640, 718,
	719, 720, 721, 1566, 650, 1567, 641, 642, 643, 644,
	722, 645, 723, 1568, 646, 647, 648, 649, 0, 651,
	652, 1569, 1570, 653, 654, 656, 658, 659, 655, 657,
	660, 1571, 661, 1572, 0, 662, 663, 664, 724, 725,
	726, 1573, 666, 665, 667, 668, 669, 727, 670, 671,
	1574, 1575, 1576, 1577, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3977, 291, 292, 294, 293, 295, 296, 297,
	298, 1499, 299, 300, 1500, 1501, 1502, 0, 1503, 677,
	1504, 1505, 1506, 301, 1507, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 1508, 682, 313, 314, 315, 316, 317, 318,
	1509, 1510, 0, 319, 683, 684, 685, 1511, 320, 321,
	686, 1512, 1579, 1513, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 1514, 331, 332, 333, 330, 334, 1515,
	335, 0, 336, 337, 338, 339, 340, 341, 1516, 342,
	343, 344, 1278, 345, 346, 347, 1517, 1518, 1520, 1519,
	1521, 1522, 1523, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 1524, 358, 354, 356, 1525, 359, 357,
	360, 1526, 361, 362, 363, 1527, 1528, 364, 365, 366,
	1529, 367, 368, 369, 1530, 370, 371, 372, 1531, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 1532, 288, 1533, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 1534, 391, 392, 393, 1535, 394, 1536, 1279, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 1537, 407, 695, 1538, 696, 408, 1539,
	409, 410, 411, 412, 413, 414, 697, 698, 699, 502,
	1281, 415, 416, 1540, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 1541, 1280, 503, 425,
	700, 701, 1542, 702, 1543, 426, 427, 1282, 703, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 1544, 438, 440, 439, 1545, 441,
	704, 1285, 442, 443, 1286, 1546, 444, 445, 446, 447,
	448, 449, 452, 1547, 1548, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1549, 290, 1289, 497, 498,
	499, 500, 1550, 705, 501, 706, 504, 505, 1551, 0,
	506, 0, 507, 1552, 1553, 509, 510, 511, 1554, 1555,
	512, 513, 707, 1290, 514, 1291, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 1556,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 1557, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 1558, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 1559, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 1560, 595, 596, 594, 597, 598,
	599, 1561, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 1562,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 1563, 629,
	630, 0, 626, 617, 1564, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 1565, 640, 718, 719, 720, 721,
	1566, 650, 1567, 641, 642, 643, 644, 722, 645, 723,
	1568, 646, 647, 648, 649, 0, 651, 652, 1569, 1570,
	653, 654, 656, 658, 659, 655, 657, 660, 1571, 661,
	1572, 0, 662, 663, 664, 724, 725, 726, 1573, 666,
	665, 667, 668, 669, 727, 670, 671, 1574, 1575, 1576,
	1577, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3794,
	291, 292, 294, 293, 295, 296, 297, 298, 1499, 299,
	300, 1500, 1501, 1502, 0, 1503, 677, 1504, 1505, 1506,
	301, 1507, 302, 303, 1277, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 1508,
	682, 313, 314, 315, 316, 317, 318, 1509, 1510, 0,
	319, 683, 684, 685, 1511, 320, 321, 686, 1512, 1579,
	1513, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	1514, 331, 332, 333, 330, 334, 1515, 335, 0, 336,
	337, 338, 339, 340, 341, 1516, 342, 343, 344, 1278,
	345, 346, 347, 1517, 1518, 1520, 1519, 1521, 1522, 1523,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	1524, 358, 354, 356, 1525, 359, 357, 360, 1526, 361,
	362, 363, 1527, 1528, 364, 365, 366, 1529, 367, 368,
	369, 1530, 370, 371, 372, 1531, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 1532, 288, 1533, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 1534, 391,
	392, 393, 1535, 394, 1536, 1279, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	1537, 407, 695, 1538, 696, 408, 1539, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 1281, 415, 416,
	1540, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 1541, 1280, 503, 425, 700, 701, 1542,
	702, 1543, 426, 427, 1282, 703, 1283, 428, 429, 430,
	1284, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 1544, 438, 440, 439, 1545, 441, 704, 1285, 442,
	443, 1286, 1546, 444, 445, 446, 447, 448, 449, 452,
	1547, 1548, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1287, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1288,
	495, 483, 1549, 290, 1289, 497, 498, 499, 500, 1550,
	705, 501, 706, 504, 505, 1551, 0, 506, 0, 507,
	1552, 1553, 509, 510, 511, 1554, 1555, 512, 513, 707,
	1290, 514, 1291, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 1556, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 1557, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	1558, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 1559, 569, 570, 571, 1292,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 1560, 595, 596, 594, 597, 598, 599, 1561, 600,
	601, 583, 584, 602, 603, 1293, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 1562, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 1563, 629, 630, 0, 626,
	617, 1564, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 1565, 640, 718, 719, 720, 721, 1566, 650, 1567,
	641, 642, 643, 644, 722, 645, 723, 1568, 646, 647,
	648, 649, 0, 651, 652, 1569, 1570, 653, 654, 656,
	658, 659, 655, 657, 660, 1571, 661, 1572, 0, 662,
	663, 664, 724, 725, 726, 1573, 666, 665, 667, 668,
	669, 727, 670, 671, 1574, 1575, 1576, 1577, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2788, 291, 292, 294,
	293, 295, 296, 297, 298, 1499, 299, 300, 1500, 1501,
	1502, 0, 1503, 677, 1504, 1505, 1506, 301, 1507, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 1508, 682, 313, 314,
	315, 316, 317, 318, 1509, 1510, 0, 319, 683, 684,
	685, 1511, 320, 321, 686, 1512, 1579, 1513, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 1514, 331, 332,
	333, 330, 334, 1515, 335, 0, 336, 337, 338, 339,
	340, 341, 1516, 342, 343, 344, 1278, 345, 346, 347,
	1517, 1518, 1520, 1519, 1521, 1522, 1523, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 1524, 358, 354,
	356, 1525, 359, 357, 360, 1526, 361, 362, 363, 1527,
	1528, 364, 365, 366, 1529, 367, 368, 369, 1530, 370,
	371, 372, 1531, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	1532, 288, 1533, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 1534, 391, 392, 393, 1535,
	394, 1536, 1279, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 1537, 407, 695,
	1538, 696, 408, 1539, 409, 410, 411, 412, 413, 414,
	697, 698, 699, 502, 1281, 415, 416, 1540, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	1541, 1280, 503, 425, 700, 701, 1542, 702, 1543, 426,
	427, 1282, 703, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 1544, 438,
	440, 439, 1545, 441, 704, 1285, 442, 443, 1286, 1546,
	444, 445, 446, 447, 448, 449, 452, 1547, 1548, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 1549,
	290, 1289, 497, 498, 499, 500, 1550, 705, 501, 706,
	504, 505, 1551, 0, 506, 0, 507, 1552, 1553, 509,
	510, 511, 1554, 1555, 512, 513, 707, 1290, 514, 1291,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 1556, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 1557,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 1558, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 1559, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 1560, 595,
	596, 594, 597, 598, 599, 1561, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 1562, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 1563, 629, 630, 0, 626, 617, 1564, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 1565, 640,
	718, 719, 720, 721, 1566, 650, 1567, 641, 642, 643,
	644, 722, 645, 723, 1568, 646, 647, 648, 649, 0,
	651, 652, 1569, 1570, 653, 654, 656, 658, 659, 655,
	657, 660, 1571, 661, 1572, 0, 662, 663, 664, 724,
	725, 726, 1573, 666, 665, 667, 668, 669, 727, 670,
	671, 1574, 1575, 1576, 1577, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 1490, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2409, 291, 292, 294, 293, 295, 296,
	297, 298, 1499, 299, 300, 1500, 1501, 1502, 0, 1503,
	677, 1504, 1505, 1506, 301, 1507, 302, 303, 1277, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 1508, 682, 313, 314, 315, 316, 317,
	318, 1509, 1510, 0, 319, 683, 684, 685, 1511, 320,
	321, 686, 1512, 1579, 1513, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 1514, 331, 332, 333, 330, 334,
	1515, 335, 0, 336, 337, 338, 339, 340, 341, 1516,
	342, 343, 344, 1278, 345, 346, 347, 1517, 1518, 1520,
	1519, 1521, 1522, 1523, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 1524, 358, 354, 356, 1525, 359,
	357, 360, 1526, 361, 362, 363, 1527, 1528, 364, 365,
	366, 1529, 367, 368, 369, 1530, 370, 371, 372, 1531,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 1532, 288, 1533,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 1534, 391, 392, 393, 1535, 394, 1536, 1279,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 1537, 407, 695, 1538, 696, 408,
	1539, 409, 410, 411, 412, 413, 414, 697, 698, 699,
	502, 1281, 415, 416, 1540, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 1541, 1280, 503,
	425, 700, 701, 1542, 702, 1543, 426, 427, 1282, 703,
	1283, 428, 429, 430, 1284, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 1544, 438, 440, 439, 1545,
	441, 704, 1285, 442, 443, 1286, 1546, 444, 445, 446,
	447, 448, 449, 452, 1547, 1548, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1287, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1288, 495, 483, 1549, 290, 1289, 497,
	498, 499, 500, 1550, 705, 501, 706, 504, 505, 1551,
	0, 506, 0, 507, 1552, 1553, 509, 510, 511, 1554,
	1555, 512, 513, 707, 1290, 514, 1291, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	1556, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 1557, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 1558, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 1559,
	569, 570, 571, 1292, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 1560, 595, 596, 594, 597,
	598, 599, 1561, 600, 601, 583, 584, 602, 603, 1293,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	1562, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 1563,
	629, 630, 0, 626, 617, 1564, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 1565, 640, 718, 719, 720,
	721, 1566, 650, 1567, 641, 642, 643, 644, 722, 645,
	723, 1568, 646, 647, 648, 649, 0, 651, 652, 1569,
	1570, 653, 654, 656, 658, 659, 655, 657, 660, 1571,
	661, 1572, 0, 662, 663, 664, 724, 725, 726, 1573,
	666, 665, 667, 668, 669, 727, 670, 671, 1574, 1575,
	1576, 1577, 672, 673, 728, 674, 675, 676, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 1499, 299, 300, 1500, 1501, 1502, 0,
	1503, 677, 1504, 1505, 1506, 301, 1507, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 1508, 682, 313, 314, 315, 316,
	317, 318, 1509, 1510, 0, 319, 683, 684, 685, 1511,
	320, 321, 686, 1512, 1579, 1513, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 1514, 331, 332, 333, 330,
	334, 1515, 335, 0, 336, 337, 338, 339, 340, 341,
	1516, 342, 343, 344, 1278, 345, 346, 347, 1517, 1518,
	1520, 1519, 1521, 1522, 1523, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 1524, 358, 354, 356, 1525,
	359, 357, 360, 1526, 361, 362, 363, 1527, 1528, 364,
	365, 366, 1529, 367, 368, 369, 1530, 370, 371, 372,
	1531, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 1532, 288,
	1533, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 1534, 391, 392, 393, 1535, 394, 1536,
	1279, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 1537, 407, 695, 1538, 696,
	408, 1539, 409, 410, 411, 412, 413, 414, 697, 698,
	699, 502, 1281, 415, 416, 1540, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 1541, 1280,
	503, 425, 700, 701, 1542, 702, 1543, 426, 427, 1282,
	703, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 1544, 438, 440, 439,
	1545, 441, 704, 1285, 442, 443, 1286, 1546, 444, 445,
	446, 447, 448, 449, 452, 1547, 1548, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1549, 290, 1289,
	497, 498, 499, 500, 1550, 705, 501, 706, 504, 505,
	1551, 0, 506, 0, 507, 1552, 1553, 509, 510, 511,
	1554, 1555, 512, 513, 707, 1290, 514, 1291, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 1556, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 1557, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 1558, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	1559, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 1560, 595, 596, 594,
	597, 598, 599, 1561, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 1562, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	1563, 629, 630, 0, 626, 617, 1564, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 1565, 640, 718, 719,
	720, 721, 1566, 650, 1567, 641, 642, 643, 644, 722,
	645, 723, 1568, 646, 647, 648, 649, 0, 651, 652,
	1569, 1570, 653, 654, 656, 658, 659, 655, 657, 660,
	1571, 661, 1572, 0, 662, 663, 664, 724, 725, 726,
	1573, 666, 665, 667, 668, 669, 727, 670, 671, 1574,
	1575, 1576, 1577, 672, 673, 728, 674, 675, 676, 2763,
	0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 2760, 299, 300, 0,
	0, 0, 0, 0, 1237, 1201, 0, 0, 301, 0,
	302, 303, 1277, 304, 305, 306, 307, 308, 309, 310,
	678, 1250, 0, 311, 1257, 312, 1256, 0, 1267, 313,
	314, 315, 316, 317, 318, 1203, 1236, 1168, 319, 1297,
	1298, 685, 0, 320, 321, 1243, 0, 1224, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 1278, 345, 346,
	347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349,
	350, 351, 352, 1260, 353, 355, 1254, 1253, 1173, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	2761, 0, 364, 1245, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 1179, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 1268, 1269,
	386, 1192, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 1252, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 1279, 395, 396, 397, 1265, 1266, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	1275, 0, 1202, 408, 0, 409, 410, 411, 412, 413,
	414, 1238, 1239, 1242, 502, 1281, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 1280, 503, 425, 1247, 1248, 0, 1208, 0,
	426, 427, 1282, 1240, 1283, 428, 429, 430, 1284, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 1276, 1285, 442, 443, 1286,
	0, 444, 445, 446, 447, 448, 449, 452, 1231, 1230,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1287,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1288, 495, 483,
	1170, 290, 1289, 497, 498, 499, 500, 1193, 1241, 501,
	1255, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 707, 1290, 514,
	1291, 1270, 515, 516, 1180, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 709, 528, 529,
	530, 710, 531, 532, 533, 1271, 534, 712, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 1251, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 1292, 572, 573,
	574, 575, 576, 1181, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 1234, 600, 601, 583,
	584, 602, 603, 1293, 604, 605, 606, 607, 608, 609,
	610, 1249, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 1296, 620, 621, 622, 623,
	1272, 627, 628, 0, 629, 630, 1167, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 0,
	640, 1261, 1262, 1263, 1264, 0, 650, 0, 641, 642,
	643, 644, 1273, 645, 1274, 1191, 646, 647, 648, 649,
	0, 651, 652, 0, 1174, 653, 654, 656, 658, 659,
	655, 657, 660, 1235, 661, 0, 0, 662, 663, 664,
	724, 1258, 1295, 2759, 666, 665, 667, 668, 669, 727,
	670, 671, 0, 0, 0, 0, 672, 673, 728, 674,
	675, 676, 1171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1166, 0, 0, 0, 0,
	0, 0, 1164, 1165, 2762, 0, 0, 0, 0, 0,
	0, 0, 1197, 2758, 0, 1157, 1195, 1213, 1185, 1186,
	1187, 1183, 1184, 1196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	1237, 1201, 0, 0, 301, 0, 302, 303, 1277, 304,
	305, 306, 307, 308, 309, 310, 678, 1250, 0, 311,
	1257, 312, 1256, 0, 1267, 313, 314, 315, 316, 317,
	318, 1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320,
	321, 1243, 0, 1224, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 1278, 345, 346, 347, 1227, 1225, 1226,
	1233, 1229, 1228, 1232, 348, 349, 350, 351, 352, 1260,
	353, 355, 1254, 1253, 1173, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 1245,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 1179, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 1268, 1269, 386, 1192, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 1252, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1279,
	395, 396, 397, 1265, 1266, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 1275, 0, 1202, 408,
	0, 409, 410, 411, 412, 413, 414, 1238, 1239, 1242,
	502, 1281, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 1280, 503,
	425, 1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240,
	1283, 428, 429, 430, 1284, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 1276, 1285, 442, 443, 1286, 0, 444, 445, 446,
	447, 448, 449, 452, 1231, 1230, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1287, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1288, 495, 483, 1170, 290, 1289, 497,
	498, 499, 500, 1193, 1241, 501, 1255, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 1290, 514, 1291, 1270, 515, 516,
	1180, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 1271, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 1251, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1292, 572, 573, 574, 575, 576, 1181,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 247, 595, 596, 594, 597,
	598, 599, 1234, 600, 601, 583, 584, 602, 603, 1293,
	604, 605, 606, 607, 608, 609, 610, 1249, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 1296, 620, 621, 622, 623, 1272, 627, 628, 0,
	629, 630, 1167, 626, 617, 249, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 1261, 1262, 1263,
	1264, 0, 650, 0, 641, 642, 643, 644, 1273, 645,
	1274, 1191, 646, 647, 648, 649, 0, 651, 652, 0,
	1174, 653, 654, 656, 658, 659, 655, 657, 660, 1235,
	661, 0, 0, 662, 663, 664, 1738, 1258, 1295, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 0, 0,
	0, 241, 672, 673, 728, 674, 675, 676, 1171, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 1164, 1165,
	1213, 1185, 1186, 1187, 1183, 1184, 1196, 0, 2003, 2001,
	0, 0, 1195, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 1237, 1201, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	1250, 0, 311, 1257, 312, 1256, 0, 1267, 313, 314,
	315, 316, 317, 318, 1203, 1236, 1168, 319, 1297, 1298,
	685, 0, 320, 321, 1243, 0, 1224, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1278, 345, 346, 347,
	1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350,
	351, 352, 1260, 353, 355, 1254, 1253, 1173, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1245, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1179, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1268, 1269, 386,
	1192, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1252, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 1265, 1266, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1275,
	0, 1202, 408, 0, 409, 410, 411, 412, 413, 414,
	1238, 1239, 1242, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1280, 503, 425, 1247, 1248, 0, 1208, 0, 426,
	427, 1282, 1240, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1276, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 1231, 1230, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 1170,
	290, 1289, 497, 498, 499, 500, 1193, 1241, 501, 1255,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	1270, 515, 516, 1180, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 1271, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1251, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 1181, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 247, 595,
	596, 594, 597, 598, 599, 1234, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	1249, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1296, 620, 621, 622, 623, 1272,
	627, 628, 0, 629, 630, 1167, 626, 617, 249, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	1261, 1262, 1263, 1264, 0, 650, 0, 641, 642, 643,
	644, 1273, 645, 1274, 1191, 646, 647, 648, 649, 0,
	651, 652, 0, 1174, 653, 654, 656, 658, 659, 655,
	657, 660, 1235, 661, 0, 0, 662, 663, 664, 1738,
	1258, 1295, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 0, 241, 672, 673, 728, 674, 675,
	676, 1171, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 1164, 1165, 1213, 1185, 1186, 1187, 1183, 1184, 1196,
	0, 2003, 3420, 0, 0, 1195, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 1237, 1201, 0, 0,
	301, 0, 302, 303, 1277, 304, 305, 306, 307, 308,
	309, 310, 678, 1250, 0, 311, 1257, 312, 1256, 0,
	1267, 313, 314, 315, 316, 317, 318, 1203, 1236, 1168,
	319, 1297, 1298, 685, 0, 320, 321, 1243, 0, 1224,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 1278,
	345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232,
	348, 349, 350, 351, 352, 1260, 353, 355, 1254, 1253,
	1173, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 1245, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 1179, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	1268, 1269, 386, 1192, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 1252, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1279, 395, 396, 397, 1265,
	1266, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 1275, 0, 1202, 408, 0, 409, 410, 411,
	412, 413, 414, 1238, 1239, 1242, 502, 1281, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 1280, 503, 425, 1247, 1248, 0,
	1208, 0, 426, 427, 1282, 1240, 1283, 428, 429, 430,
	1284, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 1276, 1285, 442,
	443, 1286, 0, 444, 445, 446, 447, 448, 449, 452,
	1231, 1230, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1287, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1288,
	495, 483, 1170, 290, 1289, 497, 498, 499, 500, 1193,
	1241, 501, 1255, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	1290, 514, 1291, 1270, 515, 516, 1180, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 1271, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 1251, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1292,
	572, 573, 574, 575, 576, 1181, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 247, 595, 596, 594, 597, 598, 599, 1234, 600,
	601, 583, 584, 602, 603, 1293, 604, 605, 606, 607,
	608, 609, 610, 1249, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 1296, 620, 621,
	622, 623, 1272, 627, 628, 0, 629, 630, 1167, 626,
	617, 249, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 1261, 1262, 1263, 1264, 0, 650, 0,
	641, 642, 643, 644, 1273, 645, 1274, 1191, 646, 647,
	648, 649, 0, 651, 652, 0, 1174, 653, 654, 656,
	658, 659, 655, 657, 660, 1235, 661, 0, 0, 662,
	663, 664, 1738, 1258, 1295, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 0, 0, 0, 241, 672, 673,
	728, 674, 675, 676, 1171, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1166, 0, 0,
	0, 0, 0, 0, 1164, 1165, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 0, 2003, 2001, 0, 0, 1195, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 1250, 0, 311, 1257,
	312, 1256, 2893, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 1173, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 2898, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 2894, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1170, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 1167, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 2895, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 651, 652, 0, 1174,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1171, 0, 0,
	2808, 0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0,
	1166, 0, 0, 0, 0, 0, 0, 1164, 1165, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 1168, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 353, 355, 1254, 1253, 1173,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 1202, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1170, 290, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 1180, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 1181, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 1167, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 1174, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 1164, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 1197, 2806, 0, 2805, 1195, 1213, 1185,
	1186, 1187, 1183, 1184, 1196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 1237, 1201, 0, 0, 301, 0, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 1250, 0,
	311, 1257, 312, 1256, 0, 1267, 313, 314, 315, 316,
	317, 318, 1203, 1236, 1168, 319, 1297, 1298, 685, 0,
	320, 321, 1243, 0, 1224, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1278, 345, 346, 347, 1227, 1225,
	1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351, 352,
	1260, 353, 355, 1254, 1253, 1173, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1245, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1179, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1268, 1269, 386, 1192, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1252, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 1265, 1266, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1275, 0, 1202,
	408, 0, 409, 410, 411, 412, 413, 414, 1238, 1239,
	1242, 502, 1281, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1280,
	503, 425, 1247, 1248, 0, 1208, 0, 426, 427, 1282,
	1240, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1276, 1285, 442, 443, 1286, 0, 444, 445,
	446, 447, 448, 449, 452, 1231, 1230, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1170, 290, 1289,
	497, 498, 499, 500, 1193, 1241, 501, 1255, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 1270, 515,
	516, 1180, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 1271, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1251,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	1181, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1234, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 1249, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1296, 620, 621, 622, 623, 1272, 627, 628,
	0, 629, 630, 1167, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 1261, 1262,
	1263, 1264, 0, 650, 0, 641, 642, 643, 644, 1273,
	645, 1274, 1191, 646, 647, 648, 649, 0, 651, 652,
	0, 1174, 653, 654, 656, 658, 659, 655, 657, 660,
	1235, 661, 0, 0, 662, 663, 664, 724, 1258, 1295,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 1171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 1164,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 1197,
	2803, 0, 2802, 1195, 1213, 1185, 1186, 1187, 1183, 1184,
	1196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 1237, 1201, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 1250, 0, 311, 1257, 312, 1256,
	0, 1267, 313, 314, 315, 316, 317, 318, 1203, 1236,
	1168, 319, 1297, 1298, 685, 0, 320, 321, 1243, 0,
	1224, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228,
	1232, 348, 349, 350, 351, 352, 1260, 353, 355, 1254,
	1253, 1173, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1245, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1179,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1268, 1269, 386, 1192, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1252, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	1265, 1266, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1275, 0, 1202, 408, 0, 409, 410,
	411, 412, 413, 414, 1238, 1239, 1242, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1280, 503, 425, 1247, 1248,
	0, 1208, 0, 426, 427, 1282, 1240, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1276, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 1231, 1230, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 1170, 290, 1289, 497, 498, 499, 500,
	1193, 1241, 501, 1255, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 1270, 515, 516, 1180, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 1271, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1251, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 1181, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1234,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 1249, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1296, 620,
	621, 622, 623, 1272, 627, 628, 0, 629, 630, 1167,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 1261, 1262, 1263, 1264, 0, 650,
	0, 641, 642, 643, 644, 1273, 645, 1274, 1191, 646,
	647, 648, 649, 0, 651, 652, 0, 1174, 653, 654,
	656, 658, 659, 655, 657, 660, 1235, 661, 0, 0,
	662, 663, 664, 724, 1258, 1295, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 1164, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 1197, 2800, 0, 2799, 1195,
	1213, 1185, 1186, 1187, 1183, 1184, 1196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 1237, 1201, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	1250, 0, 311, 1257, 312, 1256, 0, 1267, 313, 314,
	315, 316, 317, 318, 1203, 1236, 1168, 319, 1297, 1298,
	685, 0, 320, 321, 1243, 0, 1224, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1278, 345, 346, 347,
	1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350,
	351, 352, 1260, 353, 355, 1254, 1253, 1173, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1245, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1179, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1268, 1269, 386,
	1192, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1252, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 1265, 1266, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1275,
	0, 1202, 408, 0, 409, 410, 411, 412, 413, 414,
	1238, 1239, 1242, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1280, 503, 425, 1247, 1248, 0, 1208, 0, 426,
	427, 1282, 1240, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1276, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 1231, 1230, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 1170,
	290, 1289, 497, 498, 499, 500, 1193, 1241, 501, 1255,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	1270, 515, 516, 1180, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 1271, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1251, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 1181, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1234, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	1249, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1296, 620, 621, 622, 623, 1272,
	627, 628, 0, 629, 630, 1167, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	1261, 1262, 1263, 1264, 0, 650, 0, 641, 642, 643,
	644, 1273, 645, 1274, 1191, 646, 647, 648, 649, 0,
	651, 652, 0, 1174, 653, 654, 656, 658, 659, 655,
	657, 660, 1235, 661, 0, 0, 662, 663, 664, 724,
	1258, 1295, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 1164, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 1197, 2797, 0, 1839, 1195, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 1250, 0, 311, 1257,
	312, 1256, 0, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 1173, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1170, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 1167, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 651, 652, 0, 1174,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 1838, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1171, 0, 0,
	1160, 0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0,
	1166, 0, 0, 0, 0, 0, 0, 1164, 1165, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 1168, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 353, 355, 1254, 1253, 1173,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 1202, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1170, 290, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 1175,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 1180, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 1181, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 1167, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 1174, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 1171, 0, 0, 0, 0, 1213, 1185,
	1186, 1187, 1183, 1184, 1196, 0, 1166, 0, 0, 0,
	0, 0, 0, 1164, 1165, 291, 292, 294, 293, 295,
	296, 297, 298, 1197, 299, 300, 0, 1195, 0, 0,
	0, 1237, 1201, 0, 0, 301, 0, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 1250, 0,
	311, 1257, 312, 1256, 0, 1267, 313, 314, 315, 316,
	317, 318, 1203, 1236, 1168, 319, 1297, 1298, 685, 0,
	320, 321, 1243, 0, 1224, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 4983, 341,
	0, 342, 343, 344, 1278, 345, 346, 347, 1227, 1225,
	1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351, 352,
	1260, 353, 355, 1254, 1253, 1173, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1245, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1179, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1268, 1269, 386, 1192, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1252, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 1265, 1266, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1275, 0, 1202,
	408, 0, 409, 410, 411, 412, 413, 414, 1238, 1239,
	1242, 502, 1281, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1280,
	503, 425, 1247, 1248, 0, 1208, 0, 426, 427, 1282,
	1240, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1276, 1285, 442, 443, 1286, 0, 444, 445,
	446, 447, 448, 449, 452, 1231, 1230, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1170, 290, 1289,
	497, 498, 499, 500, 1193, 1241, 501, 1255, 504, 505,
	0, 0, 506, 0, 507, 1175, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 1270, 515,
	516, 1180, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 1271, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1251,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	1181, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1234, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 1249, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1296, 620, 621, 622, 623, 1272, 627, 628,
	0, 629, 630, 1167, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 1261, 1262,
	1263, 1264, 0, 650, 0, 641, 642, 643, 644, 1273,
	645, 1274, 1191, 646, 647, 648, 649, 0, 651, 652,
	0, 1174, 653, 654, 656, 658, 659, 655, 657, 660,
	1235, 661, 0, 0, 662, 663, 664, 724, 1258, 1295,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 1171,
	0, 0, 0, 0, 1213, 1185, 1186, 1187, 1183, 1184,
	1196, 0, 1166, 0, 0, 0, 0, 0, 0, 1164,
	1165, 291, 292, 294, 293, 295, 296, 297, 298, 1197,
	299, 300, 0, 1195, 0, 0, 0, 1237, 1201, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 1250, 0, 311, 1257, 312, 1256,
	0, 1267, 313, 314, 315, 316, 317, 318, 1203, 1236,
	1168, 319, 1297, 1298, 685, 0, 320, 321, 1243, 0,
	1224, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228,
	1232, 348, 349, 350, 351, 352, 1260, 353, 355, 1254,
	1253, 1173, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1245, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1179,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1268, 1269, 386, 1192, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1252, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	1265, 1266, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1275, 0, 1202, 408, 0, 409, 410,
	411, 412, 413, 414, 1238, 1239, 1242, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	2640, 422, 423, 424, 0, 1280, 503, 425, 1247, 1248,
	0, 1208, 0, 426, 427, 1282, 1240, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1276, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 1231, 1230, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 1170, 290, 1289, 497, 498, 499, 500,
	1193, 1241, 501, 1255, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 1270, 515, 516, 1180, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 1271, 534,
	712, 535, 536, 2639, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1251, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 1181, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1234,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 1249, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1296, 620,
	621, 622, 623, 1272, 627, 628, 0, 629, 630, 1167,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 1261, 1262, 1263, 1264, 0, 650,
	0, 641, 642, 643, 644, 1273, 645, 1274, 1191, 646,
	647, 648, 649, 0, 651, 652, 0, 1174, 653, 654,
	656, 658, 659, 655, 657, 660, 1235, 661, 0, 0,
	662, 663, 664, 724, 1258, 1295, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 1171, 0, 0, 0, 0,
	1213, 1185, 1186, 1187, 1183, 1184, 1196, 0, 1166, 0,
	0, 0, 0, 0, 0, 1164, 1165, 291, 292, 294,
	293, 295, 296, 297, 298, 1197, 299, 300, 0, 1195,
	0, 0, 0, 1237, 1201, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	1250, 0, 311, 1257, 312, 1256, 0, 1267, 313, 314,
	315, 316, 317, 318, 1203, 1236, 1168, 319, 1297, 1298,
	685, 0, 320, 321, 1243, 0, 1224, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	4706, 341, 0, 342, 343, 344, 1278, 345, 346, 347,
	1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350,
	351, 352, 1260, 353, 355, 1254, 1253, 1173, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1245, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1179, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1268, 1269, 386,
	1192, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1252, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 1265, 1266, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1275,
	0, 1202, 408, 0, 409, 410, 411, 412, 413, 414,
	1238, 1239, 1242, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1280, 503, 425, 1247, 1248, 0, 1208, 0, 426,
	427, 1282, 1240, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1276, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 1231, 1230, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 1170,
	290, 1289, 497, 498, 499, 500, 1193, 1241, 501, 1255,
	504, 505, 0, 0, 506, 0, 507, 1175, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	1270, 515, 516, 1180, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 1271, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1251, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 1181, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1234, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	1249, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1296, 620, 621, 622, 623, 1272,
	627, 628, 0, 629, 630, 1167, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	1261, 1262, 1263, 1264, 0, 650, 0, 641, 642, 643,
	644, 1273, 645, 1274, 1191, 646, 647, 648, 649, 0,
	651, 652, 0, 1174, 653, 654, 656, 658, 659, 655,
	657, 660, 1235, 661, 0, 0, 662, 663, 664, 724,
	1258, 1295, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 1171, 0, 0, 0, 0, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 0, 1166, 0, 0, 0, 0, 0,
	0, 1164, 1165, 291, 292, 294, 293, 295, 296, 297,
	298, 1197, 299, 300, 0, 1195, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 1250, 0, 311, 1257,
	312, 1256, 0, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 1173, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1170, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 1175, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 1167, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 651, 652, 0, 1174,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1171, 0, 0,
	0, 0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0,
	1166, 0, 0, 0, 0, 0, 0, 1164, 1165, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 1168, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 353, 355, 1254, 1253, 1173,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 1202, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1170, 4275, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 1180, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 1181, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 1167, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 1174, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 1164, 1165, 2073, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 1197, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 1250, 0, 311, 1257,
	312, 1256, 0, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 1173, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1170, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 1167, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 651, 652, 0, 1174,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 3955, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1171, 0, 0,
	0, 0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0,
	1166, 0, 0, 0, 0, 0, 0, 1164, 1165, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 1168, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 353, 355, 1254, 1253, 1173,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 1202, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1170, 290, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 1180, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 1181, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 1167, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 1174, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 1164, 1165, 2073, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 1197, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 1250, 0, 311, 1257,
	312, 1256, 0, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 1173, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 2898, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1170, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 1167, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 651, 652, 0, 1174,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1171, 0, 0,
	0, 0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0,
	1166, 0, 0, 0, 0, 0, 0, 1164, 1165, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 1168, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 353, 355, 1254, 1253, 1173,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 1202, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1170, 290, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 1180, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 1181, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 1167, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 1174, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 1164, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 1197, 2001, 0, 2903, 1195, 1213, 1185,
	1186, 1187, 1183, 1184, 1196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 1237, 1201, 0, 0, 301, 0, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 1250, 0,
	311, 1257, 312, 1256, 0, 1267, 313, 314, 315, 316,
	317, 318, 1203, 1236, 1168, 319, 1297, 1298, 685, 0,
	320, 321, 1243, 0, 1224, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1278, 345, 346, 347, 1227, 1225,
	1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351, 352,
	1260, 353, 355, 1254, 1253, 1173, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1245, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1179, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1268, 1269, 386, 1192, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1252, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 1265, 1266, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1275, 0, 1202,
	408, 0, 409, 410, 411, 412, 413, 414, 1238, 1239,
	1242, 502, 1281, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1280,
	503, 425, 1247, 1248, 0, 1208, 0, 426, 427, 1282,
	1240, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1276, 1285, 442, 443, 1286, 0, 444, 445,
	446, 447, 448, 449, 452, 1231, 1230, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1170, 290, 1289,
	497, 498, 499, 500, 1193, 1241, 501, 1255, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 1270, 515,
	516, 1180, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 1271, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1251,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	1181, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1234, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 1249, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1296, 620, 621, 622, 623, 1272, 627, 628,
	0, 629, 630, 1167, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 1261, 1262,
	1263, 1264, 0, 650, 0, 641, 642, 643, 644, 1273,
	645, 1274, 1191, 646, 647, 648, 649, 0, 651, 652,
	0, 1174, 653, 654, 656, 658, 659, 655, 657, 660,
	1235, 661, 0, 0, 662, 663, 664, 724, 1258, 1295,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 1171,
	0, 0, 2901, 0, 1213, 1185, 1186, 1187, 1183, 1184,
	1196, 0, 1166, 0, 0, 0, 0, 0, 0, 1164,
	1165, 291, 292, 294, 293, 295, 296, 297, 298, 1197,
	299, 300, 0, 1195, 0, 0, 0, 1237, 1201, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 1250, 0, 311, 1257, 312, 1256,
	0, 1267, 313, 314, 315, 316, 317, 318, 1203, 1236,
	1168, 319, 1297, 1298, 685, 0, 320, 321, 1243, 0,
	1224, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228,
	1232, 348, 349, 350, 351, 352, 1260, 353, 355, 1254,
	1253, 1173, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1245, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1179,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1268, 1269, 386, 1192, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1252, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	1265, 1266, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1275, 0, 1202, 408, 0, 409, 410,
	411, 412, 413, 414, 1238, 1239, 1242, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1280, 503, 425, 1247, 1248,
	0, 1208, 0, 426, 427, 1282, 1240, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1276, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 1231, 1230, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 1170, 290, 1289, 497, 498, 499, 500,
	1193, 1241, 501, 1255, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 1270, 515, 516, 1180, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 1271, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1251, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 1181, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1234,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 1249, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1296, 620,
	621, 622, 623, 1272, 627, 628, 0, 629, 630, 1167,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 1261, 1262, 1263, 1264, 0, 650,
	0, 641, 642, 643, 644, 1273, 645, 1274, 1191, 646,
	647, 648, 649, 0, 651, 652, 0, 1174, 653, 654,
	656, 658, 659, 655, 657, 660, 1235, 661, 0, 0,
	662, 663, 664, 724, 1258, 1295, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 1171, 0, 0, 2889, 0,
	1213, 1185, 1186, 1187, 1183, 1184, 1196, 0, 1166, 0,
	0, 0, 0, 0, 0, 1164, 1165, 291, 292, 294,
	293, 295, 296, 297, 298, 1197, 299, 300, 0, 1195,
	0, 0, 0, 1237, 1201, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	1250, 0, 311, 1257, 312, 1256, 0, 1267, 313, 314,
	315, 316, 317, 318, 1203, 1236, 1168, 319, 1297, 1298,
	685, 0, 320, 321, 1243, 0, 1224, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1278, 345, 346, 347,
	1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350,
	351, 352, 1260, 353, 355, 1254, 1253, 1173, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1245, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1179, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1268, 1269, 386,
	1192, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1252, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 1265, 1266, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1275,
	0, 1202, 408, 0, 409, 410, 411, 412, 413, 414,
	1238, 1239, 1242, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1280, 503, 425, 1247, 1248, 0, 1208, 0, 426,
	427, 1282, 1240, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1276, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 1231, 1230, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 1170,
	290, 1289, 497, 498, 499, 500, 1193, 1241, 501, 1255,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	1270, 515, 516, 1180, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 1271, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1251, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 1181, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1234, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	1249, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1296, 620, 621, 622, 623, 1272,
	627, 628, 0, 629, 630, 1167, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	1261, 1262, 1263, 1264, 0, 650, 0, 641, 642, 643,
	644, 1273, 645, 1274, 1191, 646, 647, 648, 649, 0,
	651, 652, 0, 1174, 653, 654, 656, 658, 659, 655,
	657, 660, 1235, 661, 0, 0, 662, 663, 664, 724,
	1258, 1295, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 1171, 0, 0, 2878, 0, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 0, 1166, 0, 0, 0, 0, 0,
	0, 1164, 1165, 291, 292, 294, 293, 295, 296, 297,
	298, 1197, 299, 300, 0, 1195, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 1250, 0, 311, 1257,
	312, 1256, 0, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 1173, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1170, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 1167, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 651, 652, 0, 1174,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1171, 0, 0,
	2876, 0, 2867, 2874, 1186, 1187, 1183, 1184, 1196, 0,
	1166, 0, 0, 0, 0, 0, 0, 1164, 1165, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 1168, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 2870, 355, 1254, 1253, 1173,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 1202, 408, 0, 409, 410, 411, 412,
	2871, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 2872, 462, 2869, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1170, 290, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 1180, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 1181, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 2873,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 1167, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 1174, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 2868, 676, 1171, 0, 0, 2864, 0, 2867, 2874,
	1186, 1187, 1183, 1184, 1196, 0, 1166, 0, 0, 0,
	0, 0, 0, 1164, 1165, 291, 292, 294, 293, 295,
	296, 297, 298, 1197, 299, 300, 0, 1195, 0, 0,
	0, 1237, 1201, 0, 0, 301, 0, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 1250, 0,
	311, 1257, 312, 1256, 0, 1267, 313, 314, 315, 316,
	317, 318, 1203, 1236, 1168, 319, 1297, 1298, 685, 0,
	320, 321, 1243, 0, 1224, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1278, 345, 346, 347, 1227, 1225,
	1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351, 352,
	1260, 2870, 355, 1254, 1253, 1173, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1245, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1179, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1268, 1269, 386, 1192, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1252, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 1265, 1266, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1275, 0, 1202,
	408, 0, 409, 410, 411, 412, 2871, 414, 1238, 1239,
	1242, 502, 1281, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1280,
	503, 425, 1247, 1248, 0, 1208, 0, 426, 427, 1282,
	1240, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1276, 1285, 442, 443, 1286, 0, 444, 445,
	446, 447, 448, 449, 452, 1231, 1230, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 2872, 462,
	2869, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1170, 290, 1289,
	497, 498, 499, 500, 1193, 1241, 501, 1255, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 1270, 515,
	516, 1180, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 1271, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1251,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	1181, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 2873, 0, 595, 596, 594,
	597, 598, 599, 1234, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 1249, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1296, 620, 621, 622, 623, 1272, 627, 628,
	0, 629, 630, 1167, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 1261, 1262,
	1263, 1264, 0, 650, 0, 641, 642, 643, 644, 1273,
	645, 1274, 1191, 646, 647, 648, 649, 0, 651, 652,
	0, 1174, 653, 654, 656, 658, 659, 655, 657, 660,
	1235, 661, 0, 0, 662, 663, 664, 724, 1258, 1295,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 0, 0, 672, 673, 728, 674, 2868, 676, 1171,
	0, 0, 0, 0, 1213, 1185, 1186, 1187, 1183, 1184,
	1196, 0, 1166, 0, 0, 0, 0, 0, 0, 1164,
	1165, 291, 292, 294, 293, 295, 296, 297, 298, 1197,
	299, 300, 0, 1195, 0, 0, 0, 1237, 1201, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 1250, 0, 311, 1257, 312, 1256,
	0, 1267, 313, 314, 315, 316, 317, 318, 1203, 1236,
	1168, 319, 1297, 1298, 685, 0, 320, 321, 1243, 0,
	1224, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228,
	1232, 348, 349, 350, 351, 352, 1260, 353, 355, 1254,
	1253, 1173, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1245, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1179,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1268, 1269, 386, 1192, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1252, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	1265, 1266, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1275, 0, 1202, 408, 0, 409, 410,
	411, 412, 413, 414, 1238, 1239, 1242, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1280, 503, 425, 1247, 1248,
	0, 1208, 0, 426, 427, 1282, 1240, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1276, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 1231, 1230, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 1170, 290, 1289, 497, 498, 499, 500,
	1193, 1241, 501, 1255, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 1270, 515, 516, 1180, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 1271, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1251, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 1181, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1234,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 1249, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1296, 620,
	621, 622, 623, 1272, 627, 628, 0, 629, 630, 1167,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 1261, 1262, 1263, 1264, 0, 650,
	0, 641, 642, 643, 644, 1273, 645, 1274, 1191, 646,
	647, 648, 649, 0, 651, 652, 0, 1174, 653, 654,
	656, 658, 659, 655, 657, 660, 1235, 661, 0, 0,
	662, 663, 664, 724, 1258, 1295, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 1164, 1165, 0, 0, 0,
	0, 0, 0, 2009, 0, 1197, 0, 0, 0, 1195,
	1213, 1185, 1186, 1187, 1183, 1184, 1196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 2619, 299, 300, 0, 0,
	0, 0, 0, 1237, 1201, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	1250, 0, 311, 1257, 312, 1256, 0, 1267, 313, 314,
	315, 316, 317, 318, 1203, 1236, 1168, 319, 1297, 1298,
	685, 0, 320, 321, 1243, 0, 1224, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1278, 345, 346, 347,
	1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350,
	351, 352, 1260, 353, 355, 1254, 1253, 1173, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1245, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1179, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1268, 1269, 386,
	1192, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1252, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 1265, 1266, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1275,
	0, 1202, 408, 0, 409, 410, 411, 412, 413, 414,
	1238, 1239, 1242, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1280, 503, 425, 1247, 1248, 0, 1208, 0, 426,
	427, 1282, 1240, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1276, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 1231, 1230, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 1170,
	290, 1289, 497, 498, 499, 500, 1193, 1241, 501, 1255,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	1270, 515, 516, 1180, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 1271, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1251, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 1181, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1234, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	1249, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1296, 620, 621, 622, 623, 1272,
	627, 628, 0, 629, 630, 1167, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	1261, 1262, 1263, 1264, 0, 650, 0, 641, 642, 643,
	644, 1273, 645, 1274, 1191, 646, 647, 648, 649, 0,
	651, 652, 0, 1174, 653, 654, 656, 658, 659, 655,
	657, 660, 1235, 661, 0, 0, 662, 663, 664, 724,
	1258, 1295, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 1171, 0, 0, 2581, 0, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 0, 1166, 0, 0, 0, 0, 0,
	0, 1164, 1165, 291, 292, 294, 293, 295, 296, 297,
	298, 1197, 299, 300, 0, 1195, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 1250, 0, 311, 1257,
	312, 1256, 0, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 1173, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1170, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 1167, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 651, 652, 0, 1174,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1171, 0, 0,
	2552, 0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0,
	1166, 0, 0, 0, 0, 0, 0, 1164, 1165, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 1168, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 353, 355, 1254, 1253, 1173,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 1202, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1170, 290, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 1180, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 1181, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 1167, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 1174, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 1171, 0, 0, 1844, 0, 1213, 1185,
	1186, 1187, 1183, 1184, 1196, 0, 1166, 0, 0, 0,
	0, 0, 0, 1164, 1165, 291, 292, 294, 293, 295,
	296, 297, 298, 1197, 299, 300, 0, 1195, 0, 0,
	0, 1237, 1201, 0, 0, 301, 0, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 1250, 0,
	311, 1257, 312, 1256, 0, 1267, 313, 314, 315, 316,
	317, 318, 1203, 1236, 1168, 319, 1297, 1298, 685, 0,
	320, 321, 1243, 0, 1224, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1278, 345, 346, 347, 1227, 1225,
	1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351, 352,
	1260, 353, 355, 1254, 1253, 1173, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1245, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1179, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1268, 1269, 386, 1192, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1252, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 1265, 1266, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1275, 0, 1202,
	408, 0, 409, 410, 411, 412, 413, 414, 1238, 1239,
	1242, 502, 1281, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1280,
	503, 425, 1247, 1248, 0, 1208, 0, 426, 427, 1282,
	1240, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1276, 1285, 442, 443, 1286, 0, 444, 445,
	446, 447, 448, 449, 452, 1231, 1230, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1170, 290, 1289,
	497, 498, 499, 500, 1193, 1241, 501, 1255, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 1270, 515,
	516, 1180, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 1271, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1251,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	1181, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1234, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 1249, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1296, 620, 621, 622, 623, 1272, 627, 628,
	0, 629, 630, 1167, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 1261, 1262,
	1263, 1264, 0, 650, 0, 641, 642, 643, 644, 1273,
	645, 1274, 1191, 646, 647, 648, 649, 0, 651, 652,
	0, 1174, 653, 654, 656, 658, 659, 655, 657, 660,
	1235, 661, 0, 0, 662, 663, 664, 724, 1258, 1295,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 1171,
	0, 0, 1773, 0, 1213, 1185, 1186, 1187, 1183, 1184,
	1196, 0, 1166, 0, 0, 0, 0, 0, 0, 1164,
	1165, 291, 292, 294, 293, 295, 296, 297, 298, 1197,
	299, 300, 0, 1195, 0, 0, 0, 1237, 1201, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 1250, 0, 311, 1257, 312, 1256,
	0, 1267, 313, 314, 315, 316, 317, 318, 1203, 1236,
	1168, 319, 1297, 1298, 685, 0, 320, 321, 1243, 0,
	1224, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228,
	1232, 348, 349, 350, 351, 352, 1260, 353, 355, 1254,
	1253, 1173, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1245, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1179,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1268, 1269, 386, 1192, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1252, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	1265, 1266, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1275, 0, 1202, 408, 0, 409, 410,
	411, 412, 413, 414, 1238, 1239, 1242, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1280, 503, 425, 1247, 1248,
	0, 1208, 0, 426, 427, 1282, 1240, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1276, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 1231, 1230, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 1170, 290, 1289, 497, 498, 499, 500,
	1193, 1241, 501, 1255, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 1270, 515, 516, 1180, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 1271, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1251, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 1181, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1234,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 1249, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1296, 620,
	621, 622, 623, 1272, 627, 628, 0, 629, 630, 1167,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 1261, 1262, 1263, 1264, 0, 650,
	0, 641, 642, 643, 644, 1273, 645, 1274, 1191, 646,
	647, 648, 649, 0, 651, 652, 0, 1174, 653, 654,
	656, 658, 659, 655, 657, 660, 1235, 661, 0, 0,
	662, 663, 664, 724, 1258, 1295, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 1171, 0, 0, 1768, 0,
	1213, 1185, 1186, 1187, 1183, 1184, 1196, 0, 1166, 0,
	0, 0, 0, 0, 0, 1164, 1165, 291, 292, 294,
	293, 295, 296, 297, 298, 1197, 299, 300, 0, 1195,
	0, 0, 0, 1237, 1201, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	1250, 0, 311, 1257, 312, 1256, 0, 1267, 313, 314,
	315, 316, 317, 318, 1203, 1236, 1168, 319, 1297, 1298,
	685, 0, 320, 321, 1243, 0, 1224, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1278, 345, 346, 347,
	1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350,
	351, 352, 1260, 353, 355, 1254, 1253, 1173, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1245, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1179, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1268, 1269, 386,
	1192, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1252, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 1265, 1266, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1275,
	0, 1202, 408, 0, 409, 410, 411, 412, 413, 414,
	1238, 1239, 1242, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1280, 503, 425, 1247, 1248, 0, 1208, 0, 426,
	427, 1282, 1240, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1276, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 1231, 1230, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 1170,
	290, 1289, 497, 498, 499, 500, 1193, 1241, 501, 1255,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	1270, 515, 516, 1180, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 1271, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1251, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 1181, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1234, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	1249, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1296, 620, 621, 622, 623, 1272,
	627, 628, 0, 629, 630, 1167, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	1261, 1262, 1263, 1264, 0, 650, 0, 641, 642, 643,
	644, 1273, 645, 1274, 1191, 646, 647, 648, 649, 0,
	651, 652, 0, 1174, 653, 654, 656, 658, 659, 655,
	657, 660, 1235, 661, 0, 0, 662, 663, 664, 724,
	1258, 1295, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 1171, 0, 0, 1754, 0, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 0, 1166, 0, 0, 0, 0, 0,
	0, 1164, 1165, 291, 292, 294, 293, 295, 296, 297,
	298, 1197, 299, 300, 0, 1195, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 1250, 0, 311, 1257,
	312, 1256, 0, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 1173, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1170, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 1167, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 651, 652, 0, 1174,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1171, 0, 0,
	1749, 0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0,
	1166, 0, 0, 0, 0, 0, 0, 1164, 1165, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 1168, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 353, 355, 1254, 1253, 1173,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 1202, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1170, 290, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 1180, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 1181, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 1167, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 1174, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 1171, 0, 0, 1658, 0, 1213, 1185,
	1186, 1187, 1183, 1184, 1196, 0, 1166, 0, 0, 0,
	0, 0, 0, 1164, 1165, 291, 292, 294, 293, 295,
	296, 297, 298, 1197, 299, 300, 0, 1195, 0, 0,
	0, 1237, 1201, 0, 0, 301, 0, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 1250, 0,
	311, 1257, 312, 1256, 0, 1267, 313, 314, 315, 316,
	317, 318, 1203, 1236, 1168, 319, 1297, 1298, 685, 0,
	320, 321, 1243, 0, 1224, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1278, 345, 346, 347, 1227, 1225,
	1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351, 352,
	1260, 353, 355, 1254, 1253, 1173, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1245, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1179, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1268, 1269, 386, 1192, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1252, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 1265, 1266, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1275, 0, 1202,
	408, 0, 409, 410, 411, 412, 413, 414, 1657, 1239,
	1242, 502, 1281, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1280,
	503, 425, 1247, 1248, 0, 1208, 0, 426, 427, 1282,
	1240, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1276, 1285, 442, 443, 1286, 0, 444, 445,
	446, 447, 448, 449, 452, 1231, 1230, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1170, 290, 1289,
	497, 498, 499, 500, 1193, 1241, 501, 1255, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 1270, 515,
	516, 1180, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 1271, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1251,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	1181, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1234, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 1249, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1296, 620, 621, 622, 623, 1272, 627, 628,
	0, 629, 630, 1167, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 1261, 1262,
	1263, 1264, 0, 650, 0, 641, 642, 643, 644, 1273,
	645, 1274, 1191, 646, 647, 648, 649, 0, 651, 652,
	0, 1174, 653, 654, 656, 658, 659, 655, 657, 660,
	1235, 661, 0, 0, 662, 663, 664, 724, 1258, 1295,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 1171,
	0, 0, 1652, 0, 1213, 1185, 1186, 1187, 1183, 1184,
	1196, 0, 1166, 0, 0, 0, 0, 0, 0, 1164,
	1165, 291, 292, 294, 293, 295, 296, 297, 298, 1197,
	299, 300, 0, 1195, 0, 0, 0, 1237, 1201, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 1250, 0, 311, 1257, 312, 1256,
	0, 1267, 313, 314, 315, 316, 317, 318, 1203, 1236,
	1168, 319, 1297, 1298, 685, 0, 320, 321, 1243, 0,
	1224, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228,
	1232, 348, 349, 350, 351, 352, 1260, 353, 355, 1254,
	1253, 1173, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1245, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1179,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1268, 1269, 386, 1192, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1252, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	1265, 1266, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1275, 0, 1202, 408, 0, 409, 410,
	411, 412, 413, 414, 1651, 1239, 1242, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1280, 503, 425, 1247, 1248,
	0, 1208, 0, 426, 427, 1282, 1240, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1276, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 1231, 1230, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 1170, 290, 1289, 497, 498, 499, 500,
	1193, 1241, 501, 1255, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 1270, 515, 516, 1180, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 1271, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1251, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 1181, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1234,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 1249, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1296, 620,
	621, 622, 623, 1272, 627, 628, 0, 629, 630, 1167,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 1261, 1262, 1263, 1264, 0, 650,
	0, 641, 642, 643, 644, 1273, 645, 1274, 1191, 646,
	647, 648, 649, 0, 651, 652, 0, 1174, 653, 654,
	656, 658, 659, 655, 657, 660, 1235, 661, 0, 0,
	662, 663, 664, 724, 1258, 1295, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 1171, 0, 0, 1645, 0,
	1213, 1185, 1186, 1187, 1183, 1184, 1196, 0, 1166, 0,
	0, 0, 0, 0, 0, 1164, 1165, 291, 292, 294,
	293, 295, 296, 297, 298, 1197, 299, 300, 0, 1195,
	0, 0, 0, 1237, 1201, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	1250, 0, 311, 1257, 312, 1256, 0, 1267, 313, 314,
	315, 316, 317, 318, 1203, 1236, 1168, 319, 1297, 1298,
	685, 0, 320, 321, 1243, 0, 1224, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1278, 345, 346, 347,
	1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350,
	351, 352, 1260, 353, 355, 1254, 1253, 1173, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1245, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1179, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1268, 1269, 386,
	1192, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1252, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 1265, 1266, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1275,
	0, 1202, 408, 0, 409, 410, 411, 412, 413, 414,
	1238, 1239, 1242, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1280, 503, 425, 1247, 1248, 0, 1208, 0, 426,
	427, 1282, 1240, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1276, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 1231, 1230, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 1170,
	290, 1289, 497, 498, 499, 500, 1193, 1241, 501, 1255,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	1270, 515, 516, 1180, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 1271, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1251, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 1181, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1234, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	1249, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1296, 620, 621, 622, 623, 1272,
	627, 628, 0, 629, 630, 1167, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	1261, 1262, 1263, 1264, 0, 650, 0, 641, 642, 643,
	644, 1273, 645, 1274, 1191, 646, 647, 648, 649, 0,
	651, 652, 0, 1174, 653, 654, 656, 658, 659, 655,
	657, 660, 1235, 661, 0, 0, 662, 663, 664, 724,
	1258, 1295, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 1171, 0, 0, 1608, 0, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 0, 1166, 0, 0, 0, 0, 0,
	0, 1164, 1165, 291, 292, 294, 293, 295, 296, 297,
	298, 1197, 299, 300, 0, 1195, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 1250, 0, 311, 1257,
	312, 1256, 0, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 1173, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1170, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 1167, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 651, 652, 0, 1174,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1171, 0, 0,
	1590, 0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0,
	1166, 0, 0, 0, 0, 0, 0, 1164, 1165, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 1168, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 353, 355, 1254, 1253, 1173,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 1594, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 1202, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1170, 290, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 1180, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 1595, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 1181, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 1167, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 1593, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 1174, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 1171, 0, 0, 1422, 0, 1213, 1185,
	1186, 1187, 1183, 1184, 1196, 0, 1166, 0, 0, 0,
	0, 0, 0, 1164, 1165, 291, 292, 294, 293, 295,
	296, 297, 298, 1197, 299, 300, 0, 1195, 0, 0,
	0, 1237, 1201, 0, 0, 301, 0, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 1250, 0,
	311, 1257, 312, 1256, 0, 1267, 313, 314, 315, 316,
	317, 318, 1203, 1236, 1168, 319, 1297, 1298, 685, 0,
	320, 321, 1243, 0, 1224, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1278, 345, 346, 347, 1227, 1225,
	1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351, 352,
	1260, 353, 355, 1254, 1253, 1173, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1245, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1179, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1268, 1269, 386, 1192, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1252, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 1265, 1266, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1275, 0, 1202,
	408, 0, 409, 410, 411, 412, 413, 414, 1238, 1239,
	1242, 502, 1281, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1280,
	503, 425, 1247, 1248, 0, 1208, 0, 426, 427, 1282,
	1240, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1276, 1285, 442, 443, 1286, 0, 444, 445,
	446, 447, 448, 449, 452, 1231, 1230, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1170, 290, 1289,
	497, 498, 499, 500, 1193, 1241, 501, 1255, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 1270, 515,
	516, 1180, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 1271, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1251,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	1181, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1234, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 1249, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1296, 620, 621, 622, 623, 1272, 627, 628,
	0, 629, 630, 1167, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 1261, 1262,
	1263, 1264, 0, 650, 0, 641, 642, 643, 644, 1273,
	645, 1274, 1191, 646, 647, 648, 649, 0, 651, 652,
	0, 1174, 653, 654, 656, 658, 659, 655, 657, 660,
	1235, 661, 0, 0, 662, 663, 664, 724, 1258, 1295,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 1171,
	0, 0, 0, 0, 1213, 1185, 1186, 1187, 1183, 1184,
	1196, 0, 1166, 0, 0, 0, 0, 0, 0, 1164,
	1165, 291, 292, 294, 293, 295, 296, 297, 298, 1197,
	299, 300, 0, 1195, 0, 0, 0, 1237, 1201, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 1250, 0, 311, 1257, 312, 1256,
	0, 1267, 313, 314, 315, 316, 317, 318, 1203, 1236,
	1168, 319, 1297, 1298, 685, 0, 320, 321, 1243, 0,
	1224, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228,
	1232, 348, 349, 350, 351, 352, 1260, 353, 355, 1254,
	1253, 1173, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1245, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1179,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1268, 1269, 386, 1192, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1252, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	1265, 1266, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1275, 0, 1202, 408, 0, 409, 410,
	411, 412, 413, 414, 1238, 1239, 1242, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1280, 503, 425, 1247, 1248,
	0, 1208, 0, 426, 427, 1282, 1240, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1276, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 1231, 1230, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 1170, 290, 1289, 497, 498, 499, 500,
	1193, 1241, 501, 1255, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 1270, 515, 516, 1180, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 1271, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1251, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 1181, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1234,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 1249, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1296, 620,
	621, 622, 623, 1272, 627, 628, 0, 629, 630, 1167,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 1261, 1262, 1263, 1264, 0, 650,
	0, 641, 642, 643, 644, 1273, 645, 1274, 1191, 646,
	647, 648, 649, 0, 651, 652, 0, 1174, 653, 654,
	656, 658, 659, 655, 657, 660, 1235, 661, 0, 0,
	662, 663, 664, 724, 1258, 1295, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 1171, 0, 0, 0, 0,
	1213, 1185, 1186, 1187, 1183, 1184, 1196, 0, 1166, 0,
	0, 0, 0, 0, 0, 1164, 1165, 291, 292, 294,
	293, 295, 296, 297, 298, 1197, 299, 300, 0, 1195,
	0, 0, 0, 1237, 1201, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	1250, 0, 311, 1257, 312, 1256, 0, 1267, 313, 314,
	315, 316, 317, 318, 1203, 1236, 1168, 319, 1297, 1298,
	685, 0, 320, 321, 1243, 0, 1224, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1278, 345, 346, 5032,
	1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350,
	351, 352, 1260, 353, 355, 1254, 1253, 1173, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1245, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1179, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1268, 1269, 386,
	1192, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1252, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 1265, 1266, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1275,
	0, 1202, 408, 0, 409, 410, 411, 412, 413, 414,
	1238, 1239, 1242, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1280, 503, 425, 1247, 1248, 0, 1208, 0, 426,
	427, 1282, 1240, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1276, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 1231, 1230, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 1170,
	290, 1289, 497, 498, 499, 500, 1193, 1241, 501, 1255,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	1270, 515, 516, 1180, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 1271, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1251, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 1181, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1234, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	1249, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1296, 620, 621, 622, 623, 1272,
	627, 628, 0, 629, 630, 1167, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	1261, 1262, 1263, 1264, 0, 650, 0, 641, 642, 643,
	644, 1273, 645, 1274, 1191, 646, 647, 648, 649, 0,
	5031, 652, 0, 1174, 653, 654, 656, 658, 659, 655,
	657, 660, 1235, 661, 0, 0, 662, 663, 664, 724,
	1258, 1295, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 1171, 0, 0, 0, 0, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 0, 1166, 0, 0, 0, 0, 0,
	0, 1164, 1165, 291, 292, 294, 293, 295, 296, 297,
	298, 1197, 299, 300, 0, 1195, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 5030, 1250, 0, 311, 1257,
	312, 1256, 0, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 1168, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 5032, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 1173, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 1170, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 1167, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 5031, 652, 0, 1174,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1171, 0, 0,
	0, 0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0,
	1166, 0, 0, 0, 0, 0, 0, 1164, 1165, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 1168, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	4634, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 353, 355, 1254, 1253, 1173,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 4635, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 1170, 290, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 1180, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 4633, 576, 1181, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 1167, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 1174, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 1171, 0, 0, 0, 0, 1213, 1185,
	1186, 1187, 3387, 3388, 1196, 0, 1166, 0, 0, 0,
	0, 0, 0, 1164, 1165, 291, 292, 294, 293, 295,
	296, 297, 298, 1197, 299, 300, 0, 1195, 0, 0,
	0, 1237, 1201, 0, 0, 301, 0, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 1250, 0,
	311, 1257, 312, 1256, 0, 1267, 313, 314, 315, 316,
	317, 318, 1203, 1236, 1168, 319, 1297, 1298, 685, 0,
	320, 321, 1243, 0, 1224, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1278, 345, 346, 347, 1227, 1225,
	1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351, 352,
	1260, 353, 355, 1254, 1253, 1173, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1245, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1179, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1268, 1269, 386, 1192, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1252, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 1265, 1266, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1275, 0, 1202,
	408, 0, 409, 410, 411, 412, 413, 414, 1238, 1239,
	1242, 502, 1281, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1280,
	503, 425, 1247, 1248, 0, 1208, 0, 426, 427, 1282,
	1240, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1276, 1285, 442, 443, 1286, 0, 444, 445,
	446, 447, 448, 449, 452, 1231, 1230, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1170, 290, 1289,
	497, 498, 499, 500, 1193, 1241, 501, 1255, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 1270, 515,
	516, 1180, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 1271, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1251,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	1181, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1234, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 1249, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1296, 620, 621, 622, 623, 1272, 627, 628,
	0, 629, 630, 1167, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 1261, 1262,
	1263, 1264, 0, 650, 0, 641, 642, 643, 644, 1273,
	645, 1274, 1191, 646, 647, 648, 649, 0, 651, 652,
	0, 1174, 653, 654, 656, 658, 659, 655, 657, 660,
	1235, 661, 0, 0, 662, 663, 664, 724, 1258, 1295,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 1171,
	0, 0, 0, 0, 1213, 1185, 1186, 1187, 3385, 3386,
	1196, 0, 1166, 0, 0, 0, 0, 0, 0, 1164,
	1165, 291, 292, 294, 293, 295, 296, 297, 298, 1197,
	299, 300, 0, 1195, 0, 0, 0, 1237, 1201, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 1250, 0, 311, 1257, 312, 1256,
	0, 1267, 313, 314, 315, 316, 317, 318, 1203, 1236,
	1168, 319, 1297, 1298, 685, 0, 320, 321, 1243, 0,
	1224, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228,
	1232, 348, 349, 350, 351, 352, 1260, 353, 355, 1254,
	1253, 1173, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1245, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1179,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1268, 1269, 386, 1192, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1252, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	1265, 1266, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1275, 0, 1202, 408, 0, 409, 410,
	411, 412, 413, 414, 1238, 1239, 1242, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1280, 503, 425, 1247, 1248,
	0, 1208, 0, 426, 427, 1282, 1240, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1276, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 1231, 1230, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 1170, 290, 1289, 497, 498, 499, 500,
	1193, 1241, 501, 1255, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 1270, 515, 516, 1180, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 1271, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1251, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 1181, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1234,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 1249, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1296, 620,
	621, 622, 623, 1272, 627, 628, 0, 629, 630, 1167,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 1261, 1262, 1263, 1264, 0, 650,
	0, 641, 642, 643, 644, 1273, 645, 1274, 1191, 646,
	647, 648, 649, 0, 651, 652, 0, 1174, 653, 654,
	656, 658, 659, 655, 657, 660, 1235, 661, 0, 0,
	662, 663, 664, 724, 1258, 1295, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 1171, 0, 0, 0, 0,
	1213, 1185, 1186, 1187, 1183, 1184, 1196, 0, 1166, 0,
	0, 0, 0, 0, 0, 1164, 1165, 291, 292, 294,
	293, 295, 296, 297, 298, 1197, 299, 300, 0, 1195,
	0, 0, 0, 1237, 1201, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	1250, 0, 311, 1257, 312, 1256, 0, 1267, 313, 314,
	315, 316, 317, 318, 1203, 1236, 1168, 319, 1297, 1298,
	685, 0, 320, 321, 1243, 0, 1224, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1278, 345, 346, 347,
	1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350,
	351, 352, 1260, 353, 355, 1254, 1253, 1173, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1245, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1179, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1268, 1269, 386,
	1192, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1252, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 1265, 1266, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1275,
	0, 1202, 408, 0, 409, 410, 411, 412, 413, 414,
	1238, 1239, 1242, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1280, 503, 425, 1247, 1248, 0, 1208, 0, 426,
	427, 1282, 1240, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1276, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 1231, 1230, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 1170,
	290, 1289, 497, 498, 499, 500, 1193, 1241, 501, 1255,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	1270, 515, 516, 1180, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 1271, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1251, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 1181, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1234, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	1249, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1296, 620, 621, 622, 623, 1272,
	627, 628, 0, 629, 630, 1167, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	1261, 1262, 1263, 1264, 0, 650, 0, 641, 642, 643,
	644, 1273, 645, 1274, 1191, 646, 647, 648, 649, 0,
	651, 652, 0, 1174, 653, 654, 656, 658, 659, 655,
	657, 660, 1235, 661, 0, 0, 662, 663, 664, 724,
	1258, 1295, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 1171, 0, 0, 0, 0, 1213, 1185, 1186, 1187,
	1183, 1184, 1196, 0, 1166, 0, 0, 0, 0, 0,
	0, 2627, 2628, 291, 292, 294, 293, 295, 296, 297,
	298, 1197, 299, 300, 0, 1195, 0, 0, 0, 1237,
	1201, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 1250, 0, 311, 1257,
	312, 1256, 0, 1267, 313, 314, 315, 316, 317, 318,
	1203, 1236, 0, 319, 1297, 1298, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 1260, 353,
	355, 1254, 1253, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1245, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1179, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 1192, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1252, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 1265, 1266, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 1202, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 0, 290, 1289, 497, 498,
	499, 500, 1193, 1241, 501, 1255, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 1180,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1251, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 1181, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 1249, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1296, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 1261, 1262, 1263, 1264,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	1191, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 1258, 1295, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 1213, 1185, 1186, 1187, 1183, 1184, 1196, 0,
	2886, 0, 0, 0, 0, 0, 0, 2884, 2885, 291,
	292, 294, 293, 295, 296, 297, 298, 1197, 299, 300,
	0, 1195, 0, 0, 0, 1237, 1201, 0, 0, 301,
	0, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 1250, 0, 311, 1257, 312, 1256, 0, 1267,
	313, 314, 315, 316, 317, 318, 1203, 1236, 0, 319,
	1297, 1298, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 1260, 353, 355, 1254, 1253, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1245, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1179, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 1192, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1252, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 1265, 1266,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 1202, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 1247, 1248, 0, 1208,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 0, 290, 1289, 497, 498, 499, 500, 1193, 1241,
	501, 1255, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1251, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 3380, 3381, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 1249, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1296, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 1261, 1262, 1263, 1264, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 1191, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 1258, 1295, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 1213, 1185,
	1186, 1187, 1183, 1184, 1196, 0, 0, 0, 0, 0,
	0, 0, 0, 2255, 2256, 291, 292, 294, 293, 295,
	296, 297, 298, 1197, 299, 300, 0, 1195, 0, 0,
	0, 1237, 1201, 0, 0, 301, 0, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 0, 1250, 0,
	311, 1257, 312, 1256, 0, 1267, 313, 314, 315, 316,
	317, 318, 1203, 1236, 1168, 319, 1297, 1298, 685, 0,
	320, 321, 1243, 0, 1224, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1278, 345, 346, 5032, 1227, 1225,
	1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351, 352,
	1260, 353, 355, 1254, 1253, 1173, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1245, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1179, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1268, 1269, 386, 1192, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1252, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 1265, 1266, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1275, 0, 1202,
	408, 0, 409, 410, 411, 412, 413, 414, 1238, 1239,
	1242, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1280,
	503, 425, 1247, 1248, 0, 1208, 0, 426, 427, 0,
	1240, 0, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1276, 1285, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 1231, 1230, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 1170, 290, 0,
	497, 498, 499, 500, 1193, 1241, 501, 1255, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 1270, 515,
	516, 1180, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 1271, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1251,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	1181, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1234, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 1249, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1296, 620, 621, 622, 623, 1272, 627, 628,
	0, 629, 630, 1167, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 1261, 1262,
	1263, 1264, 0, 650, 0, 641, 642, 643, 644, 1273,
	645, 1274, 1191, 646, 647, 648, 649, 0, 5031, 652,
	0, 1174, 653, 654, 656, 658, 659, 655, 657, 660,
	1235, 661, 0, 0, 662, 663, 664, 724, 1258, 1295,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 2905, 0, 1213, 1185, 1186, 1187, 1183, 1184,
	1196, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	1165, 291, 292, 294, 293, 295, 296, 297, 298, 1197,
	299, 300, 0, 1195, 0, 0, 0, 1237, 1201, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 1250, 0, 311, 1257, 312, 1256,
	0, 1267, 313, 314, 315, 316, 317, 318, 0, 1236,
	0, 319, 1297, 1298, 685, 0, 320, 321, 1243, 0,
	1224, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228,
	1232, 348, 349, 350, 351, 352, 1260, 353, 355, 1254,
	1253, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1245, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1268, 1269, 386, 1192, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1252, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	1265, 1266, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1275, 0, 1202, 408, 0, 409, 410,
	411, 412, 413, 414, 1238, 1239, 1242, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1280, 503, 425, 1247, 1248,
	0, 1208, 0, 426, 427, 1282, 1240, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1276, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 1231, 1230, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 0, 290, 1289, 497, 498, 499, 500,
	1193, 1241, 501, 1255, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 1270, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 1271, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1251, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 1181, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1234,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 1249, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1296, 620,
	621, 622, 623, 1272, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 1261, 1262, 1263, 1264, 0, 650,
	0, 641, 642, 643, 644, 1273, 645, 1274, 1191, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 1235, 661, 0, 0,
	662, 663, 664, 724, 1258, 1295, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 1620, 0, 1213, 1185, 1186,
	1187, 1183, 1184, 1196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 1197, 0, 0, 0, 1195,
	1237, 1201, 0, 0, 301, 0, 302, 303, 1277, 304,
	305, 306, 307, 308, 309, 310, 678, 1250, 0, 311,
	1257, 312, 1256, 0, 1267, 313, 314, 315, 316, 317,
	318, 0, 1236, 0, 319, 1297, 1298, 685, 0, 320,
	321, 1243, 0, 1224, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 1278, 345, 346, 347, 1227, 1225, 1226,
	1233, 1229, 1228, 1232, 348, 349, 350, 351, 352, 1260,
	353, 355, 1254, 1253, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 1245,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 1268, 1269, 386, 1192, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 1252, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1279,
	395, 396, 397, 1265, 1266, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 1275, 0, 1202, 408,
	0, 409, 410, 411, 412, 413, 414, 1238, 1239, 1242,
	502, 1281, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 1280, 503,
	425, 1247, 1248, 0, 1208, 0, 426, 427, 1282, 1240,
	1283, 428, 429, 430, 1284, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 1276, 1285, 442, 443, 1286, 0, 444, 445, 446,
	447, 448, 449, 452, 1231, 1230, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1287, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1288, 495, 483, 0, 290, 1289, 497,
	498, 499, 500, 1193, 1241, 501, 1255, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 1290, 514, 1291, 1270, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 1271, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 1251, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1292, 572, 573, 574, 575, 576, 1181,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 1234, 600, 601, 583, 584, 602, 603, 1293,
	604, 605, 606, 607, 608, 609, 610, 1249, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 1296, 620, 621, 622, 623, 1272, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 1261, 1262, 1263,
	1264, 0, 650, 0, 641, 642, 643, 644, 1273, 645,
	1274, 1191, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 1235,
	661, 0, 0, 662, 663, 664, 724, 1258, 1295, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 0, 0,
	0, 0, 672, 673, 728, 674, 675, 676, 1157, 0,
	1336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 1197, 0,
	0, 0, 1195, 1237, 0, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 1236, 0, 319, 683, 684,
	685, 0, 320, 321, 1243, 0, 1224, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1278, 345, 346, 347,
	1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1268, 1269, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1275,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	1238, 1239, 1242, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1280, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 1282, 1240, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 1322, 438,
	440, 439, 0, 441, 1276, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 1231, 1230, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 0,
	290, 1289, 497, 498, 499, 500, 0, 1241, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 1328, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	1270, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 1271, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 714, 1330, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 247, 595,
	596, 594, 597, 598, 599, 1234, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 1272,
	627, 628, 0, 629, 630, 0, 626, 617, 249, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 1273, 645, 1274, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 1235, 661, 0, 0, 662, 663, 664, 1738,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 1336, 241, 672, 673, 728, 674, 675,
	676, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 1237, 0, 0, 1326,
	301, 2097, 302, 303, 1277, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 1236, 0,
	319, 683, 684, 685, 0, 320, 321, 1243, 0, 1224,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 1278,
	345, 346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	1268, 1269, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1279, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 1275, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 1238, 1239, 1242, 502, 1281, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 1280, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 1282, 1240, 1283, 428, 429, 430,
	1284, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 1322, 438, 440, 439, 0, 441, 1276, 1285, 442,
	443, 1286, 0, 444, 445, 446, 447, 448, 449, 452,
	1231, 1230, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1287, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1288,
	495, 483, 0, 290, 1289, 497, 498, 499, 500, 0,
	1241, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 1328, 509, 510, 511, 0, 0, 512, 513, 707,
	1290, 514, 1291, 1270, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 1271, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1292,
	572, 573, 574, 575, 576, 714, 1330, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 247, 595, 596, 594, 597, 598, 599, 1234, 600,
	601, 583, 584, 602, 603, 1293, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 1272, 627, 628, 0, 629, 630, 0, 626,
	617, 249, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 1273, 645, 1274, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 1235, 661, 0, 0, 662,
	663, 664, 1738, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 3544, 0, 1336, 241, 672, 673,
	728, 674, 675, 676, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 1237,
	0, 0, 1326, 301, 2097, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 1236, 0, 319, 683, 684, 685, 0, 320, 321,
	1243, 0, 1224, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233,
	1229, 1228, 1232, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1268, 1269, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1275, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 1238, 1239, 1242, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1280, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 1282, 1240, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 1322, 438, 440, 439, 0, 441,
	1276, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 1231, 1230, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 0, 290, 1289, 497, 498,
	499, 500, 0, 1241, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 1328, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 1270, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	1271, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 714, 1330,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1234, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 1272, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 1273, 645, 1274,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 1235, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 1318, 0, 1336,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 1237, 0, 0, 1326, 301, 1324, 302, 303,
	1277, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 1236, 0, 319, 683, 684, 685,
	0, 320, 321, 1243, 0, 1224, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 1278, 345, 346, 347, 1227,
	1225, 1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 1268, 1269, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 1279, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 1275, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 1238,
	1239, 1242, 502, 1281, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	1280, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	1282, 1240, 1283, 428, 429, 430, 1284, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 1322, 438, 440,
	439, 0, 441, 1276, 1285, 442, 443, 1286, 0, 444,
	445, 446, 447, 448, 449, 452, 1231, 1230, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1287, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1288, 495, 483, 0, 290,
	1289, 497, 498, 499, 500, 0, 1241, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 1328, 509, 510,
	511, 0, 0, 512, 513, 707, 1290, 514, 1291, 1270,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 1271, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 1292, 572, 573, 574, 575,
	576, 714, 1330, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 1234, 600, 601, 583, 584, 602,
	603, 1293, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 1272, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	1273, 645, 1274, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 1235, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	0, 0, 1336, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 1237, 0, 0, 1326, 301,
	1324, 302, 303, 1277, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 1236, 0, 319,
	683, 684, 685, 0, 320, 321, 1243, 0, 1224, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1278, 345,
	346, 347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1268,
	1269, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1279, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1275, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 1238, 1239, 1242, 502, 1281, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1280, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 1282, 1240, 1283, 428, 429, 430, 1284,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	1322, 438, 440, 439, 0, 441, 1276, 1285, 442, 443,
	1286, 0, 444, 445, 446, 447, 448, 449, 452, 1231,
	1230, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1287, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1288, 495,
	483, 0, 290, 1289, 497, 498, 499, 500, 0, 1241,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	1328, 509, 510, 511, 0, 0, 512, 513, 707, 1290,
	514, 1291, 1270, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 1271, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1292, 572,
	573, 574, 575, 576, 714, 1330, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1234, 600, 601,
	583, 584, 602, 603, 1293, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 1272, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 1273, 645, 1274, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 1235, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 1336, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 1237, 0,
	0, 1326, 301, 1324, 302, 303, 1277, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	1236, 0, 319, 683, 684, 685, 0, 320, 321, 1243,
	0, 1224, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1278, 345, 346, 347, 1227, 1225, 1226, 1233, 1229,
	1228, 1232, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 1268, 1269, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1279, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 1275, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 1238, 1239, 1242, 502, 1281,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 1280, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 1282, 1240, 1283, 428,
	429, 430, 1284, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 1276,
	1285, 442, 443, 1286, 0, 444, 445, 446, 447, 448,
	449, 452, 1231, 1230, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1287, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1288, 495, 483, 0, 290, 1289, 497, 498, 499,
	500, 0, 1241, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 1290, 514, 1291, 1270, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 1271,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1292, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	1234, 600, 601, 583, 584, 602, 603, 1293, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 1272, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 1273, 645, 1274, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 1235, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 0, 0, 1336, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 1237, 0, 0, 0, 301, 4448, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 1236, 0, 319, 683, 684, 685, 0,
	320, 321, 1243, 0, 1224, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1278, 345, 346, 347, 1227, 1225,
	1226, 1233, 1229, 1228, 1232, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1268, 1269, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1275, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 1238, 1239,
	1242, 502, 1281, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1280,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 1282,
	1240, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1276, 1285, 442, 443, 1286, 0, 444, 445,
	446, 447, 448, 449, 452, 1231, 1230, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 0, 290, 1289,
	497, 498, 499, 500, 0, 1241, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 1270, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 1271, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	714, 1330, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1234, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 1272, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 1273,
	645, 1274, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	1235, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 285, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 2731, 2732, 2733, 2750, 2751, 2752, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 2753, 0, 677, 0, 0, 0, 301, 1993,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	678, 679, 0, 311, 680, 312, 681, 0, 682, 313,
	314, 315, 316, 317, 318, 0, 0, 1978, 319, 683,
	684, 685, 0, 320, 321, 686, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 2743, 0, 331,
	332, 333, 330, 334, 0, 335, 2739, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 687, 688, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 689, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 690, 691,
	386, 0, 0, 0, 2744, 2745, 2746, 2747, 387, 388,
	389, 692, 0, 0, 2738, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 693, 694, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	695, 0, 696, 408, 0, 409, 410, 411, 412, 413,
	414, 697, 698, 699, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 700, 701, 0, 702, 0,
	426, 427, 0, 703, 0, 428, 429, 430, 0, 431,
	0, 2748, 2749, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 704, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 2741, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 705, 501,
	706, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 707, 0, 514,
	0, 708, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 709, 528, 529,
	530, 710, 531, 532, 533, 711, 534, 712, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 713, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 714, 577, 2742, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 715, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 716, 620, 621, 622, 623,
	717, 627, 628, 0, 629, 630, 1977, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 0,
	640, 718, 719, 720, 721, 0, 650, 0, 641, 642,
	643, 644, 722, 645, 723, 0, 646, 647, 648, 649,
	0, 651, 652, 0, 0, 653, 654, 656, 658, 659,
	655, 657, 660, 0, 661, 0, 0, 662, 663, 664,
	724, 725, 726, 0, 666, 665, 667, 668, 669, 727,
	670, 671, 0, 0, 0, 0, 672, 673, 728, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 1615, 2728, 2729, 2730, 2754, 2740, 2734, 0, 2736,
	2737, 2735, 2722, 2723, 2724, 2725, 2726, 2727, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 677, 0, 0, 0, 301, 0,
	302, 303, 1277, 304, 305, 306, 307, 308, 309, 310,
	678, 679, 0, 311, 680, 312, 681, 0, 682, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 683,
	684, 685, 0, 320, 321, 686, 0, 1579, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 1278, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 687, 688, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 689, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 690, 691,
	386, 0, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 692, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 1279, 395, 396, 397, 693, 694, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	695, 0, 696, 408, 0, 409, 410, 411, 412, 413,
	414, 697, 698, 699, 502, 1281, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 1280, 503, 425, 700, 701, 0, 702, 0,
	426, 427, 1282, 703, 1283, 428, 429, 430, 1284, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 704, 1285, 442, 443, 1286,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1287,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1288, 495, 483,
	0, 0, 1289, 497, 498, 499, 500, 0, 705, 501,
	706, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 707, 1290, 514,
	1291, 708, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 709, 528, 529,
	530, 710, 531, 532, 533, 711, 534, 712, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 713, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 1292, 572, 573,
	574, 575, 576, 714, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 247,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 1293, 604, 605, 606, 607, 608, 609,
	610, 715, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 716, 620, 621, 622, 623,
	717, 627, 628, 0, 629, 630, 0, 626, 617, 249,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 0,
	640, 718, 719, 720, 721, 0, 650, 0, 641, 642,
	643, 644, 722, 645, 723, 0, 646, 647, 648, 649,
	0, 651, 652, 0, 0, 653, 654, 656, 658, 659,
	655, 657, 660, 0, 661, 0, 0, 662, 663, 664,
	1738, 725, 726, 0, 666, 665, 667, 668, 669, 727,
	670, 671, 1735, 0, 1615, 241, 672, 673, 728, 674,
	675, 676, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 201, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	1579, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 697, 698, 699, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 1280, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 1282, 703, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 0, 0, 1289, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 247, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 249, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 1738, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 241, 672,
	673, 728, 674, 675, 676, 1615, 1614, 242, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 201, 0, 0, 677, 0,
	0, 0, 301, 0, 302, 303, 1277, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 1579, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1278, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1279, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 1281,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 1280, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 1282, 703, 1283, 428,
	429, 430, 1284, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	1285, 442, 443, 1286, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1287, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1288, 495, 483, 0, 0, 1289, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 1290, 514, 1291, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1292, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 1293, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 0, 0, 0, 0,
	672, 673, 728, 674, 675, 676, 1615, 1614, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 1762, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 1579, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 697, 698, 699, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 1280, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 1282, 703, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 0, 0, 1289, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 1615, 1614, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 3869, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 1277, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 1579, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 1278, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1279,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 697, 698, 699,
	502, 1281, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 1280, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 1282, 703,
	1283, 428, 429, 430, 1284, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 1285, 442, 443, 1286, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1287, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1288, 495, 483, 0, 0, 1289, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 1290, 514, 1291, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 2492, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1292, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 1293,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 0, 0,
	0, 0, 672, 673, 728, 674, 675, 676, 1615, 2401,
	0, 0, 0, 0, 2402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 1762, 0,
	0, 677, 0, 0, 0, 301, 0, 302, 303, 1277,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 0,
	320, 321, 686, 0, 1579, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1278, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1279, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 697, 698,
	699, 502, 1281, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 1280,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 1282,
	703, 1283, 428, 429, 430, 1284, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 2400, 440, 439,
	0, 441, 704, 1285, 442, 443, 1286, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1287, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1288, 495, 483, 0, 0, 1289,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 1290, 514, 1291, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1292, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	1293, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 1615,
	1614, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 1762,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	1277, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 321, 686, 0, 1579, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 1278, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 1279, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 697,
	698, 699, 502, 1281, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	1280, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	1282, 703, 1283, 428, 429, 430, 1284, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 1285, 442, 443, 1286, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1287, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1288, 495, 483, 0, 0,
	1289, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 1290, 514, 1291, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 1292, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 1293, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	1157, 0, 285, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	1744, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 685, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 697, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	247, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	249, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 1738, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 0, 0, 285, 241, 672, 673, 728,
	674, 675, 676, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 301, 201, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 0, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 0, 703, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 290, 0, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 0, 514, 0, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 0, 0, 285, 3160,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 301, 2111, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 0,
	320, 321, 686, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 697, 698,
	699, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 0,
	703, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 704, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 0, 514, 0, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 0,
	0, 1336, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 1237, 0, 0, 0, 301, 5199,
	302, 303, 1277, 304, 305, 306, 307, 308, 309, 310,
	678, 679, 0, 311, 680, 312, 681, 0, 682, 313,
	314, 315, 316, 317, 318, 0, 1236, 0, 319, 683,
	684, 685, 0, 320, 321, 1243, 0, 1224, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 1278, 345, 346,
	347, 1227, 1225, 1226, 1233, 1229, 1228, 1232, 348, 349,
	350, 351, 352, 0, 353, 355, 687, 688, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 689, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 1268, 1269,
	386, 0, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 692, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 1279, 395, 396, 397, 693, 694, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	1275, 0, 696, 408, 0, 409, 410, 411, 412, 413,
	414, 1238, 1239, 1242, 502, 1281, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 1280, 503, 425, 700, 701, 0, 702, 0,
	426, 427, 1282, 1240, 1283, 428, 429, 430, 1284, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 1276, 1285, 442, 443, 1286,
	0, 444, 445, 446, 447, 448, 449, 452, 1231, 1230,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1287,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1288, 495, 483,
	0, 290, 1289, 497, 498, 499, 500, 0, 1241, 501,
	706, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 707, 1290, 514,
	1291, 1270, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 709, 528, 529,
	530, 710, 531, 532, 533, 1271, 534, 712, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 713, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 1292, 572, 573,
	574, 575, 576, 714, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 1234, 600, 601, 583,
	584, 602, 603, 1293, 604, 605, 606, 607, 608, 609,
	610, 715, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 716, 620, 621, 622, 623,
	1272, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 0,
	640, 718, 719, 720, 721, 0, 650, 0, 641, 642,
	643, 644, 1273, 645, 1274, 0, 646, 647, 648, 649,
	0, 651, 652, 0, 0, 653, 654, 656, 658, 659,
	655, 657, 660, 1235, 661, 0, 0, 662, 663, 664,
	724, 725, 726, 0, 666, 665, 667, 668, 669, 727,
	670, 671, 285, 0, 0, 0, 672, 673, 728, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 685, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 697, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 290, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 285, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 3822, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 290, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 285, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 1732, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 697, 698, 699, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 0, 703, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 0, 514, 0, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 285, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 3281, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 697, 698, 699,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 0, 703,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 0, 514, 0, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 0, 0,
	285, 0, 672, 673, 728, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 3980, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	697, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 981, 0, 881, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 2479, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 888, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 978, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 290, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 980, 0, 626,
	617, 886, 631, 632, 633, 634, 635, 887, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 2156, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 891, 0, 0, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 0, 2162, 0, 311, 2152, 312, 2168,
	0, 2175, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 2178, 2179, 0, 0, 320, 321, 0, 0,
	1579, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 1260, 353, 355, 2166,
	2165, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1245, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 0,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 0, 0, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 2164, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	2173, 2174, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 0, 409, 410,
	411, 412, 413, 414, 0, 0, 0, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 1280, 503, 425, 2159, 2160,
	0, 2155, 0, 426, 427, 1282, 0, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 0, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 0, 0, 1289, 497, 498, 499, 500,
	0, 0, 501, 2167, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	0, 1290, 514, 1291, 0, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	2149, 528, 529, 530, 2150, 531, 532, 533, 0, 534,
	0, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 2163, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 0, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 2161, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 2177, 620,
	621, 622, 623, 0, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 2169, 2170, 2171, 2172, 0, 650,
	0, 641, 642, 643, 644, 0, 645, 0, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 0, 2153, 2176, 0, 666, 665, 667,
	668, 669, 0, 670, 671, 0, 0, 0, 881, 672,
	673, 0, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 4100, 299, 300, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 301, 0, 302, 303, 2143,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 0,
	320, 321, 686, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 888, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 697, 698,
	699, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 0,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 0,
	703, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 704, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 290, 0,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 0, 514, 0, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 4099, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 886, 631, 632, 633,
	634, 635, 887, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 4098, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 881,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 2183, 299, 300, 0, 0, 0,
	0, 891, 677, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 321, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 888,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 697,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 290,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 2182, 590, 591, 592, 593, 0, 2184, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 886, 631, 632,
	633, 634, 635, 887, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 2181, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	881, 0, 0, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 2134, 299, 300, 0, 0,
	0, 0, 891, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	888, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	697, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	290, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 2133, 590, 591, 592, 593, 0, 2135,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 886, 631,
	632, 633, 634, 635, 887, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 2132, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 879, 0, 881, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 891, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 888, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 290, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 886, 631, 632, 633, 634, 635, 887, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 881, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 891, 677, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 888, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 697, 698, 699, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 0, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 0, 703, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 290, 0, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 0, 514, 0, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 886, 631, 632, 633, 634, 635, 887, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 881, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 891, 677, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 888, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 0, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 0, 703, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 290, 0, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 0, 514, 0, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 2531, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 2532, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 886, 631, 632, 633, 634, 635, 887,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 2533, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 285, 0, 0, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 891, 677,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 697, 698, 699, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 0, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 0, 703, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 290, 0, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 0, 514, 0, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 0, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 1615, 1614, 0, 0, 0, 0, 1612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 891,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 1277, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 1579,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 1278,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1279, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 1281, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 1280, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 1282, 703, 1283, 428, 429, 430,
	1284, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 1285, 442,
	443, 1286, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1287, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1288,
	495, 483, 0, 0, 1289, 497, 498, 499, 500, 4200,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	1290, 514, 1291, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1292,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 1293, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 0, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 1615, 1614, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	1579, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 697, 698, 699, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 1280, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 1282, 703, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 0, 0, 1289, 497, 498, 499, 500,
	3772, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 0, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 1793, 0, 1615, 1614, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 1277, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 1579, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 1278, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 288, 0,
	0, 0, 0, 0, 1792, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1279,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 697, 698, 699,
	502, 1281, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 1280, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 1282, 703,
	1283, 428, 429, 430, 1284, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 1285, 442, 443, 1286, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1287, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1288, 495, 483, 0, 0, 1289, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 1290, 514, 1291, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 1791, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1292, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 1790, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 1293,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 0, 0,
	0, 0, 672, 673, 728, 674, 675, 676, 1665, 0,
	1615, 1614, 0, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 1277, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 1579, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1278, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1279, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	1667, 698, 699, 502, 1281, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 1280, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 1282, 703, 1283, 428, 429, 430, 1284, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 1285, 442, 443, 1286, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1287, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1288, 495, 483, 0,
	0, 1289, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 1290, 514, 1291,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1292, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 1293, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 0, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 1610, 0, 1615, 1614, 0, 0, 0, 0, 1612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 1277, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 1579,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 1278,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1279, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 1281, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 1280, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 1282, 703, 1283, 428, 429, 430,
	1284, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 1285, 442,
	443, 1286, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1287, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1288,
	495, 483, 0, 0, 1289, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	1290, 514, 1291, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1292,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 1293, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 0, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 1615, 1614, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 0, 302, 303, 1277, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	1579, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1278, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1279, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 697, 698, 699, 502, 1281, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 1280, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 1282, 703, 1283, 428, 429,
	430, 1284, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 1285,
	442, 443, 1286, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1287, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1288, 495, 483, 0, 0, 1289, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 1290, 514, 1291, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1292, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 1293, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 1615, 1614, 0, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 301, 0, 302, 303, 1277, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 1579, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1278, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1279, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 1281,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 1280, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 1282, 703, 1283, 428,
	429, 430, 1284, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	1285, 442, 443, 1286, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1287, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1288, 495, 483, 0, 0, 1289, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 1290, 514, 1291, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1292, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 1293, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 1615, 0, 0, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 1277, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 1579, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1278, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1279, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 697, 698, 699, 502,
	1281, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 1280, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 1282, 703, 1283,
	428, 429, 430, 1284, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 1285, 442, 443, 1286, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1287, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1288, 495, 483, 0, 0, 1289, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 1290, 514, 1291, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1292, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 1293, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 285, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 3065, 320,
	321, 686, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	3814, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	3069, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 3813, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 3068, 394, 0, 0,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 697, 698, 699,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 3810, 422, 423, 424, 0, 0, 503,
	425, 700, 701, 0, 702, 0, 426, 3812, 0, 703,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 0, 442, 443, 3809, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 0, 514, 0, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 3067, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	3811, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 285, 0,
	0, 0, 672, 673, 728, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 3065,
	320, 321, 686, 0, 0, 3059, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 3061, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 3069, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 3068, 394, 0,
	0, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 3058, 698,
	699, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 0,
	703, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 704, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 0, 514, 0, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 3067, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 3066, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 1873,
	0, 285, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 1872, 299, 300, 0,
	0, 0, 0, 0, 677, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	678, 679, 0, 311, 680, 312, 681, 0, 682, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 683,
	684, 685, 0, 320, 321, 686, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 1871, 352, 0, 353, 355, 687, 688, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 689, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 690, 691,
	386, 0, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 692, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 693, 694, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	695, 0, 696, 408, 0, 409, 410, 411, 412, 413,
	414, 697, 698, 699, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 0, 503, 425, 700, 701, 0, 702, 0,
	426, 427, 0, 703, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 704, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 290, 0, 497, 498, 499, 500, 0, 705, 501,
	706, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 707, 0, 514,
	0, 708, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 709, 528, 529,
	530, 710, 531, 532, 533, 711, 534, 712, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 713, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 714, 577, 0, 578, 579, 586, 587,
	588, 1874, 581, 582, 589, 590, 591, 592, 593, 0,
	1870, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 715, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 716, 620, 621, 622, 623,
	717, 627, 628, 0, 629, 630, 0, 626, 617, 1868,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 0,
	640, 718, 719, 720, 721, 0, 650, 0, 641, 642,
	643, 644, 722, 645, 723, 0, 646, 647, 648, 649,
	0, 651, 652, 0, 0, 653, 654, 656, 658, 659,
	655, 657, 660, 0, 661, 0, 0, 662, 663, 664,
	724, 725, 726, 0, 1869, 665, 667, 668, 669, 727,
	670, 671, 1583, 0, 285, 0, 672, 673, 728, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 1585, 698, 699, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 0, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 0, 703, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 290, 0, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 1328, 509, 510, 511, 0, 0, 512, 513,
	707, 0, 514, 0, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 1580, 0, 285, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 1582, 698, 699,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 0, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 0, 703,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 290, 0, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 1328, 509, 510, 511, 0,
	0, 512, 513, 707, 0, 514, 0, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 1486, 0,
	285, 0, 672, 673, 728, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	1488, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	290, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 1328, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 761, 0, 285, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 760, 297, 298, 749, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 752, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	758, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 754, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 748, 0, 285, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 749, 299, 300, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 752, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 753, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 697, 698, 699, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 0, 703, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 0, 514, 0, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 754, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 285, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 749, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 752,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 753, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 697, 698, 699,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 0, 703,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 0, 514, 0, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 754, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 285, 0,
	0, 0, 672, 673, 728, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 749, 299, 300, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 0,
	320, 321, 686, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	752, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 4210, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 697, 698,
	699, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 0,
	703, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 704, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 0, 514, 0, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 754, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 285,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 321, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 697,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 290,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 1328, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	285, 0, 0, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	697, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 3712, 495, 483, 0,
	290, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 3251, 0, 285, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 3250, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 290, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 285, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 697, 698, 699, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 0, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 0, 703, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 290, 0, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 0, 514, 0, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 2437, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 2500, 0, 285, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 697, 698, 699,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 0, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 0, 703,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 290, 0, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 0, 514, 0, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 2444, 0,
	285, 0, 672, 673, 728, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	2443, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	290, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 2430, 0, 285, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 2432, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 290, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 285, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 2394, 698, 699, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 0, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 0, 703, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 290, 0, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 1328, 509, 510, 511, 0, 0, 512, 513,
	707, 0, 514, 0, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 1710, 0, 285, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 1709, 698, 699,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 0, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 0, 703,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 290, 0, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 0, 514, 0, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 1603, 0,
	285, 0, 672, 673, 728, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	697, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	290, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 1596, 0, 285, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 1598, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 290, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 1405, 0, 285, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 1404, 698, 699, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 0, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 0, 703, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 290, 0, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 0, 514, 0, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 1395, 0, 285,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 321, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 1394,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 290,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	1392, 0, 285, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 685, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 1391, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 290, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 1387, 0, 285, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 1386, 698, 699, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 0, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 0, 703, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 290, 0, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 0, 514, 0, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 730, 0, 285, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 0,
	320, 321, 686, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 697, 698,
	699, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 0,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 0,
	703, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 704, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 290, 0,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 0, 514, 0, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 276,
	0, 285, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 677, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	678, 679, 0, 311, 680, 312, 681, 0, 682, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 683,
	684, 685, 0, 320, 321, 686, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 687, 688, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 689, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 690, 691,
	386, 0, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 692, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 693, 694, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	695, 0, 696, 408, 0, 409, 410, 411, 412, 413,
	414, 697, 698, 699, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 0, 503, 425, 700, 701, 0, 702, 0,
	426, 427, 0, 703, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 704, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 290, 0, 497, 498, 499, 500, 0, 705, 501,
	706, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 707, 0, 514,
	0, 708, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 709, 528, 529,
	530, 710, 531, 532, 533, 711, 534, 712, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 713, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 714, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 715, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 716, 620, 621, 622, 623,
	717, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 0,
	640, 718, 719, 720, 721, 0, 650, 0, 641, 642,
	643, 644, 722, 645, 723, 0, 646, 647, 648, 649,
	0, 651, 652, 0, 0, 653, 654, 656, 658, 659,
	655, 657, 660, 0, 661, 0, 0, 662, 663, 664,
	724, 725, 726, 0, 666, 665, 667, 668, 669, 727,
	670, 671, 285, 0, 0, 0, 672, 673, 728, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 685, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 697, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 290, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 285, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 752, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	753, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 754, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 285, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 2540, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 697, 698, 699, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 0, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 0, 703, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 290, 0, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 0, 514, 0, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 285, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 2538, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 0, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 0, 703, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 290, 0, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 0, 514, 0, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 285, 0, 0, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 2536, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 697, 698, 699, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 0, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 0, 703, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 290, 0, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 0, 514, 0, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 285, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 2450, 698, 699,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 0, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 0, 703,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 290, 0, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 0, 514, 0, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 285, 0,
	0, 0, 672, 673, 728, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 0,
	320, 321, 686, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 2208, 698,
	699, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 0,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 0,
	703, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 704, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 290, 0,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 0, 514, 0, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 285,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 321, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 2202,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 290,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	965, 0, 285, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 685, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 697, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	964, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	963, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 833, 0, 285, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 839, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 848, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 841, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 847, 843, 0, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 0,
	415, 416, 844, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 0, 703, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 842, 0, 438, 440, 439, 0, 441, 704,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 845, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 0, 514, 0, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 846, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 840, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 285, 0, 0, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 3813, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 697, 698, 699, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 0, 703, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 0, 514, 0, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 4531, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 1433, 0, 285,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	1436, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 1434,
	0, 320, 321, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 697,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 821, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 820, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 819, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 1437, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 817,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	1433, 0, 285, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	0, 302, 303, 1436, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 1434, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 697, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 821,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 820,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 819, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 1437, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 817, 719, 720, 721, 0, 650, 0, 641,
	1435, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 828, 0, 285, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	826, 299, 300, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 0, 703, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 0, 514, 0, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 739, 0, 285, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 738, 299, 300, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 0,
	320, 321, 686, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 697, 698,
	699, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 0,
	703, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 704, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 0, 514, 0, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 737, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 285,
	3160, 0, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 321, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 697,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	285, 0, 0, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	697, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 4829,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 285, 3653, 0, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 677, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	678, 679, 0, 311, 680, 312, 681, 0, 682, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 683,
	684, 685, 0, 320, 321, 686, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 687, 688, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 689, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 690, 691,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 692, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 693, 694, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	695, 0, 696, 408, 0, 409, 410, 411, 412, 413,
	414, 697, 698, 699, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 700, 701, 0, 702, 0,
	426, 427, 0, 703, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 704, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 705, 501,
	706, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 707, 0, 514,
	0, 708, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 709, 528, 529,
	530, 710, 531, 532, 533, 711, 534, 712, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 713, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 714, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 715, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 716, 620, 621, 622, 623,
	717, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 0,
	640, 718, 719, 720, 721, 0, 650, 0, 641, 642,
	643, 644, 722, 645, 723, 0, 646, 647, 648, 649,
	0, 651, 652, 0, 0, 653, 654, 656, 658, 659,
	655, 657, 660, 0, 661, 0, 0, 662, 663, 664,
	724, 725, 726, 0, 666, 665, 667, 668, 669, 727,
	670, 671, 285, 0, 0, 0, 672, 673, 728, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 685, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 697, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 4420, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 285, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	4157, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 285, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 2940,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 697, 698, 699, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 0, 703, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 0, 514, 0, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 285, 3160, 0, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 0, 703, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 3290, 0, 0, 512,
	513, 707, 0, 514, 0, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 285, 0, 0, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 697, 698, 699, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 0, 703, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 0, 514, 0, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 2338, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 820, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 819,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 817, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 285, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 2510, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 697, 698, 699,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 0, 703,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 0, 514, 0, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 2498, 0,
	285, 0, 672, 673, 728, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	697, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 1766, 0, 285, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 1758, 0, 285, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 697, 698, 699, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 0, 703, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 0, 514, 0, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 811, 0, 285,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 807, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 697,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 812, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 821, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 820, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 819, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 1743, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 817,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	1716, 0, 285, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 685, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 1715, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 1700, 0, 285, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 1698, 698, 699, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 0, 703, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 0, 514, 0, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 1693, 0, 285, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 0,
	320, 321, 686, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 697, 698,
	699, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 0,
	703, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 704, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 0, 514, 0, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 1670,
	0, 285, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 677, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	678, 679, 0, 311, 680, 312, 681, 0, 682, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 683,
	684, 685, 0, 320, 321, 686, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 687, 688, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 689, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 690, 691,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 692, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 693, 694, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	695, 0, 696, 408, 0, 409, 410, 411, 412, 413,
	414, 1668, 698, 699, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 700, 701, 0, 702, 0,
	426, 427, 0, 703, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 704, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 705, 501,
	706, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 707, 0, 514,
	0, 708, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 709, 528, 529,
	530, 710, 531, 532, 533, 711, 534, 712, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 713, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 714, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 715, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 716, 620, 621, 622, 623,
	717, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 0,
	640, 718, 719, 720, 721, 0, 650, 0, 641, 642,
	643, 644, 722, 645, 723, 0, 646, 647, 648, 649,
	0, 651, 652, 0, 0, 653, 654, 656, 658, 659,
	655, 657, 660, 0, 661, 0, 0, 662, 663, 664,
	724, 725, 726, 0, 666, 665, 667, 668, 669, 727,
	670, 671, 1663, 0, 285, 0, 672, 673, 728, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 697, 698, 699, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 0, 703, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 0, 514, 0, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 1624, 0, 285, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 697, 698, 699,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 0, 703,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 0, 514, 0, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 1588, 0,
	285, 0, 672, 673, 728, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	697, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 1439, 0, 285, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	820, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 819, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 817, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 1410, 0, 285, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 1409, 698, 699, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 0, 703, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 0, 514, 0, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 1401, 0, 285,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 321, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 1400,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	285, 0, 0, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 1353, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	697, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 831, 0, 285, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 811, 0, 285, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 807,
	686, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	806, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 697, 698, 699, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 0, 703, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 812, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 821, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 0, 514, 0, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 820, 573, 574, 575, 576, 808, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 819,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 809,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 817, 719, 720, 721,
	0, 650, 0, 641, 813, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 800, 0, 285,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 321, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 697,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 801, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	763, 0, 285, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 685, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 697, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 756, 0, 285, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 697, 698, 699, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 0, 703, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 0, 514, 0, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 734, 0, 285, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 0,
	320, 321, 686, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 697, 698,
	699, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 0,
	703, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 704, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 0, 514, 0, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 285,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 321, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 697,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	285, 0, 0, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	3842, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 285, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 677, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	678, 679, 0, 311, 680, 312, 681, 0, 682, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 683,
	684, 685, 0, 320, 321, 686, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 687, 688, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 689, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 690, 691,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 692, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 693, 694, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	695, 0, 696, 408, 0, 409, 410, 411, 412, 413,
	414, 697, 698, 699, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 700, 701, 0, 702, 0,
	426, 427, 0, 703, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 704, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 705, 501,
	706, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 707, 0, 514,
	0, 708, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 709, 528, 529,
	530, 710, 531, 532, 533, 711, 534, 712, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 713, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 820, 573,
	574, 575, 576, 714, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 819, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 715, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 716, 620, 621, 622, 623,
	717, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 0,
	640, 817, 719, 720, 721, 0, 650, 0, 641, 642,
	643, 644, 722, 645, 723, 0, 646, 647, 648, 649,
	0, 651, 652, 0, 0, 653, 654, 656, 658, 659,
	655, 657, 660, 0, 661, 0, 0, 662, 663, 664,
	724, 725, 726, 0, 666, 665, 667, 668, 669, 727,
	670, 671, 285, 0, 0, 0, 672, 673, 728, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 685, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 3752, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 285, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 3728, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 285, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 408, 0, 409, 410,
	411, 412, 413, 414, 3725, 698, 699, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 0, 703, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 0, 514, 0, 708, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 714, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 285, 0, 0, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 678, 679, 0, 311, 680, 312,
	681, 0, 682, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 683, 684, 685, 0, 320, 321, 686,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	687, 688, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	689, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 690, 691, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 692, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 693, 694, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 695, 0, 696, 408, 0, 409,
	410, 411, 412, 413, 414, 3677, 698, 699, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 700,
	701, 0, 702, 0, 426, 427, 0, 703, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 704,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 705, 501, 706, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 707, 0, 514, 0, 708, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 709, 528, 529, 530, 710, 531, 532, 533, 711,
	534, 712, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 713, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 714, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 715, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 716,
	620, 621, 622, 623, 717, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 0, 640, 718, 719, 720, 721, 0,
	650, 0, 641, 642, 643, 644, 722, 645, 723, 0,
	646, 647, 648, 649, 0, 651, 652, 0, 0, 653,
	654, 656, 658, 659, 655, 657, 660, 0, 661, 0,
	0, 662, 663, 664, 724, 725, 726, 0, 666, 665,
	667, 668, 669, 727, 670, 671, 285, 0, 0, 0,
	672, 673, 728, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 678, 679, 0, 311, 680,
	312, 681, 0, 682, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 683, 684, 685, 0, 320, 321,
	686, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 687, 688, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 689, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 690, 691, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 692, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 693, 694, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 695, 0, 696, 408, 0,
	409, 410, 411, 412, 413, 414, 3675, 698, 699, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	700, 701, 0, 702, 0, 426, 427, 0, 703, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	704, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 705, 501, 706, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 707, 0, 514, 0, 708, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 709, 528, 529, 530, 710, 531, 532, 533,
	711, 534, 712, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 713, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 714, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 715, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	716, 620, 621, 622, 623, 717, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 718, 719, 720, 721,
	0, 650, 0, 641, 642, 643, 644, 722, 645, 723,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 724, 725, 726, 0, 666,
	665, 667, 668, 669, 727, 670, 671, 285, 0, 0,
	0, 672, 673, 728, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 678, 679, 0, 311,
	680, 312, 681, 0, 682, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 683, 684, 685, 0, 320,
	321, 686, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 687, 688, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 689, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 690, 691, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 692, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 693, 694, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 695, 0, 696, 408,
	0, 409, 410, 411, 412, 413, 414, 3663, 698, 699,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 700, 701, 0, 702, 0, 426, 427, 0, 703,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 704, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 705, 501, 706, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 707, 0, 514, 0, 708, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 709, 528, 529, 530, 710, 531, 532,
	533, 711, 534, 712, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 713, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 714,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 715, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 716, 620, 621, 622, 623, 717, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 718, 719, 720,
	721, 0, 650, 0, 641, 642, 643, 644, 722, 645,
	723, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 724, 725, 726, 0,
	666, 665, 667, 668, 669, 727, 670, 671, 285, 0,
	0, 0, 672, 673, 728, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 678, 679, 0,
	311, 680, 312, 681, 0, 682, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 683, 684, 685, 0,
	320, 321, 686, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 687, 688, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 689, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 690, 691, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 692, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 693, 694, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 695, 0, 696,
	408, 0, 409, 410, 411, 412, 413, 414, 3660, 698,
	699, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 700, 701, 0, 702, 0, 426, 427, 0,
	703, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 704, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 705, 501, 706, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 707, 0, 514, 0, 708, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 709, 528, 529, 530, 710, 531,
	532, 533, 711, 534, 712, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 713,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	714, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 715, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 716, 620, 621, 622, 623, 717, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 0, 640, 718, 719,
	720, 721, 0, 650, 0, 641, 642, 643, 644, 722,
	645, 723, 0, 646, 647, 648, 649, 0, 651, 652,
	0, 0, 653, 654, 656, 658, 659, 655, 657, 660,
	0, 661, 0, 0, 662, 663, 664, 724, 725, 726,
	0, 666, 665, 667, 668, 669, 727, 670, 671, 285,
	0, 0, 0, 672, 673, 728, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 678, 679,
	0, 311, 680, 312, 681, 0, 682, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 683, 684, 685,
	0, 320, 321, 686, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 687, 688, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 689, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 690, 691, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 692,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 693, 694, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 695, 0,
	696, 408, 0, 409, 410, 411, 412, 413, 414, 3261,
	698, 699, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 700, 701, 0, 702, 0, 426, 427,
	0, 703, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 704, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 705, 501, 706, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 707, 0, 514, 0, 708,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 709, 528, 529, 530, 710,
	531, 532, 533, 711, 534, 712, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	713, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 714, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 715,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 716, 620, 621, 622, 623, 717, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 718,
	719, 720, 721, 0, 650, 0, 641, 642, 643, 644,
	722, 645, 723, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 724, 725,
	726, 0, 666, 665, 667, 668, 669, 727, 670, 671,
	285, 0, 0, 0, 672, 673, 728, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 678,
	679, 0, 311, 680, 312, 681, 0, 682, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 683, 684,
	685, 0, 320, 321, 686, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 687, 688, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 689, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 690, 691, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	692, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 693, 694, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 695,
	0, 696, 408, 0, 409, 410, 411, 412, 413, 414,
	697, 698, 699, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 700, 701, 0, 702, 0, 426,
	427, 0, 703, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 704, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 705, 501, 706,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 707, 0, 514, 0,
	708, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 709, 528, 529, 530,
	710, 531, 532, 533, 711, 534, 712, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 713, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 714, 577, 0, 578, 579, 801, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	715, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 716, 620, 621, 622, 623, 717,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	718, 719, 720, 721, 0, 650, 0, 641, 642, 643,
	644, 722, 645, 723, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 724,
	725, 726, 0, 666, 665, 667, 668, 669, 727, 670,
	671, 285, 0, 0, 0, 672, 673, 728, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 677, 0, 2468, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	678, 679, 0, 311, 680, 312, 681, 0, 682, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 683,
	684, 685, 0, 320, 321, 686, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 687, 688, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 689, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 690, 691,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 692, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 693, 694, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	695, 0, 696, 408, 0, 409, 410, 411, 412, 413,
	414, 697, 698, 699, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 700, 701, 0, 702, 0,
	426, 427, 0, 703, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 704, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 705, 501,
	706, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 707, 0, 514,
	0, 708, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 709, 528, 529,
	530, 710, 531, 532, 533, 711, 534, 712, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 713, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 714, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 0, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 715, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 716, 620, 621, 622, 623,
	717, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 0,
	640, 718, 719, 720, 721, 0, 650, 0, 641, 642,
	643, 644, 722, 645, 723, 0, 646, 647, 648, 649,
	0, 651, 652, 0, 0, 653, 654, 656, 658, 659,
	655, 657, 660, 0, 661, 0, 0, 662, 663, 664,
	724, 725, 726, 0, 666, 665, 667, 668, 669, 727,
	670, 671, 285, 0, 0, 0, 672, 673, 728, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 678, 679, 0, 311, 680, 312, 681, 0, 682,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	683, 684, 685, 0, 320, 321, 686, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 687, 688, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 689, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 690,
	691, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 692, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 693, 694,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 695, 0, 696, 408, 0, 409, 410, 411, 412,
	413, 414, 1372, 698, 699, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 700, 701, 0, 702,
	0, 426, 427, 0, 703, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 704, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 705,
	501, 706, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 707, 0,
	514, 0, 708, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 709, 528,
	529, 530, 710, 531, 532, 533, 711, 534, 712, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 713, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 714, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 715, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 716, 620, 621, 622,
	623, 717, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 640, 718, 719, 720, 721, 0, 650, 0, 641,
	642, 643, 644, 722, 645, 723, 0, 646, 647, 648,
	649, 0, 651, 652, 0, 0, 653, 654, 656, 658,
	659, 655, 657, 660, 0, 661, 0, 0, 662, 663,
	664, 724, 725, 726, 0, 666, 665, 667, 668, 669,
	727, 670, 671, 285, 0, 0, 0, 672, 673, 728,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 678, 679, 0, 311, 680, 312, 681, 0,
	682, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 683, 684, 685, 0, 320, 321, 686, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 687, 688,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 689, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	690, 691, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 692, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 693,
	694, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 695, 0, 696, 408, 0, 409, 410, 411,
	412, 413, 414, 697, 698, 699, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 700, 701, 0,
	702, 0, 426, 427, 0, 703, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 704, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	705, 501, 706, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 707,
	0, 514, 0, 708, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 709,
	528, 529, 530, 710, 531, 532, 533, 711, 534, 712,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 713, 547, 548, 1301, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 714, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 715, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 716, 620, 621,
	622, 623, 717, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 718, 719, 720, 721, 0, 650, 0,
	641, 642, 643, 644, 722, 645, 723, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 724, 725, 726, 0, 666, 665, 667, 668,
	669, 727, 670, 671, 285, 0, 0, 0, 672, 673,
	728, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 678, 679, 0, 311, 680, 312, 681,
	0, 682, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 683, 684, 685, 0, 320, 321, 686, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 687,
	688, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 689,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 690, 691, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 692, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	693, 694, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 695, 0, 696, 0, 0, 409, 410,
	411, 412, 413, 414, 697, 698, 699, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 700, 701,
	0, 702, 0, 426, 427, 0, 703, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 704, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 705, 501, 706, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	707, 0, 514, 0, 708, 515, 516, 508, 517, 518,
	0, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	709, 528, 529, 530, 710, 531, 532, 533, 711, 534,
	712, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 0, 545, 546, 713, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 714, 0, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 715, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 716, 620,
	621, 622, 623, 717, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 0, 640, 718, 719, 720, 721, 0, 650,
	0, 641, 642, 643, 644, 722, 645, 723, 0, 646,
	647, 648, 649, 0, 651, 652, 0, 0, 653, 654,
	656, 658, 659, 655, 657, 660, 0, 661, 0, 0,
	662, 663, 664, 724, 725, 726, 0, 666, 665, 667,
	668, 669, 727, 670, 671, 1706, 0, 1417, 0, 672,
	673, 728, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 0, 311,
	0, 312, 0, 0, 0, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 0, 0, 0, 0, 320,
	321, 0, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 1419, 348, 349, 350, 351, 352, 0,
	353, 355, 0, 0, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 0, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 0, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	0, 409, 410, 411, 412, 413, 414, 1705, 0, 0,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 0, 0, 0, 0, 0, 426, 427, 0, 0,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 0, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 0, 501, 0, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 0, 0, 514, 0, 0, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 0, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 0, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 0,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 1420, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 0, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 0, 620, 621, 622, 623, 0, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 0, 0, 0,
	0, 0, 650, 0, 641, 642, 643, 644, 0, 645,
	0, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 0, 0, 0, 0,
	666, 665, 667, 668, 669, 0, 670, 671, 1627, 0,
	1417, 0, 672, 673, 0, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 0, 311, 0, 312, 0, 0, 0, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 0, 0,
	0, 0, 320, 321, 0, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 1419, 348, 349, 350,
	351, 352, 0, 353, 355, 0, 0, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 0, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 0, 0, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	0, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 0, 409, 410, 411, 412, 413, 414,
	1626, 0, 0, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 0, 0, 0, 0, 0, 426,
	427, 0, 0, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 0, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 0, 501, 0,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 0, 0, 514, 0,
	0, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 0, 528, 529, 530,
	0, 531, 532, 533, 0, 534, 0, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 0, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 0, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1420, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 0, 620, 621, 622, 623, 0,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 0, 640,
	0, 0, 0, 0, 0, 650, 0, 641, 642, 643,
	644, 0, 645, 0, 0, 646, 647, 648, 649, 0,
	651, 652, 0, 0, 653, 654, 656, 658, 659, 655,
	657, 660, 0, 661, 0, 0, 662, 663, 664, 0,
	0, 0, 0, 666, 665, 667, 668, 669, 0, 670,
	671, 1415, 0, 1417, 0, 672, 673, 0, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 0, 311, 0, 312, 0, 0,
	0, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 0, 0, 0, 0, 320, 321, 0, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 1419,
	348, 349, 350, 351, 352, 0, 353, 355, 0, 0,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 0, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 0, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 0, 409, 410, 411,
	412, 413, 414, 1414, 0, 0, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 0, 0, 0,
	0, 0, 426, 427, 0, 0, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 0, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	0, 501, 0, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 0,
	0, 514, 0, 0, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 0,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 0,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 0, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 0, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 1420, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 0, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 0, 620, 621,
	622, 623, 0, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 640, 0, 0, 0, 0, 0, 650, 0,
	641, 642, 643, 644, 0, 645, 0, 0, 646, 647,
	648, 649, 0, 651, 652, 0, 0, 653, 654, 656,
	658, 659, 655, 657, 660, 0, 661, 0, 0, 662,
	663, 664, 0, 0, 0, 0, 666, 665, 667, 668,
	669, 0, 670, 671, 2222, 0, 1417, 0, 672, 673,
	0, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 0, 311, 0,
	312, 0, 0, 0, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 0, 0, 0, 0, 320, 321,
	0, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 1419, 348, 349, 350, 351, 352, 0, 353,
	355, 0, 0, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 0, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 0, 0, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 0, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 0,
	409, 410, 411, 412, 413, 414, 0, 0, 0, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	0, 0, 0, 0, 0, 426, 427, 0, 0, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	0, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 0, 501, 0, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 0, 0, 514, 0, 0, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 0, 528, 529, 530, 0, 531, 532, 533,
	0, 534, 0, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 0, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 0, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1420, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	0, 620, 621, 622, 623, 0, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 0, 640, 0, 0, 0, 0,
	0, 650, 0, 641, 642, 643, 644, 0, 645, 0,
	0, 646, 647, 648, 649, 0, 651, 652, 0, 0,
	653, 654, 656, 658, 659, 655, 657, 660, 0, 661,
	0, 0, 662, 663, 664, 0, 0, 0, 0, 666,
	665, 667, 668, 669, 0, 670, 671, 2189, 0, 1417,
	0, 672, 673, 0, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 0, 0, 0,
	0, 320, 321, 0, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 1419, 348, 349, 350, 351,
	352, 0, 353, 355, 0, 0, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 0, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 0,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 0, 409, 410, 411, 412, 413, 414, 0,
	0, 0, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 0, 0, 0, 0, 0, 426, 427,
	0, 0, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 0, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 0, 501, 0, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 0, 0, 514, 0, 0,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 0, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	0, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 0, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 1420, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 0,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 0, 620, 621, 622, 623, 0, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 0, 640, 0,
	0, 0, 0, 0, 650, 0, 641, 642, 643, 644,
	0, 645, 0, 0, 646, 647, 648, 649, 0, 651,
	652, 0, 0, 653, 654, 656, 658, 659, 655, 657,
	660, 0, 661, 0, 0, 662, 663, 664, 0, 0,
	0, 0, 666, 665, 667, 668, 669, 1417, 670, 671,
	0, 0, 0, 0, 672, 673, 0, 674, 675, 676,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 0, 311,
	0, 312, 0, 0, 0, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 0, 0, 0, 0, 320,
	321, 0, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 1419, 348, 349, 350, 351, 352, 0,
	353, 355, 0, 0, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 0, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 0, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	0, 409, 410, 411, 412, 413, 414, 0, 0, 0,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 0, 0, 0, 0, 0, 426, 427, 0, 0,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 0, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 0, 501, 0, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 0, 0, 514, 0, 0, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 0, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 0, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 0, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 0,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 1420, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 0, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 0, 620, 621, 622, 623, 0, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 0, 640, 0, 0, 0,
	0, 0, 650, 0, 641, 642, 643, 644, 0, 645,
	0, 0, 646, 647, 648, 649, 0, 651, 652, 0,
	0, 653, 654, 656, 658, 659, 655, 657, 660, 0,
	661, 0, 0, 662, 663, 664, 0, 0, 0, 0,
	666, 665, 667, 668, 669, 0, 670, 671, 0, 0,
	0, 0, 672, 673, 0, 674, 675, 676, 1922, 1923,
	0, 1955, 1956, 1957, 1966, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1953, 0, 0, 0, 0, 0, 1922, 1923,
	1925, 1955, 1956, 1957, 1966, 1967, 1968, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1953, 0, 0, 0, 0, 1978, 0, 0,
	1925, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 1978, 0, 0,
	0, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 1948, 1949, 1950, 0, 0,
	0, 0, 0, 0, 1930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 1948, 1949, 1950, 0, 0,
	0, 0, 0, 0, 1930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 1952, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 1970, 1963, 0, 0, 1973, 0,
	0, 1939, 1940, 0, 0, 1952, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 1969, 0, 1970, 0, 0, 0, 0, 0,
	0, 1939, 1940, 0, 1945, 0, 0, 1922, 1923, 0,
	1955, 1956, 1957, 1966, 1967, 1968, 0, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1953, 0, 0, 1945, 0, 0, 0, 0, 1925,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 0, 0,
	0, 0, 0, 1960, 0, 1924, 0, 0, 0, 0,
	0, 0, 1971, 0, 1975, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 0, 0, 0, 0,
	0, 0, 1951, 1947, 1948, 1949, 1950, 0, 0, 0,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 0, 1946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1922, 1923, 0, 1955, 1956, 1957, 1966,
	1967, 1968, 0, 1964, 1963, 0, 1977, 1973, 0, 0,
	0, 0, 0, 0, 1952, 1954, 1959, 1953, 0, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 0, 0,
	0, 1969, 0, 1970, 0, 1972, 1977, 0, 0, 0,
	1939, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 0, 0, 0, 0, 1961, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 0, 0, 0, 0, 0, 0,
	0, 1941, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1936, 1937, 1943, 1965, 1942, 1938, 0, 1935,
	1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 2765, 0, 0,
	0, 1971, 1936, 1937, 1943, 1965, 1942, 1938, 0, 1935,
	1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0,
	0, 0, 1960, 4954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 1947,
	1948, 1949, 1950, 0, 0, 0, 0, 0, 0, 1930,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1922,
	1923, 0, 1955, 1956, 1957, 1966, 1967, 1968, 0, 0,
	1963, 1951, 0, 1973, 0, 0, 0, 0, 0, 0,
	1952, 1954, 1959, 1953, 0, 0, 0, 0, 0, 0,
	0, 1925, 0, 0, 1946, 0, 0, 1969, 0, 1970,
	0, 1972, 0, 0, 0, 0, 1939, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	0, 0, 1964, 0, 1961, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 1945,
	0, 0, 0, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 1947, 1948, 1949, 1950, 0,
	0, 1962, 0, 0, 0, 1930, 0, 0, 0, 0,
	0, 1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933,
	1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0,
	0, 0, 4857, 0, 0, 1922, 1923, 0, 1955, 1956,
	1957, 1966, 1967, 1968, 0, 0, 1963, 1951, 0, 1973,
	0, 0, 0, 0, 0, 0, 1952, 1954, 1959, 1953,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 0,
	1946, 0, 0, 1969, 0, 1970, 0, 1972, 0, 0,
	0, 0, 1939, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 0, 0, 1964, 0,
	1961, 0, 0, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 0, 0, 0, 0,
	0, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 1947, 1948, 1949, 1950, 0, 0, 1962, 0, 0,
	0, 1930, 0, 0, 0, 0, 0, 1936, 1937, 1943,
	1965, 1942, 1938, 0, 1935, 1933, 1934, 1926, 1927, 1928,
	1929, 1931, 1932, 0, 0, 0, 0, 0, 4809, 0,
	0, 1922, 1923, 0, 1955, 1956, 1957, 1966, 1967, 1968,
	0, 0, 1963, 1951, 0, 1973, 0, 0, 0, 0,
	0, 0, 1952, 1954, 1959, 1953, 0, 0, 0, 0,
	0, 0, 0, 1925, 0, 0, 1946, 0, 0, 1969,
	0, 1970, 0, 1972, 0, 0, 0, 0, 1939, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1978, 0, 0, 0, 1964, 0, 1961, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 0, 0, 0, 0, 0, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 1947, 1948, 1949,
	1950, 0, 0, 1962, 0, 0, 0, 1930, 0, 0,
	0, 0, 0, 1936, 1937, 1943, 1965, 1942, 1938, 0,
	1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0,
	0, 0, 0, 0, 4808, 0, 0, 1922, 1923, 0,
	1955, 1956, 1957, 1966, 1967, 1968, 0, 0, 1963, 1951,
	0, 1973, 0, 0, 0, 0, 0, 0, 1952, 1954,
	1959, 1953, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 1946, 0, 0, 1969, 0, 1970, 0, 1972,
	0, 0, 0, 0, 1939, 1940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 0, 0,
	1964, 0, 1961, 0, 0, 1924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 1945, 0, 0,
	0, 0, 0, 0, 0, 1941, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 1947, 1948, 1949, 1950, 0, 0, 1962,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 1936,
	1937, 1943, 1965, 1942, 1938, 0, 1935, 1933, 1934, 1926,
	1927, 1928, 1929, 1931, 1932, 0, 0, 0, 0, 0,
	4618, 0, 0, 1922, 1923, 0, 1955, 1956, 1957, 1966,
	1967, 1968, 0, 0, 1963, 1951, 0, 1973, 0, 0,
	0, 0, 0, 0, 1952, 1954, 1959, 1953, 0, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 1946, 0,
	0, 1969, 0, 1970, 0, 1972, 0, 0, 0, 0,
	1939, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 0, 0, 1964, 0, 1961, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 0, 0, 0, 0, 0, 0,
	0, 1941, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 1947,
	1948, 1949, 1950, 0, 0, 1962, 0, 0, 0, 1930,
	0, 0, 0, 0, 0, 1936, 1937, 1943, 1965, 1942,
	1938, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931,
	1932, 0, 0, 0, 0, 0, 4444, 0, 0, 1922,
	1923, 0, 1955, 1956, 1957, 1966, 1967, 1968, 0, 0,
	1963, 1951, 0, 1973, 0, 0, 0, 0, 0, 0,
	1952, 1954, 1959, 1953, 0, 0, 0, 0, 0, 0,
	0, 1925, 0, 0, 1946, 0, 0, 1969, 0, 1970,
	0, 1972, 0, 0, 0, 0, 1939, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	0, 0, 1964, 0, 1961, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 1945,
	0, 0, 0, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 1947, 1948, 1949, 1950, 0,
	0, 1962, 0, 0, 0, 1930, 0, 0, 0, 0,
	0, 1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933,
	1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0,
	0, 0, 4358, 0, 0, 1922, 1923, 0, 1955, 1956,
	1957, 1966, 1967, 1968, 0, 0, 1963, 1951, 0, 1973,
	0, 0, 0, 0, 0, 0, 1952, 1954, 1959, 1953,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 0,
	1946, 0, 0, 1969, 0, 1970, 0, 1972, 0, 0,
	0, 0, 1939, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 0, 0, 1964, 0,
	1961, 0, 0, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 0, 0, 0, 0,
	0, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 1947, 1948, 1949, 1950, 0, 0, 1962, 0, 0,
	0, 1930, 0, 0, 0, 0, 0, 1936, 1937, 1943,
	1965, 1942, 1938, 0, 1935, 1933, 1934, 1926, 1927, 1928,
	1929, 1931, 1932, 0, 0, 0, 0, 0, 4357, 0,
	0, 1922, 1923, 0, 1955, 1956, 1957, 1966, 1967, 1968,
	0, 0, 1963, 1951, 0, 1973, 0, 0, 0, 0,
	0, 0, 1952, 1954, 1959, 1953, 0, 0, 0, 0,
	0, 0, 0, 1925, 0, 0, 1946, 0, 0, 1969,
	0, 1970, 0, 1972, 0, 0, 0, 0, 1939, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1978, 0, 0, 0, 1964, 0, 1961, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 0, 0, 0, 0, 0, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 1947, 1948, 1949,
	1950, 0, 0, 1962, 0, 0, 0, 1930, 0, 0,
	0, 0, 0, 1936, 1937, 1943, 1965, 1942, 1938, 0,
	1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0,
	0, 0, 0, 0, 4356, 0, 0, 1922, 1923, 0,
	1955, 1956, 1957, 1966, 1967, 1968, 0, 0, 1963, 1951,
	0, 1973, 0, 0, 0, 0, 0, 0, 1952, 1954,
	1959, 1953, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 1946, 0, 0, 1969, 0, 1970, 0, 1972,
	0, 0, 0, 0, 1939, 1940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 0, 0,
	1964, 0, 1961, 0, 0, 1924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 1945, 0, 0,
	0, 0, 0, 0, 0, 1941, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 1947, 1948, 1949, 1950, 0, 0, 1962,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 1936,
	1937, 1943, 1965, 1942, 1938, 0, 1935, 1933, 1934, 1926,
	1927, 1928, 1929, 1931, 1932, 0, 0, 0, 0, 0,
	3985, 0, 0, 1922, 1923, 0, 1955, 1956, 1957, 1966,
	1967, 1968, 0, 0, 1963, 1951, 0, 1973, 0, 0,
	0, 0, 0, 0, 1952, 1954, 1959, 1953, 0, 0,
	0, 0, 0, 0, 0, 1925, 0, 0, 1946, 0,
	0, 1969, 0, 1970, 0, 1972, 0, 0, 0, 0,
	1939, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 0, 0, 1964, 0, 1961, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 0, 0, 0, 0, 0, 0,
	0, 1941, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 1947,
	1948, 1949, 1950, 0, 0, 1962, 0, 0, 0, 1930,
	0, 0, 0, 0, 0, 1936, 1937, 1943, 1965, 1942,
	1938, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931,
	1932, 0, 0, 0, 0, 0, 3462, 0, 0, 1922,
	1923, 0, 1955, 1956, 1957, 1966, 1967, 1968, 0, 0,
	1963, 1951, 0, 1973, 0, 0, 0, 0, 0, 0,
	1952, 1954, 1959, 1953, 0, 0, 0, 0, 0, 0,
	0, 1925, 0, 0, 1946, 0, 0, 1969, 0, 1970,
	0, 1972, 0, 0, 0, 0, 1939, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	0, 0, 1964, 0, 1961, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 1945,
	0, 0, 0, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 1947, 1948, 1949, 1950, 0,
	0, 1962, 0, 0, 0, 1930, 0, 0, 0, 0,
	0, 1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933,
	1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0,
	0, 0, 3461, 0, 0, 1922, 1923, 0, 1955, 1956,
	1957, 1966, 1967, 1968, 0, 0, 1963, 1951, 0, 1973,
	0, 0, 0, 0, 0, 0, 1952, 1954, 1959, 1953,
	0, 0, 0, 0, 0, 0, 0, 1925, 0, 0,
	1946, 0, 0, 1969, 0, 1970, 0, 1972, 0, 0,
	0, 0, 1939, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 0, 0, 1964, 0,
	1961, 0, 0, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 0, 0, 0, 0,
	0, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 1947, 1948, 1949, 1950, 0, 0, 1962, 0, 0,
	0, 1930, 0, 0, 0, 0, 0, 1936, 1937, 1943,
	1965, 1942, 1938, 0, 1935, 1933, 1934, 1926, 1927, 1928,
	1929, 1931, 1932, 0, 0, 0, 0, 0, 3460, 0,
	0, 0, 0, 1922, 1923, 0, 1955, 1956, 1957, 1966,
	1967, 1968, 1963, 1951, 0, 1973, 0, 2368, 0, 0,
	0, 0, 1952, 1954, 0, 0, 1959, 1953, 0, 0,
	0, 0, 0, 0, 0, 1925, 1946, 0, 0, 1969,
	0, 1970, 0, 0, 0, 1972, 0, 0, 1939, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 1964, 0, 1961, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 1941, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 1947,
	1948, 1949, 1950, 1962, 0, 0, 0, 0, 0, 1930,
	0, 0, 0, 1936, 1937, 1943, 1965, 1942, 1938, 0,
	1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0,
	0, 0, 0, 0, 3459, 0, 0, 0, 0, 1922,
	1923, 0, 1955, 1956, 1957, 1966, 1967, 1968, 0, 1951,
	1963, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	1952, 1954, 1959, 1953, 0, 0, 0, 0, 0, 0,
	0, 1925, 1946, 0, 0, 0, 0, 1969, 0, 1970,
	0, 1972, 0, 0, 0, 0, 1939, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	1964, 0, 0, 0, 1961, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 1945,
	0, 0, 2301, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 2299, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 1947, 1948, 1949, 1950, 1962,
	0, 0, 0, 0, 0, 1930, 0, 0, 0, 1936,
	1937, 1943, 1965, 1942, 1938, 0, 1935, 1933, 1934, 1926,
	1927, 1928, 1929, 1931, 1932, 0, 0, 0, 3424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 1951, 0, 1973,
	0, 0, 0, 0, 0, 0, 1952, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 1969, 0, 1970, 0, 0, 0, 0,
	0, 0, 1939, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 2370, 0, 0, 0, 0, 0, 1964, 0,
	1961, 0, 0, 0, 0, 0, 1922, 1923, 0, 1955,
	1956, 1957, 1966, 1967, 1968, 1945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1953, 1977, 0, 0, 0, 0, 0, 0, 1925, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 1978, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 2371, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1936, 1937, 1943,
	1965, 1942, 1938, 0, 1935, 1933, 1934, 1926, 1927, 1928,
	1929, 1931, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2300, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 1948, 1949, 1950, 1946, 0, 0, 0,
	0, 0, 1930, 5108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 1922, 1923, 0, 1955, 1956, 1957, 1966, 1967,
	1968, 0, 0, 1963, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 1952, 1954, 1959, 1953, 1977, 0, 0,
	0, 0, 0, 0, 1925, 0, 0, 0, 2298, 0,
	1969, 0, 1970, 0, 1972, 0, 0, 0, 0, 1939,
	1940, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 0, 0, 1961, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 0, 0, 0, 0, 0, 0, 0,
	1941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1936, 1937, 1943, 1965, 1942, 1938, 0,
	1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 0, 0, 0, 1947, 1948,
	1949, 1950, 0, 0, 0, 0, 0, 0, 1930, 0,
	3524, 0, 0, 0, 5107, 0, 3523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1922, 1923, 0, 1955, 1956, 1957, 1966, 1967, 1968, 1963,
	1951, 0, 1973, 0, 0, 0, 0, 0, 0, 1952,
	1954, 0, 0, 1959, 1953, 0, 0, 0, 0, 3395,
	0, 0, 1925, 1946, 0, 0, 1969, 0, 1970, 0,
	0, 0, 1972, 0, 0, 1939, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 1964, 0, 1961, 0, 0, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 1941, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 3396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 0, 1947, 1948, 1949, 1950,
	1962, 0, 0, 0, 0, 0, 1930, 0, 0, 0,
	1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933, 1934,
	1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0, 2913,
	0, 0, 0, 0, 0, 0, 1922, 1923, 0, 1955,
	1956, 1957, 1966, 1967, 1968, 0, 1951, 1963, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 1952, 1954, 1959,
	1953, 0, 0, 0, 2912, 0, 0, 0, 1925, 1946,
	0, 0, 0, 0, 1969, 0, 1970, 0, 1972, 0,
	0, 0, 0, 1939, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 1964, 0, 0,
	0, 1961, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 1945, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 1947, 1948, 1949, 1950, 1962, 0, 0, 0,
	0, 0, 1930, 0, 0, 0, 1936, 1937, 1943, 1965,
	1942, 1938, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929,
	1931, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1922, 1923, 0, 1955, 1956, 1957, 1966, 1967,
	1968, 0, 0, 1963, 1951, 0, 1973, 0, 0, 0,
	0, 0, 0, 1952, 1954, 1959, 1953, 0, 0, 0,
	0, 0, 0, 0, 1925, 0, 0, 1946, 0, 0,
	1969, 0, 1970, 0, 1972, 0, 0, 0, 0, 1939,
	1940, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 1964, 0, 1961, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 0, 0, 0, 0, 0, 0, 0,
	1941, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 0, 0, 0, 1947, 1948,
	1949, 1950, 0, 0, 1962, 0, 0, 0, 1930, 0,
	4713, 0, 0, 0, 1936, 1937, 1943, 1965, 1942, 1938,
	0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 1922, 1923,
	0, 1955, 1956, 1957, 1966, 1967, 1968, 0, 0, 1963,
	1951, 0, 1973, 0, 0, 0, 0, 0, 0, 1952,
	1954, 1959, 1953, 0, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 1946, 0, 0, 1969, 0, 1970, 0,
	1972, 0, 0, 0, 0, 1939, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1978, 0, 0,
	0, 1964, 0, 1961, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 1945, 0,
	0, 0, 0, 0, 0, 0, 1941, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	0, 0, 0, 0, 1947, 1948, 1949, 1950, 0, 0,
	1962, 0, 0, 0, 1930, 0, 0, 0, 0, 0,
	1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933, 1934,
	1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 1922, 1923, 0, 1955, 1956, 1957,
	1966, 1967, 1968, 0, 0, 1963, 1951, 0, 1973, 0,
	0, 0, 0, 0, 0, 1952, 1954, 1959, 1953, 0,
	0, 0, 0, 0, 0, 0, 1925, 0, 0, 1946,
	0, 0, 1969, 0, 1970, 0, 1972, 0, 0, 0,
	0, 1939, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1978, 0, 0, 0, 1964, 0, 1961,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 1945, 0, 0, 0, 0, 0,
	0, 0, 1941, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1975, 0, 0, 0, 0, 0,
	1947, 1948, 1949, 1950, 0, 0, 1962, 0, 0, 0,
	1930, 0, 0, 0, 0, 0, 1936, 1937, 1943, 1965,
	1942, 1938, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929,
	1931, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	1922, 1923, 0, 1955, 1956, 1957, 1966, 1967, 1968, 0,
	0, 1963, 1951, 0, 1973, 0, 0, 0, 0, 0,
	0, 1952, 1954, 1959, 1953, 0, 0, 0, 0, 0,
	0, 0, 1925, 0, 0, 1946, 0, 0, 1969, 0,
	1970, 0, 1972, 0, 0, 0, 0, 1939, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 0, 0, 1964, 0, 1961, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	1945, 0, 0, 0, 0, 0, 0, 0, 1941, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1975, 0, 0, 0, 0, 0, 1947, 1948, 1949, 1950,
	0, 0, 1962, 0, 0, 0, 1930, 0, 0, 0,
	0, 0, 1936, 1937, 1943, 1965, 1942, 1938, 0, 1935,
	1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 1922, 1923, 0, 1955,
	1956, 1957, 1966, 1967, 1968, 0, 0, 1963, 1951, 0,
	1973, 0, 0, 0, 0, 0, 0, 1952, 1954, 1959,
	1953, 0, 0, 0, 0, 0, 0, 0, 1925, 0,
	0, 1946, 0, 0, 1969, 0, 1970, 0, 1972, 0,
	0, 0, 0, 1939, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 0, 0, 1964,
	0, 1961, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 1945, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 1947, 1948, 1949, 1950, 0, 0, 1962, 0,
	0, 0, 1930, 0, 4178, 0, 0, 0, 1936, 1937,
	1943, 1965, 1942, 1938, 0, 1935, 1933, 1934, 1926, 1927,
	1928, 1929, 1931, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 1922, 1923, 0, 1955, 1956, 1957, 1966, 1967,
	1968, 0, 0, 1963, 1951, 0, 1973, 0, 0, 0,
	0, 0, 0, 1952, 1954, 1959, 1953, 0, 0, 0,
	0, 0, 0, 0, 1925, 0, 0, 1946, 0, 0,
	1969, 0, 1970, 0, 1972, 0, 0, 0, 0, 1939,
	1940, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 1964, 0, 1961, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 0, 0, 0, 0, 0, 0, 0,
	1941, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 0, 0, 0, 1947, 1948,
	1949, 1950, 0, 0, 1962, 0, 0, 0, 1930, 0,
	0, 0, 0, 0, 1936, 1937, 1943, 1965, 1942, 1938,
	0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	1951, 0, 1973, 0, 0, 0, 0, 0, 0, 1952,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1946, 0, 0, 1969, 0, 1970, 0,
	0, 0, 0, 0, 0, 1939, 1940, 0, 0, 0,
	0, 1922, 1923, 0, 1955, 1956, 1957, 1966, 1967, 1968,
	0, 1964, 0, 1961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1953, 0, 0, 1945, 0,
	0, 1922, 1923, 1925, 1955, 1956, 1957, 1966, 1967, 1968,
	0, 0, 0, 1972, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1953, 0, 0, 0, 3525,
	1978, 0, 0, 1925, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 1972, 0, 0, 1971, 0, 0, 0,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 1941,
	1978, 0, 0, 0, 0, 0, 0, 1960, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 1941,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933, 1934,
	1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1951, 1947, 1948, 1949,
	1950, 0, 0, 0, 0, 0, 0, 1930, 0, 0,
	0, 0, 0, 0, 0, 3530, 0, 0, 0, 1946,
	0, 0, 0, 0, 0, 0, 0, 1947, 1948, 1949,
	1950, 0, 0, 0, 0, 0, 0, 1930, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 1963, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 1952, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 1970, 1963, 0,
	1977, 1973, 0, 0, 1939, 1940, 0, 0, 1952, 1954,
	0, 0, 0, 3966, 0, 0, 0, 0, 0, 0,
	0, 0, 1961, 0, 0, 1969, 0, 1970, 0, 0,
	0, 0, 0, 0, 1939, 1940, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 1936, 1937, 1943, 1965,
	1942, 1938, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929,
	1931, 1932, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 0,
	0, 0, 0, 0, 0, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 1946, 1922,
	1923, 0, 1955, 1956, 1957, 1966, 1967, 1968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1953, 0, 0, 1964, 0, 0, 1977,
	0, 1925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 1977,
	0, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1936, 1937, 1943, 1965, 1942,
	1938, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931,
	1932, 0, 0, 0, 0, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1936, 1937, 1943, 1965, 1942,
	1938, 0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931,
	1932, 0, 0, 0, 0, 1947, 1948, 1949, 1950, 0,
	0, 0, 0, 0, 0, 1930, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1922, 1923, 0, 1955, 1956, 1957, 1966, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 1953, 0, 1963, 0, 3463, 1973,
	0, 0, 1925, 0, 0, 0, 1952, 1954, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 1970, 0, 0, 0, 1978,
	0, 0, 1939, 1940, 0, 0, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	1961, 0, 0, 0, 0, 0, 0, 0, 1941, 0,
	0, 0, 0, 0, 0, 1945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 1947, 1948, 1949, 1950,
	0, 0, 0, 0, 0, 1975, 1930, 0, 0, 0,
	0, 0, 0, 0, 0, 3490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1922, 1923, 0, 1955,
	1956, 1957, 1966, 1967, 1968, 0, 0, 1963, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 1952, 1954, 1959,
	1953, 0, 0, 1951, 0, 0, 0, 0, 1925, 0,
	0, 0, 0, 0, 1969, 0, 1970, 0, 1972, 0,
	0, 0, 0, 1939, 1940, 0, 1946, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 0, 0, 0,
	0, 1961, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 1944, 1945, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 1947, 1948, 1949, 1950, 0, 0, 0, 0,
	0, 0, 1930, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1936, 1937, 1943, 1965, 1942, 1938, 0,
	1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932, 0,
	0, 0, 0, 1963, 1951, 0, 1973, 0, 0, 0,
	0, 0, 0, 1952, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1946, 0, 0,
	1969, 0, 1970, 0, 0, 0, 0, 0, 0, 1939,
	1940, 0, 0, 0, 0, 1922, 1923, 0, 1955, 1956,
	1957, 1966, 1967, 1968, 0, 1964, 0, 1961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1953,
	0, 0, 1945, 0, 0, 0, 0, 1925, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 0, 0, 0, 0,
	0, 0, 0, 1924, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 1944, 0, 0, 0, 0, 0,
	0, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1936, 1937, 1943, 1965, 1942, 1938,
	0, 1935, 1933, 1934, 1926, 1927, 1928, 1929, 1931, 1932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1951, 1947, 1948, 1949, 1950, 0, 0, 0, 0, 0,
	0, 1930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1032,
	0, 1083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 1963, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 1952, 1954, 0, 0, 1040, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 1970, 0, 1055, 1977, 1038, 1037, 0, 1939, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 1057, 0,
	0, 0, 0, 0, 1039, 0, 0, 0, 0, 1042,
	0, 1945, 0, 0, 1094, 0, 1067, 0, 0, 0,
	0, 0, 0, 0, 1052, 1053, 0, 0, 0, 0,
	0, 0, 0, 1072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2481, 0, 0, 0, 0, 0, 0,
	1962, 1084, 1044, 0, 0, 0, 0, 0, 1045, 1971,
	1936, 1937, 1943, 1965, 1942, 1938, 0, 1935, 1933, 1934,
	1926, 1927, 1928, 1929, 1931, 1932, 0, 0, 0, 0,
	1960, 1046, 0, 0, 0, 0, 0, 0, 0, 0,
	1081, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1048,
	0, 0, 0, 0, 0, 0, 0, 1036, 0, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1049, 1050, 0,
	0, 0, 1946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1058, 1056, 0, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 1068, 0,
	1964, 1089, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 1080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1085, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1043, 1962,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 1936,
	1937, 1943, 1965, 1942, 1938, 0, 1935, 1933, 1934, 1926,
	1927, 1928, 1929, 1931, 1932, 1041, 0, 0, 0, 1076,
	1077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1086, 1074,
	0, 0, 0, 0, 0, 0, 0, 1092, 1069, 0,
	0, 1061, 1059, 0, 0, 1064, 0, 0, 0, 0,
	0, 1065, 0, 0, 1034, 0, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1078, 0, 1066, 0, 0, 0, 0, 0,
	1063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1090, 0, 0, 0, 0, 0, 0, 0, 1070,
	0, 1071, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1075,
}

var sqlPact = [...]int{
	318, -1000, -1000, -1000, -1000, 226, -1000, -1000, 225, 224,
	222, 221, 220, 219, 218, 217, 215, 214, 211, -1000,
	-1000, 209, 208, 207, -1000, -1000, 206, -1000, -1000, 205,
	-1000, 204, 202, 200, -1000, -1000, 199, -1000, 198, -1000,
	-1000, -1000, -1000, 196, 190, 188, 98667, 98084, 99248, 2503,
	124864, 107394, 2166, 87602, 124281, 87019, 123698, 2375, 11735, 123115,
	2987, 187, -1000, 122532, 185, 183, 182, -1000, 106811, 121949,
	104481, 2089, -1000, 178, 172, -1000, 9866, 76479, 171, 168,
	166, 163, 2423, 160, -1000, 152, 149, -1000, -1000, 148,
	-1000, 11443, 1641, -1000, 147, 146, -1000, 6282, 103898, 144,
	140, 138, 2912, 137, 136, 73569, 134, 133, 129, 2762,
	3114, -1000, -1000, 2252, -1000, -1000, 128, 127, 126, 125,
	120, 119, 118, 117, 116, 113, 111, 110, 109, -1000,
	108, 106, 105, 104, 99, -1000, 89, 84, 83, -1000,
	82, -1000, 81, 79, 78, 77, 68, 67, 59, 56,
	55, 54, 53, 52, 50, 48, 47, 145357, -1000, -1000,
	44, -1000, 2120, 1840, 1839, 1834, 1808, 1805, 1068, 43,
	42, 41, 33, 31, 30, 29, 27, 26, 25, 24,
	19, 12, 11, 10, 9, 7, 5, 2, 1, 176,
	0, -1, -2, -3, -4, -8, -9, 2594, 3789, -1000,
	1887, 1529, 33808, 3244, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 133579, 125445, -11, -76, -12, -1000, 3579, 1084, 61275,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 299, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 508, 2739, 799, -1000, -1000, -1000, 121366, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2501, -54, -1000, 2230,
	-1000, -1000, -1000, -1000, -1000, 798, -1000, 2500, 2451, 295,
	2449, -1000, -1000, -1000, 3662, 2668, 4090, 4089, 4087, 4086,
	4085, 132998, 2028, 4084, 2750, 4083, 4082, 4081, 4080, 4079,
	4078, 4077, -1000, 97501, 1134, 96918, 96335, 3658, 120785, 95752,
	120202, 135909, 51784, 1215, 3661, -1000, -1000, -1000, -1000, -1000,
	-1000, 125445, -1000, 1130, -1000, -1000, 4074, 2237, 794, 106228,
	-1000, -1000, 119619, 1855, -1000, -1000, -1000, 1000, 1279, 36192,
	36192, 36192, 297, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3665, -1000, -1000, -1000, -1000, 125445, 3005, 3005, 1479, 1437,
	1437, 3005, 3005, -1000, -1000, -1000, -1000, -1000, -1000, 4072,
	4071, 4070, 4069, 4068, -1000, -1000, -1000, 86436, 26463, 85853,
	85270, 119036, 51188, 95169, 94586, 4067, 4066, 4065, 50592, 81189,
	58933, 1561, 118453, 135326, 3784, 3779, 1129, 2212, 1591, -1000,
	-1000, -1000, -1000, -1000, -1000, -34, 78222, 3863, 125445, -1000,
	290, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 49996, 1052,
	49400, 991, 48804, 666, 117870, -1000, -1000, -1000, -1000, 80596,
	-1000, 117287, 2667, 4063, 4062, 1252, 4061, 3526, 2011, 4060,
	2045, 1335, 4056, 4053, 4052, 4047, 4045, 4044, 4040, 1667,
	116704, 3243, 1695, 116121, 1869, 134743, 1128, 94003, 99248, 2843,
	115538, 1606, 1605, -1000, -1000, -1000, -1000, 3361, 3086, 3080,
	1394, -1000, -1000, -1000, -1000, 64790, 8925, 8002, -1000, -1000,
	11626, 114955, 67745, 99248, 99248, -1000, -1000, -1000, -1000, -1000,
	-1000, 48208, 613, 47612, 1214, 114372, -1000, -1000, 65381, 3183,
	1188, -1000, -1000, -1000, -1000, -1000, 113789, 47016, 467, 46420,
	1193, 125445, -1000, 3241, 2155, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2497, 1799, 3854, 3000, 80003, 2254,
	1494, 3614, 3360, 3357, 1634, 2184, 3348, 4039, 2820, 3345,
	3344, 3342, 3341, 3338, 1878, 2796, 606, 2792, 33212, 3225,
	1936, 45824, 1859, 1626, 3335, 3333, 3878, 3708, 2175, 2202,
	2198, 2226, 84687, 4038, 4037, 3570, 3295, 3287, 3053, 3283,
	-1000, 3180, 1644, 289, -1000, -1000, -1000, -1000, -1000, -1000,
	1568, -1000, -1000, -1000, -1000, -1000, 89345, -1000, -1000, 1441,
	-1000, -1000, 1441, -1000, -1000, -1000, -1000, -1000, 1549, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1887, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2703, -1000, 2257, -1000, -1000, -1000,
	2734, 3551, 3551, 3551, 3660, 472, 454, -1000, 176, -1000,
	-1000, 145144, -1000, -1000, 52380, 52380, 52380, 52380, 52380, 52380,
	52380, 52380, 2382, -1000, 792, -1000, -1000, 836, -1000, 791,
	701, 635, -1000, -1000, -1000, -1000, -1000, -1000, 789, -1000,
	-1000, -1000, -1000, -1000, -1000, 3828, -1000, 29499, -1000, -1000,
	-1000, 464, 788, 52380, -1000, -1000, 3897, 3896, 1071, -1000,
	286, 1046, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3240, 787, 786, -1000, 784, 783,
	782, 780, 779, -1000, 777, -1000, 775, 772, 768, 767,
	757, 756, 755, 750, -1000, 2258, -1000, -1000, -1000, -1000,
	-1000, -1000, 671, 665, 665, 665, -1000, 1119, -1000, -1000,
	-1000, 357, 664, 317, 663, 662, 661, -1000, 749, 746,
	745, 744, 743, 740, 738, 734, 733, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1117, -1000, -1000, -1000, -1000, 1563,
	-36, 125445, -1000, 508, -36, -1000, -1000, 729, -1000, 37998,
	37998, 37998, -1000, -1000, 2493, 52380, -1000, 2737, -1000, -29,
	-29, 969, 63024, -1000, 60109, 969, 548, 853, 68911, -1000,
	3179, -1000, -1000, 714, 281, -1000, -1000, -1000, -1000, 27054,
	3178, 125445, 125445, 125445, 99248, 99248, 99248, 125445, 4035, 4034,
	3441, 52380, -1000, -1000, 75896, 137653, 99829, -1000, -1000, 3758,
	74150, 75315, 3239, 137653, 3238, 137075, 4033, -1000, -1000, -1000,
	-1000, -1000, 3414, 4032, 4029, 4028, -1000, 125445, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 246, 3413, -1000, -1000, 103315,
	246, 3412, -1000, 246, 3411, -1000, 102734, -1000, -1000, 2415,
	3408, -1000, -1000, 254, 3407, -1000, -1000, -1000, 250, 3406,
	-1000, -1000, 275, -164, 3405, -1000, -1000, -1000, -1000, -1000,
	-1000, 145144, -1000, -1000, -1000, 136492, -1000, 3573, -1000, 125445,
	-1000, 52380, -1000, -1000, 3757, 1780, 3586, 3690, -1000, -1000,
	-47, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2732, 2706,
	1233, 2535, -1000, 3453, 1594, 36192, 3512, -1000, -1000, -1000,
	-1000, -1000, 273, 27054, 3035, -1000, -1000, 125445, -1000, 125445,
	3005, 3005, -1000, -1000, -1000, 3866, 3865, 3005, 3005, 125445,
	125445, -1000, -1000, -1000, -1000, -1000, -1000, 5099, 3403, 1620,
	-1000, 2529, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2277, 3402, -1000, 2242, 3401, 2261, -1000, -1000, 2494,
	-1000, 141618, 1463, -1000, -1000, -1000, -1000, 1905, 3400, -28,
	-1000, -1000, 2287, -1000, -1000, -1000, -1000, 141412, -1000, 3155,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1804,
	-1000, -1000, 2301, 2183, -1000, 1396, 3399, -1000, 2994, 2994,
	93420, 3380, 67154, 65381, 78222, -39, -1000, -1000, -1000, -1000,
	-1000, -175, -1000, 25866, 145144, -1000, -1000, -1000, -1000, 1942,
	145144, 955, -1000, -1000, 3391, -1000, 145144, 953, -1000, -1000,
	3389, -1000, 2795, -1000, 3230, -1000, -1000, 2623, 2622, 1095,
	-1000, 4027, -1000, -1000, 4026, -1000, 4025, 4024, 4020, -1000,
	1889, 2205, 4019, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 92839, 2492, -1000, -1000, 91090, 3227, -1000, 2621, 3687,
	-1000, 92256, 1126, -1000, 1080, 2620, -1000, 102153, 960, 2619,
	-1000, 4018, 3654, 2928, 1080, 2617, -1000, -1000, -1000, -1000,
	-1000, 893, -1000, 71239, -1000, 71239, -1000, 1791, -1000, 132417,
	-29, 99248, 3828, -1000, -75, -1000, -1000, -1000, 1084, -1000,
	64207, -1000, 64207, 105645, 81780, 1062, 3177, 72986, 144885, -1000,
	1093, -1000, -1000, 145144, -1000, -1000, -1000, 2794, -1000, -182,
	2992, -1000, 81780, 66563, 3176, 2768, -1000, 145144, -1000, -1000,
	-1000, -1000, 145144, -1000, -1000, -1000, 81780, 91090, -1000, 113206,
	91673, -1000, -1000, 1631, 2779, -1000, -1000, -1000, 81780, 1414,
	81780, 81780, 81780, -1000, 112623, -1000, -1000, 2248, 1797, 3553,
	2244, 99248, -1000, 2092, -1000, -1000, -1000, 3596, 3379, 125445,
	-1000, -1000, 3226, -1000, 77641, 101572, -1000, 100991, -1000, 100410,
	-1000, 99248, -1000, 99248, -1000, 4014, 4013, 4011, -1000, -1000,
	4010, -1000, 3994, 3581, -1000, 1125, 45228, 145144, 3578, -1000,
	3992, 2181, 3225, 145144, -1000, 3297, 1845, 1836, 125445, -1000,
	-1000, 125445, -1000, 125445, -1000, -1000, -1000, 2517, 1724, -1000,
	-1000, 2729, -1000, -1000, -1000, 1092, -1000, -1000, 99248, 99248,
	99248, 99248, 1311, -1000, 44632, -1000, -1000, 3267, 3990, 1908,
	-1000, 2091, -1000, 3175, 3565, -1000, 1622, 1957, 271, 3900,
	-1000, -1000, 265, -1000, -1000, -47, -1000, 131836, -1000, 2734,
	-1000, 125445, -1000, 2702, 3208, 3214, 1651, 2499, 2860, -1000,
	44036, 2821, 55956, 2528, 176, -1000, -1000, 176, 176, 35000,
	-1000, -1000, 74150, 74150, 27054, 1488, 52380, 52380, 52380, 52380,
	52380, 52380, 52380, 52380, 52380, 52380, 52380, 52380, 52380, 52380,
	52380, 52380, 52380, 52380, 52380, 52380, 52380, 52380, 52380, 52380,
	52380, 52380, 52380, 52380, 52380, 52380, 52380, 52380, 52380, 52380,
	52380, 52380, 2525, 52380, 1547, 52380, 52380, 52380, 52380, 2379,
	-1000, -1000, 2176, 560, 2266, 701, -1000, -1000, -1000, 3819,
	3819, 3819, 1038, 1038, 1038, 8646, 8646, 627, 3989, 836,
	-1000, 52380, -1000, 63, 63607, 52380, 27647, -1000, 454, 10125,
	2769, -1000, 451, 28273, -1000, -1000, -1000, 29499, 635, 43410,
	52380, 1109, 145144, -1000, -1000, 1548, 3843, 25269, 3093, 3045,
	699, 909, 903, 32586, 31960, 31334, 30708, 875, 821, 52380,
	52380, 52380, 52380, 52380, 52380, 52380, 52380, -1000, -1000, 3864,
	-1000, 3843, -1000, -1000, -1000, -1000, 3843, 1464, 1339, 3843,
	-1000, 3843, 3843, 6670, 6670, 42814, 42218, 41622, 56552, 41026,
	52380, 30112, 40430, 39834, -1000, 58340, 125445, -36, 3755, 52380,
	279, -1000, 142515, -1000, 279, 279, 690, -77, 145144, 3034,
	3034, 61858, 2614, 2388, 2388, 2388, -1000, 969, 19858, 969,
	110880, 2416, 969, 969, 269, 324, 447, 59526, 2737, 110880,
	822, 684, -15, -17, -22, -1000, -1000, -24, -25, -1000,
	-1000, 99248, 674, 27647, 27054, 260, 2221, -80, 2826, 2824,
	-1000, 2813, 2812, -1000, 2807, 2491, -1000, -1000, -1000, 1990,
	-83, 1543, 99248, 125445, 1588, 3987, -105, -1000, 8094, -85,
	-1000, 1405, 259, 3843, -1000, -1000, -1000, -1000, -1000, 3985,
	3984, -1000, 1114, 673, 672, 373, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 671, 665, 665, 665, -1000, 357,
	664, 317, 663, 662, 661, -1000, -1000, -1000, -1000, -1000,
	3174, 99248, 125445, 1578, 3983, 88183, -164, 99829, -91, -1000,
	-1000, 125445, -1000, -1000, -1000, 3980, -1000, 99248, -1000, -1000,
	99248, 246, 3388, -1000, 99248, -1000, 99248, 243, 3386, -1000,
	-1000, 125445, -1000, 99248, 99248, -1000, 125445, 125445, 125445, 137653,
	137653, 242, -1000, 99248, 939, -92, 1266, -47, -1000, -1000,
	-1000, -1000, 1441, -1000, 1884, -1000, -1000, -1000, -1000, -1000,
	-1000, 1645, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1071, -1000, -1000, -1000, -1000, 3857, 3841, -37, -1000, -1000,
	27054, -1000, 2065, -1000, -1000, -1000, -1000, 125445, 125445, -1000,
	-1000, 125445, 125445, -1000, -1000, -48, 1790, 607, 1539, -1000,
	84104, 2689, 3580, 3978, 2916, 3535, 1785, -1000, 1716, 659,
	-1000, 3663, 89345, 3707, 3726, 1431, -1000, 3173, -1000, -1000,
	-1000, 999, 1872, 1922, 1538, 1537, 89345, 2242, -1000, 74150,
	-1000, 2858, 3657, 1437, 1484, 1437, 1437, 1453, -1000, 89345,
	1917, 1534, 1517, 1510, -1000, -1000, 2121, 2094, -1000, -1000,
	112042, -1000, 1504, 1491, 3778, 2703, 2346, 866, 2078, -1000,
	1456, 1478, 3172, -1000, -1000, -49, 3704, 3717, 1431, -1000,
	3169, 1468, -1000, -1000, -1000, 3652, 99248, 27054, 1680, 1679,
	1668, 1903, 1434, -38, -1000, 3699, 1775, -1000, 91090, 91090,
	107975, 125445, 3796, 81780, -1000, 2643, -1000, -1000, -1000, 3611,
	3605, -1000, -1000, 1388, 1383, -1000, 1131, 8456, 3477, -1000,
	137653, 1131, 1131, 2170, 3385, 2974, 1806, -1000, 2989, 964,
	2988, -1000, -1000, -1000, 964, -39, 78222, 125445, 255, -1000,
	63, 52380, 52380, 63, 52380, 63, -1000, 3682, 3382, 3376,
	3976, -1000, -1000, -1000, -1000, -1000, 3975, 2095, 2748, -1000,
	-1000, 658, 2604, 3166, 125445, 2886, -41, 99248, -1000, 77060,
	3375, 137653, 2242, 2602, -1000, -1000, 90509, -1000, 3373, 508,
	2597, -1000, 728, 3974, 3364, -1000, 131255, -1000, 3573, 1570,
	3363, 1186, 806, 3754, -1000, 806, 71820, -1000, 125445, -1000,
	-29, 6091, 82942, -93, -98, 446, -1000, 111461, 125445, 125445,
	3500, 2156, 2136, -1000, 1073, 65381, -1000, 65381, -103, -1000,
	-182, 2981, 1691, 65381, -1000, 1062, 1062, 964, -1000, 964,
	-1000, 99248, 3213, -1000, -1000, 81780, 1062, 1062, 1062, -1000,
	-1000, -1000, -1000, 3973, 3971, 3970, 3969, -1000, -1000, 1079,
	99248, 125445, 99248, -1000, -1000, 1698, -1000, 241, -1000, 137653,
	-1000, 137653, 125445, 99248, -1000, 1079, 125445, 1079, 125445, 1079,
	125445, 1079, 1079, -1000, -1000, -1000, -1000, -1000, 63, -1000,
	-1000, 145144, -1000, 52380, -1000, -1000, 1708, 3968, 1800, -1000,
	3210, -1000, 3209, -1000, 22, -1000, -1000, 3851, 2024, -1000,
	3894, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3967,
	145144, -1000, 2043, -1000, -1000, -1000, -1000, 99248, 99248, 99248,
	99248, 125445, 3476, -1000, 125445, 3472, 99248, -1000, 3836, -1000,
	-1000, 89345, -1000, 2702, 3208, -1000, -1000, -1000, -1000, -1000,
	-1000, 1783, 2464, -1000, 2772, -1000, 1754, -1000, -1000, -1000,
	145144, 57148, -1000, -1000, 145144, 1982, -1000, 55360, 54764, -1000,
	-1000, 1885, 99248, 2896, -1000, 2896, -112, -1000, 142309, 2771,
	99248, -1000, -1000, -1000, -1000, -1000, 992, 651, 651, 1460,
	1460, 1460, 1460, 3673, 8014, 393, 5310, 487, 487, 5457,
	5457, 5457, 5457, 5457, 487, 7631, 1038, 1038, 7631, 7631,
	7631, 7631, 7631, 1038, 1038, 1038, 487, 487, 487, 1038,
	8646, 17297, 10711, 52380, 52380, 1381, 2133, 560, 9711, 52380,
	10839, 10839, 10839, 10839, -1000, 2319, -1000, -1000, -1000, -1000,
	3161, 656, 56552, 56552, -1000, -1000, -1000, -1000, 28886, 52380,
	-1000, -1000, -1000, -1000, 39208, -1000, -1000, 141204, -327, 445,
	-1000, 239, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 443, -104, -7, -1000, 52380,
	52380, 52380, 441, -1000, 238, 52380, 125445, -1000, 138237, 818,
	-148, -1000, -109, 1524, -1000, 52380, -1000, -1000, 1376, -1000,
	1371, 1370, 1368, -1000, 655, 432, -1000, 235, -1000, 2380,
	654, 652, 52380, -1000, -1000, -1000, -1000, -1000, 140998, -1000,
	-1000, 140792, -1000, -1000, 140586, -1000, -1000, 140380, -1000, -1000,
	-1000, -1000, -1000, 144679, 18956, 18030, 16899, 9477, 13096, 12389,
	-110, 431, -111, 430, 990, 975, 427, 422, 418, -116,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -117, 416, -1000, 3158, -104, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 415, -1000, 412, -1000, 144488,
	-104, 411, 6193, -1000, 56552, 56552, 56552, 56552, 410, -1000,
	142101, -1000, 144040, 38612, 38612, 38612, 409, 144010, 52380, -104,
	-118, -1000, -119, -1000, -1000, -1000, -1000, 580, -129, 1103,
	37998, 60692, 27054, -1000, 1103, 1103, 52380, -1000, 52380, 2788,
	-1000, -1000, -1000, -1000, 2783, 2479, 3034, 61858, -1000, -1000,
	-1000, -1000, 110880, -1000, 3828, 3074, -1000, 110880, -1000, -1000,
	125445, 508, -1000, 110880, 110880, 27054, 969, -1000, 969, 110880,
	804, -1000, -1000, -1000, -1000, -1000, 408, 70077, -7, 233,
	27054, 1080, -1000, -1000, 2874, 2874, 2874, 2874, 2874, 99248,
	-1000, -1000, 137653, 1366, -42, -106, 2980, -1000, 3794, -1000,
	2264, -1000, 74150, -1000, 835, 1107, 27054, -1000, -1000, -1000,
	650, -1000, 3843, 3843, -1000, 3843, 137653, 3154, 201, 2979,
	-1000, 2490, -40, 195, 137653, 3966, -1000, -1000, 246, -1000,
	99248, 246, 246, -1000, 99248, 99248, 2415, -1000, 254, -1000,
	250, -1000, -1000, -164, -1000, 1091, 36192, -1000, 1441, -1000,
	-1000, 1671, -1000, 2159, -1000, 1315, -1000, -1000, 36192, -1000,
	3503, -1000, 1924, -1000, -1000, -1000, -1000, 3668, 125445, 125445,
	99248, -1000, 109137, 125445, -1000, 2275, 137653, -1000, 2596, 130674,
	2563, 130093, 74150, -1000, -1000, 647, 1022, 2767, 2766, 1181,
	125445, 125445, 2764, 129512, 128931, -1000, 3964, 125445, 2229, 52380,
	109137, 3650, 2460, 2332, 63, 63, -1000, 63, -1000, -1000,
	642, 1439, 99248, 99248, 125445, 137653, 99248, 2147, -1000, -1000,
	-1000, -1000, -1000, 89926, -1000, -1000, 1437, -1000, -1000, -1000,
	1437, 2242, 1984, 125445, 137653, 99248, 137653, 128350, 127769, -1000,
	-1000, 1902, 125445, -1000, -1000, -1000, -1000, 1562, -1000, 866,
	1359, 3141, 52380, 52380, 2309, 63, 63, -1000, 63, 641,
	27054, 2180, -1000, 3233, 125445, 3892, 127188, 3891, 125445, 125445,
	125445, 137653, 3552, 125445, -1000, -1000, -1000, -257, -1000, 931,
	929, -175, -1000, 3796, -1000, 927, 2237, 125445, 137653, -1000,
	126607, 8456, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2278,
	79410, 1196, 125445, 1396, -1000, -1000, 1899, 1356, 1353, 89345,
	2285, 1898, 2015, 137653, 65381, 1075, 65381, 2940, -1000, -1000,
	24672, -1000, 145144, 145144, -1000, 145144, -1000, 77060, 81780, 125445,
	-1000, -1000, 1124, 125445, 83523, 1017, 3330, 70658, -175, 1062,
	81780, 99248, -41, 2886, 125445, -1000, -1000, 2242, 3329, 508,
	2595, -1000, 137653, 3753, 3326, 640, 3962, 3960, -1000, 99248,
	2489, 2591, -1000, -1000, 126026, 3426, 866, 125445, 1103, 61858,
	2164, -1000, 68328, 1148, 125445, 2022, 184, -1000, -1000, -1000,
	-5, 125445, -1000, 845, -1000, -1000, 6091, 6091, 1062, -257,
	639, 65972, -134, -1000, 231, 636, 920, 918, -1000, 3310,
	-1000, -182, -1000, 81780, 1073, 65381, 3129, -182, 2976, 3128,
	-1000, -1000, 1090, -1000, 1614, 1062, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -30, 1997, 125445,
	-164, -164, -57, -42, -1000, 1079, -1000, 1079, -1000, 1079,
	-1000, -1000, -1000, 145144, -1000, -1000, -1000, 1786, 1770, 125445,
	-1000, 3207, -1000, 125445, -1000, -1000, 27054, 125445, 99248, 27054,
	99248, 3202, 3201, -1000, -1000, -1000, 125445, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1213, -1000, 1982, 2457, -1000,
	635, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2708, -1000, -43, 35000, 971, -1000, -1000, 99248, -31, 52380,
	52380, 9438, 7366, 52380, 56552, 56552, -1000, 52380, 7347, -1000,
	-1000, -1000, -1000, -1000, 3127, 634, 52380, 74150, 5270, 2337,
	-1000, 405, 11996, 7631, -1000, 52380, -1000, 544, -1000, 403,
	37402, -1000, 142927, -23, -135, -1000, 20469, -104, -137, -1000,
	-1000, 834, -1000, 3422, -1000, 52380, 143751, 2663, 2329, 1974,
	1815, 3843, 3889, 24075, -1000, 72403, 1104, 2427, 140174, -1000,
	-1000, -1000, -1000, 74150, 74150, 52380, 52380, -1000, 52380, 52380,
	52380, -1000, -1000, -1000, 3843, 993, -1000, -1000, -1000, 993,
	-1000, -1000, 1437, -1000, 1437, -1000, 52380, -1000, -1000, 3125,
	52380, -1000, 74150, 74150, 56552, 56552, 56552, 56552, 56552, 56552,
	56552, 56552, 56552, 56552, 56552, 56552, 56552, 56552, 56552, 56552,
	56552, 56552, 56552, 56552, 2731, 56552, 3816, 3816, 3816, 702,
	-1000, 3200, 3125, 52380, 52380, 74150, 399, 396, 390, -1000,
	52380, -104, -1000, -1000, 10399, 633, -1000, 2676, -1000, 3037,
	-1000, 52380, -1000, -142, -1000, 2737, -1000, -1000, 3037, 3037,
	-145, 145144, 61858, 61858, -1000, 632, 52380, 2782, -1000, -1000,
	816, -325, -1000, 914, -1000, -1000, -1000, -1000, -1000, -1000,
	913, -1000, 508, -1000, -1000, -1000, 230, 110880, 110880, 815,
	-1000, -151, -1000, -1000, -153, -1000, 3752, 389, 27054, -1000,
	1103, 2848, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2805,
	-266, 137653, 137653, 1888, 2447, 3887, -1000, 3846, 828, 813,
	64, 3843, 379, 378, 377, -164, 137653, 137653, 1876, 74734,
	137653, -1000, -1000, -1000, 246, -1000, -1000, -1000, 243, -1000,
	-1000, -1000, -1000, 2877, -1000, -47, -1000, -1000, -1000, 52380,
	-1000, 1027, -1000, -1000, 3558, 631, 1352, 1351, -1000, -159,
	-1000, 911, -1000, -1000, -1000, -1000, 3123, -1000, 3325, -1000,
	2589, -1000, 1156, 2588, 1828, -1000, 52380, 628, 2924, 626,
	615, 3959, 2297, 3957, 1185, 3322, 2415, 3321, 2415, -1000,
	-1000, -1000, 1004, -1000, 145144, -162, -1000, 2460, -1000, 608,
	605, -1000, -48, 1767, 565, 1346, 1088, -1000, -1000, 52380,
	52380, 110299, -1000, 490, 3547, -32, -1000, -1000, -1000, 1867,
	1336, 1330, -1000, -1000, -1000, -1000, 2242, 1863, 1329, 1327,
	-1000, -1000, -1000, -1000, -1000, 2583, -1000, -1000, 3320, 1086,
	-1000, 3263, 3261, 974, 125445, 52380, 52380, 143545, 143339, -1000,
	1085, -1000, -1000, 52380, -1000, -49, 1324, 3702, 2579, 99248,
	-1000, 2415, 3318, 1323, -1000, 1322, -1000, -1000, -1000, 3695,
	3694, 1293, 107975, 81780, 81780, 3796, 65381, -1000, -1000, -1000,
	81780, -1000, -1000, 78819, -1000, -1000, 1131, 125445, 137653, 99248,
	1925, -1000, -1000, 88183, 88764, 125445, 2974, -164, 964, -1000,
	2334, 964, 1075, 3124, -1000, 2823, -1000, 1083, 99248, 3956,
	374, -168, -52, 74150, -1000, -1000, -1000, -1000, 2563, 99248,
	125445, 1386, 2921, 125445, 125445, 3751, -1000, 2508, 583, 99248,
	994, -1000, 3828, -1000, -1000, -1000, 1081, -1000, 3686, 99248,
	3750, 3316, 1080, 63, 99248, 3876, -1000, -1000, 3748, 99248,
	3304, 2488, 2575, 2740, 866, 82361, 1080, 2422, -61, -1000,
	2022, 36788, 3542, -169, -1000, -1000, -1000, 1103, 71820, 61858,
	52380, 3955, -176, -1000, -1000, -1000, -1000, -1000, 107975, 81780,
	1062, 125445, 125445, 3951, 81780, 81780, 81780, -55, 603, -1000,
	910, 905, 904, -1000, -1000, -1000, -1000, -1000, -1000, 900,
	899, 898, 897, 1073, -1000, -1000, -182, 65381, 1073, 65381,
	63, -1000, 2438, 99248, -1000, 23478, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1079, 3886, -175, -1000, -1000, -1000, 2314,
	2527, 2314, 2007, 2002, -1000, -1000, 2455, -1000, -1000, -1000,
	-1000, 2836, 3544, 27054, 3684, 10839, 52380, 52380, 5487, 937,
	771, 10839, 52380, 52380, 74150, 6176, -181, 52380, 52380, -1000,
	52380, 805, 145144, -1000, 3885, 52380, 370, 369, -1000, -1000,
	-1000, 3835, -1000, -1000, -1000, 145144, 52380, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 368, -1000, 23, -1000, -1000, -1000,
	134160, -1000, 52380, 366, 3647, -1000, 365, 360, 11513, 7284,
	139968, 139762, 139556, 355, -1000, -1000, 354, 352, 145144, 3200,
	145144, -1000, -1000, 1012, 1012, 1454, 1454, 1454, 1454, 3816,
	1212, 1262, 315, 717, 717, 717, 731, 702, 702, 717,
	717, 717, 702, 3120, 2781, 602, 630, -1000, -1000, 145144,
	145144, 351, -1000, -1000, -1000, -104, 350, 10399, -1000, 3039,
	3642, 145144, -1000, 61858, 3039, 3039, -1000, -1000, 2479, 125445,
	145144, 61858, -1000, 3074, -1000, 21681, 21078, -1000, 27054, -1000,
	-1000, -1000, -1000, 3828, -1000, 70077, -1000, 601, -1000, -6,
	-1000, 2848, -1000, 895, -1000, -1000, 81780, 81780, 2874, -1000,
	3051, -266, -233, 125445, -1000, -1000, 803, 3950, 827, 27054,
	349, -1000, -1000, -1000, -164, -164, 125445, 3118, 99248, 125445,
	1574, -164, -1000, -1000, -1000, 3499, 145144, 3195, 3026, 3025,
	125445, 125445, -1000, 109137, 36192, 1669, 109718, 125445, 3296, -1000,
	3294, -1000, 1181, 2068, 139350, 62441, -1000, 62441, 125445, -1000,
	-1000, -1000, -1000, 2137, 1993, 3948, 1234, -1000, 3598, 125445,
	-1000, 125445, -1000, -1000, -1000, 109137, -1000, 125445, 125445, 99248,
	125445, -1000, 137653, 3274, -184, 145144, -56, -1000, 887, -1000,
	1467, -1000, 22881, 125445, 137653, 99248, 125445, 137653, 99248, 3291,
	125445, 2369, -1000, -1000, 3249, -1000, 145144, 143133, 63, 52380,
	3268, -186, 27054, -1000, 3884, 3883, 3288, 3602, -1000, 125445,
	3882, 125445, 99248, 3493, -1000, -1000, -1000, 1078, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1837, 1318, 1312, 2485, 2481,
	2445, -57, 2285, 1075, -58, 597, -1000, 884, -1000, -1000,
	881, 879, 1075, -1000, 81780, 65381, 3944, 508, -1000, 2915,
	-1000, 105062, 83523, 2495, -1000, -1000, 595, 125445, 125445, 594,
	-1000, 63, -1000, 3940, 109137, 589, -1000, 2433, -1000, 718,
	-1000, 2700, 137653, 2242, 63, 99248, -1000, 1072, 508, 344,
	-59, -1000, 3366, 1176, 27054, 99248, 3286, 2738, 866, 82361,
	-1000, 1570, 2860, -1000, -60, -1000, 660, 63, 2422, -1000,
	-61, 145144, -1000, 878, -187, 343, -1000, 3489, -1000, -1000,
	-189, -1000, -1000, 5227, 5227, 81780, 65381, 81780, 81780, 81780,
	65381, 81780, -1000, 1073, 964, -1000, -182, -1000, 2599, -1000,
	-1000, -1000, -1000, -1000, -1000, 27054, 1866, -1000, 588, 587,
	-1000, -1000, -1000, -1000, 3544, 10839, 10839, 52380, 52380, 52380,
	10839, 6176, -192, -1000, 10839, 10839, -104, -1000, -1000, 142927,
	-1000, -1000, -1000, 145144, -1000, 22284, 2355, -1000, 139144, -1000,
	35000, -1000, -1000, 52380, 52380, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 56552, 3117, 586, 74150, -1000, -1000, 338,
	1101, 52380, 54168, 2737, 1101, 1101, -1000, -195, -1000, -1000,
	-1000, 3828, -1000, 3828, -6, -1000, -1000, 3939, 27054, -1000,
	81780, -1000, -1000, -1000, 2441, -1000, -1000, 3262, -215, 825,
	-1000, 3938, -1000, -1000, 167, 137653, 3105, 159, 2971, -1000,
	63, -1000, -1000, -1000, -1000, -1000, -1000, 2961, 3747, -1000,
	2067, -1000, 125445, 125445, -1000, 125445, -1000, 27054, 125445, 3070,
	1398, -1000, 1022, 2763, 584, 56552, 1208, 99248, 966, 3019,
	3009, -1000, 3767, 3639, 3014, -197, -1000, 125445, 52380, 125445,
	-200, -203, 2540, -1000, -1000, 1206, 1397, 52380, 1204, -1000,
	-1000, -1000, 74150, 582, 2415, 2415, -1000, -209, -212, -1000,
	-1000, -1000, 52380, 1286, 125445, 35596, -1000, 3929, 3547, -1000,
	-1000, -1000, -1000, -1000, -1000, 125445, -1000, 125445, -1000, 52380,
	-1000, 142721, 52380, 1285, -1000, -1000, -1000, 3879, 2415, 27054,
	2415, -1000, 2415, 3602, 1224, 2505, 125445, 137653, 99248, 1653,
	1653, 3194, -1000, -1000, -1000, 2624, 2624, 81780, 65381, 65381,
	-1000, -62, 1075, -1000, 3746, 2325, 3928, -1000, -1000, -1000,
	-1000, 2760, -1000, -1000, -1000, 125445, 2759, 3027, 62441, 581,
	577, 125445, 1063, -1000, -217, 83523, 1017, 1026, -1000, -63,
	572, -1000, 877, -1000, -1000, -1000, -1000, 508, -1000, 2870,
	3738, -1000, 3877, 571, 568, 125445, 2476, 562, 27054, 3540,
	866, 82361, -1000, 3426, 2022, -1000, 2558, 125445, 3534, -1000,
	2860, 560, -1000, 1062, 559, 1062, -1000, -218, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1073, -65, -1000,
	938, 933, -1000, -1000, 99248, 99248, 52380, 52380, -1000, 10839,
	10839, 10839, -1000, 334, -1000, -1000, 2422, 3634, -1000, -66,
	138938, 138732, 688, 56552, 74150, -219, -1000, -1000, 125445, 145144,
	-86, -1000, 145144, 558, 557, 484, -1000, -1000, -1000, 703,
	689, -1000, -1000, -1000, -1000, 137653, 3926, -1000, 137653, -164,
	137653, 137653, 1825, -1000, 108556, 125445, -1000, -1000, 1828, 2435,
	-1000, -1000, -1000, 125445, 2564, -1000, -1000, -1000, 1050, 52380,
	630, 56552, 556, 52380, -1000, 555, 551, 3736, 3461, -1000,
	2906, 3104, 2103, 62441, -1000, 3544, -1000, 138526, -1000, 1174,
	2128, -1000, -1000, -1000, -1000, 145144, 56552, 3602, 62441, -1000,
	-1000, 530, 522, 145144, 519, 874, 3103, -1000, -1000, -1000,
	-1000, -1000, 145144, 63, 145144, 518, 3702, -1000, -1000, -1000,
	-1000, 2415, 99248, 871, -1000, -1000, -1000, 1275, -1000, -1000,
	-1000, -1000, 3924, 3922, 3095, 88183, -1000, -220, -1000, -1000,
	-1000, 2145, 63, 1017, -1000, -1000, 2495, 517, -1000, 1049,
	2773, 2773, -228, 62441, 62441, -231, 2467, 2868, -1000, 333,
	3733, 1026, -1000, 3814, -1000, 3458, 3458, 52380, 3731, 3488,
	-1000, 63, -1000, 3876, 62441, -1000, 99248, 62441, 2474, 2236,
	2723, 82361, -1000, 2740, -1000, -1000, -237, 125445, 2022, -1000,
	-1000, 81780, -1000, -1000, -1000, 2599, -1000, 125445, -1000, 125445,
	-1000, -1000, -238, -239, -1000, 2342, 52380, 35000, -1000, -1000,
	688, -244, -1000, -94, -1000, 3718, 54168, 3921, 3915, 3907,
	-1000, -1000, -266, -1000, -164, -164, -164, 125445, -1000, 2057,
	-1000, 2563, -1000, -1000, 3284, -1000, 3032, 516, 138267, 630,
	2696, 125445, 13842, 2242, 2242, -1000, 3715, 3082, -1000, -1000,
	2309, 514, -1000, -1000, -1000, -1000, 971, 125445, 1049, 3031,
	99248, 630, 1178, -245, 2314, 2314, 52380, 34404, 2368, -1000,
	52380, -1000, -1000, 3602, 65381, 137653, -1000, -1000, 137653, 2471,
	-1000, 3071, 3832, -1000, 2467, 125445, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1174, -246,
	-252, -1000, -1000, 3585, -1000, 3486, 2915, 63, -1000, -1000,
	-1000, -254, 145144, 63, 3906, 1072, 331, -255, 1176, -261,
	99248, 2153, -1000, 866, -1000, 2738, 1103, 3432, -1000, -263,
	-1000, -269, -274, -1000, -1000, 329, 53572, 53572, 53572, -104,
	-112, -1000, 125445, 509, -1000, -1000, -1000, -1000, -1000, 151,
	-1000, -1000, 3134, 885, -1000, 936, 2093, 312, 1189, 203,
	-21, -1000, -1000, -1000, 3014, -1000, 125445, -1000, -1000, -1000,
	885, 508, -1000, 52380, 1174, -277, -1000, 1146, -283, -1000,
	1144, -288, -1000, 3084, -1000, -289, 2415, -1000, -266, 242,
	1653, 1064, 3680, -1000, -1000, -1000, 2713, -290, -1000, -1000,
	2103, 1174, 2309, 2514, -1000, 2325, 1063, -1000, -1000, -1000,
	-1000, -1000, 1174, 507, 2103, 501, 1676, 866, -1000, -1000,
	1437, 3540, 3394, 1489, 1062, -1000, -1000, -1000, 3285, -1000,
	57744, 2477, 1995, 141895, 3285, 3285, -1000, -1000, 137653, 125445,
	1049, 3669, -1000, 944, 941, 1625, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1103, -295, -1000, 2696, 145144, 1049,
	-1000, 2314, 2957, -1000, 2314, 3078, -1000, 2366, -1000, -1000,
	-1000, -1000, 3073, -1000, 1946, 3801, -1000, -1000, 1049, 125445,
	2309, 2103, 1049, 1971, 1967, 3905, 1017, 2467, 2103, 62441,
	2309, 62441, 2271, -1000, 125445, -1000, 2236, 1452, -1000, 1778,
	-1000, -1000, 2060, 3722, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -164, -1000, -1000, 869, -1000, 3450, -1000, 1200, 2308,
	2308, -1000, -1000, 936, -1000, -1000, 500, -1000, 491, -1000,
	137653, 2418, -1000, -1000, -1000, -1000, 1049, 2309, 1103, -1000,
	3903, -1000, 2467, -1000, 2309, -296, 1049, -297, 2373, -1000,
	-1000, -175, 2153, -1000, 1773, 71820, 1992, -1000, -1000, 2405,
	52976, 52380, -1000, 3798, -1000, -1000, 2777, -1000, 3014, 52380,
	52380, 242, 69494, 1103, 1049, -1000, -1000, 2713, 1049, 1174,
	1103, 2103, -1000, 866, 1676, 71820, -272, -1000, -1000, -1000,
	145144, -1000, -1000, -1000, -1000, -302, -310, -1000, -257, 107975,
	-1000, 1103, -1000, 1103, 2103, -1000, 2309, 137653, 2271, -272,
	-1000, 2309, 1271, -315, -1000, -1000, 2309, 1049, -1000, -1000,
	-1000, -1000, -1000, 468, -1000, 1049, 1103, 52380, 1103, -1000,
	-318, -1000, 2309, -1000,
}

var sqlPgo = [...]int{
	0, 4762, 4761, 4753, 4751, 4750, 4749, 4748, 4746, 4734,
	4733, 4732, 4731, 4730, 4729, 155, 4728, 4727, 4724, 4723,
	4722, 4719, 4716, 4714, 4713, 4712, 4711, 4709, 4708, 4707,
	4706, 4705, 4702, 4700, 4696, 4695, 4694, 4693, 4688, 4687,
	4685, 4683, 4681, 4680, 4679, 4677, 4676, 4675, 4673, 4671,
	4669, 4668, 4665, 4664, 4661, 4657, 4656, 4654, 4653, 4650,
	4648, 4645, 4644, 4642, 4641, 4639, 4638, 4637, 4635, 4631,
	57, 4628, 4627, 4623, 4619, 4617, 4609, 4606, 4602, 4601,
	4600, 4599, 4598, 4597, 4596, 4595, 4593, 4587, 4586, 4585,
	4583, 68, 4582, 296, 4580, 4579, 4576, 4575, 4571, 4568,
	4565, 4563, 4562, 4561, 4560, 4559, 295, 4558, 143, 172,
	4557, 4556, 4093, 4551, 4550, 294, 4549, 4546, 4545, 4544,
	4543, 303, 4542, 4541, 4540, 4538, 4537, 276, 4536, 4535,
	4534, 4533, 4530, 4529, 101, 138, 4527, 4521, 673, 4517,
	4516, 4515, 4514, 4513, 4511, 4510, 272, 277, 4509, 4506,
	4505, 265, 184, 4504, 292, 4503, 4501, 4498, 4495, 4492,
	4491, 4489, 4488, 4486, 4484, 4483, 4482, 4481, 4478, 4477,
	4472, 4471, 4470, 4469, 4468, 4466, 4465, 4462, 4461, 4460,
	4459, 4457, 4456, 4455, 4454, 4453, 4452, 4451, 4450, 4448,
	4447, 4446, 4445, 4444, 4443, 4442, 4441, 268, 227, 156,
	4440, 4439, 287, 286, 4437, 4435, 4433, 4432, 4431, 4430,
	4429, 4426, 4423, 4422, 4421, 4419, 4418, 4417, 152, 17,
	32, 4416, 4415, 92, 96, 93, 80, 107, 105, 4414,
	127, 4413, 145, 115, 4410, 126, 114, 30, 22, 175,
	269, 13421, 263, 4408, 4405, 4404, 259, 201, 4399, 258,
	4397, 4395, 4394, 4393, 4392, 4390, 71, 54, 218, 4388,
	4387, 154, 187, 196, 194, 190, 188, 89, 55, 109,
	88, 61, 45, 15, 84, 230, 19, 1, 282, 4386,
	279, 11, 158, 13, 39, 4383, 4380, 4379, 4378, 3954,
	113, 4377, 285, 260, 186, 4376, 4375, 4371, 368, 4370,
	4369, 49, 248, 125, 173, 122, 20, 146, 4368, 163,
	176, 37, 4365, 177, 73, 4363, 4362, 108, 94, 10717,
	5125, 4361, 4344, 117, 79, 208, 1643, 164, 160, 211,
	140, 179, 178, 58, 224, 223, 191, 95, 4342, 261,
	4340, 3733, 97, 200, 165, 6521, 4339, 4338, 4336, 90,
	4335, 111, 4334, 4332, 70, 24, 3, 2, 157, 40,
	38, 12, 4326, 34, 139, 48, 23, 4324, 29, 4323,
	4322, 4319, 4318, 46, 4317, 53, 167, 4314, 4313, 302,
	4311, 87, 56, 213, 4310, 25, 234, 4309, 244, 137,
	4308, 4305, 275, 216, 197, 4303, 82, 256, 4295, 4294,
	4293, 4292, 4290, 4287, 141, 7, 131, 4285, 4284, 159,
	4283, 60, 255, 210, 4282, 65, 4280, 4278, 195, 91,
	161, 301, 136, 239, 129, 243, 199, 251, 4277, 4276,
	4271, 236, 4269, 4268, 237, 202, 4267, 4266, 257, 300,
	99, 50, 85, 253, 86, 209, 171, 4264, 215, 4263,
	4262, 298, 205, 226, 42, 9, 6, 102, 110, 4260,
	5, 252, 169, 240, 128, 4259, 9311, 2461, 1901, 249,
	4258, 153, 135, 81, 130, 162, 284, 100, 4256, 4254,
	3762, 4251, 4250, 4249, 4248, 193, 4247, 4246, 4245, 170,
	245, 206, 4244, 123, 76, 52, 26, 150, 267, 297,
	120, 235, 185, 273, 4243, 4242, 4241, 198, 4238, 74,
	325, 181, 214, 271, 59, 4237, 121, 4236, 166, 856,
	67, 174, 4233, 241, 4227, 4224, 4218, 4217, 4216, 4214,
	4211, 247, 254, 4209, 4208, 4207, 44, 207, 4205, 283,
	183, 220, 142, 72, 4203, 103, 2270, 4200, 180, 222,
	83, 4, 4198, 69, 4193, 3719, 64, 4191, 0, 15082,
	11300, 13842, 14984, 4190, 5323, 4189, 4188, 4185, 233, 77,
	4184, 4179, 4170, 116, 4167, 98, 4164, 4162, 75, 4159,
	28, 16, 18, 31, 27, 359, 281, 4156, 4152, 147,
	151, 133, 4151, 299, 246, 4150, 4149, 4146, 4145, 104,
	4144, 36, 4143, 43, 4140, 4138, 47, 14, 33, 4137,
	4136, 168, 4130, 132, 225, 4129, 182, 4127, 63, 148,
	4124, 4123, 4122, 66, 62, 278, 219, 221, 112, 4121,
	293, 4120, 212, 4119, 4118, 21, 4116, 4113, 262, 124,
	118, 51, 264, 149, 41, 192, 229, 4112, 4111, 189,
	4110, 4108, 4106, 291, 4105, 3707, 280, 4103, 35, 4102,
	4101, 4100, 8, 4099, 4098, 217, 3439, 4097, 4096, 10,
	4095, 204,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 13, 13, 9, 9, 9, 9, 10, 10,
	10, 10, 10, 54, 54, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 40, 42, 41, 35,
	35, 36, 36, 37, 38, 38, 12, 12, 12, 8,
	8, 8, 8, 8, 8, 8, 8, 21, 21, 43,
	43, 22, 22, 45, 45, 23, 23, 46, 46, 625,
	625, 625, 626, 626, 627, 627, 627, 26, 48, 19,
	20, 20, 20, 20, 628, 628, 628, 628, 39, 27,
	49, 32, 32, 32, 32, 32, 221, 221, 221, 221,
	25, 25, 44, 44, 264, 264, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 621, 621, 266, 266,
	265, 253, 253, 254, 254, 255, 255, 629, 629, 267,
	267, 267, 268, 268, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 520, 520, 520, 551, 551, 551,
	551, 553, 553, 648, 648, 649, 649, 649, 649, 649,
	137, 137, 417, 417, 417, 58, 58, 58, 58, 58,
	616, 616, 223, 223, 223, 225, 225, 224, 224, 224,
	224, 224, 82, 82, 635, 635, 634, 633, 633, 633,
	636, 636, 636, 222, 222, 222, 133, 133, 133, 133,
	133, 133, 133, 133, 134, 134, 135, 135, 226, 226,
	226, 228, 228, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 232, 18, 18, 18,
	116, 116, 116, 116, 116, 116, 116, 111, 111, 555,
	555, 556, 556, 217, 217, 218, 218, 218, 218, 219,
	219, 220, 220, 220, 73, 73, 229, 229, 231, 231,
	230, 230, 230, 230, 230, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 62,
	62, 62, 62, 62, 62, 63, 63, 63, 63, 63,
	63, 64, 64, 71, 71, 71, 71, 71, 71, 71,
	71, 199, 199, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 79, 79, 79, 79,
	79, 650, 650, 650, 650, 650, 650, 650, 650, 650,
	650, 650, 650, 650, 650, 650, 650, 650, 650, 650,
	651, 651, 652, 652, 653, 653, 654, 654, 654, 654,
	654, 654, 654, 654, 654, 654, 654, 654, 654, 654,
	654, 654, 654, 654, 654, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 88, 88, 377, 377, 340, 340, 89, 89,
	89, 90, 90, 91, 91, 75, 75, 614, 614, 393,
	393, 511, 511, 76, 622, 622, 622, 624, 624, 623,
	623, 93, 93, 416, 416, 94, 94, 94, 94, 94,
	94, 95, 95, 95, 95, 95, 95, 95, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 103, 103, 103, 103, 103, 104, 104, 104,
	101, 101, 101, 98, 98, 98, 97, 97, 97, 102,
	102, 102, 613, 329, 329, 100, 100, 100, 99, 99,
	99, 394, 394, 105, 105, 105, 105, 341, 106, 106,
	106, 106, 106, 106, 106, 106, 109, 109, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 513, 513, 4, 4, 259, 259, 258, 258, 258,
	258, 5, 5, 5, 262, 262, 261, 260, 107, 107,
	107, 478, 478, 112, 112, 112, 432, 432, 113, 113,
	113, 113, 113, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 618, 618, 386, 386, 292, 292,
	292, 292, 125, 125, 125, 125, 126, 126, 126, 126,
	127, 127, 204, 204, 143, 143, 143, 143, 142, 142,
	142, 142, 142, 142, 142, 142, 65, 65, 65, 66,
	66, 67, 67, 68, 68, 69, 69, 70, 70, 70,
	70, 70, 146, 146, 31, 31, 31, 31, 147, 147,
	645, 645, 149, 145, 145, 145, 145, 145, 144, 144,
	148, 148, 148, 148, 150, 152, 152, 152, 152, 152,
	151, 151, 151, 151, 151, 153, 153, 545, 545, 402,
	402, 543, 543, 565, 565, 544, 544, 347, 347, 347,
	347, 347, 348, 348, 348, 554, 554, 554, 554, 554,
	554, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 205, 205, 205,
	206, 206, 210, 210, 211, 211, 211, 212, 212, 212,
	209, 209, 209, 207, 207, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 215, 215, 213, 213, 214,
	214, 656, 656, 655, 655, 216, 216, 216, 216, 216,
	180, 180, 180, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 403, 403, 183, 183, 183, 167,
	167, 155, 155, 155, 155, 155, 155, 155, 160, 160,
	160, 160, 160, 160, 160, 160, 161, 161, 161, 156,
	156, 169, 169, 169, 169, 169, 162, 162, 163, 163,
	163, 164, 164, 164, 164, 191, 191, 166, 166, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 157, 157,
	157, 157, 171, 171, 171, 171, 439, 439, 439, 197,
	197, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 194, 194, 194,
	194, 194, 194, 637, 637, 638, 638, 638, 187, 187,
	187, 187, 187, 187, 492, 492, 181, 181, 181, 181,
	186, 186, 186, 186, 189, 189, 189, 189, 422, 422,
	178, 178, 178, 179, 179, 179, 184, 184, 196, 185,
	378, 378, 182, 182, 188, 188, 188, 188, 190, 190,
	190, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	159, 159, 159, 159, 192, 192, 177, 177, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 657,
	657, 173, 173, 173, 172, 172, 172, 172, 175, 175,
	176, 176, 176, 176, 176, 176, 174, 165, 195, 615,
	615, 611, 611, 611, 611, 611, 611, 611, 611, 611,
	612, 612, 612, 612, 617, 617, 117, 117, 117, 117,
	117, 117, 117, 128, 128, 128, 128, 128, 128, 128,
	131, 131, 118, 118, 118, 118, 118, 118, 118, 121,
	121, 119, 119, 119, 119, 120, 120, 83, 83, 83,
	83, 83, 17, 17, 17, 84, 84, 283, 283, 237,
	237, 237, 365, 365, 238, 238, 355, 355, 355, 355,
	233, 233, 234, 234, 235, 236, 236, 85, 85, 658,
	658, 658, 630, 630, 630, 631, 631, 631, 631, 631,
	631, 349, 349, 350, 350, 458, 458, 458, 458, 458,
	353, 353, 353, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 363, 364, 364, 356, 356, 362, 361, 361,
	360, 360, 359, 359, 357, 358, 358, 358, 367, 367,
	366, 369, 369, 368, 457, 574, 574, 576, 576, 576,
	576, 576, 576, 576, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 440, 440, 659, 659, 660, 661, 572, 572, 572,
	573, 568, 568, 569, 569, 569, 569, 569, 351, 351,
	352, 352, 352, 352, 570, 571, 384, 384, 496, 575,
	575, 577, 577, 579, 662, 662, 662, 662, 662, 662,
	663, 663, 663, 456, 456, 455, 455, 454, 454, 375,
	375, 580, 580, 580, 580, 581, 581, 581, 581, 581,
	584, 583, 582, 582, 582, 582, 582, 87, 87, 87,
	419, 419, 418, 418, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 201,
	201, 295, 295, 295, 81, 81, 81, 14, 14, 14,
	14, 14, 14, 14, 310, 310, 15, 15, 15, 632,
	632, 632, 86, 86, 86, 86, 86, 86, 373, 373,
	373, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 620, 620, 619,
	619, 296, 296, 665, 665, 92, 92, 92, 92, 92,
	92, 92, 92, 514, 514, 515, 515, 80, 80, 80,
	80, 80, 441, 441, 438, 438, 437, 437, 383, 383,
	494, 494, 494, 495, 300, 300, 301, 301, 256, 256,
	256, 34, 33, 24, 24, 28, 28, 29, 29, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 30, 30,
	51, 51, 51, 51, 52, 52, 52, 52, 55, 55,
	56, 56, 50, 50, 50, 50, 53, 53, 47, 47,
	57, 57, 57, 57, 57, 639, 641, 641, 640, 640,
	644, 644, 644, 644, 644, 644, 642, 642, 643, 643,
	646, 646, 647, 647, 124, 124, 129, 129, 129, 129,
	129, 130, 130, 130, 130, 132, 132, 132, 132, 141,
	141, 200, 200, 200, 200, 200, 200, 200, 59, 59,
	59, 59, 72, 72, 72, 72, 139, 667, 667, 667,
	140, 140, 140, 666, 666, 293, 293, 451, 451, 452,
	452, 668, 668, 453, 453, 453, 453, 453, 286, 285,
	287, 287, 288, 288, 78, 78, 78, 276, 276, 275,
	277, 277, 278, 278, 273, 273, 557, 557, 280, 280,
	280, 281, 281, 269, 269, 270, 270, 271, 271, 272,
	272, 284, 284, 552, 552, 669, 669, 115, 115, 115,
	203, 203, 339, 339, 339, 448, 448, 448, 376, 376,
	307, 307, 450, 450, 450, 450, 450, 415, 415, 415,
	202, 202, 391, 391, 405, 405, 406, 406, 508, 508,
	407, 122, 122, 123, 123, 138, 138, 241, 241, 239,
	239, 239, 239, 239, 239, 239, 239, 246, 246, 247,
	247, 248, 248, 249, 250, 250, 250, 250, 395, 395,
	251, 251, 251, 240, 240, 240, 242, 242, 242, 242,
	242, 242, 242, 245, 245, 245, 245, 252, 252, 252,
	244, 244, 591, 591, 591, 593, 593, 595, 595, 594,
	594, 590, 590, 592, 592, 664, 664, 421, 421, 421,
	372, 374, 370, 370, 371, 371, 381, 381, 379, 380,
	380, 382, 382, 493, 493, 493, 257, 257, 257, 412,
	412, 412, 412, 413, 413, 444, 444, 442, 442, 442,
	442, 443, 443, 445, 445, 445, 446, 446, 447, 447,
	409, 409, 410, 410, 411, 411, 411, 411, 474, 474,
	243, 243, 243, 388, 388, 388, 389, 389, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 465,
	465, 463, 463, 463, 463, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 498, 499, 499, 390, 390, 500,
	449, 449, 609, 609, 609, 610, 610, 491, 491, 501,
	501, 501, 501, 501, 501, 489, 489, 490, 490, 509,
	510, 510, 425, 425, 425, 425, 423, 423, 426, 426,
	426, 426, 426, 424, 424, 502, 502, 502, 502, 414,
	414, 503, 503, 503, 503, 504, 505, 505, 506, 506,
	459, 460, 460, 516, 516, 516, 516, 518, 387, 387,
	387, 387, 387, 567, 566, 566, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 533, 533, 533,
	533, 533, 533, 533, 519, 519, 519, 519, 519, 523,
	523, 523, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 524, 524, 529, 529, 530, 530, 530,
	525, 526, 531, 531, 531, 531, 670, 670, 535, 535,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 521,
	521, 521, 528, 528, 528, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 433, 433,
	435, 435, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 468, 468, 468, 468, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 585, 585, 585, 585, 585, 585, 585, 585,
	470, 470, 588, 588, 589, 589, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 596, 596, 597,
	597, 599, 599, 600, 600, 601, 602, 602, 602, 603,
	604, 604, 598, 598, 605, 605, 605, 605, 606, 606,
	607, 607, 607, 607, 607, 608, 608, 608, 608, 608,
	480, 480, 481, 481, 487, 487, 487, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 346, 346, 345, 297, 297, 297, 297, 297,
	297, 400, 400, 398, 398, 398, 401, 401, 399, 399,
	397, 397, 396, 396, 477, 477, 475, 475, 479, 479,
	427, 427, 534, 534, 534, 534, 534, 534, 534, 534,
	428, 428, 428, 436, 429, 429, 430, 430, 430, 430,
	430, 471, 472, 431, 431, 431, 473, 473, 482, 486,
	486, 485, 484, 484, 483, 483, 461, 461, 462, 462,
	408, 408, 671, 671, 404, 404, 507, 507, 507, 507,
	343, 343, 392, 392, 342, 342, 334, 334, 335, 335,
	335, 335, 385, 385, 488, 488, 536, 536, 537, 537,
	538, 538, 539, 539, 540, 541, 542, 476, 476, 318,
	317, 304, 305, 316, 315, 314, 303, 306, 311, 312,
	313, 308, 309, 325, 324, 323, 274, 279, 330, 331,
	331, 333, 333, 332, 332, 320, 321, 322, 512, 302,
	336, 336, 337, 337, 337, 338, 338, 338, 338, 298,
	298, 299, 299, 326, 326, 327, 328, 328, 319, 319,
	319, 289, 289, 289, 290, 290, 291, 291, 550, 550,
	547, 547, 547, 548, 548, 548, 549, 549, 549, 549,
	546, 546, 546, 546, 546, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 559, 559, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 561, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 564, 564,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 0,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 4, 4, 2, 1, 1, 3,
	1, 3, 2, 4, 3, 2, 3, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 1, 1,
	1, 1, 3, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 3, 12, 3, 1, 1, 2, 1, 4, 0,
	3, 3, 0, 4, 6, 0, 5, 7, 6, 8,
	7, 9, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 5, 2, 0, 1, 2,
	3, 1, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 6, 3, 8, 5,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 4, 3, 1, 2, 2, 2, 2,
	2, 4, 6, 3, 1, 2, 2, 7, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 7, 4, 7, 8, 8, 9, 11,
	5, 2, 6, 9, 4, 7, 7, 10, 7, 10,
	10, 13, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 4, 4, 3, 4, 1, 1,
	1, 1, 5, 3, 3, 2, 2, 6, 3, 3,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 1, 2, 2, 2,
	9, 2, 1, 0, 1, 1, 0, 1, 2, 0,
	2, 2, 0, 2, 2, 1, 2, 3, 3, 4,
	4, 4, 4, 3, 3, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 3, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 1, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 12, 15, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	1, 1, 1, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 3, 6,
	4, 2, 3, 5, 5, 5, 2, 5, 5, 2,
	2, 2, 0, 1, 1, 3, 4, 10, 11, 9,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 6, 1, 3, 1, 2,
	0, 1, 2, 3, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 3, 0, 4, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 8, 11, 5, 4, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 16, 19, 15,
	18, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 8, 8, 4, 7, 3, 0, 7, 10,
	1, 1, 1, 1, 2, 2, 3, 0, 3, 0,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 14, 16, 3, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 7, 10, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 628, -108, -105, -73, -71, -112, -113,
	-94, -114, -107, -136, -141, -122, -123, -124, -137, -143,
	-200, -205, -206, -207, -216, -3, -58, -60, -74, -93,
	-95, -106, -116, -115, -117, -125, -133, -128, -111, -65,
	-138, -142, -154, -201, -202, -203, 33, 32, 104, 83,
	160, 133, 142, 211, 401, 449, 461, 417, 147, 440,
	422, -148, -149, 480, -59, -72, -140, -139, 76, 134,
	176, 432, -6, -14, -31, -18, 30, 48, -61, -62,
	-63, -64, 65, -81, -77, -88, -82, -75, -76, -79,
	-650, 106, -592, -96, -99, -132, -654, 168, 230, -118,
	-119, -120, 383, -126, -127, 442, -129, -130, -131, 445,
	169, -67, -66, 162, -239, -241, -145, -144, -146, -204,
	-155, -156, -157, -158, -159, -161, -162, -164, -191, -165,
	-166, -167, -168, -169, -170, -174, -194, -171, -172, -173,
	-176, -175, -177, -182, -178, -179, -180, -181, -183, -184,
	-186, -187, -188, -189, -190, -192, -193, 485, -185, -195,
	-163, -196, 549, 52, 501, 85, 152, 453, 21, -7,
	-8, -9, -10, -11, -12, -13, -17, -16, -57, -4,
	-5, -78, -80, -83, -84, -85, -92, -86, -87, -591,
	-97, -98, -101, -103, -104, -100, -102, 441, 601, -242,
	-240, 625, 565, -160, -21, -26, -22, -23, -25, -27,
	-24, -28, -29, -30, -43, -48, -45, -46, -44, -47,
	-49, -50, -51, -52, -53, -54, -55, -56, -33, -39,
	-40, -34, -35, -36, -37, -38, -41, -42, -19, -20,
	-32, 588, 597, -245, -243, -244, -252, 472, 573, 522,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, -341, 2, -320, -326, -327,
	-328, -319, -289, -561, -564, 4, -558, -562, 175, 240,
	344, 21, 22, 24, 23, 25, 26, 27, 28, 30,
	31, 41, 43, 44, 46, 47, 48, 49, 50, 51,
	52, 56, 58, 62, 63, 64, 65, 66, 67, 71,
	76, 77, 82, 83, 84, 85, 86, 87, 88, 89,
	95, 92, 93, 94, 96, 98, 100, 101, 102, 103,
	104, 105, 107, 108, 109, 111, 112, 113, 121, 122,
	123, 124, 125, 127, 133, 128, 134, 137, 132, 136,
	138, 140, 141, 142, 145, 146, 147, 149, 150, 151,
	153, 154, 155, 157, 158, 160, 161, 162, 165, 163,
	166, 164, 167, 168, 169, 170, 173, 181, 182, 183,
	188, 190, 191, 192, 194, 197, 198, 199, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 212, 216, 218,
	219, 220, 221, 222, 223, 229, 230, 232, 233, 234,
	235, 236, 241, 242, 243, 247, 253, 254, 258, 259,
	260, 262, 266, 267, 268, 269, 270, 271, 273, 275,
	274, 277, 280, 281, 284, 285, 286, 287, 288, 289,
	293, 294, 290, 295, 296, 298, 299, 302, 300, 303,
	304, 301, 305, 307, 308, 309, 310, 311, 312, 313,
	314, 315, 316, 317, 318, 306, 321, 319, 323, 324,
	325, 326, 327, 342, 337, 338, 339, 331, 332, 328,
	333, 329, 330, 334, 335, 341, 336, 346, 347, 348,
	349, 352, 227, 246, 354, 355, 358, 360, 377, 363,
	364, 365, 368, 369, 372, 375, 376, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 388, 389, 391, 392,
	393, 395, 396, 397, 399, 401, 402, 404, 405, 406,
	408, 409, 410, 411, 412, 413, 414, 416, 417, 419,
	418, 420, 422, 424, 425, 426, 432, 433, 440, 434,
	436, 437, 438, 439, 441, 442, 443, 444, 445, 447,
	448, 449, 451, 452, 453, 454, 455, 457, 459, 460,
	464, 465, 466, 482, 483, 504, 461, 462, 463, 467,
	468, 469, 470, 471, 475, 473, 474, 476, 477, 478,
	480, 481, 484, 485, 487, 488, 489, 490, 491, 492,
	493, 496, 498, 499, 500, 501, 502, 521, 503, 505,
	509, 510, 511, 512, 506, 507, 520, 514, 515, 517,
	518, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	533, 541, 542, 543, 544, 546, 549, 550, 551, 552,
	539, 554, 555, 558, 559, 563, 560, 564, 561, 562,
	565, 567, 570, 571, 572, 578, 577, 579, 580, 581,
	583, 584, 589, 590, 592, 593, 594, 37, 53, 54,
	57, 59, 61, 72, 73, 74, 78, 129, 130, 159,
	171, 172, 184, 200, 201, 213, 215, 224, 225, 226,
	248, 249, 251, 256, 278, 351, 353, 370, 374, 390,
	394, 398, 400, 415, 456, 494, 508, 513, 534, 535,
	536, 537, 545, 547, 573, 574, 575, 582, 591, -341,
	2, -320, 361, -313, 2, -289, -289, 401, 29, 2,
	29, 389, 474, 525, 527, 2, -618, -386, 2, 29,
	-292, -289, 106, 211, 472, -313, 2, -618, 211, -386,
	26, 2, -289, 2, 375, 23, 28, 69, 80, 102,
	145, 170, 193, 197, -653, 377, 409, 459, 476, 520,
	531, 546, 2, 577, 299, 473, 522, 240, 124, 551,
	467, -632, 464, 465, 375, 407, 451, 214, 566, -293,
	2, 461, -289, 299, 2, 628, 98, 77, 456, 477,
	-151, 2, 289, 542, -152, -153, -150, 534, -545, 467,
	451, 321, -289, 628, 628, 628, 29, -302, 2, -289,
	-302, 2, -208, 2, -302, -655, -215, -214, -213, 22,
	433, 183, 271, 195, 231, 326, 404, 194, 50, 522,
	240, 467, 124, 518, 628, 628, 2, 522, 380, 577,
	473, 124, 412, 240, 551, 197, 145, 28, 71, 48,
	528, 29, 467, -632, 602, 603, 299, 131, -616, 2,
	-611, 4, -562, -558, -335, -334, 522, 528, 124, -328,
	-319, 617, -327, 628, 628, 628, 628, 2, 259, 260,
	411, 410, 477, 478, 29, 628, 628, 628, 628, 464,
	2, 170, 23, 28, 69, 97, 102, 131, 193, 197,
	366, -651, 377, 409, 476, 520, 524, 531, 546, -631,
	503, 71, 439, 467, -630, -632, 299, 551, 145, -437,
	124, 289, 209, 559, 527, 525, 557, 137, 247, 562,
	561, 628, 628, -109, 2, 625, 33, 32, -108, -112,
	147, 480, -232, 522, 252, 2, -289, 628, 628, 628,
	2, 259, 260, 464, 465, 29, 628, 628, 195, -611,
	518, 2, 628, 628, 628, 2, 29, 259, 260, 464,
	465, 252, 2, 71, 469, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 2, -198, 477, 503, 220, 49, 48, 77,
	29, 408, 82, 381, 125, 131, 154, 552, 212, 240,
	241, 267, 97, 98, -439, 46, 260, 71, 259, 465,
	-637, 464, -492, 523, 468, 474, 517, 89, 271, 461,
	542, 544, 106, 567, 452, 594, 412, 413, 515, 426,
	290, 163, 196, 4, 124, 321, 451, 479, 275, 274,
	534, 289, 460, 384, 87, 628, -664, 2, 522, -666,
	2, 542, 542, 2, -666, 2, -666, 2, -666, 2,
	-667, 542, 591, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, -240, -242, -241, 628, 628, 628, 628,
	628, 628, 628, -198, 477, 2, 77, 29, 29, -379,
	-381, 556, 250, 156, 367, -239, -241, 2, -591, -543,
	2, -466, -565, -468, 615, 616, 608, 519, 70, -345,
	343, 595, -480, 131, 557, 361, -564, -469, -482, 159,
	377, 456, -401, 8, 9, 5, 6, 7, -298, -470,
	-476, 548, 174, 350, -338, 629, 10, 625, -588, -241,
	-481, 38, 215, 68, -547, -337, -299, -519, 251, -336,
	-319, -585, -586, 4, -558, -559, -548, -522, -530, -526,
	-527, -533, -289, -561, 80, 115, 116, 114, 119, 118,
	292, 291, 120, 117, 479, 566, 69, 37, 224, 225,
	256, 351, 226, 78, -587, 146, -560, 248, 249, 494,
	54, 415, 184, 130, 129, 353, 59, 57, 574, -531,
	126, 534, 535, 536, 537, 200, 201, 61, 171, 172,
	374, 398, 513, 545, 547, 213, 278, 45, 110, 196,
	245, 228, 255, 257, 261, 279, 282, 322, 340, 345,
	371, 373, 450, 486, -670, 575, 508, 72, 73, 189,
	-593, 418, -594, -313, -593, 628, 628, 630, 628, -370,
	-372, -374, 2, 29, 143, 625, 2, -497, 2, -498,
	-502, -241, 272, -501, 625, -499, 623, -320, 362, -589,
	457, -585, -586, -298, -319, -337, 4, -558, -560, 627,
	-375, 625, 124, 467, 522, 81, 240, 97, 170, 197,
	-432, 625, -289, 29, 361, 538, 630, -371, 406, -478,
	625, 361, 364, 195, 364, 63, 303, 2, 2, 2,
	2, 2, 224, -289, 522, 123, 2, 270, 2, 2,
	2, 2, 2, 2, 2, -394, 224, 2, -320, 577,
	-394, 224, 2, -394, 224, 2, -438, 2, 91, -303,
	224, 2, -289, -329, 224, 2, -324, -326, -333, 224,
	2, -331, -289, -553, 224, 2, -551, 4, -558, 120,
	479, -466, 2, -138, 2, 63, -289, 577, 2, 482,
	2, 625, -151, 2, 74, 542, 45, 477, -152, 2,
	-452, 2, -453, -285, -286, -287, -509, -288, 258, 405,
	414, 598, 135, 343, 594, -645, 195, 607, 538, -543,
	-543, -543, -402, 627, -210, 56, -302, -656, -655, -656,
	-541, 29, -536, 8, -537, 615, 616, -541, -541, -656,
	-656, 2, 2, 2, 2, 2, 2, -502, 224, -320,
	2, -317, -546, 4, -558, -562, -559, -563, -561, 29,
	32, 33, 34, 36, 38, 39, 40, 42, 60, 68,
	69, 75, 79, 81, 91, 97, 106, 114, 115, 117,
	116, 118, 119, 120, 131, 135, 139, 143, 144, 148,
	152, 156, 174, 176, 189, 193, 195, 211, 214, 217,
	231, 244, 250, 252, 272, 276, 283, 291, 292, 343,
	350, 356, 361, 362, 366, 367, 387, 403, 421, 446,
	472, 479, 497, 516, 522, 532, 538, 540, 548, 556,
	557, 566, 568, 576, 585, 586, 587, 588, -564, 80,
	2, -502, 224, 2, -323, 224, -502, -326, 2, -303,
	2, -466, -625, 530, 166, 434, 2, -342, 224, -320,
	-322, -326, -324, 2, 2, 2, 2, -466, 2, -555,
	2, -550, 10, -549, 5, 4, -558, -562, -559, -469,
	2, -480, 529, -331, 2, -551, 224, 2, 29, 29,
	577, 406, 252, 538, 630, -392, -334, -335, -542, 4,
	8, -385, -289, 627, -466, 2, -138, -121, 2, 189,
	-466, 224, 2, -138, 224, 2, -466, 224, 2, -138,
	224, 2, -289, 2, -633, 2, -555, 224, 224, -289,
	2, 303, 2, 2, 546, 2, 102, 522, 123, 2,
	438, -652, 459, 550, 2, 2, 2, 2, 2, 2,
	2, 522, -308, 2, -289, 189, 506, -331, 224, -332,
	2, 473, -665, 418, -551, 224, 2, 577, -324, 224,
	2, -324, 240, 254, -303, 224, 2, 527, 525, 527,
	525, 195, 2, 252, 2, 252, 2, -503, 2, -504,
	-498, -505, 623, 362, -513, 2, -512, -549, 573, -109,
	625, -109, 625, 477, 625, -555, -320, -320, -466, 2,
	-138, -121, 2, -466, 2, -138, 2, -289, 2, -135,
	-555, -134, 625, 195, 567, -289, 2, -466, 2, -138,
	-121, 2, -466, 2, -138, 2, -232, 189, 2, 124,
	522, -198, 2, 189, 568, 2, 8, 2, 231, -555,
	468, 413, 181, 2, 482, 2, 483, 77, -439, 594,
	77, 195, 2, 195, 2, -422, 2, 588, 406, 195,
	2, 2, -615, 2, 361, 195, 2, 195, 2, 195,
	2, 195, 2, 195, 2, -197, 478, 543, 521, 410,
	260, 2, -138, 585, -121, 260, 259, -466, 585, 2,
	-638, 189, 465, -466, 2, 541, 269, 164, 195, -422,
	2, 195, 2, 195, 2, 5, 2, 43, 411, 504,
	2, 258, 405, 504, 2, 502, 2, -320, 522, 577,
	473, 124, 29, 2, 464, 2, 2, 92, 93, 195,
	2, 195, 2, 210, 195, 2, 195, 522, -403, 627,
	594, 2, -414, -502, -451, -452, -451, 538, -379, -381,
	-198, 482, 2, -246, -412, -248, 189, -442, -443, -249,
	283, 176, 356, -250, -421, 29, 143, -421, -421, 63,
	626, 626, 11, 12, 79, 43, 615, 616, 617, 618,
	187, 619, 620, 613, 614, 612, 605, 606, 610, 264,
	265, 99, 609, 607, 90, 297, 458, 177, 178, 179,
	180, 435, 238, 35, 239, 14, 15, 16, -345, 34,
	366, 282, 595, 228, 486, 608, 17, 18, 19, 255,
	257, 345, 53, 231, -297, 377, -344, 519, 70, -466,
	-466, -466, -466, -466, -466, -466, -466, 373, 625, -408,
	-461, 623, -241, 625, 625, 625, 625, -542, -241, -466,
	-480, 626, -399, 625, -241, -480, -475, 625, 456, 623,
	625, -483, -466, 5, 5, 5, 625, 627, -596, 589,
	189, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 400, -524, 625,
	-523, 625, -523, -523, 578, -521, 625, 597, 590, 625,
	-521, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 578, 528, 630, -593, -375, 625,
	-404, -507, -466, 617, -404, -404, 361, -396, -466, 110,
	-425, 261, 322, 196, 279, 450, 245, -463, 629, -463,
	-491, 597, -241, -499, -319, -241, -501, 625, -497, -491,
	-110, -542, -93, -106, -115, -138, -154, -202, -203, 617,
	-320, 625, 195, 625, 627, -546, 195, -385, -303, -330,
	-289, -320, -336, -337, -342, -314, -289, 2, 2, 142,
	-396, -611, 551, 467, 29, 473, -553, -292, 39, -477,
	-516, -517, -567, 629, -566, -519, -529, -525, -528, 390,
	394, -548, 57, 574, -531, 251, 4, -558, -560, 248,
	249, 494, 54, 415, 184, 130, 129, 353, 59, 534,
	535, 536, 537, 200, 201, 61, 575, 508, 72, 73,
	-611, 551, 467, 29, 473, 189, -553, 189, -553, 2,
	2, 159, 2, 2, 2, -289, -267, 630, 67, 443,
	159, -394, 224, -267, 159, -267, 159, -343, 224, -342,
	-267, 159, -267, 630, 159, -267, 630, 159, 627, 630,
	159, -553, 2, -438, -545, -396, 39, -452, 2, 131,
	4, 5, -668, 630, 281, -348, 296, 342, 219, 362,
	592, 354, 135, -554, 5, 4, -476, -488, 131, 289,
	251, -536, -538, 9, -539, 615, 616, -544, -543, 113,
	627, -546, -211, 246, 41, -302, -302, -656, -656, 8,
	8, -656, -656, -302, -302, -264, 436, 480, 376, -263,
	25, 30, 147, 242, 327, 571, 165, -360, 243, 441,
	-357, 380, 159, 498, 560, -625, -628, 463, 530, 166,
	434, 94, 354, 480, 376, 436, 159, -418, -420, 39,
	122, 327, 375, 64, 234, 301, 302, 501, 582, 159,
	480, 376, 436, 376, -15, -278, 25, 147, -280, -275,
	480, -628, 103, 436, 601, 441, 386, 514, 403, -628,
	-625, 277, -627, 584, 341, -266, 498, 560, -625, -628,
	463, 436, -265, -362, -357, 380, 159, 629, 25, 147,
	436, 480, 376, -648, -649, 30, -259, -258, 25, 147,
	480, 563, -262, 231, -261, 25, -147, -127, -146, 441,
	480, -147, 2, 436, 376, -619, -310, -590, 231, 588,
	159, -310, -310, -502, 224, -642, 189, 2, -635, -134,
	273, 5, 10, -555, -134, -392, 630, 630, -546, 617,
	465, 464, 159, 159, 159, 159, 260, 189, 343, 343,
	588, 2, 2, 2, 2, 2, 197, -630, -653, 2,
	2, -320, 224, -377, 361, -614, -393, 522, -320, 189,
	343, 45, -323, 224, 2, -326, 577, -619, 343, -325,
	224, -320, 39, 625, 343, 2, -438, 2, 240, -590,
	343, -503, -339, -320, -498, -339, 480, -313, 39, -463,
	-320, 626, 630, -513, -513, -555, -220, 588, 195, 625,
	-232, 588, 588, 260, -510, 630, -509, 231, -556, -555,
	-135, -555, 439, 195, 260, -555, -614, -303, 2, -320,
	2, 522, 262, -555, -220, 231, -555, -555, -555, -545,
	29, 483, 2, -197, 478, 543, 93, 483, 2, -320,
	522, 124, 240, 83, -642, 189, 2, -289, -617, 189,
	-612, 451, 467, 551, -611, -320, 124, -320, 124, -320,
	124, -320, -320, 2, 2, 2, 2, 2, 88, 2,
	-138, -466, 2, 88, 2, 48, 499, -638, 189, 2,
	541, 2, 541, 2, -289, -289, -289, 356, 503, 281,
	588, -320, -320, -320, -321, -326, 468, 523, 552, 465,
	-466, 2, -657, 2, 195, 189, 2, 522, 240, 522,
	240, 124, 195, 77, 124, 29, 522, 462, 627, 4,
	-267, 630, -293, -246, -412, -545, -413, -412, -247, -246,
	-249, 189, 414, 561, 327, 484, 266, -443, -442, 29,
	-466, -447, 183, 326, -466, -445, -468, 615, 616, -537,
	-539, -395, 354, -240, -240, -240, -382, -493, -466, 403,
	240, -518, -516, -516, -318, -546, 534, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, 282, 228, 486, 53, 231, -466, 538,
	-466, -466, -466, -466, 319, 343, 350, 548, 174, 558,
	143, 354, -671, 516, 42, -473, -241, -400, 625, -487,
	36, 497, 29, -480, 625, 2, -461, -466, -462, -346,
	-344, -289, 615, 616, 617, 618, 619, 620, 605, 606,
	607, 14, 15, 16, 610, 614, 612, 613, 187, 99,
	609, 297, 458, 90, 177, 178, 179, 180, 264, 265,
	17, 18, 19, 35, 608, -397, -396, -396, 626, 576,
	29, 143, 617, 2, 626, 630, 39, 626, -466, -397,
	-479, -475, -396, -486, -485, 585, -433, -434, 593, 306,
	127, 222, 304, -435, 471, -540, 8, -546, 617, -597,
	182, 214, 625, 626, 2, 626, 2, 626, -466, 2,
	626, -466, 2, 626, -466, 2, 626, -466, 2, 626,
	2, 626, 2, -466, -466, -466, -466, -466, -466, -466,
	-396, 8, -540, -540, 534, 534, -540, -540, -540, -532,
	390, 391, 392, 393, 284, 285, 286, 287, 394, 395,
	396, 397, 311, 312, 313, 314, 307, 308, 309, 310,
	315, 316, 317, 318, 205, 206, 207, 208, 201, 202,
	203, 204, -532, -427, 2, -534, -396, 4, 593, 306,
	127, 222, 304, 471, 5, -427, 2, -428, 2, -466,
	-396, -429, -467, -468, 615, 616, 608, -345, -430, 2,
	-466, -397, -466, 60, 276, 540, -431, -466, 195, -396,
	-396, 2, -396, 2, -469, 2, -594, 39, -396, -388,
	630, 195, 39, 4, -388, -388, 625, 626, 630, -426,
	218, 300, 295, 254, -426, -497, -425, 261, -423, 371,
	-423, -423, -491, -304, 623, 631, -546, -491, -490, -489,
	39, -313, 368, -491, -491, 627, 626, -490, 624, -609,
	625, 628, 628, 628, 628, 628, -320, 625, -396, -546,
	627, 505, 2, 626, 255, 255, 255, 255, 255, 361,
	457, 626, 538, -613, -329, -333, 523, 2, 588, -108,
	363, 626, 630, -387, 38, 623, 627, -540, 2, 2,
	-535, 578, 625, 625, -434, 625, 195, -613, -333, 523,
	2, -618, -386, -386, 538, -289, 2, -320, -394, -267,
	159, -394, -394, -267, 630, 159, -303, -324, -329, -331,
	-333, -289, -551, -553, -267, -325, -645, 626, 542, -453,
	-347, 414, 496, 437, 475, 518, 9, 9, 630, -546,
	-212, 466, 327, -302, -302, -302, -302, 630, -646, 97,
	538, 81, 625, 467, -282, 290, 538, -457, 224, 81,
	-568, 97, -306, -569, -289, 75, 557, 403, 193, 157,
	-646, 97, 403, -646, 97, 2, 242, 97, 480, 503,
	625, 29, 63, -502, 43, 43, 29, -626, -627, 277,
	195, 594, 522, 240, 467, 538, 538, -502, -420, -516,
	122, 301, 302, 63, -541, -541, 63, -541, -541, -541,
	588, -323, -502, 467, 538, 538, 538, 424, 424, -275,
	-152, 538, 538, 29, -198, 444, 131, -669, 607, 424,
	277, -627, 538, 195, 630, 43, 43, 29, -626, 195,
	538, -342, -304, 572, 44, 572, 44, 572, 538, 44,
	467, 538, 630, 44, -258, -614, -614, -219, -218, -289,
	5, -385, -261, -555, -260, 325, 77, 538, 538, -15,
	480, -620, -294, 109, 333, 294, 334, 101, 330, 100,
	329, 107, 331, 108, 332, 579, 346, 580, 347, 66,
	328, 305, 335, 500, 336, 581, 348, -295, -296, 150,
	382, 570, 124, -551, -15, -15, 480, 376, 436, 159,
	-643, 231, 29, -632, 231, -510, 231, -510, -334, -289,
	627, -138, -466, -466, -138, -466, -138, 48, 159, 159,
	2, 2, -665, 270, 625, -351, 343, 195, -385, -511,
	252, 630, -393, -611, 159, -551, -419, -418, 343, -325,
	224, 2, 159, -375, 343, 153, 625, 412, 2, 159,
	-305, 224, -290, -289, -438, -269, 526, 159, -416, 568,
	-448, -138, 625, 131, 39, -448, -405, -406, -508, -407,
	-306, 625, -313, -463, -109, -512, 626, 626, 626, -219,
	365, -232, -376, -307, -306, 123, 416, 416, -226, 588,
	-134, -135, 626, 630, -510, 231, 506, -135, -555, -220,
	-220, -510, -510, -320, 189, -555, -220, -220, -220, 2,
	2, 2, 2, -422, -320, -303, -342, -320, 29, 627,
	-553, -553, -333, -329, -422, -303, -422, -303, -422, -303,
	-422, -422, -138, -466, 503, 2, 477, 189, 189, 627,
	-422, 8, -378, 446, 5, 2, 412, 124, 522, 380,
	240, -320, -342, -320, -342, -303, 124, -303, 125, -320,
	4, -502, -413, -247, 362, 266, 484, -445, -446, -468,
	456, 457, -446, 456, 457, 8, 9, 8, 9, -251,
	488, 349, -394, 630, -256, 40, 139, 266, -320, 594,
	155, -466, -466, 538, -671, 516, -473, 155, -466, 319,
	350, 548, 174, 558, 143, 354, 195, 625, -467, -467,
	626, -398, -466, -466, 624, 633, 626, 627, 626, -381,
	630, -379, -466, -396, -396, 626, 627, -396, -385, 624,
	624, 630, 626, -484, -485, 148, -466, 538, 538, 538,
	538, 625, 626, 627, -602, 372, 625, 625, -466, 626,
	626, 626, 626, 39, 630, 630, 630, 626, 630, 630,
	630, 626, 626, 626, 630, 626, 594, 594, 626, 626,
	626, 626, 630, 626, 630, 626, 195, 626, 626, -436,
	387, 626, 11, 12, 615, 616, 617, 618, 187, 619,
	620, 613, 614, 612, 605, 606, 607, 90, 297, 458,
	14, 15, 16, -345, 255, 231, -467, -467, -467, -467,
	626, -471, -472, 195, 189, 39, -431, -431, -431, 626,
	195, -396, 626, 626, 625, -595, 299, 343, 626, -460,
	-459, 586, -507, -389, 2, -497, -315, -546, -460, -460,
	-396, -466, 261, 261, -424, 568, 361, -426, -497, -490,
	-542, -465, -464, 191, 40, 139, 337, 338, 339, 227,
	192, -490, -313, -375, -490, -490, -546, -491, -491, -489,
	626, -610, -542, 626, -390, -500, -589, -381, 627, -546,
	-229, -590, -199, 5, 350, -199, -199, -199, -199, -320,
	-553, 538, 538, 231, 26, 388, -516, 623, 624, 8,
	-546, 625, -540, -540, -540, -553, 195, 195, 231, 361,
	195, -551, 2, -267, -394, -267, -267, -342, -343, -267,
	-267, -267, -417, 588, -543, -452, 555, 86, 414, 534,
	-543, 121, 466, -263, 436, 480, -306, -306, -320, -236,
	-235, -233, -289, 5, -330, 209, 425, -551, 343, -457,
	224, -268, 343, 224, -314, -516, 625, -440, 590, 266,
	266, 568, -306, -314, 266, 224, -306, 224, -314, 2,
	-314, -621, 414, 355, -466, -234, -233, 63, -358, 288,
	412, 344, -264, 436, 480, 376, -138, -138, -138, 625,
	-645, 568, 142, -320, -342, -320, -330, -551, -325, 480,
	376, 436, 340, -336, -541, -541, -418, 480, 376, 436,
	-330, -551, -323, -551, -274, 224, -289, -274, 224, 467,
	-303, 424, 594, 47, -669, 538, 195, -466, -466, -265,
	-138, -138, -138, 625, -304, -266, 436, 5, 224, -306,
	5, -306, 224, 5, -289, -306, -330, -551, -649, 25,
	147, -306, 630, 607, 607, -262, 607, -330, -551, -294,
	382, -555, 350, 564, -303, -619, -310, 467, 538, 538,
	-502, -639, -640, 211, 449, 467, 452, -553, -134, -223,
	588, -134, -217, 235, 617, -616, -555, -289, 577, -289,
	-349, -352, -350, -306, -458, -457, -572, -573, -568, 282,
	240, 557, 254, 175, 97, -237, -238, 590, 588, 159,
	-340, -320, 623, -220, -555, -320, -511, -331, -332, 159,
	-375, 343, -551, 39, 159, 625, 2, 2, -324, 361,
	343, -305, 224, -270, 149, -669, -303, -460, -389, -415,
	-450, 446, 361, -376, 573, -313, -415, -391, 630, 195,
	607, 627, -376, -506, 617, -109, -109, -220, 625, 625,
	-555, 626, 630, 627, 625, 607, 607, -228, 365, -227,
	151, 268, 253, 490, 491, 492, 493, 141, 489, 128,
	324, 236, 528, -510, -555, -226, -135, 195, -510, 231,
	195, -68, 588, 522, -220, 629, 452, -289, -422, -422,
	-422, 477, 477, -289, 189, -385, -316, -546, -303, -320,
	-317, -342, 189, 189, -303, 561, -446, 362, 293, -493,
	-257, 596, -320, 629, -466, -466, 155, 155, -466, -467,
	-467, -466, 155, 195, 625, -466, -477, 34, 34, 626,
	630, -462, -466, -344, 626, 576, -381, -381, 626, 617,
	-546, 629, 626, -475, 152, -466, 532, 306, 222, 304,
	-435, 304, -435, -435, -540, 5, -546, 617, -603, -309,
	625, -289, 586, -380, 367, 626, -518, -516, -466, -466,
	-466, -466, -466, -540, -521, -521, -536, -536, -466, -471,
	-466, -518, -516, -467, -467, -467, -467, -467, -467, -467,
	-467, -467, -467, -467, -467, -467, -467, -467, -467, -467,
	-467, -467, -467, 143, 343, 354, -467, -472, -471, -466,
	-466, -516, 626, 626, 626, -396, -108, 625, 299, -409,
	214, -466, -510, 630, -409, -409, 626, -497, -497, 625,
	-466, 261, 624, 630, 632, 607, 607, -375, 627, -489,
	-490, 624, 626, 630, 626, 630, -449, 39, 626, -546,
	-460, -231, -230, 140, 56, 111, 138, 350, 255, -641,
	588, -553, -553, 467, 364, 5, 8, 623, 624, 627,
	-540, 626, 626, 626, -553, -553, 467, -611, 551, 467,
	29, -553, -267, -267, 123, 327, -466, -209, 588, 590,
	538, 538, 626, 630, 607, 63, 231, 159, 343, 570,
	343, -569, 157, -574, -466, 625, 240, 625, 625, 2,
	-253, -254, -255, 147, 480, 25, -647, 2, 568, 159,
	-267, 159, -267, 592, 626, 630, -358, 625, 625, 538,
	467, -282, 538, 588, -396, -466, -221, 131, -545, -628,
	629, -628, 629, 467, 538, 538, 467, 538, 538, 343,
	159, 588, 173, 173, 594, -274, -466, -466, 189, 538,
	588, -396, 538, -520, 51, 27, 343, -324, -267, 159,
	538, 538, 551, 480, -218, -555, -555, -134, -555, -555,
	350, -15, -330, -551, -325, 480, 376, 436, -618, -618,
	211, -333, -643, -510, -225, 365, -224, 151, 448, 141,
	268, 236, -510, -223, 195, 252, 588, -325, 2, 626,
	626, 630, 630, -575, -268, -320, -305, 240, 240, -312,
	-290, 39, 358, 358, 625, -320, -89, 588, -509, -542,
	-622, 588, 45, -323, 39, 159, -619, -138, -325, -514,
	-515, 5, 39, -320, 159, 361, 343, -271, 275, -669,
	-550, -590, -381, -415, -404, 344, 95, 626, -460, -406,
	-389, -466, 2, 626, -219, -555, -220, -232, -307, 2,
	-556, -555, -555, 630, 625, 607, 607, 607, 607, 607,
	607, 607, -226, -510, -134, -226, -135, -138, 365, -320,
	617, -422, 5, -364, -363, 380, 354, -364, 456, 456,
	362, 183, 271, -256, -304, -466, -466, 155, 34, 34,
	-466, -466, -477, 626, -466, -466, -396, 624, 5, -466,
	626, 626, 8, -466, 626, 627, -604, -289, -466, 626,
	63, 626, 626, 630, 630, 626, 626, 626, 626, 626,
	626, 626, -472, 195, 143, 354, 625, 626, 626, -108,
	-474, 217, 63, -497, -474, -474, -424, -385, -497, -464,
	-304, 623, -304, 623, -546, -542, -500, 625, 627, -230,
	607, -555, -555, -199, 211, -641, -641, 588, -333, 624,
	2, 623, -546, 626, -333, 195, -613, -333, 523, 123,
	189, 221, 221, -306, -306, -235, -543, 522, 456, -274,
	403, -457, 159, 159, -576, 97, -578, 79, 175, 106,
	343, 350, 557, 403, 75, 131, 361, 421, -659, -660,
	-661, 39, 599, 600, 626, -383, -494, -589, 625, -289,
	-383, -385, 343, 511, 131, 361, 343, 131, 361, 583,
	123, 2, 551, 82, -306, -314, -233, -385, -385, -320,
	-330, -551, 167, 626, 630, 607, 2, 617, 617, -330,
	-551, -325, -330, -551, -323, 159, -274, 378, 173, 538,
	-138, -466, 167, 626, -304, 5, 5, 159, -301, 79,
	-306, 5, -306, -324, 123, 588, 467, 538, 538, 361,
	361, 364, -639, -640, -223, 630, 625, 607, 607, 607,
	-223, -556, -134, 2, -375, -365, 242, -306, -573, -570,
	-571, 403, -458, -577, -579, 175, 403, -353, 625, -305,
	-290, 625, -138, 2, -236, 625, -351, 365, 624, -624,
	365, -623, 121, 141, -551, -419, -138, -325, -373, 588,
	-375, 626, 630, 153, -441, 568, -304, -320, 159, -272,
	274, -669, -550, -269, -444, -442, 144, 625, 361, -138,
	-381, 607, 626, 626, 123, 626, -227, -228, -555, -134,
	-555, -555, -555, -134, -555, -226, -510, -510, -69, -70,
	240, 97, 385, -317, 522, 240, 625, 625, -256, -466,
	-466, -466, 626, -381, -546, 617, -598, 380, 626, -493,
	-466, -466, -467, 195, 625, -477, 626, -599, 587, -466,
	-410, -411, -466, 454, 112, 215, -599, -599, 626, -542,
	-542, 2, -555, 364, 2, 538, 623, 2, 195, -553,
	195, 195, 231, -138, 231, 39, 424, -457, -314, -314,
	-318, -311, -289, 175, 224, 350, 583, -440, 266, 625,
	-467, 561, -320, 625, 2, 223, 223, 31, 63, -662,
	135, 244, 626, 630, -495, -300, -289, -466, -495, 626,
	626, 350, 561, 350, 583, -466, 561, -516, 625, -267,
	-267, 626, 626, -466, 538, -545, 104, -543, 2, -628,
	-274, -303, -466, 189, -466, 538, 5, -267, -318, -267,
	-267, -301, 551, 360, -330, -551, -325, -644, 523, 474,
	552, 468, 198, 455, -644, 189, -224, -225, -555, -134,
	-134, -223, 39, -359, -360, 2, -575, 266, -311, 266,
	233, 158, -383, 625, 625, -385, -658, 588, 626, -349,
	-237, -90, -91, 539, -509, 630, 625, 607, -375, 327,
	123, 39, 5, 625, 625, -289, 361, 625, -304, -284,
	96, -669, -550, -270, -415, 344, -385, 97, -444, -473,
	-220, 625, -220, 626, -226, 630, 29, 625, 29, 625,
	-320, -342, -396, -396, 626, -381, 63, 630, 626, 626,
	-467, -477, 626, -600, -601, -309, 630, 625, 625, 481,
	624, 624, -553, 2, -553, -553, -553, 467, -274, 403,
	-289, -569, -578, -311, 343, -238, 568, 588, -466, -467,
	-291, 625, -466, 625, 625, 39, 131, 244, 136, 229,
	-456, -663, 105, 512, 232, -494, -256, 626, -455, 568,
	421, -467, -301, -383, 625, 625, 625, 607, 195, -138,
	625, -520, -267, -324, 607, 538, 2, 2, 195, -618,
	626, -634, 419, -138, -237, 625, -238, -354, 84, 98,
	132, 223, 199, 241, 503, 509, 29, -354, 626, -383,
	-383, 626, -355, 361, 123, 327, 626, 39, -91, 9,
	-623, -624, -466, 39, 123, -138, -514, -383, -320, -383,
	361, -276, -275, 283, -550, -271, 626, -314, -415, -556,
	-70, -385, -385, 626, 626, -605, 412, 457, 216, -396,
	-382, 626, 630, 39, -411, 2, 2, 2, -641, -333,
	424, -268, 159, 218, 626, -580, 298, -289, 626, -419,
	-419, 39, 136, 229, -361, -357, 625, -257, -495, -238,
	218, -320, -629, 568, 626, -367, -366, -363, -369, -368,
	-363, -396, -543, 104, 378, -396, -301, -134, -553, -553,
	361, -636, 196, -635, 5, 10, -355, -384, -496, -306,
	-455, 626, 626, 85, 123, -365, -138, 626, -138, 2,
	-373, 626, 626, -441, 626, -320, -273, -557, 424, 426,
	-669, -272, -460, 144, 626, 626, 626, 626, -606, -607,
	53, 554, 113, -466, -606, -606, -601, -603, 195, 175,
	-454, 597, -581, -584, -583, 604, 487, 196, 379, 626,
	511, 582, 626, 626, -662, -385, -454, -375, -466, -455,
	626, 630, 573, 626, 630, 573, 626, 195, 626, -267,
	-641, -267, -644, -222, 588, 48, -283, -282, 626, 630,
	-456, -455, -361, 402, 137, 147, -359, -658, -455, 625,
	-456, 625, -281, -280, -669, -536, -284, 144, 344, 561,
	-220, -608, 157, -607, 399, 188, 456, 399, 188, -608,
	-608, -553, -311, -238, 58, -583, 604, -584, 604, 561,
	137, -460, 626, -580, -238, -366, 231, -368, 195, 378,
	195, 464, -635, 31, -238, -496, -361, -456, -238, 457,
	457, 2, -237, -355, -456, -383, -361, -383, -277, -278,
	-279, -385, -276, 344, 561, 480, 113, 214, 533, 327,
	34, 607, -582, 327, 443, 67, 480, -582, -581, 625,
	625, -553, 365, -238, -361, -460, 2, -355, -361, 626,
	-238, 626, -552, 376, -273, 480, -405, 456, 369, -607,
	-466, 24, 350, 131, -662, -396, -396, -267, -219, 625,
	-460, -238, -283, -238, -455, -460, -456, -669, -281, -405,
	-460, 626, 626, -219, -460, -460, -456, -361, -551, -277,
	-460, -356, -357, 538, 626, -361, -238, 625, -238, -460,
	-396, -460, 626, -356,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 578, 579, 581, 582, 583,
	585, 586, 588, 590, 592, 593, 594, 596, 597, 599,
	600, 601, 602, 603, 605, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 694, 696, 0, 1531, 1533, 1535, 1537, 0, 0,
	-2, 0, 40, 41, 43, 45, 0, -2, 355, 357,
	359, 361, 0, 393, 395, 396, 398, 400, 401, 402,
	404, -2, 0, 511, 512, 514, 516, -2, 0, 1116,
	1118, 1120, 0, 682, 684, 0, 1123, 1125, 1127, 0,
	0, 706, 707, 0, 1645, -2, 698, 700, 702, 704,
	781, 783, 785, 787, 789, 791, 793, 795, 797, 799,
	800, 802, 804, 806, 808, 810, 811, 813, 815, 817,
	818, 820, 821, 823, 825, 827, 829, 831, 833, 835,
	837, 839, 841, 843, 845, 847, 849, -2, 852, 853,
	854, 856, -2, -2, 0, -2, -2, -2, 1549, 47,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 455, 457, 459, 461, 463, 466, 468, 470, 1703,
	518, 520, 522, 524, 526, 528, 530, 0, 0, -2,
	1717, 0, 0, 936, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 119, 120, 121, 122, 123, 124,
	125, 84, 85, 86, 88, 89, 90, 91, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 116, 117,
	82, 0, 0, 1676, 1678, 1680, 1682, -2, 0, 0,
	5, 9, 11, 13, 15, 17, 19, 21, 23, 25,
	27, 29, 33, 35, 37, 580, 584, 587, 589, 591,
	595, 598, 604, 606, 608, 563, 564, 567, 2415, 2433,
	2434, 2435, 2438, 2439, 2440, 2441, 2442, 2443, 2923, 3004,
	3005, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893,
	2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 565,
	566, 1310, 0, 647, 645, 2400, 648, 2709, 650, 652,
	505, 506, 507, 508, 509, 510, 0, 675, 661, 1715,
	676, 678, 679, 680, 681, 642, 640, 0, 680, 675,
	2470, 673, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 517, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 434, 1369, 1370, 1371, 1514,
	1515, 2760, 1556, 0, 251, 695, -2, -2, 2888, -2,
	735, 736, -2, -2, 750, 754, 745, 2892, 0, 2763,
	2746, -2, 757, 1532, 1534, 1536, 857, 858, 859, 2419,
	863, 861, 873, 874, 875, 0, 892, -2, 0, 2466,
	2731, -2, -2, 893, 894, -2, -2, -2, -2, 0,
	0, 0, 0, 0, 42, 44, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, -2, -2, -2, -2, 0, 0, 2810, 2525, 2368,
	2435, 2371, 2366, 356, 358, 360, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 394, 397, 399, 403, -2,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1190, 1182, 1183, 1436, 0, 0, 0,
	-2, 513, 515, 568, 569, 0, 1704, 1704, 576, 577,
	-2, 0, 0, 0, 0, 326, 316, 1117, 1119, 1121,
	1122, 0, 0, 0, 0, 0, 683, 685, 0, 0,
	2804, 293, 1124, 1126, 1128, 1129, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 699, 701, 703, 705, 782,
	784, 786, 788, 790, 792, 794, 796, 798, 801, 803,
	805, 807, 809, 812, 814, 816, 819, 822, 824, 826,
	828, 830, 832, 834, 836, 838, 840, 842, 844, 846,
	848, 850, 851, 900, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, 0, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 1005,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	1096, 0, 0, 903, 906, 907, 908, 909, 910, 911,
	0, 978, 1003, 1004, 1014, 855, 0, 1350, 1705, 1558,
	1539, 1553, 1558, 1541, 1542, 1543, 1544, 1545, 1550, 1552,
	1546, 1547, 1548, 48, 50, 52, 54, 56, 58, 60,
	62, 64, 66, 68, 70, 456, 458, 460, 462, 464,
	467, 469, 471, -2, 1674, 1675, 519, 521, 523, 525,
	527, 529, 531, 686, 0, 689, 0, 905, 688, -2,
	0, 1709, 1709, 1709, 0, 0, 1675, 1673, 0, 692,
	693, 761, 762, 1982, 0, 0, 0, 0, 0, 0,
	0, 0, 2242, 2070, 0, 763, -2, 2103, 2105, 2863,
	2682, 2888, 2241, 2107, 2108, 2109, 2110, 2111, 0, 2113,
	2114, 2115, 2116, 2117, 2118, 0, 2120, 0, 2125, 2126,
	2127, 0, 2870, 2345, 2429, -2, 0, 0, 2876, 2425,
	0, 2208, 2143, -2, -2, 2452, 2431, 1914, 1915, 1916,
	1917, 1918, -2, -2, 2906, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 0, 2851, 2871, 2872,
	2877, 2879, 2873, 2860, 2168, 2539, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1941,
	1950, -2, -2, -2, -2, -2, -2, -2, 2864, 2865,
	2882, 2885, 2891, 2896, 2897, 2869, 2878, 2905, 2907, 2908,
	2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918,
	2919, 2920, 2921, 2922, 1942, -2, -2, -2, -2, 0,
	1692, 2724, 1695, 1310, 1693, 1677, 1679, 0, 1681, 0,
	0, 0, 1686, 1712, 1710, 0, 1761, 1690, 1691, 1784,
	1784, 1808, 0, 1789, 0, 1808, 1704, 1835, 0, 1795,
	2751, 2144, 2145, 0, 2435, 2430, -2, -2, 2903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 0, 649, 651, 0, 0, 0, 674, 1714, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 438, 439,
	440, 441, 2871, 0, 0, 0, 446, 0, 448, 449,
	450, 451, 452, 453, 454, 221, 2871, 536, 561, 0,
	221, 2871, 539, 221, 2871, 542, 0, 545, 1434, 221,
	2871, 548, 2396, 221, 2871, 551, 553, 2404, 221, 2871,
	557, 2411, 2409, 558, 0, 560, 241, 237, 238, 239,
	240, 1525, 1526, 1527, 1528, 0, 1555, 1435, 697, 0,
	723, 0, 733, 734, 2859, -2, 0, 2772, 738, 739,
	-2, 741, 1559, 1563, 1564, 1565, 1566, 1567, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 730, 731, 748,
	749, 755, 758, 0, 866, 862, 876, 0, 891, 0,
	892, 892, 2385, 2376, 2377, 0, 0, 892, 892, 0,
	0, 895, 896, 897, 898, 899, 81, 0, 2871, 1835,
	83, 0, 2390, 2460, 2461, 2462, 2463, 2464, 2904, 2924,
	2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934,
	2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944,
	2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954,
	2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964,
	2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974,
	2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984,
	2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994,
	2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 2906,
	87, 0, 2871, 92, 0, 2871, 0, -2, 105, 0,
	118, 0, 145, -2, -2, -2, 126, 0, 2871, 0,
	2365, -2, 0, 233, 317, 318, 319, 0, 624, 0,
	633, 329, 330, 2448, 2449, 2456, 2457, 2458, 2459, 0,
	726, 2242, 0, 0, 1154, -2, 0, 1363, 1365, 1365,
	0, -2, 0, 0, 0, 1106, 2362, 2367, 1107, 1108,
	2386, 1109, 2372, 0, 364, 365, 366, 367, 368, 0,
	369, 2871, 371, 372, 0, 374, 375, 2871, 377, 378,
	0, 380, 0, 382, 0, 273, 277, 2871, 2871, 407,
	410, 0, 412, 413, 0, 415, 0, 0, 0, 419,
	-2, 435, 0, 432, 422, 423, 425, 426, 427, 428,
	429, 0, 475, 473, 2401, 0, 0, -2, 2871, 0,
	1151, 0, 0, 1414, -2, 0, 1356, 0, 1421, 2871,
	1417, 0, -2, 0, 1702, 2871, 1576, 1186, 1187, 1188,
	1189, 1847, 502, 0, 1609, 0, 1611, 0, 1631, 1841,
	1784, 0, 0, 1846, 0, -2, 621, 2418, -2, 571,
	0, 572, 0, -2, 0, 343, 0, 0, 1132, 1134,
	1135, 1137, 1138, 1141, 1142, 1143, 1144, 0, 1146, 1821,
	294, 296, 0, 0, 0, 0, 1131, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 0, 0, 708, 0,
	0, 901, 902, 0, 0, 918, 919, 920, 0, 343,
	2764, 2719, 2561, 927, 0, 930, 933, -2, 0, 0,
	0, 0, 940, 0, 945, 946, 947, 0, -2, 0,
	954, 956, 1115, 958, 0, 0, 960, 0, 964, 0,
	967, 0, 969, 0, 971, -2, -2, -2, 979, 980,
	-2, 985, -2, 0, 989, -2, 0, 992, 0, 995,
	-2, 0, 1005, 1001, 1002, 0, 0, 0, 0, 1022,
	1023, 0, 1032, 0, 1035, 1036, 1037, 0, 0, 1042,
	1043, 0, 1045, 1046, 1047, 1049, 1050, 1051, 0, 2840,
	2769, 2525, 0, 1059, -2, 1065, 1067, 0, -2, 0,
	1083, 0, 1087, 0, 0, 1095, 0, 0, 904, 0,
	912, 913, 221, 1839, 1538, -2, 1540, 0, -2, 0,
	687, 0, 691, 1734, 1660, 1657, 0, 1731, 1732, 1661,
	0, 0, 0, 1668, 0, 1707, 1708, 0, 0, 0,
	1647, 1648, 0, 0, 0, 0, 2247, 2248, 2249, 2250,
	2263, 2251, 2252, 2262, 2260, 2261, 2253, 2254, 2259, 2273,
	2274, 2264, 2265, 2255, 2268, 2266, 2267, 2269, 2270, 2271,
	2272, 0, 0, 2278, 0, 2256, 2257, 2258, 2286, 0,
	0, 2287, 0, 2289, 0, 2279, 2275, 2276, 2277, 0,
	2049, 2051, 2353, 0, 0, 0, 2285, 2280, 2281, 1987,
	1988, 1989, 1990, 1991, 2024, 2028, 2029, 0, 0, 2104,
	2350, 2349, 2106, 0, 0, 2301, 0, 2119, -2, 0,
	2242, 2296, 0, 0, 2128, 2129, 2130, 0, 0, 2301,
	0, 0, 2344, 2140, 2141, 1979, 0, 0, 2210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1928, 1927, 0,
	1929, 0, 1930, 1931, 1938, 1951, 0, 0, 0, 0,
	1955, 0, 0, 0, 0, 0, 0, 0, 2325, -2,
	0, 0, 0, 0, 1943, 0, 0, 1694, 0, 0,
	1765, 2354, 2358, 2359, 1765, 1765, 0, 0, 2302, 1832,
	1832, 0, 0, 1827, 1827, 1827, 1825, 1808, 0, 1808,
	1818, 0, 1808, 1808, 0, -2, 1789, 0, 0, 1818,
	0, 1802, 609, 611, 613, 615, 616, 617, 619, 1836,
	1837, 0, 0, 0, 0, 2436, 0, 0, 0, 0,
	2408, 0, 0, 2421, 0, 0, 2395, 389, 390, 0,
	0, 0, 2822, 2763, 0, -2, 654, 677, 1704, 0,
	2304, 1862, 1866, 0, 1868, 1869, 1870, 1871, 1872, 0,
	0, 1863, -2, 1939, 1941, 1962, 2453, 2454, 2455, 1922,
	1923, 1924, 1925, 1926, 1934, 1921, 1921, 1921, 1932, 1961,
	1953, 1961, 1957, 1907, 1908, 1909, 1944, 1945, 1946, 1947,
	0, 2822, 2763, 0, -2, 0, 664, 0, 0, 1642,
	436, 0, 443, 444, 445, 0, 532, 0, 219, 220,
	0, 221, 2871, 537, 0, 540, 0, 221, 2871, 2360,
	546, 0, 549, 0, 0, 555, 0, 0, 0, 0,
	0, 221, 1644, 0, 0, 0, 0, -2, 743, 751,
	752, 753, 0, 1561, 0, 1568, 772, 773, 774, 1570,
	1571, 0, 1573, 746, 775, 776, 777, 778, 779, 780,
	0, 2374, 2375, 2380, 2381, 0, 0, 744, 765, 747,
	0, 759, 869, 864, 865, 877, 878, 0, 0, 2378,
	2379, 0, 0, 883, 884, 127, 1511, 0, 0, 174,
	0, 1511, 1511, 0, 0, 0, 0, 202, 0, 0,
	1220, 0, 0, 0, 0, 145, 159, 170, 139, 140,
	141, 0, 0, 0, 0, 0, 0, 93, 1332, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 107, 108, 0, 0, 113, 114,
	0, 158, 0, 0, 0, 0, 0, 1606, 0, 149,
	145, 0, 0, 144, 146, 129, 0, 0, 145, 160,
	172, 0, 208, 210, 1217, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 243, 0, 623, 625, 0, 0,
	0, 0, 631, 0, 634, 0, 724, 728, 729, 0,
	0, 725, 727, 0, 0, 1357, 0, 0, 0, 1701,
	0, 0, 0, 0, 2871, 1509, 0, 1494, 0, 1821,
	2612, -2, -2, 294, 1821, 1105, 0, 0, 2436, 2370,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 411, 414, 416, 417, 418, 0, 1413, 0, 424,
	465, 1279, 2871, 0, 0, 492, 487, 0, 489, 0,
	0, 0, 1331, 2871, 1329, 2405, 0, 1354, 0, 1310,
	2871, 2403, 0, 0, 0, 1422, 2445, 1431, 1435, 1594,
	0, 504, 0, 1612, 1614, 0, 0, 1842, 0, 1844,
	1784, 1704, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 1145, 300, 0, 1820, 0, 0, 331,
	1821, 294, 2737, 0, 1130, 343, 343, 1821, 710, 1821,
	712, 0, 0, 921, 922, 0, 343, 343, 343, 928,
	929, 931, 932, -2, -2, -2, -2, 934, 935, 1029,
	0, 0, 0, 1028, 948, 0, 950, 953, 957, 0,
	1099, 2746, 2763, 2822, 1113, 1029, 2525, 1029, 2525, 1029,
	2525, 1029, 1029, 973, 1017, 1025, 984, 991, 0, 986,
	990, 993, 996, 0, 998, 1006, 0, -2, 0, 1009,
	0, 1011, 0, 1013, 1029, 1030, 1033, 0, 1041, 1044,
	0, 1052, 1053, 1054, 1055, 2416, 1056, 1057, 1058, -2,
	1062, 1063, 0, 1074, 1079, 1080, 1076, 0, 0, 0,
	0, 0, 0, 1090, 1091, 0, 0, 1098, 0, 914,
	1349, 0, 1551, 1734, 1660, 690, 1651, 1733, 1652, 1659,
	1662, 0, 0, 1664, 0, 1666, 0, 1729, 1730, 1737,
	1738, 0, 1748, 1749, 1741, 0, -2, 0, 0, 1744,
	1745, 1670, 0, 1687, 1688, 1689, 1718, 1721, 1450, 0,
	3004, 1983, 1857, 1984, 1985, 2389, 0, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, -2, -2, -2,
	-2, -2, -2, -2, -2, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, -2, -2, -2, 2025,
	2026, 2027, -2, 2288, 2290, 0, 2353, 0, -2, 0,
	-2, -2, -2, -2, 2046, 0, 2048, 2053, 2055, 2057,
	0, 0, 0, 0, 2352, 2067, 2336, 2337, 0, 0,
	2244, 2245, 2246, 2052, 0, 2071, 2351, 2348, 0, 0,
	2282, 0, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 0, 2300, 1717, 2132, 0,
	0, 0, 0, 2139, 2124, 2298, 0, 2297, 0, 0,
	0, 2308, 0, 2343, 2339, 0, 2387, 1978, 1965, 1966,
	1967, 1968, 1969, 1970, 1980, 0, 2384, 2422, 2428, 2218,
	0, 0, 0, 2169, 2170, 2171, 2172, 2173, 0, 2175,
	2176, 0, 2178, 2179, 0, 2181, 2182, 0, 2184, 2185,
	2186, 2187, 2188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 0, 0, 2190, 0, 2311, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2192, 0, 2194, 2302,
	2322, 0, 0, 2072, 0, 0, 0, 0, 0, 2197,
	2302, 2330, 0, 0, 0, 0, 0, 2302, 0, 2335,
	0, 2204, 0, 2206, 937, 938, 1696, 0, 0, 1852,
	0, 0, 0, 2357, 1852, 1852, 0, 1760, 0, 0,
	1828, 1829, 1830, 1831, 0, 0, 1832, 0, 1822, 1826,
	1823, 1824, 1818, 1781, 0, 0, 2391, 1818, 1787, 1817,
	0, 1310, 1807, 1818, 1818, 0, -2, 1791, 1808, 0,
	0, 610, 612, 614, 618, 620, 0, 0, 1717, -2,
	0, -2, 345, 1309, 0, 0, 0, 0, 0, 0,
	644, 646, 0, 0, 552, 0, 0, 660, 0, 638,
	0, 641, 0, 1853, 1856, 0, 0, 1867, 1873, 1874,
	0, -2, 0, 0, 1963, 0, 0, 0, 0, 0,
	672, 0, 675, 0, 0, 0, 447, 562, 221, 534,
	0, 221, 221, 543, 0, 0, 221, 554, 221, 2412,
	221, 2410, 242, 559, 1643, 254, 0, 732, 0, 1560,
	1569, 0, 769, 0, 771, 0, 2382, 2383, 0, 760,
	0, 867, 0, 879, 880, 881, 882, 0, 0, 0,
	0, 1510, 0, 0, 1457, 0, 0, 178, 2871, 0,
	223, 0, 0, 1272, 2397, 0, 1262, 0, 0, 2547,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 142, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 1334,
	1336, 1343, 1345, 0, 1339, 1340, 0, 1342, 1344, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	1366, 0, 0, 1367, 1368, 1582, 1583, 0, 1605, 1606,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 2364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 626, 627, 628, 629, 339, 336,
	338, 630, 635, 0, 636, 0, 0, 0, 0, 1359,
	0, 1409, 1407, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 0,
	0, 0, 0, -2, 1361, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 334, 2363, 2373,
	0, 1139, 1140, 370, 373, 376, 379, 260, 0, 0,
	409, 420, 0, 0, 1192, 1164, 0, 0, 474, 343,
	0, 0, 488, 492, 2414, 1149, 1327, 1330, 0, 1310,
	2871, 1377, 0, 0, 0, 0, 0, 0, 1420, 0,
	0, 2871, 2392, 2444, 2445, 1596, 1606, 0, 1852, 0,
	1629, 1615, 0, 0, 0, 1629, 1633, 1634, 1636, 1637,
	0, 0, 1843, 1849, 570, 622, 1704, 1704, 343, 341,
	2685, 0, 0, 1618, 1620, 0, 0, 0, 286, 0,
	297, 1821, 295, 0, 300, 0, 0, 1821, 294, 0,
	486, 709, 714, 916, 0, 343, 924, 925, 926, 975,
	1019, 1027, 1078, 939, 941, 942, 943, 0, 0, 0,
	1114, 1110, 1111, 1112, 959, 1029, 962, 1029, 965, 1029,
	968, 970, 988, 994, 1007, 1000, 1008, 0, 0, 0,
	1021, 0, 1039, 0, 1048, 1061, 0, 0, 0, 0,
	0, 0, 0, 1084, 1085, 1086, 1088, 1093, 1092, 1097,
	915, 1840, 1655, 1656, 1658, 0, 1667, 0, 0, 1743,
	-2, -2, 1742, 1746, 1747, -2, -2, -2, -2, 1663,
	0, 1672, 1669, 0, 1728, 1448, 1449, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 2068, 0, -2, 2047,
	2050, 2054, 2056, 2058, 0, 0, 0, 0, 0, 0,
	2291, 0, 2293, 2069, 2346, 2349, 2284, 0, 2240, 0,
	0, 1716, 1717, 1717, 0, 2138, 0, 2299, 0, 2306,
	2307, 0, 2131, 0, 2340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2142, 0, 0, 0, 0, 2174,
	2177, 2180, 2183, 0, 0, 0, 0, 2163, 0, 0,
	0, 2167, 1933, 1919, 0, 1961, 1959, 1960, 1954, 1961,
	1958, 1911, 0, 1910, 0, 2189, 0, 2191, 2193, 0,
	0, 2195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 2076, 2077, 2097,
	2196, 2328, 2329, 0, 0, 0, 0, 0, 0, 2202,
	0, 2334, 2203, 2205, 1704, 0, 1697, 0, 1762, 1751,
	1851, 0, 2355, 1821, 1764, 1766, 2356, 2394, 1751, 1751,
	0, 2303, 0, 0, 1812, 0, 0, 0, 1814, 1785,
	0, 0, 1779, 0, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1786, 1310, 1816, 1788, 1792, 2422, 0, 1818, 0,
	1803, 0, 1805, 1838, 0, 1797, 1800, 0, 0, 2437,
	1852, 0, 383, 391, 392, 384, 385, 386, 387, 0,
	1497, 0, 0, 0, 0, 0, 2305, 0, 1858, 0,
	1864, 0, 0, 0, 0, 662, 0, 0, 0, 0,
	0, 1641, 442, 533, 221, 538, 541, 2361, 221, 547,
	550, 556, 250, 0, 722, -2, 767, 768, 770, 0,
	766, 872, 868, 175, 1511, 0, 0, 0, 1453, 0,
	1175, 0, 1170, 1171, 1455, 1459, 1465, 1468, 0, 180,
	2871, 192, 0, 2871, 0, 1236, 0, 0, 0, 0,
	0, 0, 1513, 0, 0, 2871, 221, 2871, 221, 196,
	198, 201, 0, 207, 203, 0, 1172, 0, 1224, 0,
	0, 1227, 128, 1511, 0, 0, 131, 135, 147, 0,
	0, 0, 157, 0, 0, 0, 1470, 1474, 1482, 0,
	0, 0, 1337, 1338, 1341, 1347, 94, 0, 0, 0,
	1478, 1480, 1486, 106, 109, 2871, 2406, 111, 2871, 0,
	1452, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	133, 137, 148, 0, 1488, 130, 0, 236, 0, 0,
	226, 221, 2871, 0, 228, 0, 229, 230, 244, 0,
	0, 0, 0, 0, 0, 632, 0, 1152, 1153, 1408,
	0, 1352, 1353, 0, 1364, 1358, 0, 0, 0, 0,
	0, 1490, 1491, 0, 0, 0, 1509, 1506, 1821, 256,
	0, 1821, 264, 0, 2369, 0, 278, 406, 0, 0,
	0, 0, 1191, 1290, 1193, 1195, 1196, 1197, 223, 0,
	2445, 1262, 2601, 2445, 0, 0, 1159, 0, 0, 0,
	480, 476, 0, 485, 491, 490, 496, -2, 0, 0,
	0, 0, -2, 0, 0, 1424, 1418, 1419, 0, 0,
	0, 0, 2871, 1598, 1606, 0, 1702, 1717, 503, 1607,
	1629, 0, 0, 0, 1617, 1613, 1610, 1852, 0, 0,
	0, 0, 0, 1845, 1848, 573, 574, 320, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 298, 0, 301,
	0, 0, 0, 306, 307, 308, 309, 310, 311, 0,
	0, 0, 0, 300, 332, 288, 1821, 0, 300, 0,
	0, 711, 0, 0, 923, 0, 949, 952, 961, 963,
	966, 1010, 1012, 1029, 0, 1040, 1068, 2393, 1069, 1214,
	0, 1214, 0, 0, 1089, 1665, 0, 1740, 1671, 1722,
	1723, 0, 1450, 0, 1986, 2031, 0, 0, -2, 0,
	0, 2035, 0, 0, 0, -2, 0, 0, 0, 2292,
	2294, 0, 2348, 2283, 2133, 0, 0, 0, 2137, 2121,
	2122, 0, 2243, 2309, 2338, 2342, 0, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 0, 2388, 2423, 2427, 2216, 2217,
	2221, 2402, 0, 0, 0, 2146, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1956, 0, 0, 2310, 2321,
	2323, 2073, 2074, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, -2, -2, -2, 2091, 2092, 2093, -2,
	-2, -2, 2098, 0, 0, 0, 2324, 2326, 2327, 2331,
	2332, 0, 2199, 2200, 2201, 2333, 0, 1704, 1698, 1759,
	0, 1850, 1763, 0, 1759, 1759, 1711, 1810, 0, 0,
	1834, 0, 1782, 0, 1783, 0, 0, 1815, 0, 1790,
	1793, 1794, 1804, 0, 1796, 0, 1799, 0, 2133, -2,
	344, 346, 348, 0, 351, 352, 0, 0, 0, 653,
	0, 1497, 1497, 0, 655, 639, 0, 0, 1860, 0,
	0, 1936, 1940, 1964, 666, 668, 0, 0, 2822, 2763,
	0, 665, 535, 544, 252, 0, 1819, 0, 0, 0,
	0, 0, 204, 0, 0, 0, 0, 0, 0, 222,
	0, 1271, 0, 1234, 0, 0, 1261, 0, 0, 1277,
	182, 183, 184, 0, 0, 0, 0, 194, 0, 0,
	190, 0, 200, 206, 205, 0, 1221, 0, 0, 0,
	0, 1458, 0, 0, 0, 154, 155, 156, 0, 161,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1588, 1589, 0, 1579, 151, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 1447, 246, 0,
	0, 0, 0, 0, 340, 335, 337, 0, 1351, 1411,
	1412, 1360, 1471, 1475, 1483, 0, 0, 0, 0, 0,
	680, 1508, 0, 264, 262, 0, 265, 0, 268, 269,
	0, 0, 264, 258, 0, 0, 0, 1310, 421, 1162,
	1278, 0, 0, 1280, 1198, 1202, 0, 2445, 2445, 0,
	2399, 0, 1160, 0, 0, 1279, 472, 0, 479, 0,
	493, 0, 0, 1331, 0, 0, 1355, 1380, 1310, 0,
	1423, 1425, 0, 1433, 0, 0, 0, 1600, 1606, 0,
	1593, 1594, 1736, 1608, 1627, -2, 0, 0, 1717, 1635,
	1632, 1638, 1639, 0, 0, 0, 323, 0, 1619, 1621,
	0, 1133, 1136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 300, 1821, 290, 1821, 327, 0, 917,
	944, 1020, 1038, 1070, 1213, 0, 0, 1072, 0, 0,
	1739, 1726, 1727, 1724, 1450, 2033, 2037, 0, 0, 0,
	2039, -2, 0, 2061, -2, -2, 2295, 2347, 2112, 1717,
	2134, 2136, 2123, 2341, 1981, 0, 2223, 2220, 0, 2207,
	0, 2158, 2159, 0, 0, 2162, 2164, 2165, 2166, 1920,
	1913, 1912, 2320, 0, 0, 0, 0, 2198, 1699, 0,
	2212, 0, 0, 1767, 2212, 2212, 1811, 0, 1813, 1780,
	1768, 0, 1777, 0, 2423, 1806, 1798, 0, 0, 349,
	0, 353, 354, 388, 0, 656, 657, 0, 0, 1854,
	1859, 0, 1865, 1935, 0, 0, 0, 0, 0, 253,
	0, 870, 871, 176, 177, 1176, 1174, 1462, 1466, 1463,
	0, 179, 0, 0, 1235, 0, 1238, 0, 0, 0,
	0, 1245, 1262, 0, 0, 0, 0, 0, 0, 1264,
	0, 1263, 0, 0, 1294, 0, 1438, 1445, 0, -2,
	0, 0, 0, 186, 212, 0, 0, 0, 0, 215,
	1512, 188, 0, 0, 221, 221, 1173, 0, 0, 1454,
	1456, 1469, 0, 0, 0, 0, 164, 0, 0, 1472,
	1476, 1484, 1479, 1481, 1487, 0, 112, 0, 1590, 0,
	150, 0, 0, 0, 1489, 234, 235, 0, 221, 0,
	221, 227, 221, 1447, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 1493, 255, 0, 0, 0, 0, 0,
	257, 333, 264, 408, 0, 1223, 0, 1290, 1282, 1283,
	1284, 0, 1194, 1289, 1291, 0, 0, 1199, 0, 0,
	0, 0, 1179, 1161, 0, 1192, 1164, 0, 477, 494,
	0, 497, 0, 500, 1150, 1328, 1372, 1310, 1375, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 1602,
	1606, 0, 1595, 1596, 1629, 1735, 0, 0, 0, 1616,
	1736, 0, 342, 343, 0, 343, 302, 0, 303, 304,
	305, 312, 313, 314, 315, 289, 292, 300, 713, 715,
	0, 0, 721, 1212, 0, 0, 0, 0, 1725, 2041,
	-2, -2, 2062, 0, 2424, 2426, 1717, 0, 2209, 1719,
	0, 0, -2, 0, 0, 0, 1700, 1683, 0, 1758,
	1750, 1752, 1754, 2749, 2520, 2870, 1684, 1685, 1833, 0,
	0, 1801, 350, 1496, 658, 0, 0, 1861, 0, 663,
	0, 0, 0, 860, 0, 0, 1464, 181, 0, 0,
	1239, 1240, 2398, 1242, 0, 1244, 1246, 1247, 1164, 0,
	1251, 0, 2447, 0, 1256, 1259, 1260, 0, 0, 1273,
	1295, 0, 1304, 0, 1440, 1450, 1444, 0, 1442, 1306,
	0, 185, 214, 187, 216, 211, 0, 1447, 0, 189,
	199, 0, 0, 132, 0, 0, 2514, 167, 165, 163,
	110, 1451, 153, 0, 134, 0, 236, 245, 1446, 247,
	231, 221, 0, 0, 1473, 1477, 1485, 0, 1500, 1501,
	1502, 1503, 0, 0, 0, 0, 266, 0, 267, 270,
	271, 0, 0, 1164, 1222, 1163, 1281, 0, 1292, 1164,
	0, 0, 0, 0, 0, 0, 1166, 0, 1165, 0,
	0, 478, 481, 0, 484, 0, 0, 0, 0, 0,
	1379, 0, 1426, 1424, 0, 1432, 0, 0, 0, 1578,
	0, 0, 1597, 1598, 501, 1622, 0, 0, 1629, 1640,
	322, 0, 325, 299, 291, 0, 717, 0, 719, 0,
	1071, 1073, 0, 0, 2135, 2227, 0, 0, 2160, 2161,
	-2, 0, 2101, 2211, 2213, 0, 0, 0, 0, 0,
	1769, 1778, 1497, 1855, 670, 667, 669, 0, 1460, 0,
	1467, 223, 1237, 1241, 0, 1248, 0, 0, 0, 1252,
	1314, 0, 0, 1331, 1331, 1265, 0, 0, 1298, 1299,
	1219, 0, 1300, 1301, 1302, 1439, 1728, 1445, 1164, 0,
	0, 213, 218, 0, 0, 0, 0, 0, 0, 152,
	0, 225, 248, 1447, 0, 0, 1504, 1505, 0, 0,
	263, 282, 0, 1373, 1166, 0, 1293, 1200, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1201, 1306, 0,
	0, 1270, 1177, 0, 1180, 0, 1162, 0, 482, 483,
	498, 0, 499, 0, 0, 1380, 0, 0, 1433, 0,
	0, 1585, 1577, 1606, 1599, 1600, 1852, 0, 1630, 0,
	716, 0, 0, 1081, 1082, 0, 0, 0, 0, 2222,
	1720, 2102, 0, 0, 1753, 1755, 1756, 1757, 659, 0,
	1461, 193, 0, 1308, 1250, 1319, 0, 0, 0, 0,
	0, 1266, 1296, 1297, 1294, 1218, 0, 1443, 1441, 1275,
	1308, 1310, 191, 0, 1306, 0, 1228, 0, 0, 1231,
	0, 0, 168, 2514, 166, 0, 221, 637, 1497, 221,
	0, 285, 0, 276, 274, 275, 1158, 0, 1286, 1288,
	1304, 1306, 1219, 0, 1181, 1223, 1179, 495, 1374, 1378,
	1376, 1416, 1306, 0, 1304, 0, 1592, 1606, 1586, 1587,
	0, 1602, 0, 0, 343, 718, 720, 2219, 2239, 2228,
	-2, 2825, 2521, 0, 2239, 2239, 2214, 2215, 0, 0,
	1164, 0, 1253, 1315, 1316, 0, 1311, 1312, 1313, 2446,
	1254, 1255, 1257, 1258, 1852, 0, 1305, 1314, 217, 1164,
	1225, 0, 0, 1226, 0, 0, 171, 0, 173, 249,
	1495, 1498, 0, 272, 0, 0, 1155, 1157, 1164, 0,
	1219, 1304, 1164, 0, 0, 0, 1164, 1166, 1304, 0,
	1219, 0, 1581, 1591, 0, 1601, 1578, 0, 1625, 0,
	324, 2224, 0, 0, 2230, 2231, 2232, 2233, 2234, 2225,
	2226, 671, 1243, 1249, 0, 1317, 0, 1318, 0, 0,
	0, 1274, 1303, 1319, 197, 1229, 0, 1232, 0, 169,
	0, 0, 280, 281, 1285, 1287, 1164, 1219, 1852, 1167,
	0, 1169, 1166, 1178, 1219, 0, 1164, 0, 1604, 1580,
	1584, 2407, 1585, 1623, 0, 0, 0, 2236, 2237, 0,
	0, 0, 1320, 0, 1323, 1324, 0, 1321, 1294, 0,
	0, 221, 0, 1852, 1164, 1269, 1168, 1158, 1164, 1306,
	1852, 1304, 1574, 1606, 1592, 0, 1852, 2235, 2238, 2229,
	1307, 1322, 1325, 1326, 1276, 0, 0, 1499, 283, 0,
	1267, 1852, 1156, 1852, 1304, 1429, 1219, 0, 1581, 1852,
	1626, 1216, 0, 0, 1268, 1427, 1219, 1164, 1603, 1575,
	1624, 1230, 1215, 0, 284, 1164, 1852, 0, 1852, 1430,
	0, 1428, 1216, 1233,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 613, 3, 619, 614, 3,
	625, 626, 617, 615, 630, 616, 627, 618, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 633, 3,
	605, 607, 606, 610, 629, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 623, 3, 624, 620, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 631, 612, 632, 608,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 609, 57948, 611, 57949, 621,
	57950, 622, 57951, 628, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1544
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1549
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1551
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1555
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1556
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1558
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1559
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1560
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1561
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1562
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1572
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1595
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1596
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1597
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1598
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1659
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1699
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1758
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1769
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1781
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1870
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1926
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1935
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1964
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2000
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2011
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2023
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2044
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2106
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2115
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2126
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2134
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2145
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2155
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 162:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2165
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2174
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2185
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2191
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2217
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2222
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2313
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2357
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2367
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2376
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2428
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2435
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = nil
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = true
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = false
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = nil
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2623
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2627
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2630
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2811
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2846
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2973
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = nil
		}
	case 286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3288
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3297
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3303
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3308
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3313
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3317
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3337
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3345
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = nil
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3421
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3455
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3488
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3617
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3638
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3639
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3643
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3648
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "CREATE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3682
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3685
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3691
		{
			return unimplemented(sqllex, "create access method")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{
			return unimplemented(sqllex, "create cast")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3694
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3696
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3697
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3698
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3701
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3702
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplemented(sqllex, "create publication")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3704
		{
			return unimplemented(sqllex, "create rule")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			return unimplemented(sqllex, "create server")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3709
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3713
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3716
		{
		}
	case 433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3717
		{
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
		}
	case 435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3721
		{
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3739
		{
			return unimplemented(sqllex, "drop server")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3740
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3742
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3751
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3754
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3799
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3868
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3903
		{

			sqlVAL.union.val = nil
		}
	case 493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "DELETE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3990
		{
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4001
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4002
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4003
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4015
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4016
		{
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4017
		{
			return helpWith(sqllex, "DROP")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4026
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4034
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4071
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4216
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4221
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4273
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4282
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4290
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4298
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4306
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4314
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4325
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4336
		{
			return helpWith(sqllex, "DELETE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4340
		{
			return helpWith(sqllex, "INSERT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "DELETE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "INSERT")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4503
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4536
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4627
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4643
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "GRANT")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4739
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4742
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4752
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "RESET")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "RESET")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "USE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4830
		{
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4835
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "USE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4962
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4970
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4978
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5033
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5067
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5086
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			return unimplemented(sqllex, "set from current")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5094
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5099
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5113
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5129
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5134
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = tree.Low
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = tree.Normal
		}
	case 774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = tree.High
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5266
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5270
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5278
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5282
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5283
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5294
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5295
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5303
		{
			return helpWith(sqllex, "SHOW")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5326
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = true
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = false
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = true
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = false
		}
	case 872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = false
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = sqlDollar[2].union.fetchCursor()
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "FETCH")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5448
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = int64(1)
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = int64(-1)
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = int64(1)
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = int64(1)
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = int64(-1)
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5503
		{
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5504
		{
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5507
		{
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5508
		{
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5512
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5517
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5522
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5527
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5544
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.str = "client_encoding"
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.str = "timezone"
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5566
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5594
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5598
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5609
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5657
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5666
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5691
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5705
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5711
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5725
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5786
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5816
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5826
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5839
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5847
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5858
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5871
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5880
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5891
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5896
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5907
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5912
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = true
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = true
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = false
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5948
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5950
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5967
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5993
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5994
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6018
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6026
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6062
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6067
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6069
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6073
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = true
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = false
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6088
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6093
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6124
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6134
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6139
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = true
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = false
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6157
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6171
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6178
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6186
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6196
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6207
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6221
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6229
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6234
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6239
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6273
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6278
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6283
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6288
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6304
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6317
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6333
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6344
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6362
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6370
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6391
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6396
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6401
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6405
		{
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6414
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6428
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6437
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6449
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6518
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6531
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6718
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6726
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6777
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6778
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6790
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6791
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6792
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6803
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6831
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6844
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6876
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6884
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6895
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6931
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6959
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6995
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7010
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{

			sqlVAL.union.val = nil
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7044
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.str = ""
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7054
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = nil
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7077
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7081
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7117
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7130
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7144
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7145
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7146
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7201
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7227
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7238
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7241
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7245
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.str = ""
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7383
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7490
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{

			sqlVAL.union.val = true
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = false
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7545
		{
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7549
		{
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7552
		{
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7649
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7660
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7687
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7702
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7770
		{
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7771
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7773
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7774
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7775
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7942
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7951
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7959
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7983
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7993
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7995
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7997
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7999
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8002
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8007
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8020
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8085
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.str = ""
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = true
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8119
		{

			sqlVAL.union.val = true
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = false
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8134
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8148
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8160
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8172
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8182
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8192
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8196
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = true
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = true
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = nil
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8339
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8365
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8367
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8369
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8371
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8373
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8375
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8410
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8427
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8445
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8461
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8477
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8481
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = false
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = true
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = false
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = true
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = false
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8535
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8541
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.str = ""
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.str = ""
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8614
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8620
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8845
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8851
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8863
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8869
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8883
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8889
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8948
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = true
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = false
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = tree.Types
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9008
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9012
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9036
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9037
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9041
		{
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9052
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9108
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9152
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9153
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9191
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9205
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9206
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9207
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9224
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9227
		{
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9228
		{
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9256
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9269
		{
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9271
		{
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9365
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.str = ""
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9388
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9393
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9410
		{

		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9425
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.str = ""
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.str = ""
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.str = ""
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.str = ""
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9480
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9505
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9506
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9535
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9553
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9557
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9566
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9660
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9730
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9751
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9766
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9946
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9947
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10008
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10052
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10068
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = true
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = false
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10122
		{
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = nil
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10136
		{
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = true
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = false
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = false
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = true
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10165
		{
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10166
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10170
		{
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10223
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10228
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10254
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10287
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10342
		{
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10382
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10413
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10415
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10430
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10452
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10457
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10462
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10499
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10511
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10530
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10572
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10582
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10617
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10628
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10658
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10691
		{
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = nil
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = true
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = false
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.str = tree.AstFull
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.str = tree.AstRight
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.str = tree.AstInner
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10810
		{
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10811
		{
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.str = tree.AstHash
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.str = ""
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10880
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10885
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10903
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10909
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10915
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10925
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = true
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = false
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = true
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = false
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10974
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10987
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10995
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10996
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11014
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11016
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11024
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11044
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11053
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11093
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11105
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11106
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = types.Geography
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11155
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11163
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11197
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = nil
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = types.Int2
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = types.Int
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = types.Float4
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = types.Float
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11240
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11248
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11256
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = types.Bool
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11270
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = types.Float
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11289
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11295
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11317
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = types.String
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = true
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = false
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = types.Date
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11374
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11388
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11397
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11405
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11422
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = true
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = false
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = false
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = types.Interval
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11446
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11545
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = nil
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11575
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11635
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11784
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11792
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11913
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11979
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12001
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12109
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12117
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12218
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12244
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12253
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12268
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12302
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12313
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12314
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12329
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12338
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12404
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12526
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12529
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12534
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12543
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12552
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12561
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12570
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12575
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12580
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12585
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12590
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12595
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12604
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12605
		{
			return unimplemented(sqllex, "treat")
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12626
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12631
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12641
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12678
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.str = ""
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12745
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12753
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12761
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12767
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12780
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12808
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12844
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12848
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12877
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12889
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12893
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12897
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12915
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12916
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12918
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12922
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12926
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12929
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12933
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12934
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12938
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12942
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12943
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12953
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12978
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13020
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13035
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13052
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13201
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13227
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13234
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13244
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13254
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13261
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13267
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13271
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13278
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13284
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13293
		{
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13294
		{
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13298
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13308
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13325
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13366
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13374
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13397
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13406
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13410
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13414
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13418
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13443
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13447
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13459
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13463
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13472
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13483
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13492
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13500
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13517
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13602
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13610
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13614
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13620
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13632
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13659
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13666
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13670
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13674
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13688
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13692
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13696
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13709
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13718
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13736
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13749
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13756
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13781
		{
			sqlVAL.str = ""
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13787
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13791
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
