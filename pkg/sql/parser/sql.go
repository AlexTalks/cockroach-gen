// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:906
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14114

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1646,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 428,
	-2, 0,
	-1, 74,
	245, 254,
	526, 254,
	-2, 0,
	-1, 88,
	234, 1379,
	247, 1379,
	263, 424,
	398, 424,
	409, 1128,
	449, 424,
	462, 1128,
	511, 1128,
	538, 424,
	564, 1128,
	-2, 0,
	-1, 94,
	133, 1646,
	240, 1646,
	549, 1646,
	550, 1646,
	-2, 0,
	-1, 112,
	152, 1617,
	172, 1617,
	185, 1617,
	243, 1617,
	276, 1617,
	348, 1617,
	359, 1617,
	544, 1617,
	-2, 1588,
	-1, 154,
	160, 961,
	262, 961,
	401, 922,
	467, 922,
	510, 922,
	529, 961,
	531, 922,
	-2, 0,
	-1, 158,
	4, 1648,
	21, 1648,
	22, 1648,
	23, 1648,
	24, 1648,
	25, 1648,
	26, 1648,
	27, 1648,
	29, 1648,
	30, 1648,
	36, 1648,
	41, 1648,
	42, 1648,
	44, 1648,
	45, 1648,
	46, 1648,
	47, 1648,
	48, 1648,
	49, 1648,
	50, 1648,
	51, 1648,
	53, 1648,
	54, 1648,
	55, 1648,
	56, 1648,
	58, 1648,
	59, 1648,
	60, 1648,
	61, 1648,
	62, 1648,
	63, 1648,
	64, 1648,
	68, 1648,
	69, 1648,
	70, 1648,
	71, 1648,
	73, 1648,
	74, 1648,
	75, 1648,
	79, 1648,
	80, 1648,
	81, 1648,
	82, 1648,
	83, 1648,
	84, 1648,
	85, 1648,
	88, 1648,
	89, 1648,
	90, 1648,
	91, 1648,
	92, 1648,
	94, 1648,
	96, 1648,
	97, 1648,
	98, 1648,
	99, 1648,
	100, 1648,
	101, 1648,
	103, 1648,
	104, 1648,
	105, 1648,
	107, 1648,
	108, 1648,
	109, 1648,
	117, 1648,
	118, 1648,
	119, 1648,
	120, 1648,
	121, 1648,
	123, 1648,
	124, 1648,
	125, 1648,
	126, 1648,
	128, 1648,
	129, 1648,
	130, 1648,
	132, 1648,
	133, 1648,
	134, 1648,
	136, 1648,
	137, 1648,
	138, 1648,
	141, 1648,
	142, 1648,
	143, 1648,
	145, 1648,
	146, 1648,
	147, 1648,
	149, 1648,
	150, 1648,
	151, 1648,
	153, 1648,
	154, 1648,
	155, 1648,
	156, 1648,
	157, 1648,
	158, 1648,
	159, 1648,
	160, 1648,
	161, 1648,
	162, 1648,
	163, 1648,
	164, 1648,
	165, 1648,
	166, 1648,
	167, 1648,
	168, 1648,
	169, 1648,
	171, 1648,
	177, 1648,
	178, 1648,
	179, 1648,
	180, 1648,
	184, 1648,
	186, 1648,
	187, 1648,
	188, 1648,
	192, 1648,
	193, 1648,
	194, 1648,
	195, 1648,
	196, 1648,
	197, 1648,
	198, 1648,
	199, 1648,
	200, 1648,
	201, 1648,
	202, 1648,
	203, 1648,
	204, 1648,
	205, 1648,
	207, 1648,
	208, 1648,
	210, 1648,
	211, 1648,
	213, 1648,
	214, 1648,
	215, 1648,
	216, 1648,
	217, 1648,
	218, 1648,
	219, 1648,
	220, 1648,
	221, 1648,
	223, 1648,
	224, 1648,
	226, 1648,
	227, 1648,
	228, 1648,
	229, 1648,
	230, 1648,
	234, 1648,
	235, 1648,
	236, 1648,
	237, 1648,
	240, 1648,
	241, 1648,
	242, 1648,
	244, 1648,
	246, 1648,
	247, 1648,
	249, 1648,
	251, 1648,
	252, 1648,
	253, 1648,
	255, 1648,
	259, 1648,
	260, 1648,
	261, 1648,
	262, 1648,
	263, 1648,
	264, 1648,
	266, 1648,
	267, 1648,
	268, 1648,
	270, 1648,
	271, 1648,
	273, 1648,
	274, 1648,
	277, 1648,
	278, 1648,
	279, 1648,
	280, 1648,
	281, 1648,
	282, 1648,
	283, 1648,
	286, 1648,
	287, 1648,
	288, 1648,
	289, 1648,
	291, 1648,
	292, 1648,
	293, 1648,
	294, 1648,
	295, 1648,
	296, 1648,
	297, 1648,
	298, 1648,
	299, 1648,
	300, 1648,
	301, 1648,
	302, 1648,
	303, 1648,
	304, 1648,
	305, 1648,
	306, 1648,
	307, 1648,
	308, 1648,
	309, 1648,
	310, 1648,
	311, 1648,
	312, 1648,
	314, 1648,
	316, 1648,
	317, 1648,
	318, 1648,
	319, 1648,
	320, 1648,
	321, 1648,
	322, 1648,
	323, 1648,
	324, 1648,
	325, 1648,
	326, 1648,
	327, 1648,
	328, 1648,
	329, 1648,
	330, 1648,
	331, 1648,
	332, 1648,
	334, 1648,
	335, 1648,
	337, 1648,
	339, 1648,
	340, 1648,
	341, 1648,
	343, 1648,
	344, 1648,
	345, 1648,
	346, 1648,
	347, 1648,
	350, 1648,
	352, 1648,
	354, 1648,
	355, 1648,
	356, 1648,
	357, 1648,
	360, 1648,
	361, 1648,
	362, 1648,
	364, 1648,
	366, 1648,
	367, 1648,
	368, 1648,
	369, 1648,
	370, 1648,
	371, 1648,
	372, 1648,
	373, 1648,
	374, 1648,
	375, 1648,
	376, 1648,
	377, 1648,
	378, 1648,
	380, 1648,
	381, 1648,
	382, 1648,
	383, 1648,
	384, 1648,
	385, 1648,
	386, 1648,
	387, 1648,
	388, 1648,
	389, 1648,
	390, 1648,
	391, 1648,
	392, 1648,
	393, 1648,
	394, 1648,
	396, 1648,
	397, 1648,
	399, 1648,
	400, 1648,
	401, 1648,
	402, 1648,
	403, 1648,
	404, 1648,
	405, 1648,
	406, 1648,
	407, 1648,
	408, 1648,
	409, 1648,
	410, 1648,
	411, 1648,
	413, 1648,
	415, 1648,
	416, 1648,
	417, 1648,
	423, 1648,
	424, 1648,
	426, 1648,
	427, 1648,
	428, 1648,
	429, 1648,
	430, 1648,
	431, 1648,
	432, 1648,
	433, 1648,
	434, 1648,
	435, 1648,
	437, 1648,
	438, 1648,
	439, 1648,
	441, 1648,
	442, 1648,
	443, 1648,
	444, 1648,
	445, 1648,
	446, 1648,
	447, 1648,
	449, 1648,
	450, 1648,
	451, 1648,
	452, 1648,
	453, 1648,
	454, 1648,
	455, 1648,
	456, 1648,
	457, 1648,
	458, 1648,
	459, 1648,
	460, 1648,
	462, 1648,
	463, 1648,
	464, 1648,
	465, 1648,
	466, 1648,
	467, 1648,
	469, 1648,
	470, 1648,
	471, 1648,
	472, 1648,
	473, 1648,
	474, 1648,
	476, 1648,
	477, 1648,
	478, 1648,
	479, 1648,
	480, 1648,
	481, 1648,
	482, 1648,
	483, 1648,
	485, 1648,
	487, 1648,
	488, 1648,
	489, 1648,
	490, 1648,
	491, 1648,
	492, 1648,
	493, 1648,
	494, 1648,
	495, 1648,
	496, 1648,
	497, 1648,
	498, 1648,
	499, 1648,
	500, 1648,
	501, 1648,
	502, 1648,
	503, 1648,
	504, 1648,
	506, 1648,
	507, 1648,
	509, 1648,
	510, 1648,
	512, 1648,
	513, 1648,
	514, 1648,
	515, 1648,
	516, 1648,
	517, 1648,
	518, 1648,
	519, 1648,
	521, 1648,
	522, 1648,
	523, 1648,
	524, 1648,
	525, 1648,
	527, 1648,
	529, 1648,
	530, 1648,
	531, 1648,
	532, 1648,
	533, 1648,
	534, 1648,
	535, 1648,
	537, 1648,
	538, 1648,
	539, 1648,
	540, 1648,
	542, 1648,
	543, 1648,
	546, 1648,
	547, 1648,
	548, 1648,
	549, 1648,
	550, 1648,
	551, 1648,
	552, 1648,
	554, 1648,
	557, 1648,
	558, 1648,
	559, 1648,
	560, 1648,
	561, 1648,
	562, 1648,
	564, 1648,
	565, 1648,
	566, 1648,
	567, 1648,
	568, 1648,
	569, 1648,
	570, 1648,
	575, 1648,
	576, 1648,
	577, 1648,
	578, 1648,
	579, 1648,
	580, 1648,
	-2, 0,
	-1, 159,
	1, 1496,
	131, 1496,
	251, 1496,
	336, 1496,
	396, 1496,
	405, 1496,
	584, 1496,
	614, 1496,
	-2, 0,
	-1, 161,
	1, 1496,
	614, 1496,
	-2, 0,
	-1, 162,
	1, 1496,
	614, 1496,
	-2, 0,
	-1, 163,
	1, 1496,
	526, 1496,
	614, 1496,
	-2, 0,
	-1, 195,
	152, 1616,
	172, 1616,
	185, 1616,
	243, 1616,
	276, 1616,
	348, 1616,
	359, 1616,
	544, 1616,
	-2, 1591,
	-1, 242,
	4, 1655,
	5, 1655,
	6, 1655,
	7, 1655,
	8, 1655,
	9, 1655,
	10, 1655,
	21, 1655,
	22, 1655,
	23, 1655,
	24, 1655,
	25, 1655,
	26, 1655,
	27, 1655,
	29, 1655,
	30, 1655,
	36, 1655,
	37, 1655,
	41, 1655,
	42, 1655,
	43, 1655,
	44, 1655,
	45, 1655,
	46, 1655,
	47, 1655,
	48, 1655,
	49, 1655,
	50, 1655,
	51, 1655,
	53, 1655,
	54, 1655,
	55, 1655,
	56, 1655,
	58, 1655,
	59, 1655,
	60, 1655,
	61, 1655,
	62, 1655,
	63, 1655,
	64, 1655,
	65, 1655,
	66, 1655,
	67, 1655,
	68, 1655,
	69, 1655,
	70, 1655,
	71, 1655,
	73, 1655,
	74, 1655,
	75, 1655,
	77, 1655,
	79, 1655,
	80, 1655,
	81, 1655,
	82, 1655,
	83, 1655,
	84, 1655,
	85, 1655,
	88, 1655,
	89, 1655,
	90, 1655,
	91, 1655,
	92, 1655,
	94, 1655,
	96, 1655,
	97, 1655,
	98, 1655,
	99, 1655,
	100, 1655,
	101, 1655,
	103, 1655,
	104, 1655,
	105, 1655,
	106, 1655,
	107, 1655,
	108, 1655,
	109, 1655,
	110, 1655,
	111, 1655,
	112, 1655,
	113, 1655,
	114, 1655,
	115, 1655,
	116, 1655,
	117, 1655,
	118, 1655,
	119, 1655,
	120, 1655,
	121, 1655,
	122, 1655,
	123, 1655,
	124, 1655,
	125, 1655,
	126, 1655,
	127, 1655,
	128, 1655,
	129, 1655,
	130, 1655,
	132, 1655,
	133, 1655,
	134, 1655,
	136, 1655,
	137, 1655,
	138, 1655,
	141, 1655,
	142, 1655,
	143, 1655,
	145, 1655,
	146, 1655,
	147, 1655,
	149, 1655,
	150, 1655,
	151, 1655,
	153, 1655,
	154, 1655,
	155, 1655,
	156, 1655,
	157, 1655,
	158, 1655,
	159, 1655,
	160, 1655,
	161, 1655,
	162, 1655,
	163, 1655,
	164, 1655,
	165, 1655,
	166, 1655,
	167, 1655,
	168, 1655,
	169, 1655,
	170, 1655,
	171, 1655,
	177, 1655,
	178, 1655,
	179, 1655,
	180, 1655,
	184, 1655,
	186, 1655,
	187, 1655,
	188, 1655,
	191, 1655,
	192, 1655,
	193, 1655,
	194, 1655,
	195, 1655,
	196, 1655,
	197, 1655,
	198, 1655,
	199, 1655,
	200, 1655,
	201, 1655,
	202, 1655,
	203, 1655,
	204, 1655,
	205, 1655,
	207, 1655,
	208, 1655,
	210, 1655,
	211, 1655,
	213, 1655,
	214, 1655,
	215, 1655,
	216, 1655,
	217, 1655,
	218, 1655,
	219, 1655,
	220, 1655,
	221, 1655,
	222, 1655,
	223, 1655,
	224, 1655,
	226, 1655,
	227, 1655,
	228, 1655,
	229, 1655,
	230, 1655,
	234, 1655,
	235, 1655,
	236, 1655,
	237, 1655,
	239, 1655,
	240, 1655,
	241, 1655,
	242, 1655,
	244, 1655,
	246, 1655,
	247, 1655,
	248, 1655,
	249, 1655,
	250, 1655,
	251, 1655,
	252, 1655,
	253, 1655,
	254, 1655,
	255, 1655,
	259, 1655,
	260, 1655,
	261, 1655,
	262, 1655,
	263, 1655,
	264, 1655,
	266, 1655,
	267, 1655,
	268, 1655,
	270, 1655,
	271, 1655,
	272, 1655,
	273, 1655,
	274, 1655,
	275, 1655,
	277, 1655,
	278, 1655,
	279, 1655,
	280, 1655,
	281, 1655,
	282, 1655,
	283, 1655,
	284, 1655,
	285, 1655,
	286, 1655,
	287, 1655,
	288, 1655,
	289, 1655,
	291, 1655,
	292, 1655,
	293, 1655,
	294, 1655,
	295, 1655,
	296, 1655,
	297, 1655,
	298, 1655,
	299, 1655,
	300, 1655,
	301, 1655,
	302, 1655,
	303, 1655,
	304, 1655,
	305, 1655,
	306, 1655,
	307, 1655,
	308, 1655,
	309, 1655,
	310, 1655,
	311, 1655,
	312, 1655,
	314, 1655,
	315, 1655,
	316, 1655,
	317, 1655,
	318, 1655,
	319, 1655,
	320, 1655,
	321, 1655,
	322, 1655,
	323, 1655,
	324, 1655,
	325, 1655,
	326, 1655,
	327, 1655,
	328, 1655,
	329, 1655,
	330, 1655,
	331, 1655,
	332, 1655,
	333, 1655,
	334, 1655,
	335, 1655,
	336, 1655,
	337, 1655,
	338, 1655,
	339, 1655,
	340, 1655,
	341, 1655,
	342, 1655,
	343, 1655,
	344, 1655,
	345, 1655,
	346, 1655,
	347, 1655,
	350, 1655,
	352, 1655,
	355, 1655,
	356, 1655,
	357, 1655,
	360, 1655,
	361, 1655,
	362, 1655,
	363, 1655,
	364, 1655,
	365, 1655,
	366, 1655,
	367, 1655,
	368, 1655,
	369, 1655,
	370, 1655,
	371, 1655,
	372, 1655,
	373, 1655,
	374, 1655,
	375, 1655,
	376, 1655,
	377, 1655,
	378, 1655,
	380, 1655,
	381, 1655,
	382, 1655,
	383, 1655,
	384, 1655,
	385, 1655,
	386, 1655,
	387, 1655,
	388, 1655,
	389, 1655,
	390, 1655,
	391, 1655,
	392, 1655,
	393, 1655,
	394, 1655,
	396, 1655,
	397, 1655,
	399, 1655,
	400, 1655,
	401, 1655,
	402, 1655,
	403, 1655,
	404, 1655,
	405, 1655,
	406, 1655,
	407, 1655,
	408, 1655,
	409, 1655,
	410, 1655,
	411, 1655,
	413, 1655,
	415, 1655,
	416, 1655,
	417, 1655,
	423, 1655,
	424, 1655,
	426, 1655,
	427, 1655,
	428, 1655,
	429, 1655,
	430, 1655,
	431, 1655,
	432, 1655,
	433, 1655,
	434, 1655,
	435, 1655,
	437, 1655,
	438, 1655,
	439, 1655,
	440, 1655,
	441, 1655,
	442, 1655,
	443, 1655,
	444, 1655,
	445, 1655,
	446, 1655,
	447, 1655,
	449, 1655,
	450, 1655,
	451, 1655,
	452, 1655,
	453, 1655,
	454, 1655,
	455, 1655,
	456, 1655,
	457, 1655,
	458, 1655,
	459, 1655,
	460, 1655,
	462, 1655,
	463, 1655,
	464, 1655,
	465, 1655,
	466, 1655,
	467, 1655,
	468, 1655,
	469, 1655,
	470, 1655,
	471, 1655,
	472, 1655,
	473, 1655,
	474, 1655,
	475, 1655,
	476, 1655,
	477, 1655,
	478, 1655,
	479, 1655,
	480, 1655,
	481, 1655,
	482, 1655,
	483, 1655,
	485, 1655,
	487, 1655,
	488, 1655,
	489, 1655,
	490, 1655,
	491, 1655,
	492, 1655,
	493, 1655,
	494, 1655,
	495, 1655,
	496, 1655,
	497, 1655,
	498, 1655,
	499, 1655,
	500, 1655,
	501, 1655,
	502, 1655,
	503, 1655,
	504, 1655,
	506, 1655,
	507, 1655,
	508, 1655,
	509, 1655,
	510, 1655,
	512, 1655,
	513, 1655,
	514, 1655,
	515, 1655,
	516, 1655,
	517, 1655,
	518, 1655,
	519, 1655,
	521, 1655,
	522, 1655,
	523, 1655,
	524, 1655,
	525, 1655,
	527, 1655,
	529, 1655,
	530, 1655,
	531, 1655,
	532, 1655,
	533, 1655,
	534, 1655,
	535, 1655,
	536, 1655,
	537, 1655,
	538, 1655,
	539, 1655,
	540, 1655,
	542, 1655,
	543, 1655,
	545, 1655,
	546, 1655,
	547, 1655,
	548, 1655,
	549, 1655,
	550, 1655,
	551, 1655,
	552, 1655,
	553, 1655,
	554, 1655,
	557, 1655,
	558, 1655,
	559, 1655,
	560, 1655,
	561, 1655,
	562, 1655,
	564, 1655,
	565, 1655,
	566, 1655,
	567, 1655,
	568, 1655,
	569, 1655,
	570, 1655,
	575, 1655,
	576, 1655,
	577, 1655,
	578, 1655,
	579, 1655,
	580, 1655,
	581, 1655,
	594, 1655,
	601, 1655,
	602, 1655,
	603, 1655,
	611, 1655,
	615, 1655,
	-2, 0,
	-1, 765,
	4, 1377,
	21, 1377,
	22, 1377,
	23, 1377,
	24, 1377,
	25, 1377,
	26, 1377,
	27, 1377,
	29, 1377,
	30, 1377,
	36, 1377,
	41, 1377,
	42, 1377,
	44, 1377,
	45, 1377,
	46, 1377,
	47, 1377,
	48, 1377,
	49, 1377,
	50, 1377,
	51, 1377,
	53, 1377,
	54, 1377,
	55, 1377,
	56, 1377,
	58, 1377,
	59, 1377,
	60, 1377,
	61, 1377,
	62, 1377,
	63, 1377,
	64, 1377,
	68, 1377,
	69, 1377,
	70, 1377,
	71, 1377,
	73, 1377,
	74, 1377,
	75, 1377,
	79, 1377,
	80, 1377,
	81, 1377,
	82, 1377,
	83, 1377,
	84, 1377,
	85, 1377,
	88, 1377,
	89, 1377,
	90, 1377,
	91, 1377,
	92, 1377,
	94, 1377,
	96, 1377,
	97, 1377,
	98, 1377,
	99, 1377,
	100, 1377,
	101, 1377,
	103, 1377,
	104, 1377,
	105, 1377,
	107, 1377,
	108, 1377,
	109, 1377,
	117, 1377,
	118, 1377,
	119, 1377,
	120, 1377,
	121, 1377,
	123, 1377,
	124, 1377,
	125, 1377,
	126, 1377,
	128, 1377,
	129, 1377,
	130, 1377,
	132, 1377,
	133, 1377,
	134, 1377,
	136, 1377,
	137, 1377,
	138, 1377,
	141, 1377,
	142, 1377,
	143, 1377,
	145, 1377,
	146, 1377,
	147, 1377,
	149, 1377,
	150, 1377,
	151, 1377,
	153, 1377,
	154, 1377,
	155, 1377,
	156, 1377,
	157, 1377,
	158, 1377,
	159, 1377,
	160, 1377,
	161, 1377,
	162, 1377,
	163, 1377,
	164, 1377,
	165, 1377,
	166, 1377,
	167, 1377,
	168, 1377,
	169, 1377,
	171, 1377,
	177, 1377,
	178, 1377,
	179, 1377,
	180, 1377,
	184, 1377,
	186, 1377,
	187, 1377,
	188, 1377,
	192, 1377,
	193, 1377,
	194, 1377,
	195, 1377,
	196, 1377,
	197, 1377,
	198, 1377,
	199, 1377,
	200, 1377,
	201, 1377,
	202, 1377,
	203, 1377,
	204, 1377,
	205, 1377,
	207, 1377,
	208, 1377,
	210, 1377,
	211, 1377,
	213, 1377,
	214, 1377,
	215, 1377,
	216, 1377,
	217, 1377,
	218, 1377,
	219, 1377,
	220, 1377,
	221, 1377,
	223, 1377,
	224, 1377,
	226, 1377,
	227, 1377,
	228, 1377,
	229, 1377,
	230, 1377,
	234, 1377,
	235, 1377,
	236, 1377,
	237, 1377,
	240, 1377,
	241, 1377,
	242, 1377,
	244, 1377,
	246, 1377,
	247, 1377,
	249, 1377,
	251, 1377,
	252, 1377,
	253, 1377,
	255, 1377,
	259, 1377,
	260, 1377,
	261, 1377,
	262, 1377,
	263, 1377,
	264, 1377,
	266, 1377,
	267, 1377,
	268, 1377,
	270, 1377,
	271, 1377,
	273, 1377,
	274, 1377,
	277, 1377,
	278, 1377,
	279, 1377,
	280, 1377,
	281, 1377,
	282, 1377,
	283, 1377,
	286, 1377,
	287, 1377,
	288, 1377,
	289, 1377,
	291, 1377,
	292, 1377,
	293, 1377,
	294, 1377,
	295, 1377,
	296, 1377,
	297, 1377,
	298, 1377,
	299, 1377,
	300, 1377,
	301, 1377,
	302, 1377,
	303, 1377,
	304, 1377,
	305, 1377,
	306, 1377,
	307, 1377,
	308, 1377,
	309, 1377,
	310, 1377,
	311, 1377,
	312, 1377,
	314, 1377,
	316, 1377,
	317, 1377,
	318, 1377,
	319, 1377,
	320, 1377,
	321, 1377,
	322, 1377,
	323, 1377,
	324, 1377,
	325, 1377,
	326, 1377,
	327, 1377,
	328, 1377,
	329, 1377,
	330, 1377,
	331, 1377,
	332, 1377,
	334, 1377,
	335, 1377,
	337, 1377,
	339, 1377,
	340, 1377,
	341, 1377,
	343, 1377,
	344, 1377,
	345, 1377,
	346, 1377,
	347, 1377,
	350, 1377,
	352, 1377,
	355, 1377,
	356, 1377,
	357, 1377,
	360, 1377,
	361, 1377,
	362, 1377,
	364, 1377,
	366, 1377,
	367, 1377,
	368, 1377,
	369, 1377,
	370, 1377,
	371, 1377,
	372, 1377,
	373, 1377,
	374, 1377,
	375, 1377,
	376, 1377,
	377, 1377,
	378, 1377,
	380, 1377,
	381, 1377,
	382, 1377,
	383, 1377,
	384, 1377,
	385, 1377,
	386, 1377,
	387, 1377,
	388, 1377,
	389, 1377,
	390, 1377,
	391, 1377,
	392, 1377,
	393, 1377,
	394, 1377,
	396, 1377,
	397, 1377,
	399, 1377,
	400, 1377,
	401, 1377,
	402, 1377,
	403, 1377,
	404, 1377,
	405, 1377,
	406, 1377,
	407, 1377,
	408, 1377,
	409, 1377,
	410, 1377,
	411, 1377,
	413, 1377,
	415, 1377,
	416, 1377,
	417, 1377,
	423, 1377,
	424, 1377,
	426, 1377,
	427, 1377,
	428, 1377,
	429, 1377,
	430, 1377,
	431, 1377,
	432, 1377,
	433, 1377,
	434, 1377,
	435, 1377,
	437, 1377,
	438, 1377,
	439, 1377,
	441, 1377,
	442, 1377,
	443, 1377,
	444, 1377,
	445, 1377,
	446, 1377,
	447, 1377,
	449, 1377,
	450, 1377,
	451, 1377,
	452, 1377,
	453, 1377,
	454, 1377,
	455, 1377,
	456, 1377,
	457, 1377,
	458, 1377,
	459, 1377,
	460, 1377,
	462, 1377,
	463, 1377,
	464, 1377,
	465, 1377,
	466, 1377,
	467, 1377,
	469, 1377,
	470, 1377,
	471, 1377,
	472, 1377,
	473, 1377,
	474, 1377,
	476, 1377,
	477, 1377,
	478, 1377,
	479, 1377,
	480, 1377,
	481, 1377,
	482, 1377,
	483, 1377,
	485, 1377,
	487, 1377,
	488, 1377,
	489, 1377,
	490, 1377,
	491, 1377,
	492, 1377,
	493, 1377,
	494, 1377,
	495, 1377,
	496, 1377,
	497, 1377,
	498, 1377,
	499, 1377,
	500, 1377,
	501, 1377,
	502, 1377,
	503, 1377,
	504, 1377,
	506, 1377,
	507, 1377,
	509, 1377,
	510, 1377,
	512, 1377,
	513, 1377,
	514, 1377,
	515, 1377,
	516, 1377,
	517, 1377,
	518, 1377,
	519, 1377,
	521, 1377,
	522, 1377,
	523, 1377,
	524, 1377,
	525, 1377,
	527, 1377,
	529, 1377,
	530, 1377,
	531, 1377,
	532, 1377,
	533, 1377,
	534, 1377,
	535, 1377,
	537, 1377,
	538, 1377,
	539, 1377,
	540, 1377,
	542, 1377,
	543, 1377,
	546, 1377,
	547, 1377,
	548, 1377,
	549, 1377,
	550, 1377,
	551, 1377,
	552, 1377,
	554, 1377,
	557, 1377,
	558, 1377,
	559, 1377,
	560, 1377,
	561, 1377,
	562, 1377,
	564, 1377,
	565, 1377,
	566, 1377,
	567, 1377,
	568, 1377,
	569, 1377,
	570, 1377,
	575, 1377,
	576, 1377,
	577, 1377,
	578, 1377,
	579, 1377,
	580, 1377,
	-2, 0,
	-1, 784,
	190, 2447,
	526, 2447,
	593, 2447,
	613, 2447,
	-2, 0,
	-1, 785,
	190, 2434,
	526, 2434,
	593, 2434,
	613, 2434,
	-2, 0,
	-1, 787,
	190, 2703,
	526, 2703,
	593, 2703,
	613, 2703,
	-2, 0,
	-1, 790,
	190, 2559,
	526, 2559,
	593, 2559,
	613, 2559,
	-2, 0,
	-1, 791,
	190, 2746,
	526, 2746,
	593, 2746,
	613, 2746,
	-2, 0,
	-1, 799,
	190, 2586,
	526, 2586,
	593, 2586,
	613, 2586,
	-2, 741,
	-1, 836,
	613, 2383,
	616, 2383,
	-2, 1046,
	-1, 837,
	613, 2385,
	616, 2385,
	-2, 1047,
	-1, 838,
	613, 2384,
	616, 2384,
	-2, 1048,
	-1, 839,
	616, 2309,
	-2, 1049,
	-1, 864,
	185, 273,
	-2, 0,
	-1, 888,
	43, 2356,
	-2, 0,
	-1, 889,
	564, 1355,
	-2, 1129,
	-1, 905,
	4, 1789,
	21, 1789,
	22, 1789,
	23, 1789,
	24, 1789,
	25, 1789,
	26, 1789,
	27, 1789,
	29, 1789,
	30, 1789,
	36, 1789,
	41, 1789,
	42, 1789,
	44, 1789,
	45, 1789,
	46, 1789,
	47, 1789,
	48, 1789,
	49, 1789,
	50, 1789,
	51, 1789,
	53, 1789,
	54, 1789,
	55, 1789,
	56, 1789,
	58, 1789,
	59, 1789,
	60, 1789,
	61, 1789,
	62, 1789,
	63, 1789,
	64, 1789,
	68, 1789,
	69, 1789,
	70, 1789,
	71, 1789,
	73, 1789,
	74, 1789,
	75, 1789,
	79, 1789,
	80, 1789,
	81, 1789,
	82, 1789,
	83, 1789,
	84, 1789,
	85, 1789,
	88, 1789,
	89, 1789,
	90, 1789,
	91, 1789,
	92, 1789,
	94, 1789,
	96, 1789,
	97, 1789,
	98, 1789,
	99, 1789,
	100, 1789,
	101, 1789,
	103, 1789,
	104, 1789,
	105, 1789,
	107, 1789,
	108, 1789,
	109, 1789,
	117, 1789,
	118, 1789,
	119, 1789,
	120, 1789,
	121, 1789,
	123, 1789,
	124, 1789,
	125, 1789,
	126, 1789,
	128, 1789,
	129, 1789,
	130, 1789,
	132, 1789,
	133, 1789,
	134, 1789,
	136, 1789,
	137, 1789,
	138, 1789,
	141, 1789,
	142, 1789,
	143, 1789,
	145, 1789,
	146, 1789,
	147, 1789,
	149, 1789,
	150, 1789,
	151, 1789,
	153, 1789,
	154, 1789,
	155, 1789,
	156, 1789,
	157, 1789,
	158, 1789,
	159, 1789,
	160, 1789,
	161, 1789,
	162, 1789,
	163, 1789,
	164, 1789,
	165, 1789,
	166, 1789,
	167, 1789,
	168, 1789,
	169, 1789,
	171, 1789,
	177, 1789,
	178, 1789,
	179, 1789,
	180, 1789,
	184, 1789,
	186, 1789,
	187, 1789,
	188, 1789,
	192, 1789,
	193, 1789,
	194, 1789,
	195, 1789,
	196, 1789,
	197, 1789,
	198, 1789,
	199, 1789,
	200, 1789,
	201, 1789,
	202, 1789,
	203, 1789,
	204, 1789,
	205, 1789,
	207, 1789,
	208, 1789,
	210, 1789,
	211, 1789,
	213, 1789,
	214, 1789,
	215, 1789,
	216, 1789,
	217, 1789,
	218, 1789,
	219, 1789,
	220, 1789,
	221, 1789,
	223, 1789,
	224, 1789,
	226, 1789,
	227, 1789,
	228, 1789,
	229, 1789,
	230, 1789,
	234, 1789,
	235, 1789,
	236, 1789,
	237, 1789,
	240, 1789,
	241, 1789,
	242, 1789,
	244, 1789,
	246, 1789,
	247, 1789,
	249, 1789,
	251, 1789,
	252, 1789,
	253, 1789,
	255, 1789,
	259, 1789,
	260, 1789,
	261, 1789,
	262, 1789,
	263, 1789,
	264, 1789,
	266, 1789,
	267, 1789,
	268, 1789,
	270, 1789,
	271, 1789,
	273, 1789,
	274, 1789,
	277, 1789,
	278, 1789,
	279, 1789,
	280, 1789,
	281, 1789,
	282, 1789,
	283, 1789,
	286, 1789,
	287, 1789,
	288, 1789,
	289, 1789,
	291, 1789,
	292, 1789,
	293, 1789,
	294, 1789,
	295, 1789,
	296, 1789,
	297, 1789,
	298, 1789,
	299, 1789,
	300, 1789,
	301, 1789,
	302, 1789,
	303, 1789,
	304, 1789,
	305, 1789,
	306, 1789,
	307, 1789,
	308, 1789,
	309, 1789,
	310, 1789,
	311, 1789,
	312, 1789,
	314, 1789,
	316, 1789,
	317, 1789,
	318, 1789,
	319, 1789,
	320, 1789,
	321, 1789,
	322, 1789,
	323, 1789,
	324, 1789,
	325, 1789,
	326, 1789,
	327, 1789,
	328, 1789,
	329, 1789,
	330, 1789,
	331, 1789,
	332, 1789,
	334, 1789,
	335, 1789,
	337, 1789,
	339, 1789,
	340, 1789,
	341, 1789,
	343, 1789,
	344, 1789,
	345, 1789,
	346, 1789,
	347, 1789,
	350, 1789,
	352, 1789,
	355, 1789,
	356, 1789,
	357, 1789,
	360, 1789,
	361, 1789,
	362, 1789,
	364, 1789,
	366, 1789,
	367, 1789,
	368, 1789,
	369, 1789,
	370, 1789,
	371, 1789,
	372, 1789,
	373, 1789,
	374, 1789,
	375, 1789,
	376, 1789,
	377, 1789,
	378, 1789,
	380, 1789,
	381, 1789,
	382, 1789,
	383, 1789,
	384, 1789,
	385, 1789,
	386, 1789,
	387, 1789,
	388, 1789,
	389, 1789,
	390, 1789,
	391, 1789,
	392, 1789,
	393, 1789,
	394, 1789,
	396, 1789,
	397, 1789,
	399, 1789,
	400, 1789,
	401, 1789,
	402, 1789,
	403, 1789,
	404, 1789,
	405, 1789,
	406, 1789,
	407, 1789,
	408, 1789,
	409, 1789,
	410, 1789,
	411, 1789,
	413, 1789,
	415, 1789,
	416, 1789,
	417, 1789,
	423, 1789,
	424, 1789,
	426, 1789,
	427, 1789,
	428, 1789,
	429, 1789,
	430, 1789,
	431, 1789,
	432, 1789,
	433, 1789,
	434, 1789,
	435, 1789,
	437, 1789,
	438, 1789,
	439, 1789,
	441, 1789,
	442, 1789,
	443, 1789,
	444, 1789,
	445, 1789,
	446, 1789,
	447, 1789,
	449, 1789,
	450, 1789,
	451, 1789,
	452, 1789,
	453, 1789,
	454, 1789,
	455, 1789,
	456, 1789,
	457, 1789,
	458, 1789,
	459, 1789,
	460, 1789,
	462, 1789,
	463, 1789,
	464, 1789,
	465, 1789,
	466, 1789,
	467, 1789,
	469, 1789,
	470, 1789,
	471, 1789,
	472, 1789,
	473, 1789,
	474, 1789,
	476, 1789,
	477, 1789,
	478, 1789,
	479, 1789,
	480, 1789,
	481, 1789,
	482, 1789,
	483, 1789,
	485, 1789,
	487, 1789,
	488, 1789,
	489, 1789,
	490, 1789,
	491, 1789,
	492, 1789,
	493, 1789,
	494, 1789,
	495, 1789,
	496, 1789,
	497, 1789,
	498, 1789,
	499, 1789,
	500, 1789,
	501, 1789,
	502, 1789,
	503, 1789,
	504, 1789,
	506, 1789,
	507, 1789,
	509, 1789,
	510, 1789,
	512, 1789,
	513, 1789,
	514, 1789,
	515, 1789,
	516, 1789,
	517, 1789,
	518, 1789,
	519, 1789,
	521, 1789,
	522, 1789,
	523, 1789,
	524, 1789,
	525, 1789,
	527, 1789,
	529, 1789,
	530, 1789,
	531, 1789,
	532, 1789,
	533, 1789,
	534, 1789,
	535, 1789,
	537, 1789,
	538, 1789,
	539, 1789,
	540, 1789,
	542, 1789,
	543, 1789,
	546, 1789,
	547, 1789,
	548, 1789,
	549, 1789,
	550, 1789,
	551, 1789,
	552, 1789,
	554, 1789,
	557, 1789,
	558, 1789,
	559, 1789,
	560, 1789,
	561, 1789,
	562, 1789,
	564, 1789,
	565, 1789,
	566, 1789,
	567, 1789,
	568, 1789,
	569, 1789,
	570, 1789,
	575, 1789,
	576, 1789,
	577, 1789,
	578, 1789,
	579, 1789,
	580, 1789,
	-2, 0,
	-1, 915,
	263, 428,
	-2, 0,
	-1, 994,
	401, 923,
	467, 923,
	510, 923,
	531, 923,
	-2, 0,
	-1, 995,
	401, 922,
	467, 922,
	510, 922,
	531, 922,
	-2, 854,
	-1, 999,
	1, 975,
	610, 975,
	612, 975,
	614, 975,
	-2, 0,
	-1, 1001,
	1, 897,
	610, 897,
	612, 897,
	614, 897,
	-2, 0,
	-1, 1002,
	1, 901,
	610, 901,
	612, 901,
	614, 901,
	-2, 0,
	-1, 1003,
	1, 1045,
	185, 1045,
	610, 1045,
	612, 1045,
	614, 1045,
	-2, 0,
	-1, 1011,
	1, 928,
	610, 928,
	612, 928,
	614, 928,
	-2, 0,
	-1, 1018,
	1, 975,
	610, 975,
	612, 975,
	614, 975,
	-2, 0,
	-1, 1019,
	1, 977,
	610, 977,
	612, 977,
	614, 977,
	-2, 0,
	-1, 1020,
	1, 980,
	610, 980,
	612, 980,
	614, 980,
	-2, 0,
	-1, 1027,
	1, 1009,
	610, 1009,
	612, 1009,
	614, 1009,
	-2, 0,
	-1, 1028,
	1, 1011,
	610, 1011,
	612, 1011,
	614, 1011,
	-2, 0,
	-1, 1033,
	1, 1039,
	610, 1039,
	612, 1039,
	614, 1039,
	-2, 0,
	-1, 1087,
	172, 1659,
	185, 1659,
	276, 1659,
	348, 1659,
	-2, 1595,
	-1, 1103,
	172, 1658,
	185, 1658,
	276, 1658,
	348, 1658,
	-2, 1592,
	-1, 1130,
	613, 2382,
	-2, 749,
	-1, 1159,
	5, 2374,
	611, 2372,
	-2, 2363,
	-1, 1167,
	5, 2395,
	611, 2392,
	-2, 2383,
	-1, 1168,
	5, 2396,
	611, 2393,
	-2, 2384,
	-1, 1176,
	613, 2380,
	-2, 2362,
	-1, 1177,
	611, 2832,
	-2, 2381,
	-1, 1200,
	611, 2831,
	-2, 2397,
	-1, 1201,
	5, 1864,
	-2, 2802,
	-1, 1202,
	5, 1865,
	-2, 2803,
	-1, 1203,
	5, 1866,
	-2, 2817,
	-1, 1204,
	5, 1867,
	-2, 2781,
	-1, 1205,
	5, 1868,
	-2, 2815,
	-1, 1206,
	5, 1876,
	-2, 2794,
	-1, 1207,
	5, 1863,
	-2, 2790,
	-1, 1208,
	5, 1863,
	-2, 2789,
	-1, 1209,
	5, 1863,
	-2, 2808,
	-1, 1210,
	5, 1874,
	-2, 2783,
	-1, 1211,
	5, 1879,
	-2, 2782,
	-1, 1212,
	5, 1881,
	-2, 2827,
	-1, 1215,
	5, 1903,
	-2, 2820,
	-1, 1216,
	5, 1895,
	-2, 2821,
	-1, 1217,
	5, 1903,
	-2, 2822,
	-1, 1218,
	5, 1899,
	-2, 2823,
	-1, 1219,
	5, 1849,
	-2, 2795,
	-1, 1220,
	5, 1850,
	-2, 2796,
	-1, 1221,
	5, 1851,
	-2, 2784,
	-1, 1249,
	5, 1886,
	-2, 2828,
	-1, 1250,
	5, 1887,
	-2, 2818,
	-1, 1251,
	5, 1888,
	565, 1888,
	-2, 2785,
	-1, 1252,
	5, 1889,
	565, 1889,
	-2, 2786,
	-1, 1289,
	611, 2392,
	-2, 2383,
	-1, 1290,
	611, 2393,
	-2, 2384,
	-1, 1388,
	190, 2746,
	526, 2746,
	593, 2746,
	613, 2746,
	-2, 0,
	-1, 1393,
	1, 725,
	614, 725,
	-2, 1504,
	-1, 1523,
	368, 2357,
	426, 2357,
	469, 2357,
	603, 2357,
	-2, 2347,
	-1, 1529,
	190, 133,
	270, 133,
	334, 133,
	570, 133,
	-2, 2742,
	-1, 1530,
	190, 134,
	270, 134,
	334, 134,
	570, 134,
	-2, 2492,
	-1, 1531,
	190, 135,
	270, 135,
	334, 135,
	570, 135,
	-2, 2665,
	-1, 1537,
	615, 2357,
	-2, 2359,
	-1, 1557,
	1, 1352,
	431, 1309,
	469, 1309,
	587, 1309,
	610, 1352,
	612, 1352,
	614, 1352,
	-2, 1644,
	-1, 1563,
	206, 1449,
	225, 1449,
	439, 1449,
	-2, 0,
	-1, 1611,
	409, 1128,
	564, 1128,
	-2, 423,
	-1, 1628,
	43, 2355,
	-2, 1091,
	-1, 1635,
	1, 1352,
	610, 1352,
	612, 1352,
	614, 1352,
	-2, 1644,
	-1, 1643,
	4, 1377,
	21, 1377,
	22, 1377,
	23, 1377,
	24, 1377,
	25, 1377,
	26, 1377,
	27, 1377,
	29, 1377,
	30, 1377,
	36, 1377,
	41, 1377,
	42, 1377,
	44, 1377,
	45, 1377,
	46, 1377,
	47, 1377,
	48, 1377,
	49, 1377,
	50, 1377,
	51, 1377,
	53, 1377,
	54, 1377,
	55, 1377,
	56, 1377,
	58, 1377,
	59, 1377,
	60, 1377,
	61, 1377,
	62, 1377,
	63, 1377,
	64, 1377,
	68, 1377,
	69, 1377,
	70, 1377,
	71, 1377,
	73, 1377,
	74, 1377,
	75, 1377,
	79, 1377,
	80, 1377,
	81, 1377,
	82, 1377,
	83, 1377,
	84, 1377,
	85, 1377,
	88, 1377,
	89, 1377,
	90, 1377,
	91, 1377,
	92, 1377,
	94, 1377,
	96, 1377,
	97, 1377,
	98, 1377,
	99, 1377,
	100, 1377,
	101, 1377,
	103, 1377,
	104, 1377,
	105, 1377,
	107, 1377,
	108, 1377,
	109, 1377,
	117, 1377,
	118, 1377,
	119, 1377,
	120, 1377,
	121, 1377,
	123, 1377,
	124, 1377,
	125, 1377,
	126, 1377,
	128, 1377,
	129, 1377,
	130, 1377,
	132, 1377,
	133, 1377,
	134, 1377,
	136, 1377,
	137, 1377,
	138, 1377,
	141, 1377,
	142, 1377,
	143, 1377,
	145, 1377,
	146, 1377,
	147, 1377,
	149, 1377,
	150, 1377,
	151, 1377,
	153, 1377,
	154, 1377,
	155, 1377,
	156, 1377,
	157, 1377,
	158, 1377,
	159, 1377,
	160, 1377,
	161, 1377,
	162, 1377,
	163, 1377,
	164, 1377,
	165, 1377,
	166, 1377,
	167, 1377,
	168, 1377,
	169, 1377,
	177, 1377,
	178, 1377,
	179, 1377,
	180, 1377,
	184, 1377,
	186, 1377,
	187, 1377,
	188, 1377,
	192, 1377,
	193, 1377,
	194, 1377,
	195, 1377,
	196, 1377,
	197, 1377,
	198, 1377,
	199, 1377,
	200, 1377,
	201, 1377,
	202, 1377,
	203, 1377,
	204, 1377,
	205, 1377,
	207, 1377,
	208, 1377,
	210, 1377,
	211, 1377,
	213, 1377,
	214, 1377,
	215, 1377,
	216, 1377,
	217, 1377,
	218, 1377,
	219, 1377,
	220, 1377,
	221, 1377,
	223, 1377,
	224, 1377,
	226, 1377,
	227, 1377,
	228, 1377,
	229, 1377,
	230, 1377,
	235, 1377,
	236, 1377,
	237, 1377,
	240, 1377,
	241, 1377,
	242, 1377,
	244, 1377,
	246, 1377,
	247, 1377,
	249, 1377,
	251, 1377,
	252, 1377,
	253, 1377,
	255, 1377,
	259, 1377,
	260, 1377,
	261, 1377,
	262, 1377,
	263, 1377,
	264, 1377,
	266, 1377,
	267, 1377,
	268, 1377,
	270, 1377,
	271, 1377,
	273, 1377,
	274, 1377,
	277, 1377,
	278, 1377,
	279, 1377,
	280, 1377,
	281, 1377,
	282, 1377,
	283, 1377,
	286, 1377,
	287, 1377,
	288, 1377,
	289, 1377,
	291, 1377,
	292, 1377,
	293, 1377,
	294, 1377,
	295, 1377,
	296, 1377,
	297, 1377,
	298, 1377,
	299, 1377,
	300, 1377,
	301, 1377,
	302, 1377,
	303, 1377,
	304, 1377,
	305, 1377,
	306, 1377,
	307, 1377,
	308, 1377,
	309, 1377,
	310, 1377,
	311, 1377,
	312, 1377,
	314, 1377,
	316, 1377,
	317, 1377,
	318, 1377,
	319, 1377,
	320, 1377,
	321, 1377,
	322, 1377,
	323, 1377,
	324, 1377,
	325, 1377,
	326, 1377,
	327, 1377,
	328, 1377,
	329, 1377,
	330, 1377,
	331, 1377,
	332, 1377,
	334, 1377,
	335, 1377,
	339, 1377,
	340, 1377,
	341, 1377,
	343, 1377,
	344, 1377,
	345, 1377,
	346, 1377,
	347, 1377,
	350, 1377,
	352, 1377,
	353, 1377,
	355, 1377,
	356, 1377,
	357, 1377,
	360, 1377,
	361, 1377,
	362, 1377,
	364, 1377,
	366, 1377,
	367, 1377,
	368, 1377,
	369, 1377,
	370, 1377,
	371, 1377,
	372, 1377,
	373, 1377,
	374, 1377,
	375, 1377,
	376, 1377,
	377, 1377,
	378, 1377,
	380, 1377,
	381, 1377,
	382, 1377,
	383, 1377,
	384, 1377,
	385, 1377,
	386, 1377,
	387, 1377,
	388, 1377,
	389, 1377,
	390, 1377,
	391, 1377,
	392, 1377,
	393, 1377,
	394, 1377,
	396, 1377,
	397, 1377,
	399, 1377,
	400, 1377,
	401, 1377,
	402, 1377,
	403, 1377,
	404, 1377,
	405, 1377,
	406, 1377,
	407, 1377,
	408, 1377,
	409, 1377,
	410, 1377,
	411, 1377,
	413, 1377,
	415, 1377,
	416, 1377,
	417, 1377,
	423, 1377,
	424, 1377,
	426, 1377,
	427, 1377,
	428, 1377,
	429, 1377,
	430, 1377,
	431, 1377,
	432, 1377,
	433, 1377,
	434, 1377,
	435, 1377,
	437, 1377,
	438, 1377,
	439, 1377,
	441, 1377,
	442, 1377,
	443, 1377,
	444, 1377,
	445, 1377,
	446, 1377,
	447, 1377,
	449, 1377,
	450, 1377,
	451, 1377,
	452, 1377,
	453, 1377,
	454, 1377,
	455, 1377,
	456, 1377,
	457, 1377,
	458, 1377,
	459, 1377,
	460, 1377,
	462, 1377,
	463, 1377,
	464, 1377,
	465, 1377,
	466, 1377,
	467, 1377,
	469, 1377,
	470, 1377,
	471, 1377,
	472, 1377,
	473, 1377,
	474, 1377,
	476, 1377,
	477, 1377,
	478, 1377,
	479, 1377,
	480, 1377,
	481, 1377,
	482, 1377,
	483, 1377,
	485, 1377,
	487, 1377,
	488, 1377,
	489, 1377,
	490, 1377,
	491, 1377,
	492, 1377,
	493, 1377,
	494, 1377,
	495, 1377,
	496, 1377,
	497, 1377,
	498, 1377,
	499, 1377,
	500, 1377,
	501, 1377,
	502, 1377,
	503, 1377,
	504, 1377,
	506, 1377,
	507, 1377,
	509, 1377,
	510, 1377,
	512, 1377,
	513, 1377,
	514, 1377,
	515, 1377,
	516, 1377,
	517, 1377,
	518, 1377,
	519, 1377,
	521, 1377,
	522, 1377,
	523, 1377,
	524, 1377,
	525, 1377,
	527, 1377,
	529, 1377,
	530, 1377,
	531, 1377,
	532, 1377,
	533, 1377,
	534, 1377,
	535, 1377,
	537, 1377,
	538, 1377,
	539, 1377,
	540, 1377,
	542, 1377,
	543, 1377,
	546, 1377,
	547, 1377,
	548, 1377,
	549, 1377,
	550, 1377,
	551, 1377,
	552, 1377,
	554, 1377,
	557, 1377,
	558, 1377,
	559, 1377,
	560, 1377,
	561, 1377,
	562, 1377,
	564, 1377,
	565, 1377,
	566, 1377,
	567, 1377,
	568, 1377,
	569, 1377,
	570, 1377,
	575, 1377,
	576, 1377,
	577, 1377,
	578, 1377,
	579, 1377,
	580, 1377,
	-2, 0,
	-1, 1666,
	1, 568,
	610, 568,
	612, 568,
	614, 568,
	-2, 1615,
	-1, 1669,
	4, 2826,
	11, 2826,
	12, 2826,
	14, 2826,
	15, 2826,
	16, 2826,
	17, 2826,
	18, 2826,
	19, 2826,
	21, 2826,
	22, 2826,
	23, 2826,
	24, 2826,
	25, 2826,
	26, 2826,
	27, 2826,
	29, 2826,
	30, 2826,
	33, 2826,
	34, 2826,
	36, 2826,
	38, 2826,
	41, 2826,
	42, 2826,
	44, 2826,
	45, 2826,
	46, 2826,
	47, 2826,
	48, 2826,
	49, 2826,
	50, 2826,
	51, 2826,
	53, 2826,
	54, 2826,
	55, 2826,
	56, 2826,
	58, 2826,
	59, 2826,
	60, 2826,
	61, 2826,
	62, 2826,
	63, 2826,
	64, 2826,
	67, 2826,
	68, 2826,
	69, 2826,
	70, 2826,
	71, 2826,
	73, 2826,
	74, 2826,
	75, 2826,
	76, 2826,
	79, 2826,
	80, 2826,
	81, 2826,
	82, 2826,
	83, 2826,
	84, 2826,
	85, 2826,
	86, 2826,
	88, 2826,
	89, 2826,
	90, 2826,
	91, 2826,
	92, 2826,
	94, 2826,
	95, 2826,
	96, 2826,
	97, 2826,
	98, 2826,
	99, 2826,
	100, 2826,
	101, 2826,
	103, 2826,
	104, 2826,
	105, 2826,
	106, 2826,
	107, 2826,
	108, 2826,
	109, 2826,
	117, 2826,
	118, 2826,
	119, 2826,
	120, 2826,
	121, 2826,
	123, 2826,
	124, 2826,
	125, 2826,
	126, 2826,
	128, 2826,
	129, 2826,
	130, 2826,
	132, 2826,
	133, 2826,
	134, 2826,
	136, 2826,
	137, 2826,
	138, 2826,
	141, 2826,
	142, 2826,
	143, 2826,
	145, 2826,
	146, 2826,
	147, 2826,
	149, 2826,
	150, 2826,
	151, 2826,
	153, 2826,
	154, 2826,
	155, 2826,
	156, 2826,
	157, 2826,
	158, 2826,
	159, 2826,
	160, 2826,
	161, 2826,
	162, 2826,
	163, 2826,
	164, 2826,
	165, 2826,
	166, 2826,
	167, 2826,
	168, 2826,
	169, 2826,
	173, 2826,
	174, 2826,
	175, 2826,
	176, 2826,
	177, 2826,
	178, 2826,
	179, 2826,
	180, 2826,
	183, 2826,
	184, 2826,
	186, 2826,
	187, 2826,
	188, 2826,
	191, 2826,
	192, 2826,
	193, 2826,
	194, 2826,
	195, 2826,
	196, 2826,
	197, 2826,
	198, 2826,
	199, 2826,
	200, 2826,
	201, 2826,
	202, 2826,
	203, 2826,
	204, 2826,
	205, 2826,
	207, 2826,
	208, 2826,
	210, 2826,
	211, 2826,
	213, 2826,
	214, 2826,
	215, 2826,
	216, 2826,
	217, 2826,
	218, 2826,
	219, 2826,
	220, 2826,
	221, 2826,
	222, 2826,
	223, 2826,
	224, 2826,
	225, 2826,
	226, 2826,
	227, 2826,
	228, 2826,
	229, 2826,
	230, 2826,
	232, 2826,
	233, 2826,
	235, 2826,
	236, 2826,
	237, 2826,
	239, 2826,
	240, 2826,
	241, 2826,
	242, 2826,
	244, 2826,
	246, 2826,
	247, 2826,
	248, 2826,
	249, 2826,
	250, 2826,
	251, 2826,
	252, 2826,
	253, 2826,
	254, 2826,
	255, 2826,
	257, 2826,
	258, 2826,
	259, 2826,
	260, 2826,
	261, 2826,
	262, 2826,
	263, 2826,
	264, 2826,
	266, 2826,
	267, 2826,
	268, 2826,
	270, 2826,
	271, 2826,
	272, 2826,
	273, 2826,
	274, 2826,
	275, 2826,
	277, 2826,
	278, 2826,
	279, 2826,
	280, 2826,
	281, 2826,
	282, 2826,
	283, 2826,
	286, 2826,
	287, 2826,
	288, 2826,
	289, 2826,
	290, 2826,
	291, 2826,
	292, 2826,
	293, 2826,
	294, 2826,
	295, 2826,
	296, 2826,
	297, 2826,
	298, 2826,
	299, 2826,
	300, 2826,
	301, 2826,
	302, 2826,
	303, 2826,
	304, 2826,
	305, 2826,
	306, 2826,
	307, 2826,
	308, 2826,
	309, 2826,
	310, 2826,
	311, 2826,
	312, 2826,
	314, 2826,
	315, 2826,
	316, 2826,
	317, 2826,
	318, 2826,
	319, 2826,
	320, 2826,
	321, 2826,
	322, 2826,
	323, 2826,
	324, 2826,
	325, 2826,
	326, 2826,
	327, 2826,
	328, 2826,
	329, 2826,
	330, 2826,
	331, 2826,
	332, 2826,
	334, 2826,
	335, 2826,
	338, 2826,
	339, 2826,
	340, 2826,
	341, 2826,
	343, 2826,
	344, 2826,
	345, 2826,
	346, 2826,
	347, 2826,
	350, 2826,
	352, 2826,
	355, 2826,
	356, 2826,
	357, 2826,
	358, 2826,
	360, 2826,
	361, 2826,
	362, 2826,
	364, 2826,
	366, 2826,
	367, 2826,
	368, 2826,
	369, 2826,
	370, 2826,
	371, 2826,
	372, 2826,
	373, 2826,
	374, 2826,
	375, 2826,
	376, 2826,
	377, 2826,
	378, 2826,
	380, 2826,
	381, 2826,
	382, 2826,
	383, 2826,
	384, 2826,
	385, 2826,
	386, 2826,
	387, 2826,
	388, 2826,
	389, 2826,
	390, 2826,
	391, 2826,
	392, 2826,
	393, 2826,
	394, 2826,
	396, 2826,
	397, 2826,
	399, 2826,
	400, 2826,
	401, 2826,
	402, 2826,
	403, 2826,
	404, 2826,
	405, 2826,
	406, 2826,
	407, 2826,
	408, 2826,
	409, 2826,
	410, 2826,
	411, 2826,
	413, 2826,
	415, 2826,
	416, 2826,
	417, 2826,
	423, 2826,
	424, 2826,
	425, 2826,
	426, 2826,
	427, 2826,
	428, 2826,
	429, 2826,
	430, 2826,
	431, 2826,
	432, 2826,
	433, 2826,
	434, 2826,
	435, 2826,
	437, 2826,
	438, 2826,
	439, 2826,
	440, 2826,
	441, 2826,
	442, 2826,
	443, 2826,
	444, 2826,
	445, 2826,
	446, 2826,
	447, 2826,
	448, 2826,
	449, 2826,
	450, 2826,
	451, 2826,
	452, 2826,
	453, 2826,
	454, 2826,
	455, 2826,
	456, 2826,
	457, 2826,
	458, 2826,
	459, 2826,
	460, 2826,
	462, 2826,
	463, 2826,
	464, 2826,
	465, 2826,
	466, 2826,
	467, 2826,
	469, 2826,
	470, 2826,
	471, 2826,
	472, 2826,
	473, 2826,
	474, 2826,
	475, 2826,
	476, 2826,
	477, 2826,
	478, 2826,
	479, 2826,
	480, 2826,
	481, 2826,
	482, 2826,
	483, 2826,
	485, 2826,
	487, 2826,
	488, 2826,
	489, 2826,
	490, 2826,
	491, 2826,
	492, 2826,
	493, 2826,
	494, 2826,
	495, 2826,
	496, 2826,
	497, 2826,
	498, 2826,
	499, 2826,
	500, 2826,
	501, 2826,
	502, 2826,
	503, 2826,
	504, 2826,
	506, 2826,
	507, 2826,
	508, 2826,
	509, 2826,
	510, 2826,
	512, 2826,
	513, 2826,
	514, 2826,
	515, 2826,
	516, 2826,
	517, 2826,
	518, 2826,
	519, 2826,
	521, 2826,
	522, 2826,
	523, 2826,
	524, 2826,
	525, 2826,
	527, 2826,
	529, 2826,
	530, 2826,
	531, 2826,
	532, 2826,
	533, 2826,
	534, 2826,
	535, 2826,
	537, 2826,
	538, 2826,
	539, 2826,
	540, 2826,
	542, 2826,
	543, 2826,
	546, 2826,
	547, 2826,
	548, 2826,
	549, 2826,
	550, 2826,
	551, 2826,
	552, 2826,
	554, 2826,
	557, 2826,
	558, 2826,
	559, 2826,
	560, 2826,
	561, 2826,
	562, 2826,
	564, 2826,
	565, 2826,
	566, 2826,
	567, 2826,
	568, 2826,
	569, 2826,
	570, 2826,
	575, 2826,
	576, 2826,
	577, 2826,
	578, 2826,
	579, 2826,
	580, 2826,
	581, 2826,
	583, 2826,
	591, 2826,
	592, 2826,
	593, 2826,
	594, 2826,
	595, 2826,
	596, 2826,
	598, 2826,
	599, 2826,
	600, 2826,
	601, 2826,
	602, 2826,
	603, 2826,
	604, 2826,
	605, 2826,
	606, 2826,
	609, 2826,
	612, 2826,
	613, 2826,
	615, 2826,
	616, 2826,
	-2, 0,
	-1, 1674,
	190, 2703,
	526, 2703,
	593, 2703,
	613, 2703,
	-2, 0,
	-1, 1728,
	401, 923,
	467, 923,
	510, 923,
	531, 923,
	-2, 0,
	-1, 1739,
	1, 1449,
	610, 1449,
	612, 1449,
	614, 1449,
	-2, 0,
	-1, 1756,
	1, 918,
	610, 918,
	612, 918,
	614, 918,
	-2, 0,
	-1, 1757,
	1, 962,
	610, 962,
	612, 962,
	614, 962,
	-2, 0,
	-1, 1758,
	1, 970,
	610, 970,
	612, 970,
	614, 970,
	-2, 0,
	-1, 1761,
	1, 927,
	610, 927,
	612, 927,
	614, 927,
	-2, 0,
	-1, 1763,
	1, 933,
	610, 933,
	612, 933,
	614, 933,
	-2, 0,
	-1, 1766,
	1, 929,
	610, 929,
	612, 929,
	614, 929,
	-2, 0,
	-1, 1771,
	1, 943,
	610, 943,
	612, 943,
	614, 943,
	-2, 0,
	-1, 1804,
	1, 2686,
	610, 2686,
	612, 2686,
	613, 2686,
	614, 2686,
	-2, 0,
	-1, 1808,
	1, 1020,
	610, 1020,
	612, 1020,
	614, 1020,
	-2, 0,
	-1, 1825,
	1, 1499,
	614, 1499,
	-2, 1504,
	-1, 1828,
	172, 1658,
	185, 1658,
	276, 1658,
	348, 1658,
	-2, 1596,
	-1, 1928,
	152, 1617,
	172, 1617,
	185, 1617,
	243, 1617,
	276, 1617,
	348, 1617,
	359, 1617,
	544, 1617,
	-2, 2068,
	-1, 1989,
	612, 2243,
	-2, 0,
	-1, 2024,
	152, 1617,
	172, 1617,
	185, 1617,
	243, 1617,
	276, 1617,
	348, 1617,
	359, 1617,
	544, 1617,
	-2, 1750,
	-1, 2064,
	526, 2700,
	613, 2700,
	616, 2700,
	-2, 0,
	-1, 2081,
	611, 1891,
	-2, 1879,
	-1, 2113,
	190, 2700,
	613, 2700,
	616, 2700,
	-2, 0,
	-1, 2156,
	1, 727,
	614, 727,
	-2, 1504,
	-1, 2310,
	225, 268,
	-2, 2391,
	-1, 2311,
	225, 269,
	-2, 323,
	-1, 2422,
	1, 920,
	610, 920,
	612, 920,
	614, 920,
	-2, 0,
	-1, 2423,
	1, 964,
	610, 964,
	612, 964,
	614, 964,
	-2, 0,
	-1, 2424,
	1, 972,
	610, 972,
	612, 972,
	614, 972,
	-2, 0,
	-1, 2425,
	1, 1022,
	610, 1022,
	612, 1022,
	614, 1022,
	-2, 0,
	-1, 2466,
	1, 945,
	610, 945,
	612, 945,
	614, 945,
	-2, 0,
	-1, 2487,
	1, 1005,
	610, 1005,
	612, 1005,
	614, 1005,
	-2, 0,
	-1, 2534,
	446, 1685,
	447, 1685,
	-2, 1924,
	-1, 2565,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 1944,
	-1, 2566,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 1945,
	-1, 2567,
	95, 0,
	257, 0,
	258, 0,
	595, 0,
	596, 0,
	-2, 1946,
	-1, 2568,
	95, 0,
	257, 0,
	258, 0,
	595, 0,
	596, 0,
	-2, 1947,
	-1, 2569,
	95, 0,
	257, 0,
	258, 0,
	595, 0,
	596, 0,
	-2, 1948,
	-1, 2570,
	95, 0,
	257, 0,
	258, 0,
	595, 0,
	596, 0,
	-2, 1949,
	-1, 2571,
	95, 0,
	257, 0,
	258, 0,
	595, 0,
	596, 0,
	-2, 1950,
	-1, 2572,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 1951,
	-1, 2584,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 1963,
	-1, 2585,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 1964,
	-1, 2586,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 1965,
	-1, 2590,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 1972,
	-1, 2596,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 1976,
	-1, 2598,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 1984,
	-1, 2599,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 1985,
	-1, 2600,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 1986,
	-1, 2601,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 1987,
	-1, 2775,
	5, 2395,
	190, 2254,
	611, 2392,
	-2, 2383,
	-1, 2776,
	190, 2255,
	-2, 2777,
	-1, 2777,
	190, 2256,
	-2, 2585,
	-1, 2778,
	190, 2257,
	-2, 2465,
	-1, 2779,
	190, 2258,
	-2, 2523,
	-1, 2780,
	190, 2259,
	-2, 2570,
	-1, 2781,
	190, 2260,
	-2, 2698,
	-1, 2782,
	190, 2261,
	-2, 2051,
	-1, 2853,
	1, 1751,
	2, 1751,
	106, 1751,
	152, 1751,
	172, 1751,
	185, 1751,
	191, 1751,
	209, 1751,
	212, 1751,
	239, 1751,
	243, 1751,
	254, 1751,
	272, 1751,
	276, 1751,
	315, 1751,
	348, 1751,
	353, 1751,
	359, 1751,
	436, 1751,
	440, 1751,
	544, 1751,
	555, 1751,
	572, 1751,
	573, 1751,
	574, 1751,
	584, 1751,
	610, 1751,
	612, 1751,
	614, 1751,
	616, 1751,
	-2, 1750,
	-1, 2866,
	611, 2364,
	-2, 2378,
	-1, 2868,
	1, 340,
	572, 340,
	-2, 1644,
	-1, 2898,
	611, 1890,
	-2, 1880,
	-1, 3100,
	1, 1352,
	431, 1309,
	469, 1309,
	587, 1309,
	610, 1352,
	612, 1352,
	614, 1352,
	-2, 1644,
	-1, 3279,
	354, 1688,
	-2, 2816,
	-1, 3280,
	354, 1689,
	-2, 2683,
	-1, 3284,
	446, 2320,
	447, 2320,
	-2, 2049,
	-1, 3285,
	446, 2324,
	447, 2324,
	-2, 2050,
	-1, 3286,
	446, 2321,
	447, 2321,
	-2, 2049,
	-1, 3287,
	446, 2325,
	447, 2325,
	-2, 2050,
	-1, 3300,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 1974,
	-1, 3301,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 1978,
	-1, 3307,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 1980,
	-1, 3534,
	1, 722,
	610, 722,
	612, 722,
	614, 722,
	-2, 1504,
	-1, 3721,
	43, 2355,
	-2, 1092,
	-1, 3726,
	1, 1352,
	610, 1352,
	612, 1352,
	614, 1352,
	-2, 1644,
	-1, 3833,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 1982,
	-1, 3840,
	248, 0,
	250, 0,
	338, 0,
	-2, 2001,
	-1, 3908,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 2030,
	-1, 3909,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 2031,
	-1, 3910,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 2032,
	-1, 3914,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 2036,
	-1, 3915,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 2037,
	-1, 3916,
	14, 0,
	15, 0,
	16, 0,
	591, 0,
	592, 0,
	593, 0,
	-2, 2038,
	-1, 3964,
	611, 2365,
	-2, 2379,
	-1, 4164,
	613, 2933,
	-2, 1570,
	-1, 4221,
	248, 0,
	250, 0,
	338, 0,
	-2, 2002,
	-1, 4224,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 2005,
	-1, 4225,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 2007,
	-1, 4336,
	613, 2380,
	-2, 1387,
	-1, 4496,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 2006,
	-1, 4497,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 2008,
	-1, 4508,
	248, 0,
	-2, 2041,
	-1, 4695,
	248, 0,
	-2, 2042,
	-1, 4915,
	50, 0,
	222, 0,
	275, 0,
	475, 0,
	581, 0,
	594, 0,
	-2, 2780,
}

const sqlPrivate = 57344

const sqlLast = 139557

var sqlAct = [...]int{
	278, 5033, 4850, 3173, 5106, 1369, 3186, 3438, 3032, 4961,
	4743, 2964, 4849, 4735, 4977, 4914, 4564, 4927, 5047, 4901,
	4806, 4787, 4864, 1572, 4883, 4840, 3709, 4861, 4928, 1366,
	2307, 4929, 4546, 4664, 4204, 3007, 4641, 3710, 2205, 4612,
	4925, 4699, 4628, 3873, 4913, 4986, 3974, 4456, 4451, 2385,
	1293, 4412, 4445, 4569, 1361, 4385, 4517, 4332, 3825, 3143,
	3558, 1282, 1113, 4485, 2544, 2397, 4148, 3743, 4156, 1547,
	3561, 4436, 4647, 4772, 724, 838, 1359, 4438, 4075, 3293,
	2395, 4313, 4333, 2808, 2613, 3737, 1837, 2965, 4461, 3621,
	3694, 3198, 3683, 4103, 4122, 2358, 3047, 2552, 4105, 2069,
	1692, 2068, 4513, 838, 3564, 3774, 3159, 2393, 1427, 3776,
	1104, 2138, 796, 3162, 3701, 3157, 3698, 3132, 3699, 3546,
	3676, 2545, 3675, 3547, 1520, 2030, 2214, 3548, 2880, 735,
	3967, 3461, 3491, 3484, 1112, 185, 4203, 3421, 3453, 917,
	3188, 1690, 3174, 3442, 2294, 4260, 3193, 3107, 2242, 2296,
	4962, 3585, 2846, 2290, 3934, 1999, 4700, 913, 4, 1975,
	2549, 2626, 1936, 2226, 3192, 3136, 1166, 2848, 835, 3444,
	3277, 3420, 1906, 1273, 792, 908, 833, 2790, 2691, 1364,
	2295, 1630, 3071, 2288, 2282, 2263, 2270, 1163, 1408, 2193,
	2826, 2197, 2693, 3144, 1159, 1825, 2136, 272, 1338, 1168,
	2682, 2000, 2610, 2183, 2533, 2516, 2881, 2514, 2048, 1667,
	3167, 2345, 3006, 1352, 1633, 2019, 769, 711, 839, 840,
	2285, 733, 2344, 2989, 271, 2990, 988, 4807, 2950, 185,
	2685, 2805, 1549, 2016, 2845, 1276, 3702, 1395, 2909, 1970,
	2835, 2009, 2816, 2663, 1255, 1290, 2737, 1920, 2771, 1838,
	195, 2515, 1839, 2517, 1771, 196, 1349, 777, 1736, 2371,
	2304, 788, 1165, 1665, 1567, 1756, 1272, 1658, 4978, 2538,
	1528, 934, 844, 5034, 1144, 111, 728, 44, 43, 41,
	752, 32, 30, 2125, 28, 1844, 3330, 1278, 1253, 889,
	828, 725, 1824, 737, 1578, 1009, 3948, 3324, 3949, 847,
	844, 3440, 5117, 5109, 5097, 890, 2825, 3762, 2825, 5096,
	3975, 5066, 5064, 2825, 1571, 4568, 4568, 2127, 4531, 1108,
	4923, 2127, 2127, 2127, 2127, 5007, 4537, 847, 4963, 2316,
	2127, 4953, 4964, 1170, 4951, 2825, 4948, 4945, 2825, 4911,
	4949, 4946, 4910, 2316, 1762, 3752, 2316, 4909, 4534, 4899,
	4897, 3203, 2148, 4568, 4568, 4892, 4887, 4886, 4859, 4650,
	4568, 4568, 4568, 4826, 4819, 4818, 4811, 2889, 2825, 2825,
	2316, 4786, 4783, 4765, 4697, 2316, 4568, 4402, 2889, 4678,
	4643, 4587, 4586, 4185, 4005, 2316, 2316, 4575, 4287, 4574,
	4567, 2316, 1702, 4568, 4568, 4524, 4498, 1404, 4472, 2316,
	2889, 3501, 3203, 4469, 1256, 1256, 4380, 3762, 2145, 4360,
	2825, 1285, 4223, 2825, 1270, 4172, 2889, 4166, 4119, 3769,
	1097, 3769, 4120, 4036, 4004, 1404, 1108, 4037, 4005, 2394,
	2148, 1852, 1853, 3959, 3957, 2911, 1088, 3960, 3958, 1288,
	3941, 1087, 2885, 3857, 2825, 3853, 1683, 2316, 909, 2825,
	2688, 3768, 3437, 3753, 1883, 3769, 2825, 3938, 3432, 3431,
	3519, 1855, 2825, 2825, 3516, 3382, 3762, 3380, 3372, 3383,
	94, 3381, 3373, 1109, 2818, 73, 3370, 912, 911, 1308,
	2825, 3341, 3339, 1103, 2148, 2825, 3202, 1908, 3340, 3184,
	3203, 2145, 74, 2381, 3183, 2934, 1854, 2888, 2381, 2825,
	2878, 2889, 2870, 2316, 2825, 2824, 2316, 1284, 79, 2825,
	2380, 2148, 1852, 1853, 2381, 1885, 1886, 1887, 1896, 1897,
	1898, 1316, 1259, 3292, 1260, 2148, 1257, 1580, 2825, 4827,
	4701, 4692, 242, 4680, 1889, 1883, 4650, 3203, 3938, 2817,
	4449, 4402, 1855, 2689, 2145, 4361, 4185, 4121, 88, 3039,
	2219, 1902, 2949, 2162, 2126, 2142, 1852, 1853, 3138, 1309,
	2315, 3057, 2947, 1995, 1566, 4054, 3828, 3801, 1908, 1309,
	2017, 2275, 3754, 2862, 4278, 1580, 2825, 1854, 2861, 1883,
	1738, 2860, 244, 2859, 2858, 1261, 1855, 1874, 242, 915,
	1258, 1096, 3755, 1571, 1095, 1094, 1871, 1093, 1092, 1091,
	1090, 1086, 49, 1860, 110, 1085, 1084, 1083, 1082, 1081,
	94, 107, 1908, 3391, 3392, 1080, 3409, 3410, 3411, 3249,
	4463, 1854, 1079, 1078, 2690, 1077, 2687, 1076, 1075, 1580,
	1074, 243, 1073, 1072, 1071, 4219, 1070, 1069, 244, 1142,
	1068, 1067, 1852, 1853, 1049, 236, 986, 985, 984, 983,
	982, 981, 1882, 1884, 237, 980, 979, 978, 977, 976,
	975, 974, 973, 972, 971, 1883, 970, 969, 968, 967,
	95, 966, 1855, 965, 1877, 1878, 1879, 1880, 964, 963,
	962, 1592, 197, 3329, 1860, 4235, 2128, 243, 3406, 961,
	2128, 2128, 2128, 2128, 960, 959, 958, 957, 1908, 2128,
	956, 2458, 955, 954, 953, 952, 951, 1854, 950, 939,
	1875, 938, 937, 932, 931, 924, 923, 1874, 922, 907,
	906, 863, 862, 1893, 861, 860, 1903, 851, 1860, 850,
	849, 848, 812, 1882, 1884, 803, 802, 801, 197, 783,
	3391, 3392, 266, 3409, 3410, 3411, 2145, 265, 264, 1899,
	2957, 1900, 2145, 263, 262, 261, 260, 259, 1869, 1870,
	258, 257, 4218, 256, 255, 254, 253, 242, 252, 251,
	1371, 1168, 1852, 1853, 2145, 250, 1891, 1882, 1884, 249,
	154, 248, 247, 246, 245, 3397, 3984, 2692, 3953, 1905,
	3770, 1875, 3487, 3352, 3335, 3170, 3435, 3326, 1168, 1168,
	1168, 3229, 1855, 242, 1877, 1878, 1879, 1880, 3152, 3117,
	3391, 3392, 1978, 2957, 1860, 3406, 1430, 244, 2893, 1977,
	1168, 99, 2867, 2852, 2720, 2718, 1168, 1552, 2020, 1371,
	2506, 2704, 2191, 4465, 1557, 1875, 2147, 1854, 2043, 1901,
	3436, 2702, 1947, 1819, 1574, 1938, 1416, 1981, 1978, 4938,
	3413, 242, 1579, 244, 1168, 1977, 1168, 1851, 1168, 1890,
	1412, 1413, 1414, 1882, 1884, 1552, 243, 1292, 1876, 2148,
	1905, 4683, 1399, 2921, 2126, 2145, 2142, 193, 102, 3752,
	236, 106, 2509, 1976, 1286, 3406, 1309, 3391, 3392, 237,
	2145, 1371, 3407, 4937, 4934, 4912, 1635, 1591, 1538, 4896,
	2817, 244, 243, 4791, 4704, 242, 2686, 242, 1213, 4689,
	4559, 1552, 3397, 1764, 1905, 916, 236, 197, 1552, 4681,
	154, 1875, 4512, 4042, 4470, 237, 1881, 1168, 1907, 1168,
	4448, 4293, 1533, 4258, 1552, 4257, 3391, 3392, 2902, 3409,
	3410, 3411, 4251, 1168, 1860, 1168, 4250, 1309, 4249, 1876,
	243, 4242, 4241, 197, 1945, 244, 4239, 244, 3843, 4234,
	4231, 4230, 1343, 1346, 236, 1391, 4132, 4118, 1570, 1639,
	1642, 1905, 3988, 237, 1356, 3987, 1894, 3413, 3986, 3963,
	3929, 3928, 3397, 158, 3927, 3849, 2955, 1393, 1423, 3844,
	1517, 1522, 1161, 1876, 1552, 3482, 3428, 3419, 198, 3390,
	1905, 197, 1938, 3387, 243, 3386, 243, 1555, 1939, 1907,
	1937, 3406, 1852, 1853, 1168, 3384, 3379, 1168, 236, 3407,
	236, 1856, 1857, 1858, 1859, 1861, 1862, 237, 3378, 237,
	3377, 3374, 1525, 194, 3371, 1580, 3351, 1706, 3334, 844,
	1586, 3327, 1855, 3325, 3185, 1940, 185, 185, 2853, 1385,
	3408, 2675, 1851, 1907, 1269, 197, 1881, 910, 2361, 3397,
	1569, 1568, 3154, 1850, 2323, 2321, 847, 5112, 1628, 5055,
	5054, 3508, 4976, 4974, 1294, 4052, 1687, 1854, 2954, 1876,
	3875, 4851, 1892, 4133, 4770, 4755, 1707, 1670, 1672, 3407,
	4751, 4464, 1866, 1867, 1873, 1895, 1872, 1868, 1905, 1865,
	1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 3397, 1645,
	4750, 4749, 4706, 4245, 4729, 3433, 4728, 4244, 4726, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 4703, 4702, 242,
	1377, 4676, 2616, 4662, 1399, 1111, 4659, 1399, 4658, 1907,
	242, 2954, 4651, 1668, 1863, 1864, 1856, 1857, 1858, 1859,
	1861, 1862, 1168, 4639, 4638, 4583, 1659, 4554, 1168, 4510,
	242, 4493, 4492, 4432, 4428, 4425, 3407, 2622, 1905, 4403,
	4277, 4256, 1661, 3413, 4186, 4040, 4039, 3408, 4020, 244,
	4019, 3391, 3392, 4017, 1860, 2954, 1109, 3944, 3932, 3839,
	244, 1925, 3771, 3403, 3404, 3405, 4705, 3479, 1829, 3763,
	3402, 3400, 3401, 3393, 3394, 3395, 3396, 3398, 3399, 3729,
	244, 3640, 3596, 4532, 3563, 3407, 1712, 3510, 1852, 1853,
	3356, 3355, 1682, 3350, 1823, 3316, 3131, 4133, 243, 1865,
	1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 1701, 243,
	2982, 1883, 236, 1984, 1983, 1905, 1982, 3408, 1855, 1979,
	1971, 237, 1969, 236, 2900, 2899, 1585, 2864, 2857, 243,
	2823, 2700, 237, 1168, 1168, 1168, 1924, 2042, 1998, 1168,
	3153, 1993, 1992, 236, 1908, 1927, 1290, 1780, 1290, 3169,
	1991, 1990, 237, 1854, 1989, 1988, 1987, 1986, 1985, 1966,
	197, 1729, 1965, 1430, 1905, 1964, 1963, 1962, 1961, 1960,
	1959, 1958, 1957, 1956, 1955, 1168, 1765, 1997, 838, 1371,
	197, 242, 1954, 1953, 2086, 838, 1952, 1371, 2046, 1371,
	3403, 3404, 3405, 1951, 3408, 1830, 1940, 3402, 3400, 3401,
	3393, 3394, 3395, 3396, 3398, 3399, 1926, 1923, 2065, 1918,
	2891, 1384, 1313, 1304, 4435, 4289, 2115, 4227, 2117, 1826,
	3983, 3956, 2006, 3397, 3947, 3338, 1834, 2855, 1833, 1664,
	4291, 244, 3982, 1088, 1858, 1859, 1861, 1862, 1087, 1939,
	1905, 2054, 3506, 3408, 1828, 1921, 3758, 1980, 4363, 1371,
	2038, 3033, 3391, 3392, 3599, 1168, 3391, 3392, 2059, 1409,
	1860, 5046, 1847, 1848, 4759, 1411, 4752, 3402, 3400, 3401,
	3393, 3394, 3395, 3396, 3398, 3399, 4652, 4468, 2150, 1168,
	243, 2053, 2182, 4406, 185, 1404, 4930, 1430, 4405, 2003,
	2004, 2182, 1256, 2182, 236, 4404, 2208, 1109, 4362, 4280,
	4192, 4191, 5003, 237, 2719, 2717, 5001, 4190, 4189, 1882,
	1884, 2703, 1285, 2180, 1285, 3391, 3392, 2027, 1972, 1973,
	4188, 2701, 4187, 4006, 4684, 3951, 3950, 1852, 1853, 3773,
	3772, 197, 1410, 3765, 3764, 3660, 3391, 3392, 2154, 1399,
	1288, 2189, 1288, 3011, 4136, 4926, 2060, 3393, 3394, 3395,
	3396, 3398, 3399, 2109, 1404, 4648, 2051, 1855, 2020, 3826,
	1728, 1978, 4066, 2052, 2028, 2153, 242, 1875, 1977, 242,
	1821, 3376, 4682, 3375, 3298, 844, 2253, 2018, 1664, 2047,
	2174, 2173, 844, 2025, 2182, 2184, 3403, 3404, 3405, 4558,
	1961, 1961, 1854, 3402, 3400, 3401, 3393, 3394, 3395, 3396,
	3398, 3399, 847, 2993, 1407, 242, 2272, 3630, 1284, 847,
	1284, 2130, 1404, 1996, 3069, 2168, 244, 3391, 3392, 244,
	3409, 3410, 3411, 1109, 3397, 1405, 4035, 2037, 2036, 2035,
	1946, 2033, 2032, 2022, 2031, 1552, 1552, 4126, 3712, 3842,
	3711, 3565, 1065, 1781, 4721, 1430, 1905, 1949, 4722, 1737,
	2297, 2414, 2386, 4642, 2156, 244, 2066, 4959, 4446, 242,
	3199, 2688, 3684, 4722, 242, 243, 4392, 1738, 243, 2298,
	4140, 4115, 1856, 1857, 1858, 1859, 1861, 1862, 4072, 236,
	4063, 4045, 236, 3798, 1663, 3532, 4514, 3397, 237, 1066,
	39, 237, 3406, 2478, 2391, 2329, 3440, 2132, 3877, 2683,
	2134, 2362, 4935, 2177, 243, 3344, 2139, 2152, 3397, 244,
	2141, 2898, 2991, 1994, 244, 2144, 197, 2080, 236, 197,
	1974, 3692, 2249, 2355, 2257, 1876, 1638, 237, 1562, 1380,
	2267, 3407, 2252, 1268, 1342, 2308, 2313, 4950, 3035, 2259,
	4947, 3054, 1552, 3507, 1552, 1401, 1552, 2185, 3748, 4011,
	3051, 4578, 2175, 4550, 2689, 197, 3049, 5004, 243, 4744,
	4452, 4858, 3568, 243, 1552, 1552, 2213, 4030, 1045, 3166,
	4936, 1695, 236, 3667, 4581, 5005, 2262, 236, 1552, 4577,
	4556, 237, 3820, 3536, 2225, 1907, 237, 4085, 4607, 3397,
	1552, 4349, 1552, 1552, 1552, 1411, 1613, 902, 1605, 1063,
	1716, 1061, 2262, 2262, 2935, 5108, 2302, 4760, 5038, 197,
	1905, 2300, 2301, 1778, 197, 3407, 838, 1059, 4600, 1564,
	2179, 1057, 3228, 2247, 2260, 2472, 4589, 2351, 4395, 4394,
	1406, 1779, 4083, 1663, 844, 2690, 1054, 2687, 1168, 2169,
	2413, 2470, 1411, 3395, 3396, 3398, 3399, 4082, 3109, 4074,
	2356, 2953, 2953, 4060, 3413, 1569, 1568, 4084, 2178, 4983,
	2524, 847, 1410, 4059, 2246, 2368, 2951, 2951, 2258, 2243,
	4057, 3598, 4056, 1905, 2266, 1168, 4044, 1864, 1856, 1857,
	1858, 1859, 1861, 1862, 4347, 1614, 4003, 4002, 2389, 3408,
	1402, 3673, 4344, 3672, 1905, 3632, 3407, 3500, 2376, 1403,
	3349, 2314, 3348, 3347, 903, 3346, 2399, 3302, 2418, 1410,
	3067, 1168, 3066, 1168, 3056, 1777, 3045, 3037, 3027, 3026,
	1168, 2522, 3021, 2086, 2086, 1430, 3020, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 2337, 1168, 2378, 1168, 1168, 1168, 1168,
	2365, 2336, 3538, 3408, 1668, 1905, 1668, 3628, 4579, 3565,
	4551, 2219, 2892, 1714, 2443, 1286, 2374, 1286, 3019, 1661,
	2370, 2373, 1168, 2373, 2406, 2526, 1168, 1168, 2692, 2298,
	2386, 2405, 2998, 775, 1168, 2382, 1385, 2383, 1168, 2733,
	1168, 1168, 2261, 844, 2513, 2997, 2524, 1109, 1430, 1109,
	5039, 1107, 2550, 2551, 1168, 1168, 1168, 1168, 2958, 775,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 2261, 2261,
	847, 3401, 3393, 3394, 3395, 3396, 3398, 3399, 3015, 4364,
	2879, 3399, 2597, 2217, 3408, 1760, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 2422, 1730, 1827, 2732, 1168,
	2433, 4984, 1760, 2554, 2523, 3008, 3009, 2522, 1404, 2664,
	2665, 1290, 3163, 4298, 3008, 3009, 3008, 3009, 1430, 2157,
	4491, 4305, 2906, 2664, 2680, 2883, 1609, 1290, 2466, 4617,
	1565, 4343, 1651, 1051, 1650, 3393, 3394, 3395, 3396, 3398,
	3399, 2335, 1106, 1168, 1430, 3799, 2537, 2686, 4345, 2995,
	2728, 2423, 1862, 3402, 3400, 3401, 3393, 3394, 3395, 3396,
	3398, 3399, 2683, 1649, 2496, 1648, 2504, 1709, 1757, 2774,
	2774, 2788, 3629, 2664, 2410, 1817, 2809, 2811, 1820, 4328,
	2521, 2512, 2815, 2511, 1622, 2510, 4304, 2525, 2518, 2942,
	1328, 1394, 2520, 2255, 1759, 1088, 2869, 2628, 1088, 1088,
	2541, 810, 2679, 2542, 2543, 3206, 2508, 2186, 2187, 2612,
	2499, 1759, 1776, 4321, 2840, 2424, 2612, 2882, 1627, 3244,
	2981, 5004, 3290, 2476, 1794, 1790, 2865, 3403, 3404, 3405,
	1796, 4737, 1758, 723, 3402, 3400, 3401, 3393, 3394, 3395,
	3396, 3398, 3399, 905, 904, 1738, 3275, 5070, 1405, 1371,
	1371, 1738, 1726, 2464, 2929, 3053, 3808, 5040, 1108, 718,
	2523, 2427, 2980, 1256, 2730, 774, 2905, 2624, 4322, 2731,
	2967, 2375, 2734, 3535, 2735, 2736, 4341, 1285, 2430, 2930,
	2832, 3807, 2421, 2677, 4932, 1710, 2080, 2080, 3052, 2908,
	2312, 774, 1430, 1285, 4027, 2692, 2027, 3050, 1832, 1109,
	2831, 2927, 185, 3048, 2620, 1288, 3256, 3246, 1383, 1109,
	2487, 2618, 2484, 1109, 4712, 808, 1634, 3866, 4393, 2924,
	1405, 1288, 2083, 4058, 2498, 2886, 4055, 3991, 2086, 4041,
	2952, 2770, 2839, 2800, 2844, 2783, 2521, 2850, 2851, 2904,
	2813, 3978, 1399, 2227, 2219, 2218, 2821, 2822, 2932, 3679,
	2938, 4014, 3671, 2833, 2837, 2838, 4739, 1055, 3289, 1055,
	1980, 3626, 2025, 2854, 4346, 2894, 2231, 2485, 1401, 1632,
	5041, 4095, 2940, 1284, 2215, 1055, 1430, 776, 3055, 1056,
	3615, 4618, 2471, 1715, 3391, 3392, 2244, 2970, 948, 1284,
	1552, 5050, 2431, 4616, 1055, 2486, 3018, 4490, 2469, 4614,
	1371, 1773, 1109, 776, 2996, 3100, 2074, 5016, 2211, 2941,
	2320, 2319, 2505, 4025, 5025, 2901, 2217, 2959, 5024, 4823,
	3259, 1168, 1168, 2228, 1168, 2926, 2994, 3001, 2915, 4096,
	2939, 1126, 2918, 2877, 2919, 1972, 1973, 5072, 3616, 2216,
	1401, 2495, 2933, 1105, 3282, 3283, 2956, 4991, 4613, 838,
	2925, 1371, 2219, 1406, 2923, 2910, 3142, 2594, 2008, 3607,
	4209, 2250, 3016, 900, 4933, 899, 3802, 3135, 4208, 2212,
	5042, 3680, 4094, 1791, 3745, 3252, 4615, 4317, 3031, 1611,
	2692, 3614, 1552, 4318, 2985, 4339, 3046, 3177, 3746, 3000,
	2127, 4903, 1376, 4904, 4323, 1552, 3677, 1552, 2999, 2936,
	3194, 4835, 4342, 1552, 4541, 2245, 4745, 3034, 4767, 3150,
	2273, 3017, 3023, 1402, 2916, 1552, 3112, 3608, 1608, 3022,
	2920, 3114, 1403, 3025, 2038, 1406, 3197, 3863, 2972, 2975,
	3313, 2608, 1634, 2232, 2931, 2962, 4320, 809, 1788, 1371,
	3196, 1371, 3062, 2012, 3068, 3010, 3012, 3013, 3014, 3101,
	3102, 3146, 2198, 4324, 3209, 3210, 3397, 2199, 3258, 1037,
	3606, 3311, 2606, 1168, 3643, 3216, 3217, 3218, 3230, 4931,
	3231, 3745, 1713, 3537, 1037, 1577, 3024, 1584, 940, 1590,
	3029, 5044, 1327, 1101, 3036, 1402, 773, 1739, 811, 3255,
	3043, 2015, 807, 2969, 1403, 3200, 3232, 1563, 1101, 2233,
	2234, 2497, 2293, 3552, 941, 3059, 2010, 3204, 3864, 3060,
	3061, 4821, 719, 844, 3211, 185, 3212, 3140, 1792, 3104,
	2256, 3580, 3110, 1311, 2013, 2229, 2273, 3191, 4990, 2592,
	1168, 4738, 2595, 1967, 1569, 3115, 1168, 1168, 3201, 2953,
	847, 2254, 1052, 3226, 3207, 3179, 844, 5048, 1681, 4340,
	1686, 3129, 3504, 3586, 2973, 4822, 3181, 4422, 3139, 3664,
	2292, 2080, 5014, 3407, 1700, 2273, 1705, 2011, 5068, 2429,
	4205, 2200, 2230, 847, 3304, 1038, 1711, 3105, 2218, 3579,
	2269, 2611, 2591, 4487, 2209, 3172, 4319, 4503, 2868, 2204,
	1038, 3182, 1168, 1168, 720, 2465, 2239, 3257, 1168, 4869,
	4374, 1404, 742, 3308, 2602, 3455, 1917, 2268, 3261, 3588,
	3263, 1168, 1168, 3180, 1668, 1793, 1789, 1168, 1168, 1795,
	3103, 1725, 1727, 1168, 3161, 3354, 4329, 4330, 2603, 3678,
	2241, 2426, 1763, 3309, 2604, 2008, 5073, 3314, 2609, 4026,
	2254, 2264, 1905, 2968, 3225, 721, 2836, 722, 2674, 3233,
	1286, 3110, 2420, 2222, 2240, 2849, 1108, 2256, 5057, 3235,
	5049, 3237, 2619, 3239, 2201, 2206, 1286, 1831, 1168, 1168,
	1168, 2692, 2216, 1404, 1168, 3587, 4969, 1382, 949, 2012,
	3305, 3879, 5043, 3270, 1168, 3030, 4970, 3223, 2251, 4434,
	4199, 4529, 2014, 2253, 4398, 2235, 5051, 2238, 3337, 1298,
	925, 1168, 2265, 3234, 3281, 3236, 3979, 3238, 1317, 3240,
	3241, 2223, 1315, 3264, 1300, 3553, 3266, 4210, 3272, 3271,
	2012, 3408, 1043, 1042, 4486, 3822, 930, 2015, 942, 943,
	852, 2248, 3250, 2537, 3276, 4989, 3273, 1043, 1042, 3291,
	4108, 1295, 2834, 4788, 2276, 1744, 4875, 4805, 2202, 2283,
	4106, 4439, 3332, 3333, 2221, 4661, 859, 3336, 4397, 2128,
	2013, 2083, 2083, 4396, 4108, 2255, 4154, 3733, 2015, 1039,
	3518, 4440, 2876, 2236, 4106, 2343, 3328, 2005, 1314, 1307,
	710, 4423, 2593, 2010, 1039, 4608, 4131, 1301, 3317, 3318,
	1842, 4206, 4254, 1168, 1168, 1168, 1168, 3303, 1841, 2540,
	2209, 2013, 3786, 1168, 1168, 1168, 2220, 3454, 1168, 2170,
	4576, 1836, 3969, 1302, 1841, 3784, 4670, 5078, 1168, 1290,
	1430, 3559, 4719, 2167, 1168, 3777, 1168, 3310, 2605, 3447,
	3448, 3492, 4155, 4110, 4078, 1290, 4061, 3312, 2607, 4012,
	4010, 3734, 3725, 3555, 2011, 2074, 2074, 3151, 3145, 2252,
	3133, 3918, 2369, 1430, 3541, 1299, 2974, 4110, 2363, 2207,
	2357, 2349, 2328, 2277, 4109, 1290, 3970, 4488, 1430, 2327,
	3065, 2530, 3400, 3401, 3393, 3394, 3395, 3396, 3398, 3399,
	1371, 4789, 3343, 4655, 3862, 1602, 3999, 1319, 4109, 782,
	2086, 3430, 1109, 3971, 1430, 3968, 1040, 3542, 2165, 3472,
	2034, 3823, 1840, 3933, 1371, 4841, 2957, 3449, 3788, 3499,
	1841, 1040, 1371, 3002, 4808, 2477, 4157, 3520, 1840, 2163,
	3130, 4457, 2827, 1041, 3779, 1330, 3485, 4211, 2014, 4634,
	944, 945, 4632, 3514, 1168, 2198, 4553, 4968, 1041, 3778,
	2199, 3571, 3567, 3566, 2166, 3296, 3274, 3946, 1168, 2411,
	926, 927, 2208, 3452, 3451, 2403, 2830, 3463, 2392, 1371,
	4104, 2325, 3543, 3544, 3554, 2086, 1761, 3459, 4114, 2014,
	3415, 3416, 3417, 3418, 1842, 1917, 3486, 1044, 1767, 1766,
	853, 854, 1168, 3481, 3569, 1285, 2203, 3573, 2208, 3505,
	1842, 4437, 1044, 3973, 2875, 3787, 3533, 2829, 1371, 4255,
	2874, 1285, 2828, 3604, 3457, 3494, 3495, 3496, 3497, 3478,
	3539, 2531, 4212, 1288, 1840, 3471, 1399, 1545, 3490, 3441,
	1371, 2873, 1371, 2872, 3456, 3618, 2871, 3620, 1657, 1288,
	1117, 1285, 5077, 3526, 3425, 3426, 3427, 3137, 1168, 1168,
	1106, 4107, 2272, 3631, 3570, 1655, 1430, 3575, 3919, 2272,
	3577, 947, 4732, 3464, 2200, 1597, 4565, 1371, 3920, 1288,
	4413, 3646, 3654, 3648, 3562, 4107, 3652, 2978, 1371, 3476,
	3658, 3477, 2204, 3662, 3458, 4127, 4018, 1296, 1643, 3470,
	3556, 1284, 4790, 2367, 4654, 3473, 3474, 4000, 2280, 3003,
	3004, 1644, 3511, 3512, 3605, 3513, 1745, 1284, 1552, 3687,
	5011, 3972, 4007, 4636, 4539, 3462, 3469, 3601, 1676, 4538,
	3583, 1371, 1552, 3624, 1552, 3108, 3523, 3795, 1430, 3527,
	3517, 3502, 3205, 2291, 1691, 838, 1552, 1284, 3113, 856,
	855, 3534, 1297, 3111, 2396, 2297, 2083, 1719, 1552, 3468,
	3681, 3540, 3641, 3697, 4548, 3619, 2278, 2201, 2206, 3644,
	1371, 4561, 928, 929, 4560, 3726, 3785, 3780, 3781, 3782,
	3783, 4847, 4261, 4566, 3551, 4855, 4733, 1290, 3493, 4838,
	3935, 2699, 3739, 3741, 4284, 3589, 4635, 4530, 4877, 781,
	1813, 3194, 3597, 5015, 1720, 1815, 3717, 1812, 1810, 2279,
	3194, 4549, 1552, 3610, 857, 858, 2491, 3724, 5013, 3522,
	2052, 1785, 3524, 3525, 1552, 3603, 1552, 3528, 270, 3529,
	3613, 3530, 3682, 4952, 3685, 4763, 2698, 4753, 4536, 4924,
	2074, 4509, 4295, 2080, 3611, 4253, 3636, 3617, 3612, 4113,
	3422, 2202, 3642, 3732, 1783, 3761, 3838, 3796, 1755, 1753,
	3750, 3627, 3655, 1751, 3025, 3669, 3793, 3659, 3465, 3466,
	3467, 1749, 4848, 3663, 3633, 3515, 1430, 4734, 1747, 1430,
	1741, 1735, 3385, 1733, 3653, 3800, 1653, 4008, 3315, 3134,
	3044, 1656, 3038, 2992, 2903, 3661, 3810, 3735, 2500, 3592,
	3674, 3670, 2402, 2209, 2387, 2045, 2041, 1816, 1654, 2468,
	1694, 4620, 2435, 1168, 946, 2306, 3791, 3423, 2080, 1168,
	1168, 3689, 3818, 1168, 1168, 1168, 3720, 1168, 3000, 3789,
	3742, 3817, 1836, 3668, 3248, 3794, 1168, 2086, 185, 185,
	3247, 3721, 844, 3722, 2289, 1168, 3214, 2519, 3786, 4375,
	1168, 1772, 2438, 1285, 3747, 2348, 1430, 3590, 2326, 3749,
	2116, 3784, 2207, 3756, 2114, 1168, 1950, 3792, 1708, 847,
	1626, 3777, 4379, 1430, 4359, 4837, 4065, 4064, 4455, 3759,
	3760, 1288, 3645, 2086, 2086, 1168, 1168, 3815, 1168, 1168,
	1168, 3816, 4384, 1814, 4372, 1811, 1809, 4310, 3740, 2493,
	3591, 4284, 4309, 4153, 2492, 4144, 1168, 2459, 4081, 1784,
	1168, 1053, 2086, 2086, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 3824, 1168, 4987, 3891, 3841, 3892,
	4062, 4033, 1782, 1168, 1168, 2086, 1754, 1752, 4031, 1284,
	1168, 1750, 4009, 3728, 3788, 3723, 3713, 3164, 3156, 1748,
	3149, 1168, 3851, 3852, 3141, 1109, 1746, 3821, 1740, 1734,
	3779, 1732, 1290, 1290, 1652, 3126, 1168, 3125, 1286, 3106,
	2922, 2917, 2550, 3882, 2324, 3778, 2322, 2299, 2274, 2203,
	3813, 2237, 2467, 2224, 1286, 2434, 2210, 2149, 2305, 3819,
	2146, 3834, 3835, 1930, 2143, 2140, 3846, 1935, 1430, 2135,
	2133, 2550, 3897, 2129, 3804, 2120, 3805, 3965, 3806, 3848,
	4450, 1371, 1371, 3858, 1286, 3859, 3738, 3656, 2286, 4982,
	4908, 3874, 2283, 3930, 1265, 4439, 1371, 1371, 2058, 838,
	1371, 3787, 3952, 3881, 3926, 1845, 3865, 3867, 3868, 3294,
	3976, 3977, 5005, 2171, 3889, 4440, 2159, 2160, 3890, 1168,
	1266, 4731, 3267, 3869, 3265, 3989, 3990, 3099, 2503, 3996,
	3937, 4889, 3896, 1058, 1060, 1062, 4799, 4471, 3922, 4391,
	3894, 3775, 4299, 3195, 1168, 2190, 3888, 1607, 185, 4672,
	2979, 3898, 3899, 3900, 3901, 3902, 3903, 3904, 3905, 3906,
	3907, 3908, 3909, 3910, 3911, 3912, 3913, 3914, 3915, 3916,
	3917, 3931, 3921, 3923, 2501, 2953, 2953, 1168, 1168, 4665,
	4165, 2219, 3939, 3940, 1807, 1808, 2366, 1350, 2425, 1351,
	2951, 2976, 2462, 2457, 2432, 4888, 4350, 4386, 1285, 1285,
	1731, 3942, 3943, 1852, 1853, 3295, 3657, 2287, 2983, 3954,
	1852, 1853, 4691, 1168, 1168, 4563, 1846, 4262, 4240, 3584,
	2502, 1168, 2984, 3005, 1849, 1378, 1288, 1288, 1318, 4013,
	2080, 1267, 4999, 1855, 1176, 4077, 4960, 3124, 4141, 2158,
	2984, 1552, 3042, 2350, 1389, 1552, 3051, 3049, 1552, 3058,
	4846, 267, 3040, 1371, 2986, 3041, 2988, 4076, 4092, 4828,
	4046, 4798, 3785, 3780, 3781, 3782, 3783, 3992, 1854, 2987,
	4792, 1351, 1351, 4730, 4656, 1854, 2080, 2080, 2086, 4627,
	274, 274, 274, 3985, 713, 714, 4540, 729, 713, 729,
	740, 4050, 3955, 780, 1284, 1284, 844, 800, 707, 4151,
	4143, 4067, 806, 4079, 4073, 2080, 2080, 4051, 4053, 274,
	4130, 3962, 3727, 3171, 4100, 2814, 4038, 2155, 2067, 5045,
	1552, 4562, 4043, 847, 3028, 1561, 1168, 4158, 1560, 1102,
	921, 4879, 4097, 4098, 1290, 1168, 4880, 274, 2080, 4167,
	3503, 4086, 2291, 4123, 3177, 1552, 1552, 1552, 5076, 4093,
	4174, 4794, 1552, 1552, 1552, 4879, 5018, 3000, 3269, 4112,
	4880, 3194, 3391, 3392, 1852, 1853, 2945, 2946, 4116, 1571,
	4102, 2943, 2944, 4111, 1552, 4137, 1552, 3562, 2083, 2843,
	4232, 4150, 1430, 2694, 1718, 3981, 1286, 3997, 2945, 4159,
	1717, 3998, 4162, 3062, 4129, 2943, 2729, 4178, 4657, 4090,
	4125, 4781, 1787, 4601, 4147, 1786, 4388, 4383, 4101, 1430,
	4382, 4228, 1168, 1168, 3980, 3870, 3650, 4182, 1168, 1168,
	2086, 3647, 4138, 1168, 1168, 3253, 1168, 1944, 4142, 1943,
	2507, 1168, 4161, 5061, 5026, 4894, 4832, 4032, 4831, 4034,
	4830, 4762, 1168, 4761, 4708, 4630, 2384, 4593, 4533, 4527,
	4430, 4145, 4410, 2083, 4773, 4348, 4290, 4181, 1168, 4171,
	4091, 4193, 2074, 4117, 2398, 2400, 4196, 4774, 4029, 4021,
	4160, 713, 713, 3731, 4195, 4168, 3730, 4169, 2404, 274,
	4194, 4163, 3576, 4173, 3521, 3254, 3245, 4213, 4179, 1099,
	2412, 1037, 2415, 2416, 2417, 3222, 4180, 3221, 3220, 3219,
	1285, 4775, 3155, 3128, 3127, 4214, 2977, 2913, 2907, 4226,
	2896, 2895, 4080, 2884, 2623, 1101, 2494, 4197, 2463, 1290,
	3118, 4222, 2456, 3121, 2455, 3123, 2454, 1290, 1288, 2453,
	2452, 1430, 1430, 4207, 1430, 2364, 2338, 2074, 2334, 2333,
	2332, 1290, 2331, 2330, 2123, 2122, 2121, 2119, 4267, 2057,
	2056, 1806, 1552, 1552, 1805, 1742, 1360, 1621, 1620, 1619,
	1618, 1100, 1617, 1616, 1615, 1430, 1610, 4777, 1606, 1604,
	1603, 1542, 3168, 1541, 1540, 3168, 1421, 1420, 1419, 1418,
	1417, 1381, 1337, 1336, 1335, 1334, 1333, 1168, 1332, 1331,
	4776, 1329, 1324, 1323, 4300, 4301, 1284, 1322, 1290, 1321,
	1290, 1320, 3485, 4285, 4286, 1248, 1523, 1038, 4778, 1537,
	1360, 2080, 4252, 4288, 914, 8, 2161, 1064, 1050, 4736,
	4327, 4326, 4325, 4351, 4338, 1371, 4294, 4270, 4272, 4297,
	4358, 2490, 93, 1612, 876, 1430, 87, 1371, 2281, 4028,
	1371, 1015, 4367, 4354, 4355, 4370, 4876, 185, 4202, 4303,
	4766, 1595, 1168, 884, 4857, 1430, 4139, 4337, 3242, 4334,
	4269, 4334, 4266, 3578, 4275, 4264, 4265, 3070, 2437, 1743,
	4259, 1286, 1286, 4387, 4276, 4389, 2439, 4279, 4306, 3480,
	2856, 1360, 1360, 4820, 4352, 1285, 4283, 4236, 4263, 3353,
	4698, 4502, 2697, 1285, 1552, 1552, 4268, 1948, 3434, 89,
	1152, 1198, 4296, 4421, 4420, 4311, 4015, 1285, 4308, 4302,
	3700, 4417, 4414, 1288, 4416, 2071, 2073, 1116, 1433, 4902,
	2172, 1288, 1371, 5067, 1158, 2188, 2181, 4441, 2897, 2773,
	1175, 1172, 4373, 4368, 1430, 1288, 2075, 2077, 1174, 1552,
	1173, 4390, 2076, 1968, 1171, 4353, 4458, 4411, 2070, 4149,
	3175, 4381, 3757, 2080, 1043, 1042, 1662, 1660, 1017, 4408,
	2176, 2617, 2681, 3342, 1285, 4371, 1285, 1941, 1552, 1552,
	1552, 1552, 1552, 1552, 1132, 4401, 1154, 2678, 4447, 1312,
	1143, 1284, 4442, 1131, 4407, 3460, 1430, 3439, 3744, 1284,
	3961, 2529, 1288, 894, 1288, 4409, 3388, 2684, 1168, 1168,
	1168, 1039, 4400, 1284, 4399, 2083, 1303, 2797, 4459, 2789,
	2785, 3531, 3165, 1822, 4427, 4415, 1430, 4516, 4419, 1919,
	4444, 1168, 4426, 3176, 1168, 1168, 1818, 1415, 4462, 2621,
	4453, 4357, 4433, 4431, 1168, 1136, 2615, 2086, 1932, 3320,
	2539, 3751, 1168, 1168, 4366, 1930, 3483, 4369, 2890, 4882,
	3878, 2083, 2083, 3251, 4460, 2342, 1264, 1263, 4467, 1430,
	1284, 1552, 1284, 1310, 1262, 4779, 4481, 4863, 4860, 4476,
	2271, 4780, 4474, 4480, 4494, 4473, 1371, 4424, 3695, 3696,
	2083, 2083, 2164, 4482, 2937, 4483, 2627, 3714, 1148, 2074,
	1536, 2482, 3811, 3445, 4489, 1430, 4128, 1623, 805, 4570,
	2796, 1160, 1904, 1168, 3095, 4535, 3094, 4725, 1400, 1398,
	1397, 1396, 5035, 2083, 3064, 2284, 1168, 4024, 4023, 4022,
	4499, 241, 3288, 1843, 1835, 1168, 276, 238, 1040, 240,
	2086, 239, 3582, 3966, 3489, 2074, 2074, 4958, 4511, 4048,
	1168, 3686, 4505, 1168, 23, 22, 21, 4522, 4523, 116,
	1305, 42, 20, 1098, 156, 1041, 133, 1168, 153, 152,
	1168, 4543, 125, 4544, 2074, 2074, 151, 1430, 150, 149,
	4573, 148, 147, 1286, 155, 1371, 146, 4525, 145, 4526,
	4610, 140, 144, 143, 1326, 1552, 1552, 1552, 142, 141,
	139, 137, 4545, 138, 132, 2208, 274, 2074, 274, 274,
	136, 1355, 274, 1365, 4552, 4592, 1290, 135, 4542, 1044,
	134, 4508, 131, 130, 1379, 129, 128, 4619, 127, 126,
	124, 157, 800, 123, 3697, 800, 4606, 122, 121, 4582,
	120, 4629, 4640, 119, 118, 4633, 1430, 117, 793, 1552,
	4645, 794, 4595, 61, 60, 115, 4666, 113, 114, 274,
	19, 274, 274, 1355, 4590, 274, 274, 40, 14, 65,
	3063, 66, 1365, 4637, 4603, 18, 13, 4334, 4671, 35,
	92, 4611, 4594, 1168, 1168, 4653, 274, 4622, 1573, 105,
	4555, 4621, 4626, 104, 103, 36, 4624, 4625, 1537, 4631,
	1168, 2086, 101, 100, 1593, 4649, 34, 17, 16, 15,
	4675, 1600, 4677, 4644, 98, 97, 96, 33, 4667, 4669,
	31, 11, 1371, 9, 37, 1371, 2029, 1371, 1371, 12,
	1625, 5, 190, 1365, 189, 1130, 4668, 274, 274, 192,
	1355, 188, 4663, 4674, 4462, 1168, 4673, 1168, 1537, 1168,
	191, 4707, 91, 187, 4709, 186, 4710, 4711, 90, 1290,
	29, 800, 10, 274, 274, 4679, 4687, 4688, 1286, 182,
	4646, 4718, 1168, 4135, 1290, 1688, 1286, 82, 4596, 184,
	2080, 4720, 1285, 3208, 183, 181, 1696, 180, 179, 83,
	1286, 921, 4609, 4686, 80, 3215, 2083, 3593, 3594, 178,
	3595, 86, 4696, 4690, 177, 1428, 81, 85, 84, 27,
	1288, 6, 64, 7, 4484, 3797, 4717, 108, 109, 4713,
	4334, 4716, 38, 78, 77, 4584, 4585, 76, 4747, 1290,
	1290, 4748, 75, 26, 63, 4334, 25, 174, 222, 221,
	4741, 4740, 220, 1168, 219, 4769, 218, 1286, 217, 1286,
	1290, 3637, 3638, 1290, 3639, 216, 215, 1552, 210, 4602,
	214, 4604, 4771, 4605, 212, 211, 213, 1552, 209, 232,
	4756, 274, 231, 2080, 4758, 225, 224, 4695, 1284, 230,
	2074, 229, 1168, 1168, 228, 4764, 4784, 4785, 227, 226,
	4334, 4334, 1168, 223, 235, 274, 4816, 208, 4817, 207,
	4782, 206, 204, 200, 203, 205, 202, 4802, 201, 4793,
	4804, 4334, 199, 4796, 4334, 4801, 234, 4649, 4795, 233,
	72, 172, 173, 71, 4724, 1285, 4809, 4810, 171, 170,
	169, 4813, 4814, 4812, 4815, 168, 167, 166, 2083, 165,
	1285, 70, 1168, 1168, 4833, 176, 1168, 4825, 4829, 4746,
	1552, 1371, 175, 1288, 1371, 24, 2, 4834, 1, 0,
	0, 0, 0, 0, 0, 4824, 0, 4836, 1288, 0,
	0, 4854, 4884, 0, 4862, 4865, 0, 0, 4844, 4845,
	4873, 4881, 0, 4874, 4885, 0, 4853, 0, 4878, 0,
	4852, 0, 0, 0, 0, 1285, 1285, 0, 0, 0,
	0, 0, 0, 0, 4871, 4867, 0, 4905, 0, 4907,
	0, 0, 1168, 1168, 1168, 0, 1285, 0, 0, 1285,
	0, 1284, 2074, 1288, 1288, 4866, 0, 0, 0, 4870,
	0, 2354, 0, 4890, 2080, 0, 1284, 0, 0, 0,
	0, 0, 4898, 4895, 1288, 0, 0, 1288, 4906, 1168,
	4872, 2796, 0, 0, 0, 0, 4939, 4919, 4920, 4921,
	4944, 0, 4922, 2534, 0, 4940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4757, 0, 0, 2208, 0, 0, 4941, 4966, 0, 4965,
	4967, 1284, 1284, 0, 0, 0, 0, 4942, 4973, 713,
	0, 4979, 0, 4975, 0, 4957, 1168, 0, 0, 0,
	4955, 0, 1284, 0, 1371, 1284, 0, 0, 4972, 4629,
	274, 4988, 274, 4971, 0, 0, 274, 0, 0, 0,
	4981, 4980, 2796, 2796, 0, 0, 0, 5006, 0, 1573,
	1355, 2049, 274, 4996, 274, 2055, 0, 4997, 5002, 4985,
	5000, 0, 274, 4998, 729, 4994, 4995, 0, 5008, 274,
	0, 0, 5012, 0, 5010, 1290, 4884, 1290, 5021, 0,
	5022, 4862, 5009, 0, 4865, 2124, 0, 5029, 5031, 5020,
	0, 5017, 0, 0, 5028, 0, 0, 274, 5027, 0,
	0, 5019, 5037, 5036, 274, 5023, 0, 0, 0, 0,
	2483, 0, 0, 0, 0, 0, 1371, 0, 0, 2791,
	0, 0, 0, 0, 5052, 0, 5053, 0, 0, 0,
	0, 5060, 5030, 0, 5032, 5059, 4334, 800, 4334, 0,
	0, 0, 5063, 0, 5071, 5056, 1168, 1168, 0, 5062,
	0, 0, 3177, 0, 0, 1168, 1168, 5069, 0, 5058,
	0, 5074, 0, 0, 5083, 1286, 5085, 0, 0, 5065,
	5079, 0, 5087, 5090, 5094, 5089, 0, 5092, 0, 5095,
	5091, 0, 3177, 0, 5093, 0, 0, 0, 0, 0,
	0, 5098, 2044, 1371, 5099, 5104, 5100, 5086, 5103, 5107,
	0, 5088, 5105, 5101, 5102, 0, 0, 0, 0, 0,
	0, 0, 0, 1168, 5110, 0, 0, 0, 0, 5114,
	5107, 5116, 5118, 4328, 2796, 2796, 2796, 2796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5080, 5081,
	5111, 1285, 0, 1285, 1130, 1130, 1130, 0, 5113, 0,
	0, 0, 0, 0, 0, 4954, 0, 4321, 4956, 0,
	0, 4314, 1514, 0, 0, 2083, 0, 0, 0, 1288,
	0, 1288, 0, 0, 0, 0, 0, 0, 4312, 0,
	0, 0, 0, 0, 0, 0, 0, 4316, 0, 0,
	0, 0, 0, 0, 0, 0, 5115, 0, 0, 0,
	3088, 0, 0, 0, 0, 0, 0, 0, 1286, 0,
	0, 0, 4322, 0, 0, 0, 2192, 274, 0, 0,
	0, 274, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3078, 3076, 0, 0, 1284, 0, 1284,
	3080, 3082, 3072, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 4315, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1360, 0, 0, 0, 0, 0, 0, 274, 1286, 1286,
	0, 274, 0, 3096, 0, 0, 0, 274, 3665, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 1286,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 274,
	0, 274, 0, 0, 0, 713, 3690, 274, 0, 1360,
	0, 0, 0, 0, 0, 0, 0, 0, 3718, 800,
	0, 0, 0, 921, 0, 0, 0, 0, 0, 0,
	5082, 0, 2074, 0, 0, 0, 0, 1123, 4146, 0,
	0, 1360, 1360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 1355, 274, 0, 0, 0,
	2198, 0, 0, 0, 2317, 2199, 0, 0, 0, 0,
	800, 0, 3767, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 3790, 2436, 0, 0, 0, 0,
	274, 274, 0, 274, 0, 274, 0, 274, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 4198, 0, 2083,
	0, 4317, 0, 0, 3074, 0, 0, 4318, 0, 0,
	0, 0, 0, 0, 2473, 3090, 0, 2474, 4323, 2475,
	0, 0, 0, 0, 0, 0, 1523, 0, 0, 0,
	0, 0, 0, 274, 274, 274, 274, 0, 3089, 3079,
	3077, 3081, 3083, 3073, 3075, 3091, 3093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3085, 3087, 0, 0,
	4320, 0, 780, 1537, 164, 0, 800, 0, 0, 2200,
	0, 0, 73, 0, 46, 45, 0, 4324, 0, 0,
	0, 0, 0, 2074, 0, 0, 0, 2204, 0, 74,
	0, 3097, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 3391,
	3392, 0, 3409, 3410, 3411, 0, 67, 0, 0, 0,
	0, 0, 0, 48, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3278, 0, 0, 47, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2629,
	0, 0, 2201, 2206, 0, 3391, 3392, 0, 3409, 3410,
	3411, 0, 50, 68, 0, 0, 0, 0, 0, 0,
	0, 51, 0, 0, 3406, 0, 57, 0, 0, 0,
	0, 162, 0, 0, 1286, 0, 1286, 0, 0, 49,
	0, 110, 0, 0, 0, 0, 3092, 94, 107, 0,
	4319, 0, 0, 0, 0, 2796, 2796, 0, 0, 1514,
	1537, 2791, 2791, 0, 0, 0, 0, 0, 0, 0,
	713, 1360, 0, 0, 2553, 0, 0, 0, 0, 0,
	3406, 0, 0, 0, 0, 274, 2202, 0, 0, 52,
	4329, 4330, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 274, 0, 713, 0, 0, 0, 95, 0, 0,
	0, 4377, 0, 0, 3098, 274, 0, 0, 0, 0,
	0, 3397, 0, 3084, 3086, 1537, 0, 1537, 3391, 3392,
	0, 3409, 3410, 3411, 2196, 0, 274, 1365, 2209, 0,
	0, 0, 0, 0, 0, 2796, 2796, 2796, 2796, 2796,
	2796, 2796, 2796, 2796, 2796, 2796, 2796, 2796, 2796, 2796,
	2796, 2796, 2796, 2796, 2796, 0, 2796, 2695, 0, 0,
	0, 4429, 0, 0, 0, 1130, 0, 3397, 0, 0,
	0, 0, 0, 1514, 4443, 274, 1365, 0, 0, 729,
	0, 729, 2194, 0, 0, 2912, 0, 2207, 0, 0,
	0, 274, 0, 3406, 274, 0, 0, 4466, 274, 0,
	274, 0, 0, 0, 0, 1355, 0, 274, 274, 3414,
	1365, 1365, 2928, 0, 0, 0, 0, 274, 3407, 0,
	0, 0, 0, 0, 0, 2195, 2639, 2640, 2641, 2658,
	2659, 2660, 3413, 2791, 2791, 2791, 2791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2661, 0, 99, 0,
	0, 0, 0, 2866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2966, 0, 4087, 53, 0, 4088, 0,
	0, 0, 0, 0, 3407, 274, 0, 0, 0, 1908,
	0, 56, 0, 0, 0, 0, 59, 0, 0, 274,
	3397, 0, 0, 0, 0, 0, 69, 1905, 2651, 0,
	0, 0, 274, 58, 193, 102, 0, 2647, 106, 0,
	0, 0, 54, 800, 2203, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 55, 0, 0, 0, 0, 0,
	0, 1514, 0, 0, 242, 0, 0, 0, 0, 274,
	0, 0, 62, 0, 0, 0, 0, 154, 0, 0,
	0, 274, 274, 1905, 0, 3413, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 4175, 4176, 4177, 0, 0,
	0, 0, 2398, 4183, 4184, 0, 3408, 0, 0, 0,
	274, 3116, 0, 0, 244, 2652, 2653, 2654, 2655, 0,
	0, 0, 0, 0, 0, 2646, 0, 3407, 0, 0,
	0, 2948, 0, 0, 0, 0, 0, 0, 1573, 0,
	158, 274, 0, 274, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	3160, 0, 3408, 243, 0, 0, 0, 0, 0, 0,
	2966, 0, 713, 0, 0, 0, 0, 236, 0, 0,
	0, 3189, 921, 2966, 0, 0, 237, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 2656,
	2657, 0, 0, 0, 0, 274, 1905, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 3, 0, 0,
	0, 0, 0, 0, 274, 1355, 274, 0, 0, 0,
	0, 0, 2649, 0, 0, 0, 1365, 274, 0, 0,
	1355, 0, 1355, 0, 1355, 0, 0, 0, 0, 3403,
	3404, 3405, 0, 0, 0, 0, 3402, 3400, 3401, 3393,
	3394, 3395, 3396, 3398, 3399, 0, 0, 0, 0, 0,
	1537, 1537, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 3408, 0, 0, 0, 0,
	274, 274, 274, 274, 1355, 74, 0, 1355, 0, 274,
	0, 0, 4281, 4282, 274, 3403, 3404, 3405, 0, 0,
	0, 79, 3402, 3400, 3401, 3393, 3394, 3395, 3396, 3398,
	3399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 1514, 0, 274, 1537, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 0, 0, 0, 0, 0, 4754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4768, 0,
	2650, 0, 915, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 110, 0, 0,
	0, 0, 0, 94, 107, 0, 0, 4800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3403, 3404,
	3405, 0, 0, 0, 1514, 3402, 3400, 3401, 3393, 3394,
	3395, 3396, 3398, 3399, 2398, 0, 0, 1852, 1853, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1573,
	1883, 0, 0, 95, 2791, 2791, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1908, 1514, 1360, 0, 0, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 4475, 0,
	4477, 4478, 4479, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 2636, 2637, 2638, 2662, 2648, 2642, 0,
	2644, 2645, 2643, 2630, 2631, 2632, 2633, 2634, 2635, 0,
	0, 0, 0, 4891, 0, 0, 0, 0, 0, 4893,
	0, 0, 0, 0, 2791, 2791, 2791, 2791, 2791, 2791,
	2791, 2791, 2791, 2791, 2791, 2791, 2791, 2791, 2791, 2791,
	2791, 2791, 2791, 2791, 0, 2791, 0, 0, 0, 0,
	0, 0, 2766, 2767, 2768, 2769, 2762, 2763, 2764, 2765,
	0, 0, 0, 1888, 0, 0, 0, 0, 1537, 0,
	0, 4528, 0, 274, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 99, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 713, 0, 0, 0, 0, 713,
	0, 0, 713, 0, 0, 713, 713, 0, 0, 0,
	0, 713, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 1884,
	0, 274, 0, 2742, 2743, 2744, 2745, 0, 1514, 0,
	193, 102, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2754, 2755, 2756, 2757,
	2750, 2751, 2752, 2753, 2758, 2759, 2760, 2761, 0, 0,
	242, 0, 274, 0, 0, 0, 274, 274, 916, 0,
	0, 0, 0, 154, 0, 2796, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 4623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2966, 2966, 274, 0, 3549,
	2049, 0, 0, 0, 0, 0, 2966, 0, 2055, 3446,
	244, 0, 1514, 0, 0, 0, 0, 2966, 2055, 0,
	2966, 2055, 0, 0, 2055, 0, 0, 3549, 2738, 2739,
	2740, 2741, 2746, 2747, 2748, 2749, 158, 0, 0, 274,
	274, 2049, 3475, 274, 2796, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 1905, 0, 3488, 0, 243,
	0, 0, 0, 2049, 0, 274, 0, 3623, 3623, 0,
	0, 0, 1355, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 3509, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 2966, 0, 2966, 0, 3651, 2966,
	2049, 0, 0, 2966, 0, 0, 0, 0, 0, 0,
	197, 2049, 1888, 0, 800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 3691, 0, 0, 0, 3693, 2966, 0, 0, 274,
	0, 0, 0, 274, 0, 0, 1365, 0, 0, 0,
	0, 0, 0, 0, 1907, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 3160, 0, 0, 1355,
	0, 274, 0, 0, 2966, 0, 713, 0, 0, 0,
	0, 0, 0, 2966, 0, 0, 0, 0, 0, 0,
	0, 2796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2398, 0, 0,
	0, 0, 0, 0, 0, 1888, 0, 0, 0, 0,
	0, 0, 0, 0, 3803, 0, 0, 0, 2796, 0,
	0, 1888, 0, 0, 1865, 1863, 1864, 1856, 1857, 1858,
	1859, 1861, 1862, 0, 3809, 0, 0, 1573, 0, 0,
	0, 1355, 274, 2796, 274, 0, 0, 3488, 0, 0,
	1355, 0, 0, 1888, 1852, 1853, 0, 0, 0, 1888,
	0, 0, 2354, 0, 0, 1888, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 0,
	0, 274, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1853, 0, 1885, 1886,
	1887, 1896, 1897, 1898, 0, 0, 0, 0, 0, 0,
	1908, 0, 0, 0, 0, 0, 0, 0, 1883, 1854,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 1874,
	0, 0, 0, 0, 1902, 0, 0, 0, 1871, 3876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1908, 0, 0, 0, 0, 0, 1888, 0, 0,
	1854, 0, 1888, 0, 0, 813, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 1888, 0, 0, 1871,
	0, 1888, 0, 0, 0, 3812, 0, 0, 1428, 0,
	824, 0, 0, 0, 4217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	0, 0, 0, 0, 0, 0, 1877, 1878, 1879, 1880,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 825, 0, 0, 0, 0, 274, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 1888, 0, 0, 0,
	0, 0, 1888, 0, 0, 0, 0, 1877, 1878, 1879,
	1880, 713, 713, 0, 0, 3855, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 1882, 1884, 0, 0, 0,
	0, 0, 3871, 818, 0, 0, 0, 0, 0, 0,
	832, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	1869, 1870, 0, 274, 823, 0, 1893, 0, 0, 1903,
	0, 0, 0, 2007, 0, 0, 1882, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 1360, 1875, 0, 0, 0, 0, 0, 0,
	0, 1869, 1870, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 822, 0, 0, 0, 1891,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	1514, 0, 775, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 800, 0, 74, 0, 1888, 1888, 1888,
	1888, 1888, 1888, 1888, 1888, 0, 0, 820, 0, 2354,
	0, 79, 0, 0, 0, 0, 0, 1888, 0, 0,
	1130, 0, 1905, 0, 2791, 0, 3623, 3964, 0, 0,
	1888, 0, 0, 1360, 1130, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 831, 2049, 0, 274, 0,
	0, 0, 729, 729, 1365, 0, 2795, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 1888,
	0, 0, 915, 2791, 0, 1888, 0, 0, 274, 3160,
	0, 1876, 3160, 2055, 0, 0, 0, 110, 274, 0,
	0, 0, 0, 94, 107, 0, 0, 0, 274, 1881,
	0, 0, 1115, 274, 0, 0, 0, 0, 274, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 815, 0, 2966, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 3189, 3189, 0,
	0, 1907, 0, 921, 2966, 0, 0, 0, 0, 1894,
	0, 0, 0, 95, 0, 0, 819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 1907, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 774, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 827,
	0, 0, 0, 0, 0, 817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 1868,
	0, 1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4237, 0, 0, 0, 0, 1892, 0, 0, 0, 0,
	2791, 0, 0, 0, 814, 1866, 1867, 1873, 1895, 1872,
	1868, 0, 1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861,
	1862, 0, 0, 0, 2887, 0, 0, 0, 0, 0,
	0, 0, 821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 0, 776, 2791, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 816, 0, 1573,
	0, 274, 1514, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 2791, 0, 0, 274, 0, 0, 0, 0,
	0, 829, 830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1365, 0, 0, 0, 0, 0, 0,
	193, 102, 0, 0, 106, 0, 1365, 0, 274, 1365,
	0, 0, 0, 0, 0, 0, 0, 2966, 2966, 0,
	3549, 0, 0, 3623, 2966, 0, 0, 0, 0, 0,
	242, 0, 4336, 0, 4336, 1573, 0, 0, 916, 0,
	0, 0, 1514, 154, 0, 0, 2966, 0, 2055, 0,
	0, 0, 3549, 0, 1573, 1573, 274, 2049, 0, 1514,
	1537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 0, 274, 2049, 0, 274, 0, 3623, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2966, 0, 2966, 274,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 4274, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 2966, 2966, 0, 0, 0,
	0, 3160, 3160, 236, 4292, 0, 0, 0, 3549, 0,
	0, 0, 237, 0, 0, 0, 194, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 1888, 274,
	0, 0, 0, 0, 0, 0, 1360, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 0, 1888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1888, 0, 0, 0,
	1888, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1888, 0, 0, 0, 0, 0,
	0, 0, 0, 1888, 1888, 1888, 1888, 1888, 1888, 1888,
	1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888,
	1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888,
	1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888, 1888, 0,
	0, 0, 0, 0, 1888, 0, 1888, 1888, 1888, 1888,
	0, 0, 0, 0, 1374, 0, 0, 0, 2795, 2795,
	0, 0, 0, 0, 2966, 2055, 0, 2055, 0, 0,
	4547, 0, 0, 1888, 0, 0, 0, 0, 0, 274,
	0, 1115, 1115, 1115, 0, 0, 0, 0, 0, 4571,
	0, 4571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 1428, 0, 0, 0, 1543,
	0, 0, 0, 0, 0, 0, 800, 0, 0, 0,
	0, 0, 0, 0, 1888, 0, 0, 3623, 0, 1355,
	0, 0, 0, 0, 0, 4500, 0, 1575, 0, 1581,
	0, 1587, 0, 0, 0, 0, 0, 0, 2049, 0,
	274, 0, 0, 0, 1888, 0, 0, 1888, 0, 0,
	1888, 0, 0, 1888, 0, 0, 0, 0, 0, 1888,
	1888, 1888, 1888, 1888, 1888, 1888, 0, 4547, 4500, 0,
	4336, 0, 0, 1573, 0, 0, 0, 2966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4660, 0, 0,
	1679, 0, 1684, 0, 2553, 0, 0, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 1698, 0, 1703, 0,
	0, 0, 0, 0, 0, 1888, 0, 0, 3412, 0,
	2795, 2795, 2795, 2795, 0, 274, 274, 1888, 1514, 1888,
	0, 0, 0, 0, 1888, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3876,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 1852, 1853, 0, 2553, 0, 0, 0,
	0, 0, 0, 0, 3623, 4715, 0, 1768, 0, 0,
	1774, 0, 0, 4547, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4336, 1908,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 274, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4336, 4336, 0, 0, 1514, 1514, 0,
	1514, 0, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	0, 0, 0, 0, 4336, 0, 274, 4336, 0, 0,
	0, 0, 0, 3837, 0, 0, 0, 2055, 0, 0,
	0, 1514, 0, 0, 0, 1929, 0, 1573, 0, 1573,
	0, 1942, 0, 0, 0, 1877, 1878, 1879, 1880, 0,
	0, 0, 0, 1130, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1365, 1852, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4842, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 4571, 1855, 74,
	274, 1514, 0, 0, 1882, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 1514, 0, 0, 1908, 2966, 0, 0, 0, 1869,
	1870, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 2001, 2001, 2001, 0,
	0, 0, 1871, 0, 0, 88, 0, 0, 0, 0,
	274, 0, 1875, 0, 0, 0, 0, 1888, 1888, 0,
	1888, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 915, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 1573, 0, 3832, 49,
	0, 110, 0, 0, 0, 0, 0, 94, 107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 1878, 1879, 1880, 0, 0, 0, 0, 0, 0,
	1860, 1905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 95, 0, 4547,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 1882,
	1884, 1888, 1115, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 1870, 0, 0, 0, 2966,
	1876, 0, 0, 0, 0, 1514, 0, 0, 0, 4336,
	0, 4336, 0, 0, 1573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 1888, 1888,
	0, 2795, 2795, 0, 0, 1888, 0, 0, 0, 0,
	0, 1514, 0, 0, 0, 3412, 3412, 0, 0, 1888,
	1888, 0, 0, 0, 0, 0, 0, 0, 0, 1888,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1888, 0, 2966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1888, 0, 0, 0, 1130,
	0, 0, 3189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2966, 1905, 0, 99, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 3189,
	0, 2795, 2795, 2795, 2795, 2795, 2795, 2795, 2795, 2795,
	2795, 2795, 2795, 2795, 2795, 2795, 2795, 2795, 2795, 2795,
	2795, 0, 2795, 3412, 3412, 3412, 3412, 1872, 1868, 0,
	1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 0,
	0, 0, 1881, 0, 193, 102, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1888, 0,
	0, 0, 1514, 0, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 916, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 1888,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2460, 1872, 1868, 0, 1865, 1863, 1864, 1856, 1857,
	1858, 1859, 1861, 1862, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1888, 1888, 0, 0, 0, 0, 2488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2528, 0, 2532, 0, 0, 0,
	0, 0, 0, 2546, 0, 0, 0, 0, 0, 0,
	2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564,
	2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574,
	2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584,
	2585, 2586, 2587, 2588, 2589, 2590, 0, 2596, 0, 2598,
	2599, 2600, 2601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1130,
	0, 0, 0, 0, 0, 2625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1929, 0, 0,
	0, 2676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2706, 2709, 2712,
	2715, 0, 0, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 2787, 0, 2799, 2801, 2806, 0, 1888, 1888, 0,
	0, 1888, 3412, 3412, 1888, 0, 79, 0, 1888, 0,
	0, 0, 0, 0, 0, 1888, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1888, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 0,
	0, 1888, 1888, 1888, 1888, 1888, 0, 0, 0, 0,
	0, 1888, 0, 1888, 0, 0, 3412, 3412, 3412, 3412,
	3412, 3412, 3412, 3412, 3412, 3412, 3412, 3412, 3412, 3412,
	3412, 3412, 3412, 3412, 3412, 3412, 0, 915, 0, 3412,
	0, 0, 1888, 1888, 0, 0, 0, 0, 0, 0,
	49, 0, 110, 0, 1888, 0, 1164, 0, 94, 107,
	0, 0, 0, 1888, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 273, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 95, 1888,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 845, 0, 0, 1888, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 845,
	0, 0, 0, 0, 0, 1888, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 1888, 1888, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1908, 0, 0, 0, 0, 0,
	0, 1153, 112, 1854, 1852, 1853, 0, 1885, 1886, 1887,
	1896, 1897, 1898, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 1889, 1883, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 1902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	1908, 0, 0, 0, 3119, 3120, 0, 3122, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 1888, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 1287, 0, 0, 0, 0, 112, 0, 0, 0,
	1877, 1878, 1879, 1880, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 193, 102, 0, 0, 106,
	0, 0, 0, 1888, 1888, 0, 0, 0, 1888, 1888,
	0, 0, 1888, 1888, 0, 0, 0, 1888, 0, 0,
	0, 1888, 0, 0, 0, 242, 1888, 0, 0, 0,
	0, 0, 0, 916, 0, 0, 0, 0, 154, 1882,
	1884, 2795, 0, 0, 0, 0, 1877, 1878, 1879, 1880,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 0, 1869, 1870, 0, 1089, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 1110,
	0, 0, 0, 0, 0, 0, 3243, 0, 0, 0,
	0, 0, 0, 0, 0, 1893, 0, 1875, 1903, 0,
	0, 158, 0, 0, 0, 1882, 1884, 0, 0, 0,
	2795, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 1899, 0, 1900, 243, 0, 1274, 0, 0, 0,
	1869, 1870, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 1891, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 1909,
	1910, 0, 0, 1875, 0, 0, 1888, 0, 0, 0,
	0, 0, 0, 1852, 1853, 1671, 1905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 1901, 0, 0, 0, 3300, 3301, 0, 0, 0,
	0, 3307, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 1890, 1881, 0, 0, 0, 0, 0, 1854, 0,
	3321, 3322, 1905, 0, 0, 0, 2676, 0, 1874, 0,
	0, 0, 0, 0, 0, 1876, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1888, 1888, 1888, 0, 0, 0, 0,
	0, 3331, 0, 0, 1888, 1888, 3412, 2795, 1881, 0,
	1200, 0, 0, 1888, 0, 0, 1888, 3345, 0, 0,
	0, 0, 0, 3831, 0, 1907, 0, 0, 0, 0,
	0, 1876, 0, 0, 3357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 1878, 1879, 1880, 0,
	0, 0, 0, 3412, 2795, 1860, 0, 0, 1894, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1888, 0, 0, 0, 0, 0, 0, 0, 1888, 2795,
	0, 0, 0, 0, 0, 0, 1888, 0, 0, 0,
	0, 1907, 0, 0, 0, 1888, 0, 1888, 0, 0,
	0, 0, 0, 0, 1882, 1884, 0, 0, 0, 0,
	0, 0, 1872, 1868, 0, 1865, 1863, 1864, 1856, 1857,
	1858, 1859, 1861, 1862, 0, 0, 0, 0, 0, 1869,
	1870, 0, 0, 0, 0, 0, 2806, 2806, 2806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 3450,
	0, 0, 1875, 0, 1892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1867, 1873, 1895, 1872, 1868,
	0, 1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862,
	0, 0, 0, 3412, 0, 3366, 0, 0, 273, 3367,
	273, 273, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 1888, 3412, 0, 0, 1888, 0, 0, 0, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1905, 0, 0, 3412, 0, 0, 79, 0, 0,
	0, 273, 0, 273, 273, 1291, 0, 273, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 845, 0,
	0, 1115, 0, 0, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 1888, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3581, 0, 0, 1852, 1853,
	1876, 1885, 1886, 1887, 1896, 1897, 1898, 0, 915, 273,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 1883, 0, 110, 0, 0, 0, 0, 1855, 94,
	107, 0, 0, 0, 0, 273, 273, 1902, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 3634, 3635, 0, 1908, 0, 0, 0, 0, 0,
	1907, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 1888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1888, 0, 0, 0, 0, 112, 0, 112, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 1872, 1868, 0,
	1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 0,
	1877, 1878, 1879, 1880, 0, 0, 0, 273, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1110, 112, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 1893,
	0, 0, 1903, 0, 0, 112, 0, 112, 0, 1882,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1899, 0, 1900, 0, 0,
	99, 0, 0, 0, 1869, 1870, 0, 0, 0, 0,
	0, 0, 0, 1888, 0, 0, 0, 0, 0, 0,
	0, 0, 1891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 102, 0, 0,
	106, 0, 0, 0, 0, 0, 2546, 0, 0, 0,
	0, 0, 3829, 3830, 0, 0, 3833, 0, 0, 0,
	3836, 0, 0, 0, 0, 1901, 242, 0, 0, 3840,
	0, 0, 0, 0, 916, 0, 0, 0, 3847, 154,
	0, 0, 0, 3450, 0, 1890, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1905, 0, 3860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 3883, 3884,
	0, 3885, 3886, 3887, 1089, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 1287, 0, 0, 0, 273, 3893,
	0, 0, 158, 3895, 0, 1922, 0, 0, 0, 0,
	0, 0, 1881, 0, 273, 2023, 273, 198, 0, 0,
	0, 0, 0, 1928, 845, 243, 0, 1934, 0, 0,
	0, 845, 0, 0, 0, 1876, 3924, 3925, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 194, 0, 3936, 0, 1852, 1853, 0, 273,
	0, 0, 1894, 0, 0, 0, 273, 0, 0, 3945,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 1883,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1291, 0, 0, 0,
	0, 0, 1908, 0, 0, 0, 0, 1291, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 2021, 0, 2024,
	0, 112, 4001, 0, 0, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 4016, 1866, 1867,
	1873, 1895, 1872, 1868, 0, 1865, 1863, 1864, 1856, 1857,
	1858, 1859, 1861, 1862, 0, 0, 3306, 0, 0, 2672,
	0, 1291, 0, 2673, 0, 0, 0, 0, 1291, 0,
	0, 4047, 0, 0, 0, 0, 0, 0, 1877, 1878,
	1879, 1880, 0, 0, 1291, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4068, 4069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 1884, 273,
	0, 0, 0, 845, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1853,
	0, 0, 0, 0, 1896, 1897, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 273,
	0, 1883, 0, 273, 0, 0, 0, 0, 1855, 273,
	0, 0, 0, 0, 0, 273, 0, 1902, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 4170, 0,
	0, 273, 0, 273, 1908, 0, 0, 0, 0, 273,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1905, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4215, 4216, 0, 0, 273,
	0, 4220, 4221, 0, 0, 0, 4224, 4225, 0, 0,
	0, 0, 845, 273, 4229, 273, 0, 273, 0, 273,
	1881, 273, 0, 0, 0, 4233, 0, 0, 0, 0,
	1877, 1878, 1879, 1880, 0, 0, 0, 0, 0, 0,
	1860, 4238, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 273, 273, 273, 1852,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 1893,
	0, 0, 1903, 0, 0, 0, 0, 0, 0, 1882,
	1884, 0, 1883, 1110, 0, 1110, 0, 0, 0, 1855,
	0, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 1870, 1291, 0, 1291, 0,
	0, 0, 0, 0, 0, 1908, 0, 0, 0, 0,
	0, 0, 1891, 1291, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 1875, 0, 0,
	0, 0, 0, 1871, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	1872, 1868, 0, 1865, 1863, 1864, 1856, 1857, 1858, 1859,
	1861, 1862, 0, 0, 0, 0, 0, 0, 0, 3299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1905, 0, 0, 0,
	0, 1877, 1878, 1879, 1880, 4378, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 1089,
	1089, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	1882, 1884, 0, 1287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 1869, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 2614, 0, 0, 273, 0,
	0, 0, 1894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1110, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 1928, 0, 0, 0, 1928,
	0, 0, 0, 0, 0, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 4495, 4496, 4497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 273, 0, 0, 0,
	273, 0, 273, 0, 2546, 1291, 1291, 4506, 4507, 273,
	273, 0, 0, 0, 0, 1291, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 4515, 4518, 1905, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 0, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2024, 0,
	0, 1895, 1872, 1868, 0, 1865, 1863, 1864, 1856, 1857,
	1858, 1859, 1861, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 760, 1881, 0, 0, 0, 0, 0, 112,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 4572,
	0, 0, 743, 0, 273, 0, 1876, 744, 4580, 0,
	0, 0, 1291, 0, 1291, 0, 1291, 0, 0, 0,
	0, 0, 0, 4588, 0, 0, 1115, 0, 0, 0,
	0, 0, 0, 0, 1291, 1291, 0, 0, 0, 0,
	4597, 273, 0, 4599, 0, 0, 745, 0, 1291, 0,
	0, 0, 0, 273, 273, 0, 0, 746, 0, 0,
	1291, 0, 1291, 1291, 1291, 0, 1907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	0, 0, 845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 845, 0, 0, 0, 0,
	0, 748, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 0, 0, 0,
	0, 0, 0, 1872, 1868, 0, 1865, 1863, 1864, 1856,
	1857, 1858, 1859, 1861, 1862, 0, 0, 0, 0, 750,
	0, 0, 751, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 775,
	0, 0, 0, 2087, 2087, 1291, 273, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 765, 0, 0, 0, 4723, 0,
	0, 0, 4727, 0, 0, 0, 0, 0, 0, 0,
	1852, 1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 0,
	0, 112, 0, 0, 112, 0, 112, 0, 0, 0,
	0, 0, 1889, 1883, 0, 0, 0, 0, 0, 0,
	1855, 0, 273, 273, 273, 273, 0, 0, 0, 1902,
	0, 273, 762, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1908, 0, 1291, 0,
	0, 0, 0, 112, 0, 1854, 112, 0, 0, 0,
	0, 0, 112, 0, 0, 1874, 0, 273, 0, 0,
	0, 0, 0, 0, 1871, 273, 4797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 772, 0, 753,
	0, 1291, 0, 0, 0, 0, 2546, 0, 1291, 0,
	0, 0, 0, 0, 0, 4518, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 112,
	754, 0, 0, 0, 1291, 0, 0, 0, 0, 0,
	0, 0, 1877, 1878, 1879, 1880, 0, 760, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 743, 0, 0,
	0, 774, 744, 0, 0, 0, 0, 0, 0, 755,
	0, 0, 0, 0, 770, 771, 768, 0, 0, 0,
	0, 1893, 763, 0, 1903, 756, 0, 0, 0, 0,
	0, 1882, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 1899, 0, 1900,
	0, 0, 746, 0, 0, 0, 1869, 1870, 0, 0,
	0, 0, 0, 0, 0, 4918, 4918, 4918, 0, 757,
	0, 764, 0, 747, 1891, 0, 0, 0, 0, 758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 759, 766, 0, 2614, 0, 767,
	0, 0, 4943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 776, 0, 0, 748, 0, 1928, 0,
	0, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1901, 0, 0,
	0, 749, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 1890, 0, 4918,
	0, 0, 0, 0, 750, 1287, 0, 751, 1905, 0,
	865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1287, 0, 0, 775, 0, 0, 0, 0, 0,
	867, 0, 0, 0, 0, 868, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	1291, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 869, 0, 886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 870, 0, 0, 273, 0, 871, 762, 273, 273,
	0, 0, 0, 0, 1894, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 895, 4918,
	5075, 0, 0, 0, 0, 872, 0, 0, 0, 273,
	0, 0, 1291, 0, 0, 0, 0, 1907, 0, 893,
	0, 0, 0, 0, 0, 1291, 0, 1291, 0, 0,
	1274, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 866, 1291, 1274, 0, 0, 0,
	0, 273, 273, 0, 753, 273, 0, 0, 0, 0,
	0, 0, 2023, 0, 0, 0, 0, 873, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 897, 773, 0, 754, 0, 775, 0, 0,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864,
	1856, 1857, 1858, 1859, 1861, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4243, 774, 0, 0, 0,
	0, 0, 0, 0, 755, 0, 0, 0, 0, 770,
	771, 768, 0, 0, 0, 0, 0, 763, 0, 0,
	756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	896, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 757, 273, 764, 0, 112, 112,
	0, 112, 0, 0, 758, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 1287, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 875, 0, 776, 0,
	0, 0, 1177, 0, 0, 0, 0, 877, 0, 761,
	0, 0, 112, 112, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 878, 1852,
	1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 275, 275,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1889, 1883, 0, 0, 0, 0, 887, 0, 1855,
	0, 0, 0, 0, 273, 0, 273, 275, 1902, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 864, 0, 888, 1908, 0, 0, 0, 0,
	0, 0, 0, 879, 1854, 275, 0, 0, 0, 0,
	0, 0, 0, 273, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	885, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	0, 1110, 0, 0, 0, 0, 0, 880, 0, 0,
	0, 881, 900, 0, 899, 112, 112, 882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 883, 0, 0, 0, 0, 892, 0, 0,
	0, 0, 0, 901, 0, 898, 0, 0, 0, 0,
	1280, 776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 1878, 1879, 1880, 0, 0, 0, 0, 1291,
	1291, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 269, 709, 0,
	0, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	1893, 0, 0, 1903, 0, 1291, 0, 0, 1291, 0,
	1882, 1884, 0, 0, 0, 0, 0, 0, 1287, 1287,
	0, 0, 0, 0, 0, 0, 1899, 0, 1900, 0,
	2087, 0, 0, 0, 1291, 1869, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 1274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1291, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 1894, 1291, 0, 0, 0, 1291, 273,
	0, 0, 0, 0, 0, 0, 1291, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 1291, 0,
	273, 0, 0, 0, 0, 0, 1907, 0, 0, 0,
	273, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 0, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 1866,
	1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864, 1856,
	1857, 1858, 1859, 1861, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3845, 0, 1291, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1274, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 2087, 1287, 0, 0, 0, 0,
	0, 0, 0, 1287, 275, 0, 275, 275, 112, 0,
	275, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 2087, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 2087, 0, 275, 1434, 275,
	275, 0, 0, 275, 275, 0, 0, 0, 0, 1434,
	0, 0, 0, 0, 2023, 0, 2023, 0, 0, 0,
	0, 0, 1291, 1291, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 1434, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 273, 1291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 275, 0, 0, 0,
	0, 273, 0, 0, 112, 0, 0, 0, 0, 0,
	1274, 0, 0, 1434, 0, 0, 0, 0, 1274, 0,
	1434, 275, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1341, 0, 1341, 1341, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1434, 0, 0, 0,
	0, 0, 0, 0, 0, 1425, 0, 0, 0, 0,
	0, 1535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 1291, 0, 275, 0, 1291, 0, 0, 1291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 1677,
	1678, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1291, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 273, 0, 0, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1291, 1291, 1291, 0, 0,
	0, 0, 1291, 1291, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 0, 1291, 0, 1291, 0, 0, 0,
	0, 0, 1291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 1797, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	837, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1434, 0, 0, 0, 0,
	275, 275, 275, 0, 0, 0, 0, 273, 273, 0,
	275, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 1291, 1291, 0, 1291, 275, 0, 0, 0, 0,
	0, 1291, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 1291, 0, 0, 0, 0, 0, 1169,
	0, 0, 0, 0, 0, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 1291, 0,
	1291, 0, 0, 0, 0, 0, 0, 0, 0, 1434,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2614, 0, 0, 0, 0, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 1291, 0, 0, 0, 0,
	0, 0, 2039, 0, 0, 0, 2023, 0, 273, 2023,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 0,
	1535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1341, 0, 0, 0, 0, 0, 0,
	1535, 0, 0, 0, 1291, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 275, 0, 1434, 1434, 275,
	112, 0, 0, 0, 0, 0, 0, 1434, 1291, 1291,
	1291, 1291, 1291, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1291, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 275, 1291, 0, 112, 275,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 275,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 1291,
	0, 1291, 0, 0, 1434, 0, 1434, 0, 1434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1434, 1434, 0, 0,
	0, 0, 0, 0, 0, 1291, 0, 0, 0, 0,
	1434, 275, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 1434, 0, 1434, 1434, 1434, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 275, 275,
	0, 275, 0, 275, 0, 275, 0, 275, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 2023, 0, 1291, 1291, 1291, 0, 0,
	0, 275, 275, 275, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 2340, 0, 0, 1291, 2347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2372, 1291, 2372, 0, 1291,
	0, 0, 0, 2379, 0, 0, 0, 1434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2347,
	0, 2087, 2408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2428, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2444, 0, 2446,
	0, 2448, 0, 2450, 0, 2451, 0, 0, 0, 0,
	1434, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 0, 0, 0, 0, 1852,
	1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 0, 2479,
	2480, 2481, 0, 1431, 0, 0, 0, 0, 0, 0,
	0, 1889, 1883, 0, 1553, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 1902, 0,
	1434, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	1291, 0, 0, 0, 0, 1908, 0, 0, 0, 0,
	0, 0, 1553, 275, 1854, 0, 1434, 0, 0, 0,
	1291, 0, 0, 1291, 1874, 0, 0, 1291, 0, 0,
	0, 0, 0, 1871, 275, 0, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 0,
	0, 0, 0, 0, 0, 1553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1553, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 275, 0, 0, 0, 275, 0, 275, 0,
	0, 1877, 1878, 1879, 1880, 275, 275, 0, 0, 0,
	1291, 1860, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 0,
	1893, 0, 0, 1903, 1434, 0, 1554, 0, 0, 0,
	1882, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 1899, 0, 1900, 0,
	0, 0, 0, 0, 0, 1869, 1870, 275, 0, 0,
	0, 2863, 0, 0, 1554, 0, 0, 0, 0, 0,
	275, 0, 0, 1891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 1434, 0,
	1554, 0, 0, 0, 0, 0, 0, 1554, 0, 275,
	275, 0, 1434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 0, 1901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2914, 275, 0,
	1341, 0, 0, 0, 1341, 0, 1341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 2360, 0, 0, 0, 0, 0, 275,
	0, 275, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 1554, 0, 1291, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1434, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 1434, 0, 1434,
	0, 0, 0, 0, 0, 1434, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 1876, 1434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 1894, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1535, 0, 0, 0, 0,
	1431, 0, 0, 0, 0, 0, 1907, 2347, 2347, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 0,
	0, 0, 837, 0, 0, 0, 0, 0, 275, 275,
	275, 275, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2347, 0, 0,
	0, 0, 0, 275, 0, 0, 2360, 0, 0, 1892,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 1866,
	1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864, 1856,
	1857, 1858, 1859, 1861, 1862, 0, 0, 0, 0, 0,
	0, 0, 1852, 1853, 0, 1885, 1886, 1887, 1896, 1897,
	1898, 0, 0, 0, 1431, 0, 0, 0, 0, 0,
	0, 3213, 0, 0, 1889, 1883, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	3224, 1902, 3227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1908, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 1432, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3260, 1535, 3262, 1535,
	0, 0, 0, 0, 0, 3268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1341, 0, 0, 0, 0, 0, 0, 0, 3297,
	0, 0, 1553, 1553, 1877, 1878, 1879, 1880, 0, 0,
	0, 0, 1431, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1432, 0, 0, 0,
	0, 0, 0, 1893, 0, 0, 1903, 0, 0, 0,
	0, 0, 0, 1882, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1899,
	0, 1900, 1434, 0, 0, 0, 0, 0, 1869, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1891, 0, 0, 1553,
	0, 1553, 0, 1553, 0, 1434, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	1434, 1553, 1553, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 1553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1434, 1553, 0, 1553,
	1553, 1553, 0, 0, 0, 0, 0, 0, 0, 1901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 837, 275, 275, 0, 0, 0, 1890,
	0, 0, 0, 0, 1554, 1554, 0, 0, 0, 0,
	1905, 0, 0, 0, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 275, 275, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 1554, 0, 1554, 1894, 0, 1434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 1554, 0, 0, 3498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 1907,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 1554, 1554, 1554, 0, 0, 0, 0, 0, 0,
	1434, 0, 0, 0, 0, 0, 0, 0, 1341, 275,
	0, 0, 1535, 1535, 1434, 0, 1434, 0, 0, 0,
	1434, 0, 0, 0, 0, 1431, 0, 275, 1434, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	1434, 275, 0, 3545, 0, 0, 0, 0, 0, 0,
	0, 0, 1892, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 1866, 1867, 1873, 1895, 1872, 1868, 0, 1865,
	1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 0, 0,
	0, 0, 0, 0, 0, 3600, 3602, 3369, 0, 2360,
	0, 0, 0, 0, 1434, 1431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1434, 0, 1434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1431, 0, 0, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1434, 0,
	275, 1434, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1432, 0, 0,
	0, 0, 0, 0, 0, 3715, 0, 0, 0, 3719,
	0, 0, 0, 0, 0, 0, 0, 0, 1434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1431,
	0, 0, 0, 0, 0, 0, 0, 1852, 1853, 0,
	1885, 1886, 1887, 1896, 1897, 1898, 0, 1432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1889,
	1883, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 1432, 0, 0, 1902, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1908, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 3814, 0,
	1535, 0, 1874, 1431, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3827, 0, 0,
	1434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	1878, 1879, 1880, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1553,
	0, 1432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 1553, 0, 0, 0, 0, 0,
	1553, 0, 0, 0, 0, 0, 0, 0, 1893, 0,
	0, 1903, 1553, 0, 0, 0, 0, 0, 1882, 1884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1899, 0, 1900, 0, 0, 0,
	0, 0, 0, 1869, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1891, 0, 0, 0, 1432, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 1554,
	0, 0, 0, 1434, 0, 0, 0, 1434, 0, 0,
	1434, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 1901, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 1890, 0, 275, 0, 0, 0,
	0, 275, 0, 0, 0, 1905, 275, 0, 0, 0,
	0, 0, 1434, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 1554, 1434, 1434, 1434,
	0, 0, 1554, 0, 1434, 1434, 1434, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 1434, 0, 1434, 0,
	0, 0, 275, 0, 1434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1907, 0, 0, 0, 0, 0,
	0, 0, 0, 2360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2360,
	0, 0, 0, 0, 4152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 0,
	0, 0, 0, 1434, 1434, 0, 1434, 1866, 1867, 1873,
	1895, 1872, 1868, 0, 1865, 1863, 1864, 1856, 1857, 1858,
	1859, 1861, 1862, 0, 1434, 1434, 0, 0, 0, 0,
	0, 0, 3368, 0, 0, 0, 0, 1434, 0, 0,
	4200, 0, 0, 0, 0, 0, 275, 1431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1853, 0, 1885, 1886, 1887, 1896,
	1897, 1898, 0, 0, 0, 0, 0, 0, 0, 0,
	1431, 0, 0, 0, 0, 1889, 1883, 0, 0, 0,
	0, 0, 0, 1855, 275, 1431, 0, 0, 0, 0,
	0, 0, 1902, 0, 0, 0, 0, 1434, 0, 0,
	275, 0, 0, 275, 0, 0, 0, 0, 0, 1908,
	0, 1431, 0, 0, 0, 0, 0, 1434, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1434, 1434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 1434, 275, 0, 0,
	0, 1434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 1878, 1879, 1880, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 1432,
	1434, 1434, 1434, 1434, 1434, 1434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1432, 1431, 1893, 0, 0, 1903, 0, 0,
	0, 0, 4356, 0, 1882, 1884, 0, 1432, 1434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2360, 0,
	1899, 0, 1900, 0, 0, 0, 0, 0, 0, 1869,
	1870, 0, 0, 1432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1553, 0, 1891, 0, 0,
	0, 1434, 0, 1434, 0, 0, 0, 0, 0, 1553,
	0, 1553, 1875, 0, 0, 1431, 0, 0, 0, 0,
	0, 0, 837, 1553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1553, 0, 1434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 2360, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 4454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1890, 0, 0, 0, 0, 0, 0, 0, 0, 1553,
	0, 1905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1553, 0, 1553, 0, 0, 0, 0, 0, 1434,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 1434, 1434, 1434,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 1431, 0, 0, 1431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 1434, 0,
	0, 1434, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1894, 0, 0,
	0, 1554, 0, 1554, 0, 0, 0, 1432, 0, 0,
	0, 0, 0, 275, 275, 1554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	1907, 0, 0, 1431, 0, 4557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 1554, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 0, 2360, 0, 0, 0,
	0, 0, 0, 1866, 1867, 1873, 1895, 1872, 1868, 0,
	1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 3365, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 1432, 1852,
	1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1889, 1883, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 275, 1431, 0, 0, 1902, 1434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1434,
	0, 4685, 1535, 0, 0, 1908, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 837, 0, 0, 0,
	0, 0, 0, 0, 1874, 1432, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 1432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 1878, 1879, 1880, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 0,
	1893, 0, 1553, 1903, 0, 1553, 0, 0, 0, 0,
	1882, 1884, 4803, 0, 0, 0, 0, 1432, 0, 0,
	0, 0, 0, 0, 0, 0, 1899, 0, 1900, 0,
	0, 0, 0, 0, 0, 1869, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4856, 0, 0, 0,
	0, 0, 1553, 1553, 1553, 0, 0, 0, 0, 1553,
	1553, 1553, 0, 0, 0, 0, 1901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1553, 0, 1553, 0, 0, 1890, 0, 0, 1431,
	0, 0, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 4900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 0, 0, 0, 1554, 0, 0, 1554, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1894, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 1852, 1853, 0, 1885,
	1886, 1887, 1896, 1897, 1898, 0, 1907, 0, 1431, 1431,
	0, 1431, 0, 0, 1554, 1554, 1554, 0, 1889, 1883,
	0, 1554, 1554, 1554, 0, 0, 1855, 0, 0, 1553,
	1553, 0, 0, 0, 0, 1902, 0, 0, 0, 0,
	0, 0, 1431, 1554, 0, 1554, 0, 0, 0, 0,
	0, 1432, 1908, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 1432, 1892,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864, 1856,
	1857, 1858, 1859, 1861, 1862, 0, 0, 0, 0, 0,
	0, 0, 1431, 0, 3364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 1878,
	1879, 1880, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 1553, 1553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1432, 1432, 0, 1432, 0, 0, 0, 1893, 0, 0,
	1903, 1431, 0, 0, 0, 0, 1553, 1882, 1884, 0,
	0, 1554, 1554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1899, 1432, 1900, 0, 0, 0, 0,
	0, 0, 1869, 1870, 0, 1553, 1553, 1553, 1553, 1553,
	1553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1891, 0, 0, 1431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1901, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1431, 0, 1553, 0,
	0, 0, 0, 1890, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1905, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 1554, 0, 0, 0, 0, 0,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1432, 0, 0, 0, 0, 1554, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 1554, 1554, 1554,
	1554, 1554, 1554, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 0,
	1894, 0, 1553, 1553, 1553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 0,
	0, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1431, 0, 0, 1553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1432, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1432, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1867, 1873, 1895,
	1872, 1868, 0, 1865, 1863, 1864, 1856, 1857, 1858, 1859,
	1861, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 1554, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 1554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 1429, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 285, 284, 286, 287,
	288, 289, 1435, 290, 291, 1436, 1437, 1438, 0, 1439,
	655, 1440, 1441, 1442, 1443, 292, 293, 1231, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 1444, 660, 302, 303, 304, 305, 306, 307, 1445,
	1446, 0, 308, 661, 662, 663, 1447, 309, 310, 664,
	1448, 1515, 1449, 311, 312, 313, 314, 315, 316, 317,
	0, 1450, 319, 320, 321, 318, 322, 1451, 323, 1554,
	324, 325, 326, 327, 328, 329, 1452, 330, 331, 332,
	1232, 333, 334, 335, 1453, 1454, 1456, 1455, 1457, 1458,
	1459, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 1460, 346, 342, 344, 1461, 347, 345, 348, 1462,
	349, 350, 351, 1463, 1464, 352, 353, 354, 1465, 355,
	356, 357, 1466, 358, 359, 360, 1467, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 1468, 280, 1469, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 1470,
	379, 380, 381, 1471, 1472, 1233, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	1473, 394, 673, 1474, 674, 395, 1475, 396, 397, 398,
	399, 400, 675, 676, 677, 487, 1235, 401, 402, 1476,
	403, 404, 405, 406, 407, 0, 0, 0, 281, 408,
	409, 410, 1477, 1234, 411, 678, 679, 1478, 680, 1479,
	412, 413, 1236, 681, 1237, 414, 415, 416, 1238, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 1480,
	424, 426, 425, 1481, 427, 682, 1239, 428, 429, 1240,
	1482, 430, 431, 432, 433, 434, 435, 438, 1483, 1484,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 1241,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 1242, 481, 469,
	1485, 282, 1243, 483, 484, 485, 1486, 683, 486, 684,
	488, 489, 1487, 0, 490, 0, 491, 1488, 1489, 493,
	494, 495, 1490, 1491, 496, 497, 685, 1244, 498, 1245,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 1492, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 1493,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 1494, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	1495, 551, 552, 553, 1246, 554, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 1496, 576, 577, 575, 578,
	579, 580, 1497, 581, 582, 564, 565, 583, 584, 1247,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	1498, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 1499,
	610, 611, 0, 607, 598, 1500, 612, 613, 614, 615,
	616, 617, 618, 619, 1501, 620, 696, 697, 698, 699,
	1502, 630, 1503, 621, 622, 623, 624, 700, 625, 701,
	1504, 626, 627, 628, 629, 0, 631, 632, 1505, 1506,
	633, 634, 635, 637, 638, 636, 639, 1507, 640, 1508,
	0, 641, 642, 643, 702, 703, 704, 1509, 645, 644,
	646, 647, 705, 648, 649, 1510, 1511, 1512, 1513, 650,
	651, 706, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1429, 0, 0, 0, 0,
	0, 0, 0, 2841, 0, 0, 0, 0, 0, 0,
	0, 2842, 283, 285, 284, 286, 287, 288, 289, 1435,
	290, 291, 1436, 1437, 1438, 0, 1439, 655, 1440, 1441,
	1442, 1443, 292, 293, 1231, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 1444, 660,
	302, 303, 304, 305, 306, 307, 1445, 1446, 0, 308,
	661, 662, 663, 1447, 309, 310, 664, 1448, 1515, 1449,
	311, 312, 313, 314, 315, 316, 317, 0, 1450, 319,
	320, 321, 318, 322, 1451, 323, 0, 324, 325, 326,
	327, 328, 329, 1452, 330, 331, 332, 1232, 333, 334,
	335, 1453, 1454, 1456, 1455, 1457, 1458, 1459, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 1460, 346,
	342, 344, 1461, 347, 345, 348, 1462, 349, 350, 351,
	1463, 1464, 352, 353, 354, 1465, 355, 356, 357, 1466,
	358, 359, 360, 1467, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 1468, 280, 1469, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 1470, 379, 380, 381,
	1471, 1472, 1233, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 1473, 394, 673,
	1474, 674, 395, 1475, 396, 397, 398, 399, 400, 675,
	676, 677, 487, 1235, 401, 402, 1476, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 1477,
	1234, 411, 678, 679, 1478, 680, 1479, 412, 413, 1236,
	681, 1237, 414, 415, 416, 1238, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 1480, 424, 426, 425,
	1481, 427, 682, 1239, 428, 429, 1240, 1482, 430, 431,
	432, 433, 434, 435, 438, 1483, 1484, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 1241, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 1242, 481, 469, 1485, 282, 1243,
	483, 484, 485, 1486, 683, 486, 684, 488, 489, 1487,
	0, 490, 0, 491, 1488, 1489, 493, 494, 495, 1490,
	1491, 496, 497, 685, 1244, 498, 1245, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	1492, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 1493, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 1494, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 1495, 551, 552,
	553, 1246, 554, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 1496, 576, 577, 575, 578, 579, 580, 1497,
	581, 582, 564, 565, 583, 584, 1247, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 1498, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 1499, 610, 611, 0,
	607, 598, 1500, 612, 613, 614, 615, 616, 617, 618,
	619, 1501, 620, 696, 697, 698, 699, 1502, 630, 1503,
	621, 622, 623, 624, 700, 625, 701, 1504, 626, 627,
	628, 629, 0, 631, 632, 1505, 1506, 633, 634, 635,
	637, 638, 636, 639, 1507, 640, 1508, 0, 641, 642,
	643, 702, 703, 704, 1509, 645, 644, 646, 647, 705,
	648, 649, 1510, 1511, 1512, 1513, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1429, 0, 0, 0, 3854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3856, 283, 285, 284,
	286, 287, 288, 289, 1435, 290, 291, 1436, 1437, 1438,
	0, 1439, 655, 1440, 1441, 1442, 1443, 292, 293, 1231,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 1444, 660, 302, 303, 304, 305, 306,
	307, 1445, 1446, 0, 308, 661, 662, 663, 1447, 309,
	310, 664, 1448, 1515, 1449, 311, 312, 313, 314, 315,
	316, 317, 0, 1450, 319, 320, 321, 318, 322, 1451,
	323, 0, 324, 325, 326, 327, 328, 329, 1452, 330,
	331, 332, 1232, 333, 334, 335, 1453, 1454, 1456, 1455,
	1457, 1458, 1459, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 1460, 346, 342, 344, 1461, 347, 345,
	348, 1462, 349, 350, 351, 1463, 1464, 352, 353, 354,
	1465, 355, 356, 357, 1466, 358, 359, 360, 1467, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 1468, 280, 1469, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 1470, 379, 380, 381, 1471, 1472, 1233, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 1473, 394, 673, 1474, 674, 395, 1475, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 1235, 401,
	402, 1476, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 1477, 1234, 411, 678, 679, 1478,
	680, 1479, 412, 413, 1236, 681, 1237, 414, 415, 416,
	1238, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 1480, 424, 426, 425, 1481, 427, 682, 1239, 428,
	429, 1240, 1482, 430, 431, 432, 433, 434, 435, 438,
	1483, 1484, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 1241, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 1242,
	481, 469, 1485, 282, 1243, 483, 484, 485, 1486, 683,
	486, 684, 488, 489, 1487, 0, 490, 0, 491, 1488,
	1489, 493, 494, 495, 1490, 1491, 496, 497, 685, 1244,
	498, 1245, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 1492, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 1493, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 1494, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 1495, 551, 552, 553, 1246, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 1496, 576, 577,
	575, 578, 579, 580, 1497, 581, 582, 564, 565, 583,
	584, 1247, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 1498, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 1499, 610, 611, 0, 607, 598, 1500, 612, 613,
	614, 615, 616, 617, 618, 619, 1501, 620, 696, 697,
	698, 699, 1502, 630, 1503, 621, 622, 623, 624, 700,
	625, 701, 1504, 626, 627, 628, 629, 0, 631, 632,
	1505, 1506, 633, 634, 635, 637, 638, 636, 639, 1507,
	640, 1508, 0, 641, 642, 643, 702, 703, 704, 1509,
	645, 644, 646, 647, 705, 648, 649, 1510, 1511, 1512,
	1513, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4273, 283, 285, 284, 286,
	287, 288, 289, 1435, 290, 291, 1436, 1437, 1438, 0,
	1439, 655, 1440, 1441, 1442, 1443, 292, 293, 1231, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 1444, 660, 302, 303, 304, 305, 306, 307,
	1445, 1446, 0, 308, 661, 662, 663, 1447, 309, 310,
	664, 1448, 1515, 1449, 311, 312, 313, 314, 315, 316,
	317, 0, 1450, 319, 320, 321, 318, 322, 1451, 323,
	0, 324, 325, 326, 327, 328, 329, 1452, 330, 331,
	332, 1232, 333, 334, 335, 1453, 1454, 1456, 1455, 1457,
	1458, 1459, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 1460, 346, 342, 344, 1461, 347, 345, 348,
	1462, 349, 350, 351, 1463, 1464, 352, 353, 354, 1465,
	355, 356, 357, 1466, 358, 359, 360, 1467, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 1468, 280, 1469, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	1470, 379, 380, 381, 1471, 1472, 1233, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 1473, 394, 673, 1474, 674, 395, 1475, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 1235, 401, 402,
	1476, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 1477, 1234, 411, 678, 679, 1478, 680,
	1479, 412, 413, 1236, 681, 1237, 414, 415, 416, 1238,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	1480, 424, 426, 425, 1481, 427, 682, 1239, 428, 429,
	1240, 1482, 430, 431, 432, 433, 434, 435, 438, 1483,
	1484, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	1241, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 1242, 481,
	469, 1485, 282, 1243, 483, 484, 485, 1486, 683, 486,
	684, 488, 489, 1487, 0, 490, 0, 491, 1488, 1489,
	493, 494, 495, 1490, 1491, 496, 497, 685, 1244, 498,
	1245, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 1492, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	1493, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 1494, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 1495, 551, 552, 553, 1246, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 1496, 576, 577, 575,
	578, 579, 580, 1497, 581, 582, 564, 565, 583, 584,
	1247, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 1498, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	1499, 610, 611, 0, 607, 598, 1500, 612, 613, 614,
	615, 616, 617, 618, 619, 1501, 620, 696, 697, 698,
	699, 1502, 630, 1503, 621, 622, 623, 624, 700, 625,
	701, 1504, 626, 627, 628, 629, 0, 631, 632, 1505,
	1506, 633, 634, 635, 637, 638, 636, 639, 1507, 640,
	1508, 0, 641, 642, 643, 702, 703, 704, 1509, 645,
	644, 646, 647, 705, 648, 649, 1510, 1511, 1512, 1513,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4271, 283, 285, 284, 286, 287,
	288, 289, 1435, 290, 291, 1436, 1437, 1438, 0, 1439,
	655, 1440, 1441, 1442, 1443, 292, 293, 1231, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 1444, 660, 302, 303, 304, 305, 306, 307, 1445,
	1446, 0, 308, 661, 662, 663, 1447, 309, 310, 664,
	1448, 1515, 1449, 311, 312, 313, 314, 315, 316, 317,
	0, 1450, 319, 320, 321, 318, 322, 1451, 323, 0,
	324, 325, 326, 327, 328, 329, 1452, 330, 331, 332,
	1232, 333, 334, 335, 1453, 1454, 1456, 1455, 1457, 1458,
	1459, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 1460, 346, 342, 344, 1461, 347, 345, 348, 1462,
	349, 350, 351, 1463, 1464, 352, 353, 354, 1465, 355,
	356, 357, 1466, 358, 359, 360, 1467, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 1468, 280, 1469, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 1470,
	379, 380, 381, 1471, 1472, 1233, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	1473, 394, 673, 1474, 674, 395, 1475, 396, 397, 398,
	399, 400, 675, 676, 677, 487, 1235, 401, 402, 1476,
	403, 404, 405, 406, 407, 0, 0, 0, 281, 408,
	409, 410, 1477, 1234, 411, 678, 679, 1478, 680, 1479,
	412, 413, 1236, 681, 1237, 414, 415, 416, 1238, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 1480,
	424, 426, 425, 1481, 427, 682, 1239, 428, 429, 1240,
	1482, 430, 431, 432, 433, 434, 435, 438, 1483, 1484,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 1241,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 1242, 481, 469,
	1485, 282, 1243, 483, 484, 485, 1486, 683, 486, 684,
	488, 489, 1487, 0, 490, 0, 491, 1488, 1489, 493,
	494, 495, 1490, 1491, 496, 497, 685, 1244, 498, 1245,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 1492, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 1493,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 1494, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	1495, 551, 552, 553, 1246, 554, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 1496, 576, 577, 575, 578,
	579, 580, 1497, 581, 582, 564, 565, 583, 584, 1247,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	1498, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 1499,
	610, 611, 0, 607, 598, 1500, 612, 613, 614, 615,
	616, 617, 618, 619, 1501, 620, 696, 697, 698, 699,
	1502, 630, 1503, 621, 622, 623, 624, 700, 625, 701,
	1504, 626, 627, 628, 629, 0, 631, 632, 1505, 1506,
	633, 634, 635, 637, 638, 636, 639, 1507, 640, 1508,
	0, 641, 642, 643, 702, 703, 704, 1509, 645, 644,
	646, 647, 705, 648, 649, 1510, 1511, 1512, 1513, 650,
	651, 706, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 1429, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4501, 283, 285,
	284, 286, 287, 288, 289, 1435, 290, 291, 1436, 1437,
	1438, 0, 1439, 655, 1440, 1441, 1442, 1443, 292, 293,
	1231, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 1444, 660, 302, 303, 304, 305,
	306, 307, 1445, 1446, 0, 308, 661, 662, 663, 1447,
	309, 310, 664, 1448, 1515, 1449, 311, 312, 313, 314,
	315, 316, 317, 0, 1450, 319, 320, 321, 318, 322,
	1451, 323, 0, 324, 325, 326, 327, 328, 329, 1452,
	330, 331, 332, 1232, 333, 334, 335, 1453, 1454, 1456,
	1455, 1457, 1458, 1459, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 1460, 346, 342, 344, 1461, 347,
	345, 348, 1462, 349, 350, 351, 1463, 1464, 352, 353,
	354, 1465, 355, 356, 357, 1466, 358, 359, 360, 1467,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 1468, 280, 1469,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 1470, 379, 380, 381, 1471, 1472, 1233, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 1473, 394, 673, 1474, 674, 395, 1475,
	396, 397, 398, 399, 400, 675, 676, 677, 487, 1235,
	401, 402, 1476, 403, 404, 405, 406, 407, 0, 0,
	0, 281, 408, 409, 410, 1477, 1234, 411, 678, 679,
	1478, 680, 1479, 412, 413, 1236, 681, 1237, 414, 415,
	416, 1238, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 1480, 424, 426, 425, 1481, 427, 682, 1239,
	428, 429, 1240, 1482, 430, 431, 432, 433, 434, 435,
	438, 1483, 1484, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 1241, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	1242, 481, 469, 1485, 282, 1243, 483, 484, 485, 1486,
	683, 486, 684, 488, 489, 1487, 0, 490, 0, 491,
	1488, 1489, 493, 494, 495, 1490, 1491, 496, 497, 685,
	1244, 498, 1245, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 1492, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 1493, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 1494,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 1495, 551, 552, 553, 1246, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 1496, 576,
	577, 575, 578, 579, 580, 1497, 581, 582, 564, 565,
	583, 584, 1247, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 1498, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 1499, 610, 611, 0, 607, 598, 1500, 612,
	613, 614, 615, 616, 617, 618, 619, 1501, 620, 696,
	697, 698, 699, 1502, 630, 1503, 621, 622, 623, 624,
	700, 625, 701, 1504, 626, 627, 628, 629, 0, 631,
	632, 1505, 1506, 633, 634, 635, 637, 638, 636, 639,
	1507, 640, 1508, 0, 641, 642, 643, 702, 703, 704,
	1509, 645, 644, 646, 647, 705, 648, 649, 1510, 1511,
	1512, 1513, 650, 651, 706, 652, 653, 654, 0, 0,
	0, 0, 0, 0, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4365, 283, 285, 284, 286, 287, 288, 289, 1435, 290,
	291, 1436, 1437, 1438, 0, 1439, 655, 1440, 1441, 1442,
	1443, 292, 293, 1231, 294, 295, 296, 297, 298, 299,
	656, 657, 0, 300, 658, 301, 659, 1444, 660, 302,
	303, 304, 305, 306, 307, 1445, 1446, 0, 308, 661,
	662, 663, 1447, 309, 310, 664, 1448, 1515, 1449, 311,
	312, 313, 314, 315, 316, 317, 0, 1450, 319, 320,
	321, 318, 322, 1451, 323, 0, 324, 325, 326, 327,
	328, 329, 1452, 330, 331, 332, 1232, 333, 334, 335,
	1453, 1454, 1456, 1455, 1457, 1458, 1459, 336, 337, 338,
	339, 340, 0, 341, 343, 665, 666, 1460, 346, 342,
	344, 1461, 347, 345, 348, 1462, 349, 350, 351, 1463,
	1464, 352, 353, 354, 1465, 355, 356, 357, 1466, 358,
	359, 360, 1467, 361, 362, 667, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 668, 669, 374,
	1468, 280, 1469, 0, 0, 0, 0, 375, 376, 377,
	670, 0, 0, 0, 378, 1470, 379, 380, 381, 1471,
	1472, 1233, 382, 383, 384, 671, 672, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 1473, 394, 673, 1474,
	674, 395, 1475, 396, 397, 398, 399, 400, 675, 676,
	677, 487, 1235, 401, 402, 1476, 403, 404, 405, 406,
	407, 0, 0, 0, 281, 408, 409, 410, 1477, 1234,
	411, 678, 679, 1478, 680, 1479, 412, 413, 1236, 681,
	1237, 414, 415, 416, 1238, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 1480, 424, 426, 425, 1481,
	427, 682, 1239, 428, 429, 1240, 1482, 430, 431, 432,
	433, 434, 435, 438, 1483, 1484, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 1241, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 1242, 481, 469, 1485, 282, 1243, 483,
	484, 485, 1486, 683, 486, 684, 488, 489, 1487, 0,
	490, 0, 491, 1488, 1489, 493, 494, 495, 1490, 1491,
	496, 497, 685, 1244, 498, 1245, 686, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 1492,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	689, 518, 690, 519, 520, 1493, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 691, 530, 531, 533,
	532, 534, 1494, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 1495, 551, 552, 553,
	1246, 554, 555, 556, 557, 558, 692, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 1496, 576, 577, 575, 578, 579, 580, 1497, 581,
	582, 564, 565, 583, 584, 1247, 585, 586, 587, 588,
	589, 590, 591, 693, 0, 592, 1498, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 694, 601, 602,
	603, 604, 695, 608, 609, 1499, 610, 611, 0, 607,
	598, 1500, 612, 613, 614, 615, 616, 617, 618, 619,
	1501, 620, 696, 697, 698, 699, 1502, 630, 1503, 621,
	622, 623, 624, 700, 625, 701, 1504, 626, 627, 628,
	629, 0, 631, 632, 1505, 1506, 633, 634, 635, 637,
	638, 636, 639, 1507, 640, 1508, 0, 641, 642, 643,
	702, 703, 704, 1509, 645, 644, 646, 647, 705, 648,
	649, 1510, 1511, 1512, 1513, 650, 651, 706, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 1429, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4201, 283, 285, 284, 286, 287, 288,
	289, 1435, 290, 291, 1436, 1437, 1438, 0, 1439, 655,
	1440, 1441, 1442, 1443, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	1444, 660, 302, 303, 304, 305, 306, 307, 1445, 1446,
	0, 308, 661, 662, 663, 1447, 309, 310, 664, 1448,
	1515, 1449, 311, 312, 313, 314, 315, 316, 317, 0,
	1450, 319, 320, 321, 318, 322, 1451, 323, 0, 324,
	325, 326, 327, 328, 329, 1452, 330, 331, 332, 1232,
	333, 334, 335, 1453, 1454, 1456, 1455, 1457, 1458, 1459,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	1460, 346, 342, 344, 1461, 347, 345, 348, 1462, 349,
	350, 351, 1463, 1464, 352, 353, 354, 1465, 355, 356,
	357, 1466, 358, 359, 360, 1467, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 1468, 280, 1469, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 1470, 379,
	380, 381, 1471, 1472, 1233, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 1473,
	394, 673, 1474, 674, 395, 1475, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 1235, 401, 402, 1476, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 1477, 1234, 411, 678, 679, 1478, 680, 1479, 412,
	413, 1236, 681, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 1480, 424,
	426, 425, 1481, 427, 682, 1239, 428, 429, 1240, 1482,
	430, 431, 432, 433, 434, 435, 438, 1483, 1484, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 1485,
	282, 1243, 483, 484, 485, 1486, 683, 486, 684, 488,
	489, 1487, 0, 490, 0, 491, 1488, 1489, 493, 494,
	495, 1490, 1491, 496, 497, 685, 1244, 498, 1245, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 1492, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 1493, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 1494, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 1495,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 1496, 576, 577, 575, 578, 579,
	580, 1497, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 1498,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 1499, 610,
	611, 0, 607, 598, 1500, 612, 613, 614, 615, 616,
	617, 618, 619, 1501, 620, 696, 697, 698, 699, 1502,
	630, 1503, 621, 622, 623, 624, 700, 625, 701, 1504,
	626, 627, 628, 629, 0, 631, 632, 1505, 1506, 633,
	634, 635, 637, 638, 636, 639, 1507, 640, 1508, 0,
	641, 642, 643, 702, 703, 704, 1509, 645, 644, 646,
	647, 705, 648, 649, 1510, 1511, 1512, 1513, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	1429, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3872, 283, 285, 284,
	286, 287, 288, 289, 1435, 290, 291, 1436, 1437, 1438,
	0, 1439, 655, 1440, 1441, 1442, 1443, 292, 293, 1231,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 1444, 660, 302, 303, 304, 305, 306,
	307, 1445, 1446, 0, 308, 661, 662, 663, 1447, 309,
	310, 664, 1448, 1515, 1449, 311, 312, 313, 314, 315,
	316, 317, 0, 1450, 319, 320, 321, 318, 322, 1451,
	323, 0, 324, 325, 326, 327, 328, 329, 1452, 330,
	331, 332, 1232, 333, 334, 335, 1453, 1454, 1456, 1455,
	1457, 1458, 1459, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 1460, 346, 342, 344, 1461, 347, 345,
	348, 1462, 349, 350, 351, 1463, 1464, 352, 353, 354,
	1465, 355, 356, 357, 1466, 358, 359, 360, 1467, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 1468, 280, 1469, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 1470, 379, 380, 381, 1471, 1472, 1233, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 1473, 394, 673, 1474, 674, 395, 1475, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 1235, 401,
	402, 1476, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 1477, 1234, 411, 678, 679, 1478,
	680, 1479, 412, 413, 1236, 681, 1237, 414, 415, 416,
	1238, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 1480, 424, 426, 425, 1481, 427, 682, 1239, 428,
	429, 1240, 1482, 430, 431, 432, 433, 434, 435, 438,
	1483, 1484, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 1241, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 1242,
	481, 469, 1485, 282, 1243, 483, 484, 485, 1486, 683,
	486, 684, 488, 489, 1487, 0, 490, 0, 491, 1488,
	1489, 493, 494, 495, 1490, 1491, 496, 497, 685, 1244,
	498, 1245, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 1492, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 1493, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 1494, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 1495, 551, 552, 553, 1246, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 1496, 576, 577,
	575, 578, 579, 580, 1497, 581, 582, 564, 565, 583,
	584, 1247, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 1498, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 1499, 610, 611, 0, 607, 598, 1500, 612, 613,
	614, 615, 616, 617, 618, 619, 1501, 620, 696, 697,
	698, 699, 1502, 630, 1503, 621, 622, 623, 624, 700,
	625, 701, 1504, 626, 627, 628, 629, 0, 631, 632,
	1505, 1506, 633, 634, 635, 637, 638, 636, 639, 1507,
	640, 1508, 0, 641, 642, 643, 702, 703, 704, 1509,
	645, 644, 646, 647, 705, 648, 649, 1510, 1511, 1512,
	1513, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 1429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3688,
	283, 285, 284, 286, 287, 288, 289, 1435, 290, 291,
	1436, 1437, 1438, 0, 1439, 655, 1440, 1441, 1442, 1443,
	292, 293, 1231, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 1444, 660, 302, 303,
	304, 305, 306, 307, 1445, 1446, 0, 308, 661, 662,
	663, 1447, 309, 310, 664, 1448, 1515, 1449, 311, 312,
	313, 314, 315, 316, 317, 0, 1450, 319, 320, 321,
	318, 322, 1451, 323, 0, 324, 325, 326, 327, 328,
	329, 1452, 330, 331, 332, 1232, 333, 334, 335, 1453,
	1454, 1456, 1455, 1457, 1458, 1459, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 1460, 346, 342, 344,
	1461, 347, 345, 348, 1462, 349, 350, 351, 1463, 1464,
	352, 353, 354, 1465, 355, 356, 357, 1466, 358, 359,
	360, 1467, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 1468,
	280, 1469, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 1470, 379, 380, 381, 1471, 1472,
	1233, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 1473, 394, 673, 1474, 674,
	395, 1475, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 1235, 401, 402, 1476, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 1477, 1234, 411,
	678, 679, 1478, 680, 1479, 412, 413, 1236, 681, 1237,
	414, 415, 416, 1238, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 1480, 424, 426, 425, 1481, 427,
	682, 1239, 428, 429, 1240, 1482, 430, 431, 432, 433,
	434, 435, 438, 1483, 1484, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 1241, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 1242, 481, 469, 1485, 282, 1243, 483, 484,
	485, 1486, 683, 486, 684, 488, 489, 1487, 0, 490,
	0, 491, 1488, 1489, 493, 494, 495, 1490, 1491, 496,
	497, 685, 1244, 498, 1245, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 1492, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 1493, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 1494, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 1495, 551, 552, 553, 1246,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	1496, 576, 577, 575, 578, 579, 580, 1497, 581, 582,
	564, 565, 583, 584, 1247, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 1498, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 1499, 610, 611, 0, 607, 598,
	1500, 612, 613, 614, 615, 616, 617, 618, 619, 1501,
	620, 696, 697, 698, 699, 1502, 630, 1503, 621, 622,
	623, 624, 700, 625, 701, 1504, 626, 627, 628, 629,
	0, 631, 632, 1505, 1506, 633, 634, 635, 637, 638,
	636, 639, 1507, 640, 1508, 0, 641, 642, 643, 702,
	703, 704, 1509, 645, 644, 646, 647, 705, 648, 649,
	1510, 1511, 1512, 1513, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 1429, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2696, 283, 285, 284, 286, 287, 288, 289,
	1435, 290, 291, 1436, 1437, 1438, 0, 1439, 655, 1440,
	1441, 1442, 1443, 292, 293, 1231, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 1444,
	660, 302, 303, 304, 305, 306, 307, 1445, 1446, 0,
	308, 661, 662, 663, 1447, 309, 310, 664, 1448, 1515,
	1449, 311, 312, 313, 314, 315, 316, 317, 0, 1450,
	319, 320, 321, 318, 322, 1451, 323, 0, 324, 325,
	326, 327, 328, 329, 1452, 330, 331, 332, 1232, 333,
	334, 335, 1453, 1454, 1456, 1455, 1457, 1458, 1459, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 1460,
	346, 342, 344, 1461, 347, 345, 348, 1462, 349, 350,
	351, 1463, 1464, 352, 353, 354, 1465, 355, 356, 357,
	1466, 358, 359, 360, 1467, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 1468, 280, 1469, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 1470, 379, 380,
	381, 1471, 1472, 1233, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 1473, 394,
	673, 1474, 674, 395, 1475, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 1235, 401, 402, 1476, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	1477, 1234, 411, 678, 679, 1478, 680, 1479, 412, 413,
	1236, 681, 1237, 414, 415, 416, 1238, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 1480, 424, 426,
	425, 1481, 427, 682, 1239, 428, 429, 1240, 1482, 430,
	431, 432, 433, 434, 435, 438, 1483, 1484, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 1241, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 1242, 481, 469, 1485, 282,
	1243, 483, 484, 485, 1486, 683, 486, 684, 488, 489,
	1487, 0, 490, 0, 491, 1488, 1489, 493, 494, 495,
	1490, 1491, 496, 497, 685, 1244, 498, 1245, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 1492, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 1493, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 1494, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 1495, 551,
	552, 553, 1246, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 1496, 576, 577, 575, 578, 579, 580,
	1497, 581, 582, 564, 565, 583, 584, 1247, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 1498, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 1499, 610, 611,
	0, 607, 598, 1500, 612, 613, 614, 615, 616, 617,
	618, 619, 1501, 620, 696, 697, 698, 699, 1502, 630,
	1503, 621, 622, 623, 624, 700, 625, 701, 1504, 626,
	627, 628, 629, 0, 631, 632, 1505, 1506, 633, 634,
	635, 637, 638, 636, 639, 1507, 640, 1508, 0, 641,
	642, 643, 702, 703, 704, 1509, 645, 644, 646, 647,
	705, 648, 649, 1510, 1511, 1512, 1513, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 1426, 0, 1429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2318, 283, 285, 284, 286,
	287, 288, 289, 1435, 290, 291, 1436, 1437, 1438, 0,
	1439, 655, 1440, 1441, 1442, 1443, 292, 293, 1231, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 1444, 660, 302, 303, 304, 305, 306, 307,
	1445, 1446, 0, 308, 661, 662, 663, 1447, 309, 310,
	664, 1448, 1515, 1449, 311, 312, 313, 314, 315, 316,
	317, 0, 1450, 319, 320, 321, 318, 322, 1451, 323,
	0, 324, 325, 326, 327, 328, 329, 1452, 330, 331,
	332, 1232, 333, 334, 335, 1453, 1454, 1456, 1455, 1457,
	1458, 1459, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 1460, 346, 342, 344, 1461, 347, 345, 348,
	1462, 349, 350, 351, 1463, 1464, 352, 353, 354, 1465,
	355, 356, 357, 1466, 358, 359, 360, 1467, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 1468, 280, 1469, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	1470, 379, 380, 381, 1471, 1472, 1233, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 1473, 394, 673, 1474, 674, 395, 1475, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 1235, 401, 402,
	1476, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 1477, 1234, 411, 678, 679, 1478, 680,
	1479, 412, 413, 1236, 681, 1237, 414, 415, 416, 1238,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	1480, 424, 426, 425, 1481, 427, 682, 1239, 428, 429,
	1240, 1482, 430, 431, 432, 433, 434, 435, 438, 1483,
	1484, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	1241, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 1242, 481,
	469, 1485, 282, 1243, 483, 484, 485, 1486, 683, 486,
	684, 488, 489, 1487, 0, 490, 0, 491, 1488, 1489,
	493, 494, 495, 1490, 1491, 496, 497, 685, 1244, 498,
	1245, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 1492, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	1493, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 1494, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 1495, 551, 552, 553, 1246, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 1496, 576, 577, 575,
	578, 579, 580, 1497, 581, 582, 564, 565, 583, 584,
	1247, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 1498, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	1499, 610, 611, 0, 607, 598, 1500, 612, 613, 614,
	615, 616, 617, 618, 619, 1501, 620, 696, 697, 698,
	699, 1502, 630, 1503, 621, 622, 623, 624, 700, 625,
	701, 1504, 626, 627, 628, 629, 0, 631, 632, 1505,
	1506, 633, 634, 635, 637, 638, 636, 639, 1507, 640,
	1508, 0, 641, 642, 643, 702, 703, 704, 1509, 645,
	644, 646, 647, 705, 648, 649, 1510, 1511, 1512, 1513,
	650, 651, 706, 652, 653, 654, 1429, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	1435, 290, 291, 1436, 1437, 1438, 0, 1439, 655, 1440,
	1441, 1442, 1443, 292, 293, 1231, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 1444,
	660, 302, 303, 304, 305, 306, 307, 1445, 1446, 0,
	308, 661, 662, 663, 1447, 309, 310, 664, 1448, 1515,
	1449, 311, 312, 313, 314, 315, 316, 317, 0, 1450,
	319, 320, 321, 318, 322, 1451, 323, 0, 324, 325,
	326, 327, 328, 329, 1452, 330, 331, 332, 1232, 333,
	334, 335, 1453, 1454, 1456, 1455, 1457, 1458, 1459, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 1460,
	346, 342, 344, 1461, 347, 345, 348, 1462, 349, 350,
	351, 1463, 1464, 352, 353, 354, 1465, 355, 356, 357,
	1466, 358, 359, 360, 1467, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 1468, 280, 1469, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 1470, 379, 380,
	381, 1471, 1472, 1233, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 1473, 394,
	673, 1474, 674, 395, 1475, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 1235, 401, 402, 1476, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	1477, 1234, 411, 678, 679, 1478, 680, 1479, 412, 413,
	1236, 681, 1237, 414, 415, 416, 1238, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 1480, 424, 426,
	425, 1481, 427, 682, 1239, 428, 429, 1240, 1482, 430,
	431, 432, 433, 434, 435, 438, 1483, 1484, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 1241, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 1242, 481, 469, 1485, 282,
	1243, 483, 484, 485, 1486, 683, 486, 684, 488, 489,
	1487, 0, 490, 0, 491, 1488, 1489, 493, 494, 495,
	1490, 1491, 496, 497, 685, 1244, 498, 1245, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 1492, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 1493, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 1494, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 1495, 551,
	552, 553, 1246, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 1496, 576, 577, 575, 578, 579, 580,
	1497, 581, 582, 564, 565, 583, 584, 1247, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 1498, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 1499, 610, 611,
	0, 607, 598, 1500, 612, 613, 614, 615, 616, 617,
	618, 619, 1501, 620, 696, 697, 698, 699, 1502, 630,
	1503, 621, 622, 623, 624, 700, 625, 701, 1504, 626,
	627, 628, 629, 0, 631, 632, 1505, 1506, 633, 634,
	635, 637, 638, 636, 639, 1507, 640, 1508, 0, 641,
	642, 643, 702, 703, 704, 1509, 645, 644, 646, 647,
	705, 648, 649, 1510, 1511, 1512, 1513, 650, 651, 706,
	652, 653, 654, 2671, 0, 1167, 1139, 1140, 1141, 1137,
	1138, 1150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 2668,
	290, 291, 0, 0, 0, 0, 0, 1191, 1155, 0,
	0, 0, 292, 293, 1231, 294, 295, 296, 297, 298,
	299, 656, 1204, 0, 300, 1211, 301, 1210, 0, 1221,
	302, 303, 304, 305, 306, 307, 1157, 1190, 1122, 308,
	1251, 1252, 663, 0, 309, 310, 1197, 0, 1178, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 1232, 333, 334,
	335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337,
	338, 339, 340, 1214, 341, 343, 1208, 1207, 1127, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	2669, 0, 352, 1199, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 1133, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 1222, 1223,
	374, 1146, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 1206, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 1233, 382, 383, 384, 1219, 1220, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 1229,
	0, 1156, 395, 0, 396, 397, 398, 399, 400, 1192,
	1193, 1196, 487, 1235, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	1234, 411, 1201, 1202, 0, 1162, 0, 412, 413, 1236,
	1194, 1237, 414, 415, 416, 1238, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 1230, 1239, 428, 429, 1240, 0, 430, 431,
	432, 433, 434, 435, 438, 1185, 1184, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 1241, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 1242, 481, 469, 1124, 282, 1243,
	483, 484, 485, 1147, 1195, 486, 1209, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 1244, 498, 1245, 1224, 499, 500,
	1134, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 1225, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 1205, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 1246, 554, 555, 556, 557, 558, 1135, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 1188,
	581, 582, 564, 565, 583, 584, 1247, 585, 586, 587,
	588, 589, 590, 591, 1203, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 1250, 601,
	602, 603, 604, 1226, 608, 609, 0, 610, 611, 1121,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 1215, 1216, 1217, 1218, 0, 630, 0,
	621, 622, 623, 624, 1227, 625, 1228, 1145, 626, 627,
	628, 629, 0, 631, 632, 0, 1128, 633, 634, 635,
	637, 638, 636, 639, 1189, 640, 0, 0, 641, 642,
	643, 702, 1212, 1249, 2667, 645, 644, 646, 647, 705,
	648, 649, 0, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 1125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1120, 0, 0, 0, 0,
	0, 0, 1118, 1119, 2670, 0, 0, 0, 0, 0,
	0, 0, 1151, 2666, 0, 1111, 1149, 1167, 1139, 1140,
	1141, 1137, 1138, 1150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 1191,
	1155, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 1204, 0, 300, 1211, 301, 1210,
	0, 1221, 302, 303, 304, 305, 306, 307, 1157, 1190,
	1122, 308, 1251, 1252, 663, 0, 309, 310, 1197, 0,
	1178, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186,
	336, 337, 338, 339, 340, 1214, 341, 343, 1208, 1207,
	1127, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 1199, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 1133, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	1222, 1223, 374, 1146, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 1206, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 1219, 1220,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 1229, 0, 1156, 395, 0, 396, 397, 398, 399,
	400, 1192, 1193, 1196, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 1234, 411, 1201, 1202, 0, 1162, 0, 412,
	413, 1236, 1194, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 1230, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 1185, 1184, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 1124,
	282, 1243, 483, 484, 485, 1147, 1195, 486, 1209, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 1244, 498, 1245, 1224,
	499, 500, 1134, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 1225, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 1205,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 1135,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 242, 576, 577, 575, 578, 579,
	580, 1188, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 1203, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	1250, 601, 602, 603, 604, 1226, 608, 609, 0, 610,
	611, 1121, 607, 598, 244, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 1215, 1216, 1217, 1218, 0,
	630, 0, 621, 622, 623, 624, 1227, 625, 1228, 1145,
	626, 627, 628, 629, 0, 631, 632, 0, 1128, 633,
	634, 635, 637, 638, 636, 639, 1189, 640, 0, 0,
	641, 642, 643, 1669, 1212, 1249, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 0, 236, 650, 651,
	706, 652, 653, 654, 1125, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 0, 0, 0, 1118, 1119, 1167, 1139, 1140, 1141,
	1137, 1138, 1150, 0, 1933, 1931, 0, 0, 1149, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 1191, 1155,
	0, 0, 0, 292, 293, 1231, 294, 295, 296, 297,
	298, 299, 656, 1204, 0, 300, 1211, 301, 1210, 0,
	1221, 302, 303, 304, 305, 306, 307, 1157, 1190, 1122,
	308, 1251, 1252, 663, 0, 309, 310, 1197, 0, 1178,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 1232, 333,
	334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336,
	337, 338, 339, 340, 1214, 341, 343, 1208, 1207, 1127,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 1199, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 1133, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 1222,
	1223, 374, 1146, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 1206, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 1233, 382, 383, 384, 1219, 1220, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	1229, 0, 1156, 395, 0, 396, 397, 398, 399, 400,
	1192, 1193, 1196, 487, 1235, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 1234, 411, 1201, 1202, 0, 1162, 0, 412, 413,
	1236, 1194, 1237, 414, 415, 416, 1238, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 1230, 1239, 428, 429, 1240, 0, 430,
	431, 432, 433, 434, 435, 438, 1185, 1184, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 1241, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 1242, 481, 469, 1124, 282,
	1243, 483, 484, 485, 1147, 1195, 486, 1209, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 1244, 498, 1245, 1224, 499,
	500, 1134, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 1225, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 1205, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 1246, 554, 555, 556, 557, 558, 1135, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 242, 576, 577, 575, 578, 579, 580,
	1188, 581, 582, 564, 565, 583, 584, 1247, 585, 586,
	587, 588, 589, 590, 591, 1203, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 1250,
	601, 602, 603, 604, 1226, 608, 609, 0, 610, 611,
	1121, 607, 598, 244, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 1215, 1216, 1217, 1218, 0, 630,
	0, 621, 622, 623, 624, 1227, 625, 1228, 1145, 626,
	627, 628, 629, 0, 631, 632, 0, 1128, 633, 634,
	635, 637, 638, 636, 639, 1189, 640, 0, 0, 641,
	642, 643, 1669, 1212, 1249, 0, 645, 644, 646, 647,
	705, 648, 649, 0, 0, 0, 236, 650, 651, 706,
	652, 653, 654, 1125, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1120, 0, 0, 0,
	0, 0, 0, 1118, 1119, 1167, 1139, 1140, 1141, 1137,
	1138, 1150, 0, 1933, 3319, 0, 0, 1149, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 1191, 1155, 0,
	0, 0, 292, 293, 1231, 294, 295, 296, 297, 298,
	299, 656, 1204, 0, 300, 1211, 301, 1210, 0, 1221,
	302, 303, 304, 305, 306, 307, 1157, 1190, 1122, 308,
	1251, 1252, 663, 0, 309, 310, 1197, 0, 1178, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 1232, 333, 334,
	335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337,
	338, 339, 340, 1214, 341, 343, 1208, 1207, 1127, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 1199, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 1133, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 1222, 1223,
	374, 1146, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 1206, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 1233, 382, 383, 384, 1219, 1220, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 1229,
	0, 1156, 395, 0, 396, 397, 398, 399, 400, 1192,
	1193, 1196, 487, 1235, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	1234, 411, 1201, 1202, 0, 1162, 0, 412, 413, 1236,
	1194, 1237, 414, 415, 416, 1238, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 1230, 1239, 428, 429, 1240, 0, 430, 431,
	432, 433, 434, 435, 438, 1185, 1184, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 1241, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 1242, 481, 469, 1124, 282, 1243,
	483, 484, 485, 1147, 1195, 486, 1209, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 1244, 498, 1245, 1224, 499, 500,
	1134, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 1225, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 1205, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 1246, 554, 555, 556, 557, 558, 1135, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 242, 576, 577, 575, 578, 579, 580, 1188,
	581, 582, 564, 565, 583, 584, 1247, 585, 586, 587,
	588, 589, 590, 591, 1203, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 1250, 601,
	602, 603, 604, 1226, 608, 609, 0, 610, 611, 1121,
	607, 598, 244, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 1215, 1216, 1217, 1218, 0, 630, 0,
	621, 622, 623, 624, 1227, 625, 1228, 1145, 626, 627,
	628, 629, 0, 631, 632, 0, 1128, 633, 634, 635,
	637, 638, 636, 639, 1189, 640, 0, 0, 641, 642,
	643, 1669, 1212, 1249, 0, 645, 644, 646, 647, 705,
	648, 649, 0, 0, 0, 236, 650, 651, 706, 652,
	653, 654, 1125, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1120, 0, 0, 0, 0,
	0, 0, 1118, 1119, 1167, 1139, 1140, 1141, 1137, 1138,
	1150, 0, 1933, 1931, 0, 0, 1149, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 1191, 1155, 0, 0,
	0, 292, 293, 1231, 294, 295, 296, 297, 298, 299,
	656, 1204, 0, 300, 1211, 301, 1210, 2802, 1221, 302,
	303, 304, 305, 306, 307, 1157, 1190, 1122, 308, 1251,
	1252, 663, 0, 309, 310, 1197, 0, 1178, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 1232, 333, 334, 335,
	1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337, 338,
	339, 340, 1214, 341, 343, 1208, 1207, 1127, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 1199, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 1133, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 1222, 1223, 374,
	1146, 280, 0, 0, 0, 0, 0, 375, 376, 377,
	1206, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	2807, 1233, 382, 383, 384, 1219, 1220, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 1229, 0,
	1156, 395, 0, 396, 397, 398, 399, 400, 1192, 1193,
	1196, 487, 1235, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 281, 408, 409, 410, 0, 1234,
	411, 1201, 1202, 0, 1162, 0, 412, 413, 1236, 1194,
	1237, 414, 415, 416, 1238, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 2803,
	427, 1230, 1239, 428, 429, 1240, 0, 430, 431, 432,
	433, 434, 435, 438, 1185, 1184, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 1241, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 1242, 481, 469, 1124, 282, 1243, 483,
	484, 485, 1147, 1195, 486, 1209, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 1244, 498, 1245, 1224, 499, 500, 1134,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	1225, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 1205, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	1246, 554, 555, 556, 557, 558, 1135, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 1188, 581,
	582, 564, 565, 583, 584, 1247, 585, 586, 587, 588,
	589, 590, 591, 1203, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 1250, 601, 602,
	603, 604, 1226, 608, 609, 0, 610, 611, 1121, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 1215, 1216, 1217, 1218, 0, 630, 2804, 621,
	622, 623, 624, 1227, 625, 1228, 1145, 626, 627, 628,
	629, 0, 631, 632, 0, 1128, 633, 634, 635, 637,
	638, 636, 639, 1189, 640, 0, 0, 641, 642, 643,
	702, 1212, 1249, 0, 645, 644, 646, 647, 705, 648,
	649, 0, 0, 0, 0, 650, 651, 706, 652, 653,
	654, 1125, 0, 0, 0, 2716, 0, 1167, 1139, 1140,
	1141, 1137, 1138, 1150, 1120, 0, 0, 0, 0, 0,
	0, 1118, 1119, 0, 283, 285, 284, 286, 287, 288,
	289, 1151, 290, 291, 0, 1149, 0, 0, 0, 1191,
	1155, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 1204, 0, 300, 1211, 301, 1210,
	0, 1221, 302, 303, 304, 305, 306, 307, 1157, 1190,
	1122, 308, 1251, 1252, 663, 0, 309, 310, 1197, 0,
	1178, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186,
	336, 337, 338, 339, 340, 1214, 341, 343, 1208, 1207,
	1127, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 1199, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 1133, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	1222, 1223, 374, 1146, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 1206, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 1219, 1220,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 1229, 0, 1156, 395, 0, 396, 397, 398, 399,
	400, 1192, 1193, 1196, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 1234, 411, 1201, 1202, 0, 1162, 0, 412,
	413, 1236, 1194, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 1230, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 1185, 1184, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 1124,
	282, 1243, 483, 484, 485, 1147, 1195, 486, 1209, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 1244, 498, 1245, 1224,
	499, 500, 1134, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 1225, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 1205,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 1135,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 1188, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 1203, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	1250, 601, 602, 603, 604, 1226, 608, 609, 0, 610,
	611, 1121, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 1215, 1216, 1217, 1218, 0,
	630, 0, 621, 622, 623, 624, 1227, 625, 1228, 1145,
	626, 627, 628, 629, 0, 631, 632, 0, 1128, 633,
	634, 635, 637, 638, 636, 639, 1189, 640, 0, 0,
	641, 642, 643, 702, 1212, 1249, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 1125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 0, 0, 0, 1118, 1119, 0, 0, 0, 0,
	0, 0, 0, 0, 1151, 2714, 0, 2713, 1149, 1167,
	1139, 1140, 1141, 1137, 1138, 1150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 0,
	0, 1191, 1155, 0, 0, 0, 292, 293, 1231, 294,
	295, 296, 297, 298, 299, 656, 1204, 0, 300, 1211,
	301, 1210, 0, 1221, 302, 303, 304, 305, 306, 307,
	1157, 1190, 1122, 308, 1251, 1252, 663, 0, 309, 310,
	1197, 0, 1178, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187, 1183,
	1182, 1186, 336, 337, 338, 339, 340, 1214, 341, 343,
	1208, 1207, 1127, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 1199, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	1133, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 1222, 1223, 374, 1146, 280, 0, 0, 0,
	0, 0, 375, 376, 377, 1206, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 1233, 382, 383, 384,
	1219, 1220, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 1229, 0, 1156, 395, 0, 396, 397,
	398, 399, 400, 1192, 1193, 1196, 487, 1235, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 0, 1234, 411, 1201, 1202, 0, 1162,
	0, 412, 413, 1236, 1194, 1237, 414, 415, 416, 1238,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 1230, 1239, 428, 429,
	1240, 0, 430, 431, 432, 433, 434, 435, 438, 1185,
	1184, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	1241, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 1242, 481,
	469, 1124, 282, 1243, 483, 484, 485, 1147, 1195, 486,
	1209, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 1244, 498,
	1245, 1224, 499, 500, 1134, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 1225, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 1205, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 1246, 554, 555, 556, 557,
	558, 1135, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 1188, 581, 582, 564, 565, 583, 584,
	1247, 585, 586, 587, 588, 589, 590, 591, 1203, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 1250, 601, 602, 603, 604, 1226, 608, 609,
	0, 610, 611, 1121, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 1215, 1216, 1217,
	1218, 0, 630, 0, 621, 622, 623, 624, 1227, 625,
	1228, 1145, 626, 627, 628, 629, 0, 631, 632, 0,
	1128, 633, 634, 635, 637, 638, 636, 639, 1189, 640,
	0, 0, 641, 642, 643, 702, 1212, 1249, 0, 645,
	644, 646, 647, 705, 648, 649, 0, 0, 0, 0,
	650, 651, 706, 652, 653, 654, 1125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1120,
	0, 0, 0, 0, 0, 0, 1118, 1119, 0, 0,
	0, 0, 0, 0, 0, 0, 1151, 2711, 0, 2710,
	1149, 1167, 1139, 1140, 1141, 1137, 1138, 1150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 0, 0, 1191, 1155, 0, 0, 0, 292, 293,
	1231, 294, 295, 296, 297, 298, 299, 656, 1204, 0,
	300, 1211, 301, 1210, 0, 1221, 302, 303, 304, 305,
	306, 307, 1157, 1190, 1122, 308, 1251, 1252, 663, 0,
	309, 310, 1197, 0, 1178, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 1232, 333, 334, 335, 1181, 1179, 1180,
	1187, 1183, 1182, 1186, 336, 337, 338, 339, 340, 1214,
	341, 343, 1208, 1207, 1127, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 1199,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 1133, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 1222, 1223, 374, 1146, 280, 0,
	0, 0, 0, 0, 375, 376, 377, 1206, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 1233, 382,
	383, 384, 1219, 1220, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 1229, 0, 1156, 395, 0,
	396, 397, 398, 399, 400, 1192, 1193, 1196, 487, 1235,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 281, 408, 409, 410, 0, 1234, 411, 1201, 1202,
	0, 1162, 0, 412, 413, 1236, 1194, 1237, 414, 415,
	416, 1238, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 1230, 1239,
	428, 429, 1240, 0, 430, 431, 432, 433, 434, 435,
	438, 1185, 1184, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 1241, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	1242, 481, 469, 1124, 282, 1243, 483, 484, 485, 1147,
	1195, 486, 1209, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	1244, 498, 1245, 1224, 499, 500, 1134, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 1225, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 1205, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 1246, 554, 555,
	556, 557, 558, 1135, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 1188, 581, 582, 564, 565,
	583, 584, 1247, 585, 586, 587, 588, 589, 590, 591,
	1203, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 1250, 601, 602, 603, 604, 1226,
	608, 609, 0, 610, 611, 1121, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 1215,
	1216, 1217, 1218, 0, 630, 0, 621, 622, 623, 624,
	1227, 625, 1228, 1145, 626, 627, 628, 629, 0, 631,
	632, 0, 1128, 633, 634, 635, 637, 638, 636, 639,
	1189, 640, 0, 0, 641, 642, 643, 702, 1212, 1249,
	0, 645, 644, 646, 647, 705, 648, 649, 0, 0,
	0, 0, 650, 651, 706, 652, 653, 654, 1125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1120, 0, 0, 0, 0, 0, 0, 1118, 1119,
	0, 0, 0, 0, 0, 0, 0, 0, 1151, 2708,
	0, 2707, 1149, 1167, 1139, 1140, 1141, 1137, 1138, 1150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 1191, 1155, 0, 0, 0,
	292, 293, 1231, 294, 295, 296, 297, 298, 299, 656,
	1204, 0, 300, 1211, 301, 1210, 0, 1221, 302, 303,
	304, 305, 306, 307, 1157, 1190, 1122, 308, 1251, 1252,
	663, 0, 309, 310, 1197, 0, 1178, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 1232, 333, 334, 335, 1181,
	1179, 1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339,
	340, 1214, 341, 343, 1208, 1207, 1127, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 1199, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 1133, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 1222, 1223, 374, 1146,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 1206,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	1233, 382, 383, 384, 1219, 1220, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 1229, 0, 1156,
	395, 0, 396, 397, 398, 399, 400, 1192, 1193, 1196,
	487, 1235, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 1234, 411,
	1201, 1202, 0, 1162, 0, 412, 413, 1236, 1194, 1237,
	414, 415, 416, 1238, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	1230, 1239, 428, 429, 1240, 0, 430, 431, 432, 433,
	434, 435, 438, 1185, 1184, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 1241, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 1242, 481, 469, 1124, 282, 1243, 483, 484,
	485, 1147, 1195, 486, 1209, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 1244, 498, 1245, 1224, 499, 500, 1134, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 1225,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 1205, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 1246,
	554, 555, 556, 557, 558, 1135, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 1188, 581, 582,
	564, 565, 583, 584, 1247, 585, 586, 587, 588, 589,
	590, 591, 1203, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 1250, 601, 602, 603,
	604, 1226, 608, 609, 0, 610, 611, 1121, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 1215, 1216, 1217, 1218, 0, 630, 0, 621, 622,
	623, 624, 1227, 625, 1228, 1145, 626, 627, 628, 629,
	0, 631, 632, 0, 1128, 633, 634, 635, 637, 638,
	636, 639, 1189, 640, 0, 0, 641, 642, 643, 702,
	1212, 1249, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	1125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1120, 0, 0, 0, 0, 0, 0,
	1118, 1119, 0, 0, 0, 0, 0, 0, 0, 0,
	1151, 2705, 0, 1770, 1149, 1167, 1139, 1140, 1141, 1137,
	1138, 1150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 1191, 1155, 0,
	0, 0, 292, 293, 1231, 294, 295, 296, 297, 298,
	299, 656, 1204, 0, 300, 1211, 301, 1210, 0, 1221,
	302, 303, 304, 305, 306, 307, 1157, 1190, 1122, 308,
	1251, 1252, 663, 0, 309, 310, 1197, 0, 1178, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 1232, 333, 334,
	335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337,
	338, 339, 340, 1214, 341, 343, 1208, 1207, 1127, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 1199, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 1133, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 1222, 1223,
	374, 1146, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 1206, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 1233, 382, 383, 384, 1219, 1220, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 1229,
	0, 1156, 395, 0, 396, 397, 398, 399, 400, 1192,
	1193, 1196, 487, 1235, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	1234, 411, 1201, 1202, 0, 1162, 0, 412, 413, 1236,
	1194, 1237, 414, 415, 416, 1238, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 1230, 1239, 428, 429, 1240, 0, 430, 431,
	432, 433, 434, 435, 438, 1185, 1184, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 1241, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 1242, 481, 469, 1124, 282, 1243,
	483, 484, 485, 1147, 1195, 486, 1209, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 1244, 498, 1245, 1224, 499, 500,
	1134, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 1225, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 1205, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 1246, 554, 555, 556, 557, 558, 1135, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 1188,
	581, 582, 564, 565, 583, 584, 1247, 585, 586, 587,
	588, 589, 590, 591, 1203, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 1250, 601,
	602, 603, 604, 1226, 608, 609, 0, 610, 611, 1121,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 1215, 1216, 1217, 1218, 0, 630, 0,
	621, 622, 623, 624, 1227, 625, 1228, 1145, 626, 627,
	628, 629, 0, 631, 632, 0, 1128, 633, 634, 635,
	637, 638, 636, 639, 1189, 640, 0, 0, 641, 642,
	643, 702, 1212, 1249, 0, 645, 644, 646, 647, 705,
	648, 649, 1769, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 1125, 0, 0, 0, 1114, 0, 1167, 1139,
	1140, 1141, 1137, 1138, 1150, 1120, 0, 0, 0, 0,
	0, 0, 1118, 1119, 0, 283, 285, 284, 286, 287,
	288, 289, 1151, 290, 291, 0, 1149, 0, 0, 0,
	1191, 1155, 0, 0, 0, 292, 293, 1231, 294, 295,
	296, 297, 298, 299, 656, 1204, 0, 300, 1211, 301,
	1210, 0, 1221, 302, 303, 304, 305, 306, 307, 1157,
	1190, 1122, 308, 1251, 1252, 663, 0, 309, 310, 1197,
	0, 1178, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	1232, 333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182,
	1186, 336, 337, 338, 339, 340, 1214, 341, 343, 1208,
	1207, 1127, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 1199, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 1133,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 1222, 1223, 374, 1146, 280, 0, 0, 0, 0,
	0, 375, 376, 377, 1206, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 1233, 382, 383, 384, 1219,
	1220, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 1229, 0, 1156, 395, 0, 396, 397, 398,
	399, 400, 1192, 1193, 1196, 487, 1235, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 281, 408,
	409, 410, 0, 1234, 411, 1201, 1202, 0, 1162, 0,
	412, 413, 1236, 1194, 1237, 414, 415, 416, 1238, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 1230, 1239, 428, 429, 1240,
	0, 430, 431, 432, 433, 434, 435, 438, 1185, 1184,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 1241,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 1242, 481, 469,
	1124, 282, 1243, 483, 484, 485, 1147, 1195, 486, 1209,
	488, 489, 0, 0, 490, 0, 491, 1129, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 1244, 498, 1245,
	1224, 499, 500, 1134, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 1225, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	1205, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 1246, 554, 555, 556, 557, 558,
	1135, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 1188, 581, 582, 564, 565, 583, 584, 1247,
	585, 586, 587, 588, 589, 590, 591, 1203, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 1250, 601, 602, 603, 604, 1226, 608, 609, 0,
	610, 611, 1121, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 1215, 1216, 1217, 1218,
	0, 630, 0, 621, 622, 623, 624, 1227, 625, 1228,
	1145, 626, 627, 628, 629, 0, 631, 632, 0, 1128,
	633, 634, 635, 637, 638, 636, 639, 1189, 640, 0,
	0, 641, 642, 643, 702, 1212, 1249, 0, 645, 644,
	646, 647, 705, 648, 649, 0, 0, 0, 0, 650,
	651, 706, 652, 653, 654, 1125, 0, 0, 0, 0,
	0, 1167, 1139, 1140, 1141, 1137, 1138, 1150, 1120, 0,
	0, 0, 0, 0, 0, 1118, 1119, 0, 283, 285,
	284, 286, 287, 288, 289, 1151, 290, 291, 0, 1149,
	0, 0, 0, 1191, 1155, 0, 0, 0, 292, 293,
	1231, 294, 295, 296, 297, 298, 299, 656, 1204, 0,
	300, 1211, 301, 1210, 0, 1221, 302, 303, 304, 305,
	306, 307, 1157, 1190, 1122, 308, 1251, 1252, 663, 0,
	309, 310, 1197, 0, 1178, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 4868, 329, 0,
	330, 331, 332, 1232, 333, 334, 335, 1181, 1179, 1180,
	1187, 1183, 1182, 1186, 336, 337, 338, 339, 340, 1214,
	341, 343, 1208, 1207, 1127, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 1199,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 1133, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 1222, 1223, 374, 1146, 280, 0,
	0, 0, 0, 0, 375, 376, 377, 1206, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 1233, 382,
	383, 384, 1219, 1220, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 1229, 0, 1156, 395, 0,
	396, 397, 398, 399, 400, 1192, 1193, 1196, 487, 1235,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 281, 408, 409, 410, 0, 1234, 411, 1201, 1202,
	0, 1162, 0, 412, 413, 1236, 1194, 1237, 414, 415,
	416, 1238, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 1230, 1239,
	428, 429, 1240, 0, 430, 431, 432, 433, 434, 435,
	438, 1185, 1184, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 1241, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	1242, 481, 469, 1124, 282, 1243, 483, 484, 485, 1147,
	1195, 486, 1209, 488, 489, 0, 0, 490, 0, 491,
	1129, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	1244, 498, 1245, 1224, 499, 500, 1134, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 1225, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 1205, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 1246, 554, 555,
	556, 557, 558, 1135, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 1188, 581, 582, 564, 565,
	583, 584, 1247, 585, 586, 587, 588, 589, 590, 591,
	1203, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 1250, 601, 602, 603, 604, 1226,
	608, 609, 0, 610, 611, 1121, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 1215,
	1216, 1217, 1218, 0, 630, 0, 621, 622, 623, 624,
	1227, 625, 1228, 1145, 626, 627, 628, 629, 0, 631,
	632, 0, 1128, 633, 634, 635, 637, 638, 636, 639,
	1189, 640, 0, 0, 641, 642, 643, 702, 1212, 1249,
	0, 645, 644, 646, 647, 705, 648, 649, 0, 0,
	0, 0, 650, 651, 706, 652, 653, 654, 1125, 0,
	0, 0, 0, 0, 1167, 1139, 1140, 1141, 1137, 1138,
	1150, 1120, 0, 0, 0, 0, 0, 0, 1118, 1119,
	0, 283, 285, 284, 286, 287, 288, 289, 1151, 290,
	291, 0, 1149, 0, 0, 0, 1191, 1155, 0, 0,
	0, 292, 293, 1231, 294, 295, 296, 297, 298, 299,
	656, 1204, 0, 300, 1211, 301, 1210, 0, 1221, 302,
	303, 304, 305, 306, 307, 1157, 1190, 1122, 308, 1251,
	1252, 663, 0, 309, 310, 1197, 0, 1178, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 1232, 333, 334, 335,
	1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337, 338,
	339, 340, 1214, 341, 343, 1208, 1207, 1127, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 1199, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 1133, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 1222, 1223, 374,
	1146, 280, 0, 0, 0, 0, 0, 375, 376, 377,
	1206, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 1233, 382, 383, 384, 1219, 1220, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 1229, 0,
	1156, 395, 0, 396, 397, 398, 399, 400, 1192, 1193,
	1196, 487, 1235, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 2548, 408, 409, 410, 0, 1234,
	411, 1201, 1202, 0, 1162, 0, 412, 413, 1236, 1194,
	1237, 414, 415, 416, 1238, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 1230, 1239, 428, 429, 1240, 0, 430, 431, 432,
	433, 434, 435, 438, 1185, 1184, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 1241, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 1242, 481, 469, 1124, 282, 1243, 483,
	484, 485, 1147, 1195, 486, 1209, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 1244, 498, 1245, 1224, 499, 500, 1134,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	1225, 518, 690, 519, 520, 2547, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 1205, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	1246, 554, 555, 556, 557, 558, 1135, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 1188, 581,
	582, 564, 565, 583, 584, 1247, 585, 586, 587, 588,
	589, 590, 591, 1203, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 1250, 601, 602,
	603, 604, 1226, 608, 609, 0, 610, 611, 1121, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 1215, 1216, 1217, 1218, 0, 630, 0, 621,
	622, 623, 624, 1227, 625, 1228, 1145, 626, 627, 628,
	629, 0, 631, 632, 0, 1128, 633, 634, 635, 637,
	638, 636, 639, 1189, 640, 0, 0, 641, 642, 643,
	702, 1212, 1249, 0, 645, 644, 646, 647, 705, 648,
	649, 0, 0, 0, 0, 650, 651, 706, 652, 653,
	654, 1125, 0, 0, 0, 0, 0, 1167, 1139, 1140,
	1141, 1137, 1138, 1150, 1120, 0, 0, 0, 0, 0,
	0, 1118, 1119, 0, 283, 285, 284, 286, 287, 288,
	289, 1151, 290, 291, 0, 1149, 0, 0, 0, 1191,
	1155, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 1204, 0, 300, 1211, 301, 1210,
	0, 1221, 302, 303, 304, 305, 306, 307, 1157, 1190,
	1122, 308, 1251, 1252, 663, 0, 309, 310, 1197, 0,
	1178, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 4591, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186,
	336, 337, 338, 339, 340, 1214, 341, 343, 1208, 1207,
	1127, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 1199, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 1133, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	1222, 1223, 374, 1146, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 1206, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 1219, 1220,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 1229, 0, 1156, 395, 0, 396, 397, 398, 399,
	400, 1192, 1193, 1196, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 1234, 411, 1201, 1202, 0, 1162, 0, 412,
	413, 1236, 1194, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 1230, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 1185, 1184, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 1124,
	282, 1243, 483, 484, 485, 1147, 1195, 486, 1209, 488,
	489, 0, 0, 490, 0, 491, 1129, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 1244, 498, 1245, 1224,
	499, 500, 1134, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 1225, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 1205,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 1135,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 1188, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 1203, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	1250, 601, 602, 603, 604, 1226, 608, 609, 0, 610,
	611, 1121, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 1215, 1216, 1217, 1218, 0,
	630, 0, 621, 622, 623, 624, 1227, 625, 1228, 1145,
	626, 627, 628, 629, 0, 631, 632, 0, 1128, 633,
	634, 635, 637, 638, 636, 639, 1189, 640, 0, 0,
	641, 642, 643, 702, 1212, 1249, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 1125, 0, 0, 0, 0, 0,
	1167, 1139, 1140, 1141, 1137, 1138, 1150, 1120, 0, 0,
	0, 0, 0, 0, 1118, 1119, 0, 283, 285, 284,
	286, 287, 288, 289, 1151, 290, 291, 0, 1149, 0,
	0, 0, 1191, 1155, 0, 0, 0, 292, 293, 1231,
	294, 295, 296, 297, 298, 299, 656, 1204, 0, 300,
	1211, 301, 1210, 0, 1221, 302, 303, 304, 305, 306,
	307, 1157, 1190, 1122, 308, 1251, 1252, 663, 0, 309,
	310, 1197, 0, 1178, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187,
	1183, 1182, 1186, 336, 337, 338, 339, 340, 1214, 341,
	343, 1208, 1207, 1127, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 1199, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 1133, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 1222, 1223, 374, 1146, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 1206, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 1233, 382, 383,
	384, 1219, 1220, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 1229, 0, 1156, 395, 0, 396,
	397, 398, 399, 400, 1192, 1193, 1196, 487, 1235, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 1234, 411, 1201, 1202, 0,
	1162, 0, 412, 413, 1236, 1194, 1237, 414, 415, 416,
	1238, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 1230, 1239, 428,
	429, 1240, 0, 430, 431, 432, 433, 434, 435, 438,
	1185, 1184, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 1241, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 1242,
	481, 469, 1124, 282, 1243, 483, 484, 485, 1147, 1195,
	486, 1209, 488, 489, 0, 0, 490, 0, 491, 1129,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 1244,
	498, 1245, 1224, 499, 500, 1134, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 1225, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 1205, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 1246, 554, 555, 556,
	557, 558, 1135, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 1188, 581, 582, 564, 565, 583,
	584, 1247, 585, 586, 587, 588, 589, 590, 591, 1203,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 1250, 601, 602, 603, 604, 1226, 608,
	609, 0, 610, 611, 1121, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 1215, 1216,
	1217, 1218, 0, 630, 0, 621, 622, 623, 624, 1227,
	625, 1228, 1145, 626, 627, 628, 629, 0, 631, 632,
	0, 1128, 633, 634, 635, 637, 638, 636, 639, 1189,
	640, 0, 0, 641, 642, 643, 702, 1212, 1249, 0,
	645, 644, 646, 647, 705, 648, 649, 0, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 1125, 0, 0,
	0, 0, 0, 1167, 1139, 1140, 1141, 1137, 1138, 1150,
	1120, 0, 0, 0, 0, 0, 0, 1118, 1119, 0,
	283, 285, 284, 286, 287, 288, 289, 1151, 290, 291,
	0, 1149, 0, 0, 0, 1191, 1155, 0, 0, 0,
	292, 293, 1231, 294, 295, 296, 297, 298, 299, 656,
	1204, 0, 300, 1211, 301, 1210, 0, 1221, 302, 303,
	304, 305, 306, 307, 1157, 1190, 1122, 308, 1251, 1252,
	663, 0, 309, 310, 1197, 0, 1178, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 1232, 333, 334, 335, 1181,
	1179, 1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339,
	340, 1214, 341, 343, 1208, 1207, 1127, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 1199, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 1133, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 1222, 1223, 374, 1146,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 1206,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	1233, 382, 383, 384, 1219, 1220, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 1229, 0, 1156,
	395, 0, 396, 397, 398, 399, 400, 1192, 1193, 1196,
	487, 1235, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 1234, 411,
	1201, 1202, 0, 1162, 0, 412, 413, 1236, 1194, 1237,
	414, 415, 416, 1238, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	1230, 1239, 428, 429, 1240, 0, 430, 431, 432, 433,
	434, 435, 438, 1185, 1184, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 1241, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 1242, 481, 469, 1124, 4164, 1243, 483, 484,
	485, 1147, 1195, 486, 1209, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 1244, 498, 1245, 1224, 499, 500, 1134, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 1225,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 1205, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 1246,
	554, 555, 556, 557, 558, 1135, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 1188, 581, 582,
	564, 565, 583, 584, 1247, 585, 586, 587, 588, 589,
	590, 591, 1203, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 1250, 601, 602, 603,
	604, 1226, 608, 609, 0, 610, 611, 1121, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 1215, 1216, 1217, 1218, 0, 630, 0, 621, 622,
	623, 624, 1227, 625, 1228, 1145, 626, 627, 628, 629,
	0, 631, 632, 0, 1128, 633, 634, 635, 637, 638,
	636, 639, 1189, 640, 0, 0, 641, 642, 643, 702,
	1212, 1249, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	1125, 0, 0, 0, 0, 0, 1167, 1139, 1140, 1141,
	1137, 1138, 1150, 1120, 0, 0, 0, 0, 0, 0,
	1118, 1119, 2002, 283, 285, 284, 286, 287, 288, 289,
	1151, 290, 291, 0, 1149, 0, 0, 0, 1191, 1155,
	0, 0, 0, 292, 293, 1231, 294, 295, 296, 297,
	298, 299, 656, 1204, 0, 300, 1211, 301, 1210, 0,
	1221, 302, 303, 304, 305, 306, 307, 1157, 1190, 1122,
	308, 1251, 1252, 663, 0, 309, 310, 1197, 0, 1178,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 1232, 333,
	334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336,
	337, 338, 339, 340, 1214, 341, 343, 1208, 1207, 1127,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 1199, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 1133, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 1222,
	1223, 374, 1146, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 1206, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 1233, 382, 383, 384, 1219, 1220, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	1229, 0, 1156, 395, 0, 396, 397, 398, 399, 400,
	1192, 1193, 1196, 487, 1235, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 1234, 411, 1201, 1202, 0, 1162, 0, 412, 413,
	1236, 1194, 1237, 414, 415, 416, 1238, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 1230, 1239, 428, 429, 1240, 0, 430,
	431, 432, 433, 434, 435, 438, 1185, 1184, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 1241, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 1242, 481, 469, 1124, 282,
	1243, 483, 484, 485, 1147, 1195, 486, 1209, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 1244, 498, 1245, 1224, 499,
	500, 1134, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 1225, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 1205, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 1246, 554, 555, 556, 557, 558, 1135, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	1188, 581, 582, 564, 565, 583, 584, 1247, 585, 586,
	587, 588, 589, 590, 591, 1203, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 1250,
	601, 602, 603, 604, 1226, 608, 609, 0, 610, 611,
	1121, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 1215, 1216, 1217, 1218, 0, 630,
	0, 621, 622, 623, 624, 1227, 625, 1228, 1145, 626,
	627, 628, 629, 0, 631, 632, 0, 1128, 633, 634,
	635, 637, 638, 636, 639, 1189, 640, 0, 0, 641,
	642, 643, 702, 1212, 1249, 3850, 645, 644, 646, 647,
	705, 648, 649, 0, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 1125, 0, 0, 0, 0, 0, 1167,
	1139, 1140, 1141, 1137, 1138, 1150, 1120, 0, 0, 0,
	0, 0, 0, 1118, 1119, 0, 283, 285, 284, 286,
	287, 288, 289, 1151, 290, 291, 0, 1149, 0, 0,
	0, 1191, 1155, 0, 0, 0, 292, 293, 1231, 294,
	295, 296, 297, 298, 299, 656, 1204, 0, 300, 1211,
	301, 1210, 0, 1221, 302, 303, 304, 305, 306, 307,
	1157, 1190, 1122, 308, 1251, 1252, 663, 0, 309, 310,
	1197, 0, 1178, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187, 1183,
	1182, 1186, 336, 337, 338, 339, 340, 1214, 341, 343,
	1208, 1207, 1127, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 1199, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	1133, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 1222, 1223, 374, 1146, 280, 0, 0, 0,
	0, 0, 375, 376, 377, 1206, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 1233, 382, 383, 384,
	1219, 1220, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 1229, 0, 1156, 395, 0, 396, 397,
	398, 399, 400, 1192, 1193, 1196, 487, 1235, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 0, 1234, 411, 1201, 1202, 0, 1162,
	0, 412, 413, 1236, 1194, 1237, 414, 415, 416, 1238,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 1230, 1239, 428, 429,
	1240, 0, 430, 431, 432, 433, 434, 435, 438, 1185,
	1184, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	1241, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 1242, 481,
	469, 1124, 282, 1243, 483, 484, 485, 1147, 1195, 486,
	1209, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 1244, 498,
	1245, 1224, 499, 500, 1134, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 1225, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 1205, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 1246, 554, 555, 556, 557,
	558, 1135, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 1188, 581, 582, 564, 565, 583, 584,
	1247, 585, 586, 587, 588, 589, 590, 591, 1203, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 1250, 601, 602, 603, 604, 1226, 608, 609,
	0, 610, 611, 1121, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 1215, 1216, 1217,
	1218, 0, 630, 0, 621, 622, 623, 624, 1227, 625,
	1228, 1145, 626, 627, 628, 629, 0, 631, 632, 0,
	1128, 633, 634, 635, 637, 638, 636, 639, 1189, 640,
	0, 0, 641, 642, 643, 702, 1212, 1249, 0, 645,
	644, 646, 647, 705, 648, 649, 0, 0, 0, 0,
	650, 651, 706, 652, 653, 654, 1125, 0, 0, 0,
	0, 0, 1167, 1139, 1140, 1141, 1137, 1138, 1150, 1120,
	0, 0, 0, 0, 0, 0, 1118, 1119, 2002, 283,
	285, 284, 286, 287, 288, 289, 1151, 290, 291, 0,
	1149, 0, 0, 0, 1191, 1155, 0, 0, 0, 292,
	293, 1231, 294, 295, 296, 297, 298, 299, 656, 1204,
	0, 300, 1211, 301, 1210, 0, 1221, 302, 303, 304,
	305, 306, 307, 1157, 1190, 1122, 308, 1251, 1252, 663,
	0, 309, 310, 1197, 0, 1178, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 1232, 333, 334, 335, 1181, 1179,
	1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339, 340,
	1214, 341, 343, 1208, 1207, 1127, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	1199, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 1133, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 1222, 1223, 374, 1146, 280,
	0, 0, 0, 0, 0, 375, 376, 377, 1206, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 2807, 1233,
	382, 383, 384, 1219, 1220, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 1229, 0, 1156, 395,
	0, 396, 397, 398, 399, 400, 1192, 1193, 1196, 487,
	1235, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 281, 408, 409, 410, 0, 1234, 411, 1201,
	1202, 0, 1162, 0, 412, 413, 1236, 1194, 1237, 414,
	415, 416, 1238, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 1230,
	1239, 428, 429, 1240, 0, 430, 431, 432, 433, 434,
	435, 438, 1185, 1184, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 1241, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 1242, 481, 469, 1124, 282, 1243, 483, 484, 485,
	1147, 1195, 486, 1209, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 1244, 498, 1245, 1224, 499, 500, 1134, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 1225, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 1205, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 1246, 554,
	555, 556, 557, 558, 1135, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 1188, 581, 582, 564,
	565, 583, 584, 1247, 585, 586, 587, 588, 589, 590,
	591, 1203, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 1250, 601, 602, 603, 604,
	1226, 608, 609, 0, 610, 611, 1121, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	1215, 1216, 1217, 1218, 0, 630, 0, 621, 622, 623,
	624, 1227, 625, 1228, 1145, 626, 627, 628, 629, 0,
	631, 632, 0, 1128, 633, 634, 635, 637, 638, 636,
	639, 1189, 640, 0, 0, 641, 642, 643, 702, 1212,
	1249, 0, 645, 644, 646, 647, 705, 648, 649, 0,
	0, 0, 0, 650, 651, 706, 652, 653, 654, 1125,
	0, 0, 0, 0, 0, 1167, 1139, 1140, 1141, 1137,
	1138, 1150, 1120, 0, 0, 0, 0, 0, 0, 1118,
	1119, 0, 283, 285, 284, 286, 287, 288, 289, 1151,
	290, 291, 0, 1149, 0, 0, 0, 1191, 1155, 0,
	0, 0, 292, 293, 1231, 294, 295, 296, 297, 298,
	299, 656, 1204, 0, 300, 1211, 301, 1210, 0, 1221,
	302, 303, 304, 305, 306, 307, 1157, 1190, 1122, 308,
	1251, 1252, 663, 0, 309, 310, 1197, 0, 1178, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 1232, 333, 334,
	335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337,
	338, 339, 340, 1214, 341, 343, 1208, 1207, 1127, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 1199, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 1133, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 1222, 1223,
	374, 1146, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 1206, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 1233, 382, 383, 384, 1219, 1220, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 1229,
	0, 1156, 395, 0, 396, 397, 398, 399, 400, 1192,
	1193, 1196, 487, 1235, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	1234, 411, 1201, 1202, 0, 1162, 0, 412, 413, 1236,
	1194, 1237, 414, 415, 416, 1238, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 1230, 1239, 428, 429, 1240, 0, 430, 431,
	432, 433, 434, 435, 438, 1185, 1184, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 1241, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 1242, 481, 469, 1124, 282, 1243,
	483, 484, 485, 1147, 1195, 486, 1209, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 1244, 498, 1245, 1224, 499, 500,
	1134, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 1225, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 1205, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 1246, 554, 555, 556, 557, 558, 1135, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 1188,
	581, 582, 564, 565, 583, 584, 1247, 585, 586, 587,
	588, 589, 590, 591, 1203, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 1250, 601,
	602, 603, 604, 1226, 608, 609, 0, 610, 611, 1121,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 1215, 1216, 1217, 1218, 0, 630, 0,
	621, 622, 623, 624, 1227, 625, 1228, 1145, 626, 627,
	628, 629, 0, 631, 632, 0, 1128, 633, 634, 635,
	637, 638, 636, 639, 1189, 640, 0, 0, 641, 642,
	643, 702, 1212, 1249, 0, 645, 644, 646, 647, 705,
	648, 649, 0, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 1125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1120, 0, 0, 0, 0,
	0, 0, 1118, 1119, 0, 0, 0, 0, 0, 0,
	0, 0, 1151, 1931, 0, 2812, 1149, 1167, 1139, 1140,
	1141, 1137, 1138, 1150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 1191,
	1155, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 1204, 0, 300, 1211, 301, 1210,
	0, 1221, 302, 303, 304, 305, 306, 307, 1157, 1190,
	1122, 308, 1251, 1252, 663, 0, 309, 310, 1197, 0,
	1178, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186,
	336, 337, 338, 339, 340, 1214, 341, 343, 1208, 1207,
	1127, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 1199, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 1133, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	1222, 1223, 374, 1146, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 1206, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 1219, 1220,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 1229, 0, 1156, 395, 0, 396, 397, 398, 399,
	400, 1192, 1193, 1196, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 1234, 411, 1201, 1202, 0, 1162, 0, 412,
	413, 1236, 1194, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 1230, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 1185, 1184, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 1124,
	282, 1243, 483, 484, 485, 1147, 1195, 486, 1209, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 1244, 498, 1245, 1224,
	499, 500, 1134, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 1225, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 1205,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 1135,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 1188, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 1203, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	1250, 601, 602, 603, 604, 1226, 608, 609, 0, 610,
	611, 1121, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 1215, 1216, 1217, 1218, 0,
	630, 0, 621, 622, 623, 624, 1227, 625, 1228, 1145,
	626, 627, 628, 629, 0, 631, 632, 0, 1128, 633,
	634, 635, 637, 638, 636, 639, 1189, 640, 0, 0,
	641, 642, 643, 702, 1212, 1249, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 1125, 0, 0, 0, 2810, 0,
	1167, 1139, 1140, 1141, 1137, 1138, 1150, 1120, 0, 0,
	0, 0, 0, 0, 1118, 1119, 0, 283, 285, 284,
	286, 287, 288, 289, 1151, 290, 291, 0, 1149, 0,
	0, 0, 1191, 1155, 0, 0, 0, 292, 293, 1231,
	294, 295, 296, 297, 298, 299, 656, 1204, 0, 300,
	1211, 301, 1210, 0, 1221, 302, 303, 304, 305, 306,
	307, 1157, 1190, 1122, 308, 1251, 1252, 663, 0, 309,
	310, 1197, 0, 1178, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187,
	1183, 1182, 1186, 336, 337, 338, 339, 340, 1214, 341,
	343, 1208, 1207, 1127, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 1199, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 1133, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 1222, 1223, 374, 1146, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 1206, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 1233, 382, 383,
	384, 1219, 1220, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 1229, 0, 1156, 395, 0, 396,
	397, 398, 399, 400, 1192, 1193, 1196, 487, 1235, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 1234, 411, 1201, 1202, 0,
	1162, 0, 412, 413, 1236, 1194, 1237, 414, 415, 416,
	1238, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 1230, 1239, 428,
	429, 1240, 0, 430, 431, 432, 433, 434, 435, 438,
	1185, 1184, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 1241, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 1242,
	481, 469, 1124, 282, 1243, 483, 484, 485, 1147, 1195,
	486, 1209, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 1244,
	498, 1245, 1224, 499, 500, 1134, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 1225, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 1205, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 1246, 554, 555, 556,
	557, 558, 1135, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 1188, 581, 582, 564, 565, 583,
	584, 1247, 585, 586, 587, 588, 589, 590, 591, 1203,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 1250, 601, 602, 603, 604, 1226, 608,
	609, 0, 610, 611, 1121, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 1215, 1216,
	1217, 1218, 0, 630, 0, 621, 622, 623, 624, 1227,
	625, 1228, 1145, 626, 627, 628, 629, 0, 631, 632,
	0, 1128, 633, 634, 635, 637, 638, 636, 639, 1189,
	640, 0, 0, 641, 642, 643, 702, 1212, 1249, 0,
	645, 644, 646, 647, 705, 648, 649, 0, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 1125, 0, 0,
	0, 2798, 0, 1167, 1139, 1140, 1141, 1137, 1138, 1150,
	1120, 0, 0, 0, 0, 0, 0, 1118, 1119, 0,
	283, 285, 284, 286, 287, 288, 289, 1151, 290, 291,
	0, 1149, 0, 0, 0, 1191, 1155, 0, 0, 0,
	292, 293, 1231, 294, 295, 296, 297, 298, 299, 656,
	1204, 0, 300, 1211, 301, 1210, 0, 1221, 302, 303,
	304, 305, 306, 307, 1157, 1190, 1122, 308, 1251, 1252,
	663, 0, 309, 310, 1197, 0, 1178, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 1232, 333, 334, 335, 1181,
	1179, 1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339,
	340, 1214, 341, 343, 1208, 1207, 1127, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 1199, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 1133, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 1222, 1223, 374, 1146,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 1206,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	1233, 382, 383, 384, 1219, 1220, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 1229, 0, 1156,
	395, 0, 396, 397, 398, 399, 400, 1192, 1193, 1196,
	487, 1235, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 1234, 411,
	1201, 1202, 0, 1162, 0, 412, 413, 1236, 1194, 1237,
	414, 415, 416, 1238, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	1230, 1239, 428, 429, 1240, 0, 430, 431, 432, 433,
	434, 435, 438, 1185, 1184, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 1241, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 1242, 481, 469, 1124, 282, 1243, 483, 484,
	485, 1147, 1195, 486, 1209, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 1244, 498, 1245, 1224, 499, 500, 1134, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 1225,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 1205, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 1246,
	554, 555, 556, 557, 558, 1135, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 1188, 581, 582,
	564, 565, 583, 584, 1247, 585, 586, 587, 588, 589,
	590, 591, 1203, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 1250, 601, 602, 603,
	604, 1226, 608, 609, 0, 610, 611, 1121, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 1215, 1216, 1217, 1218, 0, 630, 0, 621, 622,
	623, 624, 1227, 625, 1228, 1145, 626, 627, 628, 629,
	0, 631, 632, 0, 1128, 633, 634, 635, 637, 638,
	636, 639, 1189, 640, 0, 0, 641, 642, 643, 702,
	1212, 1249, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	1125, 0, 0, 0, 2786, 0, 1167, 1139, 1140, 1141,
	1137, 1138, 1150, 1120, 0, 0, 0, 0, 0, 0,
	1118, 1119, 0, 283, 285, 284, 286, 287, 288, 289,
	1151, 290, 291, 0, 1149, 0, 0, 0, 1191, 1155,
	0, 0, 0, 292, 293, 1231, 294, 295, 296, 297,
	298, 299, 656, 1204, 0, 300, 1211, 301, 1210, 0,
	1221, 302, 303, 304, 305, 306, 307, 1157, 1190, 1122,
	308, 1251, 1252, 663, 0, 309, 310, 1197, 0, 1178,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 1232, 333,
	334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336,
	337, 338, 339, 340, 1214, 341, 343, 1208, 1207, 1127,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 1199, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 1133, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 1222,
	1223, 374, 1146, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 1206, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 1233, 382, 383, 384, 1219, 1220, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	1229, 0, 1156, 395, 0, 396, 397, 398, 399, 400,
	1192, 1193, 1196, 487, 1235, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 1234, 411, 1201, 1202, 0, 1162, 0, 412, 413,
	1236, 1194, 1237, 414, 415, 416, 1238, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 1230, 1239, 428, 429, 1240, 0, 430,
	431, 432, 433, 434, 435, 438, 1185, 1184, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 1241, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 1242, 481, 469, 1124, 282,
	1243, 483, 484, 485, 1147, 1195, 486, 1209, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 1244, 498, 1245, 1224, 499,
	500, 1134, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 1225, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 1205, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 1246, 554, 555, 556, 557, 558, 1135, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	1188, 581, 582, 564, 565, 583, 584, 1247, 585, 586,
	587, 588, 589, 590, 591, 1203, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 1250,
	601, 602, 603, 604, 1226, 608, 609, 0, 610, 611,
	1121, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 1215, 1216, 1217, 1218, 0, 630,
	0, 621, 622, 623, 624, 1227, 625, 1228, 1145, 626,
	627, 628, 629, 0, 631, 632, 0, 1128, 633, 634,
	635, 637, 638, 636, 639, 1189, 640, 0, 0, 641,
	642, 643, 702, 1212, 1249, 0, 645, 644, 646, 647,
	705, 648, 649, 0, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 1125, 0, 0, 0, 2784, 0, 2775,
	2782, 1140, 1141, 1137, 1138, 1150, 1120, 0, 0, 0,
	0, 0, 0, 1118, 1119, 0, 283, 285, 284, 286,
	287, 288, 289, 1151, 290, 291, 0, 1149, 0, 0,
	0, 1191, 1155, 0, 0, 0, 292, 293, 1231, 294,
	295, 296, 297, 298, 299, 656, 1204, 0, 300, 1211,
	301, 1210, 0, 1221, 302, 303, 304, 305, 306, 307,
	1157, 1190, 1122, 308, 1251, 1252, 663, 0, 309, 310,
	1197, 0, 1178, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187, 1183,
	1182, 1186, 336, 337, 338, 339, 340, 1214, 2778, 343,
	1208, 1207, 1127, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 1199, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	1133, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 1222, 1223, 374, 1146, 280, 0, 0, 0,
	0, 0, 375, 376, 377, 1206, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 1233, 382, 383, 384,
	1219, 1220, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 1229, 0, 1156, 395, 0, 396, 397,
	398, 2779, 400, 1192, 1193, 1196, 487, 1235, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 0, 1234, 411, 1201, 1202, 0, 1162,
	0, 412, 413, 1236, 1194, 1237, 414, 415, 416, 1238,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 1230, 1239, 428, 429,
	1240, 0, 430, 431, 432, 433, 434, 435, 438, 1185,
	1184, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 2780, 448, 2777, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	1241, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 1242, 481,
	469, 1124, 282, 1243, 483, 484, 485, 1147, 1195, 486,
	1209, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 1244, 498,
	1245, 1224, 499, 500, 1134, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 1225, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 1205, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 1246, 554, 555, 556, 557,
	558, 1135, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 2781, 0, 576, 577, 575,
	578, 579, 580, 1188, 581, 582, 564, 565, 583, 584,
	1247, 585, 586, 587, 588, 589, 590, 591, 1203, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 1250, 601, 602, 603, 604, 1226, 608, 609,
	0, 610, 611, 1121, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 1215, 1216, 1217,
	1218, 0, 630, 0, 621, 622, 623, 624, 1227, 625,
	1228, 1145, 626, 627, 628, 629, 0, 631, 632, 0,
	1128, 633, 634, 635, 637, 638, 636, 639, 1189, 640,
	0, 0, 641, 642, 643, 702, 1212, 1249, 0, 645,
	644, 646, 647, 705, 648, 649, 0, 0, 0, 0,
	650, 651, 706, 652, 2776, 654, 1125, 0, 0, 0,
	2772, 0, 2775, 2782, 1140, 1141, 1137, 1138, 1150, 1120,
	0, 0, 0, 0, 0, 0, 1118, 1119, 0, 283,
	285, 284, 286, 287, 288, 289, 1151, 290, 291, 0,
	1149, 0, 0, 0, 1191, 1155, 0, 0, 0, 292,
	293, 1231, 294, 295, 296, 297, 298, 299, 656, 1204,
	0, 300, 1211, 301, 1210, 0, 1221, 302, 303, 304,
	305, 306, 307, 1157, 1190, 1122, 308, 1251, 1252, 663,
	0, 309, 310, 1197, 0, 1178, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 1232, 333, 334, 335, 1181, 1179,
	1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339, 340,
	1214, 2778, 343, 1208, 1207, 1127, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	1199, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 1133, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 1222, 1223, 374, 1146, 280,
	0, 0, 0, 0, 0, 375, 376, 377, 1206, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 1233,
	382, 383, 384, 1219, 1220, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 1229, 0, 1156, 395,
	0, 396, 397, 398, 2779, 400, 1192, 1193, 1196, 487,
	1235, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 281, 408, 409, 410, 0, 1234, 411, 1201,
	1202, 0, 1162, 0, 412, 413, 1236, 1194, 1237, 414,
	415, 416, 1238, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 1230,
	1239, 428, 429, 1240, 0, 430, 431, 432, 433, 434,
	435, 438, 1185, 1184, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 2780, 448, 2777, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 1241, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 1242, 481, 469, 1124, 282, 1243, 483, 484, 485,
	1147, 1195, 486, 1209, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 1244, 498, 1245, 1224, 499, 500, 1134, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 1225, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 1205, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 1246, 554,
	555, 556, 557, 558, 1135, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 2781, 0,
	576, 577, 575, 578, 579, 580, 1188, 581, 582, 564,
	565, 583, 584, 1247, 585, 586, 587, 588, 589, 590,
	591, 1203, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 1250, 601, 602, 603, 604,
	1226, 608, 609, 0, 610, 611, 1121, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	1215, 1216, 1217, 1218, 0, 630, 0, 621, 622, 623,
	624, 1227, 625, 1228, 1145, 626, 627, 628, 629, 0,
	631, 632, 0, 1128, 633, 634, 635, 637, 638, 636,
	639, 1189, 640, 0, 0, 641, 642, 643, 702, 1212,
	1249, 0, 645, 644, 646, 647, 705, 648, 649, 0,
	0, 0, 0, 650, 651, 706, 652, 2776, 654, 1125,
	0, 0, 0, 0, 0, 1167, 1139, 1140, 1141, 1137,
	1138, 1150, 1120, 0, 0, 0, 0, 0, 0, 1118,
	1119, 0, 283, 285, 284, 286, 287, 288, 289, 1151,
	290, 291, 0, 1149, 0, 0, 0, 1191, 1155, 0,
	0, 0, 292, 293, 1231, 294, 295, 296, 297, 298,
	299, 656, 1204, 0, 300, 1211, 301, 1210, 0, 1221,
	302, 303, 304, 305, 306, 307, 1157, 1190, 1122, 308,
	1251, 1252, 663, 0, 309, 310, 1197, 0, 1178, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 1232, 333, 334,
	335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337,
	338, 339, 340, 1214, 341, 343, 1208, 1207, 1127, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 1199, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 1133, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 1222, 1223,
	374, 1146, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 1206, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 1233, 382, 383, 384, 1219, 1220, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 1229,
	0, 1156, 395, 0, 396, 397, 398, 399, 400, 1192,
	1193, 1196, 487, 1235, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	1234, 411, 1201, 1202, 0, 1162, 0, 412, 413, 1236,
	1194, 1237, 414, 415, 416, 1238, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 1230, 1239, 428, 429, 1240, 0, 430, 431,
	432, 433, 434, 435, 438, 1185, 1184, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 1241, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 1242, 481, 469, 1124, 282, 1243,
	483, 484, 485, 1147, 1195, 486, 1209, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 1244, 498, 1245, 1224, 499, 500,
	1134, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 1225, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 1205, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 1246, 554, 555, 556, 557, 558, 1135, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 1188,
	581, 582, 564, 565, 583, 584, 1247, 585, 586, 587,
	588, 589, 590, 591, 1203, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 1250, 601,
	602, 603, 604, 1226, 608, 609, 0, 610, 611, 1121,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 1215, 1216, 1217, 1218, 0, 630, 0,
	621, 622, 623, 624, 1227, 625, 1228, 1145, 626, 627,
	628, 629, 0, 631, 632, 0, 1128, 633, 634, 635,
	637, 638, 636, 639, 1189, 640, 0, 0, 641, 642,
	643, 702, 1212, 1249, 0, 645, 644, 646, 647, 705,
	648, 649, 0, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 1125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1120, 0, 0, 0, 0,
	0, 0, 1118, 1119, 0, 0, 0, 0, 0, 0,
	1939, 0, 1151, 0, 0, 0, 1149, 1167, 1139, 1140,
	1141, 1137, 1138, 1150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 2527, 290, 291, 0, 0, 0, 0, 0, 1191,
	1155, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 1204, 0, 300, 1211, 301, 1210,
	0, 1221, 302, 303, 304, 305, 306, 307, 1157, 1190,
	1122, 308, 1251, 1252, 663, 0, 309, 310, 1197, 0,
	1178, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186,
	336, 337, 338, 339, 340, 1214, 341, 343, 1208, 1207,
	1127, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 1199, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 1133, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	1222, 1223, 374, 1146, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 1206, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 1219, 1220,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 1229, 0, 1156, 395, 0, 396, 397, 398, 399,
	400, 1192, 1193, 1196, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 1234, 411, 1201, 1202, 0, 1162, 0, 412,
	413, 1236, 1194, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 1230, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 1185, 1184, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 1124,
	282, 1243, 483, 484, 485, 1147, 1195, 486, 1209, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 1244, 498, 1245, 1224,
	499, 500, 1134, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 1225, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 1205,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 1135,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 1188, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 1203, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	1250, 601, 602, 603, 604, 1226, 608, 609, 0, 610,
	611, 1121, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 1215, 1216, 1217, 1218, 0,
	630, 0, 621, 622, 623, 624, 1227, 625, 1228, 1145,
	626, 627, 628, 629, 0, 631, 632, 0, 1128, 633,
	634, 635, 637, 638, 636, 639, 1189, 640, 0, 0,
	641, 642, 643, 702, 1212, 1249, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 1125, 0, 0, 0, 2489, 0,
	1167, 1139, 1140, 1141, 1137, 1138, 1150, 1120, 0, 0,
	0, 0, 0, 0, 1118, 1119, 0, 283, 285, 284,
	286, 287, 288, 289, 1151, 290, 291, 0, 1149, 0,
	0, 0, 1191, 1155, 0, 0, 0, 292, 293, 1231,
	294, 295, 296, 297, 298, 299, 656, 1204, 0, 300,
	1211, 301, 1210, 0, 1221, 302, 303, 304, 305, 306,
	307, 1157, 1190, 1122, 308, 1251, 1252, 663, 0, 309,
	310, 1197, 0, 1178, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187,
	1183, 1182, 1186, 336, 337, 338, 339, 340, 1214, 341,
	343, 1208, 1207, 1127, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 1199, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 1133, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 1222, 1223, 374, 1146, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 1206, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 1233, 382, 383,
	384, 1219, 1220, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 1229, 0, 1156, 395, 0, 396,
	397, 398, 399, 400, 1192, 1193, 1196, 487, 1235, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 1234, 411, 1201, 1202, 0,
	1162, 0, 412, 413, 1236, 1194, 1237, 414, 415, 416,
	1238, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 1230, 1239, 428,
	429, 1240, 0, 430, 431, 432, 433, 434, 435, 438,
	1185, 1184, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 1241, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 1242,
	481, 469, 1124, 282, 1243, 483, 484, 485, 1147, 1195,
	486, 1209, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 1244,
	498, 1245, 1224, 499, 500, 1134, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 1225, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 1205, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 1246, 554, 555, 556,
	557, 558, 1135, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 1188, 581, 582, 564, 565, 583,
	584, 1247, 585, 586, 587, 588, 589, 590, 591, 1203,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 1250, 601, 602, 603, 604, 1226, 608,
	609, 0, 610, 611, 1121, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 1215, 1216,
	1217, 1218, 0, 630, 0, 621, 622, 623, 624, 1227,
	625, 1228, 1145, 626, 627, 628, 629, 0, 631, 632,
	0, 1128, 633, 634, 635, 637, 638, 636, 639, 1189,
	640, 0, 0, 641, 642, 643, 702, 1212, 1249, 0,
	645, 644, 646, 647, 705, 648, 649, 0, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 1125, 0, 0,
	0, 2461, 0, 1167, 1139, 1140, 1141, 1137, 1138, 1150,
	1120, 0, 0, 0, 0, 0, 0, 1118, 1119, 0,
	283, 285, 284, 286, 287, 288, 289, 1151, 290, 291,
	0, 1149, 0, 0, 0, 1191, 1155, 0, 0, 0,
	292, 293, 1231, 294, 295, 296, 297, 298, 299, 656,
	1204, 0, 300, 1211, 301, 1210, 0, 1221, 302, 303,
	304, 305, 306, 307, 1157, 1190, 1122, 308, 1251, 1252,
	663, 0, 309, 310, 1197, 0, 1178, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 1232, 333, 334, 335, 1181,
	1179, 1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339,
	340, 1214, 341, 343, 1208, 1207, 1127, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 1199, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 1133, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 1222, 1223, 374, 1146,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 1206,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	1233, 382, 383, 384, 1219, 1220, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 1229, 0, 1156,
	395, 0, 396, 397, 398, 399, 400, 1192, 1193, 1196,
	487, 1235, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 1234, 411,
	1201, 1202, 0, 1162, 0, 412, 413, 1236, 1194, 1237,
	414, 415, 416, 1238, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	1230, 1239, 428, 429, 1240, 0, 430, 431, 432, 433,
	434, 435, 438, 1185, 1184, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 1241, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 1242, 481, 469, 1124, 282, 1243, 483, 484,
	485, 1147, 1195, 486, 1209, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 1244, 498, 1245, 1224, 499, 500, 1134, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 1225,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 1205, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 1246,
	554, 555, 556, 557, 558, 1135, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 1188, 581, 582,
	564, 565, 583, 584, 1247, 585, 586, 587, 588, 589,
	590, 591, 1203, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 1250, 601, 602, 603,
	604, 1226, 608, 609, 0, 610, 611, 1121, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 1215, 1216, 1217, 1218, 0, 630, 0, 621, 622,
	623, 624, 1227, 625, 1228, 1145, 626, 627, 628, 629,
	0, 631, 632, 0, 1128, 633, 634, 635, 637, 638,
	636, 639, 1189, 640, 0, 0, 641, 642, 643, 702,
	1212, 1249, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	1125, 0, 0, 0, 1775, 0, 1167, 1139, 1140, 1141,
	1137, 1138, 1150, 1120, 0, 0, 0, 0, 0, 0,
	1118, 1119, 0, 283, 285, 284, 286, 287, 288, 289,
	1151, 290, 291, 0, 1149, 0, 0, 0, 1191, 1155,
	0, 0, 0, 292, 293, 1231, 294, 295, 296, 297,
	298, 299, 656, 1204, 0, 300, 1211, 301, 1210, 0,
	1221, 302, 303, 304, 305, 306, 307, 1157, 1190, 1122,
	308, 1251, 1252, 663, 0, 309, 310, 1197, 0, 1178,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 1232, 333,
	334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336,
	337, 338, 339, 340, 1214, 341, 343, 1208, 1207, 1127,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 1199, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 1133, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 1222,
	1223, 374, 1146, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 1206, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 1233, 382, 383, 384, 1219, 1220, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	1229, 0, 1156, 395, 0, 396, 397, 398, 399, 400,
	1192, 1193, 1196, 487, 1235, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 1234, 411, 1201, 1202, 0, 1162, 0, 412, 413,
	1236, 1194, 1237, 414, 415, 416, 1238, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 1230, 1239, 428, 429, 1240, 0, 430,
	431, 432, 433, 434, 435, 438, 1185, 1184, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 1241, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 1242, 481, 469, 1124, 282,
	1243, 483, 484, 485, 1147, 1195, 486, 1209, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 1244, 498, 1245, 1224, 499,
	500, 1134, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 1225, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 1205, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 1246, 554, 555, 556, 557, 558, 1135, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	1188, 581, 582, 564, 565, 583, 584, 1247, 585, 586,
	587, 588, 589, 590, 591, 1203, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 1250,
	601, 602, 603, 604, 1226, 608, 609, 0, 610, 611,
	1121, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 1215, 1216, 1217, 1218, 0, 630,
	0, 621, 622, 623, 624, 1227, 625, 1228, 1145, 626,
	627, 628, 629, 0, 631, 632, 0, 1128, 633, 634,
	635, 637, 638, 636, 639, 1189, 640, 0, 0, 641,
	642, 643, 702, 1212, 1249, 0, 645, 644, 646, 647,
	705, 648, 649, 0, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 1125, 0, 0, 0, 1704, 0, 1167,
	1139, 1140, 1141, 1137, 1138, 1150, 1120, 0, 0, 0,
	0, 0, 0, 1118, 1119, 0, 283, 285, 284, 286,
	287, 288, 289, 1151, 290, 291, 0, 1149, 0, 0,
	0, 1191, 1155, 0, 0, 0, 292, 293, 1231, 294,
	295, 296, 297, 298, 299, 656, 1204, 0, 300, 1211,
	301, 1210, 0, 1221, 302, 303, 304, 305, 306, 307,
	1157, 1190, 1122, 308, 1251, 1252, 663, 0, 309, 310,
	1197, 0, 1178, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187, 1183,
	1182, 1186, 336, 337, 338, 339, 340, 1214, 341, 343,
	1208, 1207, 1127, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 1199, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	1133, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 1222, 1223, 374, 1146, 280, 0, 0, 0,
	0, 0, 375, 376, 377, 1206, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 1233, 382, 383, 384,
	1219, 1220, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 1229, 0, 1156, 395, 0, 396, 397,
	398, 399, 400, 1192, 1193, 1196, 487, 1235, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 0, 1234, 411, 1201, 1202, 0, 1162,
	0, 412, 413, 1236, 1194, 1237, 414, 415, 416, 1238,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 1230, 1239, 428, 429,
	1240, 0, 430, 431, 432, 433, 434, 435, 438, 1185,
	1184, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	1241, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 1242, 481,
	469, 1124, 282, 1243, 483, 484, 485, 1147, 1195, 486,
	1209, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 1244, 498,
	1245, 1224, 499, 500, 1134, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 1225, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 1205, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 1246, 554, 555, 556, 557,
	558, 1135, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 1188, 581, 582, 564, 565, 583, 584,
	1247, 585, 586, 587, 588, 589, 590, 591, 1203, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 1250, 601, 602, 603, 604, 1226, 608, 609,
	0, 610, 611, 1121, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 1215, 1216, 1217,
	1218, 0, 630, 0, 621, 622, 623, 624, 1227, 625,
	1228, 1145, 626, 627, 628, 629, 0, 631, 632, 0,
	1128, 633, 634, 635, 637, 638, 636, 639, 1189, 640,
	0, 0, 641, 642, 643, 702, 1212, 1249, 0, 645,
	644, 646, 647, 705, 648, 649, 0, 0, 0, 0,
	650, 651, 706, 652, 653, 654, 1125, 0, 0, 0,
	1699, 0, 1167, 1139, 1140, 1141, 1137, 1138, 1150, 1120,
	0, 0, 0, 0, 0, 0, 1118, 1119, 0, 283,
	285, 284, 286, 287, 288, 289, 1151, 290, 291, 0,
	1149, 0, 0, 0, 1191, 1155, 0, 0, 0, 292,
	293, 1231, 294, 295, 296, 297, 298, 299, 656, 1204,
	0, 300, 1211, 301, 1210, 0, 1221, 302, 303, 304,
	305, 306, 307, 1157, 1190, 1122, 308, 1251, 1252, 663,
	0, 309, 310, 1197, 0, 1178, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 1232, 333, 334, 335, 1181, 1179,
	1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339, 340,
	1214, 341, 343, 1208, 1207, 1127, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	1199, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 1133, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 1222, 1223, 374, 1146, 280,
	0, 0, 0, 0, 0, 375, 376, 377, 1206, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 1233,
	382, 383, 384, 1219, 1220, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 1229, 0, 1156, 395,
	0, 396, 397, 398, 399, 400, 1192, 1193, 1196, 487,
	1235, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 281, 408, 409, 410, 0, 1234, 411, 1201,
	1202, 0, 1162, 0, 412, 413, 1236, 1194, 1237, 414,
	415, 416, 1238, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 1230,
	1239, 428, 429, 1240, 0, 430, 431, 432, 433, 434,
	435, 438, 1185, 1184, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 1241, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 1242, 481, 469, 1124, 282, 1243, 483, 484, 485,
	1147, 1195, 486, 1209, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 1244, 498, 1245, 1224, 499, 500, 1134, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 1225, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 1205, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 1246, 554,
	555, 556, 557, 558, 1135, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 1188, 581, 582, 564,
	565, 583, 584, 1247, 585, 586, 587, 588, 589, 590,
	591, 1203, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 1250, 601, 602, 603, 604,
	1226, 608, 609, 0, 610, 611, 1121, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	1215, 1216, 1217, 1218, 0, 630, 0, 621, 622, 623,
	624, 1227, 625, 1228, 1145, 626, 627, 628, 629, 0,
	631, 632, 0, 1128, 633, 634, 635, 637, 638, 636,
	639, 1189, 640, 0, 0, 641, 642, 643, 702, 1212,
	1249, 0, 645, 644, 646, 647, 705, 648, 649, 0,
	0, 0, 0, 650, 651, 706, 652, 653, 654, 1125,
	0, 0, 0, 1685, 0, 1167, 1139, 1140, 1141, 1137,
	1138, 1150, 1120, 0, 0, 0, 0, 0, 0, 1118,
	1119, 0, 283, 285, 284, 286, 287, 288, 289, 1151,
	290, 291, 0, 1149, 0, 0, 0, 1191, 1155, 0,
	0, 0, 292, 293, 1231, 294, 295, 296, 297, 298,
	299, 656, 1204, 0, 300, 1211, 301, 1210, 0, 1221,
	302, 303, 304, 305, 306, 307, 1157, 1190, 1122, 308,
	1251, 1252, 663, 0, 309, 310, 1197, 0, 1178, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 1232, 333, 334,
	335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337,
	338, 339, 340, 1214, 341, 343, 1208, 1207, 1127, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 1199, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 1133, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 1222, 1223,
	374, 1146, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 1206, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 1233, 382, 383, 384, 1219, 1220, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 1229,
	0, 1156, 395, 0, 396, 397, 398, 399, 400, 1192,
	1193, 1196, 487, 1235, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	1234, 411, 1201, 1202, 0, 1162, 0, 412, 413, 1236,
	1194, 1237, 414, 415, 416, 1238, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 1230, 1239, 428, 429, 1240, 0, 430, 431,
	432, 433, 434, 435, 438, 1185, 1184, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 1241, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 1242, 481, 469, 1124, 282, 1243,
	483, 484, 485, 1147, 1195, 486, 1209, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 1244, 498, 1245, 1224, 499, 500,
	1134, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 1225, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 1205, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 1246, 554, 555, 556, 557, 558, 1135, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 1188,
	581, 582, 564, 565, 583, 584, 1247, 585, 586, 587,
	588, 589, 590, 591, 1203, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 1250, 601,
	602, 603, 604, 1226, 608, 609, 0, 610, 611, 1121,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 1215, 1216, 1217, 1218, 0, 630, 0,
	621, 622, 623, 624, 1227, 625, 1228, 1145, 626, 627,
	628, 629, 0, 631, 632, 0, 1128, 633, 634, 635,
	637, 638, 636, 639, 1189, 640, 0, 0, 641, 642,
	643, 702, 1212, 1249, 0, 645, 644, 646, 647, 705,
	648, 649, 0, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 1125, 0, 0, 0, 1680, 0, 1167, 1139,
	1140, 1141, 1137, 1138, 1150, 1120, 0, 0, 0, 0,
	0, 0, 1118, 1119, 0, 283, 285, 284, 286, 287,
	288, 289, 1151, 290, 291, 0, 1149, 0, 0, 0,
	1191, 1155, 0, 0, 0, 292, 293, 1231, 294, 295,
	296, 297, 298, 299, 656, 1204, 0, 300, 1211, 301,
	1210, 0, 1221, 302, 303, 304, 305, 306, 307, 1157,
	1190, 1122, 308, 1251, 1252, 663, 0, 309, 310, 1197,
	0, 1178, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	1232, 333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182,
	1186, 336, 337, 338, 339, 340, 1214, 341, 343, 1208,
	1207, 1127, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 1199, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 1133,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 1222, 1223, 374, 1146, 280, 0, 0, 0, 0,
	0, 375, 376, 377, 1206, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 1233, 382, 383, 384, 1219,
	1220, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 1229, 0, 1156, 395, 0, 396, 397, 398,
	399, 400, 1192, 1193, 1196, 487, 1235, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 281, 408,
	409, 410, 0, 1234, 411, 1201, 1202, 0, 1162, 0,
	412, 413, 1236, 1194, 1237, 414, 415, 416, 1238, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 1230, 1239, 428, 429, 1240,
	0, 430, 431, 432, 433, 434, 435, 438, 1185, 1184,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 1241,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 1242, 481, 469,
	1124, 282, 1243, 483, 484, 485, 1147, 1195, 486, 1209,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 1244, 498, 1245,
	1224, 499, 500, 1134, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 1225, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	1205, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 1246, 554, 555, 556, 557, 558,
	1135, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 1188, 581, 582, 564, 565, 583, 584, 1247,
	585, 586, 587, 588, 589, 590, 591, 1203, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 1250, 601, 602, 603, 604, 1226, 608, 609, 0,
	610, 611, 1121, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 1215, 1216, 1217, 1218,
	0, 630, 0, 621, 622, 623, 624, 1227, 625, 1228,
	1145, 626, 627, 628, 629, 0, 631, 632, 0, 1128,
	633, 634, 635, 637, 638, 636, 639, 1189, 640, 0,
	0, 641, 642, 643, 702, 1212, 1249, 0, 645, 644,
	646, 647, 705, 648, 649, 0, 0, 0, 0, 650,
	651, 706, 652, 653, 654, 1125, 0, 0, 0, 1589,
	0, 1167, 1139, 1140, 1141, 1137, 1138, 1150, 1120, 0,
	0, 0, 0, 0, 0, 1118, 1119, 0, 283, 285,
	284, 286, 287, 288, 289, 1151, 290, 291, 0, 1149,
	0, 0, 0, 1191, 1155, 0, 0, 0, 292, 293,
	1231, 294, 295, 296, 297, 298, 299, 656, 1204, 0,
	300, 1211, 301, 1210, 0, 1221, 302, 303, 304, 305,
	306, 307, 1157, 1190, 1122, 308, 1251, 1252, 663, 0,
	309, 310, 1197, 0, 1178, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 1232, 333, 334, 335, 1181, 1179, 1180,
	1187, 1183, 1182, 1186, 336, 337, 338, 339, 340, 1214,
	341, 343, 1208, 1207, 1127, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 1199,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 1133, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 1222, 1223, 374, 1146, 280, 0,
	0, 0, 0, 0, 375, 376, 377, 1206, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 1233, 382,
	383, 384, 1219, 1220, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 1229, 0, 1156, 395, 0,
	396, 397, 398, 399, 400, 1588, 1193, 1196, 487, 1235,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 281, 408, 409, 410, 0, 1234, 411, 1201, 1202,
	0, 1162, 0, 412, 413, 1236, 1194, 1237, 414, 415,
	416, 1238, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 1230, 1239,
	428, 429, 1240, 0, 430, 431, 432, 433, 434, 435,
	438, 1185, 1184, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 1241, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	1242, 481, 469, 1124, 282, 1243, 483, 484, 485, 1147,
	1195, 486, 1209, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	1244, 498, 1245, 1224, 499, 500, 1134, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 1225, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 1205, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 1246, 554, 555,
	556, 557, 558, 1135, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 1188, 581, 582, 564, 565,
	583, 584, 1247, 585, 586, 587, 588, 589, 590, 591,
	1203, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 1250, 601, 602, 603, 604, 1226,
	608, 609, 0, 610, 611, 1121, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 1215,
	1216, 1217, 1218, 0, 630, 0, 621, 622, 623, 624,
	1227, 625, 1228, 1145, 626, 627, 628, 629, 0, 631,
	632, 0, 1128, 633, 634, 635, 637, 638, 636, 639,
	1189, 640, 0, 0, 641, 642, 643, 702, 1212, 1249,
	0, 645, 644, 646, 647, 705, 648, 649, 0, 0,
	0, 0, 650, 651, 706, 652, 653, 654, 1125, 0,
	0, 0, 1583, 0, 1167, 1139, 1140, 1141, 1137, 1138,
	1150, 1120, 0, 0, 0, 0, 0, 0, 1118, 1119,
	0, 283, 285, 284, 286, 287, 288, 289, 1151, 290,
	291, 0, 1149, 0, 0, 0, 1191, 1155, 0, 0,
	0, 292, 293, 1231, 294, 295, 296, 297, 298, 299,
	656, 1204, 0, 300, 1211, 301, 1210, 0, 1221, 302,
	303, 304, 305, 306, 307, 1157, 1190, 1122, 308, 1251,
	1252, 663, 0, 309, 310, 1197, 0, 1178, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 1232, 333, 334, 335,
	1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337, 338,
	339, 340, 1214, 341, 343, 1208, 1207, 1127, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 1199, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 1133, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 1222, 1223, 374,
	1146, 280, 0, 0, 0, 0, 0, 375, 376, 377,
	1206, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 1233, 382, 383, 384, 1219, 1220, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 1229, 0,
	1156, 395, 0, 396, 397, 398, 399, 400, 1582, 1193,
	1196, 487, 1235, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 281, 408, 409, 410, 0, 1234,
	411, 1201, 1202, 0, 1162, 0, 412, 413, 1236, 1194,
	1237, 414, 415, 416, 1238, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 1230, 1239, 428, 429, 1240, 0, 430, 431, 432,
	433, 434, 435, 438, 1185, 1184, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 1241, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 1242, 481, 469, 1124, 282, 1243, 483,
	484, 485, 1147, 1195, 486, 1209, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 1244, 498, 1245, 1224, 499, 500, 1134,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	1225, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 1205, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	1246, 554, 555, 556, 557, 558, 1135, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 1188, 581,
	582, 564, 565, 583, 584, 1247, 585, 586, 587, 588,
	589, 590, 591, 1203, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 1250, 601, 602,
	603, 604, 1226, 608, 609, 0, 610, 611, 1121, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 1215, 1216, 1217, 1218, 0, 630, 0, 621,
	622, 623, 624, 1227, 625, 1228, 1145, 626, 627, 628,
	629, 0, 631, 632, 0, 1128, 633, 634, 635, 637,
	638, 636, 639, 1189, 640, 0, 0, 641, 642, 643,
	702, 1212, 1249, 0, 645, 644, 646, 647, 705, 648,
	649, 0, 0, 0, 0, 650, 651, 706, 652, 653,
	654, 1125, 0, 0, 0, 1576, 0, 1167, 1139, 1140,
	1141, 1137, 1138, 1150, 1120, 0, 0, 0, 0, 0,
	0, 1118, 1119, 0, 283, 285, 284, 286, 287, 288,
	289, 1151, 290, 291, 0, 1149, 0, 0, 0, 1191,
	1155, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 1204, 0, 300, 1211, 301, 1210,
	0, 1221, 302, 303, 304, 305, 306, 307, 1157, 1190,
	1122, 308, 1251, 1252, 663, 0, 309, 310, 1197, 0,
	1178, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186,
	336, 337, 338, 339, 340, 1214, 341, 343, 1208, 1207,
	1127, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 1199, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 1133, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	1222, 1223, 374, 1146, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 1206, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 1219, 1220,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 1229, 0, 1156, 395, 0, 396, 397, 398, 399,
	400, 1192, 1193, 1196, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 1234, 411, 1201, 1202, 0, 1162, 0, 412,
	413, 1236, 1194, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 1230, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 1185, 1184, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 1124,
	282, 1243, 483, 484, 485, 1147, 1195, 486, 1209, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 1244, 498, 1245, 1224,
	499, 500, 1134, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 1225, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 1205,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 1135,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 1188, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 1203, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	1250, 601, 602, 603, 604, 1226, 608, 609, 0, 610,
	611, 1121, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 1215, 1216, 1217, 1218, 0,
	630, 0, 621, 622, 623, 624, 1227, 625, 1228, 1145,
	626, 627, 628, 629, 0, 631, 632, 0, 1128, 633,
	634, 635, 637, 638, 636, 639, 1189, 640, 0, 0,
	641, 642, 643, 702, 1212, 1249, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 1125, 0, 0, 0, 1544, 0,
	1167, 1139, 1140, 1141, 1137, 1138, 1150, 1120, 0, 0,
	0, 0, 0, 0, 1118, 1119, 0, 283, 285, 284,
	286, 287, 288, 289, 1151, 290, 291, 0, 1149, 0,
	0, 0, 1191, 1155, 0, 0, 0, 292, 293, 1231,
	294, 295, 296, 297, 298, 299, 656, 1204, 0, 300,
	1211, 301, 1210, 0, 1221, 302, 303, 304, 305, 306,
	307, 1157, 1190, 1122, 308, 1251, 1252, 663, 0, 309,
	310, 1197, 0, 1178, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187,
	1183, 1182, 1186, 336, 337, 338, 339, 340, 1214, 341,
	343, 1208, 1207, 1127, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 1199, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 1133, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 1222, 1223, 374, 1146, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 1206, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 1233, 382, 383,
	384, 1219, 1220, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 1229, 0, 1156, 395, 0, 396,
	397, 398, 399, 400, 1192, 1193, 1196, 487, 1235, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 1234, 411, 1201, 1202, 0,
	1162, 0, 412, 413, 1236, 1194, 1237, 414, 415, 416,
	1238, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 1230, 1239, 428,
	429, 1240, 0, 430, 431, 432, 433, 434, 435, 438,
	1185, 1184, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 1241, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 1242,
	481, 469, 1124, 282, 1243, 483, 484, 485, 1147, 1195,
	486, 1209, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 1244,
	498, 1245, 1224, 499, 500, 1134, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 1225, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 1205, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 1246, 554, 555, 556,
	557, 558, 1135, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 1188, 581, 582, 564, 565, 583,
	584, 1247, 585, 586, 587, 588, 589, 590, 591, 1203,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 1250, 601, 602, 603, 604, 1226, 608,
	609, 0, 610, 611, 1121, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 1215, 1216,
	1217, 1218, 0, 630, 0, 621, 622, 623, 624, 1227,
	625, 1228, 1145, 626, 627, 628, 629, 0, 631, 632,
	0, 1128, 633, 634, 635, 637, 638, 636, 639, 1189,
	640, 0, 0, 641, 642, 643, 702, 1212, 1249, 0,
	645, 644, 646, 647, 705, 648, 649, 0, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 1125, 0, 0,
	0, 1526, 0, 1167, 1139, 1140, 1141, 1137, 1138, 1150,
	1120, 0, 0, 0, 0, 0, 0, 1118, 1119, 0,
	283, 285, 284, 286, 287, 288, 289, 1151, 290, 291,
	0, 1149, 0, 0, 0, 1191, 1155, 0, 0, 0,
	292, 293, 1231, 294, 295, 296, 297, 298, 299, 656,
	1204, 0, 300, 1211, 301, 1210, 0, 1221, 302, 303,
	304, 305, 306, 307, 1157, 1190, 1122, 308, 1251, 1252,
	663, 0, 309, 310, 1197, 0, 1178, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 1232, 333, 334, 335, 1181,
	1179, 1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339,
	340, 1214, 341, 343, 1208, 1207, 1127, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 1199, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 1133, 363, 364, 365, 367, 369,
	366, 1530, 370, 371, 372, 373, 1222, 1223, 374, 1146,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 1206,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	1233, 382, 383, 384, 1219, 1220, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 1229, 0, 1156,
	395, 0, 396, 397, 398, 399, 400, 1192, 1193, 1196,
	487, 1235, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 1234, 411,
	1201, 1202, 0, 1162, 0, 412, 413, 1236, 1194, 1237,
	414, 415, 416, 1238, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	1230, 1239, 428, 429, 1240, 0, 430, 431, 432, 433,
	434, 435, 438, 1185, 1184, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 1241, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 1242, 481, 469, 1124, 282, 1243, 483, 484,
	485, 1147, 1195, 486, 1209, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 1244, 498, 1245, 1224, 499, 500, 1134, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 1225,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 1205, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 1531, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 1246,
	554, 555, 556, 557, 558, 1135, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 1188, 581, 582,
	564, 565, 583, 584, 1247, 585, 586, 587, 588, 589,
	590, 591, 1203, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 1250, 601, 602, 603,
	604, 1226, 608, 609, 0, 610, 611, 1121, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 1529, 619, 0,
	620, 1215, 1216, 1217, 1218, 0, 630, 0, 621, 622,
	623, 624, 1227, 625, 1228, 1145, 626, 627, 628, 629,
	0, 631, 632, 0, 1128, 633, 634, 635, 637, 638,
	636, 639, 1189, 640, 0, 0, 641, 642, 643, 702,
	1212, 1249, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	1125, 0, 0, 0, 1375, 0, 1167, 1139, 1140, 1141,
	1137, 1138, 1150, 1120, 0, 0, 0, 0, 0, 0,
	1118, 1119, 0, 283, 285, 284, 286, 287, 288, 289,
	1151, 290, 291, 0, 1149, 0, 0, 0, 1191, 1155,
	0, 0, 0, 292, 293, 1231, 294, 295, 296, 297,
	298, 299, 656, 1204, 0, 300, 1211, 301, 1210, 0,
	1221, 302, 303, 304, 305, 306, 307, 1157, 1190, 1122,
	308, 1251, 1252, 663, 0, 309, 310, 1197, 0, 1178,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 1232, 333,
	334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336,
	337, 338, 339, 340, 1214, 341, 343, 1208, 1207, 1127,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 1199, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 1133, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 1222,
	1223, 374, 1146, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 1206, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 1233, 382, 383, 384, 1219, 1220, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	1229, 0, 1156, 395, 0, 396, 397, 398, 399, 400,
	1192, 1193, 1196, 487, 1235, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 1234, 411, 1201, 1202, 0, 1162, 0, 412, 413,
	1236, 1194, 1237, 414, 415, 416, 1238, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 1230, 1239, 428, 429, 1240, 0, 430,
	431, 432, 433, 434, 435, 438, 1185, 1184, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 1241, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 1242, 481, 469, 1124, 282,
	1243, 483, 484, 485, 1147, 1195, 486, 1209, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 1244, 498, 1245, 1224, 499,
	500, 1134, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 1225, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 1205, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 1246, 554, 555, 556, 557, 558, 1135, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	1188, 581, 582, 564, 565, 583, 584, 1247, 585, 586,
	587, 588, 589, 590, 591, 1203, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 1250,
	601, 602, 603, 604, 1226, 608, 609, 0, 610, 611,
	1121, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 1215, 1216, 1217, 1218, 0, 630,
	0, 621, 622, 623, 624, 1227, 625, 1228, 1145, 626,
	627, 628, 629, 0, 631, 632, 0, 1128, 633, 634,
	635, 637, 638, 636, 639, 1189, 640, 0, 0, 641,
	642, 643, 702, 1212, 1249, 0, 645, 644, 646, 647,
	705, 648, 649, 0, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 1125, 0, 0, 0, 0, 0, 1167,
	1139, 1140, 1141, 1137, 1138, 1150, 1120, 0, 0, 0,
	0, 0, 0, 1118, 1119, 0, 283, 285, 284, 286,
	287, 288, 289, 1151, 290, 291, 0, 1149, 0, 0,
	0, 1191, 1155, 0, 0, 0, 292, 293, 1231, 294,
	295, 296, 297, 298, 299, 656, 1204, 0, 300, 1211,
	301, 1210, 0, 1221, 302, 303, 304, 305, 306, 307,
	1157, 1190, 1122, 308, 1251, 1252, 663, 0, 309, 310,
	1197, 0, 1178, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187, 1183,
	1182, 1186, 336, 337, 338, 339, 340, 1214, 341, 343,
	1208, 1207, 1127, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 1199, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	1133, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 1222, 1223, 374, 1146, 280, 0, 0, 0,
	0, 0, 375, 376, 377, 1206, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 1233, 382, 383, 384,
	1219, 1220, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 1229, 0, 1156, 395, 0, 396, 397,
	398, 399, 400, 1192, 1193, 1196, 487, 1235, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 0, 1234, 411, 1201, 1202, 0, 1162,
	0, 412, 413, 1236, 1194, 1237, 414, 415, 416, 1238,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 1230, 1239, 428, 429,
	1240, 0, 430, 431, 432, 433, 434, 435, 438, 1185,
	1184, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	1241, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 1242, 481,
	469, 1124, 282, 1243, 483, 484, 485, 1147, 1195, 486,
	1209, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 1244, 498,
	1245, 1224, 499, 500, 1134, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 1225, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 1205, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 1246, 554, 555, 556, 557,
	558, 1135, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 1188, 581, 582, 564, 565, 583, 584,
	1247, 585, 586, 587, 588, 589, 590, 591, 1203, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 1250, 601, 602, 603, 604, 1226, 608, 609,
	0, 610, 611, 1121, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 1215, 1216, 1217,
	1218, 0, 630, 0, 621, 622, 623, 624, 1227, 625,
	1228, 1145, 626, 627, 628, 629, 0, 631, 632, 0,
	1128, 633, 634, 635, 637, 638, 636, 639, 1189, 640,
	0, 0, 641, 642, 643, 702, 1212, 1249, 0, 645,
	644, 646, 647, 705, 648, 649, 0, 0, 0, 0,
	650, 651, 706, 652, 653, 654, 1125, 0, 0, 0,
	0, 0, 1167, 1139, 1140, 1141, 1137, 1138, 1150, 1120,
	0, 0, 0, 0, 0, 0, 1118, 1119, 0, 283,
	285, 284, 286, 287, 288, 289, 1151, 290, 291, 0,
	1149, 0, 0, 0, 1191, 1155, 0, 0, 0, 292,
	293, 1231, 294, 295, 296, 297, 298, 299, 656, 1204,
	0, 300, 1211, 301, 1210, 0, 1221, 302, 303, 304,
	305, 306, 307, 1157, 1190, 1122, 308, 1251, 1252, 663,
	0, 309, 310, 1197, 0, 1178, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 1232, 333, 334, 4917, 1181, 1179,
	1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339, 340,
	1214, 341, 343, 1208, 1207, 1127, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	1199, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 1133, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 1222, 1223, 374, 1146, 280,
	0, 0, 0, 0, 0, 375, 376, 377, 1206, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 1233,
	382, 383, 384, 1219, 1220, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 1229, 0, 1156, 395,
	0, 396, 397, 398, 399, 400, 1192, 1193, 1196, 487,
	1235, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 281, 408, 409, 410, 0, 1234, 411, 1201,
	1202, 0, 1162, 0, 412, 413, 1236, 1194, 1237, 414,
	415, 416, 1238, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 1230,
	1239, 428, 429, 1240, 0, 430, 431, 432, 433, 434,
	435, 438, 1185, 1184, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 1241, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 1242, 481, 469, 1124, 282, 1243, 483, 484, 485,
	1147, 1195, 486, 1209, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 1244, 498, 1245, 1224, 499, 500, 1134, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 1225, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 1205, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 1246, 554,
	555, 556, 557, 558, 1135, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 1188, 581, 582, 564,
	565, 583, 584, 1247, 585, 586, 587, 588, 589, 590,
	591, 1203, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 1250, 601, 602, 603, 604,
	1226, 608, 609, 0, 610, 611, 1121, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	1215, 1216, 1217, 1218, 0, 630, 0, 621, 622, 623,
	624, 1227, 625, 1228, 1145, 626, 627, 628, 629, 0,
	4916, 632, 0, 1128, 633, 634, 635, 637, 638, 636,
	639, 1189, 640, 0, 0, 641, 642, 643, 702, 1212,
	1249, 0, 645, 644, 646, 647, 705, 648, 649, 0,
	0, 0, 0, 650, 651, 706, 652, 653, 654, 1125,
	0, 0, 0, 0, 0, 1167, 1139, 1140, 1141, 1137,
	1138, 1150, 1120, 0, 0, 0, 0, 0, 0, 1118,
	1119, 0, 283, 285, 284, 286, 287, 288, 289, 1151,
	290, 291, 0, 1149, 0, 0, 0, 1191, 1155, 0,
	0, 0, 292, 293, 1231, 294, 295, 296, 297, 298,
	299, 4915, 1204, 0, 300, 1211, 301, 1210, 0, 1221,
	302, 303, 304, 305, 306, 307, 1157, 1190, 1122, 308,
	1251, 1252, 663, 0, 309, 310, 1197, 0, 1178, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 1232, 333, 334,
	4917, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337,
	338, 339, 340, 1214, 341, 343, 1208, 1207, 1127, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 1199, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 1133, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 1222, 1223,
	374, 1146, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 1206, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 1233, 382, 383, 384, 1219, 1220, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 1229,
	0, 1156, 395, 0, 396, 397, 398, 399, 400, 1192,
	1193, 1196, 487, 1235, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	1234, 411, 1201, 1202, 0, 1162, 0, 412, 413, 1236,
	1194, 1237, 414, 415, 416, 1238, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 1230, 1239, 428, 429, 1240, 0, 430, 431,
	432, 433, 434, 435, 438, 1185, 1184, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 1241, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 1242, 481, 469, 1124, 282, 1243,
	483, 484, 485, 1147, 1195, 486, 1209, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 1244, 498, 1245, 1224, 499, 500,
	1134, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 1225, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 1205, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 1246, 554, 555, 556, 557, 558, 1135, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 1188,
	581, 582, 564, 565, 583, 584, 1247, 585, 586, 587,
	588, 589, 590, 591, 1203, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 1250, 601,
	602, 603, 604, 1226, 608, 609, 0, 610, 611, 1121,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 1215, 1216, 1217, 1218, 0, 630, 0,
	621, 622, 623, 624, 1227, 625, 1228, 1145, 626, 627,
	628, 629, 0, 4916, 632, 0, 1128, 633, 634, 635,
	637, 638, 636, 639, 1189, 640, 0, 0, 641, 642,
	643, 702, 1212, 1249, 0, 645, 644, 646, 647, 705,
	648, 649, 0, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 1125, 0, 0, 0, 0, 0, 1167, 1139,
	1140, 1141, 1137, 1138, 1150, 1120, 0, 0, 0, 0,
	0, 0, 1118, 1119, 0, 283, 285, 284, 286, 287,
	288, 289, 1151, 290, 291, 0, 1149, 0, 0, 0,
	1191, 1155, 0, 0, 0, 292, 293, 1231, 294, 295,
	296, 297, 298, 299, 656, 1204, 0, 300, 1211, 301,
	1210, 0, 1221, 302, 303, 304, 305, 306, 307, 1157,
	1190, 1122, 308, 1251, 1252, 663, 0, 309, 310, 1197,
	0, 1178, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	1232, 333, 4520, 335, 1181, 1179, 1180, 1187, 1183, 1182,
	1186, 336, 337, 338, 339, 340, 1214, 341, 343, 1208,
	1207, 1127, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 1199, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 1133,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 1222, 1223, 374, 1146, 280, 0, 0, 0, 0,
	0, 375, 376, 377, 1206, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 1233, 382, 383, 384, 1219,
	1220, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 1229, 0, 4521, 395, 0, 396, 397, 398,
	399, 400, 1192, 1193, 1196, 487, 1235, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 281, 408,
	409, 410, 0, 1234, 411, 1201, 1202, 0, 1162, 0,
	412, 413, 1236, 1194, 1237, 414, 415, 416, 1238, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 1230, 1239, 428, 429, 1240,
	0, 430, 431, 432, 433, 434, 435, 438, 1185, 1184,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 1241,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 1242, 481, 469,
	1124, 282, 1243, 483, 484, 485, 1147, 1195, 486, 1209,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 1244, 498, 1245,
	1224, 499, 500, 1134, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 1225, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	1205, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 1246, 554, 555, 556, 4519, 558,
	1135, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 1188, 581, 582, 564, 565, 583, 584, 1247,
	585, 586, 587, 588, 589, 590, 591, 1203, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 1250, 601, 602, 603, 604, 1226, 608, 609, 0,
	610, 611, 1121, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 1215, 1216, 1217, 1218,
	0, 630, 0, 621, 622, 623, 624, 1227, 625, 1228,
	1145, 626, 627, 628, 629, 0, 631, 632, 0, 1128,
	633, 634, 635, 637, 638, 636, 639, 1189, 640, 0,
	0, 641, 642, 643, 702, 1212, 1249, 0, 645, 644,
	646, 647, 705, 648, 649, 0, 0, 0, 0, 650,
	651, 706, 652, 653, 654, 1125, 0, 0, 0, 0,
	0, 1167, 1139, 1140, 1141, 3286, 3287, 1150, 1120, 0,
	0, 0, 0, 0, 0, 1118, 1119, 0, 283, 285,
	284, 286, 287, 288, 289, 1151, 290, 291, 0, 1149,
	0, 0, 0, 1191, 1155, 0, 0, 0, 292, 293,
	1231, 294, 295, 296, 297, 298, 299, 656, 1204, 0,
	300, 1211, 301, 1210, 0, 1221, 302, 303, 304, 305,
	306, 307, 1157, 1190, 1122, 308, 1251, 1252, 663, 0,
	309, 310, 1197, 0, 1178, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 1232, 333, 334, 335, 1181, 1179, 1180,
	1187, 1183, 1182, 1186, 336, 337, 338, 339, 340, 1214,
	341, 343, 1208, 1207, 1127, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 1199,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 1133, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 1222, 1223, 374, 1146, 280, 0,
	0, 0, 0, 0, 375, 376, 377, 1206, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 1233, 382,
	383, 384, 1219, 1220, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 1229, 0, 1156, 395, 0,
	396, 397, 398, 399, 400, 1192, 1193, 1196, 487, 1235,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 281, 408, 409, 410, 0, 1234, 411, 1201, 1202,
	0, 1162, 0, 412, 413, 1236, 1194, 1237, 414, 415,
	416, 1238, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 1230, 1239,
	428, 429, 1240, 0, 430, 431, 432, 433, 434, 435,
	438, 1185, 1184, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 1241, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	1242, 481, 469, 1124, 282, 1243, 483, 484, 485, 1147,
	1195, 486, 1209, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	1244, 498, 1245, 1224, 499, 500, 1134, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 1225, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 1205, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 1246, 554, 555,
	556, 557, 558, 1135, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 1188, 581, 582, 564, 565,
	583, 584, 1247, 585, 586, 587, 588, 589, 590, 591,
	1203, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 1250, 601, 602, 603, 604, 1226,
	608, 609, 0, 610, 611, 1121, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 1215,
	1216, 1217, 1218, 0, 630, 0, 621, 622, 623, 624,
	1227, 625, 1228, 1145, 626, 627, 628, 629, 0, 631,
	632, 0, 1128, 633, 634, 635, 637, 638, 636, 639,
	1189, 640, 0, 0, 641, 642, 643, 702, 1212, 1249,
	0, 645, 644, 646, 647, 705, 648, 649, 0, 0,
	0, 0, 650, 651, 706, 652, 653, 654, 1125, 0,
	0, 0, 0, 0, 1167, 1139, 1140, 1141, 3284, 3285,
	1150, 1120, 0, 0, 0, 0, 0, 0, 1118, 1119,
	0, 283, 285, 284, 286, 287, 288, 289, 1151, 290,
	291, 0, 1149, 0, 0, 0, 1191, 1155, 0, 0,
	0, 292, 293, 1231, 294, 295, 296, 297, 298, 299,
	656, 1204, 0, 300, 1211, 301, 1210, 0, 1221, 302,
	303, 304, 305, 306, 307, 1157, 1190, 1122, 308, 1251,
	1252, 663, 0, 309, 310, 1197, 0, 1178, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 1232, 333, 334, 335,
	1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337, 338,
	339, 340, 1214, 341, 343, 1208, 1207, 1127, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 1199, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 1133, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 1222, 1223, 374,
	1146, 280, 0, 0, 0, 0, 0, 375, 376, 377,
	1206, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 1233, 382, 383, 384, 1219, 1220, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 1229, 0,
	1156, 395, 0, 396, 397, 398, 399, 400, 1192, 1193,
	1196, 487, 1235, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 281, 408, 409, 410, 0, 1234,
	411, 1201, 1202, 0, 1162, 0, 412, 413, 1236, 1194,
	1237, 414, 415, 416, 1238, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 1230, 1239, 428, 429, 1240, 0, 430, 431, 432,
	433, 434, 435, 438, 1185, 1184, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 1241, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 1242, 481, 469, 1124, 282, 1243, 483,
	484, 485, 1147, 1195, 486, 1209, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 1244, 498, 1245, 1224, 499, 500, 1134,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	1225, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 1205, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	1246, 554, 555, 556, 557, 558, 1135, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 1188, 581,
	582, 564, 565, 583, 584, 1247, 585, 586, 587, 588,
	589, 590, 591, 1203, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 1250, 601, 602,
	603, 604, 1226, 608, 609, 0, 610, 611, 1121, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 1215, 1216, 1217, 1218, 0, 630, 0, 621,
	622, 623, 624, 1227, 625, 1228, 1145, 626, 627, 628,
	629, 0, 631, 632, 0, 1128, 633, 634, 635, 637,
	638, 636, 639, 1189, 640, 0, 0, 641, 642, 643,
	702, 1212, 1249, 0, 645, 644, 646, 647, 705, 648,
	649, 0, 0, 0, 0, 650, 651, 706, 652, 653,
	654, 1125, 0, 0, 0, 0, 0, 1167, 1139, 1140,
	1141, 1137, 1138, 1150, 1120, 0, 0, 0, 0, 0,
	0, 1118, 1119, 0, 283, 285, 284, 286, 287, 288,
	289, 1151, 290, 291, 0, 1149, 0, 0, 0, 1191,
	1155, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 1204, 0, 300, 1211, 301, 1210,
	0, 1221, 302, 303, 304, 305, 306, 307, 1157, 1190,
	1122, 308, 1251, 1252, 663, 0, 309, 310, 1197, 0,
	1178, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186,
	336, 337, 338, 339, 340, 1214, 341, 343, 1208, 1207,
	1127, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 1199, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 1133, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	1222, 1223, 374, 1146, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 1206, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 1219, 1220,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 1229, 0, 1156, 395, 0, 396, 397, 398, 399,
	400, 1192, 1193, 1196, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 1234, 411, 1201, 1202, 0, 1162, 0, 412,
	413, 1236, 1194, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 1230, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 1185, 1184, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 1124,
	282, 1243, 483, 484, 485, 1147, 1195, 486, 1209, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 1244, 498, 1245, 1224,
	499, 500, 1134, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 1225, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 1205,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 1135,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 1188, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 1203, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	1250, 601, 602, 603, 604, 1226, 608, 609, 0, 610,
	611, 1121, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 1215, 1216, 1217, 1218, 0,
	630, 0, 621, 622, 623, 624, 1227, 625, 1228, 1145,
	626, 627, 628, 629, 0, 631, 632, 0, 1128, 633,
	634, 635, 637, 638, 636, 639, 1189, 640, 0, 0,
	641, 642, 643, 702, 1212, 1249, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 1125, 0, 0, 0, 0, 0,
	1167, 1139, 1140, 1141, 1137, 1138, 1150, 1120, 0, 0,
	0, 0, 0, 0, 2535, 2536, 0, 283, 285, 284,
	286, 287, 288, 289, 1151, 290, 291, 0, 1149, 0,
	0, 0, 1191, 1155, 0, 0, 0, 292, 293, 1231,
	294, 295, 296, 297, 298, 299, 656, 1204, 0, 300,
	1211, 301, 1210, 0, 1221, 302, 303, 304, 305, 306,
	307, 1157, 1190, 0, 308, 1251, 1252, 663, 0, 309,
	310, 1197, 0, 1178, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187,
	1183, 1182, 1186, 336, 337, 338, 339, 340, 1214, 341,
	343, 1208, 1207, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 1199, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 1133, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 1222, 1223, 374, 1146, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 1206, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 1233, 382, 383,
	384, 1219, 1220, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 1229, 0, 1156, 395, 0, 396,
	397, 398, 399, 400, 1192, 1193, 1196, 487, 1235, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 1234, 411, 1201, 1202, 0,
	1162, 0, 412, 413, 1236, 1194, 1237, 414, 415, 416,
	1238, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 1230, 1239, 428,
	429, 1240, 0, 430, 431, 432, 433, 434, 435, 438,
	1185, 1184, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 1241, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 1242,
	481, 469, 0, 282, 1243, 483, 484, 485, 1147, 1195,
	486, 1209, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 1244,
	498, 1245, 1224, 499, 500, 1134, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 1225, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 1205, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 1246, 554, 555, 556,
	557, 558, 1135, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 1188, 581, 582, 564, 565, 583,
	584, 1247, 585, 586, 587, 588, 589, 590, 591, 1203,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 1250, 601, 602, 603, 604, 1226, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 1215, 1216,
	1217, 1218, 0, 630, 0, 621, 622, 623, 624, 1227,
	625, 1228, 1145, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 1189,
	640, 0, 0, 641, 642, 643, 702, 1212, 1249, 0,
	645, 644, 646, 647, 705, 648, 649, 0, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 1167, 1139, 1140, 1141, 1137, 1138, 1150,
	2794, 0, 0, 0, 0, 0, 0, 2792, 2793, 0,
	283, 285, 284, 286, 287, 288, 289, 1151, 290, 291,
	0, 1149, 0, 0, 0, 1191, 1155, 0, 0, 0,
	292, 293, 1231, 294, 295, 296, 297, 298, 299, 656,
	1204, 0, 300, 1211, 301, 1210, 0, 1221, 302, 303,
	304, 305, 306, 307, 1157, 1190, 0, 308, 1251, 1252,
	663, 0, 309, 310, 1197, 0, 1178, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 1232, 333, 334, 335, 1181,
	1179, 1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339,
	340, 1214, 341, 343, 1208, 1207, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 1199, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 1133, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 1222, 1223, 374, 1146,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 1206,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	1233, 382, 383, 384, 1219, 1220, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 1229, 0, 1156,
	395, 0, 396, 397, 398, 399, 400, 1192, 1193, 1196,
	487, 1235, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 1234, 411,
	1201, 1202, 0, 1162, 0, 412, 413, 1236, 1194, 1237,
	414, 415, 416, 1238, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	1230, 1239, 428, 429, 1240, 0, 430, 431, 432, 433,
	434, 435, 438, 1185, 1184, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 1241, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 1242, 481, 469, 0, 282, 1243, 483, 484,
	485, 1147, 1195, 486, 1209, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 1244, 498, 1245, 1224, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 1225,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 1205, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 1246,
	554, 555, 556, 557, 558, 3279, 3280, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 1188, 581, 582,
	564, 565, 583, 584, 1247, 585, 586, 587, 588, 589,
	590, 591, 1203, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 1250, 601, 602, 603,
	604, 1226, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 1215, 1216, 1217, 1218, 0, 630, 0, 621, 622,
	623, 624, 1227, 625, 1228, 1145, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 1189, 640, 0, 0, 641, 642, 643, 702,
	1212, 1249, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 1167, 1139, 1140, 1141,
	1137, 1138, 1150, 0, 0, 0, 0, 0, 0, 0,
	2186, 2187, 0, 283, 285, 284, 286, 287, 288, 289,
	1151, 290, 291, 0, 1149, 0, 0, 0, 1191, 1155,
	0, 0, 0, 292, 293, 1231, 294, 295, 296, 297,
	298, 299, 0, 1204, 0, 300, 1211, 301, 1210, 0,
	1221, 302, 303, 304, 305, 306, 307, 1157, 1190, 1122,
	308, 1251, 1252, 663, 0, 309, 310, 1197, 0, 1178,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 1232, 333,
	334, 4917, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336,
	337, 338, 339, 340, 1214, 341, 343, 1208, 1207, 1127,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 1199, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 1133, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 1222,
	1223, 374, 1146, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 1206, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 1233, 382, 383, 384, 1219, 1220, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	1229, 0, 1156, 395, 0, 396, 397, 398, 399, 400,
	1192, 1193, 1196, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 1234, 411, 1201, 1202, 0, 1162, 0, 412, 413,
	0, 1194, 0, 414, 415, 416, 1238, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 1230, 1239, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 1185, 1184, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 1241, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 1242, 481, 469, 1124, 282,
	0, 483, 484, 485, 1147, 1195, 486, 1209, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 1244, 498, 1245, 1224, 499,
	500, 1134, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 1225, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 1205, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 1246, 554, 555, 556, 557, 558, 1135, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	1188, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 1203, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 1250,
	601, 602, 603, 604, 1226, 608, 609, 0, 610, 611,
	1121, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 1215, 1216, 1217, 1218, 0, 630,
	0, 621, 622, 623, 624, 1227, 625, 1228, 1145, 626,
	627, 628, 629, 0, 4916, 632, 0, 1128, 633, 634,
	635, 637, 638, 636, 639, 1189, 640, 0, 0, 641,
	642, 643, 702, 1212, 1249, 0, 645, 644, 646, 647,
	705, 648, 649, 0, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 1111, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1118, 1119, 0, 283, 285, 284, 286,
	287, 288, 289, 1151, 290, 291, 0, 1149, 0, 0,
	0, 1191, 0, 0, 0, 0, 292, 293, 1231, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 1190, 0, 308, 661, 662, 663, 0, 309, 310,
	1197, 0, 1178, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187, 1183,
	1182, 1186, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 1222, 1223, 374, 0, 280, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 1233, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 1229, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 1192, 1193, 1196, 487, 1235, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 0, 1234, 411, 678, 679, 0, 680,
	0, 412, 413, 1236, 1194, 1237, 414, 415, 416, 1238,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	1275, 424, 426, 425, 0, 427, 1230, 1239, 428, 429,
	1240, 0, 430, 431, 432, 433, 434, 435, 438, 1185,
	1184, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	1241, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 1242, 481,
	469, 0, 282, 1243, 483, 484, 485, 0, 1195, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 1281,
	493, 494, 495, 0, 0, 496, 497, 685, 1244, 498,
	1245, 1224, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 1225, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 1246, 554, 555, 556, 557,
	558, 692, 1283, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 242, 576, 577, 575,
	578, 579, 580, 1188, 581, 582, 564, 565, 583, 584,
	1247, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 1226, 608, 609,
	0, 610, 611, 0, 607, 598, 244, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 1227, 625,
	1228, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 1189, 640,
	0, 0, 641, 642, 643, 1669, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 0, 0, 0, 236,
	650, 651, 706, 652, 653, 654, 1289, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 1279, 0, 2026, 0, 1191, 0,
	0, 0, 0, 292, 293, 1231, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 1190, 0,
	308, 661, 662, 663, 0, 309, 310, 1197, 0, 1178,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 1232, 333,
	334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 1222,
	1223, 374, 0, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 1233, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	1229, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	1192, 1193, 1196, 487, 1235, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 1234, 411, 678, 679, 0, 680, 0, 412, 413,
	1236, 1194, 1237, 414, 415, 416, 1238, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 1275, 424, 426,
	425, 0, 427, 1230, 1239, 428, 429, 1240, 0, 430,
	431, 432, 433, 434, 435, 438, 1185, 1184, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 1241, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 1242, 481, 469, 0, 282,
	1243, 483, 484, 485, 0, 1195, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 1281, 493, 494, 495,
	0, 0, 496, 497, 685, 1244, 498, 1245, 1224, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 1225, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 1246, 554, 555, 556, 557, 558, 692, 1283,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 242, 576, 577, 575, 578, 579, 580,
	1188, 581, 582, 564, 565, 583, 584, 1247, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 1226, 608, 609, 0, 610, 611,
	0, 607, 598, 244, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 1227, 625, 1228, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 1189, 640, 0, 0, 641,
	642, 643, 1669, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 0, 0, 0, 236, 650, 651, 706,
	652, 653, 654, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3443, 0, 1289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1279, 0, 2026, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 1191,
	0, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 1190,
	0, 308, 661, 662, 663, 0, 309, 310, 1197, 0,
	1178, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182, 1186,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	1222, 1223, 374, 0, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 1229, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 1192, 1193, 1196, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 1234, 411, 678, 679, 0, 680, 0, 412,
	413, 1236, 1194, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 1275, 424,
	426, 425, 0, 427, 1230, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 1185, 1184, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 0,
	282, 1243, 483, 484, 485, 0, 1195, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 1281, 493, 494,
	495, 0, 0, 496, 497, 685, 1244, 498, 1245, 1224,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 1225, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 692,
	1283, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 1188, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 1226, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 1227, 625, 1228, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 1189, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 1289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 0, 1277, 283, 285, 284, 286, 287,
	288, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	1191, 0, 0, 0, 0, 292, 293, 1231, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 0, 660, 302, 303, 304, 305, 306, 307, 0,
	1190, 0, 308, 661, 662, 663, 0, 309, 310, 1197,
	0, 1178, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	1232, 333, 334, 335, 1181, 1179, 1180, 1187, 1183, 1182,
	1186, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 0, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 1222, 1223, 374, 0, 280, 0, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 1233, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 1229, 0, 674, 395, 0, 396, 397, 398,
	399, 400, 1192, 1193, 1196, 487, 1235, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 281, 408,
	409, 410, 0, 1234, 411, 678, 679, 0, 680, 0,
	412, 413, 1236, 1194, 1237, 414, 415, 416, 1238, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 1275,
	424, 426, 425, 0, 427, 1230, 1239, 428, 429, 1240,
	0, 430, 431, 432, 433, 434, 435, 438, 1185, 1184,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 1241,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 1242, 481, 469,
	0, 282, 1243, 483, 484, 485, 0, 1195, 486, 684,
	488, 489, 0, 0, 490, 0, 491, 0, 1281, 493,
	494, 495, 0, 0, 496, 497, 685, 1244, 498, 1245,
	1224, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 1225, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 1246, 554, 555, 556, 557, 558,
	692, 1283, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 1188, 581, 582, 564, 565, 583, 584, 1247,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 1226, 608, 609, 0,
	610, 611, 0, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 696, 697, 698, 699,
	0, 630, 0, 621, 622, 623, 624, 1227, 625, 1228,
	0, 626, 627, 628, 629, 0, 631, 632, 0, 0,
	633, 634, 635, 637, 638, 636, 639, 1189, 640, 0,
	0, 641, 642, 643, 702, 703, 704, 0, 645, 644,
	646, 647, 705, 648, 649, 0, 0, 0, 0, 650,
	651, 706, 652, 653, 654, 1289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 1279, 0, 1277, 0, 1191, 0, 0,
	0, 0, 292, 293, 1231, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 1190, 0, 308,
	661, 662, 663, 0, 309, 310, 1197, 0, 1178, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 1232, 333, 334,
	335, 1181, 1179, 1180, 1187, 1183, 1182, 1186, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 1222, 1223,
	374, 0, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 1233, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 1229,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 1192,
	1193, 1196, 487, 1235, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	1234, 411, 678, 679, 0, 680, 0, 412, 413, 1236,
	1194, 1237, 414, 415, 416, 1238, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 1275, 424, 426, 425,
	0, 427, 1230, 1239, 428, 429, 1240, 0, 430, 431,
	432, 433, 434, 435, 438, 1185, 1184, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 1241, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 1242, 481, 469, 0, 282, 1243,
	483, 484, 485, 0, 1195, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 1281, 493, 494, 495, 0,
	0, 496, 497, 685, 1244, 498, 1245, 1224, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 1225, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 1246, 554, 555, 556, 557, 558, 692, 1283, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 1188,
	581, 582, 564, 565, 583, 584, 1247, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 1226, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 1227, 625, 1228, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 1189, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 0, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	1279, 0, 1277, 0, 1191, 0, 0, 0, 0, 292,
	293, 1231, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 1190, 0, 308, 661, 662, 663,
	0, 309, 310, 1197, 0, 1178, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 1232, 333, 334, 335, 1181, 1179,
	1180, 1187, 1183, 1182, 1186, 336, 337, 338, 339, 340,
	0, 341, 343, 665, 666, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 1222, 1223, 374, 0, 280,
	0, 0, 0, 0, 0, 375, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 1233,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 1229, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 1192, 1193, 1196, 487,
	1235, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 281, 408, 409, 410, 0, 1234, 411, 678,
	679, 0, 680, 0, 412, 413, 1236, 1194, 1237, 414,
	415, 416, 1238, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 1230,
	1239, 428, 429, 1240, 0, 430, 431, 432, 433, 434,
	435, 438, 1185, 1184, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 1241, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 1242, 481, 469, 0, 282, 1243, 483, 484, 485,
	0, 1195, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 1244, 498, 1245, 1224, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 1225, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 1246, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 1188, 581, 582, 564,
	565, 583, 584, 1247, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	1226, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 1227, 625, 1228, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 1189, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 0,
	0, 0, 0, 650, 651, 706, 652, 653, 654, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 4335,
	0, 1191, 0, 0, 0, 0, 292, 293, 1231, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 1190, 0, 308, 661, 662, 663, 0, 309, 310,
	1197, 0, 1178, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187, 1183,
	1182, 1186, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 1222, 1223, 374, 0, 280, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 1233, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 1229, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 1192, 1193, 1196, 487, 1235, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 0, 1234, 411, 678, 679, 0, 680,
	0, 412, 413, 1236, 1194, 1237, 414, 415, 416, 1238,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 1230, 1239, 428, 429,
	1240, 0, 430, 431, 432, 433, 434, 435, 438, 1185,
	1184, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	1241, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 1242, 481,
	469, 0, 282, 1243, 483, 484, 485, 0, 1195, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 1244, 498,
	1245, 1224, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 1225, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 1246, 554, 555, 556, 557,
	558, 692, 1283, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 1188, 581, 582, 564, 565, 583, 584,
	1247, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 1226, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 1227, 625,
	1228, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 1189, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 0, 277, 0, 0,
	650, 651, 706, 652, 653, 654, 0, 2639, 2640, 2641,
	2658, 2659, 2660, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 2661, 0, 655,
	0, 0, 0, 0, 292, 293, 1923, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	1908, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 2651,
	0, 319, 320, 321, 318, 322, 0, 323, 2647, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 0, 0, 2652, 2653, 2654, 2655,
	375, 376, 377, 670, 0, 0, 2646, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	2656, 2657, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 2649, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	0, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 2650, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 1907, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 1111, 0, 1551, 2636, 2637, 2638, 2662, 2648, 2642,
	0, 2644, 2645, 2643, 2630, 2631, 2632, 2633, 2634, 2635,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 1231, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 1515, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 1232, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	1233, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 1235, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 1234, 411,
	678, 679, 0, 680, 0, 412, 413, 1236, 681, 1237,
	414, 415, 416, 1238, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 1239, 428, 429, 1240, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 1241, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 1242, 481, 469, 0, 0, 1243, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 1244, 498, 1245, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 1246,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	242, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 1247, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	244, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 1669,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 236, 650, 651, 706, 652, 653, 654,
	0, 1666, 237, 1551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	197, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 1231, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 1515, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 1232, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	1233, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 1235, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 1234, 411,
	678, 679, 0, 680, 0, 412, 413, 1236, 681, 1237,
	414, 415, 416, 1238, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 1239, 428, 429, 1240, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 1241, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 1242, 481, 469, 0, 0, 1243, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 1244, 498, 1245, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 1246,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	242, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 1247, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	244, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 1669,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 236, 650, 651, 706, 652, 653, 654,
	1551, 1550, 237, 0, 0, 0, 1548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	197, 0, 655, 0, 0, 0, 0, 292, 293, 1231,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 1515, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 1232, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 1233, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 1235, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	0, 408, 409, 410, 0, 1234, 411, 678, 679, 0,
	680, 0, 412, 413, 1236, 681, 1237, 414, 415, 416,
	1238, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 1239, 428,
	429, 1240, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 1241, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 1242,
	481, 469, 0, 0, 1243, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 1244,
	498, 1245, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 1246, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 1247, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 0, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 1551, 1550, 0,
	0, 0, 0, 1548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 1693, 0, 655,
	0, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	1515, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 1234, 411, 678, 679, 0, 680, 0, 412,
	413, 1236, 681, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 0,
	0, 1243, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 1244, 498, 1245, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 1551, 1550, 0, 0, 0, 0,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 0, 290,
	291, 0, 0, 0, 3766, 0, 655, 0, 0, 0,
	0, 292, 293, 1231, 294, 295, 296, 297, 298, 299,
	656, 657, 0, 300, 658, 301, 659, 0, 660, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 661,
	662, 663, 0, 309, 310, 664, 0, 1515, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 1232, 333, 334, 335,
	0, 0, 0, 0, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 341, 343, 665, 666, 0, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 667, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 668, 669, 374,
	0, 280, 0, 0, 0, 0, 0, 375, 376, 377,
	670, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 1233, 382, 383, 384, 671, 672, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 673, 0,
	674, 395, 0, 396, 397, 398, 399, 400, 675, 676,
	677, 487, 1235, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 0, 408, 409, 410, 0, 1234,
	411, 678, 679, 0, 680, 0, 412, 413, 1236, 681,
	1237, 414, 415, 416, 1238, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 682, 1239, 428, 429, 1240, 0, 430, 431, 432,
	433, 434, 435, 438, 0, 0, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 1241, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 1242, 481, 469, 0, 0, 1243, 483,
	484, 485, 0, 683, 486, 684, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 1244, 498, 1245, 686, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	689, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 691, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 2401,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	1246, 554, 555, 556, 557, 558, 692, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 0, 581,
	582, 564, 565, 583, 584, 1247, 585, 586, 587, 588,
	589, 590, 591, 693, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 694, 601, 602,
	603, 604, 695, 608, 609, 0, 610, 611, 0, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 696, 697, 698, 699, 0, 630, 0, 621,
	622, 623, 624, 700, 625, 701, 0, 626, 627, 628,
	629, 0, 631, 632, 0, 0, 633, 634, 635, 637,
	638, 636, 639, 0, 640, 0, 0, 641, 642, 643,
	702, 703, 704, 0, 645, 644, 646, 647, 705, 648,
	649, 0, 0, 0, 0, 650, 651, 706, 652, 653,
	654, 1551, 2310, 0, 0, 0, 0, 2311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 1693, 0, 655, 0, 0, 0, 0, 292, 293,
	1231, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 0, 660, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 661, 662, 663, 0,
	309, 310, 664, 0, 1515, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 1232, 333, 334, 335, 0, 0, 0,
	0, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 0, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 0, 280, 0,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 1233, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 673, 0, 674, 395, 0,
	396, 397, 398, 399, 400, 675, 676, 677, 487, 1235,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 0, 408, 409, 410, 0, 1234, 411, 678, 679,
	0, 680, 0, 412, 413, 1236, 681, 1237, 414, 415,
	416, 1238, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 2309, 426, 425, 0, 427, 682, 1239,
	428, 429, 1240, 0, 430, 431, 432, 433, 434, 435,
	438, 0, 0, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 1241, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	1242, 481, 469, 0, 0, 1243, 483, 484, 485, 0,
	683, 486, 684, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	1244, 498, 1245, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 1246, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 0, 581, 582, 564, 565,
	583, 584, 1247, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 0, 610, 611, 0, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 696,
	697, 698, 699, 0, 630, 0, 621, 622, 623, 624,
	700, 625, 701, 0, 626, 627, 628, 629, 0, 631,
	632, 0, 0, 633, 634, 635, 637, 638, 636, 639,
	0, 640, 0, 0, 641, 642, 643, 702, 703, 704,
	0, 645, 644, 646, 647, 705, 648, 649, 0, 0,
	0, 0, 650, 651, 706, 652, 653, 654, 1551, 1550,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 285, 284, 286, 287,
	288, 289, 0, 290, 291, 0, 0, 0, 1693, 0,
	655, 0, 0, 0, 0, 292, 293, 1231, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 0, 660, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 661, 662, 663, 0, 309, 310, 664,
	0, 1515, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	1232, 333, 334, 335, 0, 0, 0, 0, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 0, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 0, 280, 0, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 1233, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 673, 0, 674, 395, 0, 396, 397, 398,
	399, 400, 675, 676, 677, 487, 1235, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 0, 408,
	409, 410, 0, 1234, 411, 678, 679, 0, 680, 0,
	412, 413, 1236, 681, 1237, 414, 415, 416, 1238, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 682, 1239, 428, 429, 1240,
	0, 430, 431, 432, 433, 434, 435, 438, 0, 0,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 1241,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 1242, 481, 469,
	0, 0, 1243, 483, 484, 485, 0, 683, 486, 684,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 1244, 498, 1245,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 1246, 554, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 0, 581, 582, 564, 565, 583, 584, 1247,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 0,
	610, 611, 0, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 696, 697, 698, 699,
	0, 630, 0, 621, 622, 623, 624, 700, 625, 701,
	0, 626, 627, 628, 629, 0, 631, 632, 0, 0,
	633, 634, 635, 637, 638, 636, 639, 0, 640, 0,
	0, 641, 642, 643, 702, 703, 704, 0, 645, 644,
	646, 647, 705, 648, 649, 0, 0, 0, 0, 650,
	651, 706, 652, 653, 654, 1111, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 1675, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	0, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 242, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 244, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 1669, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 277, 0, 236, 650, 651,
	706, 652, 653, 654, 0, 0, 237, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 292, 293, 197, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	661, 662, 663, 0, 309, 310, 664, 0, 0, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 0, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 0, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 0, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 673,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 675,
	676, 677, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	0, 411, 678, 679, 0, 680, 0, 412, 413, 0,
	681, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 682, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 282, 0,
	483, 484, 485, 0, 683, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 0, 498, 0, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 554, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 0,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 700, 625, 701, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 0, 277, 3190, 0, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 2040, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 0, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	1289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	5084, 0, 1191, 0, 0, 0, 0, 292, 293, 1231,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 1190, 0, 308, 661, 662, 663, 0, 309,
	310, 1197, 0, 1178, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 1232, 333, 334, 335, 1181, 1179, 1180, 1187,
	1183, 1182, 1186, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 1222, 1223, 374, 0, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 1233, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 1229, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 1192, 1193, 1196, 487, 1235, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 1234, 411, 678, 679, 0,
	680, 0, 412, 413, 1236, 1194, 1237, 414, 415, 416,
	1238, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 1230, 1239, 428,
	429, 1240, 0, 430, 431, 432, 433, 434, 435, 438,
	1185, 1184, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 1241, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 1242,
	481, 469, 0, 282, 1243, 483, 484, 485, 0, 1195,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 1244,
	498, 1245, 1224, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 1225, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 1246, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 1188, 581, 582, 564, 565, 583,
	584, 1247, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 1226, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 1227,
	625, 1228, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 1189,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 277, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	282, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 0, 277, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 3716, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 282,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	0, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 0, 0, 277, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 1663, 292, 293, 0, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	661, 662, 663, 0, 309, 310, 664, 0, 0, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 0, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 0, 0, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 0, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 673,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 675,
	676, 677, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 0, 408, 409, 410, 0,
	0, 411, 678, 679, 0, 680, 0, 412, 413, 0,
	681, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 682, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 0, 0,
	483, 484, 485, 0, 683, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 0, 498, 0, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 554, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 0,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 700, 625, 701, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 0, 277, 0, 0, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 3178, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 0, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 277, 0, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 292, 293,
	3875, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 0, 660, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 661, 662, 663, 0,
	309, 310, 664, 0, 0, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 0, 333, 334, 335, 0, 0, 0,
	0, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 0, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 0, 0, 0,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 0, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 673, 0, 674, 395, 0,
	396, 397, 398, 399, 400, 675, 676, 677, 487, 0,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 0, 408, 409, 410, 0, 0, 411, 678, 679,
	0, 680, 0, 412, 413, 0, 681, 0, 414, 415,
	416, 0, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 682, 0,
	428, 429, 0, 0, 430, 431, 432, 433, 434, 435,
	438, 0, 0, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 0, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	0, 481, 469, 0, 0, 0, 483, 484, 485, 0,
	683, 486, 684, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	0, 498, 0, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 0, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 0, 581, 582, 564, 565,
	583, 584, 0, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 0, 610, 611, 0, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 696,
	697, 698, 699, 0, 630, 0, 621, 622, 623, 624,
	700, 625, 701, 0, 626, 627, 628, 629, 0, 631,
	632, 0, 0, 633, 634, 635, 637, 638, 636, 639,
	0, 640, 0, 0, 641, 642, 643, 702, 703, 704,
	0, 645, 644, 646, 647, 705, 648, 649, 0, 0,
	0, 0, 650, 651, 706, 652, 653, 654, 936, 0,
	836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 2388, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 843, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 933, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 282, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 935, 0, 607, 598, 841, 612, 613,
	614, 615, 616, 842, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 2085, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 846,
	0, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 0, 2091, 0, 300, 2081, 301, 2097,
	0, 2104, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 2107, 2108, 0, 0, 309, 310, 0, 0,
	1515, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 1214, 341, 343, 2095, 2094,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 1199, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 0, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 2093, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 2102, 2103,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 0, 0, 0, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 1234, 411, 2088, 2089, 0, 2084, 0, 412,
	413, 1236, 0, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 0, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 0,
	0, 1243, 483, 484, 485, 0, 0, 486, 2096, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 0, 1244, 498, 1245, 0,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 2078, 512, 513, 514, 2079,
	515, 516, 517, 0, 518, 0, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 2092,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 0,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 2090, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	2106, 601, 602, 603, 604, 0, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 2098, 2099, 2100, 2101, 0,
	630, 0, 621, 622, 623, 624, 0, 625, 0, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 0, 2082, 2105, 0, 645, 644, 646,
	647, 0, 648, 649, 0, 0, 0, 0, 650, 651,
	0, 652, 653, 654, 836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 3995, 290,
	291, 0, 0, 0, 0, 0, 655, 0, 2072, 0,
	0, 292, 293, 0, 294, 295, 296, 297, 298, 299,
	656, 657, 0, 300, 658, 301, 659, 0, 660, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 661,
	662, 663, 0, 309, 310, 664, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	0, 0, 0, 0, 0, 0, 0, 336, 337, 338,
	843, 340, 0, 341, 343, 665, 666, 0, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 667, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 668, 669, 374,
	0, 280, 0, 0, 0, 0, 0, 375, 376, 377,
	670, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 0, 382, 383, 384, 671, 672, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 673, 0,
	674, 395, 0, 396, 397, 398, 399, 400, 675, 676,
	677, 487, 0, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 281, 408, 409, 410, 0, 0,
	411, 678, 679, 0, 680, 0, 412, 413, 0, 681,
	0, 414, 415, 416, 0, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 682, 0, 428, 429, 0, 0, 430, 431, 432,
	433, 434, 435, 438, 0, 0, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 0, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 0, 481, 469, 0, 282, 0, 483,
	484, 485, 0, 683, 486, 684, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 0, 498, 0, 686, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	689, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 691, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	0, 554, 555, 556, 557, 558, 692, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 3994, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 0, 581,
	582, 564, 565, 583, 584, 0, 585, 586, 587, 588,
	589, 590, 591, 693, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 694, 601, 602,
	603, 604, 695, 608, 609, 0, 610, 611, 0, 607,
	598, 841, 612, 613, 614, 615, 616, 842, 618, 619,
	0, 620, 696, 697, 698, 699, 0, 630, 0, 621,
	622, 623, 624, 700, 625, 701, 0, 626, 627, 3993,
	629, 0, 631, 632, 0, 0, 633, 634, 635, 637,
	638, 636, 639, 0, 640, 0, 0, 641, 642, 643,
	702, 703, 704, 0, 645, 644, 646, 647, 705, 648,
	649, 0, 836, 0, 0, 650, 651, 706, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 2112, 290, 291, 0,
	0, 0, 0, 846, 655, 0, 0, 0, 0, 292,
	293, 0, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 661, 662, 663,
	0, 309, 310, 664, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 0, 336, 337, 338, 843, 340,
	0, 341, 343, 665, 666, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 668, 669, 374, 0, 280,
	0, 0, 0, 0, 0, 375, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 0,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 673, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 675, 676, 677, 487,
	0, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 281, 408, 409, 410, 0, 0, 411, 678,
	679, 0, 680, 0, 412, 413, 0, 681, 0, 414,
	415, 416, 0, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 682,
	0, 428, 429, 0, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 0, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 0, 481, 469, 0, 282, 0, 483, 484, 485,
	0, 683, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 0, 498, 0, 686, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 689, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 0, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 2111, 571, 572, 573, 574, 0,
	2113, 577, 575, 578, 579, 580, 0, 581, 582, 564,
	565, 583, 584, 0, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	695, 608, 609, 0, 610, 611, 0, 607, 598, 841,
	612, 613, 614, 615, 616, 842, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 700, 625, 701, 0, 626, 627, 2110, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 0,
	836, 0, 0, 650, 651, 706, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 2063, 290, 291, 0, 0, 0,
	0, 846, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 843, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 282, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 2062, 571, 572, 573, 574, 0, 2064, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 841, 612, 613,
	614, 615, 616, 842, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 2061, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 834, 0, 836,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 846,
	0, 655, 0, 0, 0, 0, 292, 293, 0, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 663, 0, 309, 310,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 843, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 280, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 435, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 282, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 841, 612, 613, 614,
	615, 616, 842, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 0, 836, 0, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 846, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 843, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	282, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 841, 612, 613, 614, 615, 616,
	842, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 0, 836, 0, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 846, 655, 0, 0,
	0, 0, 292, 293, 0, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	661, 662, 663, 0, 309, 310, 664, 0, 0, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 0, 336, 337,
	338, 843, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 0, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 0, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 673,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 675,
	676, 677, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	0, 411, 678, 679, 0, 680, 0, 412, 413, 0,
	681, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 682, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 282, 0,
	483, 484, 485, 0, 683, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 0, 498, 0, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 2440, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 2441, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 0,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 0, 610, 611, 0,
	607, 598, 841, 612, 613, 614, 615, 616, 842, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 700, 625, 701, 0, 626, 627,
	2442, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 0, 277, 0, 0, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 846, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 282, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 1551, 1550, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 846, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 292, 293, 1231, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 1515,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 1232, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 1233, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 1235, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 0, 408, 409, 410,
	0, 1234, 411, 678, 679, 0, 680, 0, 412, 413,
	1236, 681, 1237, 414, 415, 416, 1238, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 1239, 428, 429, 1240, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 1241, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 1242, 481, 469, 0, 0,
	1243, 483, 484, 485, 4089, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 1244, 498, 1245, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 1246, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	0, 581, 582, 564, 565, 583, 584, 1247, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 0, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 1551, 1550, 0, 0, 0, 0, 1548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 1231, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 1515, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 1232, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	1233, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 1235, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 1234, 411,
	678, 679, 0, 680, 0, 412, 413, 1236, 681, 1237,
	414, 415, 416, 1238, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 1239, 428, 429, 1240, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 1241, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 1242, 481, 469, 0, 0, 1243, 483, 484,
	485, 3666, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 1244, 498, 1245, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 1246,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 1247, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	0, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	1724, 0, 1551, 1550, 0, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 292,
	293, 1231, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 661, 662, 663,
	0, 309, 310, 664, 0, 1515, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 1232, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 341, 343, 665, 666, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 668, 669, 374, 0, 280,
	0, 0, 0, 0, 0, 1723, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 1233,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 673, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 675, 676, 677, 487,
	1235, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 0, 408, 409, 410, 0, 1234, 411, 678,
	679, 0, 680, 0, 412, 413, 1236, 681, 1237, 414,
	415, 416, 1238, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 682,
	1239, 428, 429, 1240, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 1241, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 1242, 481, 469, 0, 0, 1243, 483, 484, 485,
	0, 683, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 1244, 498, 1245, 686, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 689, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 1722, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 1246, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 1721, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 0, 581, 582, 564,
	565, 583, 584, 1247, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	695, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 700, 625, 701, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 0,
	0, 0, 0, 650, 651, 706, 652, 653, 654, 1596,
	0, 1551, 1550, 0, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 292, 293,
	1231, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 0, 660, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 661, 662, 663, 0,
	309, 310, 664, 0, 1515, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 1232, 333, 334, 335, 0, 0, 0,
	0, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 0, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 0, 280, 0,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 1233, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 673, 0, 674, 395, 0,
	396, 397, 398, 399, 400, 1598, 676, 677, 487, 1235,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 0, 408, 409, 410, 0, 1234, 411, 678, 679,
	0, 680, 0, 412, 413, 1236, 681, 1237, 414, 415,
	416, 1238, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 682, 1239,
	428, 429, 1240, 0, 430, 431, 432, 433, 434, 435,
	438, 0, 0, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 1241, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	1242, 481, 469, 0, 0, 1243, 483, 484, 485, 0,
	683, 486, 684, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	1244, 498, 1245, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 1246, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 0, 581, 582, 564, 565,
	583, 584, 1247, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 0, 610, 611, 0, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 696,
	697, 698, 699, 0, 630, 0, 621, 622, 623, 624,
	700, 625, 701, 0, 626, 627, 628, 629, 0, 631,
	632, 0, 0, 633, 634, 635, 637, 638, 636, 639,
	0, 640, 0, 0, 641, 642, 643, 702, 703, 704,
	0, 645, 644, 646, 647, 705, 648, 649, 0, 0,
	0, 0, 650, 651, 706, 652, 653, 654, 1546, 0,
	1551, 1550, 0, 0, 0, 0, 1548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 1231,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 1515, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 1232, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 1233, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 1235, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	0, 408, 409, 410, 0, 1234, 411, 678, 679, 0,
	680, 0, 412, 413, 1236, 681, 1237, 414, 415, 416,
	1238, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 1239, 428,
	429, 1240, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 1241, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 1242,
	481, 469, 0, 0, 1243, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 1244,
	498, 1245, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 1246, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 1247, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 0, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 1551, 1550, 0,
	0, 0, 0, 1548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 1231, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	1515, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 1232,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 1233, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 1235, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 1234, 411, 678, 679, 0, 680, 0, 412,
	413, 1236, 681, 1237, 414, 415, 416, 1238, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 1239, 428, 429, 1240, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 1241, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 1242, 481, 469, 0,
	0, 1243, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 1244, 498, 1245, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 1246, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 1247, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 1551, 1550, 0, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 292, 293, 1231, 294, 295, 296, 297, 298, 299,
	656, 657, 0, 300, 658, 301, 659, 0, 660, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 661,
	662, 663, 0, 309, 310, 664, 0, 1515, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 1232, 333, 334, 335,
	0, 0, 0, 0, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 341, 343, 665, 666, 0, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 667, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 668, 669, 374,
	0, 280, 0, 0, 0, 0, 0, 375, 376, 377,
	670, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 1233, 382, 383, 384, 671, 672, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 673, 0,
	674, 395, 0, 396, 397, 398, 399, 400, 675, 676,
	677, 487, 1235, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 0, 408, 409, 410, 0, 1234,
	411, 678, 679, 0, 680, 0, 412, 413, 1236, 681,
	1237, 414, 415, 416, 1238, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 682, 1239, 428, 429, 1240, 0, 430, 431, 432,
	433, 434, 435, 438, 0, 0, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 1241, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 1242, 481, 469, 0, 0, 1243, 483,
	484, 485, 0, 683, 486, 684, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 1244, 498, 1245, 686, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	689, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 691, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	1246, 554, 555, 556, 557, 558, 692, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 0, 581,
	582, 564, 565, 583, 584, 1247, 585, 586, 587, 588,
	589, 590, 591, 693, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 694, 601, 602,
	603, 604, 695, 608, 609, 0, 610, 611, 0, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 696, 697, 698, 699, 0, 630, 0, 621,
	622, 623, 624, 700, 625, 701, 0, 626, 627, 628,
	629, 0, 631, 632, 0, 0, 633, 634, 635, 637,
	638, 636, 639, 0, 640, 0, 0, 641, 642, 643,
	702, 703, 704, 0, 645, 644, 646, 647, 705, 648,
	649, 1551, 0, 0, 0, 650, 651, 706, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 292, 293,
	1231, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 0, 660, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 661, 662, 663, 0,
	309, 310, 664, 0, 1515, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 1232, 333, 334, 335, 0, 0, 0,
	0, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 0, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 0, 280, 0,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 1233, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 673, 0, 674, 395, 0,
	396, 397, 398, 399, 400, 675, 676, 677, 487, 1235,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 0, 408, 409, 410, 0, 1234, 411, 678, 679,
	0, 680, 0, 412, 413, 1236, 681, 1237, 414, 415,
	416, 1238, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 682, 1239,
	428, 429, 1240, 0, 430, 431, 432, 433, 434, 435,
	438, 0, 0, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 1241, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	1242, 481, 469, 0, 0, 1243, 483, 484, 485, 0,
	683, 486, 684, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	1244, 498, 1245, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 1246, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 0, 581, 582, 564, 565,
	583, 584, 1247, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 0, 610, 611, 0, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 696,
	697, 698, 699, 0, 630, 0, 621, 622, 623, 624,
	700, 625, 701, 0, 626, 627, 628, 629, 0, 631,
	632, 0, 0, 633, 634, 635, 637, 638, 636, 639,
	0, 640, 0, 0, 641, 642, 643, 702, 703, 704,
	0, 645, 644, 646, 647, 705, 648, 649, 277, 0,
	0, 0, 650, 651, 706, 652, 653, 654, 0, 0,
	0, 0, 0, 0, 0, 283, 285, 284, 286, 287,
	288, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 292, 293, 0, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 0, 660, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 661, 662, 663, 2967, 309, 310, 664,
	0, 0, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 3708, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 0, 0, 0, 0, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 0, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 2971, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 0, 3707, 0, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 0,
	379, 380, 381, 2970, 0, 0, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 673, 0, 674, 395, 0, 396, 397, 398,
	399, 400, 675, 676, 677, 487, 0, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 3704, 408,
	409, 410, 0, 0, 411, 678, 679, 0, 680, 0,
	412, 3706, 0, 681, 0, 414, 415, 416, 0, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 682, 0, 428, 429, 3703,
	0, 430, 431, 432, 433, 434, 435, 438, 0, 0,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 0,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 0, 481, 469,
	0, 0, 0, 483, 484, 485, 0, 683, 486, 684,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 0, 498, 0,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 2969,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 0, 554, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 0, 581, 582, 564, 565, 583, 584, 0,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 0,
	610, 611, 0, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 696, 697, 698, 699,
	0, 630, 0, 621, 622, 623, 624, 700, 625, 701,
	0, 626, 627, 628, 629, 0, 631, 632, 0, 3705,
	633, 634, 635, 637, 638, 636, 639, 0, 640, 0,
	0, 641, 642, 643, 702, 703, 704, 0, 645, 644,
	646, 647, 705, 648, 649, 277, 0, 0, 0, 650,
	651, 706, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 292, 293, 0, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	661, 662, 663, 2967, 309, 310, 664, 0, 0, 2961,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 2963, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 0, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 2971, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 0, 0, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	2970, 0, 0, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 673,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 2960,
	676, 677, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 0, 408, 409, 410, 0,
	0, 411, 678, 679, 0, 680, 0, 412, 413, 0,
	681, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 682, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 0, 0,
	483, 484, 485, 0, 683, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 0, 498, 0, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 2969, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 554, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 0,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 700, 625, 701, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 2968, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 1803, 0, 277, 0, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 1802, 290,
	291, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 292, 293, 0, 294, 295, 296, 297, 298, 299,
	656, 657, 0, 300, 658, 301, 659, 0, 660, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 661,
	662, 663, 0, 309, 310, 664, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	0, 0, 0, 0, 0, 0, 0, 336, 337, 338,
	1801, 340, 0, 341, 343, 665, 666, 0, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 667, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 668, 669, 374,
	0, 280, 0, 0, 0, 0, 0, 375, 376, 377,
	670, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 0, 382, 383, 384, 671, 672, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 673, 0,
	674, 395, 0, 396, 397, 398, 399, 400, 675, 676,
	677, 487, 0, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 281, 408, 409, 410, 0, 0,
	411, 678, 679, 0, 680, 0, 412, 413, 0, 681,
	0, 414, 415, 416, 0, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 682, 0, 428, 429, 0, 0, 430, 431, 432,
	433, 434, 435, 438, 0, 0, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 0, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 0, 481, 469, 0, 282, 0, 483,
	484, 485, 0, 683, 486, 684, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 0, 498, 0, 686, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	689, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 691, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	0, 554, 555, 556, 557, 558, 692, 559, 0, 560,
	561, 567, 568, 569, 1804, 563, 570, 571, 572, 573,
	574, 0, 1800, 577, 575, 578, 579, 580, 0, 581,
	582, 564, 565, 583, 584, 0, 585, 586, 587, 588,
	589, 590, 591, 693, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 694, 601, 602,
	603, 604, 695, 608, 609, 0, 610, 611, 0, 607,
	598, 1798, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 696, 697, 698, 699, 0, 630, 0, 621,
	622, 623, 624, 700, 625, 701, 0, 626, 627, 628,
	629, 0, 631, 632, 0, 0, 633, 634, 635, 637,
	638, 636, 639, 0, 640, 0, 0, 641, 642, 643,
	702, 703, 704, 0, 1799, 644, 646, 647, 705, 648,
	649, 1519, 0, 277, 0, 650, 651, 706, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 1521, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 282, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 1281, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	1516, 0, 277, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 292,
	293, 0, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 661, 662, 663,
	0, 309, 310, 664, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 341, 343, 665, 666, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 668, 669, 374, 0, 280,
	0, 0, 0, 0, 0, 375, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 0,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 673, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 1518, 676, 677, 487,
	0, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 281, 408, 409, 410, 0, 0, 411, 678,
	679, 0, 680, 0, 412, 413, 0, 681, 0, 414,
	415, 416, 0, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 682,
	0, 428, 429, 0, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 0, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 0, 481, 469, 0, 282, 0, 483, 484, 485,
	0, 683, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 1281, 493, 494, 495, 0, 0, 496, 497,
	685, 0, 498, 0, 686, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 689, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 0, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 0, 581, 582, 564,
	565, 583, 584, 0, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	695, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 700, 625, 701, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 1422,
	0, 277, 0, 650, 651, 706, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 292, 293,
	0, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 0, 660, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 661, 662, 663, 0,
	309, 310, 664, 0, 0, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 0, 333, 334, 335, 0, 0, 0,
	0, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 0, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 0, 280, 0,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 0, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 673, 0, 674, 395, 0,
	396, 397, 398, 399, 400, 1424, 676, 677, 487, 0,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 281, 408, 409, 410, 0, 0, 411, 678, 679,
	0, 680, 0, 412, 413, 0, 681, 0, 414, 415,
	416, 0, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 682, 0,
	428, 429, 0, 0, 430, 431, 432, 433, 434, 435,
	438, 0, 0, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 0, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	0, 481, 469, 0, 282, 0, 483, 484, 485, 0,
	683, 486, 684, 488, 489, 0, 0, 490, 0, 491,
	0, 1281, 493, 494, 495, 0, 0, 496, 497, 685,
	0, 498, 0, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 0, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 0, 581, 582, 564, 565,
	583, 584, 0, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 0, 610, 611, 0, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 696,
	697, 698, 699, 0, 630, 0, 621, 622, 623, 624,
	700, 625, 701, 0, 626, 627, 628, 629, 0, 631,
	632, 0, 0, 633, 634, 635, 637, 638, 636, 639,
	0, 640, 0, 0, 641, 642, 643, 702, 703, 704,
	0, 645, 644, 646, 647, 705, 648, 649, 739, 0,
	277, 0, 650, 651, 706, 652, 653, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 738, 288, 289, 727, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 730, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 0, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 736, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	0, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 0, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 732, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 726, 0, 277,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 727, 290, 291, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 292, 293, 0, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 663, 0, 309, 310,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 730, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 0, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 731, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 0,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 435, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 0, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 732, 576, 577, 575,
	578, 579, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 277, 0, 0, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	727, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 730, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 0, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 731, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 0, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 0,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 732, 576, 577, 575, 578, 579, 580,
	0, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 277, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 727, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 730, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 4099, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 0, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	732, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	277, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 282, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	1281, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 277, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 3609, 481, 469, 0,
	282, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 3148, 0, 277, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	3147, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 282,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	0, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 277, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 282, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	2346, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	2409, 0, 277, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 292,
	293, 0, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 661, 662, 663,
	0, 309, 310, 664, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 341, 343, 665, 666, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 668, 669, 374, 0, 280,
	0, 0, 0, 0, 0, 375, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 0,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 673, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 675, 676, 677, 487,
	0, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 281, 408, 409, 410, 0, 0, 411, 678,
	679, 0, 680, 0, 412, 413, 0, 681, 0, 414,
	415, 416, 0, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 682,
	0, 428, 429, 0, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 0, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 0, 481, 469, 0, 282, 0, 483, 484, 485,
	0, 683, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 0, 498, 0, 686, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 689, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 0, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 0, 581, 582, 564,
	565, 583, 584, 0, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	695, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 700, 625, 701, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 2353,
	0, 277, 0, 650, 651, 706, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 292, 293,
	0, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 0, 660, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 661, 662, 663, 0,
	309, 310, 664, 0, 0, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 0, 333, 334, 335, 0, 0, 0,
	0, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 0, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 0, 280, 0,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 0, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 673, 0, 674, 395, 0,
	396, 397, 398, 399, 400, 2352, 676, 677, 487, 0,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 281, 408, 409, 410, 0, 0, 411, 678, 679,
	0, 680, 0, 412, 413, 0, 681, 0, 414, 415,
	416, 0, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 682, 0,
	428, 429, 0, 0, 430, 431, 432, 433, 434, 435,
	438, 0, 0, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 0, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	0, 481, 469, 0, 282, 0, 483, 484, 485, 0,
	683, 486, 684, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	0, 498, 0, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 0, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 0, 581, 582, 564, 565,
	583, 584, 0, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 0, 610, 611, 0, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 696,
	697, 698, 699, 0, 630, 0, 621, 622, 623, 624,
	700, 625, 701, 0, 626, 627, 628, 629, 0, 631,
	632, 0, 0, 633, 634, 635, 637, 638, 636, 639,
	0, 640, 0, 0, 641, 642, 643, 702, 703, 704,
	0, 645, 644, 646, 647, 705, 648, 649, 2339, 0,
	277, 0, 650, 651, 706, 652, 653, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 2341, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 282, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 277, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 2303, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	282, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 1281, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 1641, 0, 277, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	1640, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 282,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	0, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 1539, 0, 277, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 292, 293, 0, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	661, 662, 663, 0, 309, 310, 664, 0, 0, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 0, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 0, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 0, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 673,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 675,
	676, 677, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	0, 411, 678, 679, 0, 680, 0, 412, 413, 0,
	681, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 682, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 282, 0,
	483, 484, 485, 0, 683, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 0, 498, 0, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 554, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 0,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 700, 625, 701, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 1532, 0, 277, 0, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 292, 293, 0, 294, 295, 296, 297, 298, 299,
	656, 657, 0, 300, 658, 301, 659, 0, 660, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 661,
	662, 663, 0, 309, 310, 664, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	0, 0, 0, 0, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 341, 343, 665, 666, 0, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 667, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 668, 669, 374,
	0, 280, 0, 0, 0, 0, 0, 375, 376, 377,
	670, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 0, 382, 383, 384, 671, 672, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 673, 0,
	674, 395, 0, 396, 397, 398, 399, 400, 1534, 676,
	677, 487, 0, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 281, 408, 409, 410, 0, 0,
	411, 678, 679, 0, 680, 0, 412, 413, 0, 681,
	0, 414, 415, 416, 0, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 682, 0, 428, 429, 0, 0, 430, 431, 432,
	433, 434, 435, 438, 0, 0, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 0, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 0, 481, 469, 0, 282, 0, 483,
	484, 485, 0, 683, 486, 684, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 0, 498, 0, 686, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	689, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 691, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	0, 554, 555, 556, 557, 558, 692, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 0, 581,
	582, 564, 565, 583, 584, 0, 585, 586, 587, 588,
	589, 590, 591, 693, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 694, 601, 602,
	603, 604, 695, 608, 609, 0, 610, 611, 0, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 696, 697, 698, 699, 0, 630, 0, 621,
	622, 623, 624, 700, 625, 701, 0, 626, 627, 628,
	629, 0, 631, 632, 0, 0, 633, 634, 635, 637,
	638, 636, 639, 0, 640, 0, 0, 641, 642, 643,
	702, 703, 704, 0, 645, 644, 646, 647, 705, 648,
	649, 1358, 0, 277, 0, 650, 651, 706, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 1357, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 282, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	1348, 0, 277, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 292,
	293, 0, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 661, 662, 663,
	0, 309, 310, 664, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 341, 343, 665, 666, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 668, 669, 374, 0, 280,
	0, 0, 0, 0, 0, 375, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 0,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 673, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 1347, 676, 677, 487,
	0, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 281, 408, 409, 410, 0, 0, 411, 678,
	679, 0, 680, 0, 412, 413, 0, 681, 0, 414,
	415, 416, 0, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 682,
	0, 428, 429, 0, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 0, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 0, 481, 469, 0, 282, 0, 483, 484, 485,
	0, 683, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 0, 498, 0, 686, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 689, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 0, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 0, 581, 582, 564,
	565, 583, 584, 0, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	695, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 700, 625, 701, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 1345,
	0, 277, 0, 650, 651, 706, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 292, 293,
	0, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 0, 660, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 661, 662, 663, 0,
	309, 310, 664, 0, 0, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 0, 333, 334, 335, 0, 0, 0,
	0, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 0, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 0, 280, 0,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 0, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 673, 0, 674, 395, 0,
	396, 397, 398, 399, 400, 1344, 676, 677, 487, 0,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 281, 408, 409, 410, 0, 0, 411, 678, 679,
	0, 680, 0, 412, 413, 0, 681, 0, 414, 415,
	416, 0, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 682, 0,
	428, 429, 0, 0, 430, 431, 432, 433, 434, 435,
	438, 0, 0, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 0, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	0, 481, 469, 0, 282, 0, 483, 484, 485, 0,
	683, 486, 684, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	0, 498, 0, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 0, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 0, 581, 582, 564, 565,
	583, 584, 0, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 0, 610, 611, 0, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 696,
	697, 698, 699, 0, 630, 0, 621, 622, 623, 624,
	700, 625, 701, 0, 626, 627, 628, 629, 0, 631,
	632, 0, 0, 633, 634, 635, 637, 638, 636, 639,
	0, 640, 0, 0, 641, 642, 643, 702, 703, 704,
	0, 645, 644, 646, 647, 705, 648, 649, 1340, 0,
	277, 0, 650, 651, 706, 652, 653, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 1339, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 282, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 708, 0, 277,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 292, 293, 0, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 663, 0, 309, 310,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 280, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 435, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 282, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 268, 0, 277, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 285, 284, 286, 287,
	288, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 292, 293, 0, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 0, 660, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 661, 662, 663, 0, 309, 310, 664,
	0, 0, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 0, 0, 0, 0, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 0, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 0, 280, 0, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 0, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 673, 0, 674, 395, 0, 396, 397, 398,
	399, 400, 675, 676, 677, 487, 0, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 281, 408,
	409, 410, 0, 0, 411, 678, 679, 0, 680, 0,
	412, 413, 0, 681, 0, 414, 415, 416, 0, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 682, 0, 428, 429, 0,
	0, 430, 431, 432, 433, 434, 435, 438, 0, 0,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 0,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 0, 481, 469,
	0, 282, 0, 483, 484, 485, 0, 683, 486, 684,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 0, 498, 0,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 0, 554, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 0, 581, 582, 564, 565, 583, 584, 0,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 0,
	610, 611, 0, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 696, 697, 698, 699,
	0, 630, 0, 621, 622, 623, 624, 700, 625, 701,
	0, 626, 627, 628, 629, 0, 631, 632, 0, 0,
	633, 634, 635, 637, 638, 636, 639, 0, 640, 0,
	0, 641, 642, 643, 702, 703, 704, 0, 645, 644,
	646, 647, 705, 648, 649, 277, 0, 0, 0, 650,
	651, 706, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 292, 293, 0, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	661, 662, 663, 0, 309, 310, 664, 0, 0, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 0, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 0, 280, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 0, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 673,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 675,
	676, 677, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 281, 408, 409, 410, 0,
	0, 411, 678, 679, 0, 680, 0, 412, 413, 0,
	681, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 682, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 282, 0,
	483, 484, 485, 0, 683, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 0, 498, 0, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 554, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 0,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 700, 625, 701, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 277, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 292,
	293, 0, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 661, 662, 663,
	0, 309, 310, 664, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	730, 330, 331, 332, 0, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 341, 343, 665, 666, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 668, 669, 374, 0, 0,
	0, 0, 0, 0, 0, 375, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 0,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 731, 394, 673, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 675, 676, 677, 487,
	0, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 0, 408, 409, 410, 0, 0, 411, 678,
	679, 0, 680, 0, 412, 413, 0, 681, 0, 414,
	415, 416, 0, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 682,
	0, 428, 429, 0, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 0, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 0, 481, 469, 0, 0, 0, 483, 484, 485,
	0, 683, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 0, 498, 0, 686, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 689, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 0, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 732,
	576, 577, 575, 578, 579, 580, 0, 581, 582, 564,
	565, 583, 584, 0, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	695, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 700, 625, 701, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 277,
	0, 0, 0, 650, 651, 706, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 292, 293, 0, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 663, 0, 309, 310,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 2449, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 280, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 281,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 435, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 282, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 277, 0, 0, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 2447, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 280, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 281, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 282,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	0, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 277, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 2445,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	280, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 281, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 282, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	277, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 280, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 2359, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	281, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 282, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 277, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 280, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 2137, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 281, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	282, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 277, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 292, 293, 0, 294, 295, 296, 297, 298, 299,
	656, 657, 0, 300, 658, 301, 659, 0, 660, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 661,
	662, 663, 0, 309, 310, 664, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	0, 0, 0, 0, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 341, 343, 665, 666, 0, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 667, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 668, 669, 374,
	0, 280, 0, 0, 0, 0, 0, 375, 376, 377,
	670, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 0, 382, 383, 384, 671, 672, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 673, 0,
	674, 395, 0, 396, 397, 398, 399, 400, 2131, 676,
	677, 487, 0, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 281, 408, 409, 410, 0, 0,
	411, 678, 679, 0, 680, 0, 412, 413, 0, 681,
	0, 414, 415, 416, 0, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 682, 0, 428, 429, 0, 0, 430, 431, 432,
	433, 434, 435, 438, 0, 0, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 0, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 0, 481, 469, 0, 282, 0, 483,
	484, 485, 0, 683, 486, 684, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 0, 498, 0, 686, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	689, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 691, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	0, 554, 555, 556, 557, 558, 692, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 0, 581,
	582, 564, 565, 583, 584, 0, 585, 586, 587, 588,
	589, 590, 591, 693, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 694, 601, 602,
	603, 604, 695, 608, 609, 0, 610, 611, 0, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 696, 697, 698, 699, 0, 630, 0, 621,
	622, 623, 624, 700, 625, 701, 0, 626, 627, 628,
	629, 0, 631, 632, 0, 0, 633, 634, 635, 637,
	638, 636, 639, 0, 640, 0, 0, 641, 642, 643,
	702, 703, 704, 0, 645, 644, 646, 647, 705, 648,
	649, 920, 0, 277, 0, 650, 651, 706, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 919, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 0, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	918, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	277, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 3707, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	0, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 0, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 4418, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 1386, 0, 277,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 292, 293, 1389, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 1387, 0, 309, 310,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 0, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 0,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 435, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 799,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 0, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 798, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 797, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 1390, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 795, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 1386, 0, 277, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 285, 284, 286, 287,
	288, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 292, 293, 1389, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 0, 660, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 661, 662, 1387, 0, 309, 310, 664,
	0, 0, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 0, 0, 0, 0, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 0, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 0, 0, 0, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 0, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 673, 0, 674, 395, 0, 396, 397, 398,
	399, 400, 675, 676, 677, 487, 0, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 0, 408,
	409, 410, 0, 0, 411, 678, 679, 0, 680, 0,
	412, 413, 0, 681, 0, 414, 415, 416, 0, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 682, 0, 428, 429, 0,
	0, 430, 431, 432, 433, 434, 435, 438, 0, 0,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 799, 0,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 0, 481, 469,
	0, 0, 0, 483, 484, 485, 0, 683, 486, 684,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 0, 498, 0,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 0, 798, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	797, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	1390, 580, 0, 581, 582, 564, 565, 583, 584, 0,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 0,
	610, 611, 0, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 795, 697, 698, 699,
	0, 630, 0, 621, 1388, 623, 624, 700, 625, 701,
	0, 626, 627, 628, 629, 0, 631, 632, 0, 0,
	633, 634, 635, 637, 638, 636, 639, 0, 640, 0,
	0, 641, 642, 643, 702, 703, 704, 0, 645, 644,
	646, 647, 705, 648, 649, 717, 0, 277, 0, 650,
	651, 706, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 716, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	0, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 715, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 277, 3190, 0, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 292, 293, 0, 294, 295, 296, 297, 298, 299,
	656, 657, 0, 300, 658, 301, 659, 0, 660, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 661,
	662, 663, 0, 309, 310, 664, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	0, 0, 0, 0, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 341, 343, 665, 666, 0, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 667, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 668, 669, 374,
	0, 0, 0, 0, 0, 0, 0, 375, 376, 377,
	670, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 0, 382, 383, 384, 671, 672, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 673, 0,
	674, 395, 0, 396, 397, 398, 399, 400, 675, 676,
	677, 487, 0, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 0, 408, 409, 410, 0, 0,
	411, 678, 679, 0, 680, 0, 412, 413, 0, 681,
	0, 414, 415, 416, 0, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 682, 0, 428, 429, 0, 0, 430, 431, 432,
	433, 434, 435, 438, 0, 0, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 0, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 0, 481, 469, 0, 0, 0, 483,
	484, 485, 0, 683, 486, 684, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 0, 498, 0, 686, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	689, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 691, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	0, 554, 555, 556, 557, 558, 692, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 0, 581,
	582, 564, 565, 583, 584, 0, 585, 586, 587, 588,
	589, 590, 591, 693, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 694, 601, 602,
	603, 604, 695, 608, 609, 0, 610, 611, 0, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 696, 697, 698, 699, 0, 630, 0, 621,
	622, 623, 624, 700, 625, 701, 0, 626, 627, 628,
	629, 0, 631, 632, 0, 0, 633, 634, 635, 637,
	638, 636, 639, 0, 640, 0, 0, 641, 642, 643,
	702, 703, 704, 0, 645, 644, 646, 647, 705, 648,
	649, 277, 0, 0, 0, 650, 651, 706, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 292, 293,
	0, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 0, 660, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 661, 662, 663, 0,
	309, 310, 664, 0, 0, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 0, 333, 334, 335, 0, 0, 0,
	0, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 0, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 0, 0, 0,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 0, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 673, 0, 674, 395, 0,
	396, 397, 398, 399, 400, 675, 676, 677, 487, 0,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 0, 408, 409, 410, 0, 0, 411, 678, 679,
	0, 680, 0, 412, 413, 0, 681, 0, 414, 415,
	416, 0, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 682, 0,
	428, 429, 0, 0, 430, 431, 432, 433, 434, 435,
	438, 0, 0, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 0, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	0, 481, 469, 0, 0, 0, 483, 484, 485, 0,
	683, 486, 684, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	0, 498, 0, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 4714, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 0, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 0, 581, 582, 564, 565,
	583, 584, 0, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 0, 610, 611, 0, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 696,
	697, 698, 699, 0, 630, 0, 621, 622, 623, 624,
	700, 625, 701, 0, 626, 627, 628, 629, 0, 631,
	632, 0, 0, 633, 634, 635, 637, 638, 636, 639,
	0, 640, 0, 0, 641, 642, 643, 702, 703, 704,
	0, 645, 644, 646, 647, 705, 648, 649, 277, 3550,
	0, 0, 650, 651, 706, 652, 653, 654, 0, 0,
	0, 0, 0, 0, 0, 283, 285, 284, 286, 287,
	288, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 292, 293, 0, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 0, 660, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 661, 662, 663, 0, 309, 310, 664,
	0, 0, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 0, 0, 0, 0, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 0, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 0, 0, 0, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 0, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 673, 0, 674, 395, 0, 396, 397, 398,
	399, 400, 675, 676, 677, 487, 0, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 0, 408,
	409, 410, 0, 0, 411, 678, 679, 0, 680, 0,
	412, 413, 0, 681, 0, 414, 415, 416, 0, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 682, 0, 428, 429, 0,
	0, 430, 431, 432, 433, 434, 435, 438, 0, 0,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 0,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 0, 481, 469,
	0, 0, 0, 483, 484, 485, 0, 683, 486, 684,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 0, 498, 0,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 0, 554, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 0, 581, 582, 564, 565, 583, 584, 0,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 0,
	610, 611, 0, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 696, 697, 698, 699,
	0, 630, 0, 621, 622, 623, 624, 700, 625, 701,
	0, 626, 627, 628, 629, 0, 631, 632, 0, 0,
	633, 634, 635, 637, 638, 636, 639, 0, 640, 0,
	0, 641, 642, 643, 702, 703, 704, 0, 645, 644,
	646, 647, 705, 648, 649, 277, 0, 0, 0, 650,
	651, 706, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 292, 293, 0, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	661, 662, 663, 0, 309, 310, 664, 0, 0, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 0, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 0, 0, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 0, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 673,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 675,
	676, 677, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 0, 408, 409, 410, 0,
	0, 411, 678, 679, 0, 680, 0, 412, 413, 0,
	681, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 682, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 0, 0,
	483, 484, 485, 0, 683, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 0, 498, 0, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 4307, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 554, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 0,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 700, 625, 701, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 277, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 292,
	293, 0, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 661, 662, 663,
	0, 309, 310, 664, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 341, 343, 665, 666, 4049, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 668, 669, 374, 0, 0,
	0, 0, 0, 0, 0, 375, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 0,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 673, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 675, 676, 677, 487,
	0, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 0, 408, 409, 410, 0, 0, 411, 678,
	679, 0, 680, 0, 412, 413, 0, 681, 0, 414,
	415, 416, 0, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 682,
	0, 428, 429, 0, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 0, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 0, 481, 469, 0, 0, 0, 483, 484, 485,
	0, 683, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 0, 498, 0, 686, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 689, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 0, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 0, 581, 582, 564,
	565, 583, 584, 0, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	695, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 700, 625, 701, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 277,
	0, 0, 0, 650, 651, 706, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 0,
	0, 655, 0, 2847, 0, 0, 292, 293, 0, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 663, 0, 309, 310,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 0, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 0,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 435, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 0, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 277, 3190, 0, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 0, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 0, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 0,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 3187,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	0, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 277, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 0, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 2256, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	798, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 797, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 795, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	277, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 2419, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 0, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	0, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 0, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 2407, 0, 277,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 292, 293, 0, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 663, 0, 309, 310,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 0, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 0,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 435, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 0, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 1697, 0, 277, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 285, 284, 286, 287,
	288, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 292, 293, 0, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 0, 660, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 661, 662, 663, 0, 309, 310, 664,
	0, 0, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 0, 0, 0, 0, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 0, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 0, 0, 0, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 0, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 673, 0, 674, 395, 0, 396, 397, 398,
	399, 400, 675, 676, 677, 487, 0, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 0, 408,
	409, 410, 0, 0, 411, 678, 679, 0, 680, 0,
	412, 413, 0, 681, 0, 414, 415, 416, 0, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 682, 0, 428, 429, 0,
	0, 430, 431, 432, 433, 434, 435, 438, 0, 0,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 0,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 0, 481, 469,
	0, 0, 0, 483, 484, 485, 0, 683, 486, 684,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 0, 498, 0,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 0, 554, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 0, 581, 582, 564, 565, 583, 584, 0,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 0,
	610, 611, 0, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 696, 697, 698, 699,
	0, 630, 0, 621, 622, 623, 624, 700, 625, 701,
	0, 626, 627, 628, 629, 0, 631, 632, 0, 0,
	633, 634, 635, 637, 638, 636, 639, 0, 640, 0,
	0, 641, 642, 643, 702, 703, 704, 0, 645, 644,
	646, 647, 705, 648, 649, 1689, 0, 277, 0, 650,
	651, 706, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	0, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 789, 0, 277, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 785, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 0, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 0, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 790, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 799, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 0,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 798, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 797, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 1674, 580,
	0, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 795, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 1647, 0, 277, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 292, 293, 0, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	661, 662, 663, 0, 309, 310, 664, 0, 0, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 0, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 0, 0, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 0, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 673,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 1646,
	676, 677, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 0, 408, 409, 410, 0,
	0, 411, 678, 679, 0, 680, 0, 412, 413, 0,
	681, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 682, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 0, 0,
	483, 484, 485, 0, 683, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 0, 498, 0, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 554, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 0,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 700, 625, 701, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 1631, 0, 277, 0, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 292, 293, 0, 294, 295, 296, 297, 298, 299,
	656, 657, 0, 300, 658, 301, 659, 0, 660, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 661,
	662, 663, 0, 309, 310, 664, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	0, 0, 0, 0, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 341, 343, 665, 666, 0, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 667, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 668, 669, 374,
	0, 0, 0, 0, 0, 0, 0, 375, 376, 377,
	670, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 0, 382, 383, 384, 671, 672, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 673, 0,
	674, 395, 0, 396, 397, 398, 399, 400, 1629, 676,
	677, 487, 0, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 0, 408, 409, 410, 0, 0,
	411, 678, 679, 0, 680, 0, 412, 413, 0, 681,
	0, 414, 415, 416, 0, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 682, 0, 428, 429, 0, 0, 430, 431, 432,
	433, 434, 435, 438, 0, 0, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 0, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 0, 481, 469, 0, 0, 0, 483,
	484, 485, 0, 683, 486, 684, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 0, 498, 0, 686, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	689, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 691, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	0, 554, 555, 556, 557, 558, 692, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 0, 581,
	582, 564, 565, 583, 584, 0, 585, 586, 587, 588,
	589, 590, 591, 693, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 694, 601, 602,
	603, 604, 695, 608, 609, 0, 610, 611, 0, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 696, 697, 698, 699, 0, 630, 0, 621,
	622, 623, 624, 700, 625, 701, 0, 626, 627, 628,
	629, 0, 631, 632, 0, 0, 633, 634, 635, 637,
	638, 636, 639, 0, 640, 0, 0, 641, 642, 643,
	702, 703, 704, 0, 645, 644, 646, 647, 705, 648,
	649, 1624, 0, 277, 0, 650, 651, 706, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 0, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	1601, 0, 277, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 292,
	293, 0, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 661, 662, 663,
	0, 309, 310, 664, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 341, 343, 665, 666, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 668, 669, 374, 0, 0,
	0, 0, 0, 0, 0, 375, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 0,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 673, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 1599, 676, 677, 487,
	0, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 0, 408, 409, 410, 0, 0, 411, 678,
	679, 0, 680, 0, 412, 413, 0, 681, 0, 414,
	415, 416, 0, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 682,
	0, 428, 429, 0, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 0, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 0, 481, 469, 0, 0, 0, 483, 484, 485,
	0, 683, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 0, 498, 0, 686, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 689, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 0, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 0, 581, 582, 564,
	565, 583, 584, 0, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	695, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 700, 625, 701, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 1594,
	0, 277, 0, 650, 651, 706, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 292, 293,
	0, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 0, 660, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 661, 662, 663, 0,
	309, 310, 664, 0, 0, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 0, 333, 334, 335, 0, 0, 0,
	0, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 0, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 0, 0, 0,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 0, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 673, 0, 674, 395, 0,
	396, 397, 398, 399, 400, 675, 676, 677, 487, 0,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 0, 408, 409, 410, 0, 0, 411, 678, 679,
	0, 680, 0, 412, 413, 0, 681, 0, 414, 415,
	416, 0, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 682, 0,
	428, 429, 0, 0, 430, 431, 432, 433, 434, 435,
	438, 0, 0, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 0, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	0, 481, 469, 0, 0, 0, 483, 484, 485, 0,
	683, 486, 684, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	0, 498, 0, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 0, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 0, 581, 582, 564, 565,
	583, 584, 0, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 0, 610, 611, 0, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 696,
	697, 698, 699, 0, 630, 0, 621, 622, 623, 624,
	700, 625, 701, 0, 626, 627, 628, 629, 0, 631,
	632, 0, 0, 633, 634, 635, 637, 638, 636, 639,
	0, 640, 0, 0, 641, 642, 643, 702, 703, 704,
	0, 645, 644, 646, 647, 705, 648, 649, 1556, 0,
	277, 0, 650, 651, 706, 652, 653, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 0, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	0, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 0, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 1524, 0, 277,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 292, 293, 0, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 663, 0, 309, 310,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 0, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 0,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 435, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 0, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 1392, 0, 277, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 285, 284, 286, 287,
	288, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 292, 293, 0, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 0, 660, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 661, 662, 663, 0, 309, 310, 664,
	0, 0, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 0, 0, 0, 0, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 0, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 0, 0, 0, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 0, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 673, 0, 674, 395, 0, 396, 397, 398,
	399, 400, 675, 676, 677, 487, 0, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 0, 408,
	409, 410, 0, 0, 411, 678, 679, 0, 680, 0,
	412, 413, 0, 681, 0, 414, 415, 416, 0, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 682, 0, 428, 429, 0,
	0, 430, 431, 432, 433, 434, 435, 438, 0, 0,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 0,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 0, 481, 469,
	0, 0, 0, 483, 484, 485, 0, 683, 486, 684,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 0, 498, 0,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 0, 798, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	797, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 0, 581, 582, 564, 565, 583, 584, 0,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 0,
	610, 611, 0, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 795, 697, 698, 699,
	0, 630, 0, 621, 622, 623, 624, 700, 625, 701,
	0, 626, 627, 628, 629, 0, 631, 632, 0, 0,
	633, 634, 635, 637, 638, 636, 639, 0, 640, 0,
	0, 641, 642, 643, 702, 703, 704, 0, 645, 644,
	646, 647, 705, 648, 649, 1363, 0, 277, 0, 650,
	651, 706, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 1362, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	0, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 1354, 0, 277, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 0, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	1353, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 0, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 0,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	0, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 277, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 1306, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 675, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 0, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	277, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 804, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 0, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	0, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 0, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 789, 0, 277,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 292, 293, 0, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 663, 0, 309, 785,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 784,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 0, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 0,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 790, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 799,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 0, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 798, 555, 556, 557,
	558, 786, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 797, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 787, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 795, 697, 698,
	699, 0, 630, 0, 621, 791, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 778, 0, 277, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 285, 284, 286, 287,
	288, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 292, 293, 0, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 0, 660, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 661, 662, 663, 0, 309, 310, 664,
	0, 0, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 0, 0, 0, 0, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 0, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 0, 0, 0, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 0, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 673, 0, 674, 395, 0, 396, 397, 398,
	399, 400, 675, 676, 677, 487, 0, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 0, 408,
	409, 410, 0, 0, 411, 678, 679, 0, 680, 0,
	412, 413, 0, 681, 0, 414, 415, 416, 0, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 682, 0, 428, 429, 0,
	0, 430, 431, 432, 433, 434, 435, 438, 0, 0,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 0,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 0, 481, 469,
	0, 0, 0, 483, 484, 485, 0, 683, 486, 684,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 0, 498, 0,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 0, 554, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 779, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 0, 581, 582, 564, 565, 583, 584, 0,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 0,
	610, 611, 0, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 696, 697, 698, 699,
	0, 630, 0, 621, 622, 623, 624, 700, 625, 701,
	0, 626, 627, 628, 629, 0, 631, 632, 0, 0,
	633, 634, 635, 637, 638, 636, 639, 0, 640, 0,
	0, 641, 642, 643, 702, 703, 704, 0, 645, 644,
	646, 647, 705, 648, 649, 741, 0, 277, 0, 650,
	651, 706, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	0, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 734, 0, 277, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 0, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 0, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 0,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	0, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 712, 0, 277, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 292, 293, 0, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	661, 662, 663, 0, 309, 310, 664, 0, 0, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 0, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 0, 0, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 0, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 673,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 675,
	676, 677, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 0, 408, 409, 410, 0,
	0, 411, 678, 679, 0, 680, 0, 412, 413, 0,
	681, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 682, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 0, 0,
	483, 484, 485, 0, 683, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 0, 498, 0, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 554, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 0,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 700, 625, 701, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 277, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 292,
	293, 0, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 661, 662, 663,
	0, 309, 310, 664, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 341, 343, 665, 666, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 668, 669, 374, 0, 0,
	0, 0, 0, 0, 0, 375, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 0,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 673, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 675, 676, 677, 487,
	0, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 0, 408, 409, 410, 0, 0, 411, 678,
	679, 0, 680, 0, 412, 413, 0, 681, 0, 414,
	415, 416, 0, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 682,
	0, 428, 429, 0, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 0, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 0, 481, 469, 0, 0, 0, 483, 484, 485,
	0, 683, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 0, 498, 0, 686, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 689, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 0, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 0, 581, 582, 564,
	565, 583, 584, 0, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	695, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 700, 625, 701, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 277,
	0, 0, 0, 650, 651, 706, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 292, 293, 0, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 663, 0, 309, 310,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 0, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 3736, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 0,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 435, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 0, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 567, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 277, 0, 0, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 0, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 0, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 0,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 798, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 797, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	0, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 795, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 277, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 3649, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 0, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	277, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 0, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 3625, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	0, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 0, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 533, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 277, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 395, 0, 396, 397, 398, 399,
	400, 3622, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	0, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	559, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 277, 0, 0, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 292, 293, 0, 294, 295, 296, 297, 298, 299,
	656, 657, 0, 300, 658, 301, 659, 0, 660, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 661,
	662, 663, 0, 309, 310, 664, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	0, 0, 0, 0, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 341, 343, 665, 666, 0, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 667, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 668, 669, 374,
	0, 0, 0, 0, 0, 0, 0, 375, 376, 377,
	670, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 0, 382, 383, 384, 671, 672, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 673, 0,
	674, 395, 0, 396, 397, 398, 399, 400, 3574, 676,
	677, 487, 0, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 0, 408, 409, 410, 0, 0,
	411, 678, 679, 0, 680, 0, 412, 413, 0, 681,
	0, 414, 415, 416, 0, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 682, 0, 428, 429, 0, 0, 430, 431, 432,
	433, 434, 435, 438, 0, 0, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 0, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 0, 481, 469, 0, 0, 0, 483,
	484, 485, 0, 683, 486, 684, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 685, 0, 498, 0, 686, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 687, 512, 513, 514, 688, 515, 516, 517,
	689, 518, 690, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 691, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	0, 554, 555, 556, 557, 558, 692, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 0, 581,
	582, 564, 565, 583, 584, 0, 585, 586, 587, 588,
	589, 590, 591, 693, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 694, 601, 602,
	603, 604, 695, 608, 609, 0, 610, 611, 0, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 696, 697, 698, 699, 0, 630, 0, 621,
	622, 623, 624, 700, 625, 701, 0, 626, 627, 628,
	629, 0, 631, 632, 0, 0, 633, 634, 635, 637,
	638, 636, 639, 0, 640, 0, 0, 641, 642, 643,
	702, 703, 704, 0, 645, 644, 646, 647, 705, 648,
	649, 277, 0, 0, 0, 650, 651, 706, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 283, 285,
	284, 286, 287, 288, 289, 0, 290, 291, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 292, 293,
	0, 294, 295, 296, 297, 298, 299, 656, 657, 0,
	300, 658, 301, 659, 0, 660, 302, 303, 304, 305,
	306, 307, 0, 0, 0, 308, 661, 662, 663, 0,
	309, 310, 664, 0, 0, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 319, 320, 321, 318, 322,
	0, 323, 0, 324, 325, 326, 327, 328, 329, 0,
	330, 331, 332, 0, 333, 334, 335, 0, 0, 0,
	0, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	341, 343, 665, 666, 0, 346, 342, 344, 0, 347,
	345, 348, 0, 349, 350, 351, 0, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 667, 363, 364, 365, 367, 369, 366, 368,
	370, 371, 372, 373, 668, 669, 374, 0, 0, 0,
	0, 0, 0, 0, 375, 376, 377, 670, 0, 0,
	0, 378, 0, 379, 380, 381, 0, 0, 0, 382,
	383, 384, 671, 672, 385, 386, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 673, 0, 674, 395, 0,
	396, 397, 398, 399, 400, 3572, 676, 677, 487, 0,
	401, 402, 0, 403, 404, 405, 406, 407, 0, 0,
	0, 0, 408, 409, 410, 0, 0, 411, 678, 679,
	0, 680, 0, 412, 413, 0, 681, 0, 414, 415,
	416, 0, 417, 0, 0, 0, 418, 419, 420, 421,
	422, 423, 0, 424, 426, 425, 0, 427, 682, 0,
	428, 429, 0, 0, 430, 431, 432, 433, 434, 435,
	438, 0, 0, 436, 437, 439, 440, 0, 441, 442,
	444, 447, 443, 445, 446, 448, 461, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 463,
	0, 462, 0, 464, 465, 466, 467, 468, 475, 477,
	478, 473, 474, 476, 479, 480, 482, 470, 471, 472,
	0, 481, 469, 0, 0, 0, 483, 484, 485, 0,
	683, 486, 684, 488, 489, 0, 0, 490, 0, 491,
	0, 0, 493, 494, 495, 0, 0, 496, 497, 685,
	0, 498, 0, 686, 499, 500, 492, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 510, 511, 687,
	512, 513, 514, 688, 515, 516, 517, 689, 518, 690,
	519, 520, 0, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 529, 691, 530, 531, 533, 532, 534, 0,
	535, 0, 536, 537, 538, 0, 0, 0, 0, 0,
	539, 541, 0, 542, 543, 544, 545, 540, 546, 547,
	548, 549, 550, 0, 551, 552, 553, 0, 554, 555,
	556, 557, 558, 692, 559, 0, 560, 561, 567, 568,
	569, 562, 563, 570, 571, 572, 573, 574, 0, 576,
	577, 575, 578, 579, 580, 0, 581, 582, 564, 565,
	583, 584, 0, 585, 586, 587, 588, 589, 590, 591,
	693, 0, 592, 0, 593, 594, 595, 596, 597, 599,
	566, 600, 605, 606, 694, 601, 602, 603, 604, 695,
	608, 609, 0, 610, 611, 0, 607, 598, 0, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 620, 696,
	697, 698, 699, 0, 630, 0, 621, 622, 623, 624,
	700, 625, 701, 0, 626, 627, 628, 629, 0, 631,
	632, 0, 0, 633, 634, 635, 637, 638, 636, 639,
	0, 640, 0, 0, 641, 642, 643, 702, 703, 704,
	0, 645, 644, 646, 647, 705, 648, 649, 277, 0,
	0, 0, 650, 651, 706, 652, 653, 654, 0, 0,
	0, 0, 0, 0, 0, 283, 285, 284, 286, 287,
	288, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 292, 293, 0, 294, 295,
	296, 297, 298, 299, 656, 657, 0, 300, 658, 301,
	659, 0, 660, 302, 303, 304, 305, 306, 307, 0,
	0, 0, 308, 661, 662, 663, 0, 309, 310, 664,
	0, 0, 0, 311, 312, 313, 314, 315, 316, 317,
	0, 0, 319, 320, 321, 318, 322, 0, 323, 0,
	324, 325, 326, 327, 328, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 0, 0, 0, 0, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 341, 343, 665,
	666, 0, 346, 342, 344, 0, 347, 345, 348, 0,
	349, 350, 351, 0, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 667,
	363, 364, 365, 367, 369, 366, 368, 370, 371, 372,
	373, 668, 669, 374, 0, 0, 0, 0, 0, 0,
	0, 375, 376, 377, 670, 0, 0, 0, 378, 0,
	379, 380, 381, 0, 0, 0, 382, 383, 384, 671,
	672, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 673, 0, 674, 395, 0, 396, 397, 398,
	399, 400, 3560, 676, 677, 487, 0, 401, 402, 0,
	403, 404, 405, 406, 407, 0, 0, 0, 0, 408,
	409, 410, 0, 0, 411, 678, 679, 0, 680, 0,
	412, 413, 0, 681, 0, 414, 415, 416, 0, 417,
	0, 0, 0, 418, 419, 420, 421, 422, 423, 0,
	424, 426, 425, 0, 427, 682, 0, 428, 429, 0,
	0, 430, 431, 432, 433, 434, 435, 438, 0, 0,
	436, 437, 439, 440, 0, 441, 442, 444, 447, 443,
	445, 446, 448, 461, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 463, 0, 462, 0,
	464, 465, 466, 467, 468, 475, 477, 478, 473, 474,
	476, 479, 480, 482, 470, 471, 472, 0, 481, 469,
	0, 0, 0, 483, 484, 485, 0, 683, 486, 684,
	488, 489, 0, 0, 490, 0, 491, 0, 0, 493,
	494, 495, 0, 0, 496, 497, 685, 0, 498, 0,
	686, 499, 500, 492, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 510, 511, 687, 512, 513, 514,
	688, 515, 516, 517, 689, 518, 690, 519, 520, 0,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 529,
	691, 530, 531, 533, 532, 534, 0, 535, 0, 536,
	537, 538, 0, 0, 0, 0, 0, 539, 541, 0,
	542, 543, 544, 545, 540, 546, 547, 548, 549, 550,
	0, 551, 552, 553, 0, 554, 555, 556, 557, 558,
	692, 559, 0, 560, 561, 567, 568, 569, 562, 563,
	570, 571, 572, 573, 574, 0, 576, 577, 575, 578,
	579, 580, 0, 581, 582, 564, 565, 583, 584, 0,
	585, 586, 587, 588, 589, 590, 591, 693, 0, 592,
	0, 593, 594, 595, 596, 597, 599, 566, 600, 605,
	606, 694, 601, 602, 603, 604, 695, 608, 609, 0,
	610, 611, 0, 607, 598, 0, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 620, 696, 697, 698, 699,
	0, 630, 0, 621, 622, 623, 624, 700, 625, 701,
	0, 626, 627, 628, 629, 0, 631, 632, 0, 0,
	633, 634, 635, 637, 638, 636, 639, 0, 640, 0,
	0, 641, 642, 643, 702, 703, 704, 0, 645, 644,
	646, 647, 705, 648, 649, 277, 0, 0, 0, 650,
	651, 706, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 292, 293, 0, 294, 295, 296, 297, 298,
	299, 656, 657, 0, 300, 658, 301, 659, 0, 660,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	661, 662, 663, 0, 309, 310, 664, 0, 0, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 0, 336, 337,
	338, 339, 340, 0, 341, 343, 665, 666, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 667, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 668, 669,
	374, 0, 0, 0, 0, 0, 0, 0, 375, 376,
	377, 670, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 0, 382, 383, 384, 671, 672, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 673,
	0, 674, 395, 0, 396, 397, 398, 399, 400, 3557,
	676, 677, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 0, 408, 409, 410, 0,
	0, 411, 678, 679, 0, 680, 0, 412, 413, 0,
	681, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 682, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 0, 0,
	483, 484, 485, 0, 683, 486, 684, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 685, 0, 498, 0, 686, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 687, 512, 513, 514, 688, 515, 516,
	517, 689, 518, 690, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 691, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 554, 555, 556, 557, 558, 692, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 0,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 693, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 694, 601,
	602, 603, 604, 695, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 696, 697, 698, 699, 0, 630, 0,
	621, 622, 623, 624, 700, 625, 701, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 702, 703, 704, 0, 645, 644, 646, 647, 705,
	648, 649, 277, 0, 0, 0, 650, 651, 706, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 292,
	293, 0, 294, 295, 296, 297, 298, 299, 656, 657,
	0, 300, 658, 301, 659, 0, 660, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 661, 662, 663,
	0, 309, 310, 664, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 341, 343, 665, 666, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 667, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 668, 669, 374, 0, 0,
	0, 0, 0, 0, 0, 375, 376, 377, 670, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 0,
	382, 383, 384, 671, 672, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 673, 0, 674, 395,
	0, 396, 397, 398, 399, 400, 3158, 676, 677, 487,
	0, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 0, 408, 409, 410, 0, 0, 411, 678,
	679, 0, 680, 0, 412, 413, 0, 681, 0, 414,
	415, 416, 0, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 682,
	0, 428, 429, 0, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 0, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 0, 481, 469, 0, 0, 0, 483, 484, 485,
	0, 683, 486, 684, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	685, 0, 498, 0, 686, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	687, 512, 513, 514, 688, 515, 516, 517, 689, 518,
	690, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 691, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 0, 554,
	555, 556, 557, 558, 692, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 0, 581, 582, 564,
	565, 583, 584, 0, 585, 586, 587, 588, 589, 590,
	591, 693, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 694, 601, 602, 603, 604,
	695, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	696, 697, 698, 699, 0, 630, 0, 621, 622, 623,
	624, 700, 625, 701, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 702, 703,
	704, 0, 645, 644, 646, 647, 705, 648, 649, 277,
	0, 0, 0, 650, 651, 706, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 283, 285, 284, 286,
	287, 288, 289, 0, 290, 291, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 292, 293, 0, 294,
	295, 296, 297, 298, 299, 656, 657, 0, 300, 658,
	301, 659, 0, 660, 302, 303, 304, 305, 306, 307,
	0, 0, 0, 308, 661, 662, 663, 0, 309, 310,
	664, 0, 0, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 319, 320, 321, 318, 322, 0, 323,
	0, 324, 325, 326, 327, 328, 329, 0, 330, 331,
	332, 0, 333, 334, 335, 0, 0, 0, 0, 0,
	0, 0, 336, 337, 338, 339, 340, 0, 341, 343,
	665, 666, 0, 346, 342, 344, 0, 347, 345, 348,
	0, 349, 350, 351, 0, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	667, 363, 364, 365, 367, 369, 366, 368, 370, 371,
	372, 373, 668, 669, 374, 0, 0, 0, 0, 0,
	0, 0, 375, 376, 377, 670, 0, 0, 0, 378,
	0, 379, 380, 381, 0, 0, 0, 382, 383, 384,
	671, 672, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 673, 0, 674, 395, 0, 396, 397,
	398, 399, 400, 675, 676, 677, 487, 0, 401, 402,
	0, 403, 404, 405, 406, 407, 0, 0, 0, 0,
	408, 409, 410, 0, 0, 411, 678, 679, 0, 680,
	0, 412, 413, 0, 681, 0, 414, 415, 416, 0,
	417, 0, 0, 0, 418, 419, 420, 421, 422, 423,
	0, 424, 426, 425, 0, 427, 682, 0, 428, 429,
	0, 0, 430, 431, 432, 433, 434, 435, 438, 0,
	0, 436, 437, 439, 440, 0, 441, 442, 444, 447,
	443, 445, 446, 448, 461, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 463, 0, 462,
	0, 464, 465, 466, 467, 468, 475, 477, 478, 473,
	474, 476, 479, 480, 482, 470, 471, 472, 0, 481,
	469, 0, 0, 0, 483, 484, 485, 0, 683, 486,
	684, 488, 489, 0, 0, 490, 0, 491, 0, 0,
	493, 494, 495, 0, 0, 496, 497, 685, 0, 498,
	0, 686, 499, 500, 492, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 510, 511, 687, 512, 513,
	514, 688, 515, 516, 517, 689, 518, 690, 519, 520,
	0, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	529, 691, 530, 531, 533, 532, 534, 0, 535, 0,
	536, 537, 538, 0, 0, 0, 0, 0, 539, 541,
	0, 542, 543, 544, 545, 540, 546, 547, 548, 549,
	550, 0, 551, 552, 553, 0, 554, 555, 556, 557,
	558, 692, 559, 0, 560, 561, 779, 568, 569, 562,
	563, 570, 571, 572, 573, 574, 0, 576, 577, 575,
	578, 579, 580, 0, 581, 582, 564, 565, 583, 584,
	0, 585, 586, 587, 588, 589, 590, 591, 693, 0,
	592, 0, 593, 594, 595, 596, 597, 599, 566, 600,
	605, 606, 694, 601, 602, 603, 604, 695, 608, 609,
	0, 610, 611, 0, 607, 598, 0, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 620, 696, 697, 698,
	699, 0, 630, 0, 621, 622, 623, 624, 700, 625,
	701, 0, 626, 627, 628, 629, 0, 631, 632, 0,
	0, 633, 634, 635, 637, 638, 636, 639, 0, 640,
	0, 0, 641, 642, 643, 702, 703, 704, 0, 645,
	644, 646, 647, 705, 648, 649, 277, 0, 0, 0,
	650, 651, 706, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 655, 0,
	2377, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 656, 657, 0, 300, 658, 301, 659, 0,
	660, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 661, 662, 663, 0, 309, 310, 664, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 341, 343, 665, 666, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 667, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 668,
	669, 374, 0, 0, 0, 0, 0, 0, 0, 375,
	376, 377, 670, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 671, 672, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	673, 0, 674, 395, 0, 396, 397, 398, 399, 400,
	675, 676, 677, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 0, 408, 409, 410,
	0, 0, 411, 678, 679, 0, 680, 0, 412, 413,
	0, 681, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 682, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 0,
	0, 483, 484, 485, 0, 683, 486, 684, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 685, 0, 498, 0, 686, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 687, 512, 513, 514, 688, 515,
	516, 517, 689, 518, 690, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 691, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 692, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	0, 0, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 693, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 694,
	601, 602, 603, 604, 695, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 696, 697, 698, 699, 0, 630,
	0, 621, 622, 623, 624, 700, 625, 701, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 702, 703, 704, 0, 645, 644, 646, 647,
	705, 648, 649, 277, 0, 0, 0, 650, 651, 706,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 656,
	657, 0, 300, 658, 301, 659, 0, 660, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 661, 662,
	663, 0, 309, 310, 664, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 341, 343, 665, 666, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 667, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 668, 669, 374, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 670,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 671, 672, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 673, 0, 674,
	395, 0, 396, 397, 398, 399, 400, 1325, 676, 677,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 0, 411,
	678, 679, 0, 680, 0, 412, 413, 0, 681, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	682, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 0, 0, 483, 484,
	485, 0, 683, 486, 684, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 685, 0, 498, 0, 686, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 687, 512, 513, 514, 688, 515, 516, 517, 689,
	518, 690, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 691, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 692, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 0, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 693, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 694, 601, 602, 603,
	604, 695, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 696, 697, 698, 699, 0, 630, 0, 621, 622,
	623, 624, 700, 625, 701, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 702,
	703, 704, 0, 645, 644, 646, 647, 705, 648, 649,
	277, 0, 0, 0, 650, 651, 706, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 283, 285, 284,
	286, 287, 288, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 292, 293, 0,
	294, 295, 296, 297, 298, 299, 656, 657, 0, 300,
	658, 301, 659, 0, 660, 302, 303, 304, 305, 306,
	307, 0, 0, 0, 308, 661, 662, 663, 0, 309,
	310, 664, 0, 0, 0, 311, 312, 313, 314, 315,
	316, 317, 0, 0, 319, 320, 321, 318, 322, 0,
	323, 0, 324, 325, 326, 327, 328, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 0, 0, 0, 0,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 341,
	343, 665, 666, 0, 346, 342, 344, 0, 347, 345,
	348, 0, 349, 350, 351, 0, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 667, 363, 364, 365, 367, 369, 366, 368, 370,
	371, 372, 373, 668, 669, 374, 0, 0, 0, 0,
	0, 0, 0, 375, 376, 377, 670, 0, 0, 0,
	378, 0, 379, 380, 381, 0, 0, 0, 382, 383,
	384, 671, 672, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 673, 0, 674, 395, 0, 396,
	397, 398, 399, 400, 675, 676, 677, 487, 0, 401,
	402, 0, 403, 404, 405, 406, 407, 0, 0, 0,
	0, 408, 409, 410, 0, 0, 411, 678, 679, 0,
	680, 0, 412, 413, 0, 681, 0, 414, 415, 416,
	0, 417, 0, 0, 0, 418, 419, 420, 421, 422,
	423, 0, 424, 426, 425, 0, 427, 682, 0, 428,
	429, 0, 0, 430, 431, 432, 433, 434, 435, 438,
	0, 0, 436, 437, 439, 440, 0, 441, 442, 444,
	447, 443, 445, 446, 448, 461, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 463, 0,
	462, 0, 464, 465, 466, 467, 468, 475, 477, 478,
	473, 474, 476, 479, 480, 482, 470, 471, 472, 0,
	481, 469, 0, 0, 0, 483, 484, 485, 0, 683,
	486, 684, 488, 489, 0, 0, 490, 0, 491, 0,
	0, 493, 494, 495, 0, 0, 496, 497, 685, 0,
	498, 0, 686, 499, 500, 492, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 510, 511, 687, 512,
	513, 514, 688, 515, 516, 517, 689, 518, 690, 519,
	520, 0, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 529, 691, 530, 531, 1254, 532, 534, 0, 535,
	0, 536, 537, 538, 0, 0, 0, 0, 0, 539,
	541, 0, 542, 543, 544, 545, 540, 546, 547, 548,
	549, 550, 0, 551, 552, 553, 0, 554, 555, 556,
	557, 558, 692, 559, 0, 560, 561, 567, 568, 569,
	562, 563, 570, 571, 572, 573, 574, 0, 576, 577,
	575, 578, 579, 580, 0, 581, 582, 564, 565, 583,
	584, 0, 585, 586, 587, 588, 589, 590, 591, 693,
	0, 592, 0, 593, 594, 595, 596, 597, 599, 566,
	600, 605, 606, 694, 601, 602, 603, 604, 695, 608,
	609, 0, 610, 611, 0, 607, 598, 0, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 620, 696, 697,
	698, 699, 0, 630, 0, 621, 622, 623, 624, 700,
	625, 701, 0, 626, 627, 628, 629, 0, 631, 632,
	0, 0, 633, 634, 635, 637, 638, 636, 639, 0,
	640, 0, 0, 641, 642, 643, 702, 703, 704, 0,
	645, 644, 646, 647, 705, 648, 649, 277, 0, 0,
	0, 650, 651, 706, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 284, 286, 287, 288,
	289, 0, 290, 291, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 292, 293, 0, 294, 295, 296,
	297, 298, 299, 656, 657, 0, 300, 658, 301, 659,
	0, 660, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 661, 662, 663, 0, 309, 310, 664, 0,
	0, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 319, 320, 321, 318, 322, 0, 323, 0, 324,
	325, 326, 327, 328, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 0, 0, 0, 0, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 341, 343, 665, 666,
	0, 346, 342, 344, 0, 347, 345, 348, 0, 349,
	350, 351, 0, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 667, 363,
	364, 365, 367, 369, 366, 368, 370, 371, 372, 373,
	668, 669, 374, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 670, 0, 0, 0, 378, 0, 379,
	380, 381, 0, 0, 0, 382, 383, 384, 671, 672,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 673, 0, 674, 0, 0, 396, 397, 398, 399,
	400, 675, 676, 677, 487, 0, 401, 402, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 408, 409,
	410, 0, 0, 411, 678, 679, 0, 680, 0, 412,
	413, 0, 681, 0, 414, 415, 416, 0, 417, 0,
	0, 0, 418, 419, 420, 421, 422, 423, 0, 424,
	426, 425, 0, 427, 682, 0, 428, 429, 0, 0,
	430, 431, 432, 433, 434, 435, 438, 0, 0, 436,
	437, 439, 440, 0, 441, 442, 444, 447, 443, 445,
	446, 448, 461, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 463, 0, 462, 0, 464,
	465, 466, 467, 468, 475, 477, 478, 473, 474, 476,
	479, 480, 482, 470, 471, 472, 0, 481, 469, 0,
	0, 0, 483, 484, 485, 0, 683, 486, 684, 488,
	489, 0, 0, 490, 0, 491, 0, 0, 493, 494,
	495, 0, 0, 496, 497, 685, 0, 498, 0, 686,
	499, 500, 492, 501, 502, 0, 504, 505, 506, 507,
	508, 509, 0, 510, 511, 687, 512, 513, 514, 688,
	515, 516, 517, 689, 518, 690, 519, 520, 0, 521,
	522, 0, 523, 524, 525, 526, 0, 528, 529, 691,
	530, 531, 533, 532, 534, 0, 535, 0, 536, 537,
	538, 0, 0, 0, 0, 0, 539, 541, 0, 542,
	543, 544, 545, 540, 546, 547, 548, 549, 550, 0,
	551, 552, 553, 0, 554, 555, 556, 557, 558, 692,
	0, 0, 560, 561, 567, 568, 569, 562, 563, 570,
	571, 572, 573, 574, 0, 576, 577, 575, 578, 579,
	580, 0, 581, 582, 564, 565, 583, 584, 0, 585,
	586, 587, 588, 589, 590, 591, 693, 0, 592, 0,
	593, 594, 595, 596, 597, 599, 566, 600, 605, 606,
	694, 601, 602, 603, 604, 695, 608, 609, 0, 610,
	611, 0, 607, 598, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 620, 696, 697, 698, 699, 0,
	630, 0, 621, 622, 623, 624, 700, 625, 701, 0,
	626, 627, 628, 629, 0, 631, 632, 0, 0, 633,
	634, 635, 637, 638, 636, 639, 0, 640, 0, 0,
	641, 642, 643, 702, 703, 704, 0, 645, 644, 646,
	647, 705, 648, 649, 1637, 0, 1370, 0, 650, 651,
	706, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 0, 301, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 0, 0, 0, 0, 309, 310, 0, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 1372, 336,
	337, 338, 339, 340, 0, 341, 343, 0, 0, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 0, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 375,
	376, 377, 0, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	0, 0, 0, 395, 0, 396, 397, 398, 399, 400,
	1636, 0, 0, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 0, 408, 409, 410,
	0, 0, 411, 0, 0, 0, 0, 0, 412, 413,
	0, 0, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 0, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 0, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 0, 0, 498, 0, 0, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 0, 518, 0, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 0, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 0, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	1373, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 0, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 0,
	601, 602, 603, 604, 0, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 0, 0, 0, 0, 0, 630,
	0, 621, 622, 623, 624, 0, 625, 0, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 0, 0, 0, 0, 645, 644, 646, 647,
	0, 648, 649, 1559, 0, 1370, 0, 650, 651, 0,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 285, 284, 286, 287, 288, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 0, 301, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 0, 0, 0, 308,
	0, 0, 0, 0, 309, 310, 0, 0, 0, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 319,
	320, 321, 318, 322, 0, 323, 0, 324, 325, 326,
	327, 328, 329, 0, 330, 331, 332, 0, 333, 334,
	335, 0, 0, 0, 0, 0, 0, 1372, 336, 337,
	338, 339, 340, 0, 341, 343, 0, 0, 0, 346,
	342, 344, 0, 347, 345, 348, 0, 349, 350, 351,
	0, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 0, 363, 364, 365,
	367, 369, 366, 368, 370, 371, 372, 373, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 375, 376,
	377, 0, 0, 0, 0, 378, 0, 379, 380, 381,
	0, 0, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 0,
	0, 0, 395, 0, 396, 397, 398, 399, 400, 1558,
	0, 0, 487, 0, 401, 402, 0, 403, 404, 405,
	406, 407, 0, 0, 0, 0, 408, 409, 410, 0,
	0, 411, 0, 0, 0, 0, 0, 412, 413, 0,
	0, 0, 414, 415, 416, 0, 417, 0, 0, 0,
	418, 419, 420, 421, 422, 423, 0, 424, 426, 425,
	0, 427, 0, 0, 428, 429, 0, 0, 430, 431,
	432, 433, 434, 435, 438, 0, 0, 436, 437, 439,
	440, 0, 441, 442, 444, 447, 443, 445, 446, 448,
	461, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 463, 0, 462, 0, 464, 465, 466,
	467, 468, 475, 477, 478, 473, 474, 476, 479, 480,
	482, 470, 471, 472, 0, 481, 469, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 0, 488, 489, 0,
	0, 490, 0, 491, 0, 0, 493, 494, 495, 0,
	0, 496, 497, 0, 0, 498, 0, 0, 499, 500,
	492, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 0, 515, 516,
	517, 0, 518, 0, 519, 520, 0, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 531,
	533, 532, 534, 0, 535, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 539, 541, 0, 542, 543, 544,
	545, 540, 546, 547, 548, 549, 550, 0, 551, 552,
	553, 0, 554, 555, 556, 557, 558, 0, 559, 0,
	560, 561, 567, 568, 569, 562, 563, 570, 571, 572,
	573, 574, 0, 576, 577, 575, 578, 579, 580, 1373,
	581, 582, 564, 565, 583, 584, 0, 585, 586, 587,
	588, 589, 590, 591, 0, 0, 592, 0, 593, 594,
	595, 596, 597, 599, 566, 600, 605, 606, 0, 601,
	602, 603, 604, 0, 608, 609, 0, 610, 611, 0,
	607, 598, 0, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 620, 0, 0, 0, 0, 0, 630, 0,
	621, 622, 623, 624, 0, 625, 0, 0, 626, 627,
	628, 629, 0, 631, 632, 0, 0, 633, 634, 635,
	637, 638, 636, 639, 0, 640, 0, 0, 641, 642,
	643, 0, 0, 0, 0, 645, 644, 646, 647, 0,
	648, 649, 1368, 0, 1370, 0, 650, 651, 0, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 285, 284, 286, 287, 288, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 0, 301, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 0, 0, 0, 308, 0,
	0, 0, 0, 309, 310, 0, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 319, 320,
	321, 318, 322, 0, 323, 0, 324, 325, 326, 327,
	328, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	0, 0, 0, 0, 0, 0, 1372, 336, 337, 338,
	339, 340, 0, 341, 343, 0, 0, 0, 346, 342,
	344, 0, 347, 345, 348, 0, 349, 350, 351, 0,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 0, 363, 364, 365, 367,
	369, 366, 368, 370, 371, 372, 373, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 375, 376, 377,
	0, 0, 0, 0, 378, 0, 379, 380, 381, 0,
	0, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 0, 0,
	0, 395, 0, 396, 397, 398, 399, 400, 1367, 0,
	0, 487, 0, 401, 402, 0, 403, 404, 405, 406,
	407, 0, 0, 0, 0, 408, 409, 410, 0, 0,
	411, 0, 0, 0, 0, 0, 412, 413, 0, 0,
	0, 414, 415, 416, 0, 417, 0, 0, 0, 418,
	419, 420, 421, 422, 423, 0, 424, 426, 425, 0,
	427, 0, 0, 428, 429, 0, 0, 430, 431, 432,
	433, 434, 435, 438, 0, 0, 436, 437, 439, 440,
	0, 441, 442, 444, 447, 443, 445, 446, 448, 461,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 463, 0, 462, 0, 464, 465, 466, 467,
	468, 475, 477, 478, 473, 474, 476, 479, 480, 482,
	470, 471, 472, 0, 481, 469, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 0, 488, 489, 0, 0,
	490, 0, 491, 0, 0, 493, 494, 495, 0, 0,
	496, 497, 0, 0, 498, 0, 0, 499, 500, 492,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 0, 515, 516, 517,
	0, 518, 0, 519, 520, 0, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 529, 0, 530, 531, 533,
	532, 534, 0, 535, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 539, 541, 0, 542, 543, 544, 545,
	540, 546, 547, 548, 549, 550, 0, 551, 552, 553,
	0, 554, 555, 556, 557, 558, 0, 559, 0, 560,
	561, 567, 568, 569, 562, 563, 570, 571, 572, 573,
	574, 0, 576, 577, 575, 578, 579, 580, 1373, 581,
	582, 564, 565, 583, 584, 0, 585, 586, 587, 588,
	589, 590, 591, 0, 0, 592, 0, 593, 594, 595,
	596, 597, 599, 566, 600, 605, 606, 0, 601, 602,
	603, 604, 0, 608, 609, 0, 610, 611, 0, 607,
	598, 0, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 620, 0, 0, 0, 0, 0, 630, 0, 621,
	622, 623, 624, 0, 625, 0, 0, 626, 627, 628,
	629, 0, 631, 632, 0, 0, 633, 634, 635, 637,
	638, 636, 639, 0, 640, 0, 0, 641, 642, 643,
	0, 0, 0, 0, 645, 644, 646, 647, 0, 648,
	649, 2151, 0, 1370, 0, 650, 651, 0, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 285, 284, 286, 287, 288, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 0, 301, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 0, 0, 0, 308, 0, 0,
	0, 0, 309, 310, 0, 0, 0, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 319, 320, 321,
	318, 322, 0, 323, 0, 324, 325, 326, 327, 328,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 0,
	0, 0, 0, 0, 0, 1372, 336, 337, 338, 339,
	340, 0, 341, 343, 0, 0, 0, 346, 342, 344,
	0, 347, 345, 348, 0, 349, 350, 351, 0, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 0, 363, 364, 365, 367, 369,
	366, 368, 370, 371, 372, 373, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 375, 376, 377, 0,
	0, 0, 0, 378, 0, 379, 380, 381, 0, 0,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 0, 0, 0,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	487, 0, 401, 402, 0, 403, 404, 405, 406, 407,
	0, 0, 0, 0, 408, 409, 410, 0, 0, 411,
	0, 0, 0, 0, 0, 412, 413, 0, 0, 0,
	414, 415, 416, 0, 417, 0, 0, 0, 418, 419,
	420, 421, 422, 423, 0, 424, 426, 425, 0, 427,
	0, 0, 428, 429, 0, 0, 430, 431, 432, 433,
	434, 435, 438, 0, 0, 436, 437, 439, 440, 0,
	441, 442, 444, 447, 443, 445, 446, 448, 461, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 463, 0, 462, 0, 464, 465, 466, 467, 468,
	475, 477, 478, 473, 474, 476, 479, 480, 482, 470,
	471, 472, 0, 481, 469, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 0, 488, 489, 0, 0, 490,
	0, 491, 0, 0, 493, 494, 495, 0, 0, 496,
	497, 0, 0, 498, 0, 0, 499, 500, 492, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 0, 515, 516, 517, 0,
	518, 0, 519, 520, 0, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 531, 533, 532,
	534, 0, 535, 0, 536, 537, 538, 0, 0, 0,
	0, 0, 539, 541, 0, 542, 543, 544, 545, 540,
	546, 547, 548, 549, 550, 0, 551, 552, 553, 0,
	554, 555, 556, 557, 558, 0, 559, 0, 560, 561,
	567, 568, 569, 562, 563, 570, 571, 572, 573, 574,
	0, 576, 577, 575, 578, 579, 580, 1373, 581, 582,
	564, 565, 583, 584, 0, 585, 586, 587, 588, 589,
	590, 591, 0, 0, 592, 0, 593, 594, 595, 596,
	597, 599, 566, 600, 605, 606, 0, 601, 602, 603,
	604, 0, 608, 609, 0, 610, 611, 0, 607, 598,
	0, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	620, 0, 0, 0, 0, 0, 630, 0, 621, 622,
	623, 624, 0, 625, 0, 0, 626, 627, 628, 629,
	0, 631, 632, 0, 0, 633, 634, 635, 637, 638,
	636, 639, 0, 640, 0, 0, 641, 642, 643, 0,
	0, 0, 0, 645, 644, 646, 647, 0, 648, 649,
	2118, 0, 1370, 0, 650, 651, 0, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	285, 284, 286, 287, 288, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 0, 301, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 0, 0, 0,
	0, 309, 310, 0, 0, 0, 0, 311, 312, 313,
	314, 315, 316, 317, 0, 0, 319, 320, 321, 318,
	322, 0, 323, 0, 324, 325, 326, 327, 328, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 0, 0,
	0, 0, 0, 0, 1372, 336, 337, 338, 339, 340,
	0, 341, 343, 0, 0, 0, 346, 342, 344, 0,
	347, 345, 348, 0, 349, 350, 351, 0, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 0, 363, 364, 365, 367, 369, 366,
	368, 370, 371, 372, 373, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 375, 376, 377, 0, 0,
	0, 0, 378, 0, 379, 380, 381, 0, 0, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 0, 0, 0, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 487,
	0, 401, 402, 0, 403, 404, 405, 406, 407, 0,
	0, 0, 0, 408, 409, 410, 0, 0, 411, 0,
	0, 0, 0, 0, 412, 413, 0, 0, 0, 414,
	415, 416, 0, 417, 0, 0, 0, 418, 419, 420,
	421, 422, 423, 0, 424, 426, 425, 0, 427, 0,
	0, 428, 429, 0, 0, 430, 431, 432, 433, 434,
	435, 438, 0, 0, 436, 437, 439, 440, 0, 441,
	442, 444, 447, 443, 445, 446, 448, 461, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	463, 0, 462, 0, 464, 465, 466, 467, 468, 475,
	477, 478, 473, 474, 476, 479, 480, 482, 470, 471,
	472, 0, 481, 469, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 0, 488, 489, 0, 0, 490, 0,
	491, 0, 0, 493, 494, 495, 0, 0, 496, 497,
	0, 0, 498, 0, 0, 499, 500, 492, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 0, 515, 516, 517, 0, 518,
	0, 519, 520, 0, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 529, 0, 530, 531, 533, 532, 534,
	0, 535, 0, 536, 537, 538, 0, 0, 0, 0,
	0, 539, 541, 0, 542, 543, 544, 545, 540, 546,
	547, 548, 549, 550, 0, 551, 552, 553, 0, 554,
	555, 556, 557, 558, 0, 559, 0, 560, 561, 567,
	568, 569, 562, 563, 570, 571, 572, 573, 574, 0,
	576, 577, 575, 578, 579, 580, 1373, 581, 582, 564,
	565, 583, 584, 0, 585, 586, 587, 588, 589, 590,
	591, 0, 0, 592, 0, 593, 594, 595, 596, 597,
	599, 566, 600, 605, 606, 0, 601, 602, 603, 604,
	0, 608, 609, 0, 610, 611, 0, 607, 598, 0,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 620,
	0, 0, 0, 0, 0, 630, 0, 621, 622, 623,
	624, 0, 625, 0, 0, 626, 627, 628, 629, 0,
	631, 632, 0, 0, 633, 634, 635, 637, 638, 636,
	639, 0, 640, 0, 0, 641, 642, 643, 0, 0,
	0, 0, 645, 644, 646, 647, 1370, 648, 649, 0,
	0, 0, 0, 650, 651, 0, 652, 653, 654, 0,
	0, 0, 0, 283, 285, 284, 286, 287, 288, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 0, 301, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 0, 0, 0,
	308, 0, 0, 0, 0, 309, 310, 0, 0, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 0, 0,
	319, 320, 321, 318, 322, 0, 323, 0, 324, 325,
	326, 327, 328, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 0, 0, 0, 0, 0, 0, 1372, 336,
	337, 338, 339, 340, 0, 341, 343, 0, 0, 0,
	346, 342, 344, 0, 347, 345, 348, 0, 349, 350,
	351, 0, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 0, 363, 364,
	365, 367, 369, 366, 368, 370, 371, 372, 373, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 375,
	376, 377, 0, 0, 0, 0, 378, 0, 379, 380,
	381, 0, 0, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	0, 0, 0, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 487, 0, 401, 402, 0, 403, 404,
	405, 406, 407, 0, 0, 0, 0, 408, 409, 410,
	0, 0, 411, 0, 0, 0, 0, 0, 412, 413,
	0, 0, 0, 414, 415, 416, 0, 417, 0, 0,
	0, 418, 419, 420, 421, 422, 423, 0, 424, 426,
	425, 0, 427, 0, 0, 428, 429, 0, 0, 430,
	431, 432, 433, 434, 435, 438, 0, 0, 436, 437,
	439, 440, 0, 441, 442, 444, 447, 443, 445, 446,
	448, 461, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 463, 0, 462, 0, 464, 465,
	466, 467, 468, 475, 477, 478, 473, 474, 476, 479,
	480, 482, 470, 471, 472, 0, 481, 469, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 0, 488, 489,
	0, 0, 490, 0, 491, 0, 0, 493, 494, 495,
	0, 0, 496, 497, 0, 0, 498, 0, 0, 499,
	500, 492, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 510, 511, 0, 512, 513, 514, 0, 515,
	516, 517, 0, 518, 0, 519, 520, 0, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 529, 0, 530,
	531, 533, 532, 534, 0, 535, 0, 536, 537, 538,
	0, 0, 0, 0, 0, 539, 541, 0, 542, 543,
	544, 545, 540, 546, 547, 548, 549, 550, 0, 551,
	552, 553, 0, 554, 555, 556, 557, 558, 0, 559,
	0, 560, 561, 567, 568, 569, 562, 563, 570, 571,
	572, 573, 574, 0, 576, 577, 575, 578, 579, 580,
	1373, 581, 582, 564, 565, 583, 584, 0, 585, 586,
	587, 588, 589, 590, 591, 0, 0, 592, 0, 593,
	594, 595, 596, 597, 599, 566, 600, 605, 606, 0,
	601, 602, 603, 604, 0, 608, 609, 0, 610, 611,
	0, 607, 598, 0, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 620, 0, 0, 0, 0, 0, 630,
	0, 621, 622, 623, 624, 0, 625, 0, 0, 626,
	627, 628, 629, 0, 631, 632, 0, 0, 633, 634,
	635, 637, 638, 636, 639, 0, 640, 0, 0, 641,
	642, 643, 0, 0, 0, 0, 645, 644, 646, 647,
	0, 648, 649, 0, 0, 0, 0, 650, 651, 0,
	652, 653, 654, 1852, 1853, 0, 1885, 1886, 1887, 1896,
	1897, 1898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1889, 1883, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	1852, 1853, 1902, 1885, 1886, 1887, 1896, 1897, 1898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 1889, 1883, 0, 0, 0, 0, 1854, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 1874, 1902,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1852, 1853, 0, 1885,
	1886, 1887, 1896, 1897, 1898, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 1889, 1883,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 1902, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 1877, 1878, 1879, 1880, 0,
	0, 1854, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 1878, 1879, 1880, 0, 0, 0, 0,
	0, 0, 1860, 0, 1893, 0, 0, 1903, 0, 0,
	0, 0, 0, 0, 1882, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 1900, 0, 0, 0, 0, 0, 0, 1869,
	1870, 1893, 0, 0, 1903, 0, 0, 0, 0, 0,
	0, 1882, 1884, 0, 0, 0, 0, 1891, 1877, 1878,
	1879, 1880, 0, 0, 0, 0, 0, 1899, 1860, 1900,
	0, 0, 1875, 0, 0, 0, 1869, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1893, 0, 1875,
	1903, 0, 0, 0, 0, 0, 0, 1882, 1884, 0,
	1901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1899, 0, 1900, 0, 0, 0, 0,
	1890, 0, 1869, 1870, 0, 0, 0, 0, 0, 0,
	0, 1905, 0, 0, 0, 0, 0, 1901, 0, 0,
	1891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 1890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1901, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1890, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1905, 0, 0, 1894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 1853, 0, 1885, 1886, 1887, 1896, 1897, 1898,
	1907, 0, 0, 0, 1894, 0, 0, 0, 0, 0,
	0, 0, 0, 1889, 1883, 0, 0, 0, 0, 0,
	1881, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	1902, 0, 0, 0, 0, 0, 0, 1907, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 1908, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	1894, 0, 0, 1892, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 1866, 1867, 1873, 1895, 1872, 1868, 0,
	1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 0,
	0, 0, 0, 1907, 0, 0, 0, 0, 2673, 0,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864,
	1856, 1857, 1858, 1859, 1861, 1862, 0, 0, 0, 0,
	0, 4843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1877, 1878, 1879, 1880, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1867, 1873, 1895,
	1872, 1868, 0, 1865, 1863, 1864, 1856, 1857, 1858, 1859,
	1861, 1862, 1893, 0, 0, 1903, 0, 4839, 0, 0,
	0, 0, 1882, 1884, 0, 0, 0, 0, 0, 1852,
	1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 1899, 0,
	1900, 0, 0, 0, 0, 0, 0, 1869, 1870, 0,
	0, 1889, 1883, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 1891, 0, 0, 1902, 0,
	1852, 1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 0,
	1875, 0, 0, 0, 0, 1908, 0, 0, 0, 0,
	0, 0, 1889, 1883, 1854, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 1874, 0, 0, 0, 0, 1902,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1908, 0, 1901, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 1890, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 1905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 1878, 1879, 1880, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 1878, 1879, 1880, 0, 0, 1876, 0,
	1893, 0, 1860, 1903, 0, 0, 0, 0, 0, 0,
	1882, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1894, 1899, 0, 1900, 0,
	0, 0, 0, 0, 0, 1869, 1870, 0, 0, 0,
	0, 1893, 0, 0, 1903, 0, 0, 0, 0, 0,
	0, 1882, 1884, 1891, 0, 0, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 1899, 1875, 1900,
	0, 0, 0, 0, 0, 0, 1869, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 1901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 0, 0, 0, 0, 1890, 0, 0, 0,
	0, 1866, 1867, 1873, 1895, 1872, 1868, 1905, 1865, 1863,
	1864, 1856, 1857, 1858, 1859, 1861, 1862, 1901, 0, 0,
	0, 0, 4742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 1853, 1876, 1885, 1886, 1887,
	1896, 1897, 1898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 1889, 1883, 0, 0,
	0, 0, 0, 1894, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 1902, 0, 1852, 1853, 1876, 1885, 1886,
	1887, 1896, 1897, 1898, 0, 0, 0, 0, 0, 0,
	1908, 0, 0, 0, 0, 0, 1907, 1889, 1883, 1854,
	0, 0, 0, 0, 1894, 1855, 0, 0, 0, 1874,
	0, 0, 0, 0, 1902, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1908, 0, 0, 0, 0, 0, 1907, 0, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864, 1856,
	1857, 1858, 1859, 1861, 1862, 0, 1877, 1878, 1879, 1880,
	4694, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864,
	1856, 1857, 1858, 1859, 1861, 1862, 0, 1877, 1878, 1879,
	1880, 4693, 0, 0, 0, 1893, 0, 1860, 1903, 0,
	0, 0, 0, 0, 0, 1882, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1899, 0, 1900, 0, 0, 0, 0, 0, 0,
	1869, 1870, 0, 0, 0, 0, 1893, 0, 0, 1903,
	0, 0, 0, 0, 0, 0, 1882, 1884, 1891, 0,
	0, 0, 0, 1852, 1853, 0, 1885, 1886, 1887, 1896,
	1897, 1898, 1899, 1875, 1900, 0, 0, 0, 0, 0,
	0, 1869, 1870, 0, 0, 1889, 1883, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 1891,
	0, 0, 1902, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 1908,
	0, 1901, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 1890, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 1905, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 1878, 1879, 1880, 0,
	0, 1876, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 1894, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1893, 0, 0, 1903, 0, 0,
	0, 0, 0, 0, 1882, 1884, 0, 0, 0, 0,
	0, 1907, 0, 0, 0, 0, 0, 0, 0, 1894,
	1899, 0, 1900, 0, 0, 0, 0, 0, 0, 1869,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1891, 0, 0,
	0, 0, 1907, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1867, 1873, 1895, 1872, 1868,
	0, 1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862,
	1901, 0, 0, 0, 0, 4504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 0, 0, 0,
	1890, 0, 0, 0, 0, 1866, 1867, 1873, 1895, 1872,
	1868, 1905, 1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861,
	1862, 0, 0, 0, 0, 0, 4331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1853,
	0, 1885, 1886, 1887, 1896, 1897, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 1883, 0, 0, 0, 0, 0, 1881, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 1902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 1908, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1852, 1853, 0, 1885, 1886, 1887,
	1896, 1897, 1898, 1874, 0, 0, 0, 1894, 0, 0,
	0, 0, 1871, 0, 0, 0, 1889, 1883, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 1852, 1853, 1902, 1885, 1886, 1887, 1896, 1897, 1898,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1908, 0, 0, 1889, 1883, 0, 0, 0, 0, 1854,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 1874,
	1902, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 1908, 0, 0,
	1877, 1878, 1879, 1880, 0, 0, 1854, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 1892, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 1866, 1867, 1873, 1895, 1872, 1868, 0,
	1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 1893,
	0, 0, 1903, 0, 4248, 0, 0, 0, 0, 1882,
	1884, 0, 0, 0, 0, 0, 1877, 1878, 1879, 1880,
	0, 0, 0, 0, 0, 1899, 1860, 1900, 0, 0,
	0, 0, 0, 0, 1869, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1891, 1877, 1878, 1879, 1880, 0, 0, 0,
	0, 0, 0, 1860, 0, 1893, 0, 1875, 1903, 0,
	0, 0, 0, 0, 0, 1882, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1899, 0, 1900, 0, 0, 0, 0, 0, 0,
	1869, 1870, 1893, 0, 0, 1903, 0, 0, 0, 0,
	0, 0, 1882, 1884, 0, 1901, 0, 0, 1891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1899, 0,
	1900, 0, 0, 1875, 0, 1890, 0, 1869, 1870, 0,
	0, 0, 0, 0, 0, 0, 1905, 0, 0, 0,
	0, 0, 0, 0, 0, 1891, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1890, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1905, 0, 0, 0, 0, 0, 1901, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1890, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1905,
	0, 0, 1894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1907, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1894, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1907, 0, 0, 0, 1894, 0, 0, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1867,
	1873, 1895, 1872, 1868, 0, 1865, 1863, 1864, 1856, 1857,
	1858, 1859, 1861, 1862, 0, 0, 0, 0, 1907, 4247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1867, 1873, 1895, 1872, 1868,
	0, 1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862,
	0, 0, 0, 0, 0, 4246, 0, 0, 0, 0,
	0, 1892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1867, 1873, 1895, 1872, 1868, 0, 1865, 1863,
	1864, 1856, 1857, 1858, 1859, 1861, 1862, 0, 0, 0,
	1852, 1853, 3880, 1885, 1886, 1887, 1896, 1897, 1898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1889, 1883, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 1852, 1853, 1902,
	1885, 1886, 1887, 1896, 1897, 1898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1908, 0, 0, 1889,
	1883, 0, 0, 0, 0, 1854, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 1874, 1902, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 1908, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1852, 1853, 0, 1885, 1886, 1887, 1896,
	1897, 1898, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 1889, 1883, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 1902, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 1877, 1878, 1879, 1880, 0, 0, 1854, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	1878, 1879, 1880, 0, 0, 0, 0, 0, 0, 1860,
	0, 1893, 0, 0, 1903, 0, 0, 0, 0, 0,
	0, 1882, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1899, 0, 1900,
	0, 0, 0, 0, 0, 0, 1869, 1870, 1893, 0,
	0, 1903, 0, 0, 0, 0, 0, 0, 1882, 1884,
	0, 0, 0, 0, 1891, 1877, 1878, 1879, 1880, 0,
	0, 0, 0, 0, 1899, 1860, 1900, 0, 0, 1875,
	0, 0, 0, 1869, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1893, 0, 1875, 1903, 0, 0,
	0, 0, 0, 0, 1882, 1884, 0, 1901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 1900, 0, 0, 0, 0, 1890, 0, 1869,
	1870, 0, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 0, 0, 0, 1901, 0, 0, 1891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 1890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1890, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1905, 0, 0, 1894, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1853,
	0, 1885, 1886, 1887, 1896, 1897, 1898, 1907, 0, 0,
	0, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 1883, 0, 0, 0, 0, 0, 1881, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 1902, 0, 0,
	0, 0, 0, 0, 1907, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 1908, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 1894, 0, 0,
	1892, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	1866, 1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864,
	1856, 1857, 1858, 1859, 1861, 1862, 0, 0, 0, 0,
	1907, 3361, 0, 0, 0, 0, 0, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1867, 1873,
	1895, 1872, 1868, 0, 1865, 1863, 1864, 1856, 1857, 1858,
	1859, 1861, 1862, 0, 0, 0, 0, 0, 3360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 1878, 1879, 1880, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1867, 1873, 1895, 1872, 1868, 0,
	1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 1893,
	0, 0, 1903, 0, 3359, 0, 0, 0, 0, 1882,
	1884, 0, 0, 0, 0, 0, 1852, 1853, 0, 1885,
	1886, 1887, 1896, 1897, 1898, 1899, 0, 1900, 0, 0,
	0, 0, 0, 0, 1869, 1870, 0, 0, 1889, 1883,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 1891, 0, 0, 1902, 0, 1852, 1853, 0,
	1885, 1886, 1887, 1896, 1897, 1898, 0, 1875, 0, 0,
	0, 0, 1908, 0, 0, 0, 0, 0, 0, 1889,
	1883, 1854, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 1874, 0, 0, 0, 0, 1902, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1908, 0, 1901, 0, 0, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 1890, 2219, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 1905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 1878,
	1879, 1880, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 2217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	1878, 1879, 1880, 0, 0, 1876, 0, 1893, 0, 1860,
	1903, 0, 0, 0, 0, 0, 0, 1882, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1894, 1899, 0, 1900, 0, 0, 0, 0,
	0, 0, 1869, 1870, 0, 0, 0, 0, 1893, 0,
	0, 1903, 0, 0, 0, 0, 0, 0, 1882, 1884,
	1891, 0, 0, 0, 0, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 1899, 1875, 1900, 0, 0, 0,
	0, 0, 0, 1869, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 1901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 0,
	0, 0, 0, 1890, 0, 0, 0, 0, 1866, 1867,
	1873, 1895, 1872, 1868, 1905, 1865, 1863, 1864, 1856, 1857,
	1858, 1859, 1861, 1862, 1901, 0, 0, 0, 0, 3358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 1852,
	1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 0, 0,
	2218, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	1894, 1889, 1883, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 1876, 0, 0, 0, 1902, 0,
	1852, 1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 0,
	0, 0, 0, 1907, 0, 1908, 0, 0, 0, 0,
	0, 1894, 1889, 1883, 1854, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 1874, 0, 0, 0, 0, 1902,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1907, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 2216, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1867, 1873, 1895,
	1872, 1868, 0, 1865, 1863, 1864, 1856, 1857, 1858, 1859,
	1861, 1862, 0, 0, 0, 3323, 0, 0, 0, 0,
	0, 1877, 1878, 1879, 1880, 0, 0, 1892, 0, 0,
	0, 1860, 4993, 0, 0, 0, 0, 1866, 1867, 1873,
	1895, 1872, 1868, 0, 1865, 1863, 1864, 1856, 1857, 1858,
	1859, 1861, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 1878, 1879, 1880, 0, 0, 0, 0,
	1893, 0, 1860, 1903, 3423, 0, 0, 0, 0, 3422,
	1882, 1884, 0, 0, 0, 0, 0, 1852, 1853, 0,
	1885, 1886, 1887, 1896, 1897, 1898, 1899, 0, 1900, 0,
	0, 0, 0, 0, 0, 1869, 1870, 0, 0, 1889,
	1883, 1893, 0, 0, 1903, 3294, 0, 1855, 0, 0,
	0, 1882, 1884, 1891, 0, 0, 1902, 0, 1852, 1853,
	0, 1885, 1886, 1887, 1896, 1897, 1898, 1899, 1875, 1900,
	0, 2286, 0, 1908, 0, 0, 1869, 1870, 0, 0,
	1889, 1883, 1854, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 1874, 0, 1891, 0, 0, 1902, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 1908, 0, 1901, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 1890, 0, 0, 0,
	0, 3295, 1871, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4992,
	0, 0, 0, 0, 0, 0, 0, 1890, 0, 1877,
	1878, 1879, 1880, 0, 0, 0, 0, 0, 1905, 1860,
	2287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 1878, 1879, 1880, 0, 0, 1876, 0, 1893, 0,
	1860, 1903, 0, 0, 0, 0, 0, 0, 1882, 1884,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 1894, 1899, 0, 1900, 0, 0, 0,
	0, 0, 0, 1869, 1870, 0, 0, 1876, 0, 1893,
	0, 0, 1903, 0, 0, 0, 0, 0, 0, 1882,
	1884, 1891, 0, 0, 0, 0, 1907, 0, 0, 0,
	0, 0, 0, 0, 1894, 1899, 1875, 1900, 0, 0,
	0, 0, 0, 0, 1869, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1891, 0, 0, 0, 0, 1907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 1901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 1890, 0, 0, 0, 0, 1866,
	1867, 1873, 1895, 1872, 1868, 1905, 1865, 1863, 1864, 1856,
	1857, 1858, 1859, 1861, 1862, 1901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 0, 0, 0, 1890, 0, 0, 0, 0,
	1866, 1867, 1873, 1895, 1872, 1868, 1905, 1865, 1863, 1864,
	1856, 1857, 1858, 1859, 1861, 1862, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2820, 0, 0, 0, 0,
	0, 0, 1852, 1853, 1876, 1885, 1886, 1887, 1896, 1897,
	1898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 1889, 1883, 0, 0, 0, 2819,
	0, 1894, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 1902, 0, 1852, 1853, 1876, 1885, 1886, 1887, 1896,
	1897, 1898, 0, 0, 0, 0, 0, 0, 1908, 0,
	0, 0, 0, 0, 1907, 1889, 1883, 1854, 0, 0,
	0, 0, 1894, 1855, 0, 0, 0, 1874, 0, 0,
	0, 0, 1902, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 0, 0, 1907, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1867, 1873,
	1895, 1872, 1868, 0, 1865, 1863, 1864, 1856, 1857, 1858,
	1859, 1861, 1862, 0, 1877, 1878, 1879, 1880, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1867,
	1873, 1895, 1872, 1868, 0, 1865, 1863, 1864, 1856, 1857,
	1858, 1859, 1861, 1862, 0, 1877, 1878, 1879, 1880, 0,
	0, 0, 0, 1893, 0, 1860, 1903, 4598, 0, 0,
	0, 0, 0, 1882, 1884, 0, 0, 0, 0, 0,
	1852, 1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 1899,
	0, 1900, 0, 0, 0, 0, 0, 0, 1869, 1870,
	0, 0, 1889, 1883, 1893, 0, 0, 1903, 0, 0,
	1855, 0, 0, 0, 1882, 1884, 1891, 0, 0, 1902,
	0, 1852, 1853, 0, 1885, 1886, 1887, 1896, 1897, 1898,
	1899, 1875, 1900, 0, 0, 0, 1908, 0, 0, 1869,
	1870, 0, 0, 1889, 1883, 1854, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 1874, 0, 1891, 0, 0,
	1902, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 1908, 0, 1901,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 1890,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	1905, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1890, 0, 1877, 1878, 1879, 1880, 0, 0, 0, 0,
	0, 1905, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1877, 1878, 1879, 1880, 0, 0, 1876,
	0, 1893, 0, 1860, 1903, 0, 0, 0, 0, 0,
	0, 1882, 1884, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 1894, 1899, 0, 1900,
	0, 0, 0, 0, 0, 0, 1869, 1870, 0, 0,
	1876, 0, 1893, 0, 0, 1903, 0, 0, 0, 0,
	0, 0, 1882, 1884, 1891, 0, 0, 0, 0, 1907,
	0, 0, 0, 0, 0, 0, 0, 1894, 1899, 1875,
	1900, 0, 0, 0, 0, 0, 0, 1869, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1891, 0, 0, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 1901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1892, 0, 0, 0, 0, 1890, 1108, 0,
	0, 0, 1866, 1867, 1873, 1895, 1872, 1868, 1905, 1865,
	1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 1901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 1890, 0,
	0, 0, 0, 1866, 1867, 1873, 1895, 1872, 1868, 1905,
	1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1853, 1876, 1885, 1886,
	1887, 1896, 1897, 1898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 1889, 1883, 0,
	0, 0, 0, 0, 1894, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 1902, 0, 1852, 1853, 1876, 1885,
	1886, 1887, 1896, 1897, 1898, 0, 0, 0, 0, 0,
	0, 1908, 0, 0, 0, 0, 0, 1907, 1889, 1883,
	1854, 0, 0, 0, 0, 1894, 1855, 0, 0, 0,
	1874, 0, 0, 0, 0, 1902, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 0, 0, 0, 1907, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 4376, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864,
	1856, 1857, 1858, 1859, 1861, 1862, 0, 1877, 1878, 1879,
	1880, 0, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 1892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1867, 1873, 1895, 1872, 1868, 0, 1865, 1863,
	1864, 1856, 1857, 1858, 1859, 1861, 1862, 0, 1877, 1878,
	1879, 1880, 0, 0, 0, 0, 1893, 0, 1860, 1903,
	4070, 0, 0, 0, 0, 0, 1882, 1884, 0, 0,
	0, 0, 0, 1852, 1853, 0, 1885, 1886, 1887, 1896,
	1897, 1898, 1899, 0, 1900, 0, 0, 0, 0, 0,
	0, 1869, 1870, 0, 0, 1889, 1883, 1893, 0, 0,
	1903, 0, 0, 1855, 0, 0, 0, 1882, 1884, 1891,
	0, 0, 1902, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1899, 1875, 1900, 0, 0, 0, 1908,
	0, 0, 1869, 1870, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	1891, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 1901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1890, 0, 1877, 1878, 1879, 1880, 0,
	0, 0, 0, 0, 1905, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1893, 0, 0, 1903, 0, 0,
	0, 0, 0, 0, 1882, 1884, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 1894,
	1899, 0, 1900, 0, 0, 0, 0, 0, 0, 1869,
	1870, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1891, 0, 0,
	0, 0, 1907, 0, 0, 0, 0, 0, 0, 0,
	1894, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	4071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 0, 0, 0,
	1890, 0, 0, 0, 0, 1866, 1867, 1873, 1895, 1872,
	1868, 1905, 1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1867, 1873, 1895,
	1872, 1868, 0, 1865, 1863, 1864, 1856, 1857, 1858, 1859,
	1861, 1862, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1853,
	1876, 1885, 1886, 1887, 1896, 1897, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 1883, 0, 0, 0, 0, 0, 1894, 1855, 0,
	0, 0, 0, 0, 0, 1852, 1853, 1902, 1885, 1886,
	1887, 1896, 1897, 1898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1908, 0, 0, 1889, 1883, 0,
	1907, 0, 3424, 1854, 0, 1855, 0, 0, 0, 0,
	0, 0, 3861, 1874, 1902, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1867, 1873, 1895, 1872, 1868, 0,
	1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 0,
	1877, 1878, 1879, 1880, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 3429, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 1878, 1879,
	1880, 0, 0, 0, 0, 0, 0, 1860, 0, 1893,
	0, 0, 1903, 0, 0, 0, 0, 0, 0, 1882,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1899, 0, 1900, 0, 0,
	0, 0, 0, 0, 1869, 1870, 1893, 0, 0, 1903,
	0, 0, 0, 0, 0, 0, 1882, 1884, 0, 0,
	0, 0, 1891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1899, 0, 1900, 0, 0, 1875, 0, 0,
	0, 1869, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1891,
	0, 0, 0, 0, 0, 1852, 1853, 0, 1885, 1886,
	1887, 1896, 1897, 1898, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1901, 0, 1889, 1883, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 1902, 1890, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1905, 0, 0, 0,
	0, 1908, 1901, 0, 0, 0, 0, 0, 0, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 1890, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1894, 0, 0, 0, 0, 1877, 1878, 1879,
	1880, 0, 1876, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1907, 0, 0, 0, 1894,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1893, 0, 0, 1903,
	0, 0, 0, 0, 0, 0, 1882, 1884, 0, 0,
	0, 0, 1907, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1899, 0, 1900, 0, 0, 0, 0, 0,
	0, 1869, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 1891,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1867,
	1873, 1895, 1872, 1868, 1875, 1865, 1863, 1864, 1856, 1857,
	1858, 1859, 1861, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1867, 1873, 1895, 1872,
	1868, 0, 1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861,
	1862, 0, 1901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1889, 1883, 0, 0, 0, 3362, 0, 1881,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 1902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1852, 1853, 0, 1885,
	1886, 1887, 1896, 1897, 1898, 1874, 0, 0, 0, 1894,
	0, 0, 0, 0, 1871, 0, 0, 0, 1889, 1883,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 1852, 1853, 1902, 1885, 1886, 1887, 1896,
	1897, 1898, 1907, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 1889, 1883, 0, 0, 0,
	0, 1854, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 1874, 1902, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 1877, 1878, 1879, 1880, 0, 0, 1854, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 1892, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 1866, 1867, 1873, 1895, 1872,
	1868, 0, 1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861,
	1862, 1893, 0, 0, 1903, 0, 0, 0, 0, 0,
	0, 1882, 1884, 0, 0, 0, 0, 0, 1877, 1878,
	1879, 1880, 0, 0, 0, 0, 0, 1899, 1860, 1900,
	0, 0, 0, 0, 0, 0, 1869, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1891, 1877, 1878, 1879, 1880, 0,
	0, 0, 0, 0, 0, 1860, 0, 1893, 0, 1875,
	1903, 0, 0, 0, 0, 0, 0, 1882, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1899, 0, 1900, 0, 0, 0, 0,
	0, 0, 1869, 1870, 1893, 0, 0, 1903, 0, 0,
	0, 0, 0, 0, 1882, 1884, 0, 1901, 0, 0,
	1891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 1900, 0, 0, 1875, 0, 1890, 0, 1869,
	1870, 0, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 0, 0, 0, 0, 0, 0, 1891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1890, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1905, 0, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1890, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1905, 0, 0, 1894, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1907, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1907, 0, 0, 0, 1894, 0, 0,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864,
	1856, 1857, 1858, 1859, 1861, 1862, 0, 0, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2390,
	0, 0, 0, 0, 0, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1867, 1873, 1895,
	1872, 1868, 0, 1865, 1863, 1864, 1856, 1857, 1858, 1859,
	1861, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1867, 1873, 1895, 1872, 1868, 0,
	1865, 1863, 1864, 1856, 1857, 1858, 1859, 1861, 1862, 1852,
	1853, 0, 1885, 1886, 1887, 1896, 1897, 1898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 987, 0,
	1037, 0, 1883, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 1902, 0,
	0, 0, 0, 0, 995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1908, 0, 0, 0, 0,
	1010, 0, 993, 992, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 1012, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 0, 0, 1007,
	1008, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1038, 999, 0, 0,
	0, 0, 0, 1000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 1878, 1879, 1880, 0, 1001, 0, 0, 0,
	0, 1860, 0, 0, 0, 1035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1036, 0, 0,
	1893, 0, 0, 1903, 0, 0, 0, 0, 0, 0,
	1882, 1884, 0, 1003, 0, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 0, 0, 1899, 0, 1900, 0,
	0, 0, 0, 0, 0, 1869, 1870, 0, 0, 0,
	1004, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1891, 0, 0, 0, 0, 1013, 1011,
	0, 0, 0, 0, 0, 0, 1006, 0, 1875, 0,
	1022, 0, 0, 1043, 1042, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1045, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1901, 0, 0, 0,
	1039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 998,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 996, 0, 0, 0, 1030,
	1031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1033, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1040, 1028, 0,
	0, 0, 0, 1894, 0, 0, 1046, 1023, 0, 0,
	1016, 1014, 0, 1019, 0, 0, 0, 0, 0, 1020,
	0, 0, 989, 0, 1041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1032, 0, 1021, 0, 0, 0, 0, 0, 1018, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 0, 0, 1024, 0, 1025, 0,
	0, 0, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1867, 1873, 1895, 1872, 1868, 0, 1865, 1863, 1864, 1856,
	1857, 1858, 1859, 1861, 1862, 0, 1029,
}

var sqlPact = [...]int{
	5463, -1000, -1000, -1000, -1000, 170, -1000, -1000, 169, 168,
	167, 165, 161, 155, 154, 152, 151, 150, 149, -1000,
	-1000, -1000, -1000, -1000, -1000, 147, -1000, -1000, 146, -1000,
	143, 142, 141, -1000, -1000, 140, -1000, 139, -1000, -1000,
	-1000, -1000, 134, 133, 128, 94424, 93855, 94991, 2427, 118851,
	101803, 2131, 83625, 118282, 83056, 117713, 2235, 11500, 117144, 2887,
	125, -1000, 116575, 123, 122, 121, -1000, 116006, -1000, 1981,
	-1000, 118, -1000, 7033, 72765, 117, 116, 115, 113, 2728,
	111, -1000, 110, 108, -1000, -1000, 107, -1000, 12108, 1594,
	-1000, 106, 105, -1000, 446, 99529, 104, 102, 101, 2698,
	100, 99, 69916, 98, 97, 95, 2476, 3049, -1000, -1000,
	2220, -1000, -1000, 94, 92, 91, 90, 89, 88, 86,
	83, 82, 81, 80, 75, 66, -1000, 65, 64, 59,
	57, 55, -1000, 54, 53, 52, -1000, 50, -1000, 49,
	48, 47, 46, 45, 44, 43, 42, 41, 37, 36,
	35, 34, 33, 32, 138976, -1000, -1000, 30, 2031, 1764,
	1749, 1745, 1729, 1727, 1042, 27, 26, 23, 22, 20,
	19, 18, 16, 14, 13, 11, 9, 8, 1, -5,
	-6, -7, -8, -9, -13, 127, -14, -15, -16, -17,
	-19, -20, -23, 3907, 3721, -1000, 1799, 1133, 32134, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 127356, 119418, -24, -92,
	-29, -1000, 3512, 1052, 57854, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 254, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 463,
	2621, 732, -1000, -1000, -1000, 115439, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2426, -47, -1000, 2126, -1000, -1000,
	-1000, -1000, -1000, 731, -1000, 2425, 2356, 331, 2352, -1000,
	-1000, -1000, 3588, 2591, 4019, 4017, 4015, 4011, 4010, 126789,
	1971, 4009, 2662, 4007, 4006, 4004, 4003, 4002, 4001, 4000,
	-1000, 93286, 1100, 92717, 92148, 3605, 114872, 91579, 114303, 129630,
	49682, 1128, 3585, -1000, -1000, -1000, -1000, -1000, -1000, 119418,
	-1000, 1095, -1000, -1000, 3999, 2206, 730, 101234, -1000, -1000,
	113734, 2089, -1000, -1000, -1000, 954, 1199, 34466, 34466, 34466,
	233, -1000, -1000, -1000, -1000, -1000, -1000, 3998, 3997, 3996,
	3995, 3994, -1000, -1000, 82487, 24955, 81918, 81349, 113165, 49099,
	91010, 90441, 3992, 3991, 3989, 48516, 77366, 112596, 129061, 3720,
	3717, 1094, 2100, 1504, -1000, -1000, -1000, -1000, -1000, -1000,
	-52, 74469, 3781, 119418, -1000, 231, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 47933, 850, 47350, 1038, 46767, 679, 112027,
	-1000, -1000, -1000, -1000, 76787, -1000, 111458, 2589, 3988, 3987,
	1194, 3986, 3469, 1907, 3984, 1951, 1277, 3982, 3981, 3980,
	3978, 3977, 3976, 3975, 1573, 110889, 3165, 1623, 110320, 1807,
	128492, 1092, 89872, 94991, 2844, 109751, 1549, 1518, -1000, -1000,
	-1000, -1000, 3264, 3043, 3026, 1154, -1000, -1000, -1000, -1000,
	61319, 9124, 8353, -1000, -1000, 11915, 109182, 64204, 94991, 94991,
	-1000, -1000, -1000, -1000, -1000, -1000, 46184, 444, 45601, 1074,
	108613, -1000, -1000, 61896, 3100, 1147, -1000, -1000, -1000, -1000,
	-1000, 108044, 45018, 390, 44435, 1035, 119418, -1000, 3163, 2065,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2470,
	1728, 3802, 2912, 76208, 2150, 1416, 3546, 3261, 3259, 1577,
	2090, 3258, 3973, 2743, 3256, 3249, 3241, 3237, 3236, 1601,
	2713, 342, 2726, 31551, 3146, 1846, 43852, 1583, 1571, 3232,
	3199, 3820, 2036, 2123, 2122, 2128, 80780, 3972, 3969, 3516,
	3186, 3185, 2975, 3183, -1000, 3097, 1564, 230, -1000, -1000,
	-1000, -1000, -1000, -1000, 1498, -1000, -1000, -1000, -1000, -1000,
	85326, -1000, -1000, 1424, -1000, -1000, 1424, -1000, -1000, -1000,
	-1000, -1000, 1471, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1799, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2455, -1000,
	2196, -1000, -1000, -1000, 2626, 3497, 3497, 3497, 3584, 451,
	440, -1000, 127, -1000, -1000, 138352, -1000, -1000, 50265, 50265,
	50265, 50265, 50265, 50265, 50265, 50265, 2241, -1000, 728, -1000,
	-1000, 766, -1000, 726, 655, 580, -1000, -1000, -1000, -1000,
	-1000, -1000, 725, -1000, -1000, -1000, -1000, -1000, -1000, 3781,
	-1000, 27921, -1000, -1000, -1000, 399, 715, 50265, -1000, -1000,
	3844, 3842, 949, -1000, 229, 1002, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3161, 712,
	705, -1000, 702, 701, 693, 692, 691, -1000, 690, -1000,
	689, 688, 687, 686, 685, 684, 681, 678, -1000, 2141,
	-1000, -1000, -1000, -1000, -1000, -1000, 641, 639, 639, 639,
	-1000, 1085, -1000, -1000, -1000, 272, 638, 236, 635, 633,
	632, -1000, 677, 676, 675, 674, 673, 670, 669, 661,
	660, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1078, -1000,
	-1000, -1000, -1000, -53, 119418, -1000, 463, -53, -1000, -1000,
	657, -1000, 36215, 36215, 36215, -1000, -1000, 2424, 50265, -1000,
	2529, -1000, -45, -45, 905, 59585, -1000, 56672, 905, 306,
	777, 65351, -1000, 3096, -1000, -1000, 656, 225, -1000, -1000,
	-1000, -1000, 25532, 3095, 119418, 119418, 119418, 94991, 94991, 94991,
	119418, 3968, 3967, 3380, 50265, -1000, -1000, 72196, 131332, 95558,
	-1000, -1000, 3700, 70483, 71628, 3159, 131332, 3155, 130768, 3965,
	-1000, -1000, -1000, -1000, -1000, 3340, 3964, 3963, 3962, -1000,
	119418, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 258, 3338,
	-1000, -1000, 98960, 258, 3335, -1000, 258, 3334, -1000, 98393,
	-1000, -1000, 2326, 3330, -1000, -1000, 260, 3329, -1000, -1000,
	-1000, 259, 3325, -1000, -1000, 223, -105, 3322, -1000, -1000,
	-1000, -1000, -1000, -1000, 138352, -1000, -1000, -1000, 130199, -1000,
	3522, -1000, 119418, -1000, 50265, -1000, -1000, 3699, 2017, 3532,
	3621, -1000, -1000, -63, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2645, 2609, 1191, 2463, -1000, 3402, 1506, 34466, 3456,
	-1000, -1000, -1000, -1000, -1000, 219, 25532, -1000, -1000, -1000,
	-1000, -1000, -1000, 5346, 3321, 1821, -1000, 2460, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2285, 3318, -1000,
	2205, 3316, 2228, -1000, -1000, 2262, -1000, 135166, 1399, -1000,
	-1000, -1000, -1000, 2154, 3313, -44, -1000, -1000, 2720, -1000,
	-1000, -1000, -1000, 135837, -1000, 3099, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2134, -1000, 1355, 3312, -1000,
	2910, 2910, 89303, 3293, 63627, 61896, 74469, -56, -1000, -1000,
	-1000, -1000, -113, -1000, 24372, 138352, -1000, -1000, -1000, -1000,
	1856, 138352, 910, -1000, -1000, 3311, -1000, 138352, 909, -1000,
	-1000, 3309, -1000, 2708, -1000, 3153, -1000, -1000, 2533, 2526,
	1051, -1000, 3961, -1000, -1000, 3960, -1000, 3958, 3957, 3956,
	-1000, 1849, 2088, 3954, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 88736, 2422, -1000, -1000, 87029, 3150, -1000, 2525,
	3620, -1000, 88167, 1089, -1000, 1025, 2524, -1000, 97826, 1020,
	2522, -1000, 3953, 3604, 2849, 1025, 2516, -1000, -1000, -1000,
	-1000, -1000, 1005, -1000, 67632, -1000, 67632, -1000, 1702, -1000,
	126222, -45, 94991, 3781, -1000, -102, -1000, -1000, -1000, 1052,
	-1000, 60739, -1000, 60739, 100665, 77943, 1008, 3094, 69337, 138315,
	-1000, 1050, -1000, -1000, 138352, -1000, -1000, -1000, 2705, -1000,
	-187, 2909, -1000, 77943, 63050, 3092, 2702, -1000, 138352, -1000,
	-1000, -1000, -1000, 138352, -1000, -1000, -1000, 77943, 87029, -1000,
	107475, 87598, -1000, -1000, 1563, 2694, -1000, -1000, -1000, 77943,
	1356, 77943, 77943, 77943, -1000, 106906, -1000, -1000, 2180, 1584,
	3519, 2159, 94991, -1000, 2058, -1000, -1000, -1000, 3534, 3290,
	119418, -1000, -1000, 3147, -1000, 73901, 97259, -1000, 96692, -1000,
	96125, -1000, 94991, -1000, 94991, -1000, 3948, 3947, 3944, -1000,
	-1000, 3942, -1000, 3940, 3528, -1000, 699, 43269, 138352, 3527,
	-1000, 3936, 2107, 3146, 138352, -1000, 3287, 1769, 1753, 119418,
	-1000, -1000, 119418, -1000, 119418, -1000, -1000, -1000, 1631, -1000,
	-1000, 2641, -1000, -1000, -1000, 1049, -1000, -1000, 94991, 94991,
	94991, 94991, 1755, -1000, 42686, -1000, -1000, 3194, 3934, 1830,
	-1000, 1990, -1000, 3088, 3520, -1000, 1555, 1860, 217, 3846,
	-1000, -1000, 266, -1000, -1000, -63, -1000, 125655, -1000, 2626,
	-1000, 119418, -1000, 2642, 3127, 3142, 1687, 2442, 2738, -1000,
	42103, 2692, 53763, 2453, 127, -1000, -1000, 127, 127, 33300,
	-1000, -1000, 70483, 70483, 25532, 1481, 50265, 50265, 50265, 50265,
	50265, 50265, 50265, 50265, 50265, 50265, 50265, 50265, 50265, 50265,
	50265, 50265, 50265, 50265, 50265, 50265, 50265, 50265, 50265, 50265,
	50265, 50265, 50265, 50265, 50265, 50265, 50265, 50265, 50265, 50265,
	50265, 50265, 2307, 50265, 1456, 50265, 50265, 50265, 50265, 2292,
	-1000, -1000, 2076, 521, 2176, 655, -1000, -1000, -1000, 3773,
	3773, 3773, 1001, 1001, 1001, 138948, 138948, 556, 3932, 766,
	-1000, 50265, -1000, 71, 60153, 50265, 26111, -1000, 440, 10157,
	2610, -1000, 439, 26723, -1000, -1000, -1000, 27921, 580, 41491,
	50265, 1058, 138352, -1000, -1000, 1468, 3795, 23789, 3038, 2962,
	650, 839, 829, 30939, 30327, 29715, 29103, 823, 822, 50265,
	50265, 50265, 50265, 50265, 50265, 50265, 50265, -1000, -1000, 3808,
	-1000, 3795, -1000, -1000, -1000, -1000, 3795, 1476, 1417, 3795,
	-1000, 3795, 3795, 6256, 6256, 40908, 40325, 39742, 54346, 39159,
	50265, 28520, 38576, 37993, -1000, 119418, -53, 3697, 50265, 284,
	-1000, 136231, -1000, 284, 284, 649, -107, 138352, 2709, 2709,
	58431, 2488, 2283, 2283, 2283, -1000, 905, 18504, 905, 105205,
	2295, 905, 905, 210, 245, 436, 56095, 2529, 105205, 747,
	647, -30, -31, -33, -1000, -1000, -36, -41, -1000, -1000,
	94991, 646, 26111, 25532, 209, 2094, -110, 2778, 2775, -1000,
	2773, 2752, -1000, 2746, 2419, -1000, -1000, -1000, 1886, -112,
	1454, 94991, 119418, 1513, 3931, -132, -1000, 7209, -115, -1000,
	1303, 205, 3795, -1000, -1000, -1000, -1000, -1000, 3929, 3928,
	-1000, 1076, 644, 643, 327, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 641, 639, 639, 639, -1000, 272, 638,
	236, 635, 633, 632, -1000, -1000, -1000, -1000, -1000, 3084,
	94991, 119418, 1510, 3926, 84192, -105, 95558, -91, -1000, -1000,
	119418, -1000, -1000, -1000, 3925, -1000, 94991, -1000, -1000, 94991,
	258, 3306, -1000, 94991, -1000, 94991, 257, 3305, -1000, -1000,
	119418, -1000, 94991, 94991, -1000, 119418, 119418, 119418, 131332, 131332,
	253, -1000, 94991, 869, -117, 1204, -63, -1000, -1000, -1000,
	-1000, 1424, -1000, 1845, -1000, -1000, -1000, -1000, -1000, -1000,
	1582, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 949,
	-1000, -1000, -1000, -1000, -1000, -1000, 3783, 3778, -54, -1000,
	-1000, 25532, -1000, -64, 1704, 530, 1432, -1000, 80211, 2461,
	3518, 3924, 2831, 3477, 1693, -1000, 1628, 629, -1000, 3600,
	85326, 3633, 3648, 1372, -1000, 3083, -1000, -1000, -1000, 953,
	1815, 1848, 1419, 1406, 85326, 2205, -1000, 70483, -1000, 2795,
	3583, 1415, 1413, 1415, 1415, 1404, -1000, 85326, 1840, 1392,
	1330, 1326, -1000, -1000, 2004, 1997, -1000, -1000, 106339, -1000,
	1323, 1322, 3716, 2455, 2251, 788, 1992, -1000, 1398, 1321,
	3082, -1000, -1000, -67, 3631, 3634, 1372, -1000, 3080, 1320,
	-1000, -1000, -1000, 3582, 94991, 25532, 1644, 1638, 1629, 1822,
	1318, -55, -1000, 3627, 3484, -1000, 87029, 87029, 3738, 77943,
	-1000, 2552, 1316, 1314, -1000, 1075, 5137, 3427, -1000, 131332,
	1075, 1075, 2151, 3304, 2890, 1750, -1000, 2908, 831, 2903,
	-1000, -1000, -1000, 831, -56, 74469, 119418, 196, -1000, 71,
	50265, 50265, 71, 50265, 71, -1000, 3611, 3302, 3300, 3922,
	-1000, -1000, -1000, -1000, -1000, 3921, 2023, 2657, -1000, -1000,
	615, 2514, 3079, 119418, 2792, -58, 94991, -1000, 73333, 3289,
	131332, 2205, 2512, -1000, -1000, 86462, -1000, 3285, 463, 2511,
	-1000, 659, 3920, 3283, -1000, 125088, -1000, 3522, 1497, 3282,
	1144, 668, 3695, -1000, 668, 68201, -1000, 119418, -1000, -45,
	6109, 79077, -118, -123, 432, -1000, 105772, 119418, 119418, 3444,
	2033, 2019, -1000, 1016, 61896, -1000, 61896, -126, -1000, -187,
	2897, 1610, 61896, -1000, 1008, 1008, 831, -1000, 831, -1000,
	94991, 3141, -1000, -1000, 77943, 1008, 1008, 1008, -1000, -1000,
	-1000, -1000, 3917, 3916, 3915, 3913, -1000, -1000, 1023, 94991,
	119418, 94991, -1000, -1000, 1724, -1000, 188, -1000, 131332, -1000,
	131332, 119418, 94991, -1000, 1023, 119418, 1023, 119418, 1023, 119418,
	1023, 1023, -1000, -1000, -1000, -1000, -1000, 71, -1000, -1000,
	138352, -1000, 50265, -1000, -1000, 1627, 3904, 1741, -1000, 3135,
	-1000, 3129, -1000, 6, -1000, -1000, 1939, -1000, 3840, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3903, 138352, -1000,
	2086, -1000, -1000, -1000, -1000, 94991, 94991, 94991, 94991, 119418,
	3424, -1000, 119418, 3421, 94991, -1000, 3774, -1000, -1000, 85326,
	-1000, 2642, 3127, -1000, -1000, -1000, -1000, -1000, -1000, 1531,
	2382, -1000, 2687, -1000, 1673, -1000, -1000, -1000, 138352, 54929,
	-1000, -1000, 138352, 1898, -1000, 53180, 52597, -1000, -1000, 1781,
	94991, 2797, -1000, 2797, -93, -1000, 135796, 2686, 94991, -1000,
	-1000, -1000, -1000, -1000, 924, 761, 761, 1446, 1446, 1446,
	1446, 3612, 1207, 420, 545, 10877, 10877, 631, 631, 631,
	631, 631, 10877, 6296, 1001, 1001, 6296, 6296, 6296, 6296,
	6296, 1001, 1001, 1001, 10877, 10877, 10877, 1001, 138948, 14438,
	11078, 50265, 50265, 1311, 2069, 521, 10615, 50265, 9367, 9367,
	9367, 9367, -1000, 2291, -1000, -1000, -1000, -1000, 3078, 614,
	54346, 54346, -1000, -1000, -1000, -1000, 27322, 50265, -1000, -1000,
	-1000, -1000, 37381, -1000, -1000, 135125, -322, 431, -1000, 184,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 429, -88, 67, -1000, 50265, 50265, 50265,
	426, -1000, 181, 50265, 119418, -1000, 131902, 745, -128, -1000,
	-131, 1491, -1000, 50265, -1000, -1000, 1309, -1000, 1307, 1306,
	1304, -1000, 612, 424, -1000, 180, -1000, 2261, 610, 609,
	50265, -1000, -1000, -1000, -1000, -1000, 134897, -1000, -1000, 134512,
	-1000, -1000, 134446, -1000, -1000, 134409, -1000, -1000, -1000, -1000,
	-1000, 138249, 17575, 17088, 16472, 9433, 15836, 15041, -136, 422,
	-144, 419, 923, 921, 418, 416, 404, -145, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-147, 403, -1000, 3072, -88, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 393, -1000, 391, -1000, 137864, -88, 387,
	5574, -1000, 54346, 54346, 54346, 54346, -1000, 385, -1000, 135609,
	-1000, 137594, 36798, 36798, 36798, 384, 137557, 50265, -88, -153,
	-1000, -154, -1000, -1000, 504, -160, 1054, 36215, 57263, 25532,
	-1000, 1054, 1054, 50265, -1000, 50265, 2700, -1000, -1000, -1000,
	-1000, 2699, 2252, 2709, 58431, -1000, -1000, -1000, -1000, 105205,
	-1000, 3781, 2918, -1000, 105205, -1000, -1000, 119418, 463, -1000,
	105205, 105205, 25532, 905, -1000, 905, 105205, 585, -1000, -1000,
	-1000, -1000, -1000, 383, 66496, 67, 179, 25532, 1025, -1000,
	-1000, 2826, 2826, 2826, 2826, 2826, 94991, -1000, -1000, 131332,
	1301, -61, -125, 2896, -1000, 3735, -1000, 2172, -1000, 70483,
	-1000, 763, 1063, 25532, -1000, -1000, -1000, 606, -1000, 3795,
	3795, -1000, 3795, 131332, 3065, 274, 2895, -1000, 2417, -57,
	270, 131332, 3902, -1000, -1000, 258, -1000, 94991, 258, 258,
	-1000, 94991, 94991, 2326, -1000, 260, -1000, 259, -1000, -1000,
	-105, -1000, 1041, 34466, -1000, 1424, -1000, -1000, 1630, -1000,
	2068, -1000, 1380, -1000, -1000, -1000, -1000, 34466, -1000, 2428,
	119418, 119418, 94991, -1000, 103504, 119418, -1000, 2299, 131332, -1000,
	2507, 124521, 2485, 123954, 70483, -1000, -1000, 603, 995, 2684,
	2683, 1137, 119418, 119418, 2682, 123387, 122820, -1000, 3900, 119418,
	2174, 50265, 103504, 3579, 2272, 2911, 71, 71, -1000, 71,
	-1000, -1000, 601, 1246, 94991, 94991, 119418, 131332, 94991, 1991,
	-1000, -1000, -1000, -1000, -1000, 85893, -1000, -1000, 3807, 3800,
	-1000, 1415, -1000, -1000, -1000, 1415, 2205, 1912, 119418, 131332,
	94991, 131332, 122253, 121686, -1000, -1000, 1805, 119418, -1000, -1000,
	-1000, -1000, 1492, -1000, 788, 1299, 3064, 50265, 50265, 2193,
	71, 71, -1000, 71, 600, 25532, 2038, -1000, 3144, 119418,
	3836, 121119, 3831, 119418, 119418, 119418, 131332, 3483, 119418, -1000,
	-1000, -1000, -1000, 3738, -1000, 872, 119418, 131332, -1000, 120552,
	5137, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2185, 75629, 1152, 119418,
	1355, -1000, -1000, 1796, 1297, 1295, 85326, 2190, 1793, 1929,
	131332, 61896, 1018, 61896, 2870, -1000, -1000, 23206, -1000, 138352,
	138352, -1000, 138352, -1000, 73333, 77943, 119418, -1000, -1000, 1087,
	119418, 79644, 994, 3281, 67063, -113, 1008, 77943, 94991, -58,
	2792, 119418, -1000, -1000, 2205, 3280, 463, 2506, -1000, 131332,
	3694, 3278, 598, 3894, 3891, -1000, 94991, 2414, 2505, -1000,
	-1000, 119985, 3361, 788, 119418, 1054, 58431, 2035, -1000, 64783,
	1118, 119418, 1938, 263, -1000, -1000, -1000, -21, 119418, -1000,
	773, -1000, -1000, 6109, 6109, 1008, -150, 588, -1000, 871,
	870, 62473, -161, -1000, 177, 581, 867, 866, -1000, 3204,
	-1000, -187, -1000, 77943, 1016, 61896, 3056, -187, 2892, 3047,
	-1000, -1000, 1039, -1000, 1534, 1008, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -48, 1924, 119418,
	-105, -105, -72, -61, -1000, 1023, -1000, 1023, -1000, 1023,
	-1000, -1000, -1000, 138352, -1000, -1000, -1000, 1715, 1690, 119418,
	-1000, -1000, 119418, -1000, -1000, 25532, 119418, 94991, 25532, 94991,
	3126, 3117, -1000, -1000, -1000, 119418, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1163, -1000, 1898, 2371, -1000, 580,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2615,
	-1000, -62, 33300, 907, -1000, -1000, 94991, -49, 50265, 50265,
	9722, 8357, 50265, 54346, 54346, -1000, 50265, 8172, -1000, -1000,
	-1000, -1000, -1000, 3046, 578, 50265, 70483, 1536, 925, -1000,
	377, 12498, 6296, -1000, 50265, -1000, 5802, -1000, 373, 35632,
	-1000, 136459, -40, -167, -1000, 19101, -88, -169, -1000, -1000,
	760, -1000, 3357, -1000, 50265, 137122, 2585, 2211, 1920, 1735,
	3795, 3830, 22623, -1000, 68769, 1056, 2322, 133810, -1000, -1000,
	-1000, -1000, 70483, 70483, 50265, 50265, -1000, 50265, 50265, 50265,
	-1000, -1000, -1000, 3795, 915, -1000, -1000, -1000, 915, -1000,
	-1000, 1415, -1000, 1415, -1000, 50265, -1000, -1000, 3040, 50265,
	-1000, 70483, 70483, 54346, 54346, 54346, 54346, 54346, 54346, 54346,
	54346, 54346, 54346, 54346, 54346, 54346, 54346, 54346, 54346, 54346,
	54346, 54346, 54346, 2712, 54346, 3771, 3771, 3771, 1434, -1000,
	3112, 3040, 50265, 50265, 70483, 372, 369, 368, -1000, 50265,
	-88, -1000, -1000, 10035, 577, -1000, 2611, -1000, 2961, -1000,
	50265, -1000, -159, -1000, 2529, -1000, -1000, 2961, 2961, -172,
	138352, 58431, 58431, -1000, 576, 50265, 2693, -1000, -1000, 744,
	-320, -1000, 863, -1000, -1000, -1000, -1000, -1000, -1000, 862,
	-1000, 463, -1000, -1000, -1000, 175, 105205, 105205, 741, -1000,
	-178, -1000, -1000, -179, -1000, 3693, 367, 25532, -1000, 1054,
	2759, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2745, -264,
	131332, 131332, 1785, 2350, 3829, -1000, 3797, 753, 740, 173,
	3795, 366, 363, 360, -105, 131332, 131332, 1771, 71060, 131332,
	-1000, -1000, -1000, 258, -1000, -1000, -1000, 257, -1000, -1000,
	-1000, -1000, 2767, -1000, -63, -1000, -1000, -1000, 50265, -1000,
	-1000, 3517, 574, 1291, 1290, -1000, -188, -1000, 860, -1000,
	-1000, -1000, -1000, 3042, -1000, 3277, -1000, 2504, -1000, 1122,
	2503, 2098, -1000, 50265, 572, 2842, 569, 567, 3887, 2170,
	3886, 1142, 3273, 2326, 3266, 2326, -1000, -1000, -1000, 978,
	-1000, 138352, -189, -1000, 2272, -1000, 565, 564, -1000, -64,
	1703, 467, 1280, 1037, -1000, -1000, 50265, 50265, 104638, -1000,
	460, 3511, -50, -1000, -1000, -1000, 1770, 1276, 1274, -1000,
	-1000, -1000, -1000, 2205, 1767, 1267, 1257, -1000, -1000, -1000,
	-1000, -1000, 2500, -1000, -1000, 3265, 1036, -1000, 3188, 3187,
	912, 119418, 50265, 50265, 136935, 136894, -1000, 1034, -1000, -1000,
	50265, -1000, -67, 1253, 3629, 2498, 94991, -1000, 2326, 3233,
	1251, -1000, 1236, -1000, -1000, -1000, 3625, 3624, 1248, 3738,
	61896, -1000, -1000, -1000, 77943, -1000, -1000, 75052, -1000, -1000,
	1075, 119418, 131332, 94991, 1903, -1000, -1000, 84192, 84759, 119418,
	2890, -105, 831, -1000, 2603, 831, 1018, 3039, -1000, 2723,
	-1000, 1027, 94991, 3881, 355, -194, -69, 70483, -1000, -1000,
	-1000, -1000, 2485, 94991, 119418, 1333, 2841, 119418, 119418, 3692,
	-1000, 2436, 616, 94991, 900, -1000, 3781, -1000, -1000, -1000,
	1026, -1000, 3615, 94991, 3682, 3230, 1025, 71, 94991, 3796,
	-1000, -1000, 3681, 94991, 3228, 2413, 2496, 2648, 788, 78510,
	1025, 2297, -78, -1000, 1938, 35049, 3509, -195, -1000, -1000,
	-1000, 1054, 68201, 58431, 50265, 3877, -197, -1000, -1000, -1000,
	-1000, -1000, 102370, 102370, 77943, 77943, 77943, 1008, 119418, 119418,
	3875, 77943, 77943, 77943, -70, 563, -1000, 859, 857, 845,
	-1000, -1000, -1000, -1000, -1000, -1000, 844, 838, 837, 1016,
	-1000, -1000, -187, 61896, 1016, 61896, 71, -1000, 2333, 94991,
	-1000, 22040, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1023,
	-113, -1000, -1000, -1000, 2198, 2445, 2198, 1922, 1914, -1000,
	-1000, 2363, -1000, -1000, -1000, -1000, 2748, 3490, 25532, 3619,
	9367, 50265, 50265, 6913, 729, 602, 9367, 50265, 50265, 70483,
	6954, -200, 50265, 50265, -1000, 50265, 737, 138352, -1000, 3826,
	50265, 349, 348, -1000, -1000, -1000, 3792, -1000, -1000, -1000,
	138352, 50265, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 347,
	-1000, 72, -1000, -1000, -1000, 127923, -1000, 50265, 344, 3578,
	-1000, 340, 339, 11739, 501, 133773, 133707, 133322, 336, -1000,
	-1000, 334, 330, 138352, 3112, 138352, -1000, -1000, 1170, 1170,
	1375, 1375, 1375, 1375, 3771, 1371, 876, 2273, 799, 799,
	799, 1455, 1434, 1434, 799, 799, 799, 1434, 3035, 2653,
	560, 5697, -1000, -1000, 138352, 138352, 323, -1000, -1000, -1000,
	-88, 321, 10035, -1000, 2950, 3577, 138352, -1000, 58431, 2950,
	2950, -1000, -1000, 2252, 119418, 138352, 58431, -1000, 2918, -1000,
	20285, 19696, -1000, 25532, -1000, -1000, -1000, -1000, 3781, -1000,
	66496, -1000, 559, -1000, -39, -1000, 2759, -1000, 836, -1000,
	-1000, 77943, 77943, 2826, -1000, 2968, -264, -186, 119418, -1000,
	-1000, 735, 3874, 751, 25532, 319, -1000, -1000, -1000, -105,
	-105, 119418, 3032, 94991, 119418, 1501, -105, -1000, -1000, -1000,
	3443, 138352, 119418, 119418, -1000, 103504, 34466, 1575, 104071, 119418,
	3227, -1000, 3222, -1000, 1137, 5085, 133094, 59008, -1000, 59008,
	119418, -1000, -1000, -1000, -1000, 2049, 1695, 3873, 1182, -1000,
	3537, 119418, -1000, 119418, -1000, -1000, -1000, 103504, -1000, 119418,
	119418, 94991, 119418, -1000, 131332, 3191, -203, 138352, -71, -1000,
	835, -1000, 1376, -1000, 21457, 119418, 131332, 94991, 119418, 131332,
	94991, 3219, 119418, 2230, -1000, -1000, 3160, -1000, 138352, 136500,
	71, 50265, 3189, -206, 25532, -1000, 3825, 3822, 3217, 3541,
	-1000, 119418, 3821, 119418, 94991, 3440, 1022, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1762, 1233, 1232, 2410, 2405, 2338,
	-72, 2190, 1018, -75, 558, -1000, 832, -1000, -1000, 825,
	820, 1018, -1000, 77943, 61896, 3870, 463, -1000, 2824, -1000,
	100096, 79644, 2386, -1000, -1000, 554, 119418, 119418, 553, -1000,
	71, -1000, 3868, 103504, 552, -1000, 2332, -1000, 734, -1000,
	2634, 131332, 2205, 71, 94991, -1000, 1014, 463, 318, -76,
	-1000, 3351, 1135, 25532, 94991, 3203, 2654, 788, 78510, -1000,
	1497, 2738, -1000, -77, -1000, 480, 71, 2297, -1000, -78,
	138352, -1000, 814, -1000, -209, -1000, -1000, 312, -1000, 3438,
	-1000, -1000, -214, -1000, -1000, 2678, 2678, 77943, 61896, 77943,
	77943, 77943, 61896, -1000, 1016, 831, -1000, -187, -1000, 2490,
	-1000, -1000, -1000, -1000, -1000, 25532, 1786, -1000, 551, 550,
	-1000, -1000, -1000, -1000, 3490, 9367, 9367, 50265, 50265, 50265,
	9367, 6954, -216, -1000, 9367, 9367, -88, -1000, -1000, 136459,
	-1000, -1000, -1000, 138352, -1000, 20874, 2215, -1000, 133053, -1000,
	33300, -1000, -1000, 50265, 50265, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 54346, 3031, 548, 70483, -1000, -1000, 310,
	1043, 50265, 52014, 2529, 1043, 1043, -1000, -217, -1000, -1000,
	-1000, 3781, -1000, 3781, -39, -1000, -1000, 3867, 25532, -1000,
	77943, -1000, -1000, -1000, 2335, -1000, -1000, 3175, -208, 604,
	-1000, 3866, -1000, -1000, 158, 131332, 3028, 136, 2884, -1000,
	-1000, -1000, -1000, -1000, 2879, 3668, -1000, 1989, -1000, 119418,
	119418, -1000, 119418, -1000, 25532, 119418, 2973, 1341, -1000, 995,
	2677, 546, 54346, 1161, 94991, 908, 2937, 2934, -1000, 3711,
	3575, 2925, -222, -1000, 119418, 50265, 119418, -223, -225, 2468,
	-1000, -1000, 1160, 1339, 50265, 1155, -1000, -1000, -1000, 70483,
	544, 2326, 2326, -1000, -230, -231, -1000, -1000, -1000, 50265,
	1230, 119418, 33883, -1000, 3865, 3511, -1000, -1000, -1000, -1000,
	-1000, -1000, 119418, -1000, 119418, -1000, 50265, -1000, 136272, 50265,
	1222, -1000, -1000, -1000, 3818, 2326, 25532, 2326, -1000, 2326,
	3541, 1179, 2433, 119418, 131332, 94991, 1836, 1836, 3106, -1000,
	-1000, -1000, 2627, 2627, 77943, 61896, 61896, -1000, -79, 1018,
	-1000, 3661, 2212, 3863, -1000, -1000, -1000, -1000, 2673, -1000,
	-1000, -1000, 119418, 2670, 2949, 59008, 543, 542, 119418, 1009,
	-1000, -232, 79644, 994, 958, -1000, -80, 531, -1000, 813,
	-1000, -1000, -1000, -1000, 463, -1000, 2764, 3656, -1000, 3813,
	527, 525, 119418, 2402, 522, 25532, 3507, 788, 78510, -1000,
	3361, 1938, -1000, 2479, 119418, 3476, -1000, 2738, 521, -1000,
	1008, 520, 1008, -1000, -233, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1016, -83, -1000, 891, 843, -1000, -1000,
	94991, 94991, 50265, 50265, -1000, 9367, 9367, 9367, -1000, 297,
	-1000, -1000, 2297, 3572, -1000, -85, 132659, 132618, 5518, 54346,
	70483, -238, -1000, -1000, 119418, 138352, -86, -1000, 138352, 517,
	516, 434, -1000, -1000, -1000, 586, 502, -1000, -1000, -1000,
	-1000, 131332, 3862, -1000, 131332, -105, 131332, 131332, 1758, 102937,
	119418, -1000, -1000, 2098, 2041, -1000, -1000, -1000, 119418, 2486,
	-1000, -1000, -1000, 1019, 50265, 5697, 54346, 507, 50265, -1000,
	505, 503, 3655, 3414, -1000, 2814, 3034, 2030, 59008, -1000,
	3490, -1000, 132390, -1000, 1134, 1994, -1000, -1000, -1000, -1000,
	138352, 54346, 3541, 59008, -1000, -1000, 500, 499, 138352, 479,
	803, 3027, -1000, -1000, -1000, -1000, -1000, 138352, 71, 138352,
	474, 3629, -1000, -1000, -1000, -1000, 2326, 94991, 801, -1000,
	-1000, -1000, 1211, -1000, -1000, -1000, -1000, 3861, 3859, 3025,
	84192, -1000, -239, -1000, -1000, -1000, 1998, 71, 994, -1000,
	-1000, 2386, 473, -1000, 1004, 3793, 3793, -240, 59008, 59008,
	-241, 2390, 2762, -1000, 291, 3652, 958, -1000, 3762, -1000,
	3398, 3398, 50265, 3643, 3437, -1000, 71, -1000, 3796, 59008,
	-1000, 94991, 59008, 2394, 2125, 2638, 78510, -1000, 2648, -1000,
	-1000, -246, 119418, 1938, -1000, -1000, 77943, -1000, -1000, -1000,
	2490, -1000, 119418, -1000, 119418, -1000, -1000, -247, -248, -1000,
	2108, 50265, 33300, -1000, -1000, 5518, -249, -1000, -87, -1000,
	3641, 52014, 3858, 3856, 3854, -1000, -1000, -264, -1000, -105,
	-105, -105, 119418, -1000, 1986, -1000, 2485, -1000, -1000, 3200,
	-1000, 2956, 472, 132005, 5697, 2614, 119418, 131939, 2205, 2205,
	-1000, 3632, 3029, -1000, -1000, 2193, 470, -1000, -1000, -1000,
	-1000, 907, 119418, 1004, 2952, 94991, 5697, 1136, -254, 2198,
	2198, 50265, 32717, 2229, -1000, 50265, -1000, -1000, 3541, 61896,
	131332, -1000, -1000, 131332, 2393, -1000, 2987, 3770, -1000, 2390,
	119418, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1134, -255, -256, -1000, -1000, 3533, -1000,
	3432, 2824, 71, -1000, -1000, -1000, -257, 138352, 71, 3853,
	1014, 287, -262, 1135, -263, 94991, 1976, -1000, 788, -1000,
	2654, 1054, 3370, -1000, -265, -1000, -270, -273, -1000, -1000,
	283, 51431, 51431, 51431, -88, -93, -1000, 119418, 469, -1000,
	-1000, -1000, -1000, -1000, 130, -1000, -1000, 3048, 892, -1000,
	826, 1993, 282, 1132, 281, 237, -1000, -1000, -1000, 2925,
	-1000, 119418, -1000, -1000, -1000, 892, 463, -1000, 50265, 1134,
	-275, -1000, 1110, -276, -1000, 1107, -278, -1000, 3023, -1000,
	-281, 2326, -1000, -264, 253, 1836, 1013, 3610, -1000, -1000,
	-1000, 2623, -284, -1000, -1000, 2030, 1134, 2193, 2543, -1000,
	2212, 1009, -1000, -1000, -1000, -1000, -1000, 1134, 462, 2030,
	461, 1590, 788, -1000, -1000, 1415, 3507, 3369, 1452, 1008,
	-1000, -1000, -1000, 3263, -1000, 55512, 2344, 1901, 135568, 3263,
	3263, -1000, -1000, 131332, 119418, 1004, 3597, -1000, 846, 842,
	1572, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1054,
	-287, -1000, 2614, 138352, 1004, -1000, 2198, 2875, -1000, 2198,
	3008, -1000, 2192, -1000, -1000, -1000, -1000, 2993, -1000, 1853,
	3746, -1000, -1000, 1004, 119418, 2193, 2030, 1004, 1871, 1867,
	3852, 994, 2390, 2030, 59008, 2193, 59008, 2163, -1000, 119418,
	-1000, 2125, 1401, -1000, 1688, -1000, -1000, 2161, 3706, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -105, -1000, -1000, 798,
	-1000, 3399, -1000, 1138, 2227, 2227, -1000, -1000, 826, -1000,
	-1000, 459, -1000, 458, -1000, 131332, 2301, -1000, -1000, -1000,
	-1000, 1004, 2193, 1054, -1000, 3851, -1000, 2390, -1000, 2193,
	-300, 1004, -301, 2200, -1000, -1000, -113, 1976, -1000, 1678,
	68201, 1891, -1000, -1000, 2275, 50848, 50265, -1000, 3745, -1000,
	-1000, 2690, -1000, 2925, 50265, 50265, 253, 65919, 1054, 1004,
	-1000, -1000, 2623, 1004, 1134, 1054, 2030, -1000, 788, 1590,
	68201, -271, -1000, -1000, -1000, 138352, -1000, -1000, -1000, -1000,
	-303, -308, -1000, -150, 102370, -1000, 1054, -1000, 1054, 2030,
	-1000, 2193, 131332, 2163, -271, -1000, 2193, 1209, -309, -1000,
	-1000, 2193, 1004, -1000, -1000, -1000, -1000, -1000, 456, -1000,
	1004, 1054, 50265, 1054, -1000, -310, -1000, 2193, -1000,
}

var sqlPgo = [...]int{
	0, 4768, 4766, 4765, 4762, 4755, 4751, 4749, 4747, 4746,
	4745, 4740, 4739, 4738, 4733, 148, 4732, 4731, 4730, 4729,
	4726, 4722, 4718, 4716, 4715, 4714, 4713, 4712, 4711, 4709,
	4707, 4704, 4703, 4699, 4698, 4694, 4691, 4689, 4686, 4685,
	4682, 4679, 4678, 4676, 4675, 4674, 4670, 4668, 4666, 4665,
	4658, 4656, 4654, 4652, 4649, 4648, 4647, 4646, 4644, 4643,
	4642, 4637, 4634, 4633, 4632, 4628, 4627, 4625, 4624, 63,
	4623, 4622, 4621, 4619, 4618, 4617, 4616, 4614, 4611, 4609,
	4604, 4599, 4598, 4597, 4595, 4594, 4589, 4587, 4583, 4580,
	72, 4579, 284, 4572, 4570, 4568, 4565, 4563, 4562, 4560,
	4551, 4549, 4544, 4542, 4541, 282, 4539, 157, 175, 4536,
	4534, 4034, 4533, 4531, 281, 4530, 4527, 4526, 4525, 4524,
	294, 4519, 4518, 4517, 4516, 4513, 4512, 4505, 4504, 4503,
	4499, 4490, 4489, 100, 141, 4486, 4485, 1620, 4481, 4479,
	4478, 4477, 4470, 4468, 4467, 4465, 4464, 4463, 4461, 261,
	174, 4458, 279, 4457, 4454, 4453, 4450, 4448, 4447, 4443,
	4441, 4440, 4439, 4438, 4436, 4435, 4433, 4432, 4430, 4427,
	4420, 4414, 4413, 4411, 4410, 4409, 4408, 4403, 4402, 4401,
	4398, 4396, 4394, 4392, 4391, 4389, 4388, 4386, 4382, 4379,
	4378, 4376, 4374, 265, 226, 132, 4372, 4371, 278, 277,
	4369, 4366, 4365, 4364, 4361, 140, 6, 49, 4359, 4357,
	92, 98, 93, 91, 109, 105, 4354, 130, 4353, 139,
	127, 4352, 123, 119, 26, 37, 275, 255, 9441, 250,
	4351, 4349, 4347, 253, 205, 4344, 252, 4343, 4342, 4341,
	4339, 4338, 4337, 79, 58, 220, 4335, 4334, 153, 183,
	191, 189, 186, 185, 283, 60, 113, 85, 68, 47,
	19, 89, 227, 20, 1, 273, 4332, 268, 14, 150,
	9, 33, 4331, 4330, 4329, 4328, 3654, 106, 4327, 276,
	257, 182, 4326, 4324, 4322, 639, 4321, 4319, 55, 4318,
	213, 96, 115, 11, 146, 4317, 156, 180, 32, 4316,
	167, 70, 4313, 4312, 108, 97, 9286, 12660, 4311, 4310,
	124, 76, 95, 3208, 224, 197, 206, 208, 179, 181,
	54, 219, 218, 187, 194, 4308, 259, 4307, 3671, 111,
	196, 172, 5347, 4306, 4304, 4302, 90, 4299, 117, 4298,
	4297, 73, 21, 4, 2, 151, 42, 38, 12, 4290,
	34, 136, 51, 27, 4288, 22, 4287, 4284, 4283, 4277,
	52, 4276, 50, 164, 4275, 4273, 286, 4270, 110, 64,
	57, 4269, 23, 238, 4268, 242, 143, 4266, 4261, 264,
	211, 198, 4260, 83, 243, 4259, 4258, 4256, 4255, 4247,
	4246, 155, 3, 142, 4243, 4239, 154, 4237, 56, 251,
	207, 4233, 67, 4232, 4231, 193, 59, 163, 285, 258,
	240, 138, 241, 190, 248, 4230, 4229, 4227, 231, 4226,
	4217, 230, 178, 4216, 4213, 256, 295, 104, 48, 86,
	249, 88, 204, 170, 4211, 210, 4210, 4208, 292, 195,
	237, 40, 10, 13, 118, 116, 4207, 7, 247, 161,
	233, 131, 4205, 7183, 177, 3030, 4203, 4200, 171, 137,
	84, 145, 162, 274, 101, 4199, 4197, 2331, 4196, 4194,
	4187, 4183, 200, 4182, 4181, 4180, 152, 234, 215, 4178,
	121, 82, 53, 24, 169, 266, 287, 133, 235, 173,
	267, 4177, 4176, 4172, 201, 4170, 80, 107, 165, 209,
	263, 66, 4169, 99, 4168, 160, 992, 78, 159, 4164,
	239, 4163, 4162, 4160, 4158, 4157, 4156, 4151, 908, 246,
	4150, 4149, 4148, 35, 203, 4146, 269, 192, 212, 125,
	62, 4145, 112, 3799, 4144, 333, 232, 69, 5, 4143,
	29, 4140, 2190, 65, 4139, 0, 13839, 9860, 12472, 13647,
	4138, 4346, 4137, 4136, 4135, 236, 87, 4134, 4131, 4130,
	114, 4126, 94, 4125, 4124, 81, 4123, 25, 17, 18,
	31, 28, 262, 166, 4121, 4120, 61, 149, 134, 4119,
	288, 244, 4118, 4117, 4112, 4111, 102, 4110, 41, 4109,
	43, 4107, 4103, 44, 15, 45, 4100, 4099, 168, 4096,
	128, 222, 4089, 176, 4088, 74, 144, 4087, 4083, 4076,
	77, 71, 270, 223, 225, 126, 4074, 289, 4073, 216,
	4071, 4070, 30, 4066, 4061, 254, 122, 120, 46, 260,
	147, 39, 188, 228, 4059, 4058, 184, 4056, 4054, 4053,
	280, 4052, 4051, 36, 4042, 4041, 4040, 16, 4039, 4038,
	214, 3391, 4037, 4036, 8, 4025, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 13, 13, 9, 9,
	9, 9, 10, 10, 10, 10, 10, 53, 53, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	39, 41, 40, 34, 34, 35, 35, 36, 37, 37,
	12, 12, 12, 8, 8, 8, 8, 8, 8, 8,
	8, 21, 21, 42, 42, 22, 22, 44, 44, 23,
	23, 45, 45, 612, 612, 612, 613, 613, 614, 614,
	614, 26, 47, 19, 20, 20, 20, 20, 615, 615,
	615, 615, 38, 27, 48, 31, 31, 31, 31, 31,
	208, 208, 208, 208, 25, 25, 43, 43, 251, 251,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	608, 608, 253, 253, 252, 240, 240, 241, 241, 242,
	242, 616, 616, 254, 254, 254, 255, 255, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 507, 507,
	507, 538, 538, 538, 538, 540, 540, 635, 635, 636,
	636, 636, 636, 636, 136, 136, 404, 404, 404, 57,
	57, 57, 57, 57, 603, 603, 210, 210, 210, 212,
	212, 211, 211, 211, 211, 211, 81, 81, 622, 622,
	621, 620, 620, 620, 623, 623, 623, 209, 209, 209,
	132, 132, 132, 132, 132, 132, 132, 132, 133, 133,
	134, 134, 213, 213, 213, 215, 215, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 219,
	18, 18, 18, 115, 115, 115, 115, 115, 115, 115,
	110, 110, 542, 542, 543, 543, 204, 204, 205, 205,
	205, 205, 206, 206, 207, 207, 207, 72, 72, 216,
	216, 218, 218, 217, 217, 217, 217, 217, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 60, 60, 60,
	60, 60, 61, 61, 61, 61, 61, 61, 62, 62,
	62, 62, 62, 62, 63, 63, 70, 70, 70, 70,
	70, 70, 70, 70, 195, 195, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 78,
	78, 78, 78, 78, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 637, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 638, 638, 639, 639, 640, 640, 641,
	641, 641, 641, 641, 641, 641, 641, 641, 641, 641,
	641, 641, 641, 641, 641, 641, 641, 641, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 87, 87, 364, 364, 327,
	327, 88, 88, 88, 89, 89, 90, 90, 74, 74,
	601, 601, 380, 380, 498, 498, 75, 609, 609, 609,
	611, 611, 610, 610, 92, 92, 403, 403, 93, 93,
	93, 93, 93, 93, 94, 94, 94, 94, 94, 94,
	94, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 102, 102, 102, 102, 102,
	103, 103, 103, 100, 100, 100, 97, 97, 97, 96,
	96, 96, 101, 101, 101, 600, 316, 316, 99, 99,
	99, 98, 98, 98, 381, 381, 104, 104, 104, 104,
	328, 105, 105, 105, 105, 105, 105, 105, 105, 108,
	108, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 500, 500, 4, 4, 246, 246,
	245, 245, 5, 5, 5, 249, 249, 248, 247, 106,
	106, 106, 465, 465, 111, 111, 111, 419, 419, 112,
	112, 112, 112, 112, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 605, 605, 373, 373, 279,
	279, 279, 279, 124, 124, 124, 124, 125, 125, 125,
	125, 126, 126, 200, 200, 142, 142, 142, 142, 141,
	141, 141, 141, 141, 141, 141, 141, 64, 64, 64,
	65, 65, 66, 66, 67, 67, 68, 68, 69, 69,
	69, 69, 69, 145, 145, 632, 632, 147, 144, 144,
	144, 144, 144, 143, 143, 146, 146, 146, 146, 148,
	150, 150, 150, 150, 150, 149, 149, 149, 149, 149,
	151, 151, 532, 532, 389, 389, 530, 530, 552, 552,
	531, 531, 334, 334, 334, 334, 334, 335, 335, 335,
	541, 541, 541, 541, 541, 541, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 201, 201, 202, 203, 203, 203, 203, 203, 177,
	177, 177, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 390, 390, 180, 180, 180, 164, 164,
	153, 153, 153, 153, 153, 153, 153, 158, 158, 158,
	158, 158, 158, 158, 158, 154, 154, 166, 166, 166,
	166, 166, 159, 159, 160, 160, 160, 161, 161, 161,
	161, 188, 188, 163, 163, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 155, 155, 155, 155, 168, 168,
	168, 168, 426, 426, 426, 193, 193, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 191, 191, 191, 191, 191, 191, 624,
	624, 625, 625, 625, 184, 184, 184, 184, 184, 184,
	479, 479, 178, 178, 178, 178, 183, 183, 183, 183,
	186, 186, 186, 186, 409, 409, 175, 175, 175, 176,
	176, 176, 181, 181, 182, 365, 365, 179, 179, 185,
	185, 185, 185, 187, 187, 187, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 157, 157, 157, 157, 189,
	189, 174, 174, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 642, 642, 170, 170, 170, 169,
	169, 169, 169, 172, 172, 173, 173, 173, 173, 173,
	173, 171, 162, 192, 602, 602, 598, 598, 598, 598,
	598, 598, 598, 598, 599, 599, 599, 599, 604, 604,
	116, 116, 116, 116, 116, 116, 116, 127, 127, 127,
	127, 127, 127, 127, 130, 130, 117, 117, 117, 117,
	117, 117, 117, 120, 120, 118, 118, 118, 118, 119,
	119, 82, 82, 82, 82, 82, 17, 17, 17, 83,
	83, 270, 270, 224, 224, 224, 352, 352, 225, 225,
	342, 342, 342, 342, 220, 220, 221, 221, 222, 223,
	223, 84, 84, 643, 643, 643, 617, 617, 617, 618,
	618, 618, 618, 618, 618, 336, 336, 337, 337, 445,
	445, 445, 445, 445, 340, 340, 340, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 350, 351, 351, 343,
	343, 349, 348, 348, 347, 347, 346, 346, 344, 345,
	345, 345, 354, 354, 353, 356, 356, 355, 444, 561,
	561, 563, 563, 563, 563, 563, 563, 563, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 427, 427, 644, 644, 645,
	646, 559, 559, 559, 560, 555, 555, 556, 556, 556,
	556, 556, 338, 338, 339, 339, 339, 339, 557, 558,
	371, 371, 483, 562, 562, 564, 564, 566, 647, 647,
	647, 647, 647, 647, 648, 648, 648, 443, 443, 442,
	442, 441, 441, 362, 362, 567, 567, 567, 567, 568,
	568, 568, 568, 568, 571, 570, 569, 569, 569, 569,
	569, 86, 86, 86, 406, 406, 405, 405, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 197, 197, 282, 282, 282, 80, 80,
	80, 14, 14, 14, 14, 14, 14, 14, 297, 297,
	15, 15, 15, 619, 619, 619, 85, 85, 85, 85,
	85, 85, 360, 360, 360, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 607,
	607, 606, 606, 283, 283, 650, 650, 91, 91, 91,
	91, 91, 91, 91, 91, 501, 501, 502, 502, 79,
	79, 79, 79, 79, 428, 428, 425, 425, 424, 424,
	370, 370, 481, 481, 481, 482, 287, 287, 288, 288,
	243, 243, 243, 33, 32, 24, 24, 28, 28, 29,
	29, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	30, 30, 50, 50, 50, 50, 51, 51, 51, 51,
	54, 54, 55, 55, 49, 49, 49, 49, 52, 52,
	46, 46, 56, 56, 56, 56, 56, 626, 628, 628,
	627, 627, 631, 631, 631, 631, 631, 631, 629, 629,
	630, 630, 633, 633, 634, 634, 123, 123, 128, 128,
	128, 128, 128, 129, 129, 129, 129, 131, 131, 131,
	131, 140, 140, 196, 196, 196, 196, 196, 196, 196,
	58, 58, 58, 58, 71, 71, 71, 71, 138, 652,
	652, 652, 139, 139, 139, 651, 651, 280, 280, 438,
	438, 439, 439, 653, 653, 440, 440, 440, 440, 440,
	273, 272, 274, 274, 275, 275, 77, 77, 77, 263,
	263, 262, 264, 264, 265, 265, 260, 260, 544, 544,
	267, 267, 267, 268, 268, 256, 256, 257, 257, 258,
	258, 259, 259, 271, 271, 539, 539, 654, 654, 114,
	114, 114, 199, 199, 326, 326, 326, 435, 435, 435,
	363, 363, 294, 294, 437, 437, 437, 437, 437, 402,
	402, 402, 198, 198, 378, 378, 392, 392, 393, 393,
	495, 495, 394, 121, 121, 122, 122, 137, 137, 228,
	228, 226, 226, 226, 226, 226, 226, 226, 226, 233,
	233, 234, 234, 235, 235, 236, 237, 237, 237, 237,
	382, 382, 238, 238, 238, 227, 227, 227, 229, 229,
	229, 229, 229, 229, 229, 232, 232, 232, 232, 239,
	239, 239, 231, 231, 578, 578, 578, 580, 580, 582,
	582, 581, 581, 577, 577, 579, 579, 649, 649, 408,
	408, 408, 359, 361, 357, 357, 358, 358, 368, 368,
	366, 367, 367, 369, 369, 480, 480, 480, 244, 244,
	244, 399, 399, 399, 399, 400, 400, 431, 431, 429,
	429, 429, 429, 430, 430, 432, 432, 432, 433, 433,
	434, 434, 396, 396, 397, 397, 398, 398, 398, 398,
	461, 461, 230, 230, 230, 375, 375, 375, 376, 376,
	451, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	451, 452, 452, 450, 450, 450, 450, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 485, 486, 486, 377,
	377, 487, 436, 436, 596, 596, 596, 597, 597, 478,
	478, 488, 488, 488, 488, 488, 488, 476, 476, 477,
	477, 496, 497, 497, 412, 412, 412, 412, 410, 410,
	413, 413, 413, 413, 413, 411, 411, 489, 489, 489,
	489, 401, 401, 490, 490, 490, 490, 491, 492, 492,
	493, 493, 446, 447, 447, 503, 503, 503, 503, 505,
	374, 374, 374, 374, 374, 554, 553, 553, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 520,
	520, 520, 520, 520, 520, 520, 506, 506, 506, 506,
	506, 510, 510, 510, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 511, 511, 516, 516, 517,
	517, 517, 512, 513, 518, 518, 518, 518, 655, 655,
	522, 522, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 508, 508, 508, 515, 515, 515, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	420, 420, 422, 422, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 455, 455, 455, 455, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 572, 572, 572, 572, 572, 572,
	572, 572, 457, 457, 575, 575, 576, 576, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 583,
	583, 584, 584, 586, 586, 587, 587, 588, 589, 589,
	589, 590, 591, 591, 585, 585, 592, 592, 592, 592,
	593, 593, 594, 594, 594, 594, 594, 595, 595, 595,
	595, 595, 467, 467, 468, 468, 474, 474, 474, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 333, 333, 332, 284, 284, 284,
	284, 284, 284, 387, 387, 385, 385, 385, 388, 388,
	386, 386, 384, 384, 383, 383, 464, 464, 462, 462,
	466, 466, 414, 414, 521, 521, 521, 521, 521, 521,
	521, 521, 415, 415, 415, 423, 416, 416, 417, 417,
	417, 417, 417, 458, 459, 418, 418, 418, 460, 460,
	469, 473, 473, 472, 471, 471, 470, 470, 448, 448,
	449, 449, 395, 395, 656, 656, 391, 391, 494, 494,
	494, 494, 330, 330, 379, 379, 329, 329, 321, 321,
	322, 322, 322, 322, 372, 372, 475, 475, 523, 523,
	524, 524, 525, 525, 526, 526, 527, 528, 529, 463,
	463, 305, 304, 291, 292, 303, 302, 301, 290, 293,
	298, 299, 300, 295, 296, 312, 311, 310, 261, 266,
	317, 318, 318, 320, 320, 319, 319, 307, 308, 309,
	499, 289, 323, 323, 324, 324, 324, 325, 325, 325,
	325, 285, 285, 286, 286, 313, 313, 314, 315, 315,
	306, 306, 306, 276, 276, 276, 277, 277, 278, 278,
	537, 537, 534, 534, 534, 535, 535, 535, 536, 536,
	536, 536, 533, 533, 533, 533, 533, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 546, 546, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 548, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 551, 551,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	6, 4, 4, 6, 9, 6, 8, 4, 4, 5,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 6, 6, 9, 6, 9, 6,
	5, 6, 5, 1, 1, 1, 1, 1, 1, 0,
	1, 6, 6, 4, 8, 7, 10, 9, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 8, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 4, 4,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 3, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 7, 9, 8, 2, 1, 3,
	1, 3, 2, 5, 0, 1, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 1,
	3, 3, 3, 6, 4, 9, 7, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 4, 3, 6, 6, 6, 6,
	6, 8, 4, 4, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 6,
	3, 8, 5, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 7, 2, 5, 0,
	1, 3, 3, 1, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 4, 3, 1, 2,
	2, 2, 4, 6, 3, 1, 2, 2, 7, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 7, 4, 7, 8, 8, 9,
	11, 5, 2, 6, 9, 4, 7, 7, 10, 7,
	10, 10, 13, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 3,
	2, 2, 6, 3, 3, 3, 3, 4, 4, 3,
	1, 3, 3, 2, 2, 1, 3, 3, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 1, 1,
	2, 2, 2, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 3, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 4, 6, 4, 2, 6, 4,
	3, 2, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 5, 3, 5, 3, 3, 4,
	4, 5, 0, 1, 1, 1, 1, 3, 2, 3,
	4, 3, 4, 3, 5, 3, 4, 4, 3, 4,
	5, 3, 4, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 5, 2, 0, 3, 3, 4,
	3, 3, 3, 5, 3, 3, 3, 4, 4, 4,
	4, 4, 4, 4, 3, 4, 5, 4, 4, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 7, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 12,
	15, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 1, 1, 1, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 0, 1,
	0, 1, 1, 0, 1, 4, 1, 0, 3, 7,
	7, 1, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 3, 6, 4, 2, 3, 5, 5, 5,
	2, 5, 5, 2, 2, 2, 0, 1, 1, 3,
	4, 10, 11, 9, 5, 3, 1, 5, 9, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 6,
	1, 3, 1, 2, 0, 1, 2, 3, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 3,
	0, 4, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 3, 2, 2, 4, 7,
	3, 4, 6, 5, 7, 5, 5, 3, 3, 0,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 8,
	11, 5, 4, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 16,
	19, 15, 18, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 14, 16, 3, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 7, 10, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 5, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 614, -107, -104, -72, -70, -111, -112,
	-93, -113, -106, -135, -140, -121, -122, -123, -136, -142,
	-196, -201, -202, -203, -3, -57, -59, -73, -92, -94,
	-105, -115, -114, -116, -124, -132, -127, -110, -64, -137,
	-141, -152, -197, -198, -199, 32, 31, 100, 80, 156,
	129, 138, 206, 393, 439, 451, 408, 143, 430, 413,
	-146, -147, 469, -58, -71, -139, -138, 73, 130, 423,
	-6, -14, -18, 29, 46, -60, -61, -62, -63, 62,
	-80, -76, -87, -81, -74, -75, -78, -637, 102, -579,
	-95, -98, -131, -641, 164, 224, -117, -118, -119, 375,
	-125, -126, 432, -128, -129, -130, 435, 165, -66, -65,
	158, -226, -228, -144, -143, -145, -200, -153, -154, -155,
	-156, -157, -158, -159, -161, -188, -162, -163, -164, -165,
	-166, -167, -171, -191, -168, -169, -170, -173, -172, -174,
	-179, -175, -176, -177, -178, -180, -181, -183, -184, -185,
	-186, -187, -189, -190, 474, -182, -192, -160, 537, 49,
	490, 82, 148, 443, 21, -7, -8, -9, -10, -11,
	-12, -13, -17, -16, -56, -4, -5, -77, -79, -82,
	-83, -84, -91, -85, -86, -578, -96, -97, -100, -102,
	-103, -99, -101, 431, 587, -229, -227, 611, 552, -21,
	-26, -22, -23, -25, -27, -24, -28, -29, -30, -42,
	-47, -44, -45, -43, -46, -48, -49, -50, -51, -52,
	-53, -54, -55, -32, -38, -39, -33, -34, -35, -36,
	-37, -40, -41, -19, -20, -31, 574, 583, -232, -230,
	-231, -239, 461, 560, 511, 614, 614, 614, 614, 614,
	614, 614, 614, 614, 614, 614, 614, 614, 614, 614,
	614, 614, 614, 614, 614, 614, 614, -328, 2, -307,
	-313, -314, -315, -306, -276, -548, -551, 4, -545, -549,
	171, 234, 337, 21, 23, 22, 24, 25, 26, 27,
	29, 30, 41, 42, 44, 45, 46, 47, 48, 49,
	53, 55, 59, 60, 61, 62, 63, 64, 68, 73,
	74, 79, 80, 81, 82, 83, 84, 85, 91, 88,
	89, 90, 92, 94, 96, 97, 98, 99, 100, 101,
	103, 104, 105, 107, 108, 109, 117, 118, 119, 120,
	121, 123, 129, 124, 130, 133, 128, 132, 134, 136,
	137, 138, 141, 142, 143, 145, 146, 147, 149, 150,
	151, 153, 154, 156, 157, 158, 161, 159, 162, 160,
	163, 164, 165, 166, 169, 177, 178, 179, 184, 186,
	187, 188, 192, 193, 194, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 207, 211, 213, 214, 215, 216,
	217, 223, 224, 226, 227, 228, 229, 230, 235, 236,
	237, 240, 246, 247, 251, 252, 253, 255, 259, 260,
	261, 262, 263, 264, 266, 268, 267, 270, 273, 274,
	277, 278, 279, 280, 281, 282, 286, 287, 283, 288,
	289, 291, 292, 295, 293, 296, 297, 294, 298, 300,
	301, 302, 303, 304, 305, 306, 307, 308, 309, 310,
	311, 299, 314, 312, 316, 317, 318, 319, 320, 335,
	330, 331, 332, 324, 325, 321, 326, 322, 323, 327,
	328, 334, 329, 339, 340, 341, 344, 221, 346, 347,
	350, 352, 369, 355, 356, 357, 360, 361, 364, 367,
	368, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	380, 381, 383, 384, 385, 387, 388, 389, 391, 393,
	394, 396, 397, 399, 400, 401, 402, 403, 404, 405,
	407, 408, 410, 409, 411, 413, 415, 416, 417, 423,
	430, 424, 426, 427, 428, 429, 431, 432, 433, 434,
	435, 437, 438, 439, 441, 442, 443, 444, 445, 447,
	449, 450, 454, 455, 471, 472, 493, 451, 452, 453,
	456, 457, 458, 459, 460, 464, 462, 463, 465, 466,
	467, 469, 470, 473, 474, 476, 477, 478, 479, 480,
	481, 482, 485, 487, 488, 489, 490, 491, 510, 492,
	494, 498, 499, 500, 501, 495, 496, 509, 503, 504,
	506, 507, 512, 513, 514, 515, 516, 517, 518, 519,
	521, 529, 530, 531, 532, 534, 537, 538, 539, 540,
	527, 542, 543, 546, 547, 548, 551, 549, 550, 552,
	554, 557, 558, 559, 565, 564, 566, 567, 569, 570,
	575, 576, 578, 579, 580, 36, 50, 51, 54, 56,
	58, 69, 70, 71, 75, 125, 126, 155, 167, 168,
	180, 195, 196, 208, 210, 218, 219, 220, 241, 242,
	244, 249, 271, 343, 345, 362, 366, 382, 386, 390,
	392, 406, 446, 483, 497, 502, 522, 523, 524, 525,
	533, 535, 560, 561, 562, 568, 577, -328, 2, -307,
	353, -300, 2, -276, -276, 393, 28, 2, 28, 381,
	463, 514, 516, 2, -605, -373, 2, 28, -279, -276,
	102, 206, 461, -300, 2, -605, 206, -373, 25, 2,
	-276, 2, 367, 22, 27, 66, 77, 98, 141, 166,
	189, 192, -640, 369, 400, 449, 465, 509, 519, 534,
	2, 564, 292, 462, 511, 234, 120, 539, 456, -619,
	454, 455, 367, 398, 441, 209, 553, -280, 2, 451,
	-276, 292, 2, 614, 94, 74, 446, 466, -149, 2,
	282, 530, -150, -151, -148, 522, -532, 456, 441, 314,
	-276, 614, 614, 614, 28, -289, -276, 511, 234, 456,
	120, 507, 614, 2, 511, 372, 564, 462, 120, 403,
	234, 539, 192, 141, 27, 68, 46, 456, -619, 588,
	589, 292, 127, -603, 2, -598, 4, -549, -545, -322,
	-321, 511, 517, 120, -315, -306, 603, -314, 614, 614,
	614, 614, 2, 252, 253, 402, 401, 466, 467, 28,
	614, 614, 614, 614, 454, 2, 166, 22, 27, 66,
	93, 98, 127, 189, 192, 358, -638, 369, 400, 465,
	509, 513, 519, 534, -618, 492, 68, 429, 456, -617,
	-619, 292, 539, 141, -424, 120, 282, 204, 547, 516,
	514, 545, 133, 240, 550, 549, 614, 614, -108, 2,
	611, 32, 31, -107, -111, 143, 469, -219, 511, 245,
	2, -276, 614, 614, 614, 2, 252, 253, 454, 455,
	28, 614, 614, 190, -598, 507, 2, 614, 614, 614,
	2, 28, 252, 253, 454, 455, 245, 2, 68, 458,
	614, 614, 614, 614, 614, 614, 614, 614, 614, 614,
	614, 614, 614, 614, 614, 614, 614, 614, 614, 614,
	614, 614, 614, 614, 614, 614, 614, 614, 614, 614,
	614, 614, 614, 614, 614, 614, 614, 2, -194, 466,
	492, 215, 47, 46, 74, 28, 399, 79, 373, 121,
	127, 150, 540, 207, 234, 235, 260, 93, 94, -426,
	44, 253, 68, 252, 455, -624, 454, -479, 512, 457,
	463, 506, 264, 451, 530, 532, 102, 554, 442, 580,
	403, 404, 504, 417, 283, 159, 191, 4, 120, 314,
	441, 468, 268, 267, 522, 282, 450, 376, 84, 614,
	-649, 2, 511, -651, 2, 530, 530, 2, -651, 2,
	-651, 2, -651, 2, -652, 530, 577, 614, 614, 614,
	614, 614, 614, 614, 614, 614, 614, 614, 614, 614,
	614, 614, 614, 614, 614, 614, 614, -227, -229, -228,
	614, 614, 614, 614, 614, 614, 614, -194, 466, 2,
	74, 28, 28, -366, -368, 544, 243, 152, 359, -226,
	-228, 2, -578, -530, 2, -453, -552, -455, 601, 602,
	594, 508, 67, -332, 336, 581, -467, 127, 545, 353,
	-551, -456, -469, 155, 369, 446, -388, 8, 9, 5,
	6, 7, -285, -457, -463, 536, 170, 342, -325, 615,
	10, 611, -575, -228, -468, 37, 210, 65, -534, -324,
	-286, -506, 244, -323, -306, -572, -573, 4, -545, -546,
	-535, -509, -517, -513, -514, -520, -276, -548, 77, 111,
	112, 110, 115, 114, 285, 284, 116, 113, 468, 553,
	66, 36, 218, 219, 249, 343, 220, 75, -574, 142,
	-547, 241, 242, 483, 51, 406, 180, 126, 125, 345,
	56, 54, 561, -518, 122, 522, 523, 524, 525, 195,
	196, 58, 167, 168, 366, 390, 502, 533, 535, 208,
	271, 43, 106, 191, 239, 222, 248, 250, 254, 272,
	275, 315, 333, 338, 363, 365, 440, 475, -655, 562,
	497, 69, 70, -580, 409, -581, -300, -580, 614, 614,
	616, 614, -357, -359, -361, 2, 28, 139, 611, 2,
	-484, 2, -485, -489, -228, 265, -488, 611, -486, 609,
	-307, 354, -576, 447, -572, -573, -285, -306, -324, 4,
	-545, -547, 613, -362, 611, 120, 456, 511, 78, 234,
	93, 166, 192, -419, 611, -276, 28, 353, 526, 616,
	-358, 397, -465, 611, 353, 356, 190, 356, 60, 296,
	2, 2, 2, 2, 2, 218, -276, 511, 119, 2,
	263, 2, 2, 2, 2, 2, 2, 2, -381, 218,
	2, -307, 564, -381, 218, 2, -381, 218, 2, -425,
	2, 87, -290, 218, 2, -276, -316, 218, 2, -311,
	-313, -320, 218, 2, -318, -276, -540, 218, 2, -538,
	4, -545, 116, 468, -453, 2, -137, 2, 60, -276,
	564, 2, 471, 2, 611, -149, 2, 71, 530, 43,
	466, -150, 2, -439, 2, -440, -272, -273, -274, -496,
	-275, 251, 396, 405, 584, 131, 336, 580, -632, 190,
	593, 526, -530, -530, -530, -389, 613, 2, 2, 2,
	2, 2, 2, -489, 218, -307, 2, -304, -533, 4,
	-545, -549, -546, -550, -548, 28, 31, 32, 33, 35,
	37, 38, 39, 40, 57, 65, 66, 72, 76, 78,
	87, 93, 102, 110, 111, 113, 112, 114, 115, 116,
	127, 131, 135, 139, 140, 144, 148, 152, 170, 172,
	185, 189, 190, 206, 209, 212, 225, 238, 243, 245,
	265, 269, 276, 284, 285, 336, 342, 348, 353, 354,
	358, 359, 379, 395, 412, 436, 461, 468, 486, 505,
	511, 520, 526, 528, 536, 544, 545, 553, 555, 563,
	571, 572, 573, 574, -551, 77, 2, -489, 218, 2,
	-310, 218, -489, -313, 2, -290, 2, -453, -612, 518,
	162, 424, 2, -329, 218, -307, -309, -313, -311, 2,
	2, 2, 2, -453, 2, -542, 2, -537, 10, -536,
	5, 4, -545, -549, -546, -318, 2, -538, 218, 2,
	28, 28, 564, 397, 245, 526, 616, -379, -321, -322,
	-529, 8, -372, -276, 613, -453, 2, -137, -120, 2,
	185, -453, 218, 2, -137, 218, 2, -453, 218, 2,
	-137, 218, 2, -276, 2, -620, 2, -542, 218, 218,
	-276, 2, 296, 2, 2, 534, 2, 98, 511, 119,
	2, 428, -639, 449, 538, 2, 2, 2, 2, 2,
	2, 2, 511, -295, 2, -276, 185, 495, -318, 218,
	-319, 2, 462, -650, 409, -538, 218, 2, 564, -311,
	218, 2, -311, 234, 247, -290, 218, 2, 516, 514,
	516, 514, 190, 2, 245, 2, 245, 2, -490, 2,
	-491, -485, -492, 609, 354, -500, 2, -499, -536, 560,
	-108, 611, -108, 611, 466, 611, -542, -307, -307, -453,
	2, -137, -120, 2, -453, 2, -137, 2, -276, 2,
	-134, -542, -133, 611, 190, 554, -276, 2, -453, 2,
	-137, -120, 2, -453, 2, -137, 2, -219, 185, 2,
	120, 511, -194, 2, 185, 555, 2, 8, 2, 225,
	-542, 457, 404, 177, 2, 471, 2, 472, 74, -426,
	580, 74, 190, 2, 190, 2, -409, 2, 574, 397,
	190, 2, 2, -602, 2, 353, 190, 2, 190, 2,
	190, 2, 190, 2, 190, 2, -193, 467, 531, 510,
	401, 253, 2, -137, 571, -120, 253, 252, -453, 571,
	2, -625, 185, 455, -453, 2, 529, 262, 160, 190,
	-409, 2, 190, 2, 190, 2, 5, 2, 402, 493,
	2, 251, 396, 493, 2, 491, 2, -307, 511, 564,
	462, 120, 28, 2, 454, 2, 2, 88, 89, 190,
	2, 190, 2, 205, 190, 2, 190, 511, -390, 613,
	580, 2, -401, -489, -438, -439, -438, 526, -366, -368,
	-194, 471, 2, -233, -399, -235, 185, -429, -430, -236,
	276, 172, 348, -237, -408, 28, 139, -408, -408, 60,
	612, 612, 11, 12, 76, 41, 601, 602, 603, 604,
	183, 605, 606, 599, 600, 598, 591, 592, 596, 257,
	258, 95, 595, 593, 86, 290, 448, 173, 174, 175,
	176, 425, 232, 34, 233, 14, 15, 16, -332, 33,
	358, 275, 581, 222, 475, 594, 17, 18, 19, 248,
	250, 338, 50, 225, -284, 369, -331, 508, 67, -453,
	-453, -453, -453, -453, -453, -453, -453, 365, 611, -395,
	-448, 609, -228, 611, 611, 611, 611, -529, -228, -453,
	-467, 612, -386, 611, -228, -467, -462, 611, 446, 609,
	611, -470, -453, 5, 5, 5, 611, 613, -583, 575,
	185, 611, 611, 611, 611, 611, 611, 611, 611, 611,
	611, 611, 611, 611, 611, 611, 611, 392, -511, 611,
	-510, 611, -510, -510, 565, -508, 611, 583, 576, 611,
	-508, 611, 611, 611, 611, 611, 611, 611, 611, 611,
	611, 611, 611, 611, 565, 616, -580, -362, 611, -391,
	-494, -453, 603, -391, -391, 353, -383, -453, 106, -412,
	254, 315, 191, 272, 440, 239, -450, 615, -450, -478,
	583, -228, -486, -306, -228, -488, 611, -484, -478, -109,
	-529, -92, -105, -114, -137, -152, -198, -199, 603, -307,
	611, 190, 611, 613, -533, 190, -372, -290, -317, -276,
	-307, -323, -324, -329, -301, -276, 2, 2, 138, -383,
	-598, 539, 456, 28, 462, -540, -279, 38, -464, -503,
	-504, -554, 615, -553, -506, -516, -512, -515, 382, 386,
	-535, 54, 561, -518, 244, 4, -545, -547, 241, 242,
	483, 51, 406, 180, 126, 125, 345, 56, 522, 523,
	524, 525, 195, 196, 58, 562, 497, 69, 70, -598,
	539, 456, 28, 462, 185, -540, 185, -540, 2, 2,
	155, 2, 2, 2, -276, -254, 616, 64, 433, 155,
	-381, 218, -254, 155, -254, 155, -330, 218, -329, -254,
	155, -254, 616, 155, -254, 616, 155, 613, 616, 155,
	-540, 2, -425, -532, -383, 38, -439, 2, 127, 4,
	5, -653, 616, 274, -335, 289, 335, 214, 354, 578,
	346, 131, -541, 5, 4, -463, -475, 127, 282, 244,
	-523, -525, 8, -524, 9, -526, 601, 602, -531, -530,
	109, 613, -533, -251, 426, 469, 368, -250, 24, 29,
	143, 236, 320, 558, 161, -347, 237, 431, -344, 372,
	155, 487, 548, -612, -615, 453, 518, 162, 424, 90,
	346, 469, 368, 426, 155, -405, -407, 38, 118, 320,
	367, 61, 228, 294, 295, 490, 568, 155, 469, 368,
	426, 368, -15, -265, 24, 143, -267, -262, 469, -615,
	99, 426, 587, 431, 378, 503, 395, -615, -612, 270,
	-614, 570, 334, -253, 487, 548, -612, -615, 453, 426,
	-252, -349, -344, 372, 155, 615, 24, 143, 426, 469,
	368, -635, -636, 29, -246, -245, 24, 143, -249, 225,
	-248, 24, 426, 368, -606, -297, -577, 225, 574, 155,
	-297, -297, -489, 218, -629, 185, 2, -622, -133, 266,
	5, 10, -542, -133, -379, 616, 616, -533, 603, 455,
	454, 155, 155, 155, 155, 253, 185, 336, 336, 574,
	2, 2, 2, 2, 2, 192, -617, -640, 2, 2,
	-307, 218, -364, 353, -601, -380, 511, -307, 185, 336,
	43, -310, 218, 2, -313, 564, -606, 336, -312, 218,
	-307, 38, 611, 336, 2, -425, 2, 234, -577, 336,
	-490, -326, -307, -485, -326, 469, -300, 38, -450, -307,
	612, 616, -500, -500, -542, -207, 574, 190, 611, -219,
	574, 574, 253, -497, 616, -496, 225, -543, -542, -134,
	-542, 429, 190, 253, -542, -601, -290, 2, -307, 2,
	511, 255, -542, -207, 225, -542, -542, -542, -532, 28,
	472, 2, -193, 467, 531, 89, 472, 2, -307, 511,
	120, 234, 80, -629, 185, 2, -276, -604, 185, -599,
	441, 456, 539, -598, -307, 120, -307, 120, -307, 120,
	-307, -307, 2, 2, 2, 2, 2, 85, 2, -137,
	-453, 2, 85, 2, 46, 488, -625, 185, 2, 529,
	2, 529, 2, -276, -276, -276, 492, 274, 574, -307,
	-307, -307, -308, -313, 457, 512, 540, 455, -453, 2,
	-642, 2, 190, 185, 2, 511, 234, 511, 234, 120,
	190, 74, 120, 28, 511, 452, 613, 4, -254, 616,
	-280, -233, -399, -532, -400, -399, -234, -233, -236, 185,
	405, 549, 320, 473, 259, -430, -429, 28, -453, -434,
	179, 319, -453, -432, -455, 601, 602, -524, -526, -382,
	346, -227, -227, -227, -369, -480, -453, 395, 234, -505,
	-503, -503, -305, -533, 522, -453, -453, -453, -453, -453,
	-453, -453, -453, -453, -453, -453, -453, -453, -453, -453,
	-453, -453, -453, -453, -453, -453, -453, -453, -453, -453,
	-453, -453, -453, -453, -453, -453, -453, -453, -453, -453,
	-453, 275, 222, 475, 50, 225, -453, 526, -453, -453,
	-453, -453, 312, 336, 342, 536, 170, 546, 139, 346,
	-656, 505, 40, -460, -228, -387, 611, -474, 35, 486,
	28, -467, 611, 2, -448, -453, -449, -333, -331, -276,
	601, 602, 603, 604, 605, 606, 591, 592, 593, 14,
	15, 16, 596, 600, 598, 599, 183, 95, 595, 290,
	448, 86, 173, 174, 175, 176, 257, 258, 17, 18,
	19, 34, 594, -384, -383, -383, 612, 563, 28, 139,
	603, 2, 612, 616, 38, 612, -453, -384, -466, -462,
	-383, -473, -472, 571, -420, -421, 579, 299, 123, 216,
	297, -422, 460, -527, 8, -533, 603, -584, 178, 209,
	611, 612, 2, 612, 2, 612, -453, 2, 612, -453,
	2, 612, -453, 2, 612, -453, 2, 612, 2, 612,
	2, -453, -453, -453, -453, -453, -453, -453, -383, 8,
	-527, -527, 522, 522, -527, -527, -527, -519, 382, 383,
	384, 385, 277, 278, 279, 280, 386, 387, 388, 389,
	304, 305, 306, 307, 300, 301, 302, 303, 308, 309,
	310, 311, 200, 201, 202, 203, 196, 197, 198, 199,
	-519, -414, 2, -521, -383, 4, 579, 299, 123, 216,
	297, 460, 5, -414, 2, -415, 2, -453, -383, -416,
	-454, -455, 601, 602, 594, -332, -467, -417, 2, -453,
	-384, -453, 57, 269, 528, -418, -453, 190, -383, -383,
	2, -383, 2, -581, 38, -383, -375, 616, 190, 38,
	4, -375, -375, 611, 612, 616, -413, 213, 293, 288,
	247, -413, -484, -412, 254, -410, 363, -410, -410, -478,
	-291, 609, 617, -533, -478, -477, -476, 38, -300, 360,
	-478, -478, 613, 612, -477, 610, -596, 611, 614, 614,
	614, 614, 614, -307, 611, -383, -533, 613, 494, 2,
	612, 248, 248, 248, 248, 248, 353, 447, 612, 526,
	-600, -316, -320, 512, 2, 574, -107, 355, 612, 616,
	-374, 37, 609, 613, -527, 2, 2, -522, 565, 611,
	611, -421, 611, 190, -600, -320, 512, 2, -605, -373,
	-373, 526, -276, 2, -307, -381, -254, 155, -381, -381,
	-254, 616, 155, -290, -311, -316, -318, -320, -276, -538,
	-540, -254, -312, -632, 612, 530, -440, -334, 405, 485,
	427, 464, 507, 8, 9, 8, 9, 616, -533, 616,
	-633, 93, 526, 78, 611, 456, -269, 283, 526, -444,
	218, 78, -555, 93, -293, -556, -276, 72, 545, 395,
	189, 153, -633, 93, 395, -633, 93, 2, 236, 93,
	469, 492, 611, 28, 60, -489, 41, 41, 28, -613,
	-614, 270, 190, 580, 511, 234, 456, 526, 526, -489,
	-407, -503, 118, 294, 295, 60, -528, -523, 601, 602,
	-528, 60, -528, -528, -528, 574, -310, -489, 456, 526,
	526, 526, 415, 415, -262, -150, 526, 526, 28, -194,
	434, 127, -654, 593, 415, 270, -614, 526, 190, 616,
	41, 41, 28, -613, 190, 526, -329, -291, 559, 42,
	559, 42, 559, 526, 42, 456, 526, 616, 42, -245,
	-601, -601, -248, -542, -247, 318, 526, 526, -15, 469,
	-607, -281, 105, 326, 287, 327, 97, 323, 96, 322,
	103, 324, 104, 325, 566, 339, 567, 340, 63, 321,
	298, 328, 489, 329, -282, -283, 146, 374, 557, 120,
	-538, -15, -15, 469, 368, 426, 155, -630, 225, 28,
	-619, 225, -497, 225, -497, -321, -276, 613, -137, -453,
	-453, -137, -453, -137, 46, 155, 155, 2, 2, -650,
	263, 611, -338, 336, 190, -372, -498, 245, 616, -380,
	-598, 155, -538, -406, -405, 336, -312, 218, 2, 155,
	-362, 336, 149, 611, 403, 2, 155, -292, 218, -277,
	-276, -425, -256, 515, 155, -403, 555, -435, -137, 611,
	127, 38, -435, -392, -393, -495, -394, -293, 611, -300,
	-450, -108, -499, 612, 612, 612, -206, 357, -205, -276,
	5, -219, -363, -294, -293, 119, 407, 407, -213, 574,
	-133, -134, 612, 616, -497, 225, 495, -134, -542, -207,
	-207, -497, -497, -307, 185, -542, -207, -207, -207, 2,
	2, 2, 2, -409, -307, -290, -329, -307, 28, 613,
	-540, -540, -320, -316, -409, -290, -409, -290, -409, -290,
	-409, -409, -137, -453, 492, 2, 466, 185, 185, 613,
	-409, -365, 436, 5, 2, 403, 120, 511, 372, 234,
	-307, -329, -307, -329, -290, 120, -290, 121, -307, 4,
	-489, -400, -234, 354, 259, 473, -432, -433, -455, 446,
	447, -433, 446, 447, 8, 9, 8, 9, -238, 477,
	341, -381, 616, -243, 39, 135, 259, -307, 580, 151,
	-453, -453, 526, -656, 505, -460, 151, -453, 312, 342,
	536, 170, 546, 139, 346, 190, 611, -454, -454, 612,
	-385, -453, -453, 610, 619, 612, 613, 612, -368, 616,
	-366, -453, -383, -383, 612, 613, -383, -372, 610, 610,
	616, 612, -471, -472, 144, -453, 526, 526, 526, 526,
	611, 612, 613, -589, 364, 611, 611, -453, 612, 612,
	612, 612, 38, 616, 616, 616, 612, 616, 616, 616,
	612, 612, 612, 616, 612, 580, 580, 612, 612, 612,
	612, 616, 612, 616, 612, 190, 612, 612, -423, 379,
	612, 11, 12, 601, 602, 603, 604, 183, 605, 606,
	599, 600, 598, 591, 592, 593, 86, 290, 448, 14,
	15, 16, -332, 248, 225, -454, -454, -454, -454, 612,
	-458, -459, 190, 185, 38, -418, -418, -418, 612, 190,
	-383, 612, 612, 611, -582, 292, 336, 612, -447, -446,
	572, -494, -376, 2, -484, -302, -533, -447, -447, -383,
	-453, 254, 254, -411, 555, 353, -413, -484, -477, -529,
	-452, -451, 187, 39, 135, 330, 331, 332, 221, 188,
	-477, -300, -362, -477, -477, -533, -478, -478, -476, 612,
	-597, -529, 612, -377, -487, -576, -368, 613, -533, -216,
	-577, -195, 5, 342, -195, -195, -195, -195, -307, -540,
	526, 526, 225, 25, 380, -503, 609, 610, 8, -533,
	611, -527, -527, -527, -540, 190, 190, 225, 353, 190,
	-538, 2, -254, -381, -254, -254, -329, -330, -254, -254,
	-254, -404, 574, -530, -439, 543, 83, 405, 522, -530,
	-250, 426, 469, -293, -293, -307, -223, -222, -220, -276,
	5, -317, 204, 416, -538, 336, -444, 218, -255, 336,
	218, -301, -503, 611, -427, 576, 259, 259, 555, -293,
	-301, 259, 218, -293, 218, -301, 2, -301, -608, 405,
	347, -453, -221, -220, 60, -345, 281, 403, 337, -251,
	426, 469, 368, -137, -137, -137, 611, -632, 555, 138,
	-307, -329, -307, -317, -538, -312, 469, 368, 426, 333,
	-323, -528, -528, -405, 469, 368, 426, -317, -538, -310,
	-538, -261, 218, -276, -261, 218, 456, -290, 415, 580,
	45, -654, 526, 190, -453, -453, -252, -137, -137, -137,
	611, -291, -253, 426, 5, 218, -293, 5, -293, 218,
	5, -276, -293, -317, -538, -636, 24, 143, -293, -249,
	593, -317, -538, -281, 374, -542, 342, 551, -290, -606,
	-297, 456, 526, 526, -489, -626, -627, 206, 439, 456,
	442, -540, -133, -210, 574, -133, -204, 229, 603, -603,
	-542, -276, 564, -276, -336, -339, -337, -293, -445, -444,
	-559, -560, -555, 275, 234, 545, 247, 171, 93, -224,
	-225, 576, 574, 155, -327, -307, 609, -207, -542, -307,
	-498, -318, -319, 155, -362, 336, -538, 38, 155, 611,
	2, 2, -311, 353, 336, -292, 218, -257, 145, -654,
	-290, -447, -376, -402, -437, 436, 353, -363, 560, -300,
	-402, -378, 616, 190, 593, 613, -363, -493, 603, -108,
	-108, -207, 616, 611, 593, 593, 611, -542, 612, 616,
	613, 611, 593, 593, -215, 357, -214, 147, 261, 246,
	479, 480, 481, 482, 137, 478, 124, 317, 230, -497,
	-542, -213, -134, 190, -497, 225, 190, -67, 574, 511,
	-207, 615, 442, -276, -409, -409, -409, 466, 466, -276,
	-372, -303, -533, -290, -307, -304, -329, 185, 185, -290,
	549, -433, 354, 286, -480, -244, 582, -307, 615, -453,
	-453, 151, 151, -453, -454, -454, -453, 151, 190, 611,
	-453, -464, 33, 33, 612, 616, -449, -453, -331, 612,
	563, -368, -368, 612, 603, -533, 615, 612, -462, 148,
	-453, 520, 299, 216, 297, -422, 297, -422, -422, -527,
	5, -533, 603, -590, -296, 611, -276, 572, -367, 359,
	612, -505, -503, -453, -453, -453, -453, -453, -527, -508,
	-508, -523, -523, -453, -458, -453, -505, -503, -454, -454,
	-454, -454, -454, -454, -454, -454, -454, -454, -454, -454,
	-454, -454, -454, -454, -454, -454, -454, -454, 139, 336,
	346, -454, -459, -458, -453, -453, -503, 612, 612, 612,
	-383, -107, 611, 292, -396, 209, -453, -497, 616, -396,
	-396, 612, -484, -484, 611, -453, 254, 610, 616, 618,
	593, 593, -362, 613, -476, -477, 610, 612, 616, 612,
	616, -436, 38, 612, -533, -447, -218, -217, 136, 53,
	107, 134, 342, 248, -628, 574, -540, -540, 456, 356,
	5, 8, 609, 610, 613, -527, 612, 612, 612, -540,
	-540, 456, -598, 539, 456, 28, -540, -254, -254, 119,
	320, -453, 526, 526, 612, 616, 593, 60, 225, 155,
	336, 557, 336, -556, 153, -561, -453, 611, 234, 611,
	611, 2, -240, -241, -242, 143, 469, 24, -634, 2,
	555, 155, -254, 155, -254, 578, 612, 616, -345, 611,
	611, 526, 456, -269, 526, 574, -383, -453, -208, 127,
	-532, -615, 615, -615, 615, 456, 526, 526, 456, 526,
	526, 336, 155, 574, 169, 169, 580, -261, -453, -453,
	185, 526, 574, -383, 526, -507, 48, 26, 336, -311,
	-254, 155, 526, 526, 539, 469, -133, -542, -542, 342,
	-15, -317, -538, -312, 469, 368, 426, -605, -605, 206,
	-320, -630, -497, -212, 357, -211, 147, 438, 137, 261,
	230, -497, -210, 190, 245, 574, -312, 2, 612, 612,
	616, 616, -562, -255, -307, -292, 234, 234, -299, -277,
	38, 350, 350, 611, -307, -88, 574, -496, -529, -609,
	574, 43, -310, 38, 155, -606, -137, -312, -501, -502,
	5, 38, -307, 155, 353, 336, -258, 268, -654, -537,
	-577, -368, -402, -391, 337, 91, 612, -447, -393, -376,
	-453, 2, 612, -205, -206, -542, -542, -542, -207, -219,
	-294, 2, -543, -542, -542, 616, 611, 593, 593, 593,
	593, 593, 593, -213, -497, -133, -213, -134, -137, 357,
	-307, 603, -409, -351, -350, 372, 346, -351, 446, 446,
	354, 179, 264, -243, -291, -453, -453, 151, 33, 33,
	-453, -453, -464, 612, -453, -453, -383, 610, 5, -453,
	612, 612, 8, -453, 612, 613, -591, -276, -453, 612,
	60, 612, 612, 616, 616, 612, 612, 612, 612, 612,
	612, 612, -459, 190, 139, 346, 611, 612, 612, -107,
	-461, 212, 60, -484, -461, -461, -411, -372, -484, -451,
	-291, 609, -291, 609, -533, -529, -487, 611, 613, -217,
	593, -542, -542, -195, 206, -628, -628, 574, -320, 610,
	2, 609, -533, 612, -320, 190, -600, -320, 512, 119,
	-293, -293, -222, -530, 511, 446, -261, 395, -444, 155,
	155, -563, 93, -565, 76, 171, 102, 336, 342, 545,
	395, 72, 127, 353, 412, -644, -645, -646, 38, 585,
	586, 612, -370, -481, -576, 611, -276, -370, -372, 336,
	500, 127, 353, 336, 127, 353, 569, 119, 2, 539,
	79, -293, -301, -220, -372, -372, -307, -317, -538, 163,
	612, 616, 593, 2, 603, 603, -317, -538, -312, -317,
	-538, -310, 155, -261, 370, 169, 526, -137, -453, 163,
	612, -291, 5, 5, 155, -288, 76, -293, 5, -293,
	-311, 119, 574, 456, 526, 526, 353, 353, 356, -626,
	-627, -210, 616, 611, 593, 593, 593, -210, -543, -133,
	2, -362, -352, 236, -293, -560, -557, -558, 395, -445,
	-564, -566, 171, 395, -340, 611, -292, -277, 611, -137,
	2, -223, 611, -338, 357, 610, -611, 357, -610, 117,
	137, -538, -406, -137, -312, -360, 574, -362, 612, 616,
	149, -428, 555, -291, -307, 155, -259, 267, -654, -537,
	-256, -431, -429, 140, 611, 353, -137, -368, 593, 612,
	612, 119, 612, -214, -215, -542, -133, -542, -542, -542,
	-133, -213, -497, -497, -68, -69, 234, 93, 377, -304,
	511, 234, 611, 611, -243, -453, -453, -453, 612, -368,
	-533, 603, -585, 372, 612, -480, -453, -453, -454, 190,
	611, -464, 612, -586, 573, -453, -397, -398, -453, 444,
	108, 210, -586, -586, 612, -529, -529, 2, -542, 356,
	2, 526, 609, 2, 190, -540, 190, 190, 225, 225,
	38, 415, -444, -301, -301, -305, -298, -276, 171, 218,
	342, 569, -427, 259, 611, -454, 549, -307, 611, 2,
	217, 217, 30, 60, -647, 131, 238, 612, 616, -482,
	-287, -276, -453, -482, 612, 612, 342, 549, 342, 569,
	-453, 549, -503, 611, -254, -254, 612, 612, -453, 526,
	-532, 100, -530, 2, -615, -261, -290, -453, 185, -453,
	526, 5, -254, -305, -254, -254, -288, 539, 352, -317,
	-538, -312, -631, 512, 463, 540, 457, 193, 445, -631,
	185, -211, -212, -542, -133, -133, -210, 38, -346, -347,
	2, -562, 259, -298, 259, 227, 154, -370, 611, 611,
	-372, -643, 574, 612, -336, -224, -89, -90, 527, -496,
	616, 611, 593, -362, 320, 119, 38, 5, 611, 611,
	-276, 353, 611, -291, -271, 92, -654, -537, -257, -402,
	337, -372, 93, -431, -460, -207, 611, -207, 612, -213,
	616, 28, 611, 28, 611, -307, -329, -383, -383, 612,
	-368, 60, 616, 612, 612, -454, -464, 612, -587, -588,
	-296, 616, 611, 611, 470, 610, 610, -540, 2, -540,
	-540, -540, 456, -261, 395, -276, -556, -565, -298, 336,
	-225, 555, 574, -453, -454, -278, 611, -453, 611, 611,
	38, 127, 238, 132, 223, -443, -648, 101, 501, 226,
	-481, -243, 612, -442, 555, 412, -454, -288, -370, 611,
	611, 611, 593, 190, -137, 611, -507, -254, -311, 593,
	526, 2, 2, 190, -605, 612, -621, 410, -137, -224,
	611, -225, -341, 81, 94, 128, 217, 194, 235, 492,
	498, 28, -341, 612, -370, -370, 612, -342, 353, 119,
	320, 612, 38, -90, 9, -610, -611, -453, 38, 119,
	-137, -501, -370, -307, -370, 353, -263, -262, 276, -537,
	-258, 612, -301, -402, -543, -69, -372, -372, 612, 612,
	-592, 403, 447, 211, -383, -369, 612, 616, 38, -398,
	2, 2, 2, -628, -320, 415, -255, 155, 213, 612,
	-567, 291, -276, 612, -406, -406, 38, 132, 223, -348,
	-344, 611, -244, -482, -225, 213, -307, -616, 555, 612,
	-354, -353, -350, -356, -355, -350, -383, -530, 100, 370,
	-383, -288, -133, -540, -540, 353, -623, 191, -622, 5,
	10, -342, -371, -483, -293, -442, 612, 612, 82, 119,
	-352, -137, 612, -137, 2, -360, 612, 612, -428, 612,
	-307, -260, -544, 415, 417, -654, -259, -447, 140, 612,
	612, 612, 612, -593, -594, 50, 542, 109, -453, -593,
	-593, -588, -590, 190, 171, -441, 583, -568, -571, -570,
	590, 476, 191, 371, 612, 500, 568, 612, 612, -647,
	-372, -441, -362, -453, -442, 612, 616, 560, 612, 616,
	560, 612, 190, 612, -254, -628, -254, -631, -209, 574,
	46, -270, -269, 612, 616, -443, -442, -348, 394, 133,
	143, -346, -643, -442, 611, -443, 611, -268, -267, -654,
	-523, -271, 140, 337, 549, -207, -595, 153, -594, 391,
	184, 446, 391, 184, -595, -595, -540, -298, -225, 55,
	-570, 590, -571, 590, 549, 133, -447, 612, -567, -225,
	-353, 225, -355, 190, 370, 190, 454, -622, 30, -225,
	-483, -348, -443, -225, 447, 447, 2, -224, -342, -443,
	-370, -348, -370, -264, -265, -266, -372, -263, 337, 549,
	469, 109, 209, 521, 320, 33, 593, -569, 320, 433,
	64, 469, -569, -568, 611, 611, -540, 357, -225, -348,
	-447, 2, -342, -348, 612, -225, 612, -539, 368, -260,
	469, -392, 446, 361, -594, -453, 23, 342, 127, -647,
	-383, -383, -254, -206, 611, -447, -225, -270, -225, -442,
	-447, -443, -654, -268, -392, -447, 612, 612, -206, -447,
	-447, -443, -348, -538, -264, -447, -343, -344, 526, 612,
	-348, -225, 611, -225, -447, -383, -447, 612, -343,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 571, 572, 574, 575, 576, 578,
	579, 581, 583, 585, 586, 587, 589, 590, 592, 593,
	594, 595, 596, 598, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	685, 687, 0, 1473, 1475, 1477, 1479, 0, 843, 0,
	36, 37, 39, 0, -2, 348, 350, 352, 354, 0,
	386, 388, 389, 391, 393, 394, 395, 397, -2, 0,
	504, 505, 507, 509, -2, 0, 1060, 1062, 1064, 0,
	673, 675, 0, 1067, 1069, 1071, 0, 0, 697, 698,
	0, 1587, -2, 689, 691, 693, 695, 766, 768, 770,
	772, 774, 776, 778, 780, 782, 784, 785, 787, 789,
	791, 793, 795, 796, 798, 800, 802, 803, 805, 806,
	808, 810, 812, 814, 816, 818, 820, 822, 824, 826,
	828, 830, 832, 834, -2, 837, 838, 839, -2, -2,
	0, -2, -2, -2, 1491, 41, 43, 45, 47, 49,
	51, 53, 55, 57, 59, 61, 63, 448, 450, 452,
	454, 456, 459, 461, 463, 1645, 511, 513, 515, 517,
	519, 521, 523, 0, 0, -2, 1659, 0, 0, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 113,
	114, 115, 116, 117, 118, 119, 78, 79, 80, 82,
	83, 84, 85, 89, 90, 91, 92, 93, 94, 95,
	96, 97, 98, 110, 111, 76, 0, 0, 1618, 1620,
	1622, 1624, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 573, 577, 580,
	582, 584, 588, 591, 597, 599, 601, 556, 557, 560,
	2357, 2375, 2376, 2377, 2380, 2381, 2382, 2383, 2384, 2385,
	2851, 2932, 2933, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 558, 559, 1254,
	0, 638, 636, 2342, 639, 2643, 641, 643, 498, 499,
	500, 501, 502, 503, 0, 666, 652, 1657, 667, 669,
	670, 671, 672, 633, 631, 0, 671, 666, 2411, 664,
	1471, 1472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 427, 1313, 1314, 1315, 1456, 1457, 2691,
	1498, 0, 245, 686, -2, -2, 2816, -2, 720, 721,
	-2, -2, 735, 739, 730, 2820, 0, 2694, 2678, -2,
	742, 1474, 1476, 1478, 841, 842, 2361, 0, 0, 0,
	0, 0, 38, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 255, -2, -2, -2, -2,
	0, 0, 2741, 2463, 2310, 2377, 2313, 2308, 349, 351,
	353, 355, 356, 0, 0, 0, 0, 0, 0, 0,
	387, 390, 392, 396, -2, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 1134, 1126,
	1127, 1378, 0, 0, 0, -2, 506, 508, 561, 562,
	0, 1646, 1646, 569, 570, -2, 0, 0, 0, 0,
	319, 309, 1061, 1063, 1065, 1066, 0, 0, 0, 0,
	0, 674, 676, 0, 0, 2735, 287, 1068, 1070, 1072,
	1073, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	690, 692, 694, 696, 767, 769, 771, 773, 775, 777,
	779, 781, 783, 786, 788, 790, 792, 794, 797, 799,
	801, 804, 807, 809, 811, 813, 815, 817, 819, 821,
	823, 825, 827, 829, 831, 833, 835, 836, 849, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	0, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 951, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 1041, 0, 0, 852, 855, 856,
	857, 858, 859, 860, 0, 924, 949, 950, 960, 840,
	0, 1294, 1647, 1500, 1481, 1495, 1500, 1483, 1484, 1485,
	1486, 1487, 1492, 1494, 1488, 1489, 1490, 42, 44, 46,
	48, 50, 52, 54, 56, 58, 60, 62, 64, 449,
	451, 453, 455, 457, 460, 462, 464, -2, 1616, 1617,
	512, 514, 516, 518, 520, 522, 524, 677, 0, 680,
	0, 854, 679, -2, 0, 1651, 1651, 1651, 0, 0,
	1617, 1615, 0, 683, 684, 746, 747, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 2184, 2012, 0, 748,
	-2, 2045, 2047, 2791, 2616, 2816, 2183, 2049, 2050, 2051,
	2052, 2053, 0, 2055, 2056, 2057, 2058, 2059, 2060, 0,
	2062, 0, 2067, 2068, 2069, 0, 2798, 2287, 2371, -2,
	0, 0, 2804, 2367, 0, 2150, 2085, -2, -2, 2394,
	2373, 1856, 1857, 1858, 1859, 1860, -2, -2, 2834, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	0, 2779, 2799, 2800, 2805, 2807, 2801, 2788, 2110, 2477,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1883, 1892, -2, -2, -2, -2, -2,
	-2, -2, 2792, 2793, 2810, 2813, 2819, 2824, 2825, 2797,
	2806, 2833, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842,
	2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 1884, -2,
	-2, -2, -2, 1634, 2657, 1637, 1254, 1635, 1619, 1621,
	0, 1623, 0, 0, 0, 1628, 1654, 1652, 0, 1703,
	1632, 1633, 1726, 1726, 1750, 0, 1731, 0, 1750, 1646,
	1777, 0, 1737, 2683, 2086, 2087, 0, 2377, 2372, -2,
	-2, 2831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 0, 640, 642, 0, 0, 0,
	665, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 432, 433, 434, 2799, 0, 0, 0, 439,
	0, 441, 442, 443, 444, 445, 446, 447, 215, 2799,
	529, 554, 0, 215, 2799, 532, 215, 2799, 535, 0,
	538, 1376, 215, 2799, 541, 2338, 215, 2799, 544, 546,
	2346, 215, 2799, 550, 2353, 2351, 551, 0, 553, 235,
	231, 232, 233, 234, 1467, 1468, 1469, 1470, 0, 1497,
	1377, 688, 0, 714, 0, 718, 719, 2787, -2, 0,
	2703, 723, 724, -2, 726, 1501, 1505, 1506, 1507, 1508,
	1509, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	715, 716, 733, 734, 740, 743, 0, 844, 845, 846,
	847, 848, 75, 0, 2799, 1777, 77, 0, 2332, 2402,
	2403, 2404, 2405, 2406, 2832, 2852, 2853, 2854, 2855, 2856,
	2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866,
	2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876,
	2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886,
	2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896,
	2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906,
	2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916,
	2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926,
	2927, 2928, 2929, 2930, 2931, 2834, 81, 0, 2799, 86,
	0, 2799, 0, -2, 99, 0, 112, 0, 139, -2,
	-2, -2, 120, 0, 2799, 0, 2307, -2, 0, 227,
	310, 311, 312, 0, 617, 0, 624, 322, 323, 2390,
	2391, 2398, 2399, 2400, 2401, 0, 1098, -2, 0, 1307,
	1309, 1309, 0, -2, 0, 0, 0, 1051, 2304, 2309,
	1052, 2328, 1053, 2314, 0, 357, 358, 359, 360, 361,
	0, 362, 2799, 364, 365, 0, 367, 368, 2799, 370,
	371, 0, 373, 0, 375, 0, 267, 271, 2799, 2799,
	400, 403, 0, 405, 406, 0, 408, 0, 0, 0,
	412, -2, 428, 0, 425, 415, 416, 418, 419, 420,
	421, 422, 0, 468, 466, 2343, 0, 0, -2, 2799,
	0, 1095, 0, 0, 1356, -2, 0, 1300, 0, 1363,
	2799, 1359, 0, -2, 0, 1644, 2799, 1518, 1130, 1131,
	1132, 1133, 1789, 495, 0, 1551, 0, 1553, 0, 1573,
	1783, 1726, 0, 0, 1788, 0, -2, 614, 2360, -2,
	564, 0, 565, 0, -2, 0, 336, 0, 0, 1076,
	1078, 1079, 1081, 1082, 1085, 1086, 1087, 1088, 0, 1090,
	1763, 288, 290, 0, 0, 0, 0, 1075, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 0, 0, 699,
	0, 0, 850, 851, 0, 0, 867, 868, 869, 0,
	336, 2695, 2652, 2499, 876, 0, 879, 882, -2, 0,
	0, 0, 0, 886, 0, 891, 892, 893, 0, -2,
	0, 900, 902, 1059, 904, 0, 0, 906, 0, 910,
	0, 913, 0, 915, 0, 917, -2, -2, -2, 925,
	926, -2, 931, -2, 0, 935, -2, 0, 938, 0,
	941, -2, 0, 951, 947, 948, 0, 0, 0, 0,
	968, 969, 0, 978, 0, 981, 982, 983, 0, 987,
	988, 0, 990, 991, 992, 994, 995, 996, 0, 2769,
	2700, 2463, 0, 1004, -2, 1010, 1012, 0, -2, 0,
	1028, 0, 1032, 0, 0, 1040, 0, 0, 853, 0,
	861, 862, 215, 1781, 1480, -2, 1482, 0, -2, 0,
	678, 0, 682, 1676, 1602, 1599, 0, 1673, 1674, 1603,
	0, 0, 0, 1610, 0, 1649, 1650, 0, 0, 0,
	1589, 1590, 0, 0, 0, 0, 2189, 2190, 2191, 2192,
	2205, 2193, 2194, 2204, 2202, 2203, 2195, 2196, 2201, 2215,
	2216, 2206, 2207, 2197, 2210, 2208, 2209, 2211, 2212, 2213,
	2214, 0, 0, 2220, 0, 2198, 2199, 2200, 2228, 0,
	0, 2229, 0, 2231, 0, 2221, 2217, 2218, 2219, 0,
	1991, 1993, 2295, 0, 0, 0, 2227, 2222, 2223, 1929,
	1930, 1931, 1932, 1933, 1966, 1970, 1971, 0, 0, 2046,
	2292, 2291, 2048, 0, 0, 2243, 0, 2061, -2, 0,
	2184, 2238, 0, 0, 2070, 2071, 2072, 0, 0, 2243,
	0, 0, 2286, 2082, 2083, 1921, 0, 0, 2152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 1869, 0,
	1871, 0, 1872, 1873, 1880, 1893, 0, 0, 0, 0,
	1897, 0, 0, 0, 0, 0, 0, 0, 2267, -2,
	0, 0, 0, 0, 1885, 0, 1636, 0, 0, 1707,
	2296, 2300, 2301, 1707, 1707, 0, 0, 2244, 1774, 1774,
	0, 0, 1769, 1769, 1769, 1767, 1750, 0, 1750, 1760,
	0, 1750, 1750, 0, -2, 1731, 0, 0, 1760, 0,
	1744, 602, 604, 606, 608, 609, 610, 612, 1778, 1779,
	0, 0, 0, 0, 2378, 0, 0, 0, 0, 2350,
	0, 0, 2363, 0, 0, 2337, 382, 383, 0, 0,
	0, 2752, 2694, 0, -2, 645, 668, 1646, 0, 2246,
	1804, 1808, 0, 1810, 1811, 1812, 1813, 1814, 0, 0,
	1805, -2, 1881, 1883, 1904, 2395, 2396, 2397, 1864, 1865,
	1866, 1867, 1868, 1876, 1863, 1863, 1863, 1874, 1903, 1895,
	1903, 1899, 1849, 1850, 1851, 1886, 1887, 1888, 1889, 0,
	2752, 2694, 0, -2, 0, 655, 0, 0, 1584, 429,
	0, 436, 437, 438, 0, 525, 0, 213, 214, 0,
	215, 2799, 530, 0, 533, 0, 215, 2799, 2302, 539,
	0, 542, 0, 0, 548, 0, 0, 0, 0, 0,
	215, 1586, 0, 0, 0, 0, -2, 728, 736, 737,
	738, 0, 1503, 0, 1510, 757, 758, 759, 1512, 1513,
	0, 1515, 731, 760, 761, 762, 763, 764, 765, 0,
	2316, 2317, 2318, 2319, 2322, 2323, 0, 0, 729, 750,
	732, 0, 744, 121, 1453, 0, 0, 168, 0, 1453,
	1453, 0, 0, 0, 0, 196, 0, 0, 1164, 0,
	0, 0, 0, 139, 153, 164, 133, 134, 135, 0,
	0, 0, 0, 0, 0, 87, 1276, 0, 1279, 0,
	0, 0, 0, 0, 0, 0, 1292, 0, 0, 0,
	0, 0, 101, 102, 0, 0, 107, 108, 0, 152,
	0, 0, 0, 0, 0, 1548, 0, 143, 139, 0,
	0, 138, 140, 123, 0, 0, 139, 154, 166, 0,
	202, 204, 1161, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 237, 0, 616, 618, 0, 0, 622, 0,
	625, 0, 0, 0, 1301, 0, 0, 0, 1643, 0,
	0, 0, 0, 2799, 1451, 0, 1436, 0, 1763, 2548,
	-2, -2, 288, 1763, 1050, 0, 0, 2378, 2312, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	404, 407, 409, 410, 411, 0, 1355, 0, 417, 458,
	1223, 2799, 0, 0, 485, 480, 0, 482, 0, 0,
	0, 1275, 2799, 1273, 2347, 0, 1298, 0, 1254, 2799,
	2345, 0, 0, 0, 1364, 2387, 1373, 1377, 1536, 0,
	497, 0, 1554, 1556, 0, 0, 1784, 0, 1786, 1726,
	1646, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 1089, 294, 0, 1762, 0, 0, 324, 1763,
	288, 2669, 0, 1074, 336, 336, 1763, 701, 1763, 703,
	0, 0, 870, 871, 0, 336, 336, 336, 877, 878,
	880, 881, -2, -2, -2, -2, 883, 884, 975, 0,
	0, 0, 974, 894, 0, 896, 899, 903, 0, 1044,
	2678, 2694, 2752, 1057, 975, 2463, 975, 2463, 975, 2463,
	975, 975, 919, 963, 971, 930, 937, 0, 932, 936,
	939, 942, 0, 944, 952, 0, -2, 0, 955, 0,
	957, 0, 959, 975, 976, 979, 986, 989, 0, 997,
	998, 999, 1000, 2358, 1001, 1002, 1003, -2, 1007, 1008,
	0, 1019, 1024, 1025, 1021, 0, 0, 0, 0, 0,
	0, 1035, 1036, 0, 0, 1043, 0, 863, 1293, 0,
	1493, 1676, 1602, 681, 1593, 1675, 1594, 1601, 1604, 0,
	0, 1606, 0, 1608, 0, 1671, 1672, 1679, 1680, 0,
	1690, 1691, 1683, 0, -2, 0, 0, 1686, 1687, 1612,
	0, 1629, 1630, 1631, 1660, 1663, 1392, 0, 2932, 1925,
	1799, 1926, 1927, 2331, 0, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, -2, -2, -2, -2, -2,
	-2, -2, -2, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, -2, -2, -2, 1967, 1968, 1969,
	-2, 2230, 2232, 0, 2295, 0, -2, 0, -2, -2,
	-2, -2, 1988, 0, 1990, 1995, 1997, 1999, 0, 0,
	0, 0, 2294, 2009, 2278, 2279, 0, 0, 2186, 2187,
	2188, 1994, 0, 2013, 2293, 2290, 0, 0, 2224, 0,
	2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 0, 2242, 1659, 2074, 0, 0, 0,
	0, 2081, 2066, 2240, 0, 2239, 0, 0, 0, 2250,
	0, 2285, 2281, 0, 2329, 1920, 1907, 1908, 1909, 1910,
	1911, 1912, 1922, 0, 2326, 2364, 2370, 2160, 0, 0,
	0, 2111, 2112, 2113, 2114, 2115, 0, 2117, 2118, 0,
	2120, 2121, 0, 2123, 2124, 0, 2126, 2127, 2128, 2129,
	2130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	0, 0, 2132, 0, 2253, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2134, 0, 2136, 2244, 2264, 0,
	0, 2014, 0, 0, 0, 0, 2184, 0, 2139, 2244,
	2272, 0, 0, 0, 0, 0, 2244, 0, 2277, 0,
	2146, 0, 2148, 1638, 0, 0, 1794, 0, 0, 0,
	2299, 1794, 1794, 0, 1702, 0, 0, 1770, 1771, 1772,
	1773, 0, 0, 1774, 0, 1764, 1768, 1765, 1766, 1760,
	1723, 0, 0, 2333, 1760, 1729, 1759, 0, 1254, 1749,
	1760, 1760, 0, -2, 1733, 1750, 0, 0, 603, 605,
	607, 611, 613, 0, 0, 1659, -2, 0, -2, 338,
	1253, 0, 0, 0, 0, 0, 0, 635, 637, 0,
	0, 545, 0, 0, 651, 0, 629, 0, 632, 0,
	1795, 1798, 0, 0, 1809, 1815, 1816, 0, -2, 0,
	0, 1905, 0, 0, 0, 0, 0, 663, 0, 666,
	0, 0, 0, 440, 555, 215, 527, 0, 215, 215,
	536, 0, 0, 215, 547, 215, 2354, 215, 2352, 236,
	552, 1585, 248, 0, 717, 0, 1502, 1511, 0, 754,
	0, 756, 0, 2320, 2324, 2321, 2325, 0, 745, 0,
	0, 0, 0, 1452, 0, 0, 1399, 0, 0, 172,
	2799, 0, 217, 0, 0, 1216, 2339, 0, 1206, 0,
	0, 2485, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 0,
	136, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 1278, 1280, 1287, 1289, 0, 1283, 2327, 0, 0,
	1284, 0, 1286, 1288, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 1310, 0, 0, 1311, 1312,
	1524, 1525, 0, 1547, 1548, 0, 0, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 0, 2306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 619,
	620, 621, 626, 0, 627, 0, 0, 0, 1303, 0,
	1351, 1349, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 0, 0, 0, 0,
	-2, 1305, 1306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 327, 2305, 2315, 0, 1083, 1084,
	363, 366, 369, 372, 254, 0, 0, 402, 413, 0,
	0, 1136, 1108, 0, 0, 467, 336, 0, 0, 481,
	485, 2356, 1093, 1271, 1274, 0, 1254, 2799, 1321, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 2799, 2334,
	2386, 2387, 1538, 1548, 0, 1794, 0, 1571, 1557, 0,
	0, 0, 1571, 1575, 1576, 1578, 1579, 0, 0, 1785,
	1791, 563, 615, 1646, 1646, 336, 334, 2619, 332, 329,
	331, 0, 0, 1560, 1562, 0, 0, 0, 280, 0,
	291, 1763, 289, 0, 294, 0, 0, 1763, 288, 0,
	479, 700, 705, 865, 0, 336, 873, 874, 875, 921,
	965, 973, 1023, 885, 887, 888, 889, 0, 0, 0,
	1058, 1054, 1055, 1056, 905, 975, 908, 975, 911, 975,
	914, 916, 934, 940, 953, 946, 954, 0, 0, 0,
	967, 984, 0, 993, 1006, 0, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1031, 1033, 1038, 1037, 1042, 864,
	1782, 1597, 1598, 1600, 0, 1609, 0, 0, 1685, -2,
	-2, 1684, 1688, 1689, -2, -2, -2, -2, 1605, 0,
	1614, 1611, 0, 1670, 1390, 1391, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 2010, 0, -2, 1989, 1992,
	1996, 1998, 2000, 0, 0, 0, 0, 0, 0, 2233,
	0, 2235, 2011, 2288, 2291, 2226, 0, 2182, 0, 0,
	1658, 1659, 1659, 0, 2080, 0, 2241, 0, 2248, 2249,
	0, 2073, 0, 2282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 2116, 2119,
	2122, 2125, 0, 0, 0, 0, 2105, 0, 0, 0,
	2109, 1875, 1861, 0, 1903, 1901, 1902, 1896, 1903, 1900,
	1853, 0, 1852, 0, 2131, 0, 2133, 2135, 0, 0,
	2137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2017, 2018, 2019, 2039, 2138,
	2270, 2271, 0, 0, 0, 0, 0, 0, 2144, 0,
	2276, 2145, 2147, 1646, 0, 1639, 0, 1704, 1693, 1793,
	0, 2297, 1763, 1706, 1708, 2298, 2336, 1693, 1693, 0,
	2245, 0, 0, 1754, 0, 0, 0, 1756, 1727, 0,
	0, 1721, 0, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1728, 1254, 1758, 1730, 1734, 2364, 0, 1760, 0, 1745,
	0, 1747, 1780, 0, 1739, 1742, 0, 0, 2379, 1794,
	0, 376, 384, 385, 377, 378, 379, 380, 0, 1439,
	0, 0, 0, 0, 0, 2247, 0, 1800, 0, 1806,
	0, 0, 0, 0, 653, 0, 0, 0, 0, 0,
	1583, 435, 526, 215, 531, 534, 2303, 215, 540, 543,
	549, 244, 0, 713, -2, 752, 753, 755, 0, 751,
	169, 1453, 0, 0, 0, 1395, 0, 1119, 0, 1114,
	1115, 1397, 1401, 1407, 1410, 0, 174, 2799, 186, 0,
	2799, 0, 1180, 0, 0, 0, 0, 0, 0, 1455,
	0, 0, 2799, 215, 2799, 215, 190, 192, 195, 0,
	201, 197, 0, 1116, 0, 1168, 0, 0, 1171, 122,
	1453, 0, 0, 125, 129, 141, 0, 0, 0, 151,
	0, 0, 0, 1412, 1416, 1424, 0, 0, 0, 1281,
	1282, 1285, 1291, 88, 0, 0, 0, 1420, 1422, 1428,
	100, 103, 2799, 2348, 105, 2799, 0, 1394, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 127, 131, 142,
	0, 1430, 124, 0, 230, 0, 0, 220, 215, 2799,
	0, 222, 0, 223, 224, 238, 0, 0, 0, 623,
	0, 1096, 1097, 1350, 0, 1296, 1297, 0, 1308, 1302,
	0, 0, 0, 0, 0, 1432, 1433, 0, 0, 0,
	1451, 1448, 1763, 250, 0, 1763, 258, 0, 2311, 0,
	272, 399, 0, 0, 0, 0, 1135, 1234, 1137, 1139,
	1140, 1141, 217, 0, 2387, 1206, 2537, 2387, 0, 0,
	1103, 0, 0, 0, 473, 469, 0, 478, 484, 483,
	489, -2, 0, 0, 0, 0, -2, 0, 0, 1366,
	1360, 1361, 0, 0, 0, 0, 2799, 1540, 1548, 0,
	1644, 1659, 496, 1549, 1571, 0, 0, 0, 1559, 1555,
	1552, 1794, 0, 0, 0, 0, 0, 1787, 1790, 566,
	567, 313, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 292, 0, 295, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 294,
	325, 282, 1763, 0, 294, 0, 0, 702, 0, 0,
	872, 0, 895, 898, 907, 909, 912, 956, 958, 975,
	985, 1013, 2335, 1014, 1158, 0, 1158, 0, 0, 1034,
	1607, 0, 1682, 1613, 1664, 1665, 0, 1392, 0, 1928,
	1973, 0, 0, -2, 0, 0, 1977, 0, 0, 0,
	-2, 0, 0, 0, 2234, 2236, 0, 2290, 2225, 2075,
	0, 0, 0, 2079, 2063, 2064, 0, 2185, 2251, 2280,
	2284, 0, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 0,
	2330, 2365, 2369, 2158, 2159, 2163, 2344, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 1894,
	1898, 0, 0, 2252, 2263, 2265, 2015, 2016, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, -2, -2,
	-2, 2033, 2034, 2035, -2, -2, -2, 2040, 0, 0,
	0, 2266, 2268, 2269, 2273, 2274, 0, 2141, 2142, 2143,
	2275, 0, 1646, 1640, 1701, 0, 1792, 1705, 0, 1701,
	1701, 1653, 1752, 0, 0, 1776, 0, 1724, 0, 1725,
	0, 0, 1757, 0, 1732, 1735, 1736, 1746, 0, 1738,
	0, 1741, 0, 2075, -2, 337, 339, 341, 0, 344,
	345, 0, 0, 0, 644, 0, 1439, 1439, 0, 646,
	630, 0, 0, 1802, 0, 0, 1878, 1882, 1906, 657,
	659, 0, 0, 2752, 2694, 0, 656, 528, 537, 246,
	0, 1761, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 216, 0, 1215, 0, 1178, 0, 0, 1205, 0,
	0, 1221, 176, 177, 178, 0, 0, 0, 0, 188,
	0, 0, 184, 0, 194, 200, 199, 0, 1165, 0,
	0, 0, 0, 1400, 0, 0, 0, 148, 149, 150,
	0, 155, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 1531, 0, 1521, 145, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 1389,
	240, 0, 0, 0, 0, 0, 0, 1295, 1353, 1354,
	1304, 1413, 1417, 1425, 0, 0, 0, 0, 0, 671,
	1450, 0, 258, 256, 0, 259, 0, 262, 263, 0,
	0, 258, 252, 0, 0, 0, 1254, 414, 1106, 1222,
	0, 0, 1224, 1142, 1146, 0, 2387, 2387, 0, 2341,
	0, 1104, 0, 0, 1223, 465, 0, 472, 0, 486,
	0, 0, 1275, 0, 0, 1299, 1324, 1254, 0, 1365,
	1367, 0, 1375, 0, 0, 0, 1542, 1548, 0, 1535,
	1536, 1678, 1550, 1569, -2, 0, 0, 1659, 1577, 1574,
	1580, 1581, 0, 333, 0, 328, 330, 0, 316, 0,
	1561, 1563, 0, 1077, 1080, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 294, 1763, 284, 1763, 320, 0,
	866, 890, 966, 1015, 1157, 0, 0, 1017, 0, 0,
	1681, 1668, 1669, 1666, 1392, 1975, 1979, 0, 0, 0,
	1981, -2, 0, 2003, -2, -2, 2237, 2289, 2054, 1659,
	2076, 2078, 2065, 2283, 1923, 0, 2165, 2162, 0, 2149,
	0, 2100, 2101, 0, 0, 2104, 2106, 2107, 2108, 1862,
	1855, 1854, 2262, 0, 0, 0, 0, 2140, 1641, 0,
	2154, 0, 0, 1709, 2154, 2154, 1753, 0, 1755, 1722,
	1710, 0, 1719, 0, 2365, 1748, 1740, 0, 0, 342,
	0, 346, 347, 381, 0, 647, 648, 0, 0, 1796,
	1801, 0, 1807, 1877, 0, 0, 0, 0, 0, 247,
	170, 171, 1120, 1118, 1404, 1408, 1405, 0, 173, 0,
	0, 1179, 0, 1182, 0, 0, 0, 0, 1189, 1206,
	0, 0, 0, 0, 0, 0, 1208, 0, 1207, 0,
	0, 1238, 0, 1380, 1387, 0, -2, 0, 0, 0,
	180, 206, 0, 0, 0, 0, 209, 1454, 182, 0,
	0, 215, 215, 1117, 0, 0, 1396, 1398, 1411, 0,
	0, 0, 0, 158, 0, 0, 1414, 1418, 1426, 1421,
	1423, 1429, 0, 106, 0, 1532, 0, 144, 0, 0,
	0, 1431, 228, 229, 0, 215, 0, 215, 221, 215,
	1389, 0, 0, 0, 0, 0, 0, 0, 0, 1434,
	1435, 249, 0, 0, 0, 0, 0, 251, 326, 258,
	401, 0, 1167, 0, 1234, 1226, 1227, 1228, 0, 1138,
	1233, 1235, 0, 0, 1143, 0, 0, 0, 0, 1123,
	1105, 0, 1136, 1108, 0, 470, 487, 0, 490, 0,
	493, 1094, 1272, 1316, 1254, 1319, 0, 0, 1357, 0,
	0, 0, 0, 0, 0, 0, 1544, 1548, 0, 1537,
	1538, 1571, 1677, 0, 0, 0, 1558, 1678, 0, 335,
	336, 0, 336, 296, 0, 297, 298, 299, 306, 307,
	308, 283, 286, 294, 704, 706, 0, 0, 712, 1156,
	0, 0, 0, 0, 1667, 1983, -2, -2, 2004, 0,
	2366, 2368, 1659, 0, 2151, 1661, 0, 0, -2, 0,
	0, 0, 1642, 1625, 0, 1700, 1692, 1694, 1696, 2681,
	2458, 2798, 1626, 1627, 1775, 0, 0, 1743, 343, 1438,
	649, 0, 0, 1803, 0, 654, 0, 0, 0, 0,
	0, 1406, 175, 0, 0, 1183, 1184, 2340, 1186, 0,
	1188, 1190, 1191, 1108, 0, 1195, 0, 2389, 0, 1200,
	1203, 1204, 0, 0, 1217, 1239, 0, 1248, 0, 1382,
	1392, 1386, 0, 1384, 1250, 0, 179, 208, 181, 210,
	205, 0, 1389, 0, 183, 193, 0, 0, 126, 0,
	0, 2452, 161, 159, 157, 104, 1393, 147, 0, 128,
	0, 230, 239, 1388, 241, 225, 215, 0, 0, 1415,
	1419, 1427, 0, 1442, 1443, 1444, 1445, 0, 0, 0,
	0, 260, 0, 261, 264, 265, 0, 0, 1108, 1166,
	1107, 1225, 0, 1236, 1108, 0, 0, 0, 0, 0,
	0, 1110, 0, 1109, 0, 0, 471, 474, 0, 477,
	0, 0, 0, 0, 0, 1323, 0, 1368, 1366, 0,
	1374, 0, 0, 0, 1520, 0, 0, 1539, 1540, 494,
	1564, 0, 0, 1571, 1582, 315, 0, 318, 293, 285,
	0, 708, 0, 710, 0, 1016, 1018, 0, 0, 2077,
	2169, 0, 0, 2102, 2103, -2, 0, 2043, 2153, 2155,
	0, 0, 0, 0, 0, 1711, 1720, 1439, 1797, 661,
	658, 660, 0, 1402, 0, 1409, 217, 1181, 1185, 0,
	1192, 0, 0, 0, 1196, 1258, 0, 0, 1275, 1275,
	1209, 0, 0, 1242, 1243, 1163, 0, 1244, 1245, 1246,
	1381, 1670, 1387, 1108, 0, 0, 207, 212, 0, 0,
	0, 0, 0, 0, 146, 0, 219, 242, 1389, 0,
	0, 1446, 1447, 0, 0, 257, 276, 0, 1317, 1110,
	0, 1237, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1145, 1250, 0, 0, 1214, 1121, 0, 1124,
	0, 1106, 0, 475, 476, 491, 0, 492, 0, 0,
	1324, 0, 0, 1375, 0, 0, 1527, 1519, 1548, 1541,
	1542, 1794, 0, 1572, 0, 707, 0, 0, 1026, 1027,
	0, 0, 0, 0, 2164, 1662, 2044, 0, 0, 1695,
	1697, 1698, 1699, 650, 0, 1403, 187, 0, 1252, 1194,
	1263, 0, 0, 0, 0, 0, 1210, 1240, 1241, 1238,
	1162, 0, 1385, 1383, 1219, 1252, 1254, 185, 0, 1250,
	0, 1172, 0, 0, 1175, 0, 0, 162, 2452, 160,
	0, 215, 628, 1439, 215, 0, 279, 0, 270, 268,
	269, 1102, 0, 1230, 1232, 1248, 1250, 1163, 0, 1125,
	1167, 1123, 488, 1318, 1322, 1320, 1358, 1250, 0, 1248,
	0, 1534, 1548, 1528, 1529, 0, 1544, 0, 0, 336,
	709, 711, 2161, 2181, 2170, -2, 2755, 2459, 0, 2181,
	2181, 2156, 2157, 0, 0, 1108, 0, 1197, 1259, 1260,
	0, 1255, 1256, 1257, 2388, 1198, 1199, 1201, 1202, 1794,
	0, 1249, 1258, 211, 1108, 1169, 0, 0, 1170, 0,
	0, 165, 0, 167, 243, 1437, 1440, 0, 266, 0,
	0, 1099, 1101, 1108, 0, 1163, 1248, 1108, 0, 0,
	0, 1108, 1110, 1248, 0, 1163, 0, 1523, 1533, 0,
	1543, 1520, 0, 1567, 0, 317, 2166, 0, 0, 2172,
	2173, 2174, 2175, 2176, 2167, 2168, 662, 1187, 1193, 0,
	1261, 0, 1262, 0, 0, 0, 1218, 1247, 1263, 191,
	1173, 0, 1176, 0, 163, 0, 0, 274, 275, 1229,
	1231, 1108, 1163, 1794, 1111, 0, 1113, 1110, 1122, 1163,
	0, 1108, 0, 1546, 1522, 1526, 2349, 1527, 1565, 0,
	0, 0, 2178, 2179, 0, 0, 0, 1264, 0, 1267,
	1268, 0, 1265, 1238, 0, 0, 215, 0, 1794, 1108,
	1213, 1112, 1102, 1108, 1250, 1794, 1248, 1516, 1548, 1534,
	0, 1794, 2177, 2180, 2171, 1251, 1266, 1269, 1270, 1220,
	0, 0, 1441, 277, 0, 1211, 1794, 1100, 1794, 1248,
	1371, 1163, 0, 1523, 1794, 1568, 1160, 0, 0, 1212,
	1369, 1163, 1108, 1545, 1517, 1566, 1174, 1159, 0, 278,
	1108, 1794, 0, 1794, 1372, 0, 1370, 1160, 1177,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 599, 3, 605, 600, 3,
	611, 612, 603, 601, 616, 602, 613, 604, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 619, 3,
	591, 593, 592, 596, 615, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 609, 3, 610, 606, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 617, 598, 618, 594,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 595, 57934, 597,
	57935, 607, 57936, 608, 57937, 614, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1534
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1535
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1536
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1537
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1538
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1539
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1540
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1541
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1548
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1559
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1562
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1565
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1634
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1660
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1701
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1733
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1744
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1783
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1845
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1877
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1901
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1910
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1931
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1939
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1975
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1986
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1998
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2019
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2081
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2090
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2101
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2109
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2120
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2130
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2140
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2149
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2160
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2166
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2192
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2197
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2222
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2332
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2342
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2345
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2351
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2403
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = true
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = false
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2598
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2602
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2605
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2689
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2786
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2794
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2821
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2948
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = nil
		}
	case 280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3050
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3105
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3258
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3267
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3273
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3278
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3283
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3307
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = nil
		}
	case 337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3391
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3405
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3425
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3587
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3608
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3609
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3613
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3618
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3630
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3637
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "CREATE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3652
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3655
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3661
		{
			return unimplemented(sqllex, "create access method")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			return unimplemented(sqllex, "create cast")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3664
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3665
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3666
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3667
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3668
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3670
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3671
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			return unimplemented(sqllex, "create publication")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3674
		{
			return unimplemented(sqllex, "create rule")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			return unimplemented(sqllex, "create server")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3677
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3682
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3683
		{
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3686
		{
		}
	case 426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3687
		{
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3690
		{
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3691
		{
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3694
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3698
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3701
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3702
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3704
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3705
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3709
		{
			return unimplemented(sqllex, "drop server")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3712
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3715
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3721
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3792
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3838
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3869
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3873
		{

			sqlVAL.union.val = nil
		}
	case 486:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3920
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3956
		{
			return helpWith(sqllex, "DELETE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3960
		{
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3984
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3985
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3986
		{
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "DROP")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4186
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4252
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4260
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4268
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4276
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4284
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4306
		{
			return helpWith(sqllex, "DELETE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "INSERT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4313
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4325
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "DELETE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			return helpWith(sqllex, "INSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4461
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4494
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4585
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4601
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "GRANT")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4635
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4697
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4700
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4710
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4738
		{
			return helpWith(sqllex, "RESET")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4739
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "RESET")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4769
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "USE")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4788
		{
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "USE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4848
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4944
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4961
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4995
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5018
		{
			return unimplemented(sqllex, "set from current")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5027
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5041
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5045
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5062
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = tree.Low
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = tree.Normal
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = tree.High
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5194
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5201
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5205
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5206
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5208
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5210
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "SHOW")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5243
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5247
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5257
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5262
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5267
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.str = "client_encoding"
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.str = "timezone"
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5329
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5344
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5352
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5431
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5440
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5451
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5474
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5485
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5501
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5531
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5554
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5573
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5606
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5622
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5627
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = true
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = true
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = false
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5663
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5664
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5665
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5682
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5708
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5725
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5733
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5741
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5777
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5782
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5784
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = true
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = false
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5808
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5849
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5854
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = true
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = false
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5872
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5886
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5893
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5897
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5901
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5912
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5926
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5934
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5944
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5948
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5978
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5983
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5988
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5993
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6009
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6022
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6027
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6067
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6075
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6096
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6101
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6106
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6110
		{
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6119
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6133
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6142
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6154
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6213
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6223
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6236
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6369
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6412
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6421
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6470
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6472
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6473
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6483
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6484
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6485
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6497
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6538
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6570
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6578
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6625
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6653
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6689
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6704
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6732
		{

			sqlVAL.union.val = nil
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6738
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.str = ""
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6748
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = nil
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6771
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6775
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6811
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6824
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6838
		{
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6839
		{
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6921
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6932
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6935
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6938
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6939
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.str = ""
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7077
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7184
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7229
		{

			sqlVAL.union.val = true
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = false
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7246
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7343
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7371
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7381
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7396
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7464
		{
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7465
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7466
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7467
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7636
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7645
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7653
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7664
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7677
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7687
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7689
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7691
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7693
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7696
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7699
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7701
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7714
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7745
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7779
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.str = ""
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = true
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7813
		{

			sqlVAL.union.val = true
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = false
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7828
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7842
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7854
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7866
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7876
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7886
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7890
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = true
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = true
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = nil
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8025
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8026
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8053
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8055
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8057
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8059
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8061
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8096
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8113
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8131
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8147
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8163
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8167
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = false
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = true
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = false
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = true
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = false
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8221
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8227
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8233
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8241
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.str = ""
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.str = ""
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8300
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8306
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8531
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8537
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8549
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8555
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8569
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8575
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8634
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = true
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = false
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = tree.Types
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8694
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8698
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8722
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8723
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8726
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8727
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8738
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8756
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8765
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8786
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8794
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8823
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8840
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8859
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8892
		{
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8893
		{
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8910
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8913
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8914
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8942
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8957
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8961
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9051
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.str = ""
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9096
		{

		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9111
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.str = ""
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.str = ""
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.str = ""
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.str = ""
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9166
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9191
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9192
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9221
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9239
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9243
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9252
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9301
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9384
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9416
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9437
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9452
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9631
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9632
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9633
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9694
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9738
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9754
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = true
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = false
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9808
		{
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = nil
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9821
		{
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9822
		{
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = true
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = false
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = false
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = true
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9851
		{
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9852
		{
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9856
		{
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9897
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9909
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9914
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9940
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9973
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10028
		{
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10033
		{
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10067
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10069
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10099
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10101
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10116
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10138
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10148
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10185
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10216
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10258
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10268
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10314
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10344
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10377
		{
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = nil
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = true
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = false
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.str = tree.AstFull
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.str = tree.AstRight
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.str = tree.AstInner
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10497
		{
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.str = tree.AstHash
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.str = ""
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10571
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10589
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10595
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10601
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10611
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = true
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = false
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = true
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = false
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10660
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10673
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10681
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10682
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10700
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10702
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10710
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10723
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10730
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10739
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10779
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10791
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10792
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = types.Geography
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10841
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10849
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10875
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10883
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = nil
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = types.Int2
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = types.Int
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = types.Float4
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = types.Float
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10926
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10934
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10942
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = types.Bool
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = types.Float
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10975
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10981
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11003
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = types.String
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = true
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = false
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = types.Date
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11052
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11060
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11074
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11083
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11091
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11108
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = true
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = false
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = false
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = types.Interval
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11132
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11216
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11231
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = nil
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11261
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11321
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11470
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11478
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11599
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11665
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11687
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11795
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11803
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11899
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11904
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11930
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11954
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11988
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11999
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12000
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12015
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12024
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12090
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12215
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12220
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12229
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12238
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12247
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12256
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12261
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12266
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12271
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12276
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12281
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12290
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12291
		{
			return unimplemented(sqllex, "treat")
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12312
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12317
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12364
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.str = ""
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12453
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12466
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12522
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12526
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12534
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12563
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12603
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12604
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12619
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12621
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12623
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12627
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12631
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12639
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12764
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12768
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12784
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12788
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12869
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12881
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12901
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12953
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12957
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12979
		{
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12980
		{
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13019
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13052
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13096
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13100
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13104
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13133
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13149
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13158
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13169
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13178
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13186
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13203
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13288
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13296
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13300
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13306
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13310
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13318
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13345
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13352
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13356
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13360
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13374
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13378
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13382
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13395
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13404
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13422
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13435
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13442
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13467
		{
			sqlVAL.str = ""
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13473
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13477
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
