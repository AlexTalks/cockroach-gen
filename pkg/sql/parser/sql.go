// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11973

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 33,
	-2, 1357,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	232, 206,
	484, 206,
	-2, 0,
	-1, 81,
	221, 1155,
	234, 1155,
	250, 345,
	374, 345,
	384, 937,
	416, 345,
	428, 937,
	469, 937,
	495, 345,
	521, 937,
	-2, 0,
	-1, 87,
	250, 349,
	-2, 0,
	-1, 88,
	129, 1357,
	227, 1357,
	506, 1357,
	507, 1357,
	-2, 0,
	-1, 104,
	146, 1328,
	164, 1328,
	177, 1328,
	230, 1328,
	263, 1328,
	327, 1328,
	337, 1328,
	501, 1328,
	-2, 1299,
	-1, 140,
	154, 815,
	249, 815,
	377, 784,
	433, 784,
	487, 815,
	489, 784,
	-2, 0,
	-1, 142,
	4, 1359,
	21, 1359,
	22, 1359,
	23, 1359,
	24, 1359,
	25, 1359,
	26, 1359,
	27, 1359,
	29, 1359,
	30, 1359,
	36, 1359,
	41, 1359,
	42, 1359,
	44, 1359,
	45, 1359,
	46, 1359,
	47, 1359,
	48, 1359,
	49, 1359,
	50, 1359,
	52, 1359,
	53, 1359,
	54, 1359,
	55, 1359,
	57, 1359,
	58, 1359,
	59, 1359,
	60, 1359,
	61, 1359,
	62, 1359,
	63, 1359,
	67, 1359,
	68, 1359,
	69, 1359,
	70, 1359,
	72, 1359,
	73, 1359,
	74, 1359,
	78, 1359,
	79, 1359,
	80, 1359,
	81, 1359,
	82, 1359,
	83, 1359,
	84, 1359,
	87, 1359,
	88, 1359,
	89, 1359,
	90, 1359,
	91, 1359,
	93, 1359,
	95, 1359,
	96, 1359,
	97, 1359,
	98, 1359,
	99, 1359,
	100, 1359,
	102, 1359,
	103, 1359,
	104, 1359,
	106, 1359,
	107, 1359,
	115, 1359,
	116, 1359,
	117, 1359,
	118, 1359,
	120, 1359,
	121, 1359,
	122, 1359,
	124, 1359,
	125, 1359,
	126, 1359,
	128, 1359,
	129, 1359,
	131, 1359,
	132, 1359,
	133, 1359,
	136, 1359,
	137, 1359,
	138, 1359,
	140, 1359,
	141, 1359,
	143, 1359,
	144, 1359,
	145, 1359,
	147, 1359,
	148, 1359,
	149, 1359,
	150, 1359,
	151, 1359,
	152, 1359,
	153, 1359,
	154, 1359,
	155, 1359,
	156, 1359,
	157, 1359,
	158, 1359,
	159, 1359,
	160, 1359,
	161, 1359,
	163, 1359,
	169, 1359,
	170, 1359,
	171, 1359,
	172, 1359,
	176, 1359,
	178, 1359,
	182, 1359,
	183, 1359,
	184, 1359,
	185, 1359,
	186, 1359,
	187, 1359,
	188, 1359,
	189, 1359,
	190, 1359,
	191, 1359,
	192, 1359,
	193, 1359,
	195, 1359,
	196, 1359,
	198, 1359,
	199, 1359,
	201, 1359,
	202, 1359,
	203, 1359,
	204, 1359,
	205, 1359,
	206, 1359,
	207, 1359,
	208, 1359,
	209, 1359,
	211, 1359,
	212, 1359,
	214, 1359,
	215, 1359,
	216, 1359,
	217, 1359,
	221, 1359,
	222, 1359,
	223, 1359,
	224, 1359,
	227, 1359,
	228, 1359,
	229, 1359,
	231, 1359,
	233, 1359,
	234, 1359,
	236, 1359,
	238, 1359,
	239, 1359,
	240, 1359,
	242, 1359,
	246, 1359,
	247, 1359,
	248, 1359,
	249, 1359,
	250, 1359,
	251, 1359,
	253, 1359,
	254, 1359,
	255, 1359,
	257, 1359,
	258, 1359,
	260, 1359,
	261, 1359,
	264, 1359,
	268, 1359,
	269, 1359,
	272, 1359,
	273, 1359,
	274, 1359,
	275, 1359,
	277, 1359,
	278, 1359,
	279, 1359,
	280, 1359,
	281, 1359,
	282, 1359,
	283, 1359,
	284, 1359,
	285, 1359,
	286, 1359,
	287, 1359,
	288, 1359,
	289, 1359,
	290, 1359,
	291, 1359,
	292, 1359,
	293, 1359,
	294, 1359,
	295, 1359,
	296, 1359,
	297, 1359,
	298, 1359,
	300, 1359,
	302, 1359,
	303, 1359,
	304, 1359,
	305, 1359,
	306, 1359,
	307, 1359,
	308, 1359,
	309, 1359,
	310, 1359,
	311, 1359,
	312, 1359,
	313, 1359,
	315, 1359,
	317, 1359,
	319, 1359,
	320, 1359,
	322, 1359,
	323, 1359,
	324, 1359,
	325, 1359,
	326, 1359,
	329, 1359,
	332, 1359,
	333, 1359,
	334, 1359,
	335, 1359,
	338, 1359,
	339, 1359,
	340, 1359,
	342, 1359,
	344, 1359,
	345, 1359,
	346, 1359,
	347, 1359,
	348, 1359,
	349, 1359,
	350, 1359,
	351, 1359,
	352, 1359,
	353, 1359,
	354, 1359,
	355, 1359,
	357, 1359,
	358, 1359,
	359, 1359,
	360, 1359,
	361, 1359,
	362, 1359,
	363, 1359,
	364, 1359,
	365, 1359,
	366, 1359,
	367, 1359,
	368, 1359,
	369, 1359,
	370, 1359,
	371, 1359,
	373, 1359,
	375, 1359,
	376, 1359,
	377, 1359,
	378, 1359,
	379, 1359,
	380, 1359,
	381, 1359,
	382, 1359,
	383, 1359,
	384, 1359,
	385, 1359,
	386, 1359,
	388, 1359,
	394, 1359,
	396, 1359,
	397, 1359,
	398, 1359,
	399, 1359,
	400, 1359,
	401, 1359,
	402, 1359,
	403, 1359,
	405, 1359,
	406, 1359,
	407, 1359,
	409, 1359,
	410, 1359,
	411, 1359,
	412, 1359,
	413, 1359,
	414, 1359,
	416, 1359,
	417, 1359,
	418, 1359,
	419, 1359,
	420, 1359,
	421, 1359,
	422, 1359,
	423, 1359,
	424, 1359,
	425, 1359,
	426, 1359,
	428, 1359,
	429, 1359,
	430, 1359,
	431, 1359,
	432, 1359,
	433, 1359,
	435, 1359,
	436, 1359,
	437, 1359,
	438, 1359,
	439, 1359,
	441, 1359,
	442, 1359,
	443, 1359,
	444, 1359,
	445, 1359,
	446, 1359,
	447, 1359,
	449, 1359,
	451, 1359,
	452, 1359,
	453, 1359,
	454, 1359,
	455, 1359,
	456, 1359,
	457, 1359,
	458, 1359,
	459, 1359,
	460, 1359,
	461, 1359,
	462, 1359,
	463, 1359,
	465, 1359,
	466, 1359,
	468, 1359,
	470, 1359,
	471, 1359,
	472, 1359,
	473, 1359,
	474, 1359,
	475, 1359,
	476, 1359,
	477, 1359,
	479, 1359,
	480, 1359,
	481, 1359,
	482, 1359,
	483, 1359,
	485, 1359,
	487, 1359,
	488, 1359,
	489, 1359,
	490, 1359,
	491, 1359,
	492, 1359,
	494, 1359,
	495, 1359,
	496, 1359,
	497, 1359,
	499, 1359,
	500, 1359,
	503, 1359,
	504, 1359,
	505, 1359,
	506, 1359,
	507, 1359,
	508, 1359,
	509, 1359,
	511, 1359,
	514, 1359,
	515, 1359,
	516, 1359,
	517, 1359,
	518, 1359,
	519, 1359,
	521, 1359,
	522, 1359,
	523, 1359,
	524, 1359,
	529, 1359,
	530, 1359,
	531, 1359,
	532, 1359,
	533, 1359,
	534, 1359,
	-2, 0,
	-1, 143,
	1, 1228,
	127, 1228,
	238, 1228,
	316, 1228,
	373, 1228,
	381, 1228,
	537, 1228,
	561, 1228,
	-2, 0,
	-1, 145,
	1, 1228,
	561, 1228,
	-2, 0,
	-1, 146,
	1, 1228,
	561, 1228,
	-2, 0,
	-1, 147,
	1, 1228,
	484, 1228,
	561, 1228,
	-2, 0,
	-1, 176,
	146, 1327,
	164, 1327,
	177, 1327,
	230, 1327,
	263, 1327,
	327, 1327,
	337, 1327,
	501, 1327,
	-2, 1302,
	-1, 214,
	4, 1366,
	5, 1366,
	6, 1366,
	7, 1366,
	8, 1366,
	9, 1366,
	10, 1366,
	21, 1366,
	22, 1366,
	23, 1366,
	24, 1366,
	25, 1366,
	26, 1366,
	27, 1366,
	29, 1366,
	30, 1366,
	36, 1366,
	37, 1366,
	41, 1366,
	42, 1366,
	43, 1366,
	44, 1366,
	45, 1366,
	46, 1366,
	47, 1366,
	48, 1366,
	49, 1366,
	50, 1366,
	52, 1366,
	53, 1366,
	54, 1366,
	55, 1366,
	57, 1366,
	58, 1366,
	59, 1366,
	60, 1366,
	61, 1366,
	62, 1366,
	63, 1366,
	64, 1366,
	65, 1366,
	66, 1366,
	67, 1366,
	68, 1366,
	69, 1366,
	70, 1366,
	72, 1366,
	73, 1366,
	74, 1366,
	76, 1366,
	78, 1366,
	79, 1366,
	80, 1366,
	81, 1366,
	82, 1366,
	83, 1366,
	84, 1366,
	87, 1366,
	88, 1366,
	89, 1366,
	90, 1366,
	91, 1366,
	93, 1366,
	95, 1366,
	96, 1366,
	97, 1366,
	98, 1366,
	99, 1366,
	100, 1366,
	102, 1366,
	103, 1366,
	104, 1366,
	105, 1366,
	106, 1366,
	107, 1366,
	108, 1366,
	109, 1366,
	110, 1366,
	111, 1366,
	112, 1366,
	113, 1366,
	114, 1366,
	115, 1366,
	116, 1366,
	117, 1366,
	118, 1366,
	119, 1366,
	120, 1366,
	121, 1366,
	122, 1366,
	123, 1366,
	124, 1366,
	125, 1366,
	126, 1366,
	128, 1366,
	129, 1366,
	131, 1366,
	132, 1366,
	133, 1366,
	136, 1366,
	137, 1366,
	138, 1366,
	140, 1366,
	141, 1366,
	143, 1366,
	144, 1366,
	145, 1366,
	147, 1366,
	148, 1366,
	149, 1366,
	150, 1366,
	151, 1366,
	152, 1366,
	153, 1366,
	154, 1366,
	155, 1366,
	156, 1366,
	157, 1366,
	158, 1366,
	159, 1366,
	160, 1366,
	161, 1366,
	162, 1366,
	163, 1366,
	169, 1366,
	170, 1366,
	171, 1366,
	172, 1366,
	176, 1366,
	178, 1366,
	181, 1366,
	182, 1366,
	183, 1366,
	184, 1366,
	185, 1366,
	186, 1366,
	187, 1366,
	188, 1366,
	189, 1366,
	190, 1366,
	191, 1366,
	192, 1366,
	193, 1366,
	195, 1366,
	196, 1366,
	198, 1366,
	199, 1366,
	201, 1366,
	202, 1366,
	203, 1366,
	204, 1366,
	205, 1366,
	206, 1366,
	207, 1366,
	208, 1366,
	209, 1366,
	210, 1366,
	211, 1366,
	212, 1366,
	214, 1366,
	215, 1366,
	216, 1366,
	217, 1366,
	221, 1366,
	222, 1366,
	223, 1366,
	224, 1366,
	226, 1366,
	227, 1366,
	228, 1366,
	229, 1366,
	231, 1366,
	233, 1366,
	234, 1366,
	235, 1366,
	236, 1366,
	237, 1366,
	238, 1366,
	239, 1366,
	240, 1366,
	241, 1366,
	242, 1366,
	246, 1366,
	247, 1366,
	248, 1366,
	249, 1366,
	250, 1366,
	251, 1366,
	253, 1366,
	254, 1366,
	255, 1366,
	257, 1366,
	258, 1366,
	259, 1366,
	260, 1366,
	261, 1366,
	262, 1366,
	264, 1366,
	268, 1366,
	269, 1366,
	270, 1366,
	271, 1366,
	272, 1366,
	273, 1366,
	274, 1366,
	275, 1366,
	277, 1366,
	278, 1366,
	279, 1366,
	280, 1366,
	281, 1366,
	282, 1366,
	283, 1366,
	284, 1366,
	285, 1366,
	286, 1366,
	287, 1366,
	288, 1366,
	289, 1366,
	290, 1366,
	291, 1366,
	292, 1366,
	293, 1366,
	294, 1366,
	295, 1366,
	296, 1366,
	297, 1366,
	298, 1366,
	300, 1366,
	301, 1366,
	302, 1366,
	303, 1366,
	304, 1366,
	305, 1366,
	306, 1366,
	307, 1366,
	308, 1366,
	309, 1366,
	310, 1366,
	311, 1366,
	312, 1366,
	313, 1366,
	314, 1366,
	315, 1366,
	316, 1366,
	317, 1366,
	318, 1366,
	319, 1366,
	320, 1366,
	321, 1366,
	322, 1366,
	323, 1366,
	324, 1366,
	325, 1366,
	326, 1366,
	329, 1366,
	333, 1366,
	334, 1366,
	335, 1366,
	338, 1366,
	339, 1366,
	340, 1366,
	341, 1366,
	342, 1366,
	343, 1366,
	344, 1366,
	345, 1366,
	346, 1366,
	347, 1366,
	348, 1366,
	349, 1366,
	350, 1366,
	351, 1366,
	352, 1366,
	353, 1366,
	354, 1366,
	355, 1366,
	357, 1366,
	358, 1366,
	359, 1366,
	360, 1366,
	361, 1366,
	362, 1366,
	363, 1366,
	364, 1366,
	365, 1366,
	366, 1366,
	367, 1366,
	368, 1366,
	369, 1366,
	370, 1366,
	371, 1366,
	373, 1366,
	375, 1366,
	376, 1366,
	377, 1366,
	378, 1366,
	379, 1366,
	380, 1366,
	381, 1366,
	382, 1366,
	383, 1366,
	384, 1366,
	385, 1366,
	386, 1366,
	388, 1366,
	394, 1366,
	396, 1366,
	397, 1366,
	398, 1366,
	399, 1366,
	400, 1366,
	401, 1366,
	402, 1366,
	403, 1366,
	405, 1366,
	406, 1366,
	407, 1366,
	408, 1366,
	409, 1366,
	410, 1366,
	411, 1366,
	412, 1366,
	413, 1366,
	414, 1366,
	416, 1366,
	417, 1366,
	418, 1366,
	419, 1366,
	420, 1366,
	421, 1366,
	422, 1366,
	423, 1366,
	424, 1366,
	425, 1366,
	426, 1366,
	428, 1366,
	429, 1366,
	430, 1366,
	431, 1366,
	432, 1366,
	433, 1366,
	434, 1366,
	435, 1366,
	436, 1366,
	437, 1366,
	438, 1366,
	439, 1366,
	440, 1366,
	441, 1366,
	442, 1366,
	443, 1366,
	444, 1366,
	445, 1366,
	446, 1366,
	447, 1366,
	449, 1366,
	451, 1366,
	452, 1366,
	453, 1366,
	454, 1366,
	455, 1366,
	456, 1366,
	457, 1366,
	458, 1366,
	459, 1366,
	460, 1366,
	461, 1366,
	462, 1366,
	463, 1366,
	465, 1366,
	466, 1366,
	467, 1366,
	468, 1366,
	470, 1366,
	471, 1366,
	472, 1366,
	473, 1366,
	474, 1366,
	475, 1366,
	476, 1366,
	477, 1366,
	479, 1366,
	480, 1366,
	481, 1366,
	482, 1366,
	483, 1366,
	485, 1366,
	487, 1366,
	488, 1366,
	489, 1366,
	490, 1366,
	491, 1366,
	492, 1366,
	493, 1366,
	494, 1366,
	495, 1366,
	496, 1366,
	497, 1366,
	499, 1366,
	500, 1366,
	502, 1366,
	503, 1366,
	504, 1366,
	505, 1366,
	506, 1366,
	507, 1366,
	508, 1366,
	509, 1366,
	510, 1366,
	511, 1366,
	514, 1366,
	515, 1366,
	516, 1366,
	517, 1366,
	518, 1366,
	519, 1366,
	521, 1366,
	522, 1366,
	523, 1366,
	524, 1366,
	529, 1366,
	530, 1366,
	531, 1366,
	532, 1366,
	533, 1366,
	534, 1366,
	535, 1366,
	542, 1366,
	549, 1366,
	550, 1366,
	551, 1366,
	558, 1366,
	562, 1366,
	-2, 0,
	-1, 672,
	180, 2106,
	484, 2106,
	541, 2106,
	560, 2106,
	-2, 0,
	-1, 673,
	180, 2204,
	484, 2204,
	541, 2204,
	560, 2204,
	-2, 0,
	-1, 674,
	180, 2093,
	484, 2093,
	541, 2093,
	560, 2093,
	-2, 0,
	-1, 676,
	180, 2328,
	484, 2328,
	541, 2328,
	560, 2328,
	-2, 0,
	-1, 678,
	180, 2362,
	484, 2362,
	541, 2362,
	560, 2362,
	-2, 0,
	-1, 685,
	180, 2230,
	484, 2230,
	541, 2230,
	560, 2230,
	-2, 625,
	-1, 717,
	560, 2043,
	563, 2043,
	-2, 873,
	-1, 718,
	560, 2045,
	563, 2045,
	-2, 874,
	-1, 719,
	560, 2044,
	563, 2044,
	-2, 875,
	-1, 720,
	563, 1977,
	-2, 876,
	-1, 742,
	177, 220,
	-2, 0,
	-1, 764,
	43, 2047,
	-2, 0,
	-1, 765,
	521, 1132,
	-2, 938,
	-1, 781,
	4, 1486,
	21, 1486,
	22, 1486,
	23, 1486,
	24, 1486,
	25, 1486,
	26, 1486,
	27, 1486,
	29, 1486,
	30, 1486,
	36, 1486,
	41, 1486,
	42, 1486,
	44, 1486,
	45, 1486,
	46, 1486,
	47, 1486,
	48, 1486,
	49, 1486,
	50, 1486,
	52, 1486,
	53, 1486,
	54, 1486,
	55, 1486,
	57, 1486,
	58, 1486,
	59, 1486,
	60, 1486,
	61, 1486,
	62, 1486,
	63, 1486,
	67, 1486,
	68, 1486,
	69, 1486,
	70, 1486,
	72, 1486,
	73, 1486,
	74, 1486,
	78, 1486,
	79, 1486,
	80, 1486,
	81, 1486,
	82, 1486,
	83, 1486,
	84, 1486,
	87, 1486,
	88, 1486,
	89, 1486,
	90, 1486,
	91, 1486,
	93, 1486,
	95, 1486,
	96, 1486,
	97, 1486,
	98, 1486,
	99, 1486,
	100, 1486,
	102, 1486,
	103, 1486,
	104, 1486,
	106, 1486,
	107, 1486,
	115, 1486,
	116, 1486,
	117, 1486,
	118, 1486,
	120, 1486,
	121, 1486,
	122, 1486,
	124, 1486,
	125, 1486,
	126, 1486,
	128, 1486,
	129, 1486,
	131, 1486,
	132, 1486,
	133, 1486,
	136, 1486,
	137, 1486,
	138, 1486,
	140, 1486,
	141, 1486,
	143, 1486,
	144, 1486,
	145, 1486,
	147, 1486,
	148, 1486,
	149, 1486,
	150, 1486,
	151, 1486,
	152, 1486,
	153, 1486,
	154, 1486,
	155, 1486,
	156, 1486,
	157, 1486,
	158, 1486,
	159, 1486,
	160, 1486,
	161, 1486,
	163, 1486,
	169, 1486,
	170, 1486,
	171, 1486,
	172, 1486,
	176, 1486,
	178, 1486,
	182, 1486,
	183, 1486,
	184, 1486,
	185, 1486,
	186, 1486,
	187, 1486,
	188, 1486,
	189, 1486,
	190, 1486,
	191, 1486,
	192, 1486,
	193, 1486,
	195, 1486,
	196, 1486,
	198, 1486,
	199, 1486,
	201, 1486,
	202, 1486,
	203, 1486,
	204, 1486,
	205, 1486,
	206, 1486,
	207, 1486,
	208, 1486,
	209, 1486,
	211, 1486,
	212, 1486,
	214, 1486,
	215, 1486,
	216, 1486,
	217, 1486,
	221, 1486,
	222, 1486,
	223, 1486,
	224, 1486,
	227, 1486,
	228, 1486,
	229, 1486,
	231, 1486,
	233, 1486,
	234, 1486,
	236, 1486,
	238, 1486,
	239, 1486,
	240, 1486,
	242, 1486,
	246, 1486,
	247, 1486,
	248, 1486,
	249, 1486,
	250, 1486,
	251, 1486,
	253, 1486,
	254, 1486,
	255, 1486,
	257, 1486,
	258, 1486,
	260, 1486,
	261, 1486,
	264, 1486,
	268, 1486,
	269, 1486,
	272, 1486,
	273, 1486,
	274, 1486,
	275, 1486,
	277, 1486,
	278, 1486,
	279, 1486,
	280, 1486,
	281, 1486,
	282, 1486,
	283, 1486,
	284, 1486,
	285, 1486,
	286, 1486,
	287, 1486,
	288, 1486,
	289, 1486,
	290, 1486,
	291, 1486,
	292, 1486,
	293, 1486,
	294, 1486,
	295, 1486,
	296, 1486,
	297, 1486,
	298, 1486,
	300, 1486,
	302, 1486,
	303, 1486,
	304, 1486,
	305, 1486,
	306, 1486,
	307, 1486,
	308, 1486,
	309, 1486,
	310, 1486,
	311, 1486,
	312, 1486,
	313, 1486,
	315, 1486,
	317, 1486,
	319, 1486,
	320, 1486,
	322, 1486,
	323, 1486,
	324, 1486,
	325, 1486,
	326, 1486,
	329, 1486,
	333, 1486,
	334, 1486,
	335, 1486,
	338, 1486,
	339, 1486,
	340, 1486,
	342, 1486,
	344, 1486,
	345, 1486,
	346, 1486,
	347, 1486,
	348, 1486,
	349, 1486,
	350, 1486,
	351, 1486,
	352, 1486,
	353, 1486,
	354, 1486,
	355, 1486,
	357, 1486,
	358, 1486,
	359, 1486,
	360, 1486,
	361, 1486,
	362, 1486,
	363, 1486,
	364, 1486,
	365, 1486,
	366, 1486,
	367, 1486,
	368, 1486,
	369, 1486,
	370, 1486,
	371, 1486,
	373, 1486,
	375, 1486,
	376, 1486,
	377, 1486,
	378, 1486,
	379, 1486,
	380, 1486,
	381, 1486,
	382, 1486,
	383, 1486,
	384, 1486,
	385, 1486,
	386, 1486,
	388, 1486,
	394, 1486,
	396, 1486,
	397, 1486,
	398, 1486,
	399, 1486,
	400, 1486,
	401, 1486,
	402, 1486,
	403, 1486,
	405, 1486,
	406, 1486,
	407, 1486,
	409, 1486,
	410, 1486,
	411, 1486,
	412, 1486,
	413, 1486,
	414, 1486,
	416, 1486,
	417, 1486,
	418, 1486,
	419, 1486,
	420, 1486,
	421, 1486,
	422, 1486,
	423, 1486,
	424, 1486,
	425, 1486,
	426, 1486,
	428, 1486,
	429, 1486,
	430, 1486,
	431, 1486,
	432, 1486,
	433, 1486,
	435, 1486,
	436, 1486,
	437, 1486,
	438, 1486,
	439, 1486,
	441, 1486,
	442, 1486,
	443, 1486,
	444, 1486,
	445, 1486,
	446, 1486,
	447, 1486,
	449, 1486,
	451, 1486,
	452, 1486,
	453, 1486,
	454, 1486,
	455, 1486,
	456, 1486,
	457, 1486,
	458, 1486,
	459, 1486,
	460, 1486,
	461, 1486,
	462, 1486,
	463, 1486,
	465, 1486,
	466, 1486,
	468, 1486,
	470, 1486,
	471, 1486,
	472, 1486,
	473, 1486,
	474, 1486,
	475, 1486,
	476, 1486,
	477, 1486,
	479, 1486,
	480, 1486,
	481, 1486,
	482, 1486,
	483, 1486,
	485, 1486,
	487, 1486,
	488, 1486,
	489, 1486,
	490, 1486,
	491, 1486,
	492, 1486,
	494, 1486,
	495, 1486,
	496, 1486,
	497, 1486,
	499, 1486,
	500, 1486,
	503, 1486,
	504, 1486,
	505, 1486,
	506, 1486,
	507, 1486,
	508, 1486,
	509, 1486,
	511, 1486,
	514, 1486,
	515, 1486,
	516, 1486,
	517, 1486,
	518, 1486,
	519, 1486,
	521, 1486,
	522, 1486,
	523, 1486,
	524, 1486,
	529, 1486,
	530, 1486,
	531, 1486,
	532, 1486,
	533, 1486,
	534, 1486,
	-2, 0,
	-1, 806,
	4, 1153,
	21, 1153,
	22, 1153,
	23, 1153,
	24, 1153,
	25, 1153,
	26, 1153,
	27, 1153,
	29, 1153,
	30, 1153,
	36, 1153,
	41, 1153,
	42, 1153,
	44, 1153,
	45, 1153,
	46, 1153,
	47, 1153,
	48, 1153,
	49, 1153,
	50, 1153,
	52, 1153,
	53, 1153,
	54, 1153,
	55, 1153,
	57, 1153,
	58, 1153,
	59, 1153,
	60, 1153,
	61, 1153,
	62, 1153,
	63, 1153,
	67, 1153,
	68, 1153,
	69, 1153,
	70, 1153,
	72, 1153,
	73, 1153,
	74, 1153,
	78, 1153,
	79, 1153,
	80, 1153,
	81, 1153,
	82, 1153,
	83, 1153,
	84, 1153,
	87, 1153,
	88, 1153,
	89, 1153,
	90, 1153,
	91, 1153,
	93, 1153,
	95, 1153,
	96, 1153,
	97, 1153,
	98, 1153,
	99, 1153,
	100, 1153,
	102, 1153,
	103, 1153,
	104, 1153,
	106, 1153,
	107, 1153,
	115, 1153,
	116, 1153,
	117, 1153,
	118, 1153,
	120, 1153,
	121, 1153,
	122, 1153,
	124, 1153,
	125, 1153,
	126, 1153,
	128, 1153,
	129, 1153,
	131, 1153,
	132, 1153,
	133, 1153,
	136, 1153,
	137, 1153,
	138, 1153,
	140, 1153,
	141, 1153,
	143, 1153,
	144, 1153,
	145, 1153,
	147, 1153,
	148, 1153,
	149, 1153,
	150, 1153,
	151, 1153,
	152, 1153,
	153, 1153,
	154, 1153,
	155, 1153,
	156, 1153,
	157, 1153,
	158, 1153,
	159, 1153,
	160, 1153,
	161, 1153,
	163, 1153,
	169, 1153,
	170, 1153,
	171, 1153,
	172, 1153,
	176, 1153,
	178, 1153,
	182, 1153,
	183, 1153,
	184, 1153,
	185, 1153,
	186, 1153,
	187, 1153,
	188, 1153,
	189, 1153,
	190, 1153,
	191, 1153,
	192, 1153,
	193, 1153,
	195, 1153,
	196, 1153,
	198, 1153,
	199, 1153,
	201, 1153,
	202, 1153,
	203, 1153,
	204, 1153,
	205, 1153,
	206, 1153,
	207, 1153,
	208, 1153,
	209, 1153,
	211, 1153,
	212, 1153,
	214, 1153,
	215, 1153,
	216, 1153,
	217, 1153,
	221, 1153,
	222, 1153,
	223, 1153,
	224, 1153,
	227, 1153,
	228, 1153,
	229, 1153,
	231, 1153,
	233, 1153,
	234, 1153,
	236, 1153,
	238, 1153,
	239, 1153,
	240, 1153,
	242, 1153,
	246, 1153,
	247, 1153,
	248, 1153,
	249, 1153,
	250, 1153,
	251, 1153,
	253, 1153,
	254, 1153,
	255, 1153,
	257, 1153,
	258, 1153,
	260, 1153,
	261, 1153,
	264, 1153,
	268, 1153,
	269, 1153,
	272, 1153,
	273, 1153,
	274, 1153,
	275, 1153,
	277, 1153,
	278, 1153,
	279, 1153,
	280, 1153,
	281, 1153,
	282, 1153,
	283, 1153,
	284, 1153,
	285, 1153,
	286, 1153,
	287, 1153,
	288, 1153,
	289, 1153,
	290, 1153,
	291, 1153,
	292, 1153,
	293, 1153,
	294, 1153,
	295, 1153,
	296, 1153,
	297, 1153,
	298, 1153,
	300, 1153,
	302, 1153,
	303, 1153,
	304, 1153,
	305, 1153,
	306, 1153,
	307, 1153,
	308, 1153,
	309, 1153,
	310, 1153,
	311, 1153,
	312, 1153,
	313, 1153,
	315, 1153,
	317, 1153,
	319, 1153,
	320, 1153,
	322, 1153,
	323, 1153,
	324, 1153,
	325, 1153,
	326, 1153,
	329, 1153,
	333, 1153,
	334, 1153,
	335, 1153,
	338, 1153,
	339, 1153,
	340, 1153,
	342, 1153,
	344, 1153,
	345, 1153,
	346, 1153,
	347, 1153,
	348, 1153,
	349, 1153,
	350, 1153,
	351, 1153,
	352, 1153,
	353, 1153,
	354, 1153,
	355, 1153,
	357, 1153,
	358, 1153,
	359, 1153,
	360, 1153,
	361, 1153,
	362, 1153,
	363, 1153,
	364, 1153,
	365, 1153,
	366, 1153,
	367, 1153,
	368, 1153,
	369, 1153,
	370, 1153,
	371, 1153,
	373, 1153,
	375, 1153,
	376, 1153,
	377, 1153,
	378, 1153,
	379, 1153,
	380, 1153,
	381, 1153,
	382, 1153,
	383, 1153,
	384, 1153,
	385, 1153,
	386, 1153,
	388, 1153,
	394, 1153,
	396, 1153,
	397, 1153,
	398, 1153,
	399, 1153,
	400, 1153,
	401, 1153,
	402, 1153,
	403, 1153,
	405, 1153,
	406, 1153,
	407, 1153,
	409, 1153,
	410, 1153,
	411, 1153,
	412, 1153,
	413, 1153,
	414, 1153,
	416, 1153,
	417, 1153,
	418, 1153,
	419, 1153,
	420, 1153,
	421, 1153,
	422, 1153,
	423, 1153,
	424, 1153,
	425, 1153,
	426, 1153,
	428, 1153,
	429, 1153,
	430, 1153,
	431, 1153,
	432, 1153,
	433, 1153,
	435, 1153,
	436, 1153,
	437, 1153,
	438, 1153,
	439, 1153,
	441, 1153,
	442, 1153,
	443, 1153,
	444, 1153,
	445, 1153,
	446, 1153,
	447, 1153,
	449, 1153,
	451, 1153,
	452, 1153,
	453, 1153,
	454, 1153,
	455, 1153,
	456, 1153,
	457, 1153,
	458, 1153,
	459, 1153,
	460, 1153,
	461, 1153,
	462, 1153,
	463, 1153,
	465, 1153,
	466, 1153,
	468, 1153,
	470, 1153,
	471, 1153,
	472, 1153,
	473, 1153,
	474, 1153,
	475, 1153,
	476, 1153,
	477, 1153,
	479, 1153,
	480, 1153,
	481, 1153,
	482, 1153,
	483, 1153,
	485, 1153,
	487, 1153,
	488, 1153,
	489, 1153,
	490, 1153,
	491, 1153,
	492, 1153,
	494, 1153,
	495, 1153,
	496, 1153,
	497, 1153,
	499, 1153,
	500, 1153,
	503, 1153,
	504, 1153,
	505, 1153,
	506, 1153,
	507, 1153,
	508, 1153,
	509, 1153,
	511, 1153,
	514, 1153,
	515, 1153,
	516, 1153,
	517, 1153,
	518, 1153,
	519, 1153,
	521, 1153,
	522, 1153,
	523, 1153,
	524, 1153,
	529, 1153,
	530, 1153,
	531, 1153,
	532, 1153,
	533, 1153,
	534, 1153,
	-2, 0,
	-1, 887,
	377, 785,
	433, 785,
	489, 785,
	-2, 0,
	-1, 888,
	377, 784,
	433, 784,
	489, 784,
	-2, 726,
	-1, 892,
	1, 829,
	557, 829,
	559, 829,
	561, 829,
	-2, 0,
	-1, 893,
	1, 761,
	557, 761,
	559, 761,
	561, 761,
	-2, 0,
	-1, 894,
	1, 763,
	557, 763,
	559, 763,
	561, 763,
	-2, 0,
	-1, 895,
	1, 872,
	177, 872,
	557, 872,
	559, 872,
	561, 872,
	-2, 0,
	-1, 903,
	1, 788,
	557, 788,
	559, 788,
	561, 788,
	-2, 0,
	-1, 909,
	1, 829,
	557, 829,
	559, 829,
	561, 829,
	-2, 0,
	-1, 910,
	1, 831,
	557, 831,
	559, 831,
	561, 831,
	-2, 0,
	-1, 911,
	1, 834,
	557, 834,
	559, 834,
	561, 834,
	-2, 0,
	-1, 917,
	1, 851,
	557, 851,
	559, 851,
	561, 851,
	-2, 0,
	-1, 918,
	1, 853,
	557, 853,
	559, 853,
	561, 853,
	-2, 0,
	-1, 967,
	164, 1368,
	177, 1368,
	263, 1368,
	327, 1368,
	-2, 1306,
	-1, 982,
	164, 1367,
	177, 1367,
	263, 1367,
	327, 1367,
	-2, 1303,
	-1, 1008,
	560, 2042,
	-2, 633,
	-1, 1036,
	5, 2034,
	558, 2032,
	-2, 2023,
	-1, 1044,
	5, 2055,
	558, 2052,
	-2, 2043,
	-1, 1045,
	5, 2056,
	558, 2053,
	-2, 2044,
	-1, 1053,
	560, 2040,
	-2, 2022,
	-1, 1054,
	558, 2444,
	-2, 2041,
	-1, 1077,
	558, 2443,
	-2, 2057,
	-1, 1078,
	5, 1561,
	-2, 2414,
	-1, 1079,
	5, 1562,
	-2, 2415,
	-1, 1080,
	5, 1563,
	-2, 2429,
	-1, 1081,
	5, 1564,
	-2, 2393,
	-1, 1082,
	5, 1565,
	-2, 2427,
	-1, 1083,
	5, 1573,
	-2, 2406,
	-1, 1084,
	5, 1560,
	-2, 2402,
	-1, 1085,
	5, 1560,
	-2, 2401,
	-1, 1086,
	5, 1560,
	-2, 2420,
	-1, 1087,
	5, 1571,
	-2, 2395,
	-1, 1088,
	5, 1576,
	-2, 2394,
	-1, 1089,
	5, 1578,
	-2, 2439,
	-1, 1092,
	5, 1600,
	-2, 2432,
	-1, 1093,
	5, 1592,
	-2, 2433,
	-1, 1094,
	5, 1600,
	-2, 2434,
	-1, 1095,
	5, 1596,
	-2, 2435,
	-1, 1096,
	5, 1546,
	-2, 2407,
	-1, 1097,
	5, 1547,
	-2, 2408,
	-1, 1098,
	5, 1548,
	-2, 2396,
	-1, 1126,
	5, 1583,
	-2, 2440,
	-1, 1127,
	5, 1584,
	-2, 2430,
	-1, 1128,
	5, 1585,
	522, 1585,
	-2, 2397,
	-1, 1129,
	5, 1586,
	522, 1586,
	-2, 2398,
	-1, 1166,
	558, 2052,
	-2, 2043,
	-1, 1167,
	558, 2053,
	-2, 2044,
	-1, 1198,
	180, 2362,
	484, 2362,
	541, 2362,
	560, 2362,
	-2, 0,
	-1, 1201,
	1, 611,
	561, 611,
	-2, 1236,
	-1, 1330,
	396, 2018,
	435, 2018,
	551, 2018,
	-2, 2015,
	-1, 1342,
	562, 2018,
	-2, 2019,
	-1, 1349,
	1, 1129,
	557, 1129,
	559, 1129,
	561, 1129,
	-2, 1355,
	-1, 1404,
	384, 937,
	521, 937,
	-2, 344,
	-1, 1423,
	43, 2046,
	-2, 2016,
	-1, 1428,
	1, 1129,
	557, 1129,
	559, 1129,
	561, 1129,
	-2, 1355,
	-1, 1435,
	4, 1153,
	21, 1153,
	22, 1153,
	23, 1153,
	24, 1153,
	25, 1153,
	26, 1153,
	27, 1153,
	29, 1153,
	30, 1153,
	36, 1153,
	41, 1153,
	42, 1153,
	44, 1153,
	45, 1153,
	46, 1153,
	47, 1153,
	48, 1153,
	49, 1153,
	50, 1153,
	52, 1153,
	53, 1153,
	54, 1153,
	55, 1153,
	57, 1153,
	58, 1153,
	59, 1153,
	60, 1153,
	61, 1153,
	62, 1153,
	63, 1153,
	67, 1153,
	68, 1153,
	69, 1153,
	70, 1153,
	72, 1153,
	73, 1153,
	74, 1153,
	78, 1153,
	79, 1153,
	80, 1153,
	81, 1153,
	82, 1153,
	83, 1153,
	84, 1153,
	87, 1153,
	88, 1153,
	89, 1153,
	90, 1153,
	91, 1153,
	93, 1153,
	95, 1153,
	96, 1153,
	97, 1153,
	98, 1153,
	99, 1153,
	100, 1153,
	102, 1153,
	103, 1153,
	104, 1153,
	106, 1153,
	107, 1153,
	115, 1153,
	116, 1153,
	117, 1153,
	118, 1153,
	120, 1153,
	121, 1153,
	122, 1153,
	124, 1153,
	125, 1153,
	126, 1153,
	128, 1153,
	129, 1153,
	131, 1153,
	132, 1153,
	133, 1153,
	136, 1153,
	137, 1153,
	138, 1153,
	140, 1153,
	141, 1153,
	143, 1153,
	144, 1153,
	145, 1153,
	147, 1153,
	148, 1153,
	149, 1153,
	150, 1153,
	151, 1153,
	152, 1153,
	153, 1153,
	154, 1153,
	155, 1153,
	156, 1153,
	157, 1153,
	158, 1153,
	159, 1153,
	160, 1153,
	161, 1153,
	169, 1153,
	170, 1153,
	171, 1153,
	172, 1153,
	176, 1153,
	178, 1153,
	182, 1153,
	183, 1153,
	184, 1153,
	185, 1153,
	186, 1153,
	187, 1153,
	188, 1153,
	189, 1153,
	190, 1153,
	191, 1153,
	192, 1153,
	193, 1153,
	195, 1153,
	196, 1153,
	198, 1153,
	199, 1153,
	201, 1153,
	202, 1153,
	203, 1153,
	204, 1153,
	205, 1153,
	206, 1153,
	207, 1153,
	208, 1153,
	209, 1153,
	211, 1153,
	212, 1153,
	214, 1153,
	215, 1153,
	216, 1153,
	217, 1153,
	222, 1153,
	223, 1153,
	224, 1153,
	227, 1153,
	228, 1153,
	229, 1153,
	231, 1153,
	233, 1153,
	234, 1153,
	236, 1153,
	238, 1153,
	239, 1153,
	240, 1153,
	242, 1153,
	246, 1153,
	247, 1153,
	248, 1153,
	249, 1153,
	250, 1153,
	251, 1153,
	253, 1153,
	254, 1153,
	255, 1153,
	257, 1153,
	258, 1153,
	260, 1153,
	261, 1153,
	264, 1153,
	268, 1153,
	269, 1153,
	272, 1153,
	273, 1153,
	274, 1153,
	275, 1153,
	277, 1153,
	278, 1153,
	279, 1153,
	280, 1153,
	281, 1153,
	282, 1153,
	283, 1153,
	284, 1153,
	285, 1153,
	286, 1153,
	287, 1153,
	288, 1153,
	289, 1153,
	290, 1153,
	291, 1153,
	292, 1153,
	293, 1153,
	294, 1153,
	295, 1153,
	296, 1153,
	297, 1153,
	298, 1153,
	300, 1153,
	302, 1153,
	303, 1153,
	304, 1153,
	305, 1153,
	306, 1153,
	307, 1153,
	308, 1153,
	309, 1153,
	310, 1153,
	311, 1153,
	312, 1153,
	313, 1153,
	315, 1153,
	319, 1153,
	320, 1153,
	322, 1153,
	323, 1153,
	324, 1153,
	325, 1153,
	326, 1153,
	329, 1153,
	331, 1153,
	333, 1153,
	334, 1153,
	335, 1153,
	338, 1153,
	339, 1153,
	340, 1153,
	342, 1153,
	344, 1153,
	345, 1153,
	346, 1153,
	347, 1153,
	348, 1153,
	349, 1153,
	350, 1153,
	351, 1153,
	352, 1153,
	353, 1153,
	354, 1153,
	355, 1153,
	357, 1153,
	358, 1153,
	359, 1153,
	360, 1153,
	361, 1153,
	362, 1153,
	363, 1153,
	364, 1153,
	365, 1153,
	366, 1153,
	367, 1153,
	368, 1153,
	369, 1153,
	370, 1153,
	371, 1153,
	373, 1153,
	375, 1153,
	376, 1153,
	377, 1153,
	378, 1153,
	379, 1153,
	380, 1153,
	381, 1153,
	382, 1153,
	383, 1153,
	384, 1153,
	385, 1153,
	386, 1153,
	388, 1153,
	394, 1153,
	396, 1153,
	397, 1153,
	398, 1153,
	399, 1153,
	400, 1153,
	401, 1153,
	402, 1153,
	403, 1153,
	405, 1153,
	406, 1153,
	407, 1153,
	409, 1153,
	410, 1153,
	411, 1153,
	412, 1153,
	413, 1153,
	414, 1153,
	416, 1153,
	417, 1153,
	418, 1153,
	419, 1153,
	420, 1153,
	421, 1153,
	422, 1153,
	423, 1153,
	424, 1153,
	425, 1153,
	426, 1153,
	428, 1153,
	429, 1153,
	430, 1153,
	431, 1153,
	432, 1153,
	433, 1153,
	435, 1153,
	436, 1153,
	437, 1153,
	438, 1153,
	439, 1153,
	441, 1153,
	442, 1153,
	443, 1153,
	444, 1153,
	445, 1153,
	446, 1153,
	447, 1153,
	449, 1153,
	451, 1153,
	452, 1153,
	453, 1153,
	454, 1153,
	455, 1153,
	456, 1153,
	457, 1153,
	458, 1153,
	459, 1153,
	460, 1153,
	461, 1153,
	462, 1153,
	463, 1153,
	465, 1153,
	466, 1153,
	468, 1153,
	470, 1153,
	471, 1153,
	472, 1153,
	473, 1153,
	474, 1153,
	475, 1153,
	476, 1153,
	477, 1153,
	479, 1153,
	480, 1153,
	481, 1153,
	482, 1153,
	483, 1153,
	485, 1153,
	487, 1153,
	488, 1153,
	489, 1153,
	490, 1153,
	491, 1153,
	492, 1153,
	494, 1153,
	495, 1153,
	496, 1153,
	497, 1153,
	499, 1153,
	500, 1153,
	503, 1153,
	504, 1153,
	505, 1153,
	506, 1153,
	507, 1153,
	508, 1153,
	509, 1153,
	511, 1153,
	514, 1153,
	515, 1153,
	516, 1153,
	517, 1153,
	518, 1153,
	519, 1153,
	521, 1153,
	522, 1153,
	523, 1153,
	524, 1153,
	529, 1153,
	530, 1153,
	531, 1153,
	532, 1153,
	533, 1153,
	534, 1153,
	-2, 0,
	-1, 1510,
	1, 484,
	557, 484,
	559, 484,
	561, 484,
	-2, 1326,
	-1, 1513,
	4, 2438,
	11, 2438,
	12, 2438,
	14, 2438,
	15, 2438,
	16, 2438,
	17, 2438,
	18, 2438,
	19, 2438,
	21, 2438,
	22, 2438,
	23, 2438,
	24, 2438,
	25, 2438,
	26, 2438,
	27, 2438,
	29, 2438,
	30, 2438,
	33, 2438,
	34, 2438,
	36, 2438,
	38, 2438,
	41, 2438,
	42, 2438,
	44, 2438,
	45, 2438,
	46, 2438,
	47, 2438,
	48, 2438,
	49, 2438,
	50, 2438,
	52, 2438,
	53, 2438,
	54, 2438,
	55, 2438,
	57, 2438,
	58, 2438,
	59, 2438,
	60, 2438,
	61, 2438,
	62, 2438,
	63, 2438,
	67, 2438,
	68, 2438,
	69, 2438,
	70, 2438,
	72, 2438,
	73, 2438,
	74, 2438,
	75, 2438,
	78, 2438,
	79, 2438,
	80, 2438,
	81, 2438,
	82, 2438,
	83, 2438,
	84, 2438,
	85, 2438,
	87, 2438,
	88, 2438,
	89, 2438,
	90, 2438,
	91, 2438,
	93, 2438,
	94, 2438,
	95, 2438,
	96, 2438,
	97, 2438,
	98, 2438,
	99, 2438,
	100, 2438,
	102, 2438,
	103, 2438,
	104, 2438,
	105, 2438,
	106, 2438,
	107, 2438,
	115, 2438,
	116, 2438,
	117, 2438,
	118, 2438,
	120, 2438,
	121, 2438,
	122, 2438,
	124, 2438,
	125, 2438,
	126, 2438,
	128, 2438,
	129, 2438,
	131, 2438,
	132, 2438,
	133, 2438,
	136, 2438,
	137, 2438,
	138, 2438,
	140, 2438,
	141, 2438,
	143, 2438,
	144, 2438,
	145, 2438,
	147, 2438,
	148, 2438,
	149, 2438,
	150, 2438,
	151, 2438,
	152, 2438,
	153, 2438,
	154, 2438,
	155, 2438,
	156, 2438,
	157, 2438,
	158, 2438,
	159, 2438,
	160, 2438,
	161, 2438,
	165, 2438,
	166, 2438,
	167, 2438,
	168, 2438,
	169, 2438,
	170, 2438,
	171, 2438,
	172, 2438,
	175, 2438,
	176, 2438,
	178, 2438,
	181, 2438,
	182, 2438,
	183, 2438,
	184, 2438,
	185, 2438,
	186, 2438,
	187, 2438,
	188, 2438,
	189, 2438,
	190, 2438,
	191, 2438,
	192, 2438,
	193, 2438,
	195, 2438,
	196, 2438,
	198, 2438,
	199, 2438,
	201, 2438,
	202, 2438,
	203, 2438,
	204, 2438,
	205, 2438,
	206, 2438,
	207, 2438,
	208, 2438,
	209, 2438,
	210, 2438,
	211, 2438,
	212, 2438,
	213, 2438,
	214, 2438,
	215, 2438,
	216, 2438,
	217, 2438,
	219, 2438,
	220, 2438,
	222, 2438,
	223, 2438,
	224, 2438,
	226, 2438,
	227, 2438,
	228, 2438,
	229, 2438,
	231, 2438,
	233, 2438,
	234, 2438,
	235, 2438,
	236, 2438,
	237, 2438,
	238, 2438,
	239, 2438,
	240, 2438,
	241, 2438,
	242, 2438,
	244, 2438,
	245, 2438,
	246, 2438,
	247, 2438,
	248, 2438,
	249, 2438,
	250, 2438,
	251, 2438,
	253, 2438,
	254, 2438,
	255, 2438,
	257, 2438,
	258, 2438,
	259, 2438,
	260, 2438,
	261, 2438,
	262, 2438,
	264, 2438,
	268, 2438,
	269, 2438,
	272, 2438,
	273, 2438,
	274, 2438,
	275, 2438,
	276, 2438,
	277, 2438,
	278, 2438,
	279, 2438,
	280, 2438,
	281, 2438,
	282, 2438,
	283, 2438,
	284, 2438,
	285, 2438,
	286, 2438,
	287, 2438,
	288, 2438,
	289, 2438,
	290, 2438,
	291, 2438,
	292, 2438,
	293, 2438,
	294, 2438,
	295, 2438,
	296, 2438,
	297, 2438,
	298, 2438,
	300, 2438,
	301, 2438,
	302, 2438,
	303, 2438,
	304, 2438,
	305, 2438,
	306, 2438,
	307, 2438,
	308, 2438,
	309, 2438,
	310, 2438,
	311, 2438,
	312, 2438,
	313, 2438,
	315, 2438,
	318, 2438,
	319, 2438,
	320, 2438,
	322, 2438,
	323, 2438,
	324, 2438,
	325, 2438,
	326, 2438,
	329, 2438,
	333, 2438,
	334, 2438,
	335, 2438,
	336, 2438,
	338, 2438,
	339, 2438,
	340, 2438,
	342, 2438,
	344, 2438,
	345, 2438,
	346, 2438,
	347, 2438,
	348, 2438,
	349, 2438,
	350, 2438,
	351, 2438,
	352, 2438,
	353, 2438,
	354, 2438,
	355, 2438,
	357, 2438,
	358, 2438,
	359, 2438,
	360, 2438,
	361, 2438,
	362, 2438,
	363, 2438,
	364, 2438,
	365, 2438,
	366, 2438,
	367, 2438,
	368, 2438,
	369, 2438,
	370, 2438,
	371, 2438,
	373, 2438,
	375, 2438,
	376, 2438,
	377, 2438,
	378, 2438,
	379, 2438,
	380, 2438,
	381, 2438,
	382, 2438,
	383, 2438,
	384, 2438,
	385, 2438,
	386, 2438,
	388, 2438,
	394, 2438,
	395, 2438,
	396, 2438,
	397, 2438,
	398, 2438,
	399, 2438,
	400, 2438,
	401, 2438,
	402, 2438,
	403, 2438,
	405, 2438,
	406, 2438,
	407, 2438,
	408, 2438,
	409, 2438,
	410, 2438,
	411, 2438,
	412, 2438,
	413, 2438,
	414, 2438,
	415, 2438,
	416, 2438,
	417, 2438,
	418, 2438,
	419, 2438,
	420, 2438,
	421, 2438,
	422, 2438,
	423, 2438,
	424, 2438,
	425, 2438,
	426, 2438,
	428, 2438,
	429, 2438,
	430, 2438,
	431, 2438,
	432, 2438,
	433, 2438,
	435, 2438,
	436, 2438,
	437, 2438,
	438, 2438,
	439, 2438,
	440, 2438,
	441, 2438,
	442, 2438,
	443, 2438,
	444, 2438,
	445, 2438,
	446, 2438,
	447, 2438,
	449, 2438,
	451, 2438,
	452, 2438,
	453, 2438,
	454, 2438,
	455, 2438,
	456, 2438,
	457, 2438,
	458, 2438,
	459, 2438,
	460, 2438,
	461, 2438,
	462, 2438,
	463, 2438,
	465, 2438,
	466, 2438,
	468, 2438,
	470, 2438,
	471, 2438,
	472, 2438,
	473, 2438,
	474, 2438,
	475, 2438,
	476, 2438,
	477, 2438,
	479, 2438,
	480, 2438,
	481, 2438,
	482, 2438,
	483, 2438,
	485, 2438,
	487, 2438,
	488, 2438,
	489, 2438,
	490, 2438,
	491, 2438,
	492, 2438,
	494, 2438,
	495, 2438,
	496, 2438,
	497, 2438,
	499, 2438,
	500, 2438,
	503, 2438,
	504, 2438,
	505, 2438,
	506, 2438,
	507, 2438,
	508, 2438,
	509, 2438,
	511, 2438,
	514, 2438,
	515, 2438,
	516, 2438,
	517, 2438,
	518, 2438,
	519, 2438,
	521, 2438,
	522, 2438,
	523, 2438,
	524, 2438,
	529, 2438,
	530, 2438,
	531, 2438,
	532, 2438,
	533, 2438,
	534, 2438,
	535, 2438,
	536, 2438,
	539, 2438,
	540, 2438,
	541, 2438,
	542, 2438,
	543, 2438,
	544, 2438,
	546, 2438,
	547, 2438,
	548, 2438,
	549, 2438,
	550, 2438,
	551, 2438,
	552, 2438,
	553, 2438,
	554, 2438,
	556, 2438,
	559, 2438,
	560, 2438,
	562, 2438,
	563, 2438,
	-2, 0,
	-1, 1518,
	180, 2328,
	484, 2328,
	541, 2328,
	560, 2328,
	-2, 0,
	-1, 1567,
	377, 785,
	433, 785,
	489, 785,
	-2, 0,
	-1, 1593,
	1, 780,
	557, 780,
	559, 780,
	561, 780,
	-2, 0,
	-1, 1594,
	1, 816,
	557, 816,
	559, 816,
	561, 816,
	-2, 0,
	-1, 1595,
	1, 824,
	557, 824,
	559, 824,
	561, 824,
	-2, 0,
	-1, 1596,
	1, 787,
	557, 787,
	559, 787,
	561, 787,
	-2, 0,
	-1, 1598,
	1, 791,
	557, 791,
	559, 791,
	561, 791,
	-2, 0,
	-1, 1604,
	1, 798,
	557, 798,
	559, 798,
	561, 798,
	-2, 0,
	-1, 1632,
	1, 2384,
	557, 2384,
	559, 2384,
	560, 2384,
	561, 2384,
	-2, 849,
	-1, 1633,
	1, 2325,
	557, 2325,
	559, 2325,
	560, 2325,
	561, 2325,
	-2, 850,
	-1, 1648,
	1, 1231,
	561, 1231,
	-2, 1236,
	-1, 1651,
	164, 1367,
	177, 1367,
	263, 1367,
	327, 1367,
	-2, 1307,
	-1, 1745,
	146, 1328,
	164, 1328,
	177, 1328,
	230, 1328,
	263, 1328,
	327, 1328,
	337, 1328,
	501, 1328,
	-2, 1761,
	-1, 1805,
	559, 1911,
	-2, 0,
	-1, 1840,
	146, 1328,
	164, 1328,
	177, 1328,
	230, 1328,
	263, 1328,
	327, 1328,
	337, 1328,
	501, 1328,
	-2, 1448,
	-1, 1889,
	558, 1588,
	-2, 1576,
	-1, 1932,
	1, 613,
	561, 613,
	-2, 1236,
	-1, 2044,
	213, 221,
	-2, 2051,
	-1, 2045,
	213, 222,
	-2, 264,
	-1, 2175,
	1, 782,
	557, 782,
	559, 782,
	561, 782,
	-2, 0,
	-1, 2176,
	1, 818,
	557, 818,
	559, 818,
	561, 818,
	-2, 0,
	-1, 2177,
	1, 826,
	557, 826,
	559, 826,
	561, 826,
	-2, 0,
	-1, 2209,
	1, 800,
	557, 800,
	559, 800,
	561, 800,
	-2, 0,
	-1, 2255,
	413, 1394,
	414, 1394,
	-2, 1621,
	-1, 2286,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1641,
	-1, 2287,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1642,
	-1, 2288,
	94, 0,
	244, 0,
	245, 0,
	543, 0,
	544, 0,
	-2, 1643,
	-1, 2289,
	94, 0,
	244, 0,
	245, 0,
	543, 0,
	544, 0,
	-2, 1644,
	-1, 2290,
	94, 0,
	244, 0,
	245, 0,
	543, 0,
	544, 0,
	-2, 1645,
	-1, 2291,
	94, 0,
	244, 0,
	245, 0,
	543, 0,
	544, 0,
	-2, 1646,
	-1, 2292,
	94, 0,
	244, 0,
	245, 0,
	543, 0,
	544, 0,
	-2, 1647,
	-1, 2293,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1648,
	-1, 2305,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1660,
	-1, 2306,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1661,
	-1, 2307,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1662,
	-1, 2310,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1667,
	-1, 2316,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1671,
	-1, 2318,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1679,
	-1, 2319,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1680,
	-1, 2320,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1681,
	-1, 2321,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1682,
	-1, 2457,
	5, 2055,
	180, 1922,
	558, 2052,
	-2, 2043,
	-1, 2458,
	180, 1923,
	-2, 2389,
	-1, 2459,
	180, 1924,
	-2, 2229,
	-1, 2460,
	180, 1925,
	-2, 2122,
	-1, 2461,
	180, 1926,
	-2, 2172,
	-1, 2462,
	180, 1927,
	-2, 2214,
	-1, 2463,
	180, 1928,
	-2, 2323,
	-1, 2464,
	180, 1929,
	-2, 1744,
	-1, 2533,
	1, 1449,
	2, 1449,
	105, 1449,
	146, 1449,
	164, 1449,
	177, 1449,
	181, 1449,
	197, 1449,
	200, 1449,
	226, 1449,
	230, 1449,
	241, 1449,
	259, 1449,
	263, 1449,
	301, 1449,
	327, 1449,
	331, 1449,
	337, 1449,
	404, 1449,
	408, 1449,
	501, 1449,
	512, 1449,
	526, 1449,
	527, 1449,
	528, 1449,
	537, 1449,
	557, 1449,
	559, 1449,
	561, 1449,
	563, 1449,
	-2, 1448,
	-1, 2546,
	558, 2024,
	-2, 2038,
	-1, 2548,
	1, 280,
	-2, 1355,
	-1, 2573,
	558, 1587,
	-2, 1577,
	-1, 2712,
	1, 1129,
	557, 1129,
	559, 1129,
	561, 1129,
	-2, 1355,
	-1, 2888,
	332, 1397,
	-2, 2428,
	-1, 2889,
	332, 1398,
	-2, 2309,
	-1, 2893,
	413, 1988,
	414, 1988,
	-2, 1742,
	-1, 2894,
	413, 1992,
	414, 1992,
	-2, 1743,
	-1, 2895,
	413, 1989,
	414, 1989,
	-2, 1742,
	-1, 2896,
	413, 1993,
	414, 1993,
	-2, 1743,
	-1, 2909,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1669,
	-1, 2910,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1673,
	-1, 2916,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1675,
	-1, 3146,
	1, 610,
	557, 610,
	559, 610,
	561, 610,
	-2, 1236,
	-1, 3278,
	1, 1129,
	557, 1129,
	559, 1129,
	561, 1129,
	-2, 1355,
	-1, 3388,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1677,
	-1, 3395,
	235, 0,
	237, 0,
	318, 0,
	-2, 1696,
	-1, 3462,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1725,
	-1, 3463,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1726,
	-1, 3464,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1727,
	-1, 3468,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1731,
	-1, 3469,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1732,
	-1, 3470,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1733,
	-1, 3516,
	558, 2025,
	-2, 2039,
	-1, 3654,
	560, 2545,
	-2, 1283,
	-1, 3712,
	235, 0,
	237, 0,
	318, 0,
	-2, 1697,
	-1, 3715,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1700,
	-1, 3716,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1702,
	-1, 3928,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1701,
	-1, 3929,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1703,
	-1, 3940,
	235, 0,
	-2, 1734,
	-1, 4092,
	235, 0,
	-2, 1735,
	-1, 4241,
	49, 0,
	210, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 2392,
}

const sqlPrivate = 57344

const sqlLast = 112979

var sqlAct = [...]int{

	249, 2774, 3263, 3972, 2805, 3067, 4114, 4240, 4251, 3852,
	4352, 4215, 3695, 2611, 4199, 3262, 4135, 4181, 3975, 2041,
	4196, 4252, 2144, 3548, 4253, 4301, 4045, 4018, 3960, 4025,
	3427, 4239, 4096, 2650, 3290, 3885, 3880, 2265, 1170, 3917,
	3295, 3834, 4034, 3164, 3646, 3866, 1496, 2153, 3587, 3782,
	4059, 2333, 3248, 1660, 1876, 241, 3890, 983, 3288, 3622,
	3607, 1985, 992, 2128, 3380, 1004, 3258, 3605, 2273, 3549,
	683, 2814, 719, 3343, 2489, 1533, 3945, 1846, 2827, 2266,
	1501, 3345, 2763, 1234, 1369, 2745, 2675, 3518, 2735, 3110,
	2902, 2816, 3073, 1047, 3090, 1352, 719, 1159, 3082, 2115,
	3050, 1327, 2824, 4, 2088, 3751, 3694, 2813, 2807, 2760,
	2775, 2758, 3071, 820, 1500, 991, 167, 38, 2613, 2526,
	3487, 1815, 4097, 2035, 1995, 3049, 2346, 2036, 2886, 1575,
	1753, 2151, 1043, 1791, 1335, 1532, 2126, 1421, 714, 2270,
	2823, 2525, 2689, 1150, 2014, 2030, 243, 1476, 242, 2021,
	2746, 1040, 1971, 103, 2528, 1648, 2375, 1968, 1816, 2486,
	3117, 1924, 2366, 2330, 1958, 2237, 1217, 4019, 1835, 2254,
	2235, 3260, 2507, 1511, 2558, 2768, 2076, 1832, 1497, 1487,
	1045, 1426, 2649, 2602, 720, 1203, 721, 2817, 1332, 1786,
	2557, 2369, 814, 648, 1153, 2497, 1825, 1132, 2347, 2453,
	2515, 1738, 1661, 634, 167, 1662, 1354, 656, 2236, 1877,
	2419, 665, 1604, 2238, 2075, 677, 1090, 1167, 725, 1509,
	728, 2100, 1450, 793, 1364, 765, 2259, 1984, 716, 176,
	2377, 177, 1021, 651, 1038, 43, 42, 1130, 40, 31,
	1667, 1375, 725, 881, 728, 29, 27, 659, 2937, 901,
	1647, 1155, 1675, 1676, 2933, 1708, 1709, 1710, 1718, 1719,
	1720, 3501, 4417, 3502, 2117, 2117, 2506, 70, 2117, 2523,
	3069, 987, 2117, 2117, 1711, 1706, 4407, 1212, 3305, 3140,
	3324, 1149, 1678, 71, 1597, 4397, 1212, 4396, 4369, 2506,
	1724, 2506, 3798, 4367, 4363, 3139, 987, 3798, 2049, 75,
	1368, 4281, 4275, 2152, 4273, 4282, 2506, 3304, 2506, 1147,
	4270, 4267, 3491, 4262, 4271, 4268, 1677, 2049, 4237, 4236,
	3022, 3023, 2049, 2049, 835, 4235, 1697, 4230, 2499, 2137,
	4229, 2137, 988, 4224, 2137, 1694, 4222, 3798, 4194, 81,
	3798, 4175, 3798, 4168, 4167, 2564, 4162, 2506, 2506, 1162,
	3798, 4161, 4155, 4128, 4094, 3798, 2049, 3844, 2564, 3125,
	3324, 4076, 4073, 1133, 1133, 3683, 2049, 4070, 4027, 3992,
	3991, 3798, 4028, 2049, 2049, 3983, 87, 3982, 3951, 2049,
	3930, 3798, 2049, 3909, 2564, 3898, 1186, 2137, 3829, 3324,
	102, 2901, 2506, 2583, 3817, 88, 99, 968, 2506, 967,
	3797, 1675, 1676, 1181, 3798, 2506, 1700, 1701, 1702, 1703,
	3714, 3662, 4176, 3656, 2564, 3340, 1683, 3340, 3620, 977,
	2671, 3511, 3621, 3509, 1706, 3512, 982, 3510, 3494, 3411,
	3407, 1678, 2506, 2049, 2506, 3339, 3331, 3066, 2135, 3340,
	3332, 2506, 3061, 1136, 3060, 1137, 2506, 1134, 2506, 88,
	89, 1715, 1541, 3013, 1725, 2560, 2635, 3014, 2987, 1377,
	1705, 1707, 2988, 2979, 2977, 1677, 2948, 2980, 2506, 2946,
	2506, 4089, 2582, 2830, 4077, 2947, 1721, 2137, 1722, 2803,
	2372, 2137, 1182, 2140, 3028, 1692, 1693, 2802, 2586, 2563,
	2049, 2140, 2506, 2564, 3491, 2555, 2549, 2506, 815, 2506,
	2049, 2505, 2139, 1713, 2498, 2506, 2140, 3879, 3844, 3818,
	2049, 3683, 3332, 2666, 2601, 1989, 1937, 1698, 2116, 2741,
	2132, 2048, 2936, 2683, 214, 70, 1527, 818, 817, 2599,
	1376, 1811, 1363, 3578, 3383, 3361, 1833, 2024, 1577, 3306,
	2542, 71, 2541, 2540, 2539, 2538, 1138, 1545, 1135, 1675,
	1676, 976, 214, 975, 974, 973, 972, 75, 3307, 1723,
	971, 970, 966, 965, 2373, 1683, 216, 964, 963, 1534,
	2866, 2562, 962, 961, 960, 959, 958, 1712, 957, 1678,
	956, 955, 3022, 3023, 954, 3038, 953, 952, 951, 950,
	214, 92, 932, 879, 216, 878, 877, 81, 876, 875,
	874, 1531, 1389, 2118, 2118, 873, 872, 2118, 871, 1705,
	1707, 2118, 2118, 1677, 215, 870, 869, 1508, 1383, 868,
	867, 866, 865, 2771, 864, 208, 214, 1377, 863, 862,
	861, 860, 216, 209, 87, 859, 1704, 858, 175, 95,
	857, 98, 215, 2374, 856, 2371, 855, 854, 102, 853,
	852, 851, 850, 88, 99, 178, 1699, 849, 1368, 2754,
	3767, 3304, 1182, 848, 838, 214, 1698, 837, 216, 833,
	832, 826, 825, 819, 783, 782, 3892, 140, 2135, 741,
	215, 1716, 1045, 178, 740, 739, 1045, 731, 730, 729,
	698, 208, 689, 688, 687, 671, 237, 236, 235, 209,
	234, 1377, 1237, 233, 990, 1377, 1237, 216, 89, 214,
	1357, 2498, 232, 1683, 231, 230, 215, 229, 228, 214,
	227, 178, 226, 225, 3039, 224, 1207, 208, 223, 222,
	221, 140, 142, 220, 1045, 209, 1045, 219, 1045, 218,
	217, 3726, 3528, 1357, 1216, 3505, 3028, 179, 1221, 1675,
	1676, 216, 3341, 3113, 1343, 215, 2959, 178, 2942, 1330,
	3064, 216, 1342, 1345, 2791, 2116, 208, 1357, 2135, 1182,
	1338, 2722, 2132, 2230, 209, 2568, 1714, 2547, 2532, 1678,
	1689, 1690, 1696, 1717, 1695, 1691, 2376, 1688, 1686, 1687,
	1679, 1680, 1681, 1682, 1684, 1685, 178, 1966, 3065, 215,
	3736, 1367, 3022, 3023, 3735, 1699, 1388, 1599, 1794, 215,
	208, 1357, 1045, 1677, 1793, 1432, 1434, 1357, 209, 1836,
	208, 1357, 1382, 1346, 1345, 1345, 1859, 1794, 209, 1045,
	2402, 1045, 2388, 1793, 1201, 1357, 1797, 2147, 4080, 1764,
	178, 1045, 1674, 1045, 1230, 1371, 1324, 1329, 2386, 92,
	178, 1223, 1374, 1169, 1381, 1792, 1387, 3032, 3024, 3025,
	3026, 3027, 3029, 3030, 1345, 4258, 1755, 4238, 3625, 725,
	4142, 728, 3894, 4086, 1424, 3944, 3037, 214, 4078, 1419,
	3022, 3023, 3899, 3878, 3774, 3970, 3749, 1357, 3748, 3022,
	3023, 3742, 1196, 2370, 3741, 2756, 175, 95, 3740, 98,
	3733, 3732, 3730, 3725, 3722, 1045, 3721, 1366, 1045, 1365,
	3619, 3022, 3023, 1683, 3532, 3531, 2146, 3530, 2577, 216,
	3515, 1514, 1516, 214, 3482, 3481, 3480, 214, 3403, 3399,
	1507, 819, 3335, 167, 167, 140, 1688, 1686, 1687, 1679,
	1680, 1681, 1682, 1684, 1685, 3108, 3057, 1525, 3048, 1530,
	3021, 214, 1481, 1484, 3018, 214, 3017, 3015, 1546, 1539,
	1437, 1544, 2986, 2985, 2984, 216, 3028, 215, 2981, 216,
	988, 1235, 214, 2978, 2958, 1336, 2941, 2934, 208, 2804,
	1762, 2533, 2359, 1493, 1207, 1755, 209, 1207, 3576, 1674,
	142, 2091, 1673, 216, 4411, 1146, 1490, 216, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 179, 2056, 4361, 178, 1756,
	4360, 1754, 3626, 215, 216, 4291, 4289, 215, 4280, 1171,
	3429, 1598, 4134, 1512, 208, 1652, 214, 214, 208, 1045,
	4124, 4121, 209, 4120, 2054, 1045, 209, 4119, 4113, 1613,
	3062, 215, 214, 214, 3028, 215, 4106, 4074, 1042, 4058,
	4057, 2336, 208, 3028, 816, 4043, 208, 4040, 2770, 3988,
	209, 3966, 215, 1453, 209, 3942, 3925, 3038, 216, 216,
	3924, 1526, 3906, 208, 2755, 3028, 3905, 1646, 3869, 3845,
	3766, 209, 178, 1540, 216, 216, 178, 1679, 1680, 1681,
	1682, 1684, 1685, 3747, 1747, 3684, 1456, 3626, 1752, 3893,
	3678, 3675, 3566, 178, 1744, 3565, 3552, 3551, 3497, 3022,
	3023, 3485, 3040, 3041, 3042, 3394, 215, 215, 3022, 3023,
	3024, 3025, 3026, 3027, 3029, 3030, 1551, 208, 208, 214,
	2342, 3710, 215, 215, 1742, 209, 209, 3342, 1568, 3325,
	1045, 1045, 1045, 208, 208, 1600, 1045, 3281, 3220, 3193,
	3167, 209, 209, 1167, 3038, 1167, 3166, 178, 178, 3133,
	2963, 2962, 2957, 2925, 2734, 1800, 1799, 1798, 3131, 1795,
	1237, 216, 1813, 178, 178, 1787, 3038, 1785, 1045, 2575,
	2574, 719, 988, 3037, 2544, 1894, 719, 2537, 2504, 1357,
	1649, 2384, 1657, 1858, 1814, 1809, 1045, 1656, 1808, 1807,
	1357, 1806, 1805, 1675, 1676, 1804, 3039, 1803, 4098, 3105,
	1802, 1801, 1782, 1781, 1780, 1779, 1651, 1778, 1045, 215,
	1822, 968, 1653, 967, 1237, 1777, 1670, 1671, 1796, 1776,
	208, 1342, 1775, 1678, 1774, 1773, 1772, 1771, 209, 1867,
	1949, 1948, 1770, 1769, 1957, 1959, 1207, 1843, 1768, 1955,
	1757, 1743, 1869, 1741, 1736, 1195, 1862, 1184, 1177, 1451,
	178, 3872, 1819, 1820, 1929, 1161, 1873, 1677, 2566, 3167,
	1930, 1920, 167, 3028, 1850, 1788, 1789, 3770, 1888, 1349,
	1964, 3718, 3028, 3527, 1925, 1162, 1133, 1162, 3508, 1681,
	1682, 1684, 1685, 3039, 2148, 1935, 3500, 2945, 2535, 3955,
	3772, 3022, 3023, 3526, 1756, 3129, 1739, 1957, 988, 1957,
	3310, 1957, 1392, 1854, 4358, 3039, 3820, 4351, 1218, 1220,
	1455, 3291, 4122, 4030, 1844, 4029, 1865, 725, 1834, 728,
	3897, 3847, 725, 3043, 728, 3846, 1428, 3033, 3031, 3032,
	3024, 3025, 3026, 3027, 3029, 3030, 1213, 3819, 3769, 1841,
	3687, 2983, 3686, 3685, 1932, 3503, 3327, 3326, 2654, 1952,
	4035, 1863, 1357, 1357, 3629, 3564, 1212, 1836, 4081, 1812,
	1928, 1794, 1237, 1212, 3038, 1567, 1219, 1793, 2982, 2907,
	1504, 3196, 1644, 3038, 1766, 2637, 1215, 2401, 4234, 2387,
	1520, 1943, 1853, 1852, 2010, 1851, 1849, 2013, 1977, 1614,
	2018, 1891, 1848, 1847, 1838, 2385, 1989, 2145, 4079, 1870,
	1675, 1676, 1212, 3946, 1917, 1777, 1874, 948, 1576, 1882,
	3026, 3027, 3029, 3030, 2472, 3031, 3032, 3024, 3025, 3026,
	3027, 3029, 3030, 1706, 3265, 2167, 3264, 2042, 2046, 1860,
	1678, 3969, 1960, 1777, 4026, 4278, 4263, 4250, 1950, 3024,
	3025, 3026, 3027, 3029, 3030, 3249, 1559, 1209, 2372, 2828,
	949, 1577, 2037, 3584, 3583, 3569, 3358, 1954, 3144, 996,
	3069, 3431, 2367, 2573, 1677, 4259, 1810, 1790, 1994, 3256,
	2085, 2084, 1480, 2951, 1431, 1360, 1190, 4272, 2680, 4269,
	3300, 2677, 3543, 1967, 4115, 3881, 4193, 4103, 3170, 3559,
	2811, 2767, 3242, 4317, 2039, 1953, 2022, 3375, 3148, 3597,
	725, 2092, 728, 3039, 4318, 4009, 1357, 3808, 1357, 1406,
	1357, 1396, 3039, 2587, 946, 2615, 944, 2081, 2215, 778,
	2175, 1593, 2213, 1763, 4342, 1214, 1357, 1357, 4260, 1361,
	4406, 942, 2373, 1342, 4002, 3994, 940, 1357, 1366, 937,
	1365, 1145, 2086, 2605, 3842, 3593, 3592, 2605, 3150, 1357,
	3586, 1357, 1357, 1357, 1555, 2097, 2017, 3582, 2603, 3580,
	3596, 928, 2603, 3540, 1683, 3539, 3245, 1612, 3124, 1611,
	2956, 2122, 2166, 719, 2124, 2955, 2176, 1594, 2047, 1456,
	2129, 1944, 1210, 2131, 2954, 2953, 2911, 2134, 1407, 2687,
	1211, 3546, 2686, 2682, 2673, 2665, 1989, 2105, 2664, 2663,
	2662, 2641, 2628, 2556, 2317, 2094, 2154, 1650, 1705, 1707,
	2415, 2374, 1220, 2371, 2414, 2275, 2066, 779, 2120, 2068,
	2067, 2107, 1443, 2618, 1442, 2171, 2150, 3034, 3035, 3036,
	2764, 2050, 2177, 1595, 3033, 3031, 3032, 3024, 3025, 3026,
	3027, 3029, 3030, 3033, 3031, 3032, 3024, 3025, 3026, 3027,
	3029, 3030, 3359, 2228, 1045, 986, 1045, 2099, 3923, 988,
	2103, 988, 2155, 1045, 1610, 1698, 1894, 1894, 1237, 1219,
	1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 2247, 1045, 3130, 1045, 1045,
	1045, 1045, 1512, 4343, 1512, 2234, 1453, 646, 2102, 725,
	2102, 728, 1220, 1933, 1196, 2141, 1986, 2142, 2159, 1553,
	1045, 934, 2639, 1045, 1045, 2229, 1685, 1466, 4346, 985,
	2145, 1045, 2224, 641, 2245, 1045, 1212, 1045, 1045, 1441,
	3195, 1440, 2158, 1202, 2376, 1237, 2163, 2922, 1982, 1888,
	1888, 1045, 1045, 1045, 1045, 1414, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 2594, 1961, 1962, 2567, 2245, 1219,
	2332, 1362, 1987, 1988, 2227, 2920, 2548, 2627, 1402, 2332,
	2219, 2341, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 2191, 2243, 1455, 1699, 1045, 1747, 2348, 2349, 2209,
	2869, 2899, 1983, 4370, 2884, 2183, 2617, 1167, 1623, 2658,
	2258, 2348, 2364, 2626, 1237, 1036, 1569, 2104, 4347, 3366,
	2340, 3365, 2863, 1167, 3030, 2376, 2243, 2338, 2651, 2652,
	2651, 2652, 2651, 2652, 2180, 846, 987, 2410, 1213, 1045,
	1237, 2233, 2231, 2246, 2239, 3821, 2232, 1980, 1854, 2367,
	2477, 2370, 3804, 3841, 1548, 3581, 2456, 2456, 2470, 3603,
	2348, 3579, 2174, 2490, 2492, 2271, 2272, 2363, 1213, 2496,
	3568, 4317, 1891, 1891, 3977, 988, 1019, 968, 2226, 2262,
	968, 968, 2263, 2264, 988, 3555, 781, 780, 988, 3244,
	1882, 1882, 1609, 2020, 1643, 776, 3922, 775, 3602, 2512,
	2520, 3420, 3214, 2241, 2872, 1577, 3147, 1345, 1565, 2184,
	2679, 2917, 3210, 2545, 3203, 1843, 2019, 1655, 1427, 2344,
	2681, 1194, 2661, 2898, 1577, 4349, 2244, 2274, 1679, 1680,
	1681, 1682, 1684, 1685, 2918, 2361, 2616, 923, 2923, 1162,
	3567, 3794, 2678, 4355, 2604, 2676, 1133, 1237, 2015, 1209,
	2640, 3209, 2606, 3202, 1345, 1162, 2053, 2052, 1606, 2561,
	2244, 981, 1425, 1972, 1207, 4328, 2534, 4256, 1973, 1549,
	2638, 167, 1987, 1988, 3790, 4334, 988, 1894, 2511, 1209,
	2223, 2519, 2465, 2524, 2481, 4333, 2530, 2531, 3979, 2494,
	938, 2452, 938, 2214, 2242, 2502, 2503, 2212, 2412, 2714,
	984, 1174, 2016, 2413, 2513, 1237, 2416, 938, 2417, 2418,
	2517, 2518, 939, 2584, 2379, 938, 2008, 1841, 1972, 1357,
	2554, 1627, 1796, 1973, 2607, 4373, 3791, 1214, 2242, 2891,
	2892, 2559, 1165, 2871, 1045, 1045, 4306, 1045, 2713, 3700,
	1992, 1172, 1330, 3699, 2376, 3802, 3297, 4387, 1404, 2117,
	924, 3298, 2590, 1824, 1554, 2007, 4116, 1214, 4130, 1342,
	1427, 1357, 2868, 642, 2576, 4172, 3149, 2674, 2592, 2143,
	1888, 1621, 813, 1788, 1789, 696, 2585, 1974, 2580, 1991,
	1465, 1783, 2634, 3127, 1210, 1504, 2156, 3181, 2659, 2579,
	1980, 2569, 1211, 1163, 1976, 2581, 2157, 2034, 2778, 2643,
	4348, 2593, 2588, 1996, 1989, 2630, 2919, 2752, 2165, 2546,
	2168, 2169, 2170, 2011, 1210, 2670, 2921, 2642, 1357, 1357,
	2591, 1357, 1211, 2328, 3297, 2000, 2225, 3610, 3861, 1828,
	2660, 1401, 1974, 1357, 643, 4257, 3608, 2620, 2623, 2738,
	2610, 3696, 3180, 2825, 3935, 1175, 3417, 2033, 1357, 1976,
	2723, 2326, 2870, 2726, 2717, 2728, 1925, 2182, 2719, 2794,
	2833, 2834, 1978, 4327, 2653, 2655, 2656, 2657, 1345, 1345,
	2748, 2840, 2841, 2842, 1831, 725, 644, 728, 645, 694,
	1997, 1161, 3556, 1161, 4353, 4204, 2644, 1045, 935, 1826,
	3803, 4133, 847, 1891, 2913, 3827, 3919, 3184, 2769, 2799,
	2786, 2769, 664, 2331, 1980, 1972, 2790, 1829, 2829, 2314,
	1973, 1882, 3610, 1366, 839, 2720, 2600, 1978, 1735, 3786,
	1342, 3608, 2744, 2800, 3787, 3418, 4305, 4255, 2849, 2732,
	2796, 1045, 2358, 925, 2742, 167, 3978, 1045, 1045, 2025,
	2810, 2780, 2339, 3611, 2032, 4170, 3186, 2785, 1212, 1827,
	3223, 2788, 2851, 2789, 2852, 2853, 2762, 1624, 2961, 2773,
	1342, 1622, 1342, 4284, 2516, 4374, 2781, 2831, 2874, 2179,
	2876, 2835, 4285, 2836, 2529, 3789, 4362, 987, 1212, 3084,
	4171, 2001, 4354, 3433, 3871, 1979, 3690, 2322, 2795, 1980,
	3792, 2846, 1045, 1045, 2801, 2797, 2477, 2173, 1045, 2793,
	2812, 827, 2854, 2860, 2856, 2323, 2858, 2605, 3185, 3523,
	2324, 1045, 1045, 1187, 2329, 4356, 4136, 1045, 1045, 1974,
	3701, 1550, 2621, 1045, 3377, 3918, 2867, 1512, 3611, 4068,
	3606, 2882, 1045, 1045, 1045, 3188, 1976, 3862, 1045, 4254,
	1979, 1581, 1564, 1566, 1980, 2002, 2003, 2914, 1045, 4316,
	3624, 1654, 2848, 2031, 2879, 1193, 1830, 1824, 4314, 4151,
	4042, 2009, 2855, 2890, 2857, 1045, 2859, 926, 2376, 1998,
	2312, 3644, 1828, 2315, 3189, 3284, 2477, 2477, 2074, 2881,
	695, 4060, 1821, 2880, 1185, 1180, 4388, 2935, 2118, 2900,
	1969, 633, 1625, 1173, 4061, 2258, 2877, 1664, 1665, 3471,
	2885, 3609, 1664, 3745, 1978, 3788, 3697, 2939, 2940, 2261,
	1999, 2012, 2943, 927, 1990, 1659, 1945, 1831, 4304, 3381,
	4379, 3118, 2311, 2944, 697, 4062, 3985, 693, 3984, 1970,
	3964, 3807, 2514, 1828, 4051, 4102, 3645, 1942, 3806, 3590,
	3542, 3795, 3285, 3277, 3162, 3158, 2753, 1552, 2747, 923,
	1829, 840, 841, 2736, 1975, 1045, 1045, 1045, 2912, 3920,
	3083, 2098, 2087, 2079, 1045, 1045, 1045, 2062, 3416, 1045,
	988, 732, 1457, 981, 1626, 2251, 4137, 3092, 1831, 1045,
	1167, 1237, 2325, 1393, 4064, 1045, 3609, 1045, 3076, 3077,
	3378, 3486, 2327, 1826, 2508, 1167, 1663, 4182, 3536, 670,
	4152, 1663, 1664, 2220, 1938, 4283, 4063, 2645, 2950, 1975,
	1940, 1829, 3647, 1237, 979, 3886, 923, 2733, 2004, 4024,
	2477, 2477, 2477, 4065, 3702, 1167, 1468, 1979, 1237, 4022,
	3965, 1980, 3173, 3169, 3168, 2905, 2883, 1735, 828, 829,
	981, 2553, 2164, 3059, 3499, 1894, 3081, 3098, 3080, 1237,
	1941, 1596, 2552, 1827, 2551, 2550, 1435, 1449, 3615, 3078,
	1665, 2028, 924, 1357, 1357, 1665, 1045, 2510, 3093, 1436,
	1447, 985, 2509, 845, 2740, 4109, 3853, 3153, 3973, 3088,
	1045, 3472, 3336, 3112, 2096, 980, 3252, 3086, 2712, 2005,
	3473, 4324, 1894, 4020, 3746, 3107, 3154, 3155, 3903, 1830,
	2313, 1663, 2622, 2832, 3703, 3224, 2718, 2252, 1045, 1357,
	2716, 2026, 1162, 1558, 3171, 1207, 3091, 3175, 4378, 4185,
	4190, 3123, 3111, 3054, 3055, 3056, 3962, 1162, 3145, 924,
	4110, 3805, 842, 843, 4179, 3752, 3104, 3070, 1888, 3488,
	2383, 3087, 3151, 3137, 1357, 3172, 3096, 3095, 3177, 3178,
	2027, 4208, 3099, 3100, 1237, 4326, 3116, 1162, 1925, 1925,
	1830, 3159, 3097, 1357, 4138, 3902, 3085, 1641, 1357, 3963,
	1582, 3226, 2646, 2647, 3229, 1342, 3974, 2382, 3234, 3236,
	4274, 1639, 3102, 3198, 3103, 1888, 3537, 2798, 1504, 1618,
	4123, 1357, 3120, 3121, 3122, 3941, 1975, 1357, 2084, 1357,
	1616, 3157, 4186, 1237, 1925, 1592, 1590, 1588, 733, 734,
	719, 3744, 3614, 4111, 3051, 3393, 3356, 2839, 3138, 830,
	831, 1357, 3016, 3146, 3141, 3142, 3201, 2924, 3261, 3190,
	3191, 2737, 1357, 3192, 3152, 3200, 2672, 3119, 2636, 1925,
	3221, 1586, 3270, 1584, 3212, 925, 2578, 1861, 1167, 1977,
	3075, 3094, 3293, 1574, 3128, 4066, 3211, 1857, 1925, 1572,
	4067, 1891, 1642, 1925, 2825, 3217, 3218, 3276, 3187, 3219,
	3183, 1445, 3247, 2825, 3250, 669, 3230, 1536, 1977, 1882,
	3205, 3237, 3101, 247, 3194, 3134, 3135, 1448, 3136, 2211,
	3208, 1357, 1357, 3052, 3302, 3374, 3216, 3114, 3373, 3222,
	1446, 3163, 1659, 844, 2865, 3213, 3225, 3323, 1891, 3232,
	2864, 3239, 925, 1357, 2022, 2838, 3243, 3206, 3132, 2240,
	2222, 3207, 2022, 3353, 3231, 1605, 1882, 1342, 1342, 3238,
	2187, 2058, 3346, 1424, 3215, 3316, 1921, 1767, 3273, 3246,
	1547, 1418, 3360, 4249, 3828, 1640, 736, 735, 3254, 1237,
	3816, 2643, 1237, 4302, 3286, 1161, 725, 4178, 728, 1638,
	3294, 3274, 3884, 3833, 3779, 3312, 3643, 1617, 3314, 3315,
	3635, 1161, 3595, 3318, 3562, 3319, 3560, 3320, 1615, 926,
	1162, 3541, 1045, 1591, 1589, 1587, 3321, 3322, 1045, 1045,
	3354, 3299, 1045, 1045, 1045, 3280, 1045, 3275, 167, 167,
	3308, 737, 738, 3266, 988, 1045, 1894, 3301, 1342, 3317,
	2792, 3334, 3338, 2787, 1045, 3313, 3372, 1045, 3413, 1585,
	936, 1583, 2765, 1237, 3348, 927, 2751, 2743, 2730, 2715,
	2138, 1573, 1045, 2136, 3292, 3371, 4294, 1571, 2133, 3347,
	1237, 2130, 2125, 2123, 978, 2119, 926, 2110, 3355, 1444,
	1894, 1894, 1045, 1045, 2057, 1045, 1045, 1045, 2477, 2477,
	3396, 3379, 2055, 1008, 2210, 3362, 2038, 3363, 1165, 3364,
	1165, 2023, 3114, 2006, 1993, 1981, 3405, 3406, 3289, 1868,
	3520, 4318, 1946, 3368, 3233, 4218, 3908, 3901, 3900, 2032,
	1866, 3840, 927, 3775, 3376, 1668, 2826, 1045, 1965, 1888,
	1398, 1045, 3445, 1894, 1894, 1045, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 4053, 1045, 3344, 2605, 3446, 1163,
	1142, 1163, 1045, 1045, 1894, 2903, 2605, 2625, 3369, 1045,
	3401, 3655, 2603, 1888, 1888, 4046, 1989, 2206, 1636, 1637,
	1045, 2624, 2178, 4217, 2095, 1489, 1143, 709, 3412, 3519,
	1488, 1167, 1167, 2205, 3428, 1045, 941, 943, 945, 2185,
	2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477,
	2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 3435,
	2477, 3419, 3421, 3422, 1237, 3443, 1888, 1888, 2031, 3444,
	3809, 1669, 3835, 1570, 4088, 1675, 1676, 3753, 3731, 2648,
	2629, 4320, 1672, 3483, 4279, 2255, 3504, 4312, 1336, 1188,
	2729, 1235, 1891, 2208, 238, 3448, 2904, 1888, 647, 3632,
	3475, 1045, 2080, 1199, 3349, 3350, 3351, 3352, 1489, 766,
	1882, 2677, 3450, 3589, 1489, 810, 3484, 1045, 1045, 2685,
	1675, 1676, 2684, 3495, 3496, 2667, 3476, 2631, 167, 2271,
	3436, 4177, 1144, 2669, 3588, 4146, 1891, 1891, 3423, 1677,
	630, 4143, 4108, 2633, 1045, 1045, 2668, 3492, 3493, 4038,
	1678, 4017, 658, 3490, 1882, 1882, 2632, 3353, 3634, 3521,
	3522, 3442, 3409, 1162, 1162, 3623, 3346, 3514, 3279, 2772,
	2495, 1045, 3506, 3533, 3534, 3535, 1931, 1875, 4350, 3425,
	4210, 3971, 2271, 3451, 1677, 4211, 3126, 4377, 4145, 1891,
	1891, 3022, 3023, 1357, 4210, 3507, 1675, 1676, 1557, 4211,
	2597, 2598, 2595, 2596, 1556, 4330, 1368, 1882, 1882, 3575,
	3577, 3723, 1894, 3479, 2378, 3525, 3574, 2597, 3570, 2595,
	1891, 2411, 4039, 3591, 2473, 3561, 1620, 3563, 4003, 1619,
	3240, 3836, 1345, 3545, 3832, 3831, 3719, 3641, 1882, 3524,
	3424, 1357, 3227, 1761, 1760, 3585, 4364, 4335, 1045, 4099,
	3998, 3956, 3953, 3864, 3613, 3771, 1167, 1045, 3348, 3657,
	3271, 3681, 3661, 3618, 3616, 3630, 3558, 3553, 2778, 3311,
	3283, 3278, 3282, 3347, 3648, 3012, 3011, 1357, 1357, 1357,
	3666, 2084, 3010, 2643, 3594, 3009, 3008, 3652, 3007, 3006,
	3005, 3004, 3003, 1357, 3002, 3001, 3000, 3631, 2999, 2998,
	3601, 3651, 3670, 2997, 2825, 1888, 2996, 2995, 2994, 3600,
	2993, 3617, 1237, 2992, 3529, 2991, 2990, 2989, 2862, 2845,
	2844, 2843, 2783, 2757, 2731, 2571, 2570, 3633, 2343, 3604,
	3329, 3330, 3612, 3516, 1237, 3638, 3649, 1045, 1045, 2207,
	2204, 2203, 2202, 1045, 1045, 1894, 2201, 3637, 1045, 1045,
	2200, 1045, 3636, 2113, 2112, 1045, 2111, 2109, 2093, 2069,
	2065, 1053, 2064, 3663, 2063, 3658, 1045, 3664, 3659, 3653,
	3650, 2061, 2060, 3682, 2059, 1635, 1634, 1579, 1578, 1475,
	1474, 1473, 1045, 3665, 1472, 1471, 1470, 1469, 1162, 1467,
	3673, 1462, 1461, 3680, 3671, 3672, 3677, 3676, 1460, 3713,
	1459, 1458, 1413, 3679, 1412, 1411, 245, 245, 245, 1410,
	636, 637, 1409, 652, 636, 652, 662, 1408, 668, 1403,
	3705, 3163, 686, 3704, 3689, 3717, 1397, 692, 1891, 3698,
	1395, 1394, 1228, 245, 1227, 1008, 1226, 3688, 1888, 1008,
	1225, 1224, 1167, 3794, 1192, 1191, 1882, 3693, 1125, 1936,
	1167, 824, 947, 933, 1237, 1321, 1237, 245, 3976, 1321,
	3793, 1629, 86, 1167, 1405, 754, 80, 2029, 3349, 3350,
	3351, 3352, 3557, 906, 4207, 1390, 3790, 4129, 761, 1237,
	3783, 4192, 3179, 2688, 2186, 1580, 2188, 3106, 2536, 4169,
	3727, 2960, 4095, 3934, 2381, 1765, 3063, 3781, 1161, 3743,
	82, 1029, 1045, 3776, 3777, 1075, 3785, 3860, 3859, 3780,
	3544, 2815, 3857, 1161, 3856, 1879, 1881, 995, 1240, 1947,
	1922, 1035, 1963, 1956, 3810, 3800, 2572, 2455, 3791, 1237,
	1052, 1049, 3758, 1883, 3754, 1885, 1051, 1237, 3764, 3750,
	3761, 1050, 3759, 1161, 1884, 3757, 3760, 1784, 3755, 3756,
	1048, 167, 3765, 1878, 3640, 3768, 3811, 3837, 3639, 3838,
	3111, 1891, 2739, 3778, 2776, 1357, 1357, 3309, 3784, 1454,
	636, 636, 1452, 908, 1162, 1951, 2337, 2365, 245, 1882,
	2949, 1758, 1162, 1357, 1010, 3854, 1031, 3801, 2084, 2362,
	1183, 3799, 1020, 3839, 1237, 1162, 1009, 3089, 3068, 1357,
	3812, 3813, 1345, 3296, 3513, 2250, 3851, 3843, 770, 3019,
	2368, 1176, 1165, 2478, 2471, 3848, 2467, 3143, 2766, 1645,
	1737, 2777, 1222, 3830, 1013, 2335, 1045, 3877, 1165, 1749,
	2929, 2260, 3887, 3815, 3826, 3824, 1357, 1357, 1357, 3303,
	3109, 3850, 2565, 4214, 3823, 3849, 3825, 1237, 3432, 3904,
	2073, 1141, 1140, 1139, 4198, 3891, 4195, 3674, 3259, 1045,
	1045, 1045, 1939, 3855, 2589, 3896, 3870, 1727, 3267, 3874,
	2887, 1025, 1341, 1163, 3074, 3337, 1415, 1237, 1925, 691,
	3882, 1037, 1045, 3889, 1726, 1045, 1045, 2709, 2708, 1163,
	3876, 3863, 4105, 1208, 3888, 1045, 1206, 1205, 1894, 1204,
	3161, 4386, 3875, 1045, 1045, 2926, 2927, 3554, 3911, 213,
	2897, 1666, 3913, 3907, 1658, 3910, 210, 3915, 1237, 212,
	1357, 3786, 211, 3865, 3895, 3763, 3787, 3517, 3931, 3115,
	3921, 4277, 3572, 3251, 1237, 22, 21, 20, 107, 41,
	19, 122, 1045, 139, 3873, 138, 3926, 115, 3773, 1045,
	2473, 2473, 3943, 137, 136, 135, 134, 1045, 141, 1894,
	2477, 3937, 3598, 133, 132, 127, 1161, 1045, 131, 130,
	1045, 129, 128, 126, 125, 3958, 124, 3789, 3948, 1045,
	123, 121, 3949, 3950, 120, 119, 1237, 118, 117, 116,
	3952, 1888, 3792, 114, 113, 112, 111, 1357, 1357, 110,
	109, 3957, 3959, 108, 682, 679, 59, 2477, 58, 106,
	105, 18, 39, 14, 3981, 63, 64, 17, 3980, 13,
	34, 85, 97, 96, 35, 94, 93, 33, 16, 15,
	91, 4008, 3997, 3261, 3999, 1237, 4032, 90, 1357, 3995,
	4023, 32, 30, 11, 9, 8, 3667, 3668, 3669, 3045,
	3046, 3047, 1888, 4016, 4005, 4012, 1045, 1045, 36, 1845,
	3989, 3990, 1504, 4013, 4021, 4037, 12, 5, 172, 4036,
	171, 4047, 4056, 4015, 174, 1045, 1045, 170, 173, 4071,
	4072, 4050, 4075, 84, 4004, 169, 4031, 4006, 4007, 168,
	83, 28, 1045, 1894, 2473, 2473, 2473, 4011, 4049, 4055,
	3891, 10, 164, 4054, 4069, 4033, 4010, 3788, 3628, 78,
	166, 165, 163, 162, 1891, 161, 1235, 1045, 79, 76,
	1045, 4044, 160, 1321, 159, 77, 158, 26, 4052, 1342,
	6, 62, 1882, 4048, 7, 4112, 3916, 4083, 3357, 1045,
	100, 4101, 4087, 3795, 101, 37, 3932, 4093, 74, 4084,
	4085, 73, 72, 25, 61, 24, 201, 2477, 4100, 200,
	199, 198, 4118, 1823, 197, 196, 4000, 191, 3987, 190,
	195, 1008, 193, 192, 194, 1891, 189, 1321, 204, 4117,
	1045, 1045, 203, 205, 4132, 202, 1888, 3932, 207, 188,
	186, 1045, 182, 1882, 1045, 181, 185, 187, 1357, 184,
	1178, 183, 4125, 2274, 180, 206, 4127, 156, 1357, 1357,
	157, 69, 155, 154, 4148, 1345, 153, 4150, 152, 151,
	150, 149, 68, 23, 4139, 1357, 4144, 4160, 2, 1189,
	1, 4036, 0, 0, 0, 0, 0, 0, 686, 1045,
	1045, 0, 4140, 4141, 4154, 4157, 0, 4156, 0, 0,
	0, 0, 0, 0, 0, 2274, 0, 0, 4126, 0,
	0, 0, 245, 0, 245, 245, 1333, 4164, 245, 245,
	1348, 0, 1045, 1045, 4189, 1045, 0, 4174, 0, 1161,
	1161, 0, 4197, 4200, 245, 4131, 1370, 0, 4158, 4159,
	4187, 3022, 3023, 4153, 3040, 3041, 3042, 0, 4216, 4212,
	4209, 0, 4219, 0, 0, 4163, 4147, 0, 0, 1891,
	0, 4228, 1400, 4173, 4165, 4233, 4166, 0, 4232, 4206,
	0, 1045, 1045, 1045, 1417, 1321, 1423, 1882, 0, 4231,
	245, 245, 0, 1333, 1504, 4202, 4223, 4226, 0, 0,
	4227, 4261, 0, 994, 1045, 0, 4201, 0, 4188, 4205,
	0, 4266, 1464, 4245, 4246, 0, 0, 0, 4248, 4247,
	0, 0, 0, 0, 245, 3037, 245, 245, 0, 1333,
	245, 1348, 0, 0, 0, 0, 0, 0, 0, 4288,
	4264, 686, 0, 245, 245, 0, 0, 0, 0, 4299,
	0, 4297, 1045, 4290, 0, 0, 0, 4286, 0, 4303,
	4287, 4298, 4295, 4296, 4293, 3912, 824, 3914, 4300, 0,
	4292, 4220, 0, 0, 4221, 0, 0, 4319, 1675, 1676,
	0, 4309, 4310, 0, 0, 4315, 4322, 4313, 4311, 0,
	0, 4197, 4321, 0, 4200, 0, 4325, 0, 0, 4323,
	1045, 1706, 1045, 0, 4332, 0, 4216, 0, 1678, 4329,
	4340, 0, 4336, 0, 4337, 3028, 4276, 4338, 4345, 0,
	0, 0, 0, 4339, 0, 4341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4344, 0, 0, 245, 4357,
	4359, 0, 1677, 0, 0, 1165, 0, 3389, 3390, 3954,
	0, 0, 0, 0, 0, 245, 0, 4371, 4366, 0,
	1165, 1045, 1045, 4365, 1161, 0, 0, 0, 4375, 1045,
	0, 1045, 1045, 4381, 0, 4331, 0, 4384, 4368, 0,
	0, 4391, 4393, 4372, 4390, 4395, 0, 4394, 0, 0,
	1165, 0, 2473, 2473, 2778, 0, 0, 0, 4392, 0,
	4398, 0, 4399, 0, 4389, 0, 1163, 4401, 0, 4403,
	0, 4404, 4402, 0, 0, 4408, 3038, 0, 0, 4400,
	4409, 1163, 1045, 4413, 0, 4415, 4014, 0, 0, 4416,
	0, 4418, 0, 0, 4405, 0, 0, 0, 0, 0,
	4410, 0, 1683, 0, 0, 4382, 4383, 4412, 0, 0,
	0, 1163, 0, 0, 0, 4419, 0, 0, 0, 3452,
	3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462,
	3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 0, 3474,
	0, 0, 0, 0, 0, 0, 1705, 1707, 0, 0,
	0, 1321, 0, 0, 1866, 0, 4414, 2704, 0, 0,
	0, 0, 0, 0, 2473, 2473, 2473, 2473, 2473, 2473,
	2473, 2473, 2473, 2473, 2473, 2473, 2473, 2473, 2473, 2473,
	2473, 2473, 2473, 0, 2473, 0, 0, 0, 0, 0,
	2696, 2694, 0, 0, 0, 0, 699, 2698, 2700, 2690,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	1161, 0, 0, 636, 0, 3039, 0, 0, 1161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1675,
	1676, 1161, 0, 0, 245, 0, 245, 0, 1321, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 1370, 1333, 245, 0, 245, 0, 1678,
	0, 0, 245, 1370, 652, 0, 0, 245, 1370, 0,
	0, 0, 0, 1165, 0, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 0, 0, 1504, 1504, 0,
	0, 0, 0, 1697, 0, 0, 0, 1321, 0, 0,
	0, 704, 1694, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 1163, 0, 0, 0, 0, 3034,
	3035, 3036, 1699, 0, 0, 0, 3033, 3031, 3032, 3024,
	3025, 3026, 3027, 3029, 3030, 0, 0, 0, 0, 0,
	0, 0, 0, 3708, 0, 994, 0, 0, 2692, 994,
	0, 0, 0, 0, 0, 0, 70, 0, 0, 2706,
	0, 0, 0, 1700, 1701, 1702, 1703, 0, 0, 0,
	0, 712, 71, 1683, 0, 0, 0, 0, 0, 0,
	2705, 2697, 2695, 2699, 2701, 2691, 2693, 2707, 75, 0,
	0, 0, 0, 0, 2703, 706, 0, 1372, 0, 1378,
	0, 1384, 0, 0, 0, 0, 0, 0, 1675, 1676,
	0, 1708, 1709, 1710, 1718, 1719, 1720, 1705, 1707, 0,
	1321, 0, 245, 0, 0, 245, 0, 2710, 81, 0,
	1711, 1706, 0, 0, 0, 0, 0, 0, 1678, 0,
	0, 0, 1692, 1693, 0, 0, 1724, 0, 0, 0,
	0, 0, 710, 0, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 87, 0, 1675, 1676, 0,
	0, 0, 1677, 0, 1698, 1505, 245, 0, 1321, 102,
	245, 0, 1697, 0, 88, 99, 0, 245, 0, 0,
	1706, 1694, 1523, 245, 1528, 0, 0, 1678, 0, 0,
	0, 0, 0, 0, 1537, 0, 1542, 0, 245, 0,
	245, 0, 0, 0, 636, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 0, 0,
	2114, 1677, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 1697, 245, 0, 0, 0, 0, 0, 0, 245,
	1694, 0, 0, 705, 0, 1675, 1676, 0, 0, 0,
	0, 0, 1700, 1701, 1702, 1703, 1165, 1165, 1601, 0,
	0, 1607, 1683, 0, 0, 0, 0, 0, 1706, 0,
	686, 0, 0, 711, 824, 1678, 0, 0, 0, 2711,
	0, 0, 0, 1704, 0, 0, 708, 0, 2702, 0,
	0, 3392, 703, 0, 0, 0, 0, 1715, 0, 245,
	1725, 1333, 245, 1699, 0, 0, 1705, 1707, 0, 1677,
	0, 1700, 1701, 1702, 1703, 0, 686, 1163, 1163, 0,
	0, 1683, 1721, 245, 1722, 0, 0, 0, 0, 0,
	0, 1692, 1693, 700, 245, 245, 0, 245, 0, 245,
	0, 245, 0, 245, 0, 0, 0, 0, 0, 1713,
	0, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 0, 0,
	707, 0, 0, 1698, 2216, 1705, 1707, 2217, 0, 2218,
	92, 0, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 245, 1746, 0, 0, 702, 0, 0, 1759, 0,
	1692, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 668, 0, 0, 1723, 686, 0, 0, 1683,
	0, 0, 0, 0, 0, 0, 0, 175, 95, 0,
	98, 0, 1698, 1712, 0, 0, 0, 0, 0, 0,
	0, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681,
	1682, 1684, 1685, 0, 214, 0, 0, 0, 1675, 1676,
	0, 0, 819, 1705, 1707, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 1678, 0,
	0, 1165, 1704, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 1817, 1817, 1817, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 3940,
	1698, 142, 1677, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 0, 0, 0, 179, 1716, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 1704, 1163, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 209, 2473, 0, 3967, 0, 0, 0,
	0, 1699, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 178, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 245, 0, 636, 0, 0, 0,
	0, 2473, 1700, 1701, 1702, 1703, 0, 0, 245, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 245, 1348, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 1321, 0, 2973, 0, 0, 1699,
	2974, 0, 0, 0, 0, 0, 1705, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	245, 1348, 0, 652, 0, 1165, 1321, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 1675, 1676, 1165, 1695,
	1691, 1321, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684,
	1685, 0, 0, 0, 0, 0, 4092, 70, 0, 1706,
	0, 0, 1321, 1698, 0, 0, 1678, 0, 0, 0,
	0, 0, 0, 71, 2614, 0, 0, 0, 1163, 1008,
	0, 0, 0, 245, 0, 0, 1163, 0, 0, 75,
	0, 0, 0, 1008, 0, 245, 0, 0, 0, 1163,
	1677, 2473, 0, 0, 0, 0, 0, 0, 245, 0,
	1697, 0, 0, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 81,
	0, 0, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 2721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 1321, 0, 0,
	3387, 0, 0, 0, 0, 0, 1370, 0, 0, 245,
	102, 0, 1704, 0, 0, 88, 99, 245, 0, 0,
	1700, 1701, 1702, 1703, 0, 0, 2761, 0, 0, 0,
	1683, 0, 1699, 0, 0, 0, 2614, 0, 636, 0,
	0, 0, 2782, 0, 0, 0, 1321, 0, 245, 0,
	0, 245, 0, 0, 0, 245, 0, 245, 0, 0,
	0, 0, 1333, 0, 245, 245, 0, 1348, 1348, 0,
	89, 0, 0, 0, 1705, 1707, 0, 2808, 824, 0,
	2614, 2614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 1692,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 1333, 245, 0, 0, 1370,
	0, 1370, 1370, 0, 0, 1333, 0, 1333, 0, 1333,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 245, 245, 245, 1333,
	245, 0, 245, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1321, 245, 0, 1321, 0, 2249, 0, 2253,
	0, 245, 0, 0, 0, 0, 2267, 0, 0, 0,
	0, 92, 0, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 0, 2316,
	1704, 2318, 2319, 2320, 2321, 0, 0, 0, 175, 95,
	0, 98, 0, 0, 0, 0, 1321, 0, 0, 0,
	1699, 0, 0, 2345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 1746, 214, 0, 0, 2360, 0,
	1370, 0, 0, 819, 0, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 2390, 2393, 2396, 2399, 0, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2469, 0, 2480,
	2482, 2487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 3022, 3023, 208, 3040, 3041, 3042,
	0, 0, 0, 0, 209, 0, 0, 0, 1695, 1691,
	0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685,
	0, 1675, 1676, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 1706, 0, 0, 1321, 0, 0,
	0, 1678, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 636, 0, 3037, 636,
	0, 0, 636, 636, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 1677, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 0, 0, 1370, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1370, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2614, 2614, 245, 0, 1348, 0,
	0, 2614, 0, 0, 3165, 3386, 0, 0, 3028, 0,
	0, 0, 2614, 3165, 0, 2614, 3165, 3165, 0, 0,
	0, 0, 0, 0, 0, 1700, 1701, 1702, 1703, 0,
	245, 245, 1348, 245, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3044, 2724, 2725, 0,
	2727, 0, 0, 1348, 245, 0, 0, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3043, 2614,
	0, 3228, 2614, 1348, 0, 0, 2614, 2614, 1348, 1705,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 1693, 0, 245, 0, 3038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 3255, 0, 0, 3257, 2614, 0, 0, 245,
	0, 0, 0, 245, 0, 1423, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 2761, 0, 0, 1333, 0, 245,
	0, 0, 2614, 0, 636, 0, 0, 1321, 0, 0,
	0, 2614, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 245, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 2761, 0, 0, 2761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1675, 1676, 0, 1708,
	1709, 1710, 1718, 1719, 1720, 0, 0, 0, 3039, 0,
	1728, 1729, 0, 0, 0, 1704, 0, 0, 3367, 1706,
	0, 1333, 245, 0, 245, 0, 1678, 0, 0, 0,
	0, 0, 0, 0, 1724, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 0, 1321,
	0, 0, 0, 0, 1675, 1676, 0, 245, 0, 0,
	1677, 0, 0, 0, 0, 2909, 2910, 0, 0, 0,
	1697, 2916, 1321, 0, 0, 0, 0, 1706, 0, 1694,
	0, 0, 0, 0, 1678, 0, 0, 0, 0, 0,
	2930, 2931, 0, 0, 0, 0, 2360, 0, 0, 0,
	0, 0, 0, 0, 0, 2938, 0, 0, 0, 0,
	0, 0, 0, 3430, 0, 0, 0, 0, 1677, 0,
	0, 2952, 1321, 0, 0, 0, 0, 0, 1697, 0,
	1321, 0, 3034, 3035, 3036, 0, 0, 1694, 2964, 3033,
	3031, 3032, 3024, 3025, 3026, 3027, 3029, 3030, 0, 0,
	1700, 1701, 1702, 1703, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 1695, 1691, 0, 1688, 1686, 1687, 1679,
	1680, 1681, 1682, 1684, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 2915, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 1725, 0,
	0, 0, 0, 0, 1705, 1707, 0, 0, 1700, 1701,
	1702, 1703, 0, 0, 0, 0, 0, 0, 1683, 0,
	1721, 0, 1722, 0, 0, 0, 0, 0, 0, 1692,
	1693, 0, 245, 245, 0, 0, 0, 2487, 2487, 2487,
	1321, 0, 0, 0, 0, 0, 0, 1713, 0, 0,
	0, 0, 1817, 0, 636, 636, 0, 0, 0, 0,
	3079, 1698, 1705, 1707, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 1370, 1370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 1693, 0,
	1370, 1370, 1370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 1698,
	0, 1054, 0, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 994,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1008, 0, 0, 246, 246, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 1321,
	1704, 3182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 1348, 245, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 245, 0,
	0, 0, 0, 0, 0, 1716, 0, 245, 1321, 0,
	0, 0, 245, 0, 0, 0, 245, 0, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2614, 245, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2808, 2808, 0, 0,
	0, 0, 824, 824, 2614, 0, 0, 2761, 2761, 70,
	0, 824, 2614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 75, 0, 0, 1689, 1690, 1696, 1717, 1695, 1691,
	0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685,
	0, 0, 3022, 3023, 0, 3040, 3041, 3042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 3709, 0, 0, 0, 0, 0,
	0, 0, 0, 1008, 1008, 0, 0, 0, 0, 0,
	0, 3728, 0, 0, 0, 0, 1695, 1691, 0, 1688,
	1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 3037, 88, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3022, 3023, 0, 3040, 3041,
	3042, 0, 0, 245, 0, 0, 0, 0, 0, 1370,
	0, 245, 0, 0, 0, 2267, 0, 3398, 0, 0,
	0, 3384, 3385, 0, 245, 3388, 1008, 0, 0, 3391,
	0, 0, 89, 0, 0, 0, 0, 0, 3395, 0,
	0, 0, 0, 0, 0, 1675, 1676, 3402, 0, 0,
	3079, 2614, 2614, 2614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1370, 3414, 3028, 0, 1706, 3037,
	0, 0, 2614, 0, 3165, 1678, 0, 1370, 1370, 245,
	1348, 0, 0, 0, 0, 3437, 3438, 0, 3439, 3440,
	3441, 1348, 245, 1348, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2614, 0, 2614, 245, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 3043, 0, 1694, 0,
	3447, 0, 0, 2614, 3449, 0, 0, 0, 3867, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 3028,
	0, 0, 1675, 1676, 0, 3477, 3478, 3038, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 0, 2908,
	0, 0, 0, 3489, 0, 1706, 0, 0, 0, 0,
	1370, 0, 1678, 0, 0, 0, 0, 0, 3498, 1700,
	1701, 1702, 1703, 0, 0, 0, 0, 0, 0, 1683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3043,
	175, 95, 0, 98, 0, 0, 1677, 0, 3022, 3023,
	0, 3040, 3041, 3042, 0, 0, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 1694, 0, 214, 0, 0,
	3397, 0, 0, 1705, 1707, 819, 0, 0, 0, 140,
	3038, 0, 0, 0, 3538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1692, 1693,
	3547, 3550, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 2614, 0, 3165, 0, 0, 3961, 0, 0, 0,
	0, 0, 3037, 0, 245, 0, 3039, 0, 3571, 0,
	1698, 0, 0, 0, 142, 0, 1700, 1701, 1702, 1703,
	0, 0, 0, 0, 0, 0, 1683, 0, 0, 179,
	686, 0, 0, 0, 0, 0, 0, 215, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 1348, 245, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 1707, 0, 3961, 0, 0, 0, 0, 1515, 0,
	0, 2614, 246, 1241, 246, 246, 0, 1241, 246, 246,
	0, 1241, 3028, 4041, 0, 1692, 1693, 0, 0, 3039,
	0, 0, 0, 0, 246, 1370, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	3660, 0, 0, 0, 1241, 0, 0, 1698, 0, 1704,
	3034, 3035, 3036, 0, 245, 245, 0, 3033, 3031, 3032,
	3024, 3025, 3026, 3027, 3029, 3030, 0, 0, 1241, 1699,
	246, 246, 3043, 0, 0, 0, 0, 0, 3430, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 246, 246, 0, 0,
	246, 0, 1241, 3038, 0, 0, 0, 0, 1241, 0,
	3706, 3707, 1241, 246, 246, 0, 3711, 3712, 0, 0,
	0, 3715, 3716, 0, 0, 0, 1241, 0, 3720, 0,
	0, 245, 0, 3034, 3035, 3036, 0, 0, 0, 3724,
	3033, 3031, 3032, 3024, 3025, 3026, 3027, 3029, 3030, 0,
	3867, 0, 0, 0, 0, 3729, 1704, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3165, 1699, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 1691, 0,
	1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0,
	0, 1370, 0, 1370, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 246, 0, 70, 4183, 45,
	44, 0, 0, 0, 0, 1370, 0, 0, 245, 0,
	0, 0, 3039, 71, 0, 0, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 2614, 0, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	65, 0, 0, 245, 0, 3550, 0, 47, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 46, 3430, 81,
	0, 0, 0, 0, 1695, 1691, 0, 1688, 1686, 1687,
	1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 1041, 0,
	0, 0, 0, 49, 66, 0, 0, 0, 0, 0,
	0, 50, 0, 0, 0, 0, 87, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 48, 0,
	102, 0, 0, 0, 0, 88, 99, 0, 0, 0,
	0, 0, 0, 244, 244, 244, 3034, 3035, 3036, 0,
	0, 3961, 0, 3033, 3031, 3032, 3024, 3025, 3026, 3027,
	3029, 3030, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 0, 51, 0, 0, 0, 0, 0, 0, 3550,
	0, 0, 1370, 0, 2614, 0, 0, 0, 3022, 3023,
	89, 3040, 3041, 3042, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3927, 3928, 3929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 2267, 0, 0, 3938, 3939,
	0, 1241, 0, 1675, 1676, 246, 246, 246, 0, 1718,
	1719, 1720, 246, 0, 0, 0, 3947, 246, 0, 0,
	1241, 0, 3037, 0, 2808, 0, 1706, 0, 0, 0,
	0, 1241, 2614, 1678, 0, 0, 0, 0, 0, 0,
	0, 1724, 0, 0, 0, 0, 0, 2808, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 3550, 0, 0, 0, 0, 1677, 0, 0,
	3986, 0, 0, 0, 0, 1164, 0, 1697, 0, 0,
	3993, 0, 0, 994, 0, 0, 1694, 0, 0, 0,
	0, 92, 4001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 0, 3028, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 67, 0, 0, 0, 0, 56, 175, 95,
	0, 98, 0, 0, 0, 53, 0, 0, 0, 147,
	0, 0, 0, 0, 0, 0, 54, 1700, 1701, 1702,
	1703, 0, 0, 0, 0, 214, 0, 1683, 0, 3550,
	3550, 0, 3043, 60, 0, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 246, 1241, 1241, 246, 0, 0, 0, 0,
	0, 0, 1715, 1241, 0, 1725, 0, 216, 0, 0,
	0, 1705, 1707, 3038, 0, 0, 0, 0, 0, 0,
	0, 2448, 2449, 2450, 2451, 2444, 2445, 2446, 2447, 0,
	4104, 0, 142, 4107, 0, 0, 1692, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 179, 0, 0,
	246, 0, 3550, 0, 1713, 215, 0, 246, 0, 0,
	0, 0, 0, 246, 0, 0, 208, 0, 1698, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 246, 0,
	246, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 994, 994, 0, 178, 0, 0, 3,
	2424, 2425, 2426, 2427, 3550, 0, 0, 3550, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 2436, 2437, 2438, 2439, 2432, 2433, 2434, 2435,
	2440, 2441, 2442, 2443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 1241,
	0, 1241, 3039, 2267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1241, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 246,
	0, 0, 246, 0, 1030, 104, 994, 1704, 0, 0,
	1241, 0, 1241, 1241, 1241, 2420, 2421, 2422, 2423, 2428,
	2429, 2430, 2431, 246, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 246, 246, 0, 246, 0, 246,
	0, 246, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 0, 4244, 4244, 4244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4265, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 3034, 3035, 3036, 0,
	0, 0, 0, 3033, 3031, 3032, 3024, 3025, 3026, 3027,
	3029, 3030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4244, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 0, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 0,
	0, 0, 969, 3550, 0, 3550, 0, 0, 0, 244,
	0, 244, 244, 989, 0, 244, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1241, 0, 0, 0,
	0, 1151, 1675, 1676, 0, 1708, 1709, 1710, 1718, 1719,
	1720, 0, 0, 0, 4244, 4376, 0, 0, 0, 0,
	0, 0, 4380, 0, 0, 1706, 0, 244, 244, 0,
	0, 0, 1678, 0, 0, 0, 0, 0, 0, 0,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 244, 244, 1241, 1677, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 0, 0, 0,
	244, 244, 0, 0, 0, 1694, 0, 1157, 246, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 240, 632, 0, 0, 0, 0, 0,
	0, 0, 801, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 1700, 1701, 1702, 1703,
	246, 0, 784, 0, 0, 0, 1683, 785, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 1241, 0,
	0, 1715, 0, 0, 1725, 786, 0, 0, 0, 0,
	1705, 1707, 0, 246, 0, 0, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 1693, 788, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 246, 1241, 807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	1241, 0, 0, 0, 0, 0, 789, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 1241, 0, 0, 0, 0, 246, 0, 791,
	0, 0, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 246, 0, 0, 0, 246, 0, 246, 0, 0,
	0, 806, 0, 0, 246, 246, 0, 0, 0, 1241,
	1241, 0, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 1839, 0, 1164, 246, 0, 246, 244, 803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 244, 1839, 244, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 246, 246, 246, 0,
	246, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 794, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 813, 0, 795, 0, 0, 104,
	0, 104, 0, 104, 0, 0, 1714, 0, 0, 0,
	1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686, 1687,
	1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 0, 711,
	0, 0, 0, 0, 0, 0, 796, 0, 0, 0,
	811, 812, 809, 0, 0, 0, 0, 0, 804, 0,
	0, 797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 989, 104, 104, 0, 0, 0, 0, 798, 805,
	0, 0, 0, 0, 104, 0, 104, 799, 0, 244,
	0, 0, 726, 0, 0, 0, 104, 0, 104, 0,
	0, 800, 0, 0, 0, 0, 808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 104, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 244, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 1232, 0,
	0, 0, 0, 0, 1340, 0, 1740, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 244, 0, 0, 244,
	0, 0, 0, 1745, 1241, 1241, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 726, 244, 0, 244, 0, 244, 0, 244, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 246, 0, 246, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	1479, 0, 1479, 1479, 246, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 1521,
	1522, 0, 0, 0, 1241, 0, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 1840,
	0, 104, 1241, 0, 0, 0, 0, 246, 1241, 0,
	1241, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 743, 0, 0, 0, 246,
	0, 0, 1241, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 744, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 246, 246, 0, 0, 0, 746, 0,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 1241, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 747, 0, 0, 0, 0,
	748, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	771, 0, 0, 0, 0, 1164, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 769,
	1241, 1164, 246, 1241, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 751, 0, 0, 752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 773, 0, 0, 0,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 772, 0, 0, 0, 0, 0, 0, 0,
	244, 767, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 1340, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 0, 753,
	989, 0, 989, 0, 0, 0, 0, 726, 0, 0,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 756,
	0, 0, 0, 0, 244, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 0, 244, 0, 0, 244, 0,
	0, 0, 244, 742, 244, 764, 0, 0, 0, 0,
	0, 244, 244, 0, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 762, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 758, 0, 0, 776, 0, 775, 0, 0, 0,
	759, 244, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 969, 0, 760, 969, 969, 0, 246, 768,
	0, 0, 0, 0, 0, 777, 0, 774, 0, 0,
	0, 0, 0, 713, 1241, 0, 0, 246, 0, 0,
	0, 0, 244, 244, 244, 244, 0, 244, 246, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 2071, 0, 0, 0, 2078, 246, 0, 0,
	2334, 0, 246, 0, 0, 0, 246, 0, 0, 2090,
	244, 0, 1241, 0, 0, 0, 989, 0, 244, 0,
	0, 0, 0, 0, 2101, 1745, 2101, 0, 0, 1745,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 1241,
	1241, 0, 0, 0, 0, 0, 0, 0, 1479, 0,
	0, 0, 0, 0, 1241, 1340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1151, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 0, 2161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2181,
	104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2192, 0, 2194, 0, 2196, 0, 2198, 0, 2199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1164, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 1164, 0, 0, 0, 0, 0, 0,
	1168, 0, 0, 0, 1168, 0, 0, 0, 1168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 104, 1839, 0, 0, 0, 0, 0, 0,
	1241, 0, 246, 0, 246, 0, 0, 0, 1241, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	104, 0, 104, 0, 0, 1168, 1241, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 1241, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 1241, 246, 0, 0, 0,
	1241, 0, 0, 0, 0, 104, 0, 0, 104, 1168,
	0, 0, 0, 0, 0, 1168, 0, 244, 244, 1168,
	244, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 1168, 0, 0, 0, 1241, 1241, 1241,
	0, 244, 0, 0, 104, 0, 250, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	104, 0, 0, 0, 0, 0, 244, 0, 718, 1241,
	244, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 2090, 0, 0, 0,
	0, 0, 718, 0, 246, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	244, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 244, 1241, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 1241, 0, 0, 1241,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 2078, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 0, 0, 0, 0, 1675,
	1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 1706, 0, 2784, 0, 0, 1479, 0, 1678,
	0, 1479, 0, 1479, 0, 0, 0, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 1168, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 1677, 0, 0, 0, 0, 1168, 0,
	0, 2837, 0, 1697, 0, 0, 0, 0, 0, 0,
	0, 0, 1694, 1895, 0, 0, 0, 1168, 0, 0,
	2847, 0, 2850, 0, 246, 0, 0, 0, 1168, 1241,
	0, 0, 0, 0, 1151, 0, 0, 0, 0, 1241,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	0, 0, 1168, 0, 0, 0, 1241, 0, 0, 0,
	0, 2873, 1340, 2875, 1340, 0, 2878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 1701, 1702, 1703, 0, 0, 1164,
	1164, 0, 0, 1683, 0, 0, 0, 0, 246, 1479,
	0, 0, 0, 0, 0, 0, 0, 2906, 0, 0,
	0, 0, 0, 1046, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 1725, 0, 246, 0, 0, 0, 1705, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 1722, 0, 0, 0, 0,
	0, 0, 1692, 1693, 0, 0, 104, 104, 0, 0,
	104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1168, 1168, 0, 0, 1698, 0, 0, 0, 0, 0,
	1168, 0, 104, 104, 0, 0, 104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 1723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 244,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 1151, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 0, 1704, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 104, 104, 0,
	0, 0, 0, 0, 1168, 0, 1168, 0, 1168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 1168, 1168, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 1238, 0,
	0, 0, 1238, 0, 0, 0, 1358, 1168, 0, 1168,
	1168, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3156, 1358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 1689, 1690, 1696,
	1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681,
	1682, 1684, 1685, 0, 0, 0, 3197, 3199, 0, 2090,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 1358, 0, 0, 0, 1358, 0, 0,
	1164, 0, 0, 0, 1895, 1895, 1168, 0, 1164, 0,
	0, 1358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3268, 244, 0, 0, 3272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 244, 0, 1168, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1151, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 1479, 0, 0, 0, 1340,
	1340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 1168, 3333, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3370, 0,
	1340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 104, 1239, 0, 0, 0, 1239,
	0, 0, 0, 1359, 0, 1895, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1151, 0, 0, 0, 0, 0, 1238, 0, 0, 0,
	0, 244, 0, 1168, 0, 0, 1359, 718, 0, 0,
	0, 0, 718, 0, 0, 1358, 0, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 1168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 0, 0, 0, 0,
	1359, 244, 244, 0, 1359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 1168, 0, 1168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 0, 0, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	104, 0, 0, 0, 0, 0, 1151, 0, 0, 0,
	0, 0, 0, 0, 1151, 0, 0, 0, 1358, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 0,
	0, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 1706, 2090, 0, 0, 0, 0, 0,
	1678, 0, 0, 0, 3627, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	0, 0, 3642, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 1677, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 104, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 104, 1358, 0, 1358, 0, 1358, 3691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 1358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 1700, 1701, 1702, 1703, 0, 0,
	0, 0, 0, 0, 1683, 1358, 0, 1358, 1358, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 1725, 0, 0, 0, 0, 0, 1705, 1707,
	0, 0, 0, 1239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 1722, 0, 0, 0,
	0, 0, 1359, 1692, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 1359, 0, 0, 0, 0, 0, 0,
	0, 1713, 0, 0, 0, 0, 0, 0, 1168, 1168,
	0, 0, 0, 0, 0, 1698, 0, 1239, 0, 0,
	0, 0, 0, 1168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1168, 0, 0, 1168, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1895, 0, 1712, 0, 1168, 0, 0,
	0, 0, 0, 0, 0, 3814, 0, 0, 0, 0,
	0, 1168, 1168, 0, 0, 0, 0, 0, 2090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2334, 0, 0, 0, 0, 0, 0, 0,
	1895, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 0, 0, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 1699, 1359, 1359, 0, 0, 0,
	0, 0, 3883, 0, 0, 1239, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 1716,
	1675, 1676, 1168, 1708, 1709, 1710, 1718, 1719, 1720, 0,
	1238, 1168, 0, 0, 0, 0, 1168, 0, 0, 0,
	0, 0, 1711, 1706, 0, 0, 0, 0, 0, 0,
	1678, 0, 0, 0, 0, 0, 1238, 0, 1724, 1168,
	0, 0, 0, 0, 0, 1168, 0, 1168, 0, 0,
	0, 1168, 104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1677, 0, 0, 0, 0, 1168,
	0, 0, 0, 104, 1697, 0, 0, 0, 0, 0,
	1168, 0, 0, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 1168, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 0, 0, 0, 0, 2356, 0,
	0, 0, 2357, 0, 0, 0, 0, 0, 0, 1359,
	3968, 1359, 0, 1359, 0, 0, 0, 0, 0, 1168,
	1168, 0, 0, 1238, 0, 0, 0, 0, 0, 1359,
	1359, 0, 0, 0, 1700, 1701, 1702, 1703, 0, 0,
	1359, 1168, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 1359, 0, 1359, 1359, 1359, 0, 104, 0,
	2090, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1168, 0, 1715,
	1168, 1238, 1725, 0, 0, 0, 0, 0, 1705, 1707,
	0, 0, 0, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 1722, 0, 0, 0,
	0, 0, 0, 1692, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 0, 0, 1895, 0, 0, 1358, 0, 0,
	4082, 1340, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1168, 0,
	0, 1239, 0, 0, 0, 0, 0, 0, 1895, 1895,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 1358, 1358, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 1712, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 1895, 1895, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1239, 0,
	4149, 0, 1895, 0, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1675, 1676, 0, 1708, 1709, 1710,
	1718, 1719, 1720, 0, 1699, 0, 0, 0, 0, 1168,
	1168, 0, 0, 0, 0, 0, 1711, 1706, 0, 0,
	0, 0, 0, 0, 1678, 0, 0, 0, 0, 1716,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 4191, 0, 0, 0, 1677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 0,
	0, 4213, 0, 1239, 0, 0, 0, 1694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 0, 0, 0, 0, 1700, 1701,
	1702, 1703, 3734, 0, 0, 0, 0, 0, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	1239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1895, 0, 0, 1715, 0, 0, 1725, 0, 0, 0,
	0, 0, 1705, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 1168,
	1722, 0, 0, 0, 0, 0, 0, 1692, 1693, 0,
	0, 0, 0, 0, 1168, 0, 0, 0, 1239, 0,
	0, 0, 0, 0, 0, 1713, 0, 0, 0, 0,
	0, 0, 1359, 0, 0, 1168, 1168, 1168, 0, 1698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1168, 0, 0, 0, 1359, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 1712,
	0, 0, 0, 1895, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1238, 0, 0, 0, 0,
	0, 1359, 1359, 0, 1359, 0, 0, 0, 0, 1358,
	1358, 0, 0, 0, 0, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1168, 0, 0, 1716, 0, 0, 0, 0, 1168, 0,
	0, 0, 1168, 0, 1168, 0, 0, 0, 0, 0,
	1358, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 1168, 0, 1358,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 1358, 0, 1358, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 718, 1168, 0, 0,
	0, 0, 0, 0, 0, 1168, 0, 1358, 1714, 0,
	0, 0, 1689, 1690, 1696, 1717, 1695, 1691, 1358, 1688,
	1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0,
	0, 0, 0, 1168, 1168, 0, 3400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 1168, 1168, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1238, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1895, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 0, 1168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 1239, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 1895, 0, 0,
	0, 0, 0, 0, 0, 0, 1239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1239, 0, 0, 1168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 1168, 0, 0, 0,
	0, 0, 1239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1359, 1359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1168, 0, 0, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1359, 0, 0, 1675, 1676, 0, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 1706, 0,
	0, 1895, 0, 0, 0, 1678, 0, 1359, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 1239, 0, 0,
	1238, 0, 0, 0, 0, 0, 1359, 0, 0, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 0, 0, 0, 1359, 0, 0, 0, 1694, 0,
	1359, 0, 1359, 0, 0, 0, 1239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	1701, 1702, 1703, 1168, 0, 0, 0, 0, 0, 1683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 1359, 1359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 1359, 1725, 0, 0,
	0, 0, 0, 1705, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 1721,
	0, 1722, 0, 0, 0, 0, 0, 0, 1692, 1693,
	0, 0, 1239, 0, 0, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 1358, 1358, 1358, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1723, 0, 0, 0, 1239, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 1239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	1238, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1238, 0, 0, 0, 0,
	0, 0, 0, 1238, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 1689, 1690, 1696, 1717, 1695, 1691, 0,
	1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0,
	0, 1358, 1358, 0, 0, 0, 0, 2976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 1675, 1676, 1358, 1708, 1709, 1710, 1718,
	1719, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1706, 0, 0, 0,
	0, 0, 0, 1678, 0, 0, 1359, 0, 0, 0,
	0, 1724, 1358, 1358, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1677, 1675, 1676,
	0, 1708, 1709, 1710, 1718, 1719, 1720, 1697, 0, 0,
	0, 0, 0, 1238, 1359, 0, 1694, 0, 0, 0,
	1711, 1706, 0, 0, 0, 0, 0, 0, 1678, 0,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1359, 1359, 1359, 0, 1238, 0, 1358, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 1359, 0, 0, 0,
	1238, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 1239, 0, 1700, 1701, 1702,
	1703, 0, 0, 0, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 1358, 1358, 1725, 0, 0, 0, 0,
	0, 1705, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 1701, 1702, 1703, 0, 1721, 0, 1722,
	0, 0, 1683, 0, 0, 0, 1692, 1693, 0, 0,
	0, 1238, 1675, 1676, 1358, 1708, 1709, 1710, 1718, 1719,
	1720, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 1706, 0, 1715, 1698, 0,
	1725, 0, 1678, 0, 0, 0, 1705, 1707, 0, 0,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 1722, 0, 0, 1239, 0, 1239,
	0, 1692, 1693, 0, 0, 0, 1677, 0, 0, 0,
	1723, 0, 0, 0, 0, 0, 1697, 0, 0, 1713,
	0, 0, 1239, 0, 0, 1694, 0, 0, 1712, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1239, 0, 0, 1723, 0, 0, 0, 0,
	1239, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 0, 0, 1712, 0, 0, 1700, 1701, 1702, 1703,
	0, 0, 0, 0, 1358, 0, 1683, 1699, 1359, 1359,
	0, 0, 0, 0, 1358, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1359, 0, 0, 0,
	0, 1358, 1716, 0, 0, 0, 0, 1239, 0, 0,
	0, 1715, 1359, 0, 1725, 0, 0, 0, 0, 0,
	1705, 1707, 1704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 1722, 0,
	0, 0, 1699, 0, 0, 1692, 1693, 0, 0, 1359,
	1359, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	1239, 0, 0, 1713, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1239, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 1723,
	0, 0, 0, 0, 0, 2975, 0, 0, 0, 0,
	0, 1239, 0, 1359, 0, 0, 0, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 0, 0, 0, 0, 0,
	2972, 0, 0, 0, 0, 0, 1704, 0, 0, 1239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1359, 1359, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 1239, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 0, 0, 0,
	1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686, 1687,
	1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 2971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1236, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1359, 1359, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 1242, 261, 262, 1243, 1244, 1245, 1359, 1246,
	578, 1247, 1248, 1249, 1250, 263, 264, 1108, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	1251, 583, 272, 273, 274, 275, 276, 277, 1252, 1253,
	0, 278, 584, 585, 586, 1254, 279, 280, 587, 1255,
	1322, 1256, 281, 282, 283, 284, 285, 286, 287, 0,
	1257, 289, 290, 291, 288, 292, 1258, 293, 0, 294,
	295, 296, 297, 298, 299, 1259, 300, 301, 302, 1109,
	303, 304, 1260, 1261, 1263, 1262, 1264, 1265, 1266, 305,
	306, 307, 308, 0, 309, 588, 589, 1267, 313, 310,
	311, 1268, 314, 312, 1269, 315, 316, 317, 1270, 1271,
	318, 319, 320, 1272, 321, 322, 1273, 323, 324, 325,
	1274, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 1275, 251, 1276, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 1277, 343, 1278, 1279, 1110, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 1280, 354,
	596, 1281, 597, 355, 1282, 356, 357, 358, 359, 360,
	598, 599, 600, 435, 1112, 361, 362, 1283, 363, 364,
	365, 366, 0, 0, 0, 252, 367, 368, 370, 1284,
	1111, 369, 601, 602, 1285, 603, 1286, 371, 372, 1113,
	604, 1114, 373, 374, 375, 1115, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 1287, 383, 385, 384,
	1288, 386, 605, 1116, 387, 388, 1117, 1289, 389, 0,
	0, 0, 390, 391, 1290, 1291, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1118, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1119, 422,
	1292, 253, 1120, 432, 433, 1293, 606, 434, 607, 436,
	437, 1294, 0, 438, 0, 1295, 1296, 440, 441, 442,
	1297, 1298, 443, 444, 608, 1121, 445, 1122, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	1299, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 1300, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 1301, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 1302, 489,
	490, 491, 1123, 492, 493, 494, 495, 615, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 1303, 512, 513, 511, 514, 515, 516, 1304, 517,
	501, 502, 518, 519, 1124, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 1305, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 1306, 538,
	539, 0, 537, 1307, 540, 541, 542, 543, 544, 545,
	333, 546, 1308, 547, 619, 620, 621, 622, 1309, 556,
	1310, 548, 549, 550, 623, 551, 624, 1311, 552, 553,
	554, 555, 0, 557, 558, 1312, 1313, 559, 560, 561,
	563, 564, 562, 565, 1314, 566, 1315, 0, 567, 568,
	569, 625, 626, 627, 1316, 571, 570, 572, 628, 1317,
	1318, 1319, 1320, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1236, 0, 0, 0, 0, 0, 0, 0,
	2521, 0, 0, 0, 0, 0, 0, 0, 2522, 254,
	256, 255, 257, 258, 259, 260, 1242, 261, 262, 1243,
	1244, 1245, 0, 1246, 578, 1247, 1248, 1249, 1250, 263,
	264, 1108, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 1251, 583, 272, 273, 274, 275,
	276, 277, 1252, 1253, 0, 278, 584, 585, 586, 1254,
	279, 280, 587, 1255, 1322, 1256, 281, 282, 283, 284,
	285, 286, 287, 0, 1257, 289, 290, 291, 288, 292,
	1258, 293, 0, 294, 295, 296, 297, 298, 299, 1259,
	300, 301, 302, 1109, 303, 304, 1260, 1261, 1263, 1262,
	1264, 1265, 1266, 305, 306, 307, 308, 0, 309, 588,
	589, 1267, 313, 310, 311, 1268, 314, 312, 1269, 315,
	316, 317, 1270, 1271, 318, 319, 320, 1272, 321, 322,
	1273, 323, 324, 325, 1274, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	1275, 251, 1276, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 1277, 343, 1278, 1279, 1110,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 1280, 354, 596, 1281, 597, 355, 1282, 356,
	357, 358, 359, 360, 598, 599, 600, 435, 1112, 361,
	362, 1283, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 1284, 1111, 369, 601, 602, 1285, 603,
	1286, 371, 372, 1113, 604, 1114, 373, 374, 375, 1115,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	1287, 383, 385, 384, 1288, 386, 605, 1116, 387, 388,
	1117, 1289, 389, 0, 0, 0, 390, 391, 1290, 1291,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1118,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1119, 422, 1292, 253, 1120, 432, 433, 1293,
	606, 434, 607, 436, 437, 1294, 0, 438, 0, 1295,
	1296, 440, 441, 442, 1297, 1298, 443, 444, 608, 1121,
	445, 1122, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 1299, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	1300, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 1301, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 1302, 489, 490, 491, 1123, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 1303, 512, 513, 511, 514,
	515, 516, 1304, 517, 501, 502, 518, 519, 1124, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 1305, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 1306, 538, 539, 0, 537, 1307, 540, 541,
	542, 543, 544, 545, 333, 546, 1308, 547, 619, 620,
	621, 622, 1309, 556, 1310, 548, 549, 550, 623, 551,
	624, 1311, 552, 553, 554, 555, 0, 557, 558, 1312,
	1313, 559, 560, 561, 563, 564, 562, 565, 1314, 566,
	1315, 0, 567, 568, 569, 625, 626, 627, 1316, 571,
	570, 572, 628, 1317, 1318, 1319, 1320, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1236, 0, 0, 0, 0, 3408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3410, 254, 256, 255, 257, 258, 259, 260, 1242, 261,
	262, 1243, 1244, 1245, 0, 1246, 578, 1247, 1248, 1249,
	1250, 263, 264, 1108, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 1251, 583, 272, 273,
	274, 275, 276, 277, 1252, 1253, 0, 278, 584, 585,
	586, 1254, 279, 280, 587, 1255, 1322, 1256, 281, 282,
	283, 284, 285, 286, 287, 0, 1257, 289, 290, 291,
	288, 292, 1258, 293, 0, 294, 295, 296, 297, 298,
	299, 1259, 300, 301, 302, 1109, 303, 304, 1260, 1261,
	1263, 1262, 1264, 1265, 1266, 305, 306, 307, 308, 0,
	309, 588, 589, 1267, 313, 310, 311, 1268, 314, 312,
	1269, 315, 316, 317, 1270, 1271, 318, 319, 320, 1272,
	321, 322, 1273, 323, 324, 325, 1274, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 1275, 251, 1276, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 1277, 343, 1278,
	1279, 1110, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 1280, 354, 596, 1281, 597, 355,
	1282, 356, 357, 358, 359, 360, 598, 599, 600, 435,
	1112, 361, 362, 1283, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 1284, 1111, 369, 601, 602,
	1285, 603, 1286, 371, 372, 1113, 604, 1114, 373, 374,
	375, 1115, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 1287, 383, 385, 384, 1288, 386, 605, 1116,
	387, 388, 1117, 1289, 389, 0, 0, 0, 390, 391,
	1290, 1291, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1118, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1119, 422, 1292, 253, 1120, 432,
	433, 1293, 606, 434, 607, 436, 437, 1294, 0, 438,
	0, 1295, 1296, 440, 441, 442, 1297, 1298, 443, 444,
	608, 1121, 445, 1122, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 1299, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 1300, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 1301, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 1302, 489, 490, 491, 1123, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 1303, 512, 513,
	511, 514, 515, 516, 1304, 517, 501, 502, 518, 519,
	1124, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	1305, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 1306, 538, 539, 0, 537, 1307,
	540, 541, 542, 543, 544, 545, 333, 546, 1308, 547,
	619, 620, 621, 622, 1309, 556, 1310, 548, 549, 550,
	623, 551, 624, 1311, 552, 553, 554, 555, 0, 557,
	558, 1312, 1313, 559, 560, 561, 563, 564, 562, 565,
	1314, 566, 1315, 0, 567, 568, 569, 625, 626, 627,
	1316, 571, 570, 572, 628, 1317, 1318, 1319, 1320, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	1236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3762, 254, 256, 255,
	257, 258, 259, 260, 1242, 261, 262, 1243, 1244, 1245,
	0, 1246, 578, 1247, 1248, 1249, 1250, 263, 264, 1108,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 1251, 583, 272, 273, 274, 275, 276, 277,
	1252, 1253, 0, 278, 584, 585, 586, 1254, 279, 280,
	587, 1255, 1322, 1256, 281, 282, 283, 284, 285, 286,
	287, 0, 1257, 289, 290, 291, 288, 292, 1258, 293,
	0, 294, 295, 296, 297, 298, 299, 1259, 300, 301,
	302, 1109, 303, 304, 1260, 1261, 1263, 1262, 1264, 1265,
	1266, 305, 306, 307, 308, 0, 309, 588, 589, 1267,
	313, 310, 311, 1268, 314, 312, 1269, 315, 316, 317,
	1270, 1271, 318, 319, 320, 1272, 321, 322, 1273, 323,
	324, 325, 1274, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 1275, 251,
	1276, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 1277, 343, 1278, 1279, 1110, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	1280, 354, 596, 1281, 597, 355, 1282, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 1112, 361, 362, 1283,
	363, 364, 365, 366, 0, 0, 0, 252, 367, 368,
	370, 1284, 1111, 369, 601, 602, 1285, 603, 1286, 371,
	372, 1113, 604, 1114, 373, 374, 375, 1115, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 1287, 383,
	385, 384, 1288, 386, 605, 1116, 387, 388, 1117, 1289,
	389, 0, 0, 0, 390, 391, 1290, 1291, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1118, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1119, 422, 1292, 253, 1120, 432, 433, 1293, 606, 434,
	607, 436, 437, 1294, 0, 438, 0, 1295, 1296, 440,
	441, 442, 1297, 1298, 443, 444, 608, 1121, 445, 1122,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 1299, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 1300, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 1301, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	1302, 489, 490, 491, 1123, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 1303, 512, 513, 511, 514, 515, 516,
	1304, 517, 501, 502, 518, 519, 1124, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 1305, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	1306, 538, 539, 0, 537, 1307, 540, 541, 542, 543,
	544, 545, 333, 546, 1308, 547, 619, 620, 621, 622,
	1309, 556, 1310, 548, 549, 550, 623, 551, 624, 1311,
	552, 553, 554, 555, 0, 557, 558, 1312, 1313, 559,
	560, 561, 563, 564, 562, 565, 1314, 566, 1315, 0,
	567, 568, 569, 625, 626, 627, 1316, 571, 570, 572,
	628, 1317, 1318, 1319, 1320, 573, 574, 629, 575, 576,
	577, 1236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3933, 254, 256,
	255, 257, 258, 259, 260, 1242, 261, 262, 1243, 1244,
	1245, 0, 1246, 578, 1247, 1248, 1249, 1250, 263, 264,
	1108, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 1251, 583, 272, 273, 274, 275, 276,
	277, 1252, 1253, 0, 278, 584, 585, 586, 1254, 279,
	280, 587, 1255, 1322, 1256, 281, 282, 283, 284, 285,
	286, 287, 0, 1257, 289, 290, 291, 288, 292, 1258,
	293, 0, 294, 295, 296, 297, 298, 299, 1259, 300,
	301, 302, 1109, 303, 304, 1260, 1261, 1263, 1262, 1264,
	1265, 1266, 305, 306, 307, 308, 0, 309, 588, 589,
	1267, 313, 310, 311, 1268, 314, 312, 1269, 315, 316,
	317, 1270, 1271, 318, 319, 320, 1272, 321, 322, 1273,
	323, 324, 325, 1274, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 591, 592, 1275,
	251, 1276, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 1277, 343, 1278, 1279, 1110, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 1280, 354, 596, 1281, 597, 355, 1282, 356, 357,
	358, 359, 360, 598, 599, 600, 435, 1112, 361, 362,
	1283, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 1284, 1111, 369, 601, 602, 1285, 603, 1286,
	371, 372, 1113, 604, 1114, 373, 374, 375, 1115, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 1287,
	383, 385, 384, 1288, 386, 605, 1116, 387, 388, 1117,
	1289, 389, 0, 0, 0, 390, 391, 1290, 1291, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1118, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1119, 422, 1292, 253, 1120, 432, 433, 1293, 606,
	434, 607, 436, 437, 1294, 0, 438, 0, 1295, 1296,
	440, 441, 442, 1297, 1298, 443, 444, 608, 1121, 445,
	1122, 609, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 1299, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 612, 464, 613, 465, 466, 1300,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 1301, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 1302, 489, 490, 491, 1123, 492, 493, 494, 495,
	615, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 1303, 512, 513, 511, 514, 515,
	516, 1304, 517, 501, 502, 518, 519, 1124, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 1305, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	618, 1306, 538, 539, 0, 537, 1307, 540, 541, 542,
	543, 544, 545, 333, 546, 1308, 547, 619, 620, 621,
	622, 1309, 556, 1310, 548, 549, 550, 623, 551, 624,
	1311, 552, 553, 554, 555, 0, 557, 558, 1312, 1313,
	559, 560, 561, 563, 564, 562, 565, 1314, 566, 1315,
	0, 567, 568, 569, 625, 626, 627, 1316, 571, 570,
	572, 628, 1317, 1318, 1319, 1320, 573, 574, 629, 575,
	576, 577, 1236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3822, 254,
	256, 255, 257, 258, 259, 260, 1242, 261, 262, 1243,
	1244, 1245, 0, 1246, 578, 1247, 1248, 1249, 1250, 263,
	264, 1108, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 1251, 583, 272, 273, 274, 275,
	276, 277, 1252, 1253, 0, 278, 584, 585, 586, 1254,
	279, 280, 587, 1255, 1322, 1256, 281, 282, 283, 284,
	285, 286, 287, 0, 1257, 289, 290, 291, 288, 292,
	1258, 293, 0, 294, 295, 296, 297, 298, 299, 1259,
	300, 301, 302, 1109, 303, 304, 1260, 1261, 1263, 1262,
	1264, 1265, 1266, 305, 306, 307, 308, 0, 309, 588,
	589, 1267, 313, 310, 311, 1268, 314, 312, 1269, 315,
	316, 317, 1270, 1271, 318, 319, 320, 1272, 321, 322,
	1273, 323, 324, 325, 1274, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	1275, 251, 1276, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 1277, 343, 1278, 1279, 1110,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 1280, 354, 596, 1281, 597, 355, 1282, 356,
	357, 358, 359, 360, 598, 599, 600, 435, 1112, 361,
	362, 1283, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 1284, 1111, 369, 601, 602, 1285, 603,
	1286, 371, 372, 1113, 604, 1114, 373, 374, 375, 1115,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	1287, 383, 385, 384, 1288, 386, 605, 1116, 387, 388,
	1117, 1289, 389, 0, 0, 0, 390, 391, 1290, 1291,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1118,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1119, 422, 1292, 253, 1120, 432, 433, 1293,
	606, 434, 607, 436, 437, 1294, 0, 438, 0, 1295,
	1296, 440, 441, 442, 1297, 1298, 443, 444, 608, 1121,
	445, 1122, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 1299, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	1300, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 1301, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 1302, 489, 490, 491, 1123, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 1303, 512, 513, 511, 514,
	515, 516, 1304, 517, 501, 502, 518, 519, 1124, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 1305, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 1306, 538, 539, 0, 537, 1307, 540, 541,
	542, 543, 544, 545, 333, 546, 1308, 547, 619, 620,
	621, 622, 1309, 556, 1310, 548, 549, 550, 623, 551,
	624, 1311, 552, 553, 554, 555, 0, 557, 558, 1312,
	1313, 559, 560, 561, 563, 564, 562, 565, 1314, 566,
	1315, 0, 567, 568, 569, 625, 626, 627, 1316, 571,
	570, 572, 628, 1317, 1318, 1319, 1320, 573, 574, 629,
	575, 576, 577, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3692,
	254, 256, 255, 257, 258, 259, 260, 1242, 261, 262,
	1243, 1244, 1245, 0, 1246, 578, 1247, 1248, 1249, 1250,
	263, 264, 1108, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 1251, 583, 272, 273, 274,
	275, 276, 277, 1252, 1253, 0, 278, 584, 585, 586,
	1254, 279, 280, 587, 1255, 1322, 1256, 281, 282, 283,
	284, 285, 286, 287, 0, 1257, 289, 290, 291, 288,
	292, 1258, 293, 0, 294, 295, 296, 297, 298, 299,
	1259, 300, 301, 302, 1109, 303, 304, 1260, 1261, 1263,
	1262, 1264, 1265, 1266, 305, 306, 307, 308, 0, 309,
	588, 589, 1267, 313, 310, 311, 1268, 314, 312, 1269,
	315, 316, 317, 1270, 1271, 318, 319, 320, 1272, 321,
	322, 1273, 323, 324, 325, 1274, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 591,
	592, 1275, 251, 1276, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 1277, 343, 1278, 1279,
	1110, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 1280, 354, 596, 1281, 597, 355, 1282,
	356, 357, 358, 359, 360, 598, 599, 600, 435, 1112,
	361, 362, 1283, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 1284, 1111, 369, 601, 602, 1285,
	603, 1286, 371, 372, 1113, 604, 1114, 373, 374, 375,
	1115, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 1287, 383, 385, 384, 1288, 386, 605, 1116, 387,
	388, 1117, 1289, 389, 0, 0, 0, 390, 391, 1290,
	1291, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1118, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1119, 422, 1292, 253, 1120, 432, 433,
	1293, 606, 434, 607, 436, 437, 1294, 0, 438, 0,
	1295, 1296, 440, 441, 442, 1297, 1298, 443, 444, 608,
	1121, 445, 1122, 609, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 1299, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 612, 464, 613, 465,
	466, 1300, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 1301, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 1302, 489, 490, 491, 1123, 492, 493,
	494, 495, 615, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 1303, 512, 513, 511,
	514, 515, 516, 1304, 517, 501, 502, 518, 519, 1124,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 1305,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 618, 1306, 538, 539, 0, 537, 1307, 540,
	541, 542, 543, 544, 545, 333, 546, 1308, 547, 619,
	620, 621, 622, 1309, 556, 1310, 548, 549, 550, 623,
	551, 624, 1311, 552, 553, 554, 555, 0, 557, 558,
	1312, 1313, 559, 560, 561, 563, 564, 562, 565, 1314,
	566, 1315, 0, 567, 568, 569, 625, 626, 627, 1316,
	571, 570, 572, 628, 1317, 1318, 1319, 1320, 573, 574,
	629, 575, 576, 577, 1236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3426, 254, 256, 255, 257, 258, 259, 260, 1242, 261,
	262, 1243, 1244, 1245, 0, 1246, 578, 1247, 1248, 1249,
	1250, 263, 264, 1108, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 1251, 583, 272, 273,
	274, 275, 276, 277, 1252, 1253, 0, 278, 584, 585,
	586, 1254, 279, 280, 587, 1255, 1322, 1256, 281, 282,
	283, 284, 285, 286, 287, 0, 1257, 289, 290, 291,
	288, 292, 1258, 293, 0, 294, 295, 296, 297, 298,
	299, 1259, 300, 301, 302, 1109, 303, 304, 1260, 1261,
	1263, 1262, 1264, 1265, 1266, 305, 306, 307, 308, 0,
	309, 588, 589, 1267, 313, 310, 311, 1268, 314, 312,
	1269, 315, 316, 317, 1270, 1271, 318, 319, 320, 1272,
	321, 322, 1273, 323, 324, 325, 1274, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 1275, 251, 1276, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 1277, 343, 1278,
	1279, 1110, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 1280, 354, 596, 1281, 597, 355,
	1282, 356, 357, 358, 359, 360, 598, 599, 600, 435,
	1112, 361, 362, 1283, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 1284, 1111, 369, 601, 602,
	1285, 603, 1286, 371, 372, 1113, 604, 1114, 373, 374,
	375, 1115, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 1287, 383, 385, 384, 1288, 386, 605, 1116,
	387, 388, 1117, 1289, 389, 0, 0, 0, 390, 391,
	1290, 1291, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1118, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1119, 422, 1292, 253, 1120, 432,
	433, 1293, 606, 434, 607, 436, 437, 1294, 0, 438,
	0, 1295, 1296, 440, 441, 442, 1297, 1298, 443, 444,
	608, 1121, 445, 1122, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 1299, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 1300, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 1301, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 1302, 489, 490, 491, 1123, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 1303, 512, 513,
	511, 514, 515, 516, 1304, 517, 501, 502, 518, 519,
	1124, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	1305, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 1306, 538, 539, 0, 537, 1307,
	540, 541, 542, 543, 544, 545, 333, 546, 1308, 547,
	619, 620, 621, 622, 1309, 556, 1310, 548, 549, 550,
	623, 551, 624, 1311, 552, 553, 554, 555, 0, 557,
	558, 1312, 1313, 559, 560, 561, 563, 564, 562, 565,
	1314, 566, 1315, 0, 567, 568, 569, 625, 626, 627,
	1316, 571, 570, 572, 628, 1317, 1318, 1319, 1320, 573,
	574, 629, 575, 576, 577, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3253, 254, 256, 255, 257, 258, 259, 260, 1242,
	261, 262, 1243, 1244, 1245, 0, 1246, 578, 1247, 1248,
	1249, 1250, 263, 264, 1108, 265, 266, 267, 268, 269,
	579, 580, 0, 270, 581, 271, 582, 1251, 583, 272,
	273, 274, 275, 276, 277, 1252, 1253, 0, 278, 584,
	585, 586, 1254, 279, 280, 587, 1255, 1322, 1256, 281,
	282, 283, 284, 285, 286, 287, 0, 1257, 289, 290,
	291, 288, 292, 1258, 293, 0, 294, 295, 296, 297,
	298, 299, 1259, 300, 301, 302, 1109, 303, 304, 1260,
	1261, 1263, 1262, 1264, 1265, 1266, 305, 306, 307, 308,
	0, 309, 588, 589, 1267, 313, 310, 311, 1268, 314,
	312, 1269, 315, 316, 317, 1270, 1271, 318, 319, 320,
	1272, 321, 322, 1273, 323, 324, 325, 1274, 326, 327,
	590, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 591, 592, 1275, 251, 1276, 0, 0, 0, 0,
	339, 340, 341, 593, 0, 0, 0, 342, 1277, 343,
	1278, 1279, 1110, 344, 345, 594, 595, 346, 347, 348,
	349, 350, 351, 352, 353, 1280, 354, 596, 1281, 597,
	355, 1282, 356, 357, 358, 359, 360, 598, 599, 600,
	435, 1112, 361, 362, 1283, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 1284, 1111, 369, 601,
	602, 1285, 603, 1286, 371, 372, 1113, 604, 1114, 373,
	374, 375, 1115, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 1287, 383, 385, 384, 1288, 386, 605,
	1116, 387, 388, 1117, 1289, 389, 0, 0, 0, 390,
	391, 1290, 1291, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1118, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1119, 422, 1292, 253, 1120,
	432, 433, 1293, 606, 434, 607, 436, 437, 1294, 0,
	438, 0, 1295, 1296, 440, 441, 442, 1297, 1298, 443,
	444, 608, 1121, 445, 1122, 609, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 1299, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 612, 464,
	613, 465, 466, 1300, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 614, 475, 477, 476, 478, 1301, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 1302, 489, 490, 491, 1123,
	492, 493, 494, 495, 615, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 1303, 512,
	513, 511, 514, 515, 516, 1304, 517, 501, 502, 518,
	519, 1124, 520, 521, 522, 523, 524, 525, 616, 0,
	526, 1305, 527, 528, 529, 530, 503, 531, 536, 617,
	532, 533, 534, 535, 618, 1306, 538, 539, 0, 537,
	1307, 540, 541, 542, 543, 544, 545, 333, 546, 1308,
	547, 619, 620, 621, 622, 1309, 556, 1310, 548, 549,
	550, 623, 551, 624, 1311, 552, 553, 554, 555, 0,
	557, 558, 1312, 1313, 559, 560, 561, 563, 564, 562,
	565, 1314, 566, 1315, 0, 567, 568, 569, 625, 626,
	627, 1316, 571, 570, 572, 628, 1317, 1318, 1319, 1320,
	573, 574, 629, 575, 576, 577, 1236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2380, 254, 256, 255, 257, 258, 259, 260,
	1242, 261, 262, 1243, 1244, 1245, 0, 1246, 578, 1247,
	1248, 1249, 1250, 263, 264, 1108, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 1251, 583,
	272, 273, 274, 275, 276, 277, 1252, 1253, 0, 278,
	584, 585, 586, 1254, 279, 280, 587, 1255, 1322, 1256,
	281, 282, 283, 284, 285, 286, 287, 0, 1257, 289,
	290, 291, 288, 292, 1258, 293, 0, 294, 295, 296,
	297, 298, 299, 1259, 300, 301, 302, 1109, 303, 304,
	1260, 1261, 1263, 1262, 1264, 1265, 1266, 305, 306, 307,
	308, 0, 309, 588, 589, 1267, 313, 310, 311, 1268,
	314, 312, 1269, 315, 316, 317, 1270, 1271, 318, 319,
	320, 1272, 321, 322, 1273, 323, 324, 325, 1274, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 1275, 251, 1276, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 1277,
	343, 1278, 1279, 1110, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 1280, 354, 596, 1281,
	597, 355, 1282, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 1112, 361, 362, 1283, 363, 364, 365, 366,
	0, 0, 0, 252, 367, 368, 370, 1284, 1111, 369,
	601, 602, 1285, 603, 1286, 371, 372, 1113, 604, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 1287, 383, 385, 384, 1288, 386,
	605, 1116, 387, 388, 1117, 1289, 389, 0, 0, 0,
	390, 391, 1290, 1291, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 1292, 253,
	1120, 432, 433, 1293, 606, 434, 607, 436, 437, 1294,
	0, 438, 0, 1295, 1296, 440, 441, 442, 1297, 1298,
	443, 444, 608, 1121, 445, 1122, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 1299, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 1300, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 1301,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 1302, 489, 490, 491,
	1123, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 1303,
	512, 513, 511, 514, 515, 516, 1304, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 1305, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 1306, 538, 539, 0,
	537, 1307, 540, 541, 542, 543, 544, 545, 333, 546,
	1308, 547, 619, 620, 621, 622, 1309, 556, 1310, 548,
	549, 550, 623, 551, 624, 1311, 552, 553, 554, 555,
	0, 557, 558, 1312, 1313, 559, 560, 561, 563, 564,
	562, 565, 1314, 566, 1315, 0, 567, 568, 569, 625,
	626, 627, 1316, 571, 570, 572, 628, 1317, 1318, 1319,
	1320, 573, 574, 629, 575, 576, 577, 1334, 0, 1236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2051, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 1242, 261, 262, 1243, 1244, 1245, 0,
	1246, 578, 1247, 1248, 1249, 1250, 263, 264, 1108, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 1251, 583, 272, 273, 274, 275, 276, 277, 1252,
	1253, 0, 278, 584, 585, 586, 1254, 279, 280, 587,
	1255, 1322, 1256, 281, 282, 283, 284, 285, 286, 287,
	0, 1257, 289, 290, 291, 288, 292, 1258, 293, 0,
	294, 295, 296, 297, 298, 299, 1259, 300, 301, 302,
	1109, 303, 304, 1260, 1261, 1263, 1262, 1264, 1265, 1266,
	305, 306, 307, 308, 0, 309, 588, 589, 1267, 313,
	310, 311, 1268, 314, 312, 1269, 315, 316, 317, 1270,
	1271, 318, 319, 320, 1272, 321, 322, 1273, 323, 324,
	325, 1274, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 1275, 251, 1276,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 1277, 343, 1278, 1279, 1110, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 1280,
	354, 596, 1281, 597, 355, 1282, 356, 357, 358, 359,
	360, 598, 599, 600, 435, 1112, 361, 362, 1283, 363,
	364, 365, 366, 0, 0, 0, 252, 367, 368, 370,
	1284, 1111, 369, 601, 602, 1285, 603, 1286, 371, 372,
	1113, 604, 1114, 373, 374, 375, 1115, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 1287, 383, 385,
	384, 1288, 386, 605, 1116, 387, 388, 1117, 1289, 389,
	0, 0, 0, 390, 391, 1290, 1291, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1118, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1119,
	422, 1292, 253, 1120, 432, 433, 1293, 606, 434, 607,
	436, 437, 1294, 0, 438, 0, 1295, 1296, 440, 441,
	442, 1297, 1298, 443, 444, 608, 1121, 445, 1122, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 1299, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 1300, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 1301, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 1302,
	489, 490, 491, 1123, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 1303, 512, 513, 511, 514, 515, 516, 1304,
	517, 501, 502, 518, 519, 1124, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 1305, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 1306,
	538, 539, 0, 537, 1307, 540, 541, 542, 543, 544,
	545, 333, 546, 1308, 547, 619, 620, 621, 622, 1309,
	556, 1310, 548, 549, 550, 623, 551, 624, 1311, 552,
	553, 554, 555, 0, 557, 558, 1312, 1313, 559, 560,
	561, 563, 564, 562, 565, 1314, 566, 1315, 0, 567,
	568, 569, 625, 626, 627, 1316, 571, 570, 572, 628,
	1317, 1318, 1319, 1320, 573, 574, 629, 575, 576, 577,
	1233, 0, 1236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 1242, 261, 262, 1243,
	1244, 1245, 0, 1246, 578, 1247, 1248, 1249, 1250, 263,
	264, 1108, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 1251, 583, 272, 273, 274, 275,
	276, 277, 1252, 1253, 0, 278, 584, 585, 586, 1254,
	279, 280, 587, 1255, 1322, 1256, 281, 282, 283, 284,
	285, 286, 287, 0, 1257, 289, 290, 291, 288, 292,
	1258, 293, 0, 294, 295, 296, 297, 298, 299, 1259,
	300, 301, 302, 1109, 303, 304, 1260, 1261, 1263, 1262,
	1264, 1265, 1266, 305, 306, 307, 308, 0, 309, 588,
	589, 1267, 313, 310, 311, 1268, 314, 312, 1269, 315,
	316, 317, 1270, 1271, 318, 319, 320, 1272, 321, 322,
	1273, 323, 324, 325, 1274, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	1275, 251, 1276, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 1277, 343, 1278, 1279, 1110,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 1280, 354, 596, 1281, 597, 355, 1282, 356,
	357, 358, 359, 360, 598, 599, 600, 435, 1112, 361,
	362, 1283, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 1284, 1111, 369, 601, 602, 1285, 603,
	1286, 371, 372, 1113, 604, 1114, 373, 374, 375, 1115,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	1287, 383, 385, 384, 1288, 386, 605, 1116, 387, 388,
	1117, 1289, 389, 0, 0, 0, 390, 391, 1290, 1291,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1118,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1119, 422, 1292, 253, 1120, 432, 433, 1293,
	606, 434, 607, 436, 437, 1294, 0, 438, 0, 1295,
	1296, 440, 441, 442, 1297, 1298, 443, 444, 608, 1121,
	445, 1122, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 1299, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	1300, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 1301, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 1302, 489, 490, 491, 1123, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 1303, 512, 513, 511, 514,
	515, 516, 1304, 517, 501, 502, 518, 519, 1124, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 1305, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 1306, 538, 539, 0, 537, 1307, 540, 541,
	542, 543, 544, 545, 333, 546, 1308, 547, 619, 620,
	621, 622, 1309, 556, 1310, 548, 549, 550, 623, 551,
	624, 1311, 552, 553, 554, 555, 0, 557, 558, 1312,
	1313, 559, 560, 561, 563, 564, 562, 565, 1314, 566,
	1315, 0, 567, 568, 569, 625, 626, 627, 1316, 571,
	570, 572, 628, 1317, 1318, 1319, 1320, 573, 574, 629,
	575, 576, 577, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 1242, 261, 262,
	1243, 1244, 1245, 0, 1246, 578, 1247, 1248, 1249, 1250,
	263, 264, 1108, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 1251, 583, 272, 273, 274,
	275, 276, 277, 1252, 1253, 0, 278, 584, 585, 586,
	1254, 279, 280, 587, 1255, 1322, 1256, 281, 282, 283,
	284, 285, 286, 287, 0, 1257, 289, 290, 291, 288,
	292, 1258, 293, 0, 294, 295, 296, 297, 298, 299,
	1259, 300, 301, 302, 1109, 303, 304, 1260, 1261, 1263,
	1262, 1264, 1265, 1266, 305, 306, 307, 308, 0, 309,
	588, 589, 1267, 313, 310, 311, 1268, 314, 312, 1269,
	315, 316, 317, 1270, 1271, 318, 319, 320, 1272, 321,
	322, 1273, 323, 324, 325, 1274, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 591,
	592, 1275, 251, 1276, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 1277, 343, 1278, 1279,
	1110, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 1280, 354, 596, 1281, 597, 355, 1282,
	356, 357, 358, 359, 360, 598, 599, 600, 435, 1112,
	361, 362, 1283, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 1284, 1111, 369, 601, 602, 1285,
	603, 1286, 371, 372, 1113, 604, 1114, 373, 374, 375,
	1115, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 1287, 383, 385, 384, 1288, 386, 605, 1116, 387,
	388, 1117, 1289, 389, 0, 0, 0, 390, 391, 1290,
	1291, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1118, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1119, 422, 1292, 253, 1120, 432, 433,
	1293, 606, 434, 607, 436, 437, 1294, 0, 438, 0,
	1295, 1296, 440, 441, 442, 1297, 1298, 443, 444, 608,
	1121, 445, 1122, 609, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 1299, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 612, 464, 613, 465,
	466, 1300, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 1301, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 1302, 489, 490, 491, 1123, 492, 493,
	494, 495, 615, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 1303, 512, 513, 511,
	514, 515, 516, 1304, 517, 501, 502, 518, 519, 1124,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 1305,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 618, 1306, 538, 539, 0, 537, 1307, 540,
	541, 542, 543, 544, 545, 333, 546, 1308, 547, 619,
	620, 621, 622, 1309, 556, 1310, 548, 549, 550, 623,
	551, 624, 1311, 552, 553, 554, 555, 0, 557, 558,
	1312, 1313, 559, 560, 561, 563, 564, 562, 565, 1314,
	566, 1315, 0, 567, 568, 569, 625, 626, 627, 1316,
	571, 570, 572, 628, 1317, 1318, 1319, 1320, 573, 574,
	629, 575, 576, 577, 2355, 0, 1044, 1016, 1017, 1018,
	1014, 1015, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	2352, 261, 262, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 263, 264, 1108, 265, 266, 267, 268,
	269, 579, 1081, 0, 270, 1088, 271, 1087, 0, 1098,
	272, 273, 274, 275, 276, 277, 1034, 1067, 1001, 278,
	1128, 1129, 586, 0, 279, 280, 1074, 0, 1055, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 1109, 303, 304,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307,
	308, 1091, 309, 1085, 1084, 1005, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 2353, 0, 318, 1076,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 1011, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 1099, 1100, 1023, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 1083, 0, 0, 0, 342, 0,
	343, 0, 0, 1110, 344, 345, 1096, 1097, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 1106, 0,
	1033, 355, 0, 356, 357, 358, 359, 360, 1069, 1070,
	1073, 435, 1112, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 252, 367, 368, 370, 0, 1111, 369,
	1078, 1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	1107, 1116, 387, 388, 1117, 0, 389, 0, 0, 0,
	390, 391, 1062, 1061, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 1002, 253,
	1120, 432, 433, 1024, 1072, 434, 1086, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 1121, 445, 1122, 1101, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 1102,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1082, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	1123, 492, 493, 494, 495, 1012, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 1065, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 1080,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	1127, 532, 533, 534, 535, 1103, 0, 538, 539, 1000,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 2351, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	0, 997, 998, 2354, 0, 0, 0, 0, 0, 0,
	1028, 2350, 0, 990, 1026, 1044, 1016, 1017, 1018, 1014,
	1015, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 1068, 1032, 0,
	0, 0, 263, 264, 1108, 265, 266, 267, 268, 269,
	579, 1081, 0, 270, 1088, 271, 1087, 0, 1098, 272,
	273, 274, 275, 276, 277, 1034, 1067, 1001, 278, 1128,
	1129, 586, 0, 279, 280, 1074, 0, 1055, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 1109, 303, 304, 1058,
	1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308,
	1091, 309, 1085, 1084, 1005, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 1076, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	1011, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 1099, 1100, 1023, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 1083, 0, 0, 0, 342, 0, 343,
	0, 0, 1110, 344, 345, 1096, 1097, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 1106, 0, 1033,
	355, 0, 356, 357, 358, 359, 360, 1069, 1070, 1073,
	435, 1112, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 1111, 369, 1078,
	1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114, 373,
	374, 375, 1115, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1107,
	1116, 387, 388, 1117, 0, 389, 0, 0, 0, 390,
	391, 1062, 1061, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1118, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1119, 422, 1002, 253, 1120,
	432, 433, 1024, 1072, 434, 1086, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 1121, 445, 1122, 1101, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 1102, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1082, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 1123,
	492, 493, 494, 495, 1012, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 214, 512,
	513, 511, 514, 515, 516, 1065, 517, 501, 502, 518,
	519, 1124, 520, 521, 522, 523, 524, 525, 1080, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 1127,
	532, 533, 534, 535, 1103, 0, 538, 539, 1000, 537,
	216, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 1092, 1093, 1094, 1095, 0, 556, 0, 548, 549,
	550, 1104, 551, 1105, 1022, 552, 553, 554, 555, 0,
	557, 558, 0, 1006, 559, 560, 561, 563, 564, 562,
	565, 1066, 566, 0, 0, 567, 568, 569, 1513, 1089,
	1126, 0, 571, 570, 572, 628, 0, 0, 0, 208,
	573, 574, 629, 575, 576, 577, 1003, 209, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 1750,
	1748, 0, 0, 1026, 0, 0, 0, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 263,
	264, 1108, 265, 266, 267, 268, 269, 579, 1081, 0,
	270, 1088, 271, 1087, 0, 1098, 272, 273, 274, 275,
	276, 277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0,
	279, 280, 1074, 0, 1055, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 305, 306, 307, 308, 1091, 309, 1085,
	1084, 1005, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 1076, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 1011, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 1099, 1100,
	1023, 251, 0, 0, 0, 0, 0, 339, 340, 341,
	1083, 0, 0, 0, 342, 0, 343, 0, 0, 1110,
	344, 345, 1096, 1097, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 1106, 0, 1033, 355, 0, 356,
	357, 358, 359, 360, 1069, 1070, 1073, 435, 1112, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 0, 1111, 369, 1078, 1079, 0, 1039,
	0, 371, 372, 1113, 1071, 1114, 373, 374, 375, 1115,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1107, 1116, 387, 388,
	1117, 0, 389, 0, 0, 0, 390, 391, 1062, 1061,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1118,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1119, 422, 1002, 253, 1120, 432, 433, 1024,
	1072, 434, 1086, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 1121,
	445, 1122, 1101, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 1102, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	1082, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 1123, 492, 493, 494,
	495, 1012, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 214, 512, 513, 511, 514,
	515, 516, 1065, 517, 501, 502, 518, 519, 1124, 520,
	521, 522, 523, 524, 525, 1080, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 1127, 532, 533, 534,
	535, 1103, 0, 538, 539, 1000, 537, 216, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 1513, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 208, 573, 574, 629,
	575, 576, 577, 1003, 209, 0, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 997, 998, 1044,
	1016, 1017, 1018, 1014, 1015, 1027, 1750, 2928, 0, 0,
	1026, 0, 0, 0, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 1068, 1032, 0, 0, 0, 263, 264, 1108, 265,
	266, 267, 268, 269, 579, 1081, 0, 270, 1088, 271,
	1087, 0, 1098, 272, 273, 274, 275, 276, 277, 1034,
	1067, 1001, 278, 1128, 1129, 586, 0, 279, 280, 1074,
	0, 1055, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	1109, 303, 304, 1058, 1056, 1057, 1064, 1060, 1059, 1063,
	305, 306, 307, 308, 1091, 309, 1085, 1084, 1005, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 1076, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 1011, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 1099, 1100, 1023, 251, 0,
	0, 0, 0, 0, 339, 340, 341, 1083, 0, 0,
	0, 342, 0, 343, 0, 0, 1110, 344, 345, 1096,
	1097, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 1106, 0, 1033, 355, 0, 356, 357, 358, 359,
	360, 1069, 1070, 1073, 435, 1112, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 252, 367, 368, 370,
	0, 1111, 369, 1078, 1079, 0, 1039, 0, 371, 372,
	1113, 1071, 1114, 373, 374, 375, 1115, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 1107, 1116, 387, 388, 1117, 0, 389,
	0, 0, 0, 390, 391, 1062, 1061, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1118, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1119,
	422, 1002, 253, 1120, 432, 433, 1024, 1072, 434, 1086,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 1121, 445, 1122, 1101,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 1102, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 1082, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 1123, 492, 493, 494, 495, 1012, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 214, 512, 513, 511, 514, 515, 516, 1065,
	517, 501, 502, 518, 519, 1124, 520, 521, 522, 523,
	524, 525, 1080, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 1127, 532, 533, 534, 535, 1103, 0,
	538, 539, 1000, 537, 216, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 1092, 1093, 1094, 1095, 0,
	556, 0, 548, 549, 550, 1104, 551, 1105, 1022, 552,
	553, 554, 555, 0, 557, 558, 0, 1006, 559, 560,
	561, 563, 564, 562, 565, 1066, 566, 0, 0, 567,
	568, 569, 1513, 1089, 1126, 0, 571, 570, 572, 628,
	0, 0, 0, 208, 573, 574, 629, 575, 576, 577,
	1003, 209, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 997, 998, 1044, 1016, 1017, 1018,
	1014, 1015, 1027, 1750, 1748, 0, 0, 1026, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 263, 264, 1108, 265, 266, 267, 268,
	269, 579, 1081, 0, 270, 1088, 271, 1087, 2483, 1098,
	272, 273, 274, 275, 276, 277, 1034, 1067, 1001, 278,
	1128, 1129, 586, 0, 279, 280, 1074, 0, 1055, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 1109, 303, 304,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307,
	308, 1091, 309, 1085, 1084, 1005, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 1076,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 1011, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 1099, 1100, 1023, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 1083, 0, 0, 0, 342, 0,
	343, 0, 2488, 1110, 344, 345, 1096, 1097, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 1106, 0,
	1033, 355, 0, 356, 357, 358, 359, 360, 1069, 1070,
	1073, 435, 1112, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 252, 367, 368, 370, 0, 1111, 369,
	1078, 1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 2484, 386,
	1107, 1116, 387, 388, 1117, 0, 389, 0, 0, 0,
	390, 391, 1062, 1061, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 1002, 253,
	1120, 432, 433, 1024, 1072, 434, 1086, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 1121, 445, 1122, 1101, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 1102,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1082, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	1123, 492, 493, 494, 495, 1012, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 1065, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 1080,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	1127, 532, 533, 534, 535, 1103, 0, 538, 539, 1000,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 2485, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	0, 997, 998, 0, 0, 0, 0, 0, 0, 0,
	1028, 0, 0, 2400, 1026, 1044, 1016, 1017, 1018, 1014,
	1015, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 1068, 1032, 0,
	0, 0, 263, 264, 1108, 265, 266, 267, 268, 269,
	579, 1081, 0, 270, 1088, 271, 1087, 0, 1098, 272,
	273, 274, 275, 276, 277, 1034, 1067, 1001, 278, 1128,
	1129, 586, 0, 279, 280, 1074, 0, 1055, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 1109, 303, 304, 1058,
	1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308,
	1091, 309, 1085, 1084, 1005, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 1076, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	1011, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 1099, 1100, 1023, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 1083, 0, 0, 0, 342, 0, 343,
	0, 0, 1110, 344, 345, 1096, 1097, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 1106, 0, 1033,
	355, 0, 356, 357, 358, 359, 360, 1069, 1070, 1073,
	435, 1112, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 1111, 369, 1078,
	1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114, 373,
	374, 375, 1115, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1107,
	1116, 387, 388, 1117, 0, 389, 0, 0, 0, 390,
	391, 1062, 1061, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1118, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1119, 422, 1002, 253, 1120,
	432, 433, 1024, 1072, 434, 1086, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 1121, 445, 1122, 1101, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 1102, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1082, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 1123,
	492, 493, 494, 495, 1012, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 1065, 517, 501, 502, 518,
	519, 1124, 520, 521, 522, 523, 524, 525, 1080, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 1127,
	532, 533, 534, 535, 1103, 0, 538, 539, 1000, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 1092, 1093, 1094, 1095, 0, 556, 0, 548, 549,
	550, 1104, 551, 1105, 1022, 552, 553, 554, 555, 0,
	557, 558, 0, 1006, 559, 560, 561, 563, 564, 562,
	565, 1066, 566, 0, 0, 567, 568, 569, 625, 1089,
	1126, 0, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 1003, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 0, 0, 0, 0, 0, 0, 0, 1028,
	2398, 0, 2397, 1026, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 263, 264, 1108, 265, 266, 267, 268, 269, 579,
	1081, 0, 270, 1088, 271, 1087, 0, 1098, 272, 273,
	274, 275, 276, 277, 1034, 1067, 1001, 278, 1128, 1129,
	586, 0, 279, 280, 1074, 0, 1055, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 1109, 303, 304, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308, 1091,
	309, 1085, 1084, 1005, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 1076, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 1011,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	1099, 1100, 1023, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 1083, 0, 0, 0, 342, 0, 343, 0,
	0, 1110, 344, 345, 1096, 1097, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 1106, 0, 1033, 355,
	0, 356, 357, 358, 359, 360, 1069, 1070, 1073, 435,
	1112, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 1111, 369, 1078, 1079,
	0, 1039, 0, 371, 372, 1113, 1071, 1114, 373, 374,
	375, 1115, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 1107, 1116,
	387, 388, 1117, 0, 389, 0, 0, 0, 390, 391,
	1062, 1061, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1118, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1119, 422, 1002, 253, 1120, 432,
	433, 1024, 1072, 434, 1086, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 1121, 445, 1122, 1101, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 1102, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 1082, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 1123, 492,
	493, 494, 495, 1012, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 1065, 517, 501, 502, 518, 519,
	1124, 520, 521, 522, 523, 524, 525, 1080, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 1127, 532,
	533, 534, 535, 1103, 0, 538, 539, 1000, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 999, 0, 0, 0, 0, 0, 0, 997,
	998, 0, 0, 0, 0, 0, 0, 0, 1028, 2395,
	0, 2394, 1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 1068, 1032, 0, 0, 0,
	263, 264, 1108, 265, 266, 267, 268, 269, 579, 1081,
	0, 270, 1088, 271, 1087, 0, 1098, 272, 273, 274,
	275, 276, 277, 1034, 1067, 1001, 278, 1128, 1129, 586,
	0, 279, 280, 1074, 0, 1055, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 1109, 303, 304, 1058, 1056, 1057,
	1064, 1060, 1059, 1063, 305, 306, 307, 308, 1091, 309,
	1085, 1084, 1005, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 1076, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 1011, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 1099,
	1100, 1023, 251, 0, 0, 0, 0, 0, 339, 340,
	341, 1083, 0, 0, 0, 342, 0, 343, 0, 0,
	1110, 344, 345, 1096, 1097, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 1106, 0, 1033, 355, 0,
	356, 357, 358, 359, 360, 1069, 1070, 1073, 435, 1112,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 0, 1111, 369, 1078, 1079, 0,
	1039, 0, 371, 372, 1113, 1071, 1114, 373, 374, 375,
	1115, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 1107, 1116, 387,
	388, 1117, 0, 389, 0, 0, 0, 390, 391, 1062,
	1061, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1118, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1119, 422, 1002, 253, 1120, 432, 433,
	1024, 1072, 434, 1086, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	1121, 445, 1122, 1101, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 1102, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 1082, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 1123, 492, 493,
	494, 495, 1012, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 1065, 517, 501, 502, 518, 519, 1124,
	520, 521, 522, 523, 524, 525, 1080, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 1127, 532, 533,
	534, 535, 1103, 0, 538, 539, 1000, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 1092,
	1093, 1094, 1095, 0, 556, 0, 548, 549, 550, 1104,
	551, 1105, 1022, 552, 553, 554, 555, 0, 557, 558,
	0, 1006, 559, 560, 561, 563, 564, 562, 565, 1066,
	566, 0, 0, 567, 568, 569, 625, 1089, 1126, 0,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 1003, 0, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	0, 0, 0, 0, 0, 0, 0, 1028, 2392, 0,
	2391, 1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 263,
	264, 1108, 265, 266, 267, 268, 269, 579, 1081, 0,
	270, 1088, 271, 1087, 0, 1098, 272, 273, 274, 275,
	276, 277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0,
	279, 280, 1074, 0, 1055, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 305, 306, 307, 308, 1091, 309, 1085,
	1084, 1005, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 1076, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 1011, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 1099, 1100,
	1023, 251, 0, 0, 0, 0, 0, 339, 340, 341,
	1083, 0, 0, 0, 342, 0, 343, 0, 0, 1110,
	344, 345, 1096, 1097, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 1106, 0, 1033, 355, 0, 356,
	357, 358, 359, 360, 1069, 1070, 1073, 435, 1112, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 0, 1111, 369, 1078, 1079, 0, 1039,
	0, 371, 372, 1113, 1071, 1114, 373, 374, 375, 1115,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1107, 1116, 387, 388,
	1117, 0, 389, 0, 0, 0, 390, 391, 1062, 1061,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1118,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1119, 422, 1002, 253, 1120, 432, 433, 1024,
	1072, 434, 1086, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 1121,
	445, 1122, 1101, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 1102, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	1082, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 1123, 492, 493, 494,
	495, 1012, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 1065, 517, 501, 502, 518, 519, 1124, 520,
	521, 522, 523, 524, 525, 1080, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 1127, 532, 533, 534,
	535, 1103, 0, 538, 539, 1000, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 1003, 0, 0, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 997, 998, 0,
	0, 0, 0, 0, 0, 0, 1028, 2389, 0, 1603,
	1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 1068, 1032, 0, 0, 0, 263, 264,
	1108, 265, 266, 267, 268, 269, 579, 1081, 0, 270,
	1088, 271, 1087, 0, 1098, 272, 273, 274, 275, 276,
	277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0, 279,
	280, 1074, 0, 1055, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060,
	1059, 1063, 305, 306, 307, 308, 1091, 309, 1085, 1084,
	1005, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 1076, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 1011, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 1099, 1100, 1023,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 1083,
	0, 0, 0, 342, 0, 343, 0, 0, 1110, 344,
	345, 1096, 1097, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 1106, 0, 1033, 355, 0, 356, 357,
	358, 359, 360, 1069, 1070, 1073, 435, 1112, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 1111, 369, 1078, 1079, 0, 1039, 0,
	371, 372, 1113, 1071, 1114, 373, 374, 375, 1115, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1107, 1116, 387, 388, 1117,
	0, 389, 0, 0, 0, 390, 391, 1062, 1061, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1118, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1119, 422, 1002, 253, 1120, 432, 433, 1024, 1072,
	434, 1086, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 1121, 445,
	1122, 1101, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 1102, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 1082,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 1123, 492, 493, 494, 495,
	1012, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 1065, 517, 501, 502, 518, 519, 1124, 520, 521,
	522, 523, 524, 525, 1080, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 1127, 532, 533, 534, 535,
	1103, 0, 538, 539, 1000, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 1092, 1093, 1094,
	1095, 0, 556, 0, 548, 549, 550, 1104, 551, 1105,
	1022, 552, 553, 554, 555, 0, 557, 558, 0, 1006,
	559, 560, 561, 563, 564, 562, 565, 1066, 566, 0,
	0, 567, 568, 569, 625, 1089, 1126, 0, 571, 570,
	572, 628, 1602, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 1003, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 993, 1026,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 263, 264, 1108,
	265, 266, 267, 268, 269, 579, 1081, 0, 270, 1088,
	271, 1087, 0, 1098, 272, 273, 274, 275, 276, 277,
	1034, 1067, 1001, 278, 1128, 1129, 586, 0, 279, 280,
	1074, 0, 1055, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 305, 306, 307, 308, 1091, 309, 1085, 1084, 1005,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 1076, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 1011, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 1099, 1100, 1023, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 1083, 0,
	0, 0, 342, 0, 343, 0, 0, 1110, 344, 345,
	1096, 1097, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 1106, 0, 1033, 355, 0, 356, 357, 358,
	359, 360, 1069, 1070, 1073, 435, 1112, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 252, 367, 368,
	370, 0, 1111, 369, 1078, 1079, 0, 1039, 0, 371,
	372, 1113, 1071, 1114, 373, 374, 375, 1115, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 1107, 1116, 387, 388, 1117, 0,
	389, 0, 0, 0, 390, 391, 1062, 1061, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1118, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1119, 422, 1002, 253, 1120, 432, 433, 1024, 1072, 434,
	1086, 436, 437, 0, 0, 438, 0, 1007, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 1121, 445, 1122,
	1101, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 1102, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 1082, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 1123, 492, 493, 494, 495, 1012,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	1065, 517, 501, 502, 518, 519, 1124, 520, 521, 522,
	523, 524, 525, 1080, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 1127, 532, 533, 534, 535, 1103,
	0, 538, 539, 1000, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 997, 998, 1044, 1016, 1017,
	1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 1068,
	1032, 0, 0, 0, 263, 264, 1108, 265, 266, 267,
	268, 269, 579, 1081, 0, 270, 1088, 271, 1087, 0,
	1098, 272, 273, 274, 275, 276, 277, 1034, 1067, 1001,
	278, 1128, 1129, 586, 0, 279, 280, 1074, 0, 1055,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 4203, 299, 0, 300, 301, 302, 1109, 303,
	304, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 305, 306,
	307, 308, 1091, 309, 1085, 1084, 1005, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	1076, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 1011, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 1099, 1100, 1023, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 1083, 0, 0, 0, 342,
	0, 343, 0, 0, 1110, 344, 345, 1096, 1097, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 1106,
	0, 1033, 355, 0, 356, 357, 358, 359, 360, 1069,
	1070, 1073, 435, 1112, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 252, 367, 368, 370, 0, 1111,
	369, 1078, 1079, 0, 1039, 0, 371, 372, 1113, 1071,
	1114, 373, 374, 375, 1115, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 1107, 1116, 387, 388, 1117, 0, 389, 0, 0,
	0, 390, 391, 1062, 1061, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1118, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1119, 422, 1002,
	253, 1120, 432, 433, 1024, 1072, 434, 1086, 436, 437,
	0, 0, 438, 0, 1007, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 1121, 445, 1122, 1101, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	1102, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 1082, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 1123, 492, 493, 494, 495, 1012, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 1065, 517, 501,
	502, 518, 519, 1124, 520, 521, 522, 523, 524, 525,
	1080, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 1127, 532, 533, 534, 535, 1103, 0, 538, 539,
	1000, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 1092, 1093, 1094, 1095, 0, 556, 0,
	548, 549, 550, 1104, 551, 1105, 1022, 552, 553, 554,
	555, 0, 557, 558, 0, 1006, 559, 560, 561, 563,
	564, 562, 565, 1066, 566, 0, 0, 567, 568, 569,
	625, 1089, 1126, 0, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 1003, 0,
	0, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 997, 998, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 1028, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 263, 264, 1108, 265, 266, 267, 268, 269, 579,
	1081, 0, 270, 1088, 271, 1087, 0, 1098, 272, 273,
	274, 275, 276, 277, 1034, 1067, 1001, 278, 1128, 1129,
	586, 0, 279, 280, 1074, 0, 1055, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 1109, 303, 304, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308, 1091,
	309, 1085, 1084, 1005, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 1076, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 1011,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	1099, 1100, 1023, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 1083, 0, 0, 0, 342, 0, 343, 0,
	0, 1110, 344, 345, 1096, 1097, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 1106, 0, 1033, 355,
	0, 356, 357, 358, 359, 360, 1069, 1070, 1073, 435,
	1112, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 2269, 367, 368, 370, 0, 1111, 369, 1078, 1079,
	0, 1039, 0, 371, 372, 1113, 1071, 1114, 373, 374,
	375, 1115, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 1107, 1116,
	387, 388, 1117, 0, 389, 0, 0, 0, 390, 391,
	1062, 1061, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1118, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1119, 422, 1002, 253, 1120, 432,
	433, 1024, 1072, 434, 1086, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 1121, 445, 1122, 1101, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 1102, 464, 613,
	465, 466, 2268, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 1082, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 1123, 492,
	493, 494, 495, 1012, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 1065, 517, 501, 502, 518, 519,
	1124, 520, 521, 522, 523, 524, 525, 1080, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 1127, 532,
	533, 534, 535, 1103, 0, 538, 539, 1000, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 999, 0, 0, 0, 0, 0, 0, 997,
	998, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 1028, 0,
	0, 0, 1026, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 1068, 1032, 0, 0, 0, 263, 264,
	1108, 265, 266, 267, 268, 269, 579, 1081, 0, 270,
	1088, 271, 1087, 0, 1098, 272, 273, 274, 275, 276,
	277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0, 279,
	280, 1074, 0, 1055, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060,
	1059, 1063, 305, 306, 307, 308, 1091, 309, 1085, 1084,
	1005, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 1076, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 1011, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 1099, 1100, 1023,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 1083,
	0, 0, 0, 342, 0, 343, 0, 0, 1110, 344,
	345, 1096, 1097, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 1106, 0, 1033, 355, 0, 356, 357,
	358, 359, 360, 1069, 1070, 1073, 435, 1112, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 1111, 369, 1078, 1079, 0, 1039, 0,
	371, 372, 1113, 1071, 1114, 373, 374, 375, 1115, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1107, 1116, 387, 388, 1117,
	0, 389, 0, 0, 0, 390, 391, 1062, 1061, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1118, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1119, 422, 1002, 253, 1120, 432, 433, 1024, 1072,
	434, 1086, 436, 437, 0, 0, 438, 0, 1007, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 1121, 445,
	1122, 1101, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 1102, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 1082,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 1123, 492, 493, 494, 495,
	1012, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 1065, 517, 501, 502, 518, 519, 1124, 520, 521,
	522, 523, 524, 525, 1080, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 1127, 532, 533, 534, 535,
	1103, 0, 538, 539, 1000, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 1092, 1093, 1094,
	1095, 0, 556, 0, 548, 549, 550, 1104, 551, 1105,
	1022, 552, 553, 554, 555, 0, 557, 558, 0, 1006,
	559, 560, 561, 563, 564, 562, 565, 1066, 566, 0,
	0, 567, 568, 569, 625, 1089, 1126, 0, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 1003, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 263, 264, 1108, 265, 266,
	267, 268, 269, 579, 1081, 0, 270, 1088, 271, 1087,
	0, 1098, 272, 273, 274, 275, 276, 277, 1034, 1067,
	1001, 278, 1128, 1129, 586, 0, 279, 280, 1074, 0,
	1055, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 3996, 299, 0, 300, 301, 302, 1109,
	303, 304, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 305,
	306, 307, 308, 1091, 309, 1085, 1084, 1005, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 1076, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 1011, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 1099, 1100, 1023, 251, 0, 0,
	0, 0, 0, 339, 340, 341, 1083, 0, 0, 0,
	342, 0, 343, 0, 0, 1110, 344, 345, 1096, 1097,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	1106, 0, 1033, 355, 0, 356, 357, 358, 359, 360,
	1069, 1070, 1073, 435, 1112, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 252, 367, 368, 370, 0,
	1111, 369, 1078, 1079, 0, 1039, 0, 371, 372, 1113,
	1071, 1114, 373, 374, 375, 1115, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 1107, 1116, 387, 388, 1117, 0, 389, 0,
	0, 0, 390, 391, 1062, 1061, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1118, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1119, 422,
	1002, 253, 1120, 432, 433, 1024, 1072, 434, 1086, 436,
	437, 0, 0, 438, 0, 1007, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 1121, 445, 1122, 1101, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 1102, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 1082, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 1123, 492, 493, 494, 495, 1012, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 1065, 517,
	501, 502, 518, 519, 1124, 520, 521, 522, 523, 524,
	525, 1080, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 1127, 532, 533, 534, 535, 1103, 0, 538,
	539, 1000, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 1092, 1093, 1094, 1095, 0, 556,
	0, 548, 549, 550, 1104, 551, 1105, 1022, 552, 553,
	554, 555, 0, 557, 558, 0, 1006, 559, 560, 561,
	563, 564, 562, 565, 1066, 566, 0, 0, 567, 568,
	569, 625, 1089, 1126, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 1003,
	0, 0, 0, 0, 0, 0, 999, 0, 0, 0,
	0, 0, 0, 997, 998, 1044, 1016, 1017, 1018, 1014,
	1015, 1027, 1028, 0, 0, 0, 1026, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 1068, 1032, 0,
	0, 0, 263, 264, 1108, 265, 266, 267, 268, 269,
	579, 1081, 0, 270, 1088, 271, 1087, 0, 1098, 272,
	273, 274, 275, 276, 277, 1034, 1067, 1001, 278, 1128,
	1129, 586, 0, 279, 280, 1074, 0, 1055, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 1109, 303, 304, 1058,
	1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308,
	1091, 309, 1085, 1084, 1005, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 1076, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	1011, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 1099, 1100, 1023, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 1083, 0, 0, 0, 342, 0, 343,
	0, 0, 1110, 344, 345, 1096, 1097, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 1106, 0, 1033,
	355, 0, 356, 357, 358, 359, 360, 1069, 1070, 1073,
	435, 1112, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 1111, 369, 1078,
	1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114, 373,
	374, 375, 1115, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1107,
	1116, 387, 388, 1117, 0, 389, 0, 0, 0, 390,
	391, 1062, 1061, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1118, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1119, 422, 1002, 3654, 1120,
	432, 433, 1024, 1072, 434, 1086, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 1121, 445, 1122, 1101, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 1102, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1082, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 1123,
	492, 493, 494, 495, 1012, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 1065, 517, 501, 502, 518,
	519, 1124, 520, 521, 522, 523, 524, 525, 1080, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 1127,
	532, 533, 534, 535, 1103, 0, 538, 539, 1000, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 1092, 1093, 1094, 1095, 0, 556, 0, 548, 549,
	550, 1104, 551, 1105, 1022, 552, 553, 554, 555, 0,
	557, 558, 0, 1006, 559, 560, 561, 563, 564, 562,
	565, 1066, 566, 0, 0, 567, 568, 569, 625, 1089,
	1126, 0, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 1003, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 1818, 0, 0, 0, 0, 0, 0, 1028,
	0, 0, 0, 1026, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 263, 264, 1108, 265, 266, 267, 268, 269, 579,
	1081, 0, 270, 1088, 271, 1087, 0, 1098, 272, 273,
	274, 275, 276, 277, 1034, 1067, 1001, 278, 1128, 1129,
	586, 0, 279, 280, 1074, 0, 1055, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 1109, 303, 304, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308, 1091,
	309, 1085, 1084, 1005, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 1076, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 1011,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	1099, 1100, 1023, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 1083, 0, 0, 0, 342, 0, 343, 0,
	0, 1110, 344, 345, 1096, 1097, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 1106, 0, 1033, 355,
	0, 356, 357, 358, 359, 360, 1069, 1070, 1073, 435,
	1112, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 1111, 369, 1078, 1079,
	0, 1039, 0, 371, 372, 1113, 1071, 1114, 373, 374,
	375, 1115, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 1107, 1116,
	387, 388, 1117, 0, 389, 0, 0, 0, 390, 391,
	1062, 1061, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1118, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1119, 422, 1002, 253, 1120, 432,
	433, 1024, 1072, 434, 1086, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 1121, 445, 1122, 1101, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 1102, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 1082, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 1123, 492,
	493, 494, 495, 1012, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 1065, 517, 501, 502, 518, 519,
	1124, 520, 521, 522, 523, 524, 525, 1080, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 1127, 532,
	533, 534, 535, 1103, 0, 538, 539, 1000, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	3404, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 999, 0, 0, 0, 0, 0, 0, 997,
	998, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 1028, 0,
	0, 0, 1026, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 1068, 1032, 0, 0, 0, 263, 264,
	1108, 265, 266, 267, 268, 269, 579, 1081, 0, 270,
	1088, 271, 1087, 0, 1098, 272, 273, 274, 275, 276,
	277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0, 279,
	280, 1074, 0, 1055, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060,
	1059, 1063, 305, 306, 307, 308, 1091, 309, 1085, 1084,
	1005, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 1076, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 1011, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 1099, 1100, 1023,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 1083,
	0, 0, 0, 342, 0, 343, 0, 0, 1110, 344,
	345, 1096, 1097, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 1106, 0, 1033, 355, 0, 356, 357,
	358, 359, 360, 1069, 1070, 1073, 435, 1112, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 1111, 369, 1078, 1079, 0, 1039, 0,
	371, 372, 1113, 1071, 1114, 373, 374, 375, 1115, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1107, 1116, 387, 388, 1117,
	0, 389, 0, 0, 0, 390, 391, 1062, 1061, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1118, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1119, 422, 1002, 253, 1120, 432, 433, 1024, 1072,
	434, 1086, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 1121, 445,
	1122, 1101, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 1102, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 1082,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 1123, 492, 493, 494, 495,
	1012, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 1065, 517, 501, 502, 518, 519, 1124, 520, 521,
	522, 523, 524, 525, 1080, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 1127, 532, 533, 534, 535,
	1103, 0, 538, 539, 1000, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 1092, 1093, 1094,
	1095, 0, 556, 0, 548, 549, 550, 1104, 551, 1105,
	1022, 552, 553, 554, 555, 0, 557, 558, 0, 1006,
	559, 560, 561, 563, 564, 562, 565, 1066, 566, 0,
	0, 567, 568, 569, 625, 1089, 1126, 0, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 1003, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1818, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 0, 1026,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 263, 264, 1108,
	265, 266, 267, 268, 269, 579, 1081, 0, 270, 1088,
	271, 1087, 0, 1098, 272, 273, 274, 275, 276, 277,
	1034, 1067, 1001, 278, 1128, 1129, 586, 0, 279, 280,
	1074, 0, 1055, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 305, 306, 307, 308, 1091, 309, 1085, 1084, 1005,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 1076, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 1011, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 1099, 1100, 1023, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 1083, 0,
	0, 0, 342, 0, 343, 0, 2488, 1110, 344, 345,
	1096, 1097, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 1106, 0, 1033, 355, 0, 356, 357, 358,
	359, 360, 1069, 1070, 1073, 435, 1112, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 252, 367, 368,
	370, 0, 1111, 369, 1078, 1079, 0, 1039, 0, 371,
	372, 1113, 1071, 1114, 373, 374, 375, 1115, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 1107, 1116, 387, 388, 1117, 0,
	389, 0, 0, 0, 390, 391, 1062, 1061, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1118, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1119, 422, 1002, 253, 1120, 432, 433, 1024, 1072, 434,
	1086, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 1121, 445, 1122,
	1101, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 1102, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 1082, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 1123, 492, 493, 494, 495, 1012,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	1065, 517, 501, 502, 518, 519, 1124, 520, 521, 522,
	523, 524, 525, 1080, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 1127, 532, 533, 534, 535, 1103,
	0, 538, 539, 1000, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 997, 998, 1044, 1016, 1017,
	1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 1068,
	1032, 0, 0, 0, 263, 264, 1108, 265, 266, 267,
	268, 269, 579, 1081, 0, 270, 1088, 271, 1087, 0,
	1098, 272, 273, 274, 275, 276, 277, 1034, 1067, 1001,
	278, 1128, 1129, 586, 0, 279, 280, 1074, 0, 1055,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 1109, 303,
	304, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 305, 306,
	307, 308, 1091, 309, 1085, 1084, 1005, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	1076, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 1011, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 1099, 1100, 1023, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 1083, 0, 0, 0, 342,
	0, 343, 0, 0, 1110, 344, 345, 1096, 1097, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 1106,
	0, 1033, 355, 0, 356, 357, 358, 359, 360, 1069,
	1070, 1073, 435, 1112, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 252, 367, 368, 370, 0, 1111,
	369, 1078, 1079, 0, 1039, 0, 371, 372, 1113, 1071,
	1114, 373, 374, 375, 1115, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 1107, 1116, 387, 388, 1117, 0, 389, 0, 0,
	0, 390, 391, 1062, 1061, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1118, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1119, 422, 1002,
	253, 1120, 432, 433, 1024, 1072, 434, 1086, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 1121, 445, 1122, 1101, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	1102, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 1082, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 1123, 492, 493, 494, 495, 1012, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 1065, 517, 501,
	502, 518, 519, 1124, 520, 521, 522, 523, 524, 525,
	1080, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 1127, 532, 533, 534, 535, 1103, 0, 538, 539,
	1000, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 1092, 1093, 1094, 1095, 0, 556, 0,
	548, 549, 550, 1104, 551, 1105, 1022, 552, 553, 554,
	555, 0, 557, 558, 0, 1006, 559, 560, 561, 563,
	564, 562, 565, 1066, 566, 0, 0, 567, 568, 569,
	625, 1089, 1126, 0, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 1003, 0,
	0, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 997, 998, 0, 0, 0, 0, 0, 0,
	0, 1028, 1748, 0, 2493, 1026, 1044, 1016, 1017, 1018,
	1014, 1015, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 263, 264, 1108, 265, 266, 267, 268,
	269, 579, 1081, 0, 270, 1088, 271, 1087, 0, 1098,
	272, 273, 274, 275, 276, 277, 1034, 1067, 1001, 278,
	1128, 1129, 586, 0, 279, 280, 1074, 0, 1055, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 1109, 303, 304,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307,
	308, 1091, 309, 1085, 1084, 1005, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 1076,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 1011, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 1099, 1100, 1023, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 1083, 0, 0, 0, 342, 0,
	343, 0, 0, 1110, 344, 345, 1096, 1097, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 1106, 0,
	1033, 355, 0, 356, 357, 358, 359, 360, 1069, 1070,
	1073, 435, 1112, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 252, 367, 368, 370, 0, 1111, 369,
	1078, 1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	1107, 1116, 387, 388, 1117, 0, 389, 0, 0, 0,
	390, 391, 1062, 1061, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 1002, 253,
	1120, 432, 433, 1024, 1072, 434, 1086, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 1121, 445, 1122, 1101, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 1102,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1082, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	1123, 492, 493, 494, 495, 1012, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 1065, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 1080,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	1127, 532, 533, 534, 535, 1103, 0, 538, 539, 1000,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	0, 997, 998, 0, 0, 0, 0, 0, 0, 0,
	1028, 0, 0, 2491, 1026, 1044, 1016, 1017, 1018, 1014,
	1015, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 1068, 1032, 0,
	0, 0, 263, 264, 1108, 265, 266, 267, 268, 269,
	579, 1081, 0, 270, 1088, 271, 1087, 0, 1098, 272,
	273, 274, 275, 276, 277, 1034, 1067, 1001, 278, 1128,
	1129, 586, 0, 279, 280, 1074, 0, 1055, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 1109, 303, 304, 1058,
	1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308,
	1091, 309, 1085, 1084, 1005, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 1076, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	1011, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 1099, 1100, 1023, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 1083, 0, 0, 0, 342, 0, 343,
	0, 0, 1110, 344, 345, 1096, 1097, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 1106, 0, 1033,
	355, 0, 356, 357, 358, 359, 360, 1069, 1070, 1073,
	435, 1112, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 1111, 369, 1078,
	1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114, 373,
	374, 375, 1115, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1107,
	1116, 387, 388, 1117, 0, 389, 0, 0, 0, 390,
	391, 1062, 1061, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1118, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1119, 422, 1002, 253, 1120,
	432, 433, 1024, 1072, 434, 1086, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 1121, 445, 1122, 1101, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 1102, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1082, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 1123,
	492, 493, 494, 495, 1012, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 1065, 517, 501, 502, 518,
	519, 1124, 520, 521, 522, 523, 524, 525, 1080, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 1127,
	532, 533, 534, 535, 1103, 0, 538, 539, 1000, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 1092, 1093, 1094, 1095, 0, 556, 0, 548, 549,
	550, 1104, 551, 1105, 1022, 552, 553, 554, 555, 0,
	557, 558, 0, 1006, 559, 560, 561, 563, 564, 562,
	565, 1066, 566, 0, 0, 567, 568, 569, 625, 1089,
	1126, 0, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 1003, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 0, 0, 0, 0, 0, 0, 0, 1028,
	0, 0, 2479, 1026, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 263, 264, 1108, 265, 266, 267, 268, 269, 579,
	1081, 0, 270, 1088, 271, 1087, 0, 1098, 272, 273,
	274, 275, 276, 277, 1034, 1067, 1001, 278, 1128, 1129,
	586, 0, 279, 280, 1074, 0, 1055, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 1109, 303, 304, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308, 1091,
	309, 1085, 1084, 1005, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 1076, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 1011,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	1099, 1100, 1023, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 1083, 0, 0, 0, 342, 0, 343, 0,
	0, 1110, 344, 345, 1096, 1097, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 1106, 0, 1033, 355,
	0, 356, 357, 358, 359, 360, 1069, 1070, 1073, 435,
	1112, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 1111, 369, 1078, 1079,
	0, 1039, 0, 371, 372, 1113, 1071, 1114, 373, 374,
	375, 1115, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 1107, 1116,
	387, 388, 1117, 0, 389, 0, 0, 0, 390, 391,
	1062, 1061, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1118, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1119, 422, 1002, 253, 1120, 432,
	433, 1024, 1072, 434, 1086, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 1121, 445, 1122, 1101, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 1102, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 1082, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 1123, 492,
	493, 494, 495, 1012, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 1065, 517, 501, 502, 518, 519,
	1124, 520, 521, 522, 523, 524, 525, 1080, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 1127, 532,
	533, 534, 535, 1103, 0, 538, 539, 1000, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 999, 0, 0, 0, 0, 0, 0, 997,
	998, 0, 0, 0, 0, 0, 0, 0, 1028, 0,
	0, 2468, 1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 1068, 1032, 0, 0, 0,
	263, 264, 1108, 265, 266, 267, 268, 269, 579, 1081,
	0, 270, 1088, 271, 1087, 0, 1098, 272, 273, 274,
	275, 276, 277, 1034, 1067, 1001, 278, 1128, 1129, 586,
	0, 279, 280, 1074, 0, 1055, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 1109, 303, 304, 1058, 1056, 1057,
	1064, 1060, 1059, 1063, 305, 306, 307, 308, 1091, 309,
	1085, 1084, 1005, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 1076, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 1011, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 1099,
	1100, 1023, 251, 0, 0, 0, 0, 0, 339, 340,
	341, 1083, 0, 0, 0, 342, 0, 343, 0, 0,
	1110, 344, 345, 1096, 1097, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 1106, 0, 1033, 355, 0,
	356, 357, 358, 359, 360, 1069, 1070, 1073, 435, 1112,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 0, 1111, 369, 1078, 1079, 0,
	1039, 0, 371, 372, 1113, 1071, 1114, 373, 374, 375,
	1115, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 1107, 1116, 387,
	388, 1117, 0, 389, 0, 0, 0, 390, 391, 1062,
	1061, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1118, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1119, 422, 1002, 253, 1120, 432, 433,
	1024, 1072, 434, 1086, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	1121, 445, 1122, 1101, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 1102, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 1082, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 1123, 492, 493,
	494, 495, 1012, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 1065, 517, 501, 502, 518, 519, 1124,
	520, 521, 522, 523, 524, 525, 1080, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 1127, 532, 533,
	534, 535, 1103, 0, 538, 539, 1000, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 1092,
	1093, 1094, 1095, 0, 556, 0, 548, 549, 550, 1104,
	551, 1105, 1022, 552, 553, 554, 555, 0, 557, 558,
	0, 1006, 559, 560, 561, 563, 564, 562, 565, 1066,
	566, 0, 0, 567, 568, 569, 625, 1089, 1126, 0,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 1003, 0, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	2466, 1026, 2457, 2464, 1017, 1018, 1014, 1015, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 263,
	264, 1108, 265, 266, 267, 268, 269, 579, 1081, 0,
	270, 1088, 271, 1087, 0, 1098, 272, 273, 274, 275,
	276, 277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0,
	279, 280, 1074, 0, 1055, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 305, 306, 307, 308, 1091, 2460, 1085,
	1084, 1005, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 1076, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 1011, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 1099, 1100,
	1023, 251, 0, 0, 0, 0, 0, 339, 340, 341,
	1083, 0, 0, 0, 342, 0, 343, 0, 0, 1110,
	344, 345, 1096, 1097, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 1106, 0, 1033, 355, 0, 356,
	357, 358, 2461, 360, 1069, 1070, 1073, 435, 1112, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 0, 1111, 369, 1078, 1079, 0, 1039,
	0, 371, 372, 1113, 1071, 1114, 373, 374, 375, 1115,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1107, 1116, 387, 388,
	1117, 0, 389, 0, 0, 0, 390, 391, 1062, 1061,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 2462, 403, 2459, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1118,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1119, 422, 1002, 253, 1120, 432, 433, 1024,
	1072, 434, 1086, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 1121,
	445, 1122, 1101, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 1102, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	1082, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 1123, 492, 493, 494,
	495, 1012, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 2463, 0, 512, 513, 511, 514,
	515, 516, 1065, 517, 501, 502, 518, 519, 1124, 520,
	521, 522, 523, 524, 525, 1080, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 1127, 532, 533, 534,
	535, 1103, 0, 538, 539, 1000, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 2458, 577, 1003, 0, 0, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 997, 998, 0,
	0, 0, 0, 0, 0, 0, 1028, 0, 0, 2454,
	1026, 2457, 2464, 1017, 1018, 1014, 1015, 1027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 1068, 1032, 0, 0, 0, 263, 264,
	1108, 265, 266, 267, 268, 269, 579, 1081, 0, 270,
	1088, 271, 1087, 0, 1098, 272, 273, 274, 275, 276,
	277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0, 279,
	280, 1074, 0, 1055, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060,
	1059, 1063, 305, 306, 307, 308, 1091, 2460, 1085, 1084,
	1005, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 1076, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 1011, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 1099, 1100, 1023,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 1083,
	0, 0, 0, 342, 0, 343, 0, 0, 1110, 344,
	345, 1096, 1097, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 1106, 0, 1033, 355, 0, 356, 357,
	358, 2461, 360, 1069, 1070, 1073, 435, 1112, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 1111, 369, 1078, 1079, 0, 1039, 0,
	371, 372, 1113, 1071, 1114, 373, 374, 375, 1115, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1107, 1116, 387, 388, 1117,
	0, 389, 0, 0, 0, 390, 391, 1062, 1061, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	2462, 403, 2459, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1118, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1119, 422, 1002, 253, 1120, 432, 433, 1024, 1072,
	434, 1086, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 1121, 445,
	1122, 1101, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 1102, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 1082,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 1123, 492, 493, 494, 495,
	1012, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 2463, 0, 512, 513, 511, 514, 515,
	516, 1065, 517, 501, 502, 518, 519, 1124, 520, 521,
	522, 523, 524, 525, 1080, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 1127, 532, 533, 534, 535,
	1103, 0, 538, 539, 1000, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 1092, 1093, 1094,
	1095, 0, 556, 0, 548, 549, 550, 1104, 551, 1105,
	1022, 552, 553, 554, 555, 0, 557, 558, 0, 1006,
	559, 560, 561, 563, 564, 562, 565, 1066, 566, 0,
	0, 567, 568, 569, 625, 1089, 1126, 0, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	2458, 577, 1003, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 263, 264, 1108, 265, 266,
	267, 268, 269, 579, 1081, 0, 270, 1088, 271, 1087,
	0, 1098, 272, 273, 274, 275, 276, 277, 1034, 1067,
	1001, 278, 1128, 1129, 586, 0, 279, 280, 1074, 0,
	1055, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 1109,
	303, 304, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 305,
	306, 307, 308, 1091, 309, 1085, 1084, 1005, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 1076, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 1011, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 1099, 1100, 1023, 251, 0, 0,
	0, 0, 0, 339, 340, 341, 1083, 0, 0, 0,
	342, 0, 343, 0, 0, 1110, 344, 345, 1096, 1097,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	1106, 0, 1033, 355, 0, 356, 357, 358, 359, 360,
	1069, 1070, 1073, 435, 1112, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 252, 367, 368, 370, 0,
	1111, 369, 1078, 1079, 0, 1039, 0, 371, 372, 1113,
	1071, 1114, 373, 374, 375, 1115, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 1107, 1116, 387, 388, 1117, 0, 389, 0,
	0, 0, 390, 391, 1062, 1061, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1118, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1119, 422,
	1002, 253, 1120, 432, 433, 1024, 1072, 434, 1086, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 1121, 445, 1122, 1101, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 1102, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 1082, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 1123, 492, 493, 494, 495, 1012, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 1065, 517,
	501, 502, 518, 519, 1124, 520, 521, 522, 523, 524,
	525, 1080, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 1127, 532, 533, 534, 535, 1103, 0, 538,
	539, 1000, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 1092, 1093, 1094, 1095, 0, 556,
	0, 548, 549, 550, 1104, 551, 1105, 1022, 552, 553,
	554, 555, 0, 557, 558, 0, 1006, 559, 560, 561,
	563, 564, 562, 565, 1066, 566, 0, 0, 567, 568,
	569, 625, 1089, 1126, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 1003,
	0, 0, 0, 0, 0, 0, 999, 0, 0, 0,
	0, 0, 0, 997, 998, 0, 0, 0, 0, 0,
	1756, 0, 1028, 0, 0, 0, 1026, 1044, 1016, 1017,
	1018, 1014, 1015, 1027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 2248, 261, 262, 0, 0, 0, 0, 0, 1068,
	1032, 0, 0, 0, 263, 264, 1108, 265, 266, 267,
	268, 269, 579, 1081, 0, 270, 1088, 271, 1087, 0,
	1098, 272, 273, 274, 275, 276, 277, 1034, 1067, 1001,
	278, 1128, 1129, 586, 0, 279, 280, 1074, 0, 1055,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 1109, 303,
	304, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 305, 306,
	307, 308, 1091, 309, 1085, 1084, 1005, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	1076, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 1011, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 1099, 1100, 1023, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 1083, 0, 0, 0, 342,
	0, 343, 0, 0, 1110, 344, 345, 1096, 1097, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 1106,
	0, 1033, 355, 0, 356, 357, 358, 359, 360, 1069,
	1070, 1073, 435, 1112, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 252, 367, 368, 370, 0, 1111,
	369, 1078, 1079, 0, 1039, 0, 371, 372, 1113, 1071,
	1114, 373, 374, 375, 1115, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 1107, 1116, 387, 388, 1117, 0, 389, 0, 0,
	0, 390, 391, 1062, 1061, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1118, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1119, 422, 1002,
	253, 1120, 432, 433, 1024, 1072, 434, 1086, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 1121, 445, 1122, 1101, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	1102, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 1082, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 1123, 492, 493, 494, 495, 1012, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 1065, 517, 501,
	502, 518, 519, 1124, 520, 521, 522, 523, 524, 525,
	1080, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 1127, 532, 533, 534, 535, 1103, 0, 538, 539,
	1000, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 1092, 1093, 1094, 1095, 0, 556, 0,
	548, 549, 550, 1104, 551, 1105, 1022, 552, 553, 554,
	555, 0, 557, 558, 0, 1006, 559, 560, 561, 563,
	564, 562, 565, 1066, 566, 0, 0, 567, 568, 569,
	625, 1089, 1126, 0, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 1003, 0,
	0, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 997, 998, 0, 0, 0, 0, 0, 0,
	0, 1028, 0, 0, 1608, 1026, 1044, 1016, 1017, 1018,
	1014, 1015, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 263, 264, 1108, 265, 266, 267, 268,
	269, 579, 1081, 0, 270, 1088, 271, 1087, 0, 1098,
	272, 273, 274, 275, 276, 277, 1034, 1067, 1001, 278,
	1128, 1129, 586, 0, 279, 280, 1074, 0, 1055, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 1109, 303, 304,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307,
	308, 1091, 309, 1085, 1084, 1005, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 1076,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 1011, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 1099, 1100, 1023, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 1083, 0, 0, 0, 342, 0,
	343, 0, 0, 1110, 344, 345, 1096, 1097, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 1106, 0,
	1033, 355, 0, 356, 357, 358, 359, 360, 1069, 1070,
	1073, 435, 1112, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 252, 367, 368, 370, 0, 1111, 369,
	1078, 1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	1107, 1116, 387, 388, 1117, 0, 389, 0, 0, 0,
	390, 391, 1062, 1061, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 1002, 253,
	1120, 432, 433, 1024, 1072, 434, 1086, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 1121, 445, 1122, 1101, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 1102,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1082, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	1123, 492, 493, 494, 495, 1012, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 1065, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 1080,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	1127, 532, 533, 534, 535, 1103, 0, 538, 539, 1000,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	0, 997, 998, 0, 0, 0, 0, 0, 0, 0,
	1028, 0, 0, 1543, 1026, 1044, 1016, 1017, 1018, 1014,
	1015, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 1068, 1032, 0,
	0, 0, 263, 264, 1108, 265, 266, 267, 268, 269,
	579, 1081, 0, 270, 1088, 271, 1087, 0, 1098, 272,
	273, 274, 275, 276, 277, 1034, 1067, 1001, 278, 1128,
	1129, 586, 0, 279, 280, 1074, 0, 1055, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 1109, 303, 304, 1058,
	1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308,
	1091, 309, 1085, 1084, 1005, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 1076, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	1011, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 1099, 1100, 1023, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 1083, 0, 0, 0, 342, 0, 343,
	0, 0, 1110, 344, 345, 1096, 1097, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 1106, 0, 1033,
	355, 0, 356, 357, 358, 359, 360, 1069, 1070, 1073,
	435, 1112, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 1111, 369, 1078,
	1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114, 373,
	374, 375, 1115, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1107,
	1116, 387, 388, 1117, 0, 389, 0, 0, 0, 390,
	391, 1062, 1061, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1118, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1119, 422, 1002, 253, 1120,
	432, 433, 1024, 1072, 434, 1086, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 1121, 445, 1122, 1101, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 1102, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1082, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 1123,
	492, 493, 494, 495, 1012, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 1065, 517, 501, 502, 518,
	519, 1124, 520, 521, 522, 523, 524, 525, 1080, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 1127,
	532, 533, 534, 535, 1103, 0, 538, 539, 1000, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 1092, 1093, 1094, 1095, 0, 556, 0, 548, 549,
	550, 1104, 551, 1105, 1022, 552, 553, 554, 555, 0,
	557, 558, 0, 1006, 559, 560, 561, 563, 564, 562,
	565, 1066, 566, 0, 0, 567, 568, 569, 625, 1089,
	1126, 0, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 1003, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 0, 0, 0, 0, 0, 0, 0, 1028,
	0, 0, 1538, 1026, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 263, 264, 1108, 265, 266, 267, 268, 269, 579,
	1081, 0, 270, 1088, 271, 1087, 0, 1098, 272, 273,
	274, 275, 276, 277, 1034, 1067, 1001, 278, 1128, 1129,
	586, 0, 279, 280, 1074, 0, 1055, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 1109, 303, 304, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308, 1091,
	309, 1085, 1084, 1005, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 1076, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 1011,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	1099, 1100, 1023, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 1083, 0, 0, 0, 342, 0, 343, 0,
	0, 1110, 344, 345, 1096, 1097, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 1106, 0, 1033, 355,
	0, 356, 357, 358, 359, 360, 1069, 1070, 1073, 435,
	1112, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 1111, 369, 1078, 1079,
	0, 1039, 0, 371, 372, 1113, 1071, 1114, 373, 374,
	375, 1115, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 1107, 1116,
	387, 388, 1117, 0, 389, 0, 0, 0, 390, 391,
	1062, 1061, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1118, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1119, 422, 1002, 253, 1120, 432,
	433, 1024, 1072, 434, 1086, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 1121, 445, 1122, 1101, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 1102, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 1082, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 1123, 492,
	493, 494, 495, 1012, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 1065, 517, 501, 502, 518, 519,
	1124, 520, 521, 522, 523, 524, 525, 1080, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 1127, 532,
	533, 534, 535, 1103, 0, 538, 539, 1000, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 999, 0, 0, 0, 0, 0, 0, 997,
	998, 0, 0, 0, 0, 0, 0, 0, 1028, 0,
	0, 1529, 1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 1068, 1032, 0, 0, 0,
	263, 264, 1108, 265, 266, 267, 268, 269, 579, 1081,
	0, 270, 1088, 271, 1087, 0, 1098, 272, 273, 274,
	275, 276, 277, 1034, 1067, 1001, 278, 1128, 1129, 586,
	0, 279, 280, 1074, 0, 1055, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 1109, 303, 304, 1058, 1056, 1057,
	1064, 1060, 1059, 1063, 305, 306, 307, 308, 1091, 309,
	1085, 1084, 1005, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 1076, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 1011, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 1099,
	1100, 1023, 251, 0, 0, 0, 0, 0, 339, 340,
	341, 1083, 0, 0, 0, 342, 0, 343, 0, 0,
	1110, 344, 345, 1096, 1097, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 1106, 0, 1033, 355, 0,
	356, 357, 358, 359, 360, 1069, 1070, 1073, 435, 1112,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 0, 1111, 369, 1078, 1079, 0,
	1039, 0, 371, 372, 1113, 1071, 1114, 373, 374, 375,
	1115, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 1107, 1116, 387,
	388, 1117, 0, 389, 0, 0, 0, 390, 391, 1062,
	1061, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1118, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1119, 422, 1002, 253, 1120, 432, 433,
	1024, 1072, 434, 1086, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	1121, 445, 1122, 1101, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 1102, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 1082, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 1123, 492, 493,
	494, 495, 1012, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 1065, 517, 501, 502, 518, 519, 1124,
	520, 521, 522, 523, 524, 525, 1080, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 1127, 532, 533,
	534, 535, 1103, 0, 538, 539, 1000, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 1092,
	1093, 1094, 1095, 0, 556, 0, 548, 549, 550, 1104,
	551, 1105, 1022, 552, 553, 554, 555, 0, 557, 558,
	0, 1006, 559, 560, 561, 563, 564, 562, 565, 1066,
	566, 0, 0, 567, 568, 569, 625, 1089, 1126, 0,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 1003, 0, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	1524, 1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 263,
	264, 1108, 265, 266, 267, 268, 269, 579, 1081, 0,
	270, 1088, 271, 1087, 0, 1098, 272, 273, 274, 275,
	276, 277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0,
	279, 280, 1074, 0, 1055, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 305, 306, 307, 308, 1091, 309, 1085,
	1084, 1005, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 1076, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 1011, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 1099, 1100,
	1023, 251, 0, 0, 0, 0, 0, 339, 340, 341,
	1083, 0, 0, 0, 342, 0, 343, 0, 0, 1110,
	344, 345, 1096, 1097, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 1106, 0, 1033, 355, 0, 356,
	357, 358, 359, 360, 1069, 1070, 1073, 435, 1112, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 0, 1111, 369, 1078, 1079, 0, 1039,
	0, 371, 372, 1113, 1071, 1114, 373, 374, 375, 1115,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1107, 1116, 387, 388,
	1117, 0, 389, 0, 0, 0, 390, 391, 1062, 1061,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1118,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1119, 422, 1002, 253, 1120, 432, 433, 1024,
	1072, 434, 1086, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 1121,
	445, 1122, 1101, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 1102, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	1082, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 1123, 492, 493, 494,
	495, 1012, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 1065, 517, 501, 502, 518, 519, 1124, 520,
	521, 522, 523, 524, 525, 1080, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 1127, 532, 533, 534,
	535, 1103, 0, 538, 539, 1000, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 1003, 0, 0, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 997, 998, 0,
	0, 0, 0, 0, 0, 0, 1028, 0, 0, 1506,
	1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 1068, 1032, 0, 0, 0, 263, 264,
	1108, 265, 266, 267, 268, 269, 579, 1081, 0, 270,
	1088, 271, 1087, 0, 1098, 272, 273, 274, 275, 276,
	277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0, 279,
	280, 1074, 0, 1055, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060,
	1059, 1063, 305, 306, 307, 308, 1091, 309, 1085, 1084,
	1005, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 1076, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 1011, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 1099, 1100, 1023,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 1083,
	0, 0, 0, 342, 0, 343, 0, 0, 1110, 344,
	345, 1096, 1097, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 1106, 0, 1033, 355, 0, 356, 357,
	358, 359, 360, 1069, 1070, 1073, 435, 1112, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 1111, 369, 1078, 1079, 0, 1039, 0,
	371, 372, 1113, 1071, 1114, 373, 374, 375, 1115, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1107, 1116, 387, 388, 1117,
	0, 389, 0, 0, 0, 390, 391, 1062, 1061, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1118, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1119, 422, 1002, 253, 1120, 432, 433, 1024, 1072,
	434, 1086, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 1121, 445,
	1122, 1101, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 1102, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 1082,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 1123, 492, 493, 494, 495,
	1012, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 1065, 517, 501, 502, 518, 519, 1124, 520, 521,
	522, 523, 524, 525, 1080, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 1127, 532, 533, 534, 535,
	1103, 0, 538, 539, 1000, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 1092, 1093, 1094,
	1095, 0, 556, 0, 548, 549, 550, 1104, 551, 1105,
	1022, 552, 553, 554, 555, 0, 557, 558, 0, 1006,
	559, 560, 561, 563, 564, 562, 565, 1066, 566, 0,
	0, 567, 568, 569, 625, 1089, 1126, 0, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 1003, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 1386, 1026,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 263, 264, 1108,
	265, 266, 267, 268, 269, 579, 1081, 0, 270, 1088,
	271, 1087, 0, 1098, 272, 273, 274, 275, 276, 277,
	1034, 1067, 1001, 278, 1128, 1129, 586, 0, 279, 280,
	1074, 0, 1055, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 305, 306, 307, 308, 1091, 309, 1085, 1084, 1005,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 1076, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 1011, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 1099, 1100, 1023, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 1083, 0,
	0, 0, 342, 0, 343, 0, 0, 1110, 344, 345,
	1096, 1097, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 1106, 0, 1033, 355, 0, 356, 357, 358,
	359, 360, 1385, 1070, 1073, 435, 1112, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 252, 367, 368,
	370, 0, 1111, 369, 1078, 1079, 0, 1039, 0, 371,
	372, 1113, 1071, 1114, 373, 374, 375, 1115, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 1107, 1116, 387, 388, 1117, 0,
	389, 0, 0, 0, 390, 391, 1062, 1061, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1118, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1119, 422, 1002, 253, 1120, 432, 433, 1024, 1072, 434,
	1086, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 1121, 445, 1122,
	1101, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 1102, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 1082, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 1123, 492, 493, 494, 495, 1012,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	1065, 517, 501, 502, 518, 519, 1124, 520, 521, 522,
	523, 524, 525, 1080, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 1127, 532, 533, 534, 535, 1103,
	0, 538, 539, 1000, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 997, 998, 0, 0, 0,
	0, 0, 0, 0, 1028, 0, 0, 1380, 1026, 1044,
	1016, 1017, 1018, 1014, 1015, 1027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 1068, 1032, 0, 0, 0, 263, 264, 1108, 265,
	266, 267, 268, 269, 579, 1081, 0, 270, 1088, 271,
	1087, 0, 1098, 272, 273, 274, 275, 276, 277, 1034,
	1067, 1001, 278, 1128, 1129, 586, 0, 279, 280, 1074,
	0, 1055, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	1109, 303, 304, 1058, 1056, 1057, 1064, 1060, 1059, 1063,
	305, 306, 307, 308, 1091, 309, 1085, 1084, 1005, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 1076, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 1011, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 1099, 1100, 1023, 251, 0,
	0, 0, 0, 0, 339, 340, 341, 1083, 0, 0,
	0, 342, 0, 343, 0, 0, 1110, 344, 345, 1096,
	1097, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 1106, 0, 1033, 355, 0, 356, 357, 358, 359,
	360, 1379, 1070, 1073, 435, 1112, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 252, 367, 368, 370,
	0, 1111, 369, 1078, 1079, 0, 1039, 0, 371, 372,
	1113, 1071, 1114, 373, 374, 375, 1115, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 1107, 1116, 387, 388, 1117, 0, 389,
	0, 0, 0, 390, 391, 1062, 1061, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1118, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1119,
	422, 1002, 253, 1120, 432, 433, 1024, 1072, 434, 1086,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 1121, 445, 1122, 1101,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 1102, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 1082, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 1123, 492, 493, 494, 495, 1012, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 1065,
	517, 501, 502, 518, 519, 1124, 520, 521, 522, 523,
	524, 525, 1080, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 1127, 532, 533, 534, 535, 1103, 0,
	538, 539, 1000, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 1092, 1093, 1094, 1095, 0,
	556, 0, 548, 549, 550, 1104, 551, 1105, 1022, 552,
	553, 554, 555, 0, 557, 558, 0, 1006, 559, 560,
	561, 563, 564, 562, 565, 1066, 566, 0, 0, 567,
	568, 569, 625, 1089, 1126, 0, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	1003, 0, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 997, 998, 0, 0, 0, 0,
	0, 0, 0, 1028, 0, 0, 1373, 1026, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 263, 264, 1108, 265, 266,
	267, 268, 269, 579, 1081, 0, 270, 1088, 271, 1087,
	0, 1098, 272, 273, 274, 275, 276, 277, 1034, 1067,
	1001, 278, 1128, 1129, 586, 0, 279, 280, 1074, 0,
	1055, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 1109,
	303, 304, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 305,
	306, 307, 308, 1091, 309, 1085, 1084, 1005, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 1076, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 1011, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 1099, 1100, 1023, 251, 0, 0,
	0, 0, 0, 339, 340, 341, 1083, 0, 0, 0,
	342, 0, 343, 0, 0, 1110, 344, 345, 1096, 1097,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	1106, 0, 1033, 355, 0, 356, 357, 358, 359, 360,
	1069, 1070, 1073, 435, 1112, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 252, 367, 368, 370, 0,
	1111, 369, 1078, 1079, 0, 1039, 0, 371, 372, 1113,
	1071, 1114, 373, 374, 375, 1115, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 1107, 1116, 387, 388, 1117, 0, 389, 0,
	0, 0, 390, 391, 1062, 1061, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1118, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1119, 422,
	1002, 253, 1120, 432, 433, 1024, 1072, 434, 1086, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 1121, 445, 1122, 1101, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 1102, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 1082, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 1123, 492, 493, 494, 495, 1012, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 1065, 517,
	501, 502, 518, 519, 1124, 520, 521, 522, 523, 524,
	525, 1080, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 1127, 532, 533, 534, 535, 1103, 0, 538,
	539, 1000, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 1092, 1093, 1094, 1095, 0, 556,
	0, 548, 549, 550, 1104, 551, 1105, 1022, 552, 553,
	554, 555, 0, 557, 558, 0, 1006, 559, 560, 561,
	563, 564, 562, 565, 1066, 566, 0, 0, 567, 568,
	569, 625, 1089, 1126, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 1003,
	0, 0, 0, 0, 0, 0, 999, 0, 0, 0,
	0, 0, 0, 997, 998, 1044, 1016, 1017, 1018, 1014,
	1015, 1027, 1028, 0, 0, 0, 1026, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 1068, 1032, 0,
	0, 0, 263, 264, 1108, 265, 266, 267, 268, 269,
	579, 1081, 0, 270, 1088, 271, 1087, 0, 1098, 272,
	273, 274, 275, 276, 277, 1034, 1067, 1001, 278, 1128,
	1129, 586, 0, 279, 280, 1074, 0, 1055, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 1109, 303, 304, 1058,
	1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308,
	1091, 309, 1085, 1084, 1005, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 1076, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	1011, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 1099, 1100, 1023, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 1083, 0, 0, 0, 342, 0, 343,
	0, 0, 1110, 344, 345, 1096, 1097, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 1106, 0, 1033,
	355, 0, 356, 357, 358, 359, 360, 1069, 1070, 1073,
	435, 1112, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 1111, 369, 1078,
	1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114, 373,
	374, 375, 1115, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1107,
	1116, 387, 388, 1117, 0, 389, 0, 0, 0, 390,
	391, 1062, 1061, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1118, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1119, 422, 1002, 253, 1120,
	432, 433, 1024, 1072, 434, 1086, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 1121, 445, 1122, 1101, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 1102, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1082, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 1123,
	492, 493, 494, 495, 1012, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 1065, 517, 501, 502, 518,
	519, 1124, 520, 521, 522, 523, 524, 525, 1080, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 1127,
	532, 533, 534, 535, 1103, 0, 538, 539, 1000, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 1092, 1093, 1094, 1095, 0, 556, 0, 548, 549,
	550, 1104, 551, 1105, 1022, 552, 553, 554, 555, 0,
	557, 558, 0, 1006, 559, 560, 561, 563, 564, 562,
	565, 1066, 566, 0, 0, 567, 568, 569, 625, 1089,
	1126, 0, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 1003, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 1028,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 263,
	264, 1108, 265, 266, 267, 268, 269, 579, 1081, 0,
	270, 1088, 271, 1087, 0, 1098, 272, 273, 274, 275,
	276, 277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0,
	279, 280, 1074, 0, 1055, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 1109, 303, 4243, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 305, 306, 307, 308, 1091, 309, 1085,
	1084, 1005, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 1076, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 1011, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 1099, 1100,
	1023, 251, 0, 0, 0, 0, 0, 339, 340, 341,
	1083, 0, 0, 0, 342, 0, 343, 0, 0, 1110,
	344, 345, 1096, 1097, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 1106, 0, 1033, 355, 0, 356,
	357, 358, 359, 360, 1069, 1070, 1073, 435, 1112, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 0, 1111, 369, 1078, 1079, 0, 1039,
	0, 371, 372, 1113, 1071, 1114, 373, 374, 375, 1115,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1107, 1116, 387, 388,
	1117, 0, 389, 0, 0, 0, 390, 391, 1062, 1061,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1118,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1119, 422, 1002, 253, 1120, 432, 433, 1024,
	1072, 434, 1086, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 1121,
	445, 1122, 1101, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 1102, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	1082, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 1123, 492, 493, 494,
	495, 1012, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 1065, 517, 501, 502, 518, 519, 1124, 520,
	521, 522, 523, 524, 525, 1080, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 1127, 532, 533, 534,
	535, 1103, 0, 538, 539, 1000, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 4242, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 1003, 0, 0, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 997, 998, 1044,
	1016, 1017, 1018, 1014, 1015, 1027, 1028, 0, 0, 0,
	1026, 0, 0, 0, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 1068, 1032, 0, 0, 0, 263, 264, 1108, 265,
	266, 267, 268, 269, 4241, 1081, 0, 270, 1088, 271,
	1087, 0, 1098, 272, 273, 274, 275, 276, 277, 1034,
	1067, 1001, 278, 1128, 1129, 586, 0, 279, 280, 1074,
	0, 1055, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	1109, 303, 4243, 1058, 1056, 1057, 1064, 1060, 1059, 1063,
	305, 306, 307, 308, 1091, 309, 1085, 1084, 1005, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 1076, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 1011, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 1099, 1100, 1023, 251, 0,
	0, 0, 0, 0, 339, 340, 341, 1083, 0, 0,
	0, 342, 0, 343, 0, 0, 1110, 344, 345, 1096,
	1097, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 1106, 0, 1033, 355, 0, 356, 357, 358, 359,
	360, 1069, 1070, 1073, 435, 1112, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 252, 367, 368, 370,
	0, 1111, 369, 1078, 1079, 0, 1039, 0, 371, 372,
	1113, 1071, 1114, 373, 374, 375, 1115, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 1107, 1116, 387, 388, 1117, 0, 389,
	0, 0, 0, 390, 391, 1062, 1061, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1118, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1119,
	422, 1002, 253, 1120, 432, 433, 1024, 1072, 434, 1086,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 1121, 445, 1122, 1101,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 1102, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 1082, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 1123, 492, 493, 494, 495, 1012, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 1065,
	517, 501, 502, 518, 519, 1124, 520, 521, 522, 523,
	524, 525, 1080, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 1127, 532, 533, 534, 535, 1103, 0,
	538, 539, 1000, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 1092, 1093, 1094, 1095, 0,
	556, 0, 548, 549, 550, 1104, 551, 1105, 1022, 552,
	553, 554, 555, 0, 4242, 558, 0, 1006, 559, 560,
	561, 563, 564, 562, 565, 1066, 566, 0, 0, 567,
	568, 569, 625, 1089, 1126, 0, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	1003, 0, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 997, 998, 1044, 1016, 1017, 1018,
	2895, 2896, 1027, 1028, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 263, 264, 1108, 265, 266, 267, 268,
	269, 579, 1081, 0, 270, 1088, 271, 1087, 0, 1098,
	272, 273, 274, 275, 276, 277, 1034, 1067, 1001, 278,
	1128, 1129, 586, 0, 279, 280, 1074, 0, 1055, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 1109, 303, 304,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 305, 306, 307,
	308, 1091, 309, 1085, 1084, 1005, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 1076,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 1011, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 1099, 1100, 1023, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 1083, 0, 0, 0, 342, 0,
	343, 0, 0, 1110, 344, 345, 1096, 1097, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 1106, 0,
	1033, 355, 0, 356, 357, 358, 359, 360, 1069, 1070,
	1073, 435, 1112, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 252, 367, 368, 370, 0, 1111, 369,
	1078, 1079, 0, 1039, 0, 371, 372, 1113, 1071, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	1107, 1116, 387, 388, 1117, 0, 389, 0, 0, 0,
	390, 391, 1062, 1061, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 1002, 253,
	1120, 432, 433, 1024, 1072, 434, 1086, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 1121, 445, 1122, 1101, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 1102,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1082, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	1123, 492, 493, 494, 495, 1012, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 1065, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 1080,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	1127, 532, 533, 534, 535, 1103, 0, 538, 539, 1000,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	0, 997, 998, 1044, 1016, 1017, 1018, 2893, 2894, 1027,
	1028, 0, 0, 0, 1026, 0, 0, 0, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 1068, 1032, 0, 0, 0,
	263, 264, 1108, 265, 266, 267, 268, 269, 579, 1081,
	0, 270, 1088, 271, 1087, 0, 1098, 272, 273, 274,
	275, 276, 277, 1034, 1067, 1001, 278, 1128, 1129, 586,
	0, 279, 280, 1074, 0, 1055, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 1109, 303, 304, 1058, 1056, 1057,
	1064, 1060, 1059, 1063, 305, 306, 307, 308, 1091, 309,
	1085, 1084, 1005, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 1076, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 1011, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 1099,
	1100, 1023, 251, 0, 0, 0, 0, 0, 339, 340,
	341, 1083, 0, 0, 0, 342, 0, 343, 0, 0,
	1110, 344, 345, 1096, 1097, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 1106, 0, 1033, 355, 0,
	356, 357, 358, 359, 360, 1069, 1070, 1073, 435, 1112,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 0, 1111, 369, 1078, 1079, 0,
	1039, 0, 371, 372, 1113, 1071, 1114, 373, 374, 375,
	1115, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 1107, 1116, 387,
	388, 1117, 0, 389, 0, 0, 0, 390, 391, 1062,
	1061, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1118, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1119, 422, 1002, 253, 1120, 432, 433,
	1024, 1072, 434, 1086, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	1121, 445, 1122, 1101, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 1102, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 1082, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 1123, 492, 493,
	494, 495, 1012, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 1065, 517, 501, 502, 518, 519, 1124,
	520, 521, 522, 523, 524, 525, 1080, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 1127, 532, 533,
	534, 535, 1103, 0, 538, 539, 1000, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 1092,
	1093, 1094, 1095, 0, 556, 0, 548, 549, 550, 1104,
	551, 1105, 1022, 552, 553, 554, 555, 0, 557, 558,
	0, 1006, 559, 560, 561, 563, 564, 562, 565, 1066,
	566, 0, 0, 567, 568, 569, 625, 1089, 1126, 0,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 1003, 0, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 1028, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 263, 264, 1108,
	265, 266, 267, 268, 269, 579, 1081, 0, 270, 1088,
	271, 1087, 0, 1098, 272, 273, 274, 275, 276, 277,
	1034, 1067, 1001, 278, 1128, 1129, 586, 0, 279, 280,
	1074, 0, 1055, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 305, 306, 307, 308, 1091, 309, 1085, 1084, 1005,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 1076, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 1011, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 1099, 1100, 1023, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 1083, 0,
	0, 0, 342, 0, 343, 0, 0, 1110, 344, 345,
	1096, 1097, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 1106, 0, 1033, 355, 0, 356, 357, 358,
	359, 360, 1069, 1070, 1073, 435, 1112, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 252, 367, 368,
	370, 0, 1111, 369, 1078, 1079, 0, 1039, 0, 371,
	372, 1113, 1071, 1114, 373, 374, 375, 1115, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 1107, 1116, 387, 388, 1117, 0,
	389, 0, 0, 0, 390, 391, 1062, 1061, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1118, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1119, 422, 1002, 253, 1120, 432, 433, 1024, 1072, 434,
	1086, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 1121, 445, 1122,
	1101, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 1102, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 1082, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 1123, 492, 493, 494, 495, 1012,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	1065, 517, 501, 502, 518, 519, 1124, 520, 521, 522,
	523, 524, 525, 1080, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 1127, 532, 533, 534, 535, 1103,
	0, 538, 539, 1000, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 2256, 2257, 1044, 1016, 1017,
	1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 1068,
	1032, 0, 0, 0, 263, 264, 1108, 265, 266, 267,
	268, 269, 579, 1081, 0, 270, 1088, 271, 1087, 0,
	1098, 272, 273, 274, 275, 276, 277, 1034, 1067, 0,
	278, 1128, 1129, 586, 0, 279, 280, 1074, 0, 1055,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 1109, 303,
	304, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 305, 306,
	307, 308, 1091, 309, 1085, 1084, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	1076, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 1011, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 1099, 1100, 1023, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 1083, 0, 0, 0, 342,
	0, 343, 0, 0, 1110, 344, 345, 1096, 1097, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 1106,
	0, 1033, 355, 0, 356, 357, 358, 359, 360, 1069,
	1070, 1073, 435, 1112, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 252, 367, 368, 370, 0, 1111,
	369, 1078, 1079, 0, 1039, 0, 371, 372, 1113, 1071,
	1114, 373, 374, 375, 1115, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 1107, 1116, 387, 388, 1117, 0, 389, 0, 0,
	0, 390, 391, 1062, 1061, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1118, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1119, 422, 0,
	253, 1120, 432, 433, 1024, 1072, 434, 1086, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 1121, 445, 1122, 1101, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	1102, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 1082, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 1123, 492, 493, 494, 495, 1012, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 1065, 517, 501,
	502, 518, 519, 1124, 520, 521, 522, 523, 524, 525,
	1080, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 1127, 532, 533, 534, 535, 1103, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 1092, 1093, 1094, 1095, 0, 556, 0,
	548, 549, 550, 1104, 551, 1105, 1022, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 1066, 566, 0, 0, 567, 568, 569,
	625, 1089, 1126, 0, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 2476, 0, 0, 0, 0,
	0, 0, 2474, 2475, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 1028, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 263, 264, 1108, 265, 266, 267, 268, 269, 579,
	1081, 0, 270, 1088, 271, 1087, 0, 1098, 272, 273,
	274, 275, 276, 277, 1034, 1067, 0, 278, 1128, 1129,
	586, 0, 279, 280, 1074, 0, 1055, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 1109, 303, 304, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308, 1091,
	309, 1085, 1084, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 1076, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 1011,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	1099, 1100, 1023, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 1083, 0, 0, 0, 342, 0, 343, 0,
	0, 1110, 344, 345, 1096, 1097, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 1106, 0, 1033, 355,
	0, 356, 357, 358, 359, 360, 1069, 1070, 1073, 435,
	1112, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 1111, 369, 1078, 1079,
	0, 1039, 0, 371, 372, 1113, 1071, 1114, 373, 374,
	375, 1115, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 1107, 1116,
	387, 388, 1117, 0, 389, 0, 0, 0, 390, 391,
	1062, 1061, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1118, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1119, 422, 0, 253, 1120, 432,
	433, 1024, 1072, 434, 1086, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 1121, 445, 1122, 1101, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 1102, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 1082, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 1123, 492,
	493, 494, 495, 2888, 2889, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 1065, 517, 501, 502, 518, 519,
	1124, 520, 521, 522, 523, 524, 525, 1080, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 1127, 532,
	533, 534, 535, 1103, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	1962, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 1028, 0,
	0, 0, 1026, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 1068, 1032, 0, 0, 0, 263, 264,
	1108, 265, 266, 267, 268, 269, 0, 1081, 0, 270,
	1088, 271, 1087, 0, 1098, 272, 273, 274, 275, 276,
	277, 1034, 1067, 1001, 278, 1128, 1129, 586, 0, 279,
	280, 1074, 0, 1055, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 1109, 303, 4243, 1058, 1056, 1057, 1064, 1060,
	1059, 1063, 305, 306, 307, 308, 1091, 309, 1085, 1084,
	1005, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 1076, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 1011, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 1099, 1100, 1023,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 1083,
	0, 0, 0, 342, 0, 343, 0, 0, 1110, 344,
	345, 1096, 1097, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 1106, 0, 1033, 355, 0, 356, 357,
	358, 359, 360, 1069, 1070, 1073, 435, 0, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 1111, 369, 1078, 1079, 0, 1039, 0,
	371, 372, 0, 1071, 0, 373, 374, 375, 1115, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1107, 1116, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 1062, 1061, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1118, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1119, 422, 1002, 253, 0, 432, 433, 1024, 1072,
	434, 1086, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 1121, 445,
	1122, 1101, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 1102, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 1082,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 1123, 492, 493, 494, 495,
	1012, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 1065, 517, 501, 502, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 1080, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 1127, 532, 533, 534, 535,
	1103, 0, 538, 539, 1000, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 1092, 1093, 1094,
	1095, 0, 556, 0, 548, 549, 550, 1104, 551, 1105,
	1022, 552, 553, 554, 555, 0, 4242, 558, 0, 1006,
	559, 560, 561, 563, 564, 562, 565, 1066, 566, 0,
	0, 567, 568, 569, 625, 1089, 1126, 0, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 990, 0, 1166, 0, 0, 997, 998, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 0, 1026,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 1068, 0, 0, 0, 0,
	263, 264, 1108, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 0, 583, 272, 273, 274,
	275, 276, 277, 0, 1067, 0, 278, 584, 585, 586,
	0, 279, 280, 1074, 0, 1055, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 1109, 303, 304, 1058, 1056, 1057,
	1064, 1060, 1059, 1063, 305, 306, 307, 308, 0, 309,
	588, 589, 0, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 319, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 1099,
	1100, 0, 251, 0, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 0, 343, 0, 0,
	1110, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 1106, 0, 597, 355, 0,
	356, 357, 358, 359, 360, 1069, 1070, 1073, 435, 1112,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 0, 1111, 369, 601, 602, 0,
	603, 0, 371, 372, 1113, 1071, 1114, 373, 374, 375,
	1115, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 1152, 383, 385, 384, 0, 386, 1107, 1116, 387,
	388, 1117, 0, 389, 0, 0, 0, 390, 391, 1062,
	1061, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1118, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1119, 422, 0, 253, 1120, 432, 433,
	0, 1072, 434, 607, 436, 437, 0, 0, 438, 0,
	0, 1158, 440, 441, 442, 0, 0, 443, 444, 608,
	1121, 445, 1122, 1101, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 1102, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 1123, 492, 493,
	494, 495, 615, 1160, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 214, 512, 513, 511,
	514, 515, 516, 1065, 517, 501, 502, 518, 519, 1124,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 1103, 0, 538, 539, 0, 537, 216, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 1104,
	551, 1105, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 1066,
	566, 0, 0, 567, 568, 569, 1513, 626, 627, 0,
	571, 570, 572, 628, 1166, 0, 0, 208, 573, 574,
	629, 575, 576, 577, 0, 209, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 1156, 1068, 1842, 0, 0,
	0, 263, 264, 1108, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 1067, 0, 278, 584, 585,
	586, 0, 279, 280, 1074, 0, 1055, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 1109, 303, 304, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 305, 306, 307, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	1099, 1100, 0, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 1110, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 1106, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 1069, 1070, 1073, 435,
	1112, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 1111, 369, 601, 602,
	0, 603, 0, 371, 372, 1113, 1071, 1114, 373, 374,
	375, 1115, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 1152, 383, 385, 384, 0, 386, 1107, 1116,
	387, 388, 1117, 0, 389, 0, 0, 0, 390, 391,
	1062, 1061, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1118, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1119, 422, 0, 253, 1120, 432,
	433, 0, 1072, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 1158, 440, 441, 442, 0, 0, 443, 444,
	608, 1121, 445, 1122, 1101, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 1102, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 1123, 492,
	493, 494, 495, 615, 1160, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 214, 512, 513,
	511, 514, 515, 516, 1065, 517, 501, 502, 518, 519,
	1124, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 1103, 0, 538, 539, 0, 537, 216,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 1513, 626, 627,
	0, 571, 570, 572, 628, 3072, 0, 1166, 208, 573,
	574, 629, 575, 576, 577, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 1156, 0, 1842, 1068,
	0, 0, 0, 0, 263, 264, 1108, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 1067, 0,
	278, 584, 585, 586, 0, 279, 280, 1074, 0, 1055,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 1109, 303,
	304, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 305, 306,
	307, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 1099, 1100, 0, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 1110, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 1106,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 1069,
	1070, 1073, 435, 1112, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 252, 367, 368, 370, 0, 1111,
	369, 601, 602, 0, 603, 0, 371, 372, 1113, 1071,
	1114, 373, 374, 375, 1115, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 1152, 383, 385, 384, 0,
	386, 1107, 1116, 387, 388, 1117, 0, 389, 0, 0,
	0, 390, 391, 1062, 1061, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1118, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1119, 422, 0,
	253, 1120, 432, 433, 0, 1072, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 1158, 440, 441, 442, 0,
	0, 443, 444, 608, 1121, 445, 1122, 1101, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	1102, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 1123, 492, 493, 494, 495, 615, 1160, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 1065, 517, 501,
	502, 518, 519, 1124, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 1103, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 1104, 551, 1105, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 1066, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 1148, 0,
	1166, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 1156,
	0, 1154, 1068, 0, 0, 0, 0, 263, 264, 1108,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 1067, 0, 278, 584, 585, 586, 0, 279, 280,
	1074, 0, 1055, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 1099, 1100, 0, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 1110, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 1106, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 1069, 1070, 1073, 435, 1112, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 252, 367, 368,
	370, 0, 1111, 369, 601, 602, 0, 603, 0, 371,
	372, 1113, 1071, 1114, 373, 374, 375, 1115, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 1152, 383,
	385, 384, 0, 386, 1107, 1116, 387, 388, 1117, 0,
	389, 0, 0, 0, 390, 391, 1062, 1061, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1118, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1119, 422, 0, 253, 1120, 432, 433, 0, 1072, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 1158, 440,
	441, 442, 0, 0, 443, 444, 608, 1121, 445, 1122,
	1101, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 1102, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 1123, 492, 493, 494, 495, 615,
	1160, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	1065, 517, 501, 502, 518, 519, 1124, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 1103,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 1166, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 1156, 1068, 1154, 0, 0, 0, 263, 264,
	1108, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 0, 583, 272, 273, 274, 275, 276,
	277, 0, 1067, 0, 278, 584, 585, 586, 0, 279,
	280, 1074, 0, 1055, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060,
	1059, 1063, 305, 306, 307, 308, 0, 309, 588, 589,
	0, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 319, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 1099, 1100, 0,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 0, 343, 0, 0, 1110, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 1106, 0, 597, 355, 0, 356, 357,
	358, 359, 360, 1069, 1070, 1073, 435, 1112, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 1111, 369, 601, 602, 0, 603, 0,
	371, 372, 1113, 1071, 1114, 373, 374, 375, 1115, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 1152,
	383, 385, 384, 0, 386, 1107, 1116, 387, 388, 1117,
	0, 389, 0, 0, 0, 390, 391, 1062, 1061, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1118, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1119, 422, 0, 253, 1120, 432, 433, 0, 1072,
	434, 607, 436, 437, 0, 0, 438, 0, 0, 1158,
	440, 441, 442, 0, 0, 443, 444, 608, 1121, 445,
	1122, 1101, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 1102, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 1123, 492, 493, 494, 495,
	615, 1160, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 1065, 517, 501, 502, 518, 519, 1124, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	1103, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 1104, 551, 1105,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 1066, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 1166, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 1156, 1068, 1154, 0, 0, 0, 263,
	264, 1108, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 1067, 0, 278, 584, 585, 586, 0,
	279, 280, 1074, 0, 1055, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 305, 306, 307, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 1099, 1100,
	0, 251, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 0, 0, 1110,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 1106, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 1069, 1070, 1073, 435, 1112, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 0, 1111, 369, 601, 602, 0, 603,
	0, 371, 372, 1113, 1071, 1114, 373, 374, 375, 1115,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1107, 1116, 387, 388,
	1117, 0, 389, 0, 0, 0, 390, 391, 1062, 1061,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1118,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1119, 422, 0, 253, 1120, 432, 433, 0,
	1072, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 1121,
	445, 1122, 1101, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 1102, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 1123, 492, 493, 494,
	495, 615, 1160, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 1065, 517, 501, 502, 518, 519, 1124, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 1103, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 990, 0, 1356, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 1741, 578, 0, 0,
	0, 0, 263, 264, 1108, 265, 266, 267, 268, 269,
	579, 580, 0, 270, 581, 271, 582, 0, 583, 272,
	273, 274, 275, 276, 277, 0, 0, 0, 278, 584,
	585, 586, 0, 279, 280, 587, 0, 1322, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 1109, 303, 304, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 307, 308,
	0, 309, 588, 589, 0, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 319, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	590, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 591, 592, 0, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 593, 0, 0, 0, 342, 0, 343,
	0, 0, 1110, 344, 345, 594, 595, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 596, 0, 597,
	355, 0, 356, 357, 358, 359, 360, 598, 599, 600,
	435, 1112, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 0, 367, 368, 370, 0, 1111, 369, 601,
	602, 0, 603, 0, 371, 372, 1113, 604, 1114, 373,
	374, 375, 1115, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 605,
	1116, 387, 388, 1117, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1118, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1119, 422, 0, 0, 1120,
	432, 433, 0, 606, 434, 607, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 1121, 445, 1122, 609, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 612, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 614, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 1123,
	492, 493, 494, 495, 615, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 214, 512,
	513, 511, 514, 515, 516, 0, 517, 501, 502, 518,
	519, 1124, 520, 521, 522, 523, 524, 525, 616, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 617,
	532, 533, 534, 535, 618, 0, 538, 539, 0, 537,
	216, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 1513, 626,
	627, 0, 571, 570, 572, 628, 1510, 0, 1356, 208,
	573, 574, 629, 575, 576, 577, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 178,
	578, 0, 0, 0, 0, 263, 264, 1108, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 0, 279, 280, 587, 0,
	1322, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 1109,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 251, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 0, 0, 1110, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 355, 0, 356, 357, 358, 359, 360,
	598, 599, 600, 435, 1112, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 0, 367, 368, 370, 0,
	1111, 369, 601, 602, 0, 603, 0, 371, 372, 1113,
	604, 1114, 373, 374, 375, 1115, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 1116, 387, 388, 1117, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1118, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1119, 422,
	0, 0, 1120, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 1121, 445, 1122, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 1123, 492, 493, 494, 495, 615, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 214, 512, 513, 511, 514, 515, 516, 0, 517,
	501, 502, 518, 519, 1124, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 216, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 1513, 626, 627, 0, 571, 570, 572, 628, 0,
	0, 0, 208, 573, 574, 629, 575, 576, 577, 0,
	209, 0, 0, 0, 0, 0, 1356, 1355, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 1108, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 1322, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 1109, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 1110, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 1112, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 1111, 369,
	601, 602, 0, 603, 0, 371, 372, 1113, 604, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 1116, 387, 388, 1117, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 0, 0,
	1120, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 1121, 445, 1122, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	1123, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 1356, 1355, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1535, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 263, 264, 1108, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 1322, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 1109, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 1110, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 598, 599, 600, 435,
	1112, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 0, 367, 368, 370, 0, 1111, 369, 601, 602,
	0, 603, 0, 371, 372, 1113, 604, 1114, 373, 374,
	375, 1115, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 1116,
	387, 388, 1117, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1118, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1119, 422, 0, 0, 1120, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 1121, 445, 1122, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 1123, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 0, 517, 501, 502, 518, 519,
	1124, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 1356, 2044, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3328, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 263,
	264, 1108, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 0, 0, 278, 584, 585, 586, 0,
	279, 280, 587, 0, 1322, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 1109, 303, 304, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	0, 251, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 0, 0, 1110,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 596, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 598, 599, 600, 435, 1112, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 0,
	367, 368, 370, 0, 1111, 369, 601, 602, 0, 603,
	0, 371, 372, 1113, 604, 1114, 373, 374, 375, 1115,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 2043, 385, 384, 0, 386, 605, 1116, 387, 388,
	1117, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1118,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1119, 422, 0, 0, 1120, 432, 433, 0,
	606, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 1121,
	445, 1122, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 1123, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 0, 517, 501, 502, 518, 519, 1124, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	1356, 1355, 0, 0, 0, 0, 1353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1535, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 1108,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 1322, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 1109, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 1110, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 1112, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 1111, 369, 601, 602, 0, 603, 0, 371,
	372, 1113, 604, 1114, 373, 374, 375, 1115, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 1116, 387, 388, 1117, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1118, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1119, 422, 0, 0, 1120, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 1121, 445, 1122,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 1123, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 1124, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 1166, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 1068, 1519, 0, 0, 0, 263, 264,
	1108, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 0, 583, 272, 273, 274, 275, 276,
	277, 0, 1067, 0, 278, 584, 585, 586, 0, 279,
	280, 1074, 0, 1055, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 1109, 303, 304, 1058, 1056, 1057, 1064, 1060,
	1059, 1063, 305, 306, 307, 308, 0, 309, 588, 589,
	0, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 319, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 1099, 1100, 0,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 0, 343, 0, 0, 1110, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 1106, 0, 597, 355, 0, 356, 357,
	358, 359, 360, 1069, 1070, 1073, 435, 1112, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 1111, 369, 601, 602, 0, 603, 0,
	371, 372, 1113, 1071, 1114, 373, 374, 375, 1115, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1107, 1116, 387, 388, 1117,
	0, 389, 0, 0, 0, 390, 391, 1062, 1061, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1118, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1119, 422, 0, 253, 1120, 432, 433, 0, 1072,
	434, 607, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 1121, 445,
	1122, 1101, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 1102, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 1123, 492, 493, 494, 495,
	615, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 1065, 517, 501, 502, 518, 519, 1124, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	1103, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 1104, 551, 1105,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 1066, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 990, 0, 248, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 263, 264, 0, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 0, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 598, 599, 600, 435,
	0, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 0, 367, 368, 370, 0, 0, 369, 601, 602,
	0, 603, 0, 371, 372, 0, 604, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 0, 0, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 0, 445, 0, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 0, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 214, 512, 513,
	511, 514, 515, 516, 0, 517, 501, 502, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 216,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 1513, 626, 627,
	0, 571, 570, 572, 628, 248, 0, 0, 208, 573,
	574, 629, 575, 576, 577, 0, 209, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 578, 178, 0,
	0, 0, 263, 264, 0, 265, 266, 267, 268, 269,
	579, 580, 0, 270, 581, 271, 582, 0, 583, 272,
	273, 274, 275, 276, 277, 0, 0, 0, 278, 584,
	585, 586, 0, 279, 280, 587, 0, 0, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 307, 308,
	0, 309, 588, 589, 0, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 319, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	590, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 591, 592, 0, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 593, 0, 0, 0, 342, 0, 343,
	0, 0, 0, 344, 345, 594, 595, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 596, 0, 597,
	355, 0, 356, 357, 358, 359, 360, 598, 599, 600,
	435, 0, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 0, 369, 601,
	602, 0, 603, 0, 371, 372, 0, 604, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 605,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 253, 0,
	432, 433, 0, 606, 434, 607, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 0, 445, 0, 609, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 612, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 614, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 0,
	492, 493, 494, 495, 615, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 0, 517, 501, 502, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 616, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 617,
	532, 533, 534, 535, 618, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 248, 2809, 0, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 1856,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 0, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 248, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 578,
	4385, 0, 0, 0, 263, 264, 0, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 0, 0,
	278, 584, 585, 586, 0, 279, 280, 587, 0, 0,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	307, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 591, 592, 0, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 0, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 596,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 598,
	599, 600, 435, 0, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 252, 367, 368, 370, 0, 0,
	369, 601, 602, 0, 603, 0, 371, 372, 0, 604,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 605, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	253, 0, 432, 433, 0, 606, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 0, 445, 0, 609, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	612, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 0, 492, 493, 494, 495, 615, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 0, 517, 501,
	502, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 618, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 248, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 3269,
	263, 264, 0, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 0, 583, 272, 273, 274,
	275, 276, 277, 0, 0, 0, 278, 584, 585, 586,
	0, 279, 280, 587, 0, 0, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 307, 308, 0, 309,
	588, 589, 0, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 319, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 591,
	592, 0, 251, 0, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 0, 343, 0, 0,
	0, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 596, 0, 597, 355, 0,
	356, 357, 358, 359, 360, 598, 599, 600, 435, 0,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 0, 0, 369, 601, 602, 0,
	603, 0, 371, 372, 0, 604, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 605, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 253, 0, 432, 433,
	0, 606, 434, 607, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	0, 445, 0, 609, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 612, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 0, 492, 493,
	494, 495, 615, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 0, 517, 501, 502, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 618, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 248,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 1455, 263, 264, 0, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 0, 583, 272, 273, 274, 275, 276, 277, 0,
	0, 0, 278, 584, 585, 586, 0, 279, 280, 587,
	0, 0, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 308, 0, 309, 588, 589, 0, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 319, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 0, 343, 0, 0, 0, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 596, 0, 597, 355, 0, 356, 357, 358, 359,
	360, 598, 599, 600, 435, 0, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 0, 367, 368, 370,
	0, 0, 369, 601, 602, 0, 603, 0, 371, 372,
	0, 604, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 605, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 606, 434, 607,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 0, 445, 0, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 0, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 0,
	517, 501, 502, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 571, 570, 572, 628,
	248, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 2779, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 0, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 0, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 248, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 578, 3429, 0, 0, 0, 263, 264,
	0, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 0, 583, 272, 273, 274, 275, 276,
	277, 0, 0, 0, 278, 584, 585, 586, 0, 279,
	280, 587, 0, 0, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 307, 308, 0, 309, 588, 589,
	0, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 319, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 591, 592, 0,
	0, 0, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 0, 343, 0, 0, 0, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 596, 0, 597, 355, 0, 356, 357,
	358, 359, 360, 598, 599, 600, 435, 0, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 0, 367,
	368, 370, 0, 0, 369, 601, 602, 0, 603, 0,
	371, 372, 0, 604, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 605, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 606,
	434, 607, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 0, 445,
	0, 609, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 612, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 0, 492, 493, 494, 495,
	615, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 0, 517, 501, 502, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	618, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 836, 0, 717, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 2149, 578, 0, 0, 0,
	0, 263, 264, 0, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 0, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 724, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	834, 0, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 598, 599, 600, 435,
	0, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 0, 369, 601, 602,
	0, 603, 0, 371, 372, 0, 604, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 253, 0, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 0, 445, 0, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 0, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 0, 517, 501, 502, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 722,
	540, 541, 542, 543, 723, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 1923, 0, 1356, 1355, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 727, 261, 262, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 263, 264, 1108, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 0, 0,
	278, 584, 585, 586, 0, 279, 280, 587, 0, 1322,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 1109, 303,
	304, 0, 0, 0, 0, 0, 0, 1926, 305, 306,
	307, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 591, 592, 0, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 1110, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 596,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 598,
	599, 600, 435, 1112, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 0, 367, 368, 370, 0, 1111,
	369, 601, 602, 0, 603, 0, 371, 372, 1113, 604,
	1114, 373, 374, 375, 1115, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 605, 1116, 387, 388, 1117, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1118, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1119, 422, 0,
	0, 1120, 432, 433, 0, 606, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 1121, 445, 1122, 609, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	612, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 1123, 492, 493, 494, 495, 615, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 1927, 517, 501,
	502, 518, 519, 1124, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 618, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 715, 0,
	717, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 724, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 252, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 0, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 253, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 722, 540, 541, 542, 543,
	723, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 1893, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 727, 0, 0,
	0, 0, 0, 263, 264, 1108, 265, 266, 267, 268,
	269, 0, 1899, 0, 270, 1889, 271, 1905, 0, 1912,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	1915, 1916, 0, 0, 279, 280, 0, 0, 1322, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 1109, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 1091, 309, 1903, 1902, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 1076,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 0, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 340, 341, 1901, 0, 0, 0, 342, 0,
	343, 0, 0, 1110, 344, 345, 1910, 1911, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 0, 0,
	0, 355, 0, 356, 357, 358, 359, 360, 0, 0,
	0, 435, 1112, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 1111, 369,
	1896, 1897, 0, 1892, 0, 371, 372, 1113, 0, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	0, 1116, 387, 388, 1117, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 0, 0,
	1120, 432, 433, 0, 0, 434, 1904, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 0, 1121, 445, 1122, 0, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 1886, 458, 459, 460, 1887, 461, 462, 463, 0,
	464, 0, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1900, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	1123, 492, 493, 494, 495, 0, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 1898,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	1914, 532, 533, 534, 535, 0, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 1906, 1907, 1908, 1909, 0, 556, 0, 548,
	549, 550, 0, 551, 0, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 0,
	1890, 1913, 0, 571, 570, 572, 0, 0, 1356, 1355,
	0, 573, 574, 0, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 1880, 263, 264, 1108, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 0, 279, 280, 587, 0,
	1322, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 1109,
	303, 304, 0, 0, 0, 0, 0, 0, 1926, 305,
	306, 307, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 251, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 0, 0, 1110, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 355, 0, 356, 357, 358, 359, 360,
	598, 599, 600, 435, 1112, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 0, 367, 368, 370, 0,
	1111, 369, 601, 602, 0, 603, 0, 371, 372, 1113,
	604, 1114, 373, 374, 375, 1115, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 1116, 387, 388, 1117, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1118, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1119, 422,
	0, 0, 1120, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 1121, 445, 1122, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 1123, 492, 493, 494, 495, 615, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 1927, 517,
	501, 502, 518, 519, 1124, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 1356,
	1355, 0, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 263, 264, 1108, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 0, 583, 272, 273, 274, 275, 276, 277, 0,
	0, 0, 278, 584, 585, 586, 0, 279, 280, 587,
	0, 1322, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	1109, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 308, 0, 309, 588, 589, 0, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 319, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 0, 251, 0,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 0, 343, 0, 0, 1110, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 596, 0, 597, 355, 0, 356, 357, 358, 359,
	360, 598, 599, 600, 435, 1112, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 0, 367, 368, 370,
	0, 1111, 369, 601, 602, 0, 603, 0, 371, 372,
	1113, 604, 1114, 373, 374, 375, 1115, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 605, 1116, 387, 388, 1117, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1118, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1119,
	422, 0, 0, 1120, 432, 433, 3599, 606, 434, 607,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 1121, 445, 1122, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 1123, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 0,
	517, 501, 502, 518, 519, 1124, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 717, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 263, 264, 0, 265, 266, 267, 268, 269,
	579, 580, 0, 270, 581, 271, 582, 0, 583, 272,
	273, 274, 275, 276, 277, 0, 0, 0, 278, 584,
	585, 586, 0, 279, 280, 587, 0, 0, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 724, 308,
	0, 309, 588, 589, 0, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 319, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	590, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 591, 592, 0, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 593, 0, 0, 0, 342, 0, 343,
	0, 0, 0, 344, 345, 594, 595, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 596, 0, 597,
	355, 0, 356, 357, 358, 359, 360, 598, 599, 600,
	435, 0, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 0, 369, 601,
	602, 0, 603, 0, 371, 372, 0, 604, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 605,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 253, 0,
	432, 433, 0, 606, 434, 607, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 0, 445, 0, 609, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 612, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 614, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 0,
	492, 493, 494, 495, 615, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 0, 517, 501, 502, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 616, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 617,
	532, 533, 534, 535, 618, 0, 538, 539, 0, 537,
	722, 540, 541, 542, 543, 723, 545, 333, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 1356, 1355, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 727, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 1108, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 1322, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 1109, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 1110, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 1112, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 1111, 369,
	601, 602, 0, 603, 0, 371, 372, 1113, 604, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 1116, 387, 388, 1117, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 0, 0,
	1120, 432, 433, 3241, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 1121, 445, 1122, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	1123, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 717, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 263,
	264, 0, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 0, 0, 278, 584, 585, 586, 0,
	279, 280, 587, 0, 0, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 724, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	0, 251, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 0, 0, 0,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 596, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 598, 599, 600, 435, 0, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 0, 0, 369, 601, 602, 0, 603,
	0, 371, 372, 0, 604, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 605, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 253, 0, 432, 433, 0,
	606, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 0,
	445, 0, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 0, 2189, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	2190, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 0, 517, 501, 502, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 0, 538, 539, 0, 537, 722, 540, 541,
	542, 543, 723, 545, 333, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 717, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 727,
	578, 0, 0, 0, 0, 263, 264, 0, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 0, 279, 280, 587, 0,
	0, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 724, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 251, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 0, 0, 0, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 355, 0, 356, 357, 358, 359, 360,
	598, 599, 600, 435, 0, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 252, 367, 368, 370, 0,
	0, 369, 601, 602, 0, 603, 0, 371, 372, 0,
	604, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 253, 0, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 0, 445, 0, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 0, 492, 493, 494, 495, 615, 496, 0,
	497, 498, 504, 505, 499, 500, 1919, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 0, 517,
	501, 502, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 722, 540, 541, 542, 543, 723, 545,
	333, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	1918, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 717, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 727, 578, 0, 0, 0,
	0, 263, 264, 0, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 0, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 724, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 598, 599, 600, 435,
	0, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 0, 369, 601, 602,
	0, 603, 0, 371, 372, 0, 604, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 253, 0, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 0, 445, 0, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 0, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 1872, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 0, 517, 501, 502, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 722,
	540, 541, 542, 543, 723, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 1871, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1563, 0, 1356, 1355, 0,
	0, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 263, 264, 1108, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 0, 0,
	278, 584, 585, 586, 0, 279, 280, 587, 0, 1322,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 1109, 303,
	304, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	307, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 591, 592, 0, 251, 0, 0, 0,
	0, 0, 1562, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 1110, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 596,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 598,
	599, 600, 435, 1112, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 0, 367, 368, 370, 0, 1111,
	369, 601, 602, 0, 603, 0, 371, 372, 1113, 604,
	1114, 373, 374, 375, 1115, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 605, 1116, 387, 388, 1117, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1118, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1119, 422, 0,
	0, 1120, 432, 433, 0, 606, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 1121, 445, 1122, 609, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	612, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 1561, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 1123, 492, 493, 494, 495, 615, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 1560, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 0, 517, 501,
	502, 518, 519, 1124, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 618, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 1503, 0,
	1356, 1355, 0, 0, 0, 0, 1353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 1108,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 1322, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 1109, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 1110, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 1502, 599, 600, 435, 1112, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 1111, 369, 601, 602, 0, 603, 0, 371,
	372, 1113, 604, 1114, 373, 374, 375, 1115, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 1116, 387, 388, 1117, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1118, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1119, 422, 0, 0, 1120, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 1121, 445, 1122,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 1123, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 1124, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1430, 0, 1356, 1355, 0, 0, 0, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	263, 264, 1108, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 0, 583, 272, 273, 274,
	275, 276, 277, 0, 0, 0, 278, 584, 585, 586,
	0, 279, 280, 587, 0, 1322, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 1109, 303, 304, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 307, 308, 0, 309,
	588, 589, 0, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 319, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 591,
	592, 0, 251, 0, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 0, 343, 0, 0,
	1110, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 596, 0, 597, 355, 0,
	356, 357, 358, 359, 360, 1429, 599, 600, 435, 1112,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	0, 367, 368, 370, 0, 1111, 369, 601, 602, 0,
	603, 0, 371, 372, 1113, 604, 1114, 373, 374, 375,
	1115, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 605, 1116, 387,
	388, 1117, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1118, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1119, 422, 0, 0, 1120, 432, 433,
	0, 606, 434, 607, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	1121, 445, 1122, 609, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 612, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 1123, 492, 493,
	494, 495, 615, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 0, 517, 501, 502, 518, 519, 1124,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 618, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 1391, 0, 1356, 1355, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 1108, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 1322, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 1109, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 1110, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 1112, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 1111, 369,
	601, 602, 0, 603, 0, 371, 372, 1113, 604, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 1116, 387, 388, 1117, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 0, 0,
	1120, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 1121, 445, 1122, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	1123, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1351, 0, 1356,
	1355, 0, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 263, 264, 1108, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 0, 583, 272, 273, 274, 275, 276, 277, 0,
	0, 0, 278, 584, 585, 586, 0, 279, 280, 587,
	0, 1322, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	1109, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 308, 0, 309, 588, 589, 0, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 319, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 0, 251, 0,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 0, 343, 0, 0, 1110, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 596, 0, 597, 355, 0, 356, 357, 358, 359,
	360, 1350, 599, 600, 435, 1112, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 0, 367, 368, 370,
	0, 1111, 369, 601, 602, 0, 603, 0, 371, 372,
	1113, 604, 1114, 373, 374, 375, 1115, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 605, 1116, 387, 388, 1117, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1118, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1119,
	422, 0, 0, 1120, 432, 433, 0, 606, 434, 607,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 1121, 445, 1122, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 1123, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 0,
	517, 501, 502, 518, 519, 1124, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	1356, 1355, 0, 0, 0, 0, 1353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 1108,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 1322, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 1109, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 1110, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 1112, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 1111, 369, 601, 602, 0, 603, 0, 371,
	372, 1113, 604, 1114, 373, 374, 375, 1115, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 1116, 387, 388, 1117, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1118, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1119, 422, 0, 0, 1120, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 1121, 445, 1122,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 1123, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 1124, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 248, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 252, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 253,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 0, 0, 1356,
	1355, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 727, 261, 262, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 263, 264, 1108, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 0, 583, 272, 273, 274, 275, 276, 277, 0,
	0, 0, 278, 584, 585, 586, 0, 279, 280, 587,
	0, 1322, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	1109, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 308, 0, 309, 588, 589, 1934, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 319, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 0, 251, 0,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 0, 343, 0, 0, 1110, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 596, 0, 597, 355, 0, 356, 357, 358, 359,
	360, 598, 599, 600, 435, 1112, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 0, 367, 368, 370,
	0, 1111, 369, 601, 602, 0, 603, 0, 371, 372,
	1113, 604, 1114, 373, 374, 375, 1115, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 605, 1116, 387, 388, 1117, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1118, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1119,
	422, 0, 0, 1120, 432, 433, 0, 606, 434, 607,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 1121, 445, 1122, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 1123, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 0,
	517, 501, 502, 518, 519, 1124, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 571, 570, 572, 628,
	1356, 1355, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 1108,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 1322, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 1109, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 1110, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 1112, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 1111, 369, 601, 602, 0, 603, 0, 371,
	372, 1113, 604, 1114, 373, 374, 375, 1115, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 1116, 387, 388, 1117, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1118, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1119, 422, 0, 0, 1120, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 1121, 445, 1122,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 1123, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 1124, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 1356, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 1108, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 1322, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 1109, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 1110, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 1112, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 1111, 369,
	601, 602, 0, 603, 0, 371, 372, 1113, 604, 1114,
	373, 374, 375, 1115, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 1116, 387, 388, 1117, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1118, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1119, 422, 0, 0,
	1120, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 1121, 445, 1122, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	1123, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 1124, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 248, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 263,
	264, 0, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 0, 0, 278, 584, 585, 586, 2615,
	279, 280, 587, 0, 0, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	2612, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 2619, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	0, 2822, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 2618, 0, 0,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 596, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 598, 599, 600, 435, 0, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 2819,
	367, 368, 370, 0, 0, 369, 601, 602, 0, 603,
	0, 371, 2821, 0, 604, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 605, 0, 387, 388,
	2818, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 0, 0, 432, 433, 0,
	606, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 0,
	445, 0, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	2617, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 0, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 0, 517, 501, 502, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	2820, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 248, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 263, 264, 0, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 2615, 279, 280, 587, 0,
	0, 2609, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 2612, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 2619, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 0, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 2618, 0, 0, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 355, 0, 356, 357, 358, 359, 360,
	2608, 599, 600, 435, 0, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 0, 367, 368, 370, 0,
	0, 369, 601, 602, 0, 603, 0, 371, 372, 0,
	604, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 0, 0, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 0, 445, 0, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 2617, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 0, 492, 493, 494, 495, 615, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 0, 517,
	501, 502, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 2616, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 1630,
	0, 248, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 263, 264,
	0, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 0, 583, 272, 273, 274, 275, 276,
	277, 0, 0, 0, 278, 584, 585, 586, 0, 279,
	280, 587, 0, 0, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 307, 308, 0, 309, 588, 589,
	0, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 319, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 591, 592, 0,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 0, 343, 0, 0, 0, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 596, 0, 597, 355, 0, 356, 357,
	358, 359, 360, 598, 599, 600, 435, 0, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 0, 369, 601, 602, 0, 603, 0,
	371, 372, 0, 604, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 605, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 253, 0, 432, 433, 0, 606,
	434, 607, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 0, 445,
	0, 609, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 612, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 0, 492, 493, 494, 495,
	615, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 1633, 513, 511, 514, 515,
	516, 0, 517, 501, 502, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	618, 0, 538, 539, 0, 537, 1631, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 1632, 570,
	572, 628, 1326, 0, 248, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 263, 264, 0, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 0, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 1328, 599, 600, 435,
	0, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 0, 369, 601, 602,
	0, 603, 0, 371, 372, 0, 604, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 253, 0, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 1158, 440, 441, 442, 0, 0, 443, 444,
	608, 0, 445, 0, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 0, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 0, 517, 501, 502, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 1323, 0, 248, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 263, 264, 0, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 0, 0,
	278, 584, 585, 586, 0, 279, 280, 587, 0, 0,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	307, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 591, 592, 0, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 0, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 596,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 1325,
	599, 600, 435, 0, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 252, 367, 368, 370, 0, 0,
	369, 601, 602, 0, 603, 0, 371, 372, 0, 604,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 605, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	253, 0, 432, 433, 0, 606, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 1158, 440, 441, 442, 0,
	0, 443, 444, 608, 0, 445, 0, 609, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	612, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 0, 492, 493, 494, 495, 615, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 0, 517, 501,
	502, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 618, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 1229, 0,
	248, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 1231, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 252, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 0, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 253, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 1158, 440,
	441, 442, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 661, 0, 248, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 256, 255, 257, 660, 259, 260, 650, 261, 262,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	263, 264, 0, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 0, 583, 272, 273, 274,
	275, 276, 277, 0, 0, 0, 278, 584, 585, 586,
	0, 279, 280, 587, 0, 0, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	653, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 307, 308, 0, 309,
	588, 589, 0, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 319, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 591,
	592, 0, 0, 0, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 0, 343, 0, 0,
	0, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 654, 354, 596, 0, 597, 355, 0,
	356, 357, 358, 359, 360, 598, 599, 600, 435, 0,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	0, 367, 368, 370, 0, 0, 369, 601, 602, 0,
	603, 0, 371, 372, 0, 604, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 605, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 0, 0, 432, 433,
	0, 606, 434, 607, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	0, 445, 0, 609, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 612, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 0, 492, 493,
	494, 495, 615, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 655, 512, 513, 511,
	514, 515, 516, 0, 517, 501, 502, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 618, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 649, 0, 248, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	650, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 653, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 0, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 654, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 655,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 248, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 263,
	264, 0, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 0, 0, 278, 584, 585, 586, 0,
	279, 280, 587, 0, 0, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	0, 251, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 0, 0, 0,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 596, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 598, 599, 600, 435, 0, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 0, 0, 369, 601, 602, 0, 603,
	0, 371, 372, 0, 604, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 605, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 253, 0, 432, 433, 0,
	606, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	1158, 440, 441, 442, 0, 0, 443, 444, 608, 0,
	445, 0, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 0, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 0, 517, 501, 502, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 248, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 263, 264, 0, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 0, 279, 280, 587, 0,
	0, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 251, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 0, 0, 0, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 355, 0, 356, 357, 358, 359, 360,
	598, 599, 600, 435, 0, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 252, 367, 368, 370, 0,
	0, 369, 601, 602, 0, 603, 0, 371, 372, 0,
	604, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 3204, 422,
	0, 253, 0, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 0, 445, 0, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 0, 492, 493, 494, 495, 615, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 0, 517,
	501, 502, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 2750,
	0, 248, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 263, 264,
	0, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 0, 583, 272, 273, 274, 275, 276,
	277, 0, 0, 0, 278, 584, 585, 586, 0, 279,
	280, 587, 0, 0, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 307, 308, 0, 309, 588, 589,
	0, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 319, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 591, 592, 0,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 0, 343, 0, 0, 0, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 596, 0, 597, 355, 0, 356, 357,
	358, 359, 360, 2749, 599, 600, 435, 0, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 0, 369, 601, 602, 0, 603, 0,
	371, 372, 0, 604, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 605, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 253, 0, 432, 433, 0, 606,
	434, 607, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 0, 445,
	0, 609, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 612, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 0, 492, 493, 494, 495,
	615, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 0, 517, 501, 502, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	618, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 2162, 0, 248, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 263, 264, 0, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 0, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 598, 599, 600, 435,
	0, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 0, 369, 601, 602,
	0, 603, 0, 371, 372, 0, 604, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 253, 0, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 0, 445, 0, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 0, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 0, 517, 501, 502, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	248, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 252, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 0, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 253, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 2077, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 2083, 0, 248, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	263, 264, 0, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 0, 583, 272, 273, 274,
	275, 276, 277, 0, 0, 0, 278, 584, 585, 586,
	0, 279, 280, 587, 0, 0, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 307, 308, 0, 309,
	588, 589, 0, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 319, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 591,
	592, 0, 251, 0, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 0, 343, 0, 0,
	0, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 596, 0, 597, 355, 0,
	356, 357, 358, 359, 360, 2082, 599, 600, 435, 0,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 0, 0, 369, 601, 602, 0,
	603, 0, 371, 372, 0, 604, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 605, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 253, 0, 432, 433,
	0, 606, 434, 607, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	0, 445, 0, 609, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 612, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 0, 492, 493,
	494, 495, 615, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 0, 517, 501, 502, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 618, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 2070, 0, 248, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 2072, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 252, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 253,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 248, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 263,
	264, 0, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 0, 0, 278, 584, 585, 586, 0,
	279, 280, 587, 0, 0, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	0, 251, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 0, 0, 0,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 596, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 2040, 599, 600, 435, 0, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 252,
	367, 368, 370, 0, 0, 369, 601, 602, 0, 603,
	0, 371, 372, 0, 604, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 605, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 253, 0, 432, 433, 0,
	606, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	1158, 440, 441, 442, 0, 0, 443, 444, 608, 0,
	445, 0, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 0, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 0, 517, 501, 502, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 1495, 0, 248, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 263, 264, 0, 265, 266, 267, 268, 269,
	579, 580, 0, 270, 581, 271, 582, 0, 583, 272,
	273, 274, 275, 276, 277, 0, 0, 0, 278, 584,
	585, 586, 0, 279, 280, 587, 0, 0, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 307, 308,
	0, 309, 588, 589, 0, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 319, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	590, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 591, 592, 0, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 593, 0, 0, 0, 342, 0, 343,
	0, 0, 0, 344, 345, 594, 595, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 596, 0, 597,
	355, 0, 356, 357, 358, 359, 360, 1494, 599, 600,
	435, 0, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 0, 369, 601,
	602, 0, 603, 0, 371, 372, 0, 604, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 605,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 253, 0,
	432, 433, 0, 606, 434, 607, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 0, 445, 0, 609, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 612, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 614, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 0,
	492, 493, 494, 495, 615, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 0, 517, 501, 502, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 616, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 617,
	532, 533, 534, 535, 618, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 1486, 0, 248, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 263, 264, 0, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 0, 279, 280, 587, 0,
	0, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 251, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 0, 0, 0, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 355, 0, 356, 357, 358, 359, 360,
	1485, 599, 600, 435, 0, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 252, 367, 368, 370, 0,
	0, 369, 601, 602, 0, 603, 0, 371, 372, 0,
	604, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 253, 0, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 0, 445, 0, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 0, 492, 493, 494, 495, 615, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 0, 517,
	501, 502, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 1483,
	0, 248, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 263, 264,
	0, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 0, 583, 272, 273, 274, 275, 276,
	277, 0, 0, 0, 278, 584, 585, 586, 0, 279,
	280, 587, 0, 0, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 307, 308, 0, 309, 588, 589,
	0, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 319, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 591, 592, 0,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 0, 343, 0, 0, 0, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 596, 0, 597, 355, 0, 356, 357,
	358, 359, 360, 1482, 599, 600, 435, 0, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 0, 369, 601, 602, 0, 603, 0,
	371, 372, 0, 604, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 605, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 253, 0, 432, 433, 0, 606,
	434, 607, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 0, 445,
	0, 609, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 612, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 0, 492, 493, 494, 495,
	615, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 0, 517, 501, 502, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	618, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 1478, 0, 248, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 263, 264, 0, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 0, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 251, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 1477, 599, 600, 435,
	0, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 252, 367, 368, 370, 0, 0, 369, 601, 602,
	0, 603, 0, 371, 372, 0, 604, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 253, 0, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 0, 445, 0, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 0, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 0, 517, 501, 502, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 1433, 0, 248, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 263, 264, 0, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 0, 0,
	278, 584, 585, 586, 0, 279, 280, 587, 0, 0,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	307, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 591, 592, 0, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 0, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 596,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 598,
	599, 600, 435, 0, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 252, 367, 368, 370, 0, 0,
	369, 601, 602, 0, 603, 0, 371, 372, 0, 604,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 605, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	253, 0, 432, 433, 0, 606, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 0, 445, 0, 609, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	612, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 0, 492, 493, 494, 495, 615, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 0, 517, 501,
	502, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 618, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 1344, 0,
	248, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 251,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 252, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 0, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 253, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 1337, 0, 248, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	263, 264, 0, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 0, 583, 272, 273, 274,
	275, 276, 277, 0, 0, 0, 278, 584, 585, 586,
	0, 279, 280, 587, 0, 0, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 307, 308, 0, 309,
	588, 589, 0, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 319, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 591,
	592, 0, 251, 0, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 0, 343, 0, 0,
	0, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 596, 0, 597, 355, 0,
	356, 357, 358, 359, 360, 1339, 599, 600, 435, 0,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 0, 0, 369, 601, 602, 0,
	603, 0, 371, 372, 0, 604, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 605, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 253, 0, 432, 433,
	0, 606, 434, 607, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	0, 445, 0, 609, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 612, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 0, 492, 493,
	494, 495, 615, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 0, 517, 501, 502, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 618, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 631, 0, 248, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 251, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 252, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 253,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 239, 0, 248,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 263, 264, 0, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 0, 583, 272, 273, 274, 275, 276, 277, 0,
	0, 0, 278, 584, 585, 586, 0, 279, 280, 587,
	0, 0, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 308, 0, 309, 588, 589, 0, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 319, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 0, 251, 0,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 0, 343, 0, 0, 0, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 596, 0, 597, 355, 0, 356, 357, 358, 359,
	360, 598, 599, 600, 435, 0, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 252, 367, 368, 370,
	0, 0, 369, 601, 602, 0, 603, 0, 371, 372,
	0, 604, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 605, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 253, 0, 432, 433, 0, 606, 434, 607,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 0, 445, 0, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 0, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 0,
	517, 501, 502, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 248, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 263, 264, 0, 265, 266, 267, 268, 269,
	579, 580, 0, 270, 581, 271, 582, 0, 583, 272,
	273, 274, 275, 276, 277, 0, 0, 0, 278, 584,
	585, 586, 0, 279, 280, 587, 0, 0, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 307, 308,
	0, 309, 588, 589, 0, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 319, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	590, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 591, 592, 0, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 593, 0, 0, 0, 342, 0, 343,
	0, 0, 0, 344, 345, 594, 595, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 596, 0, 597,
	355, 0, 356, 357, 358, 359, 360, 598, 599, 600,
	435, 0, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 0, 369, 601,
	602, 0, 603, 0, 371, 372, 0, 604, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 605,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 253, 0,
	432, 433, 0, 606, 434, 607, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 0, 445, 0, 609, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 612, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 614, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 0,
	492, 493, 494, 495, 615, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 0, 517, 501, 502, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 616, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 617,
	532, 533, 534, 535, 618, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 248, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 263, 264,
	0, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 0, 583, 272, 273, 274, 275, 276,
	277, 0, 0, 0, 278, 584, 585, 586, 0, 279,
	280, 587, 0, 0, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 653, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 307, 308, 0, 309, 588, 589,
	0, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 319, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 591, 592, 0,
	0, 0, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 0, 343, 0, 0, 0, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 654, 354, 596, 0, 597, 355, 0, 356, 357,
	358, 359, 360, 598, 599, 600, 435, 0, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 0, 367,
	368, 370, 0, 0, 369, 601, 602, 0, 603, 0,
	371, 372, 0, 604, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 605, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 606,
	434, 607, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 0, 445,
	0, 609, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 612, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 0, 492, 493, 494, 495,
	615, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 655, 512, 513, 511, 514, 515,
	516, 0, 517, 501, 502, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	618, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 248, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 263, 264, 0, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 0, 0,
	278, 584, 585, 586, 0, 279, 280, 587, 0, 0,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	2197, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 591, 592, 0, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 0, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 596,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 598,
	599, 600, 435, 0, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 252, 367, 368, 370, 0, 0,
	369, 601, 602, 0, 603, 0, 371, 372, 0, 604,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 605, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	253, 0, 432, 433, 0, 606, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 0, 445, 0, 609, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	612, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 0, 492, 493, 494, 495, 615, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 0, 517, 501,
	502, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 618, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 248, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	263, 264, 0, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 0, 583, 272, 273, 274,
	275, 276, 277, 0, 0, 0, 278, 584, 585, 586,
	0, 279, 280, 587, 0, 0, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 2195, 308, 0, 309,
	588, 589, 0, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 319, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 591,
	592, 0, 251, 0, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 0, 343, 0, 0,
	0, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 596, 0, 597, 355, 0,
	356, 357, 358, 359, 360, 598, 599, 600, 435, 0,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	252, 367, 368, 370, 0, 0, 369, 601, 602, 0,
	603, 0, 371, 372, 0, 604, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 605, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 253, 0, 432, 433,
	0, 606, 434, 607, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	0, 445, 0, 609, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 612, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 0, 492, 493,
	494, 495, 615, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 0, 517, 501, 502, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 618, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 248,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 263, 264, 0, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 0, 583, 272, 273, 274, 275, 276, 277, 0,
	0, 0, 278, 584, 585, 586, 0, 279, 280, 587,
	0, 0, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 2193, 308, 0, 309, 588, 589, 0, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 319, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 0, 251, 0,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 0, 343, 0, 0, 0, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 596, 0, 597, 355, 0, 356, 357, 358, 359,
	360, 598, 599, 600, 435, 0, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 252, 367, 368, 370,
	0, 0, 369, 601, 602, 0, 603, 0, 371, 372,
	0, 604, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 605, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 253, 0, 432, 433, 0, 606, 434, 607,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 0, 445, 0, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 0, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 0,
	517, 501, 502, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 248, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 263, 264, 0, 265, 266, 267, 268, 269,
	579, 580, 0, 270, 581, 271, 582, 0, 583, 272,
	273, 274, 275, 276, 277, 0, 0, 0, 278, 584,
	585, 586, 0, 279, 280, 587, 0, 0, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 307, 308,
	0, 309, 588, 589, 0, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 319, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	590, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 591, 592, 0, 251, 0, 0, 0, 0, 0,
	339, 340, 341, 593, 0, 0, 0, 342, 0, 343,
	0, 0, 0, 344, 345, 594, 595, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 596, 0, 597,
	355, 0, 356, 357, 358, 359, 360, 2127, 599, 600,
	435, 0, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 252, 367, 368, 370, 0, 0, 369, 601,
	602, 0, 603, 0, 371, 372, 0, 604, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 605,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 253, 0,
	432, 433, 0, 606, 434, 607, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 0, 445, 0, 609, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 612, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 614, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 0,
	492, 493, 494, 495, 615, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 0, 517, 501, 502, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 616, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 617,
	532, 533, 534, 535, 618, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 248, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 263, 264,
	0, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 0, 583, 272, 273, 274, 275, 276,
	277, 0, 0, 0, 278, 584, 585, 586, 0, 279,
	280, 587, 0, 0, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 307, 308, 0, 309, 588, 589,
	0, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 319, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 591, 592, 0,
	251, 0, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 0, 343, 0, 0, 0, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 596, 0, 597, 355, 0, 356, 357,
	358, 359, 360, 2121, 599, 600, 435, 0, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 252, 367,
	368, 370, 0, 0, 369, 601, 602, 0, 603, 0,
	371, 372, 0, 604, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 605, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 253, 0, 432, 433, 0, 606,
	434, 607, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 0, 445,
	0, 609, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 612, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 0, 492, 493, 494, 495,
	615, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 0, 517, 501, 502, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	618, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 248, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 263, 264, 0, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 0, 0,
	278, 584, 585, 586, 0, 279, 280, 587, 0, 0,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	307, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 591, 592, 0, 251, 0, 0, 0,
	0, 0, 339, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 0, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 596,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 2089,
	599, 600, 435, 0, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 252, 367, 368, 370, 0, 0,
	369, 601, 602, 0, 603, 0, 371, 372, 0, 604,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 605, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	253, 0, 432, 433, 0, 606, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 0, 445, 0, 609, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	612, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 0, 492, 493, 494, 495, 615, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 0, 517, 501,
	502, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 618, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 823, 0,
	248, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 822, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 0, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 821, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 248, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 2822, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 3858, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 684, 0, 248,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 263, 264, 1199, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 0, 583, 272, 273, 274, 275, 276, 277, 0,
	0, 0, 278, 584, 585, 1197, 0, 279, 280, 587,
	0, 0, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 308, 0, 309, 588, 589, 0, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 319, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 0, 343, 0, 0, 0, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 596, 0, 597, 355, 0, 356, 357, 358, 359,
	360, 598, 599, 600, 435, 0, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 0, 367, 368, 370,
	0, 0, 369, 601, 602, 0, 603, 0, 371, 372,
	0, 604, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 605, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 685, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 606, 434, 607,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 0, 445, 0, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 0, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 681, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 1200, 516, 0,
	517, 501, 502, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 680, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 571, 570, 572, 628,
	684, 0, 248, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 263,
	264, 1199, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 0, 0, 278, 584, 585, 1197, 0,
	279, 280, 587, 0, 0, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	0, 0, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 0, 0, 0,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 596, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 598, 599, 600, 435, 0, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 0,
	367, 368, 370, 0, 0, 369, 601, 602, 0, 603,
	0, 371, 372, 0, 604, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 605, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 685, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 0, 0, 432, 433, 0,
	606, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 0,
	445, 0, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 0, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	681, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	1200, 516, 0, 517, 501, 502, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 680, 620,
	621, 622, 0, 556, 0, 548, 1198, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 640, 0, 248, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 639,
	261, 262, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 263, 264, 0, 265, 266, 267, 268, 269,
	579, 580, 0, 270, 581, 271, 582, 0, 583, 272,
	273, 274, 275, 276, 277, 0, 0, 0, 278, 584,
	585, 586, 0, 279, 280, 587, 0, 0, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 307, 308,
	0, 309, 588, 589, 0, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 319, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	590, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 591, 592, 0, 0, 0, 0, 0, 0, 0,
	339, 340, 341, 593, 0, 0, 0, 342, 0, 343,
	0, 0, 0, 344, 345, 594, 595, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 596, 0, 597,
	355, 0, 356, 357, 358, 359, 360, 598, 599, 600,
	435, 0, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 0, 367, 368, 370, 0, 0, 369, 601,
	602, 0, 603, 0, 371, 372, 0, 604, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 605,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 0, 0,
	432, 433, 0, 606, 434, 607, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 0, 445, 0, 609, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 612, 464,
	613, 638, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 614, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 0,
	492, 493, 494, 495, 615, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 0, 517, 501, 502, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 616, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 617,
	532, 533, 534, 535, 618, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 248, 2809, 0, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 0, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 248, 3868, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 263, 264, 0, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 0, 0,
	278, 584, 585, 586, 0, 279, 280, 587, 0, 0,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	307, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 591, 592, 0, 0, 0, 0, 0,
	0, 0, 339, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 0, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 596,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 598,
	599, 600, 435, 0, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 0, 367, 368, 370, 0, 0,
	369, 601, 602, 0, 603, 0, 371, 372, 0, 604,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 605, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	0, 0, 432, 433, 0, 606, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 0, 445, 0, 609, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	612, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 0, 492, 493, 494, 495, 615, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 0, 517, 501,
	502, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 618, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 248, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	263, 264, 0, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 0, 583, 272, 273, 274,
	275, 276, 277, 0, 0, 0, 278, 584, 585, 586,
	0, 279, 280, 587, 0, 0, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 307, 308, 0, 309,
	588, 589, 3573, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 319, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 591,
	592, 0, 0, 0, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 0, 343, 0, 0,
	0, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 596, 0, 597, 355, 0,
	356, 357, 358, 359, 360, 598, 599, 600, 435, 0,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	0, 367, 368, 370, 0, 0, 369, 601, 602, 0,
	603, 0, 371, 372, 0, 604, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 605, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 0, 0, 432, 433,
	0, 606, 434, 607, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	0, 445, 0, 609, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 612, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 0, 492, 493,
	494, 495, 615, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 0, 517, 501, 502, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 618, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 248,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 578, 0, 2527, 0, 0, 263, 264, 0, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 0, 583, 272, 273, 274, 275, 276, 277, 0,
	0, 0, 278, 584, 585, 586, 0, 279, 280, 587,
	0, 0, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 308, 0, 309, 588, 589, 0, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 319, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 0, 343, 0, 0, 0, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 596, 0, 597, 355, 0, 356, 357, 358, 359,
	360, 598, 599, 600, 435, 0, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 0, 367, 368, 370,
	0, 0, 369, 601, 602, 0, 603, 0, 371, 372,
	0, 604, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 605, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 606, 434, 607,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 0, 445, 0, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 0, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 0,
	517, 501, 502, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 571, 570, 572, 628,
	248, 2809, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 0, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 0, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 2806, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 248, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	2172, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 0, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 2160, 0, 248,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 0, 261, 262, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 263, 264, 0, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 0, 583, 272, 273, 274, 275, 276, 277, 0,
	0, 0, 278, 584, 585, 586, 0, 279, 280, 587,
	0, 0, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 308, 0, 309, 588, 589, 0, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 319, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 0, 343, 0, 0, 0, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 596, 0, 597, 355, 0, 356, 357, 358, 359,
	360, 598, 599, 600, 435, 0, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 0, 367, 368, 370,
	0, 0, 369, 601, 602, 0, 603, 0, 371, 372,
	0, 604, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 605, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 606, 434, 607,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 0, 445, 0, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 0, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 0,
	517, 501, 502, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 571, 570, 572, 628,
	684, 0, 248, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 263,
	264, 0, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 0, 0, 278, 584, 585, 586, 0,
	279, 674, 587, 0, 0, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	0, 0, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 0, 0, 0,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 596, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 598, 599, 600, 435, 0, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 0,
	367, 368, 370, 0, 0, 369, 601, 602, 0, 603,
	0, 371, 372, 0, 604, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 605, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 685, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 0, 0, 432, 433, 0,
	606, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 0,
	445, 0, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 0, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	681, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	1518, 516, 0, 517, 501, 502, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 680, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 1499, 0, 248, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 0,
	261, 262, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 263, 264, 0, 265, 266, 267, 268, 269,
	579, 580, 0, 270, 581, 271, 582, 0, 583, 272,
	273, 274, 275, 276, 277, 0, 0, 0, 278, 584,
	585, 586, 0, 279, 280, 587, 0, 0, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 307, 308,
	0, 309, 588, 589, 0, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 319, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	590, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 591, 592, 0, 0, 0, 0, 0, 0, 0,
	339, 340, 341, 593, 0, 0, 0, 342, 0, 343,
	0, 0, 0, 344, 345, 594, 595, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 596, 0, 597,
	355, 0, 356, 357, 358, 359, 360, 1498, 599, 600,
	435, 0, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 0, 367, 368, 370, 0, 0, 369, 601,
	602, 0, 603, 0, 371, 372, 0, 604, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 605,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 0, 0,
	432, 433, 0, 606, 434, 607, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 0, 445, 0, 609, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 612, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 614, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 0,
	492, 493, 494, 495, 615, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 0, 517, 501, 502, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 616, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 617,
	532, 533, 534, 535, 618, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 1492, 0, 248, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 263, 264, 0, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 0, 279, 280, 587, 0,
	0, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 0, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 0, 0, 0, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 355, 0, 356, 357, 358, 359, 360,
	1491, 599, 600, 435, 0, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 0, 367, 368, 370, 0,
	0, 369, 601, 602, 0, 603, 0, 371, 372, 0,
	604, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 0, 0, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 0, 445, 0, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 0, 492, 493, 494, 495, 615, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 0, 517,
	501, 502, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 1439,
	0, 248, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 263, 264,
	0, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 0, 583, 272, 273, 274, 275, 276,
	277, 0, 0, 0, 278, 584, 585, 586, 0, 279,
	280, 587, 0, 0, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 307, 308, 0, 309, 588, 589,
	0, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 319, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 591, 592, 0,
	0, 0, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 0, 343, 0, 0, 0, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 596, 0, 597, 355, 0, 356, 357,
	358, 359, 360, 1438, 599, 600, 435, 0, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 0, 367,
	368, 370, 0, 0, 369, 601, 602, 0, 603, 0,
	371, 372, 0, 604, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 605, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 606,
	434, 607, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 0, 445,
	0, 609, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 612, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 0, 492, 493, 494, 495,
	615, 496, 0, 497, 498, 504, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 0, 517, 501, 502, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	618, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 1422, 0, 248, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 263, 264, 0, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 0, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 1420, 599, 600, 435,
	0, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 0, 367, 368, 370, 0, 0, 369, 601, 602,
	0, 603, 0, 371, 372, 0, 604, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 0, 0, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 0, 445, 0, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 0, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 0, 517, 501, 502, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 1416, 0, 248, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 263, 264, 0, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 0, 0,
	278, 584, 585, 586, 0, 279, 280, 587, 0, 0,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	307, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 591, 592, 0, 0, 0, 0, 0,
	0, 0, 339, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 0, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 596,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 598,
	599, 600, 435, 0, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 0, 367, 368, 370, 0, 0,
	369, 601, 602, 0, 603, 0, 371, 372, 0, 604,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 605, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	0, 0, 432, 433, 0, 606, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 0, 445, 0, 609, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	612, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 0, 492, 493, 494, 495, 615, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 0, 517, 501,
	502, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 618, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 1347, 0,
	248, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 0, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 0, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 1331, 0, 248, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 256, 255, 257, 258, 259, 260, 0, 261, 262,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	263, 264, 0, 265, 266, 267, 268, 269, 579, 580,
	0, 270, 581, 271, 582, 0, 583, 272, 273, 274,
	275, 276, 277, 0, 0, 0, 278, 584, 585, 586,
	0, 279, 280, 587, 0, 0, 0, 281, 282, 283,
	284, 285, 286, 287, 0, 0, 289, 290, 291, 288,
	292, 0, 293, 0, 294, 295, 296, 297, 298, 299,
	0, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 0, 0, 305, 306, 307, 308, 0, 309,
	588, 589, 0, 313, 310, 311, 0, 314, 312, 0,
	315, 316, 317, 0, 0, 318, 319, 320, 0, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 590, 328,
	329, 330, 332, 334, 331, 335, 336, 337, 338, 591,
	592, 0, 0, 0, 0, 0, 0, 0, 339, 340,
	341, 593, 0, 0, 0, 342, 0, 343, 0, 0,
	0, 344, 345, 594, 595, 346, 347, 348, 349, 350,
	351, 352, 353, 0, 354, 596, 0, 597, 355, 0,
	356, 357, 358, 359, 360, 598, 599, 600, 435, 0,
	361, 362, 0, 363, 364, 365, 366, 0, 0, 0,
	0, 367, 368, 370, 0, 0, 369, 601, 602, 0,
	603, 0, 371, 372, 0, 604, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 605, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 0, 0, 432, 433,
	0, 606, 434, 607, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 608,
	0, 445, 0, 609, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 610, 458,
	459, 460, 611, 461, 462, 463, 612, 464, 613, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 614, 475, 477, 476, 478, 0, 479, 0, 0,
	0, 0, 0, 480, 0, 482, 483, 484, 481, 485,
	486, 487, 488, 0, 489, 490, 491, 0, 492, 493,
	494, 495, 615, 496, 0, 497, 498, 504, 505, 499,
	500, 506, 507, 508, 509, 510, 0, 512, 513, 511,
	514, 515, 516, 0, 517, 501, 502, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 616, 0, 526, 0,
	527, 528, 529, 530, 503, 531, 536, 617, 532, 533,
	534, 535, 618, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 333, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 248,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 254, 256, 255, 257,
	258, 259, 260, 1179, 261, 262, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 263, 264, 0, 265,
	266, 267, 268, 269, 579, 580, 0, 270, 581, 271,
	582, 0, 583, 272, 273, 274, 275, 276, 277, 0,
	0, 0, 278, 584, 585, 586, 0, 279, 280, 587,
	0, 0, 0, 281, 282, 283, 284, 285, 286, 287,
	0, 0, 289, 290, 291, 288, 292, 0, 293, 0,
	294, 295, 296, 297, 298, 299, 0, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 308, 0, 309, 588, 589, 0, 313,
	310, 311, 0, 314, 312, 0, 315, 316, 317, 0,
	0, 318, 319, 320, 0, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 590, 328, 329, 330, 332, 334,
	331, 335, 336, 337, 338, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 339, 340, 341, 593, 0, 0,
	0, 342, 0, 343, 0, 0, 0, 344, 345, 594,
	595, 346, 347, 348, 349, 350, 351, 352, 353, 0,
	354, 596, 0, 597, 355, 0, 356, 357, 358, 359,
	360, 598, 599, 600, 435, 0, 361, 362, 0, 363,
	364, 365, 366, 0, 0, 0, 0, 367, 368, 370,
	0, 0, 369, 601, 602, 0, 603, 0, 371, 372,
	0, 604, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 605, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 606, 434, 607,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 608, 0, 445, 0, 609,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 610, 458, 459, 460, 611, 461,
	462, 463, 612, 464, 613, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 614, 475, 477,
	476, 478, 0, 479, 0, 0, 0, 0, 0, 480,
	0, 482, 483, 484, 481, 485, 486, 487, 488, 0,
	489, 490, 491, 0, 492, 493, 494, 495, 615, 496,
	0, 497, 498, 504, 505, 499, 500, 506, 507, 508,
	509, 510, 0, 512, 513, 511, 514, 515, 516, 0,
	517, 501, 502, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 616, 0, 526, 0, 527, 528, 529, 530,
	503, 531, 536, 617, 532, 533, 534, 535, 618, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 333, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 248, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 254, 256, 255, 257, 258, 259, 260, 690,
	261, 262, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 263, 264, 0, 265, 266, 267, 268, 269,
	579, 580, 0, 270, 581, 271, 582, 0, 583, 272,
	273, 274, 275, 276, 277, 0, 0, 0, 278, 584,
	585, 586, 0, 279, 280, 587, 0, 0, 0, 281,
	282, 283, 284, 285, 286, 287, 0, 0, 289, 290,
	291, 288, 292, 0, 293, 0, 294, 295, 296, 297,
	298, 299, 0, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 0, 0, 305, 306, 307, 308,
	0, 309, 588, 589, 0, 313, 310, 311, 0, 314,
	312, 0, 315, 316, 317, 0, 0, 318, 319, 320,
	0, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	590, 328, 329, 330, 332, 334, 331, 335, 336, 337,
	338, 591, 592, 0, 0, 0, 0, 0, 0, 0,
	339, 340, 341, 593, 0, 0, 0, 342, 0, 343,
	0, 0, 0, 344, 345, 594, 595, 346, 347, 348,
	349, 350, 351, 352, 353, 0, 354, 596, 0, 597,
	355, 0, 356, 357, 358, 359, 360, 598, 599, 600,
	435, 0, 361, 362, 0, 363, 364, 365, 366, 0,
	0, 0, 0, 367, 368, 370, 0, 0, 369, 601,
	602, 0, 603, 0, 371, 372, 0, 604, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 605,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 0, 0,
	432, 433, 0, 606, 434, 607, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 608, 0, 445, 0, 609, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	610, 458, 459, 460, 611, 461, 462, 463, 612, 464,
	613, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 614, 475, 477, 476, 478, 0, 479,
	0, 0, 0, 0, 0, 480, 0, 482, 483, 484,
	481, 485, 486, 487, 488, 0, 489, 490, 491, 0,
	492, 493, 494, 495, 615, 496, 0, 497, 498, 504,
	505, 499, 500, 506, 507, 508, 509, 510, 0, 512,
	513, 511, 514, 515, 516, 0, 517, 501, 502, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 616, 0,
	526, 0, 527, 528, 529, 530, 503, 531, 536, 617,
	532, 533, 534, 535, 618, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 333, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 684, 0, 248, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 263, 264, 0, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 0, 279, 674, 587, 0,
	0, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 672, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 0, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 0, 0, 0, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 355, 0, 356, 357, 358, 359, 360,
	598, 599, 600, 435, 0, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 0, 367, 368, 370, 0,
	0, 369, 601, 602, 0, 603, 0, 371, 372, 0,
	604, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 673, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 685, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 0, 0, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 0, 445, 0, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 0, 492, 493, 494, 495, 675, 496, 0,
	497, 498, 504, 505, 499, 500, 681, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 676, 516, 0, 517,
	501, 502, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 680, 620, 621, 622, 0, 556,
	0, 548, 678, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 666,
	0, 248, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 256,
	255, 257, 258, 259, 260, 0, 261, 262, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 263, 264,
	0, 265, 266, 267, 268, 269, 579, 580, 0, 270,
	581, 271, 582, 0, 583, 272, 273, 274, 275, 276,
	277, 0, 0, 0, 278, 584, 585, 586, 0, 279,
	280, 587, 0, 0, 0, 281, 282, 283, 284, 285,
	286, 287, 0, 0, 289, 290, 291, 288, 292, 0,
	293, 0, 294, 295, 296, 297, 298, 299, 0, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	0, 0, 305, 306, 307, 308, 0, 309, 588, 589,
	0, 313, 310, 311, 0, 314, 312, 0, 315, 316,
	317, 0, 0, 318, 319, 320, 0, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 590, 328, 329, 330,
	332, 334, 331, 335, 336, 337, 338, 591, 592, 0,
	0, 0, 0, 0, 0, 0, 339, 340, 341, 593,
	0, 0, 0, 342, 0, 343, 0, 0, 0, 344,
	345, 594, 595, 346, 347, 348, 349, 350, 351, 352,
	353, 0, 354, 596, 0, 597, 355, 0, 356, 357,
	358, 359, 360, 598, 599, 600, 435, 0, 361, 362,
	0, 363, 364, 365, 366, 0, 0, 0, 0, 367,
	368, 370, 0, 0, 369, 601, 602, 0, 603, 0,
	371, 372, 0, 604, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 605, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 606,
	434, 607, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 608, 0, 445,
	0, 609, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 610, 458, 459, 460,
	611, 461, 462, 463, 612, 464, 613, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 614,
	475, 477, 476, 478, 0, 479, 0, 0, 0, 0,
	0, 480, 0, 482, 483, 484, 481, 485, 486, 487,
	488, 0, 489, 490, 491, 0, 492, 493, 494, 495,
	615, 496, 0, 497, 498, 667, 505, 499, 500, 506,
	507, 508, 509, 510, 0, 512, 513, 511, 514, 515,
	516, 0, 517, 501, 502, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 616, 0, 526, 0, 527, 528,
	529, 530, 503, 531, 536, 617, 532, 533, 534, 535,
	618, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 333, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 663, 0, 248, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 263, 264, 0, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 0, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 598, 599, 600, 435,
	0, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 0, 367, 368, 370, 0, 0, 369, 601, 602,
	0, 603, 0, 371, 372, 0, 604, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 0, 0, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 0, 445, 0, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 0, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 0, 517, 501, 502, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 657, 0, 248, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 256, 255, 257, 258, 259,
	260, 0, 261, 262, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 263, 264, 0, 265, 266, 267,
	268, 269, 579, 580, 0, 270, 581, 271, 582, 0,
	583, 272, 273, 274, 275, 276, 277, 0, 0, 0,
	278, 584, 585, 586, 0, 279, 280, 587, 0, 0,
	0, 281, 282, 283, 284, 285, 286, 287, 0, 0,
	289, 290, 291, 288, 292, 0, 293, 0, 294, 295,
	296, 297, 298, 299, 0, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 0, 0, 305, 306,
	307, 308, 0, 309, 588, 589, 0, 313, 310, 311,
	0, 314, 312, 0, 315, 316, 317, 0, 0, 318,
	319, 320, 0, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 590, 328, 329, 330, 332, 334, 331, 335,
	336, 337, 338, 591, 592, 0, 0, 0, 0, 0,
	0, 0, 339, 340, 341, 593, 0, 0, 0, 342,
	0, 343, 0, 0, 0, 344, 345, 594, 595, 346,
	347, 348, 349, 350, 351, 352, 353, 0, 354, 596,
	0, 597, 355, 0, 356, 357, 358, 359, 360, 598,
	599, 600, 435, 0, 361, 362, 0, 363, 364, 365,
	366, 0, 0, 0, 0, 367, 368, 370, 0, 0,
	369, 601, 602, 0, 603, 0, 371, 372, 0, 604,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 605, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	0, 0, 432, 433, 0, 606, 434, 607, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 608, 0, 445, 0, 609, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 610, 458, 459, 460, 611, 461, 462, 463,
	612, 464, 613, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 614, 475, 477, 476, 478,
	0, 479, 0, 0, 0, 0, 0, 480, 0, 482,
	483, 484, 481, 485, 486, 487, 488, 0, 489, 490,
	491, 0, 492, 493, 494, 495, 615, 496, 0, 497,
	498, 504, 505, 499, 500, 506, 507, 508, 509, 510,
	0, 512, 513, 511, 514, 515, 516, 0, 517, 501,
	502, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	616, 0, 526, 0, 527, 528, 529, 530, 503, 531,
	536, 617, 532, 533, 534, 535, 618, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 333,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 635, 0,
	248, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 598, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 0, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 0, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 248, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 0, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 598, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 248, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 263,
	264, 0, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 0, 0, 278, 584, 585, 586, 0,
	279, 280, 587, 0, 0, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	0, 0, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 0, 0, 0,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 596, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 3287, 599, 600, 435, 0, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 0,
	367, 368, 370, 0, 0, 369, 601, 602, 0, 603,
	0, 371, 372, 0, 604, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 605, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 0, 0, 432, 433, 0,
	606, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 0,
	445, 0, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 0, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 0, 517, 501, 502, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 248, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 263, 264, 0, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 0, 279, 280, 587, 0,
	0, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 0, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 0, 0, 0, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 355, 0, 356, 357, 358, 359, 360,
	3235, 599, 600, 435, 0, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 0, 367, 368, 370, 0,
	0, 369, 601, 602, 0, 603, 0, 371, 372, 0,
	604, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 0, 0, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 0, 445, 0, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 0, 492, 493, 494, 495, 615, 496, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 0, 517,
	501, 502, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 248, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 263, 264, 0, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 0, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 3176, 599, 600, 435,
	0, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 0, 367, 368, 370, 0, 0, 369, 601, 602,
	0, 603, 0, 371, 372, 0, 604, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 0, 0, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 0, 445, 0, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 0, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 0, 517, 501, 502, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	248, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 3174, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 0, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 0, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 248, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 0, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 3160, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 248, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 263,
	264, 0, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 0, 0, 278, 584, 585, 586, 0,
	279, 280, 587, 0, 0, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	0, 0, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 0, 0, 0,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 596, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 2759, 599, 600, 435, 0, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 0,
	367, 368, 370, 0, 0, 369, 601, 602, 0, 603,
	0, 371, 372, 0, 604, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 605, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 0, 0, 432, 433, 0,
	606, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 0,
	445, 0, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 477, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 0, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 0, 517, 501, 502, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 248, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 263, 264, 0, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 0, 279, 280, 587, 0,
	0, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 0, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 0, 0, 0, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 355, 0, 356, 357, 358, 359, 360,
	598, 599, 600, 435, 0, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 0, 367, 368, 370, 0,
	0, 369, 601, 602, 0, 603, 0, 371, 372, 0,
	604, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 0, 0, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 0, 445, 0, 609, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 0, 492, 493, 494, 495, 615, 496, 0,
	497, 498, 667, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 0, 517,
	501, 502, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 248, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 254, 256, 255, 257, 258, 259, 260, 0, 261,
	262, 0, 0, 0, 0, 0, 578, 0, 2106, 0,
	0, 263, 264, 0, 265, 266, 267, 268, 269, 579,
	580, 0, 270, 581, 271, 582, 0, 583, 272, 273,
	274, 275, 276, 277, 0, 0, 0, 278, 584, 585,
	586, 0, 279, 280, 587, 0, 0, 0, 281, 282,
	283, 284, 285, 286, 287, 0, 0, 289, 290, 291,
	288, 292, 0, 293, 0, 294, 295, 296, 297, 298,
	299, 0, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 308, 0,
	309, 588, 589, 0, 313, 310, 311, 0, 314, 312,
	0, 315, 316, 317, 0, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 590,
	328, 329, 330, 332, 334, 331, 335, 336, 337, 338,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 339,
	340, 341, 593, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 594, 595, 346, 347, 348, 349,
	350, 351, 352, 353, 0, 354, 596, 0, 597, 355,
	0, 356, 357, 358, 359, 360, 598, 599, 600, 435,
	0, 361, 362, 0, 363, 364, 365, 366, 0, 0,
	0, 0, 367, 368, 370, 0, 0, 369, 601, 602,
	0, 603, 0, 371, 372, 0, 604, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 605, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 0, 0, 432,
	433, 0, 606, 434, 607, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	608, 0, 445, 0, 609, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 610,
	458, 459, 460, 611, 461, 462, 463, 612, 464, 613,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 614, 475, 477, 476, 478, 0, 479, 0,
	0, 0, 0, 0, 480, 0, 482, 483, 484, 481,
	485, 486, 487, 488, 0, 489, 490, 491, 0, 492,
	493, 494, 495, 615, 496, 0, 497, 498, 504, 505,
	499, 500, 506, 507, 508, 509, 510, 0, 512, 513,
	511, 514, 515, 516, 0, 0, 501, 502, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 616, 0, 526,
	0, 527, 528, 529, 530, 503, 531, 536, 617, 532,
	533, 534, 535, 618, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 333, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	248, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 254, 256, 255,
	257, 258, 259, 260, 0, 261, 262, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 263, 264, 0,
	265, 266, 267, 268, 269, 579, 580, 0, 270, 581,
	271, 582, 0, 583, 272, 273, 274, 275, 276, 277,
	0, 0, 0, 278, 584, 585, 586, 0, 279, 280,
	587, 0, 0, 0, 281, 282, 283, 284, 285, 286,
	287, 0, 0, 289, 290, 291, 288, 292, 0, 293,
	0, 294, 295, 296, 297, 298, 299, 0, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 0, 309, 588, 589, 0,
	313, 310, 311, 0, 314, 312, 0, 315, 316, 317,
	0, 0, 318, 319, 320, 0, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 590, 328, 329, 330, 332,
	334, 331, 335, 336, 337, 338, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 339, 340, 341, 593, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	594, 595, 346, 347, 348, 349, 350, 351, 352, 353,
	0, 354, 596, 0, 597, 355, 0, 356, 357, 358,
	359, 360, 1463, 599, 600, 435, 0, 361, 362, 0,
	363, 364, 365, 366, 0, 0, 0, 0, 367, 368,
	370, 0, 0, 369, 601, 602, 0, 603, 0, 371,
	372, 0, 604, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 605, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 0, 0, 432, 433, 0, 606, 434,
	607, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 608, 0, 445, 0,
	609, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 610, 458, 459, 460, 611,
	461, 462, 463, 612, 464, 613, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 614, 475,
	477, 476, 478, 0, 479, 0, 0, 0, 0, 0,
	480, 0, 482, 483, 484, 481, 485, 486, 487, 488,
	0, 489, 490, 491, 0, 492, 493, 494, 495, 615,
	496, 0, 497, 498, 504, 505, 499, 500, 506, 507,
	508, 509, 510, 0, 512, 513, 511, 514, 515, 516,
	0, 517, 501, 502, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 616, 0, 526, 0, 527, 528, 529,
	530, 503, 531, 536, 617, 532, 533, 534, 535, 618,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 333, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 248, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 254, 256, 255, 257, 258, 259, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 263, 264, 0, 265, 266, 267, 268,
	269, 579, 580, 0, 270, 581, 271, 582, 0, 583,
	272, 273, 274, 275, 276, 277, 0, 0, 0, 278,
	584, 585, 586, 0, 279, 280, 587, 0, 0, 0,
	281, 282, 283, 284, 285, 286, 287, 0, 0, 289,
	290, 291, 288, 292, 0, 293, 0, 294, 295, 296,
	297, 298, 299, 0, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	308, 0, 309, 588, 589, 0, 313, 310, 311, 0,
	314, 312, 0, 315, 316, 317, 0, 0, 318, 319,
	320, 0, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 590, 328, 329, 330, 332, 334, 331, 335, 336,
	337, 338, 591, 592, 0, 0, 0, 0, 0, 0,
	0, 339, 340, 341, 593, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 344, 345, 594, 595, 346, 347,
	348, 349, 350, 351, 352, 353, 0, 354, 596, 0,
	597, 355, 0, 356, 357, 358, 359, 360, 1399, 599,
	600, 435, 0, 361, 362, 0, 363, 364, 365, 366,
	0, 0, 0, 0, 367, 368, 370, 0, 0, 369,
	601, 602, 0, 603, 0, 371, 372, 0, 604, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	605, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 606, 434, 607, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 608, 0, 445, 0, 609, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 610, 458, 459, 460, 611, 461, 462, 463, 612,
	464, 613, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 614, 475, 477, 476, 478, 0,
	479, 0, 0, 0, 0, 0, 480, 0, 482, 483,
	484, 481, 485, 486, 487, 488, 0, 489, 490, 491,
	0, 492, 493, 494, 495, 615, 496, 0, 497, 498,
	504, 505, 499, 500, 506, 507, 508, 509, 510, 0,
	512, 513, 511, 514, 515, 516, 0, 517, 501, 502,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 616,
	0, 526, 0, 527, 528, 529, 530, 503, 531, 536,
	617, 532, 533, 534, 535, 618, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 333, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 248, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 254,
	256, 255, 257, 258, 259, 260, 0, 261, 262, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 263,
	264, 0, 265, 266, 267, 268, 269, 579, 580, 0,
	270, 581, 271, 582, 0, 583, 272, 273, 274, 275,
	276, 277, 0, 0, 0, 278, 584, 585, 586, 0,
	279, 280, 587, 0, 0, 0, 281, 282, 283, 284,
	285, 286, 287, 0, 0, 289, 290, 291, 288, 292,
	0, 293, 0, 294, 295, 296, 297, 298, 299, 0,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 308, 0, 309, 588,
	589, 0, 313, 310, 311, 0, 314, 312, 0, 315,
	316, 317, 0, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 590, 328, 329,
	330, 332, 334, 331, 335, 336, 337, 338, 591, 592,
	0, 0, 0, 0, 0, 0, 0, 339, 340, 341,
	593, 0, 0, 0, 342, 0, 343, 0, 0, 0,
	344, 345, 594, 595, 346, 347, 348, 349, 350, 351,
	352, 353, 0, 354, 596, 0, 597, 355, 0, 356,
	357, 358, 359, 360, 598, 599, 600, 435, 0, 361,
	362, 0, 363, 364, 365, 366, 0, 0, 0, 0,
	367, 368, 370, 0, 0, 369, 601, 602, 0, 603,
	0, 371, 372, 0, 604, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 605, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 0, 0, 432, 433, 0,
	606, 434, 607, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 608, 0,
	445, 0, 609, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 610, 458, 459,
	460, 611, 461, 462, 463, 612, 464, 613, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	614, 475, 1131, 476, 478, 0, 479, 0, 0, 0,
	0, 0, 480, 0, 482, 483, 484, 481, 485, 486,
	487, 488, 0, 489, 490, 491, 0, 492, 493, 494,
	495, 615, 496, 0, 497, 498, 504, 505, 499, 500,
	506, 507, 508, 509, 510, 0, 512, 513, 511, 514,
	515, 516, 0, 517, 501, 502, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 616, 0, 526, 0, 527,
	528, 529, 530, 503, 531, 536, 617, 532, 533, 534,
	535, 618, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 333, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 248, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 254, 256, 255, 257, 258,
	259, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 263, 264, 0, 265, 266,
	267, 268, 269, 579, 580, 0, 270, 581, 271, 582,
	0, 583, 272, 273, 274, 275, 276, 277, 0, 0,
	0, 278, 584, 585, 586, 0, 279, 280, 587, 0,
	0, 0, 281, 282, 283, 284, 285, 286, 287, 0,
	0, 289, 290, 291, 288, 292, 0, 293, 0, 294,
	295, 296, 297, 298, 299, 0, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 308, 0, 309, 588, 589, 0, 313, 310,
	311, 0, 314, 312, 0, 315, 316, 317, 0, 0,
	318, 319, 320, 0, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 590, 328, 329, 330, 332, 334, 331,
	335, 336, 337, 338, 591, 592, 0, 0, 0, 0,
	0, 0, 0, 339, 340, 341, 593, 0, 0, 0,
	342, 0, 343, 0, 0, 0, 344, 345, 594, 595,
	346, 347, 348, 349, 350, 351, 352, 353, 0, 354,
	596, 0, 597, 0, 0, 356, 357, 358, 359, 360,
	598, 599, 600, 435, 0, 361, 362, 0, 363, 364,
	365, 366, 0, 0, 0, 0, 367, 368, 370, 0,
	0, 369, 601, 602, 0, 603, 0, 371, 372, 0,
	604, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 605, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 0, 0, 432, 433, 0, 606, 434, 607, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 608, 0, 445, 0, 609, 446,
	447, 439, 448, 449, 0, 451, 452, 453, 454, 455,
	0, 456, 457, 610, 458, 459, 460, 611, 461, 462,
	463, 612, 464, 613, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 0, 473, 474, 614, 475, 477, 476,
	478, 0, 479, 0, 0, 0, 0, 0, 480, 0,
	482, 483, 484, 481, 485, 486, 487, 488, 0, 489,
	490, 491, 0, 492, 493, 494, 495, 615, 0, 0,
	497, 498, 504, 505, 499, 500, 506, 507, 508, 509,
	510, 0, 512, 513, 511, 514, 515, 516, 0, 517,
	501, 502, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 616, 0, 526, 0, 527, 528, 529, 530, 503,
	531, 536, 617, 532, 533, 534, 535, 618, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	333, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 1675,
	1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 1706, 0, 0, 0, 0, 0, 0, 1678,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 1675,
	1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 1706, 1677, 0, 0, 0, 0, 0, 1678,
	0, 0, 0, 1697, 0, 0, 0, 1724, 0, 0,
	0, 0, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 0, 0, 0, 0, 0, 0,
	0, 0, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 1701, 1702, 1703, 0, 0, 0,
	0, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 1701, 1702, 1703, 0, 1715, 0,
	0, 1725, 0, 1683, 0, 0, 0, 1705, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 1722, 0, 0, 0, 0,
	0, 0, 1692, 1693, 0, 0, 0, 0, 1715, 0,
	0, 1725, 0, 0, 0, 0, 0, 1705, 1707, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 1698, 1722, 0, 0, 0, 0,
	0, 0, 1692, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 1675, 1676, 0, 1708, 1709, 1710, 1718, 1719,
	1720, 0, 0, 0, 1698, 0, 1723, 0, 0, 0,
	0, 0, 0, 0, 1711, 1706, 0, 0, 0, 0,
	0, 0, 1678, 0, 1712, 0, 0, 0, 0, 0,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 1712, 0, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 1694, 0, 0, 0, 0,
	0, 0, 0, 1704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 0, 0, 1700, 1701, 1702, 1703,
	0, 0, 0, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720,
	0, 1715, 0, 0, 1725, 0, 0, 0, 0, 0,
	1705, 1707, 0, 1711, 1706, 0, 0, 0, 0, 0,
	0, 1678, 0, 0, 0, 0, 1721, 0, 1722, 1724,
	0, 0, 0, 1714, 0, 1692, 1693, 1689, 1690, 1696,
	1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681,
	1682, 1684, 1685, 1713, 0, 1677, 0, 0, 0, 0,
	0, 2970, 0, 0, 0, 1697, 0, 1698, 0, 0,
	0, 0, 0, 1714, 1694, 0, 0, 1689, 1690, 1696,
	1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681,
	1682, 1684, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 2357, 0, 0, 0, 0, 0, 0, 0, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 1701, 1702, 1703, 0,
	0, 0, 0, 0, 0, 1683, 0, 0, 1675, 1676,
	0, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1711, 1706, 0, 0, 0, 0, 1704, 0, 1678, 0,
	1715, 0, 0, 1725, 0, 0, 1724, 0, 0, 1705,
	1707, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 0, 1722, 0, 0,
	0, 0, 1677, 0, 1692, 1693, 0, 0, 0, 0,
	0, 1716, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 1713, 0, 1675, 1676, 0, 1708, 1709, 1710,
	1718, 1719, 1720, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 1706, 0, 0,
	0, 0, 0, 0, 1678, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1677, 0,
	0, 0, 1700, 1701, 1702, 1703, 1712, 0, 1697, 0,
	0, 0, 1683, 0, 0, 0, 1714, 1694, 0, 0,
	1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686, 1687,
	1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 0, 0,
	4184, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	1725, 0, 0, 0, 0, 0, 1705, 1707, 0, 0,
	0, 0, 0, 0, 0, 1704, 0, 0, 0, 0,
	0, 0, 1721, 0, 1722, 0, 0, 0, 0, 0,
	0, 1692, 1693, 0, 0, 1699, 0, 0, 1700, 1701,
	1702, 1703, 0, 0, 0, 0, 0, 0, 1683, 1713,
	1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 0,
	1716, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 1706, 0, 0, 0, 0, 0, 0,
	1678, 0, 0, 1715, 0, 0, 1725, 0, 1724, 0,
	0, 0, 1705, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1723, 0, 0, 1721, 0,
	1722, 0, 0, 0, 1677, 0, 0, 1692, 1693, 0,
	0, 0, 0, 1712, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 1713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 1689,
	1690, 1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679,
	1680, 1681, 1682, 1684, 1685, 0, 0, 0, 0, 4180,
	0, 0, 1704, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 1700, 1701, 1702, 1703, 0, 1712,
	0, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 1725, 1711, 1706, 0, 0, 0, 1705, 1707,
	0, 1678, 0, 0, 0, 0, 0, 0, 1704, 1724,
	0, 0, 0, 0, 1721, 0, 1722, 0, 0, 0,
	0, 0, 0, 1692, 1693, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 1677, 0, 0, 0, 0,
	0, 1713, 0, 0, 0, 1697, 0, 0, 0, 0,
	0, 0, 0, 1716, 1694, 1698, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 0, 4091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 1701, 1702, 1703, 0,
	0, 0, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 0,
	0, 0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688,
	1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0,
	1715, 0, 4090, 1725, 1704, 0, 0, 0, 0, 1705,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 1721, 0, 1722, 0, 0,
	0, 0, 0, 0, 1692, 1693, 0, 0, 1675, 1676,
	0, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 1716,
	0, 0, 1713, 0, 0, 0, 0, 0, 0, 0,
	1711, 1706, 0, 0, 0, 0, 1698, 0, 1678, 0,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 0, 0, 1723, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 0, 0, 0, 0, 3936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 0, 0, 0, 0,
	0, 0, 1700, 1701, 1702, 1703, 0, 0, 0, 0,
	0, 0, 1683, 1675, 1676, 1699, 1708, 1709, 1710, 1718,
	1719, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1706, 0, 0, 0,
	1716, 0, 0, 1678, 0, 0, 0, 1715, 0, 0,
	1725, 1724, 0, 0, 0, 0, 1705, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 1722, 0, 0, 1677, 0, 0,
	0, 1692, 1693, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 1694, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 1689,
	1690, 1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679,
	1680, 1681, 1682, 1684, 1685, 1723, 0, 0, 0, 3796,
	0, 0, 0, 0, 0, 0, 0, 1700, 1701, 1702,
	1703, 0, 0, 1712, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1675, 1676, 0, 1708,
	1709, 1710, 1718, 1719, 1720, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 1725, 0, 0, 1711, 1706,
	0, 1705, 1707, 0, 0, 0, 1678, 0, 0, 0,
	0, 0, 1704, 0, 1724, 0, 0, 1721, 0, 1722,
	0, 0, 0, 0, 0, 0, 1692, 1693, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 0,
	1677, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	1697, 0, 0, 0, 0, 0, 0, 1716, 1698, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 1701, 1702, 1703, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 1715, 3739, 1704, 1725, 0,
	0, 0, 0, 0, 1705, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	1721, 0, 1722, 0, 0, 0, 0, 0, 0, 1692,
	1693, 0, 0, 1675, 1676, 0, 1708, 1709, 1710, 1718,
	1719, 1720, 1716, 0, 0, 0, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 1711, 1706, 0, 0, 0,
	0, 1698, 0, 1678, 0, 0, 0, 0, 0, 0,
	0, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1677, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 1694, 0, 0, 0,
	0, 1712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 0,
	0, 3738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 1700, 1701, 1702,
	1703, 0, 0, 0, 0, 0, 0, 1683, 1675, 1676,
	1699, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1711, 1706, 0, 0, 0, 1716, 0, 0, 1678, 0,
	0, 0, 1715, 0, 0, 1725, 1724, 0, 0, 0,
	0, 1705, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 1722,
	0, 0, 1677, 0, 0, 0, 1692, 1693, 0, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 1689, 1690, 1696, 1717, 1695, 1691,
	0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685,
	1723, 0, 0, 0, 3737, 0, 0, 0, 0, 0,
	0, 0, 1700, 1701, 1702, 1703, 0, 0, 1712, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	1725, 0, 0, 1711, 1706, 0, 1705, 1707, 0, 0,
	0, 1678, 0, 0, 0, 0, 0, 1704, 0, 1724,
	0, 0, 1721, 0, 1722, 0, 0, 0, 0, 0,
	0, 1692, 1693, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 1677, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 1697, 0, 0, 0, 0,
	0, 0, 1716, 1698, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 1701, 1702, 1703, 0,
	0, 0, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 0,
	1715, 3434, 1704, 1725, 0, 0, 0, 0, 0, 1705,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 1721, 0, 1722, 0, 0,
	0, 0, 0, 0, 1692, 1693, 0, 0, 1675, 1676,
	0, 1708, 1709, 1710, 1718, 1719, 1720, 1716, 0, 0,
	0, 0, 1713, 0, 0, 0, 0, 0, 0, 0,
	1711, 1706, 0, 0, 0, 0, 1698, 0, 1678, 0,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 0, 0, 1723, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 0, 2968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 0, 0, 0, 0,
	0, 0, 1700, 1701, 1702, 1703, 0, 0, 0, 0,
	0, 0, 1683, 1675, 1676, 1699, 1708, 1709, 1710, 1718,
	1719, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1706, 0, 0, 0,
	1716, 0, 0, 1678, 0, 0, 0, 1715, 0, 0,
	1725, 1724, 0, 0, 0, 0, 1705, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 1722, 0, 0, 1677, 0, 0,
	0, 1692, 1693, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 1694, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 1689,
	1690, 1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679,
	1680, 1681, 1682, 1684, 1685, 1723, 0, 0, 0, 2967,
	0, 0, 0, 0, 0, 0, 0, 1700, 1701, 1702,
	1703, 0, 0, 1712, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1675, 1676, 0, 1708,
	1709, 1710, 1718, 1719, 1720, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 1725, 0, 0, 1711, 1706,
	0, 1705, 1707, 0, 0, 0, 1678, 0, 0, 0,
	0, 0, 1704, 0, 1724, 0, 0, 1721, 0, 1722,
	0, 0, 0, 0, 0, 0, 1692, 1693, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 0,
	1677, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	1697, 0, 0, 0, 0, 0, 0, 1716, 1698, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 1701, 1702, 1703, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 1715, 2966, 1704, 1725, 0,
	0, 0, 0, 0, 1705, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	1721, 0, 1722, 0, 0, 0, 0, 0, 0, 1692,
	1693, 0, 0, 1675, 1676, 0, 1708, 1709, 1710, 1718,
	1719, 1720, 1716, 0, 0, 0, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 1711, 1706, 0, 0, 0,
	0, 1698, 0, 1678, 0, 0, 0, 0, 0, 0,
	0, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1677, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 1694, 0, 0, 0,
	0, 1712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 0,
	0, 2965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 1700, 1701, 1702,
	1703, 0, 0, 0, 0, 0, 0, 1683, 4308, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 1725, 0, 0, 0, 0,
	0, 1705, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 1722,
	0, 0, 0, 0, 0, 0, 1692, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 1675, 1676, 0, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 1706, 0,
	0, 0, 0, 2903, 0, 1678, 0, 0, 0, 0,
	1714, 0, 0, 1724, 1689, 1690, 1696, 1717, 1695, 1691,
	0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685,
	1723, 0, 2932, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2904, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 1700,
	1701, 1702, 1703, 0, 0, 0, 0, 0, 0, 1683,
	1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 1706, 0, 0, 0, 0, 0, 0,
	1678, 0, 0, 0, 1715, 0, 0, 1725, 1724, 0,
	0, 0, 0, 1705, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 1722, 0, 0, 1677, 0, 0, 0, 1692, 1693,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 1701, 1702, 1703, 0, 0,
	1712, 0, 0, 0, 1683, 0, 3052, 0, 0, 3051,
	0, 0, 0, 0, 0, 0, 2501, 0, 0, 0,
	0, 0, 0, 1675, 1676, 0, 1708, 1709, 1710, 1718,
	1719, 1720, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 1725, 0, 0, 1711, 1706, 0, 1705, 1707,
	2500, 0, 0, 1678, 0, 0, 0, 0, 0, 1704,
	0, 1724, 0, 0, 1721, 0, 1722, 0, 0, 0,
	0, 0, 0, 1692, 1693, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 1677, 0, 0,
	0, 1713, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 1716, 1698, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 1701, 1702,
	1703, 0, 0, 0, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 1689, 1690, 1696, 1717, 1695, 1691, 0,
	1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0,
	0, 0, 1715, 0, 1704, 1725, 0, 0, 0, 0,
	0, 1705, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 1721, 0, 1722,
	0, 0, 0, 0, 0, 0, 1692, 1693, 0, 0,
	1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 1716,
	0, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 1711, 1706, 0, 0, 0, 0, 1698, 0,
	1678, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1677, 0, 0, 0, 0, 0,
	1723, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 0, 0, 0, 1700, 1701, 1702, 1703, 0, 0,
	0, 0, 0, 0, 1683, 1675, 1676, 1699, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 1706, 0,
	0, 0, 1716, 0, 0, 1678, 0, 0, 0, 1715,
	0, 0, 1725, 1724, 0, 0, 0, 0, 1705, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 1722, 0, 0, 1677,
	0, 0, 0, 1692, 1693, 0, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 1694, 0,
	0, 1713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	1701, 1702, 1703, 0, 0, 1712, 987, 0, 0, 1683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1675, 1676,
	0, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 1725, 0, 0,
	1711, 1706, 0, 1705, 1707, 0, 0, 0, 1678, 0,
	0, 0, 0, 0, 1704, 0, 1724, 0, 0, 1721,
	0, 1722, 0, 0, 0, 0, 0, 0, 1692, 1693,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 1716,
	1698, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 1701, 1702, 1703, 0, 0, 0, 0,
	0, 0, 1683, 0, 0, 0, 0, 3058, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 0, 0, 0, 1715, 0, 1704,
	1725, 0, 0, 0, 0, 0, 1705, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 1721, 0, 1722, 0, 0, 0, 0, 0,
	0, 1692, 1693, 0, 0, 1675, 1676, 0, 1708, 1709,
	1710, 1718, 1719, 1720, 1716, 0, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 1711, 1706, 0,
	0, 0, 3053, 1698, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 3415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 1723, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 1689, 1690, 1696, 1717, 1695, 1691, 0,
	1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 0, 0, 0, 0, 0, 0, 1700,
	1701, 1702, 1703, 0, 0, 0, 0, 0, 0, 1683,
	1675, 1676, 1699, 1708, 1709, 1710, 1718, 1719, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 1706, 0, 0, 0, 1716, 0, 0,
	1678, 0, 0, 0, 1715, 0, 0, 1725, 1724, 0,
	0, 0, 0, 1705, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 1722, 0, 0, 1677, 0, 0, 0, 1692, 1693,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 1723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 1701, 1702, 1703, 0, 0,
	1712, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 1676, 0, 1708, 1709, 1710, 1718,
	1719, 1720, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 1725, 0, 0, 1711, 1706, 0, 1705, 1707,
	2969, 0, 0, 1678, 0, 0, 0, 0, 0, 1704,
	0, 1724, 0, 0, 1721, 0, 1722, 0, 0, 0,
	0, 0, 0, 1692, 1693, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 1677, 0, 0,
	0, 1713, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 1716, 1698, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 1701, 1702,
	1703, 0, 0, 0, 0, 3020, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 1689, 1690, 1696, 1717, 1695, 1691, 0,
	1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0,
	0, 0, 1715, 0, 1704, 1725, 0, 0, 0, 0,
	0, 1705, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 1721, 0, 1722,
	0, 0, 0, 0, 0, 0, 1692, 1693, 0, 0,
	1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 1716,
	0, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 1711, 1706, 0, 0, 0, 0, 1698, 0,
	1678, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1677, 0, 0, 0, 0, 0,
	1723, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 0, 0, 0, 1700, 1701, 1702, 1703, 0, 0,
	0, 0, 0, 0, 1683, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 1725, 0, 0, 0, 0, 0, 1705, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 1722, 0, 0, 0,
	0, 0, 0, 1692, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 880, 0, 923, 0,
	0, 1713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 888, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 902, 886,
	885, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 0, 890, 0, 0, 1712, 0, 931, 0, 0,
	0, 0, 0, 0, 0, 0, 899, 900, 0, 0,
	0, 0, 0, 0, 0, 916, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 924, 892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 0, 0, 0, 893, 0,
	0, 0, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 895,
	0, 0, 0, 0, 0, 0, 0, 884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 896, 897, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 904, 903, 0, 0, 0, 0, 0,
	0, 898, 0, 0, 0, 913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 925, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 891, 0, 0, 930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 889,
	0, 0, 0, 920, 921, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 918, 0, 0, 0, 0, 0,
	0, 929, 914, 0, 907, 905, 0, 910, 0, 0,
	0, 0, 0, 911, 0, 0, 882, 0, 926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 912,
	0, 0, 0, 0, 909, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 927, 0, 0, 0, 0, 0,
	0, 0, 915, 0, 0, 0, 0, 0, 0, 0,
	0, 894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 917, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 919,
}
var sqlPact = [...]int{

	7488, -1000, -1000, -1000, -1000, 179, -1000, -1000, 178, 176,
	172, 169, 168, 167, 164, 162, 161, 159, -1000, -1000,
	-1000, -1000, -1000, -1000, 157, -1000, -1000, 156, -1000, 154,
	153, 151, -1000, -1000, 142, -1000, 139, -1000, -1000, -1000,
	-1000, 137, 136, 135, 81675, 81152, 82191, 2080, 99876, 88411,
	1725, 72812, 99353, 72289, 98830, 1877, 98307, 2517, 134, -1000,
	97784, 133, 132, 131, -1000, 97261, -1000, 1978, -1000, 129,
	4524, 59206, 128, 127, 126, 2489, 124, -1000, 123, 118,
	-1000, 9313, 1400, -1000, 114, 113, -1000, 8490, 496, 86326,
	111, 110, 2319, 109, 108, 58160, 106, 103, 2232, 2591,
	-1000, -1000, 1788, -1000, -1000, 102, 96, 91, 90, 89,
	88, 86, 85, 83, 79, 76, -1000, 74, 70, 69,
	68, 67, 63, 61, 60, -1000, 59, 58, 55, 54,
	47, 45, 44, 39, 38, 37, 35, 34, 32, -1000,
	112444, 31, 1739, 1547, 1544, 1539, 1524, 1522, 929, 28,
	27, 26, 25, 23, 20, 19, 17, 15, -1000, 14,
	13, 12, 11, 7, 6, 2, 1, 125, 0, -1,
	-5, -6, -7, -8, -10, 2532, -1000, 1519, 702, 27246,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 106068, 100392,
	-13, -118, -15, -1000, 3048, 993, 48716, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 293, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 461, 1944, 700, -1000, -1000, -1000, 96745, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2074, -81, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 699, -1000, 2073, 206,
	1999, -1000, -1000, -1000, 3080, -1000, -1000, 100392, -1000, 965,
	-1000, -1000, 3493, 3492, 1939, 697, 87888, -1000, 1761, -1000,
	852, 28887, -1000, 1138, -1000, 28887, 291, -1000, -1000, -1000,
	-1000, -1000, -1000, 3489, 3488, 3484, 3482, 3480, -1000, -1000,
	71766, 20628, 71243, 70720, 96229, 20095, 80629, 80106, 95706, 66035,
	964, -1000, -1000, -1000, 1307, -1000, -1000, -1000, -1000, -1000,
	-1000, -31, 67082, 3248, 100392, -1000, 285, -1000, -1000, -1000,
	-1000, -1000, -1000, 41684, 528, 41125, 616, 40566, 600, -1000,
	-1000, -1000, 65502, -1000, 2221, 3479, 3478, 1030, 3474, 2923,
	105552, 1682, 3467, 1670, 1103, 3465, 3460, 3457, 3453, 3452,
	3450, 1306, 95183, 2684, 94660, 1554, 64969, 963, 79583, 82191,
	2355, 94137, 1288, 1161, -1000, -1000, -1000, -1000, 2789, 2588,
	2575, 1257, -1000, -1000, 2210, 3449, 3448, 3446, 3440, 3439,
	105036, 1631, 3437, 2296, 3435, 3434, 3433, 3432, 3429, 3428,
	3427, -1000, 79060, 961, 78537, 78014, 3078, 93614, 77491, 93091,
	64436, 40007, 615, -1000, -1000, -1000, 50804, 6720, 5338, 92568,
	52956, 82191, 82191, -1000, -1000, -1000, -1000, -1000, 39448, 524,
	38889, 599, -1000, -1000, 51342, 2617, -1000, -1000, -1000, -1000,
	38330, 450, 37771, 545, 100392, -1000, 2683, 1872, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2465, 1562, 3246, 2420, 63903, 1926, 1302, 3050,
	2777, 2771, 1416, 3426, 3425, 2359, 2761, 2759, 2725, 2724,
	2723, 1154, 2331, 282, 26687, 2668, 1557, 37212, 1425, 1397,
	2718, 2707, 3274, 1713, 1826, 2039, 70197, 3424, 3423, 2981,
	2699, 2685, 2602, -1000, -1000, -1000, -1000, 1380, -1000, -1000,
	-1000, -1000, -1000, 73328, -1000, -1000, 1219, -1000, -1000, 1219,
	-1000, -1000, -1000, -1000, -1000, 1133, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1519, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1953, -1000,
	1935, -1000, -1000, 2258, 2987, 2987, 2987, 3073, 433, 430,
	-1000, 125, -1000, -1000, 112189, -1000, -1000, 42231, 42231, 42231,
	42231, 42231, 42231, 42231, 1895, -1000, 696, -1000, -1000, 750,
	-1000, 695, 576, -1000, -1000, -1000, -1000, -1000, -1000, 693,
	-1000, -1000, -1000, -1000, -1000, -1000, 3248, -1000, 23345, -1000,
	-1000, -1000, 453, 692, 42231, -1000, -1000, 3289, 3288, 975,
	-1000, 279, 855, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2680, 690, 685, -1000, 684,
	679, 678, 677, 676, -1000, -1000, -1000, 674, 671, 667,
	659, 657, 656, 655, 654, -1000, 1732, -1000, -1000, -1000,
	-1000, -1000, -1000, 619, 617, 617, 617, -1000, 955, -1000,
	-1000, -1000, 297, 611, 278, 609, 608, 607, -1000, 653,
	652, 649, 647, 644, 643, 641, 640, 637, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 954, -1000, -1000, -1000, -1000,
	-32, 100392, -1000, 461, -32, -1000, -1000, 636, -1000, 31087,
	31087, 31087, -1000, -1000, 2071, 42231, -1000, 2272, -1000, -26,
	-26, 831, 49758, -1000, 47670, 831, 292, 762, 54521, -1000,
	2597, -1000, -1000, 635, 266, -1000, -1000, -1000, -1000, 21159,
	2587, 100392, 100392, 82191, 82191, 82191, 2866, 42231, -1000, -1000,
	63370, 100392, 82707, 3189, 59722, 62854, 100392, 2679, 58683, -1000,
	2989, -1000, -1000, 100392, -1000, 42231, -1000, 3188, 1731, 67605,
	3110, -47, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2263,
	2255, 1059, 2111, -1000, 2875, 1236, -1000, 28887, 2911, -1000,
	-1000, -1000, 237, 21159, -1000, -1000, -1000, -1000, -1000, -1000,
	2014, 2846, 1317, -1000, 2109, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1664, 2845, -1000, 2085, 2844, 1640,
	-1000, -1000, 2035, -1000, -1000, 2977, -1000, -1000, 1517, 2842,
	-25, -1000, -1000, 2235, -1000, -1000, 1771, -1000, -1000, 934,
	2837, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	76968, 52418, 51342, 67082, -42, -1000, -1000, -1000, -1000, -53,
	-1000, 19562, 112189, -1000, -1000, -1000, -1000, 1556, 112189, 885,
	-1000, -1000, 2833, -1000, 112189, 857, -1000, -1000, 2825, -1000,
	2674, -1000, -1000, 3422, -1000, -1000, 3420, -1000, 3419, 2171,
	3412, 3410, 3408, -1000, 1444, 1718, 3407, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 76452, 2067, -1000, -1000, 75406, -1000,
	2167, 3109, -1000, -1000, -1000, 75929, 959, -1000, 934, 2166,
	-1000, 85803, 953, -1000, 3406, 3072, 2383, 934, 2165, -1000,
	-1000, -1000, -1000, -1000, 764, -1000, 56079, -1000, 56079, -1000,
	1402, -1000, 104520, -26, 82191, 3248, -1000, 3405, -1000, -1000,
	-1000, -1000, -1000, 2818, 3404, 3402, 3401, -1000, 100392, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 202, 2816, -1000, -1000,
	85287, 202, 2814, -1000, 202, 2813, -1000, 84771, -1000, -1000,
	2006, 2812, -1000, 209, 2809, -1000, -1000, 205, 2804, -1000,
	-1000, -82, 2801, -1000, -1000, 112189, -1000, -1000, -1000, -57,
	-1000, -1000, -1000, 993, -1000, 50281, -1000, 50281, 87365, 66566,
	879, 736, 57637, 112189, -1000, -1000, -1000, -1000, 112189, -1000,
	-1000, -1000, -260, -1000, -1000, 66566, 51342, 112189, -1000, -1000,
	-1000, -1000, 112189, -1000, -1000, -1000, 66566, 75406, -1000, 92045,
	74890, -1000, -1000, 1297, 2320, -1000, -1000, -1000, 66566, 1222,
	66566, 66566, 66566, -1000, 91522, -1000, -1000, 1880, 1153, 2984,
	1852, 82191, -1000, 1708, -1000, -1000, -1000, 3010, -1000, -1000,
	2673, -1000, 62338, 84255, -1000, 83739, -1000, 83223, -1000, 82191,
	-1000, 82191, -1000, 3398, 3394, 3390, 3389, -1000, 3388, 2999,
	-1000, 112189, 2983, -1000, 3387, 3098, 2668, 112189, -1000, 2807,
	1530, 1526, 100392, -1000, -1000, 100392, -1000, 100392, -1000, -1000,
	-1000, 1346, -1000, -1000, 2262, -1000, -1000, -1000, -1000, 82191,
	-1000, -1000, -1000, -1000, -1000, -1000, 2663, -1000, 1531, -1000,
	1677, -1000, 1194, -1000, -1000, 210, -1000, -1000, -47, -1000,
	104004, -1000, 2258, -1000, 100392, -1000, 2253, 2645, 2662, 1542,
	2091, 2358, -1000, 36653, 2324, 44966, 2104, 125, -1000, -1000,
	125, 125, 28340, -1000, -1000, 59722, 59722, 21159, 1145, 42231,
	42231, 42231, 42231, 42231, 42231, 42231, 42231, 42231, 42231, 42231,
	42231, 42231, 42231, 42231, 42231, 42231, 42231, 42231, 42231, 42231,
	42231, 42231, 42231, 42231, 42231, 42231, 42231, 42231, 42231, 42231,
	42231, 42231, 42231, 42231, 2180, 42231, 1130, 42231, 42231, 42231,
	42231, 2009, -1000, -1000, 1759, 493, 1812, -1000, 3235, 3235,
	3235, 538, 538, 6245, 6245, 572, 3376, 750, -1000, 42231,
	-1000, 97, 42231, 21692, -1000, 430, 11659, 2214, -1000, 423,
	22251, -1000, -1000, -1000, 23345, 576, 36094, 42231, 947, 112189,
	-1000, -1000, 1338, 3256, 19031, 2527, 2463, 633, 846, 830,
	26128, 25569, 25010, 24451, 828, 42231, 42231, 42231, 42231, 42231,
	42231, 42231, 42231, -1000, -1000, 3263, -1000, 3256, -1000, -1000,
	-1000, -1000, 3256, 1144, 1140, 3256, -1000, 3256, 3256, 7786,
	7786, 35547, 34988, 34429, 45513, 33870, 42231, 23892, 33311, 32752,
	-1000, 100392, -32, 3182, 42231, 148, -1000, 110782, -1000, 148,
	148, 630, -58, 112189, 2313, 2313, 49237, 2211, 1943, 1943,
	1943, -1000, 831, 14754, 831, 90485, 1956, 831, 831, 218,
	283, 422, 47149, 2272, 90485, 741, 629, -16, -17, -18,
	-1000, -1000, -19, -21, -1000, -1000, 82191, 626, 21692, 21159,
	217, 1340, -63, 2340, 2339, 2337, -1000, 2326, 1626, -64,
	1129, 82191, 100392, -73, -1000, 238, -70, -1000, 1231, 215,
	3256, -1000, -1000, -1000, -1000, -1000, 3374, 3373, -1000, 951,
	622, 621, 360, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 619, 617, 617, 617, -1000, 297, 611, 278, 609,
	608, 607, -1000, -1000, -1000, -1000, -1000, 2586, 82191, 100392,
	-53, 82707, -91, -1000, -1000, -1000, -1000, -1000, 82191, 835,
	-71, 1035, -47, -1000, -1000, -1000, 1219, -1000, 1691, -1000,
	-1000, -1000, -1000, -1000, -1000, 1318, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 975, -1000, -1000, -1000, -1000, -1000,
	-1000, 3244, 3242, -34, -1000, -1000, 21159, -1000, -49, 1480,
	1550, -1000, 69674, 2250, 2979, 2965, 1398, -1000, 1343, 1128,
	3071, 73328, 3136, 3165, 199, -1000, 2578, -1000, -1000, 851,
	1521, 1548, 1127, 73328, 2085, -1000, 59722, -1000, 2412, 3070,
	1303, 1299, 1303, 1303, 1301, -1000, 73328, 1520, 1126, 1125,
	-1000, 1124, 1121, -1000, -50, 3134, 3155, 163, -1000, 2576,
	1120, -1000, -1000, 82191, 21159, 1449, 1446, 1518, 1119, -40,
	-1000, 3130, 3127, 1118, 1115, -1000, 4425, -1000, 66566, 1623,
	2800, 2417, 829, 2413, -1000, -1000, 829, -42, 67082, 100392,
	211, -1000, 97, 42231, 42231, 97, 42231, 97, 3095, -1000,
	-1000, -1000, 2799, -1000, -1000, -1000, 3372, 1696, 2287, -1000,
	-1000, 606, 2157, 2571, 100392, 2362, -44, 82191, -1000, 2798,
	60244, 2085, 2152, -1000, -1000, 74367, -1000, 2797, 461, 2150,
	-1000, 516, 3371, -1000, 103488, -1000, 2989, 1168, 2793, 989,
	500, 3181, -1000, 500, 56595, -1000, 100392, -1000, -26, -1000,
	100392, -1000, -1000, -1000, 3370, -1000, 82191, -1000, -1000, 82191,
	202, 2784, -1000, 82191, -1000, 82191, 201, 2781, -1000, -1000,
	100392, -1000, 82191, 82191, -1000, 100392, 100392, 66566, 66566, 4677,
	68642, -72, -80, 420, -1000, 91006, 100392, 988, 69158, 100392,
	2900, 931, 51342, -1000, -86, -260, 2410, 879, 879, 829,
	-1000, 829, -1000, 82191, 2658, -1000, -1000, 66566, 879, 879,
	879, -1000, -1000, -1000, -1000, 3369, 3368, 3367, -1000, -1000,
	-1000, 933, 82191, 100392, 82191, -1000, -1000, 100392, -1000, 100392,
	100392, -1000, 933, 100392, 933, 100392, 933, 100392, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 97, 42231, -1000, -1000, 3366,
	1410, -1000, 2653, -1000, 2647, -1000, 10, -1000, -1000, -1000,
	-1000, -1000, 1703, 82191, 82191, 82191, 82191, 100392, 82191, -1000,
	73328, -1000, 2253, 2645, -1000, -1000, -1000, -1000, -1000, -1000,
	1508, 2019, -1000, 2310, -1000, 1386, -1000, -1000, -1000, 112189,
	46060, -1000, -1000, 112189, 1636, -1000, 44419, 43872, -1000, -1000,
	1501, 82191, 2361, -1000, 2361, -172, -1000, 110434, 2309, 82191,
	-1000, -1000, -1000, -1000, -1000, 845, 738, 738, 1192, 1192,
	1192, 1192, 3159, 4894, 1399, 4257, 7742, 7742, 5097, 5097,
	5097, 5097, 5097, 7742, 390, 538, 538, 390, 390, 390,
	390, 390, 538, 538, 538, 7742, 7742, 7742, 6245, 10518,
	6934, 42231, 42231, 1112, 1750, 493, 6303, 42231, 7051, 7051,
	7051, 7051, -1000, 1633, -1000, -1000, -1000, -1000, 2567, 605,
	45513, 45513, -1000, -1000, -1000, -1000, 22798, 42231, -1000, -1000,
	-1000, -1000, 32193, -1000, -1000, 109945, -312, 418, -158, -41,
	-1000, 42231, 42231, 42231, 417, -1000, 198, 42231, 100392, -1000,
	107148, 740, -88, -1000, -93, 1344, -1000, 42231, -1000, -1000,
	1111, -1000, 1110, 1101, 1096, -1000, 604, 415, -1000, 196,
	-1000, 1936, 603, 602, 42231, -1000, -1000, -1000, -1000, -1000,
	109762, -1000, -1000, 109597, -1000, -1000, 109360, -1000, -1000, 109177,
	-1000, -1000, -1000, 111952, 107108, 14151, 13977, 4747, 13912, 13334,
	-95, 414, -96, 409, 844, 817, 405, 404, 403, -101,
	-1000, 3365, 3364, 3363, -1000, 3361, 3358, 3356, -1000, 3355,
	3354, 3351, -1000, 3347, 3346, 3344, -1000, 3343, 3342, 3340,
	-1000, 3339, 3338, 3337, -1000, 3336, 3334, 3333, -1000, 3330,
	3324, 3323, -106, 398, -1000, 2562, -158, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 397, -1000, 395, -1000, 111769,
	-158, 391, 5853, -1000, 45513, 45513, 45513, -1000, 389, -1000,
	110599, -1000, 111604, 31646, 31646, 31646, 387, 111367, 42231, -158,
	-115, -1000, -117, -1000, -1000, 482, -122, 944, 31087, 48193,
	21159, -1000, 944, 944, 42231, -1000, 42231, 2327, -1000, -1000,
	-1000, 2325, 1968, 2313, 49237, -1000, -1000, -1000, -1000, 90485,
	-1000, 3248, 2458, -1000, 90485, -1000, -1000, 100392, 461, -1000,
	90485, 90485, 21159, 831, -1000, 831, 90485, 650, -1000, -1000,
	-1000, -1000, -1000, 386, 53477, -41, 193, 21159, 934, -1000,
	2436, 2436, 2436, 2436, -1000, -1000, 100392, 1094, -43, -125,
	3211, -1000, 1746, -1000, 59722, -1000, 749, 1160, 21159, -1000,
	-1000, -1000, 601, -1000, 3256, 3256, -1000, 3256, 100392, 2558,
	115, 99, 60244, 60244, 940, 28887, -1000, 1219, -1000, -1000,
	1426, -1000, 1705, -1000, 1078, -1000, -1000, -1000, -1000, 28887,
	-1000, 2201, 100392, 100392, 82191, -1000, 100392, -1000, 2149, 102972,
	2148, 59722, 100392, -1000, -1000, 598, 592, 2308, 2307, 986,
	100392, 100392, 2306, 102456, 101940, 100392, 1781, 42231, 60244, 1949,
	1959, 97, 97, -1000, -1000, 97, 591, 1248, 82191, 82191,
	100392, 82191, 1538, -1000, -1000, -1000, -1000, -1000, 73844, -1000,
	-1000, 3261, 3259, -1000, 1303, -1000, -1000, -1000, 1303, 2085,
	1536, 100392, 82191, 60244, 1500, 100392, 1760, 97, 97, -1000,
	-1000, 97, 590, 21159, 1874, -1000, 2620, 100392, 3287, 100392,
	100392, 100392, 60244, 2980, 101424, 100392, 100392, 60244, 4425, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	61822, 994, 934, 1487, 1092, 73328, 51342, 927, 51342, 2389,
	-1000, -1000, 18500, -1000, 112189, 112189, -1000, 112189, -1000, 61291,
	100392, -1000, 958, 100392, 69158, 906, 2774, 55563, -53, 879,
	66566, 82191, -44, 100392, -1000, -1000, 2085, 2768, 461, 2147,
	-1000, 66566, 3180, 2766, 589, 3320, 3318, -1000, 2064, 2146,
	-1000, -1000, 100908, 2858, 780, 100392, 944, 49237, 1740, -1000,
	54000, 973, 100392, 1662, 98, -1000, -1000, -1000, -2, 100392,
	-1000, 759, 3317, -1000, -1000, 202, -1000, 82191, 202, 202,
	-1000, 82191, 82191, 2006, -1000, 209, -1000, 205, -1000, -82,
	-1000, -1000, 4677, 4677, 879, -203, 581, -1000, 816, 815,
	51880, 66566, -123, -1000, -1000, -1000, -1000, -1000, 82191, 100392,
	711, 2381, 100392, -124, -1000, 192, 579, -1000, 2711, -1000,
	-1000, 931, 51342, 2556, -1000, -1000, 938, -1000, 1193, 879,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-27, -53, -53, -53, -1000, 933, -1000, 933, -1000, 933,
	-1000, 112189, -1000, -1000, 1409, 1407, 100392, -1000, 21159, 100392,
	82191, 21159, 82191, 2641, 2638, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1001, -1000, 1636, 2012, -1000, 576, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2238, -1000,
	-45, 28340, 2116, -1000, -1000, 82191, -28, 42231, 42231, 5880,
	5335, 42231, 45513, 45513, -1000, 42231, 4806, -1000, -1000, -1000,
	-1000, -1000, 2555, 557, 42231, 59722, 7117, 6884, -1000, 370,
	12483, 390, -1000, 42231, -1000, 369, 30540, -1000, 111019, -66,
	-129, -1000, 15298, -158, -130, -1000, -1000, 748, -1000, 2796,
	-1000, 42231, 111184, 2203, 1962, 1638, 1419, 3256, 3285, 17969,
	-1000, 57116, 945, 1966, 109012, -1000, -1000, -1000, -1000, 59722,
	59722, 42231, 42231, -1000, 42231, 42231, 42231, -1000, -1000, -1000,
	3256, 841, -1000, -1000, -1000, 841, -1000, -1000, 1303, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1303, -1000, 42231, -1000, -1000, 2554,
	42231, -1000, 59722, 59722, 45513, 45513, 45513, 45513, 45513, 45513,
	45513, 45513, 45513, 45513, 45513, 45513, 45513, 45513, 45513, 45513,
	45513, 45513, 45513, 2285, 45513, 3230, 3230, 3230, -1000, 2636,
	2554, 42231, 42231, 59722, 367, 366, 365, -1000, 42231, -158,
	-1000, -1000, 4677, 553, -1000, 2233, -1000, 2462, -1000, 42231,
	-1000, -251, -1000, 2272, -1000, -1000, 2462, 2462, -131, 112189,
	49237, 49237, -1000, 550, 42231, 2323, -1000, -1000, 739, -302,
	-1000, 814, -1000, -1000, -1000, -1000, -1000, 461, -1000, -1000,
	-1000, 185, 90485, 90485, 731, -1000, -136, -1000, -1000, -138,
	-1000, 3179, 361, 21159, -1000, -1000, 2948, -1000, -1000, -1000,
	-1000, -1000, -1000, -53, 100392, 100392, 1995, 3284, -1000, 3257,
	747, 726, 182, 3256, 358, 356, 355, -53, 100392, 100392,
	100392, -1000, -1000, -1000, 2402, -1000, -47, -1000, -1000, -1000,
	42231, -1000, -1000, 2970, 1091, 1089, -1000, -1000, 2752, -1000,
	2144, -1000, 978, -1000, 1454, -1000, 42231, 42231, 549, 548,
	3315, 1767, 3314, 987, 2747, 2006, 2745, 2006, -1000, -1000,
	833, -1000, 112189, -1000, 547, 544, -1000, -49, 1476, 1468,
	937, -1000, -1000, 42231, 42231, 89969, -1000, 426, 2977, -29,
	-1000, -1000, 1459, 1085, -1000, -1000, -1000, -1000, 2085, 1453,
	1083, -1000, -1000, -1000, 936, -1000, -1000, 935, -1000, -1000,
	42231, -1000, -50, 1076, 3137, 2143, 82191, 1072, -1000, 1071,
	-1000, -1000, -1000, 3119, 2006, 2743, 1074, -1000, -1000, -1000,
	-1000, -1000, 60775, -1000, 100392, 82191, 1483, 829, -1000, 2015,
	829, 927, 2552, -1000, 2346, 3312, 82191, 3311, 351, -141,
	-51, 59722, 3177, -1000, 2041, 539, 82191, 836, -1000, 3248,
	-1000, -1000, -1000, -1000, 3106, 82191, 3170, 2741, 934, 97,
	82191, 3282, -1000, -1000, 82191, 2737, 2060, 2140, 2277, 780,
	68126, -1000, 934, 1960, -69, -1000, 1662, 29981, 2971, -146,
	-1000, -1000, -1000, 944, 56595, 49237, 42231, 3310, -148, -1000,
	-1000, -1000, -1000, 202, -1000, -1000, -1000, 201, -1000, -1000,
	-1000, -1000, -1000, -1000, 88932, 88932, 66566, 66566, 66566, 879,
	100392, 100392, 69158, -1000, 543, 100392, 100392, 542, -1000, 100392,
	100392, 3309, 66566, -52, 537, -1000, 812, 811, 809, -1000,
	-1000, -1000, -1000, -1000, -1000, -260, 97, -1000, 1971, 82191,
	-1000, 17438, -1000, -1000, -1000, -1000, -1000, 933, -1000, -1000,
	1811, 2101, 1811, 1650, 1646, -1000, 2008, -1000, -1000, -1000,
	-1000, 2373, 3016, 21159, 3114, 7051, 42231, 42231, 4548, 6791,
	1098, 7051, 42231, 42231, 59722, 8341, -149, 42231, 42231, -1000,
	42231, 724, 112189, 3281, 42231, 347, 345, -1000, -1000, -1000,
	3253, -1000, -1000, -1000, 112189, 42231, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 344, -1000, 181, -1000, -1000, -1000, 106584,
	-1000, 42231, 343, 3069, -1000, 342, 341, 12089, 241, 108775,
	108592, 108427, 339, -1000, -1000, 335, 332, 112189, 2636, 112189,
	-1000, -1000, 869, 869, 1290, 1290, 1290, 1290, 3230, 309,
	900, 878, 791, 791, 791, 1107, 571, 571, 791, 791,
	791, 2551, 2289, 535, 7687, -1000, -1000, 112189, 112189, 329,
	-1000, -1000, -1000, -158, 327, 4677, -1000, 2455, 3068, 112189,
	-1000, 49237, 2455, 2455, -1000, -1000, 1968, 100392, 112189, 49237,
	-1000, 2458, -1000, 15840, -1000, 21159, -1000, -1000, -1000, -1000,
	3248, -1000, 53477, -1000, 522, -1000, 100, 2948, -1000, 807,
	-1000, -53, -53, -1000, -1000, 720, 3303, 744, 21159, 325,
	-1000, -1000, -1000, -53, -53, -53, -1000, 2897, 112189, 100392,
	100392, 100392, 2735, -1000, 3455, -1000, 986, 108190, -159, -1000,
	110434, 42231, 100392, -1000, -1000, 1749, 2335, 1021, -1000, 3042,
	100392, -1000, 100392, -1000, -1000, 100392, 100392, 82191, 100392, 2714,
	-165, 112189, -54, -1000, 806, -1000, 1314, -1000, 16907, 100392,
	82191, 100392, 82191, 1867, 2708, -171, 21159, -1000, 3280, 3279,
	2734, 3047, 3276, 100392, -1000, 100392, 82191, 2895, -1000, -1000,
	-1000, -1000, 1451, 1070, 927, -55, 521, -1000, 794, -1000,
	-1000, 790, 927, -1000, 66566, 51342, -1000, 461, -1000, 2372,
	-1000, 86842, 1985, 97, -1000, 3301, 89453, 520, -1000, 1969,
	-1000, 704, 60244, 2085, 97, 82191, -1000, -1000, 461, 324,
	-56, -1000, 983, 21159, 82191, 2733, 2281, 780, 68126, -1000,
	1168, 2358, -1000, -59, -1000, 541, 97, 1960, -1000, -69,
	112189, -1000, 789, -1000, -1000, -1000, -174, -1000, -1000, 323,
	-1000, 2892, 2891, -1000, 2470, 42231, 518, 514, 100392, 2890,
	-1000, -1000, -176, 3075, 3075, 66566, 51342, 66566, 931, -1000,
	2124, -1000, -1000, -1000, -1000, -1000, 21159, 1447, -1000, 512,
	508, -1000, -1000, -1000, -1000, 3016, 7051, 7051, 42231, 42231,
	42231, 7051, 8341, -179, -1000, 7051, 7051, -158, -1000, -1000,
	111019, -1000, -1000, -1000, 112189, -1000, 16376, 1814, -1000, 108009,
	-1000, 28340, -1000, -1000, 42231, 42231, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 45513, 2535, 507, 59722, -1000, -1000,
	316, 886, 42231, 42231, 2272, 886, 886, -1000, -181, -1000,
	-1000, -1000, 3248, 100, -1000, -1000, 3300, 21159, -1000, 66566,
	743, -1000, 3299, -1000, -1000, -1000, -1000, -1000, -1000, 100392,
	-1000, 100392, -1000, 21159, 100392, 2483, 2129, -1000, -1000, 2304,
	503, 45513, 82191, 883, -1000, 3201, 2471, 1794, 42231, 2116,
	-182, -184, 2127, -1000, -1000, 2125, 42231, -1000, 59722, 501,
	2006, 2006, -189, -190, -1000, -1000, 42231, 1061, 100392, 29434,
	-1000, 3298, 2977, -1000, -1000, -1000, -1000, 100392, 42231, 1060,
	-1000, -1000, -1000, 3273, 2006, 21159, -1000, 2006, 2006, 3047,
	1019, 100392, 82191, -1000, 2100, 2100, 66566, 51342, -1000, -82,
	927, 3163, 1760, 2400, -1000, -1000, -1000, -1000, 2303, -1000,
	-1000, 100392, 2293, 916, -1000, -191, -1000, 784, 782, 69158,
	906, 875, -1000, -1000, -1000, -1000, 461, 3161, -1000, 3267,
	499, 100392, 2049, 497, 21159, 2974, 780, 68126, -1000, 2858,
	1662, -1000, 2137, 100392, 2952, -1000, 2358, 493, -1000, 879,
	492, 491, 2321, 2321, -192, 42231, 42231, -197, 489, 879,
	-1000, -198, -1000, -1000, -1000, -1000, -89, -1000, 850, 810,
	-1000, -1000, 82191, 82191, 42231, 42231, -1000, 7051, 7051, 7051,
	-1000, 314, -1000, -1000, 1960, 3065, -1000, -92, 107843, 107757,
	4130, 45513, 59722, -205, -1000, -1000, 100392, 112189, -158, -1000,
	-1000, -1000, 651, -1000, -1000, 3297, -1000, -1000, 1923, -1000,
	-1000, -1000, 100392, 2139, -1000, 985, 42231, 7687, 488, 42231,
	-1000, 3154, -1000, 2370, 2522, 2372, 480, -1000, -1000, -1000,
	-1000, -1000, 982, 1689, -1000, -1000, 112189, 3047, 42231, -1000,
	-1000, 479, 475, 112189, 473, 781, 2530, -1000, -1000, -1000,
	-1000, 112189, 472, 3137, -1000, -1000, -1000, -1000, 2006, 82191,
	-1000, -1000, -1000, -206, -1000, -1000, 1693, 97, 906, -1000,
	1863, 1985, 464, -1000, -1000, 2005, 2380, -1000, 89453, 28887,
	28887, 311, 3153, 875, -1000, 3229, -1000, 3147, 97, -1000,
	42231, -1000, 82191, 42231, 2048, -1000, 2257, 68126, -1000, 2277,
	-1000, -1000, -207, 100392, 1662, -1000, -1000, 66566, 66566, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	982, -208, -213, -1000, 66566, -1000, -1000, 2124, -1000, 100392,
	-1000, 100392, -1000, -1000, -215, -216, -1000, 1886, 42231, 28340,
	-1000, -1000, 4130, -218, -1000, -151, -1000, 3143, -1000, -1000,
	-1000, -1000, 2728, 2453, 107590, 2240, 100392, 107401, -1000, 2511,
	-1000, -1000, 1760, 100392, 2372, 2439, 82191, 984, -221, 1811,
	1811, 42231, 27793, 1857, 42231, -1000, -1000, 3047, -1000, 2490,
	3239, -1000, 2005, 82191, 100392, -1000, 2992, -1000, 2889, -1000,
	-1000, -1000, 2372, 97, -1000, -1000, 97, -1000, -223, 983,
	-226, 82191, 780, -1000, 2281, 944, -1000, -1000, -229, -232,
	1794, 982, 860, -234, -1000, -240, -241, -1000, -1000, 308,
	43325, 43325, 43325, -158, -172, -1000, 100392, 462, 2700, 919,
	-1000, 2028, 1806, 306, 1014, -1000, -1000, 2471, -246, -1000,
	918, 461, -1000, 42231, 982, -248, -1000, 972, -249, -1000,
	970, -255, -1000, 2520, -1000, -257, 2006, 917, 3089, -1000,
	-1000, -1000, -1000, 460, -258, -1000, -1000, 2154, -1000, 1760,
	916, -1000, 982, 458, 1794, 457, 1303, 2974, 2821, 879,
	879, 2372, 1794, 944, 454, 879, -1000, -1000, -1000, 2726,
	-1000, 46607, 2070, 1643, 110182, 2726, 2726, -1000, -1000, 100392,
	3083, -1000, 2047, 2038, 1385, -1000, -1000, -1000, -1000, -1000,
	-1000, 944, -1000, 3077, 2240, 112189, 2372, -1000, 1811, 2398,
	-1000, 1811, 2495, -1000, 1835, -1000, -1000, -1000, 1565, 3225,
	100392, -1000, 100392, 1591, 1581, 3295, 906, 2005, 1794, 42231,
	2372, 42231, -1000, -1000, 1217, -1000, -1000, 1760, 2372, -1000,
	-1000, -1000, 1641, 3195, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 776, -1000, 2872, -1000, 997, 1900, 1900, -1000,
	773, 2028, -1000, -1000, 452, -1000, 449, -1000, 1961, -1000,
	-1000, -265, -1000, -1000, 3294, -1000, 2005, -1000, 2372, -266,
	1760, -271, -1000, 1388, 860, 1760, 1632, -1000, -1000, 1946,
	42778, 42231, -1000, 3214, -1000, -1000, 2317, -1000, 42231, 2471,
	42231, 42231, 55042, 2004, -1000, -1000, 1760, 982, 860, 1794,
	56595, 944, 860, -1000, -1000, -1000, 112189, -1000, -1000, -1000,
	112189, -1000, -272, -274, -203, 88932, -1000, -1000, -1000, 860,
	1794, 944, 2372, -256, -1000, 944, 1760, 1056, -283, 944,
	2372, -1000, 1760, -1000, -1000, -1000, 436, -1000, -1000, 1760,
	860, 42231, 860, 944, -297, 944, -1000, 1760, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4080, 4078, 4073, 4072, 4071, 4070, 4069, 4068, 4066,
	4063, 4062, 4061, 4060, 4057, 4055, 4054, 4051, 4049, 4047,
	4046, 4045, 4042, 4040, 4039, 4038, 4035, 4033, 4032, 4028,
	4026, 4024, 4023, 4022, 4020, 4019, 4017, 4015, 4014, 4011,
	4010, 4009, 4006, 4005, 4004, 4003, 4002, 4001, 3998, 3995,
	3994, 3990, 3988, 3986, 39, 3984, 3981, 3980, 3977, 3976,
	3975, 3974, 3972, 3969, 3968, 3965, 3963, 3962, 3961, 3960,
	3959, 3958, 3955, 42, 3952, 246, 3951, 3941, 3940, 3939,
	3935, 3933, 3928, 3927, 3924, 3920, 3918, 3917, 245, 3916,
	103, 3909, 3908, 3895, 3894, 3893, 239, 3892, 3891, 3887,
	3880, 241, 3879, 3878, 3877, 3876, 3875, 3874, 3873, 3872,
	3871, 3870, 75, 135, 3869, 3867, 117, 3866, 3865, 3863,
	3862, 3861, 3860, 3859, 3858, 3856, 3855, 215, 3854, 238,
	3853, 3850, 3849, 3846, 3845, 3844, 3843, 3839, 3838, 3837,
	3835, 3834, 3831, 3830, 3826, 3824, 3823, 3822, 3821, 3819,
	3818, 3815, 3814, 3813, 3808, 3806, 3805, 3804, 3803, 3797,
	3795, 3793, 3791, 243, 160, 3790, 3789, 236, 235, 3788,
	3787, 3786, 3785, 3783, 108, 4, 22, 3782, 3781, 52,
	60, 67, 78, 81, 73, 3779, 87, 3777, 113, 45,
	3773, 15, 2, 153, 231, 8134, 229, 3772, 3769, 3766,
	213, 165, 3764, 205, 3761, 3760, 3759, 3757, 90, 64,
	152, 157, 149, 144, 99, 3751, 3750, 82, 58, 44,
	35, 26, 3749, 3747, 3746, 3743, 3411, 109, 3742, 233,
	211, 142, 3738, 3737, 3734, 1896, 3731, 41, 3729, 188,
	86, 111, 13, 102, 3726, 122, 28, 3725, 154, 43,
	3724, 134, 83, 68, 7608, 8437, 3722, 101, 46, 104,
	55, 148, 146, 174, 114, 137, 178, 186, 184, 151,
	1835, 3721, 221, 3718, 3144, 63, 136, 3717, 3714, 3712,
	66, 171, 88, 3708, 3707, 50, 16, 9, 27, 167,
	12, 106, 20, 3706, 14, 3704, 3703, 3702, 3701, 38,
	140, 3700, 248, 3698, 57, 37, 23, 3693, 84, 193,
	3692, 195, 112, 3690, 3689, 224, 176, 147, 3681, 74,
	198, 3680, 3679, 3675, 3674, 3672, 121, 1, 110, 3671,
	3670, 120, 208, 170, 3669, 40, 3668, 3667, 150, 85,
	124, 240, 129, 200, 98, 196, 172, 199, 3666, 3664,
	3663, 159, 3661, 3660, 191, 156, 3659, 3658, 179, 249,
	36, 53, 202, 56, 169, 128, 3655, 175, 3654, 3653,
	250, 155, 185, 6, 18, 71, 107, 3648, 5, 201,
	126, 177, 94, 3647, 4013, 1424, 1469, 3646, 3642, 125,
	100, 51, 105, 130, 232, 54, 3640, 3639, 65, 3636,
	3634, 3631, 3630, 162, 3627, 3626, 3625, 119, 141, 168,
	3623, 79, 69, 11, 92, 281, 251, 89, 194, 143,
	222, 3622, 3619, 3617, 158, 3614, 47, 131, 3612, 173,
	219, 3608, 3604, 209, 3603, 139, 234, 48, 133, 3600,
	189, 3597, 3594, 3591, 3586, 3585, 3583, 3581, 216, 210,
	3580, 3577, 3576, 33, 164, 3573, 226, 230, 182, 77,
	62, 3572, 70, 269, 3571, 93, 206, 95, 161, 3570,
	3569, 569, 80, 0, 10713, 9428, 6581, 10276, 3568, 2803,
	3567, 3566, 3565, 187, 118, 3564, 3562, 3561, 91, 3560,
	59, 3559, 3558, 49, 3557, 17, 8, 10, 24, 21,
	1048, 132, 3555, 3551, 97, 127, 115, 3550, 237, 197,
	3546, 3545, 3544, 3543, 76, 3542, 32, 3541, 30, 3540,
	3539, 31, 7, 25, 3538, 3537, 228, 3536, 190, 214,
	3535, 138, 3534, 3148, 123, 3533, 3532, 227, 61, 3531,
	225, 3528, 3077, 3527, 3525, 19, 3524, 3523, 212, 166,
	183, 3522, 3517, 145, 3516, 3515, 3514, 223, 3512, 3511,
	29, 3510, 3, 3508, 3503, 181, 2940, 3502, 3499, 34,
	3498, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 11, 11, 7, 7,
	7, 8, 8, 8, 8, 41, 41, 9, 9, 9,
	9, 9, 29, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 16, 16, 30, 30, 17, 17,
	32, 32, 18, 18, 33, 33, 537, 537, 21, 35,
	22, 36, 15, 538, 538, 538, 538, 28, 23, 37,
	25, 25, 25, 25, 25, 177, 177, 177, 177, 20,
	20, 31, 31, 211, 211, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 536, 536,
	213, 213, 212, 207, 207, 539, 539, 214, 214, 214,
	216, 216, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 437, 437, 437, 469, 469, 468, 468, 468, 552,
	552, 553, 553, 553, 553, 553, 115, 115, 337, 337,
	337, 43, 43, 43, 43, 43, 531, 531, 179, 179,
	179, 181, 181, 180, 180, 180, 180, 64, 64, 544,
	544, 545, 545, 543, 546, 546, 546, 178, 178, 178,
	111, 111, 111, 111, 112, 112, 113, 113, 182, 182,
	182, 184, 184, 183, 183, 183, 183, 183, 183, 183,
	183, 188, 97, 97, 97, 97, 97, 97, 97, 97,
	97, 92, 92, 471, 471, 472, 472, 173, 173, 174,
	174, 174, 174, 175, 175, 176, 176, 176, 57, 185,
	185, 187, 187, 186, 186, 45, 45, 45, 45, 45,
	45, 45, 46, 46, 46, 46, 46, 47, 47, 47,
	47, 47, 47, 48, 48, 48, 48, 48, 48, 55,
	55, 55, 55, 164, 164, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 555, 555, 556, 556, 557, 557,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 70, 70, 301,
	301, 273, 273, 71, 71, 71, 72, 72, 73, 73,
	59, 59, 529, 529, 316, 316, 428, 428, 75, 75,
	336, 336, 76, 76, 76, 76, 76, 76, 77, 77,
	77, 77, 77, 77, 77, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 85,
	85, 85, 85, 85, 86, 86, 86, 83, 83, 83,
	80, 80, 80, 79, 79, 79, 84, 84, 84, 528,
	263, 263, 82, 82, 82, 266, 266, 81, 81, 81,
	317, 317, 87, 87, 87, 87, 274, 88, 88, 88,
	88, 88, 88, 88, 88, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 430, 430,
	89, 89, 89, 396, 396, 93, 93, 93, 352, 352,
	94, 94, 94, 94, 94, 95, 95, 95, 95, 95,
	95, 114, 114, 114, 114, 114, 114, 533, 533, 309,
	309, 229, 229, 229, 229, 104, 104, 104, 104, 105,
	105, 105, 106, 106, 169, 169, 121, 121, 121, 121,
	121, 120, 120, 120, 120, 120, 120, 49, 49, 49,
	50, 50, 51, 51, 52, 52, 53, 53, 54, 54,
	54, 54, 54, 123, 123, 549, 549, 125, 122, 122,
	122, 124, 124, 124, 124, 126, 127, 127, 127, 127,
	127, 127, 127, 127, 128, 128, 462, 462, 325, 325,
	460, 460, 480, 480, 461, 461, 278, 278, 278, 278,
	278, 279, 279, 279, 470, 470, 470, 470, 470, 470,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 170, 170, 171, 172, 172, 172,
	172, 172, 149, 149, 149, 163, 163, 163, 163, 163,
	163, 163, 152, 152, 152, 139, 139, 130, 130, 130,
	130, 130, 130, 130, 134, 134, 134, 134, 134, 134,
	134, 134, 131, 131, 141, 141, 141, 141, 141, 135,
	135, 136, 136, 159, 159, 138, 138, 140, 140, 140,
	140, 140, 140, 140, 140, 140, 132, 132, 132, 132,
	143, 143, 143, 143, 359, 359, 359, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 162, 162,
	162, 162, 162, 162, 547, 547, 548, 548, 156, 156,
	156, 156, 156, 156, 410, 410, 150, 150, 150, 150,
	155, 155, 155, 155, 158, 158, 158, 158, 342, 342,
	147, 147, 147, 148, 148, 148, 153, 153, 154, 151,
	151, 157, 157, 157, 157, 133, 133, 133, 559, 559,
	559, 160, 160, 146, 146, 161, 161, 161, 161, 161,
	161, 161, 161, 145, 145, 145, 144, 144, 144, 144,
	137, 530, 530, 526, 526, 526, 526, 526, 526, 526,
	526, 527, 527, 527, 532, 532, 98, 98, 98, 98,
	98, 107, 107, 107, 107, 107, 99, 99, 99, 99,
	99, 101, 101, 100, 100, 100, 100, 65, 65, 65,
	65, 65, 14, 14, 14, 66, 66, 191, 191, 191,
	192, 192, 286, 286, 286, 286, 189, 189, 190, 190,
	67, 67, 560, 560, 560, 540, 540, 540, 541, 541,
	541, 541, 541, 541, 280, 280, 281, 281, 376, 376,
	376, 376, 376, 284, 284, 284, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 287, 287, 215, 215, 215,
	290, 291, 291, 288, 288, 289, 289, 289, 293, 293,
	292, 295, 295, 294, 375, 489, 489, 491, 491, 491,
	491, 491, 491, 491, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 561, 561, 487, 487, 487,
	488, 483, 483, 484, 484, 484, 484, 484, 282, 282,
	283, 283, 283, 283, 485, 486, 307, 307, 413, 490,
	490, 492, 492, 494, 562, 562, 562, 562, 562, 562,
	563, 563, 563, 374, 374, 373, 373, 299, 299, 495,
	495, 495, 495, 496, 496, 496, 496, 496, 499, 498,
	497, 497, 497, 497, 497, 69, 69, 69, 339, 339,
	338, 338, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 166, 166, 232,
	232, 63, 63, 63, 12, 12, 12, 542, 542, 542,
	68, 68, 68, 68, 68, 68, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 535, 535, 534, 534,
	233, 233, 565, 565, 74, 74, 74, 74, 74, 74,
	74, 431, 431, 432, 432, 62, 62, 62, 62, 62,
	360, 360, 358, 358, 357, 357, 306, 306, 412, 237,
	237, 208, 208, 208, 27, 26, 19, 19, 24, 24,
	39, 39, 39, 39, 42, 42, 38, 38, 38, 38,
	40, 40, 34, 34, 550, 550, 551, 551, 103, 103,
	108, 108, 108, 108, 108, 109, 109, 109, 109, 110,
	110, 110, 110, 119, 119, 165, 165, 165, 165, 165,
	165, 165, 44, 44, 44, 44, 56, 56, 56, 56,
	117, 567, 567, 567, 118, 118, 118, 566, 566, 230,
	230, 370, 370, 371, 371, 568, 568, 372, 372, 372,
	372, 372, 223, 222, 224, 224, 225, 225, 61, 61,
	61, 217, 217, 218, 218, 219, 219, 220, 220, 221,
	221, 569, 569, 96, 96, 96, 168, 168, 272, 272,
	272, 367, 367, 367, 300, 300, 243, 243, 369, 369,
	369, 369, 335, 335, 335, 167, 167, 314, 314, 327,
	327, 328, 328, 425, 425, 329, 102, 102, 116, 116,
	195, 195, 193, 193, 193, 193, 193, 193, 193, 193,
	200, 200, 201, 201, 202, 202, 203, 204, 204, 204,
	204, 318, 318, 205, 205, 205, 194, 194, 194, 196,
	196, 196, 196, 196, 196, 196, 199, 199, 199, 199,
	206, 206, 206, 198, 198, 506, 506, 506, 508, 508,
	510, 510, 509, 509, 505, 505, 507, 507, 564, 564,
	341, 341, 341, 297, 298, 296, 296, 304, 304, 302,
	303, 303, 305, 305, 411, 411, 411, 209, 209, 209,
	332, 332, 332, 332, 333, 333, 363, 363, 361, 361,
	361, 361, 362, 362, 364, 364, 364, 365, 365, 366,
	366, 331, 331, 392, 392, 197, 197, 197, 311, 311,
	311, 312, 312, 382, 382, 382, 382, 382, 382, 383,
	383, 381, 381, 381, 381, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 415, 416, 416, 313, 313, 417,
	368, 368, 524, 524, 524, 525, 525, 409, 409, 418,
	418, 418, 418, 418, 418, 407, 407, 408, 408, 426,
	427, 427, 345, 345, 345, 345, 343, 343, 346, 346,
	346, 346, 344, 344, 419, 419, 419, 419, 334, 334,
	420, 420, 420, 420, 421, 422, 422, 423, 423, 377,
	378, 378, 433, 433, 433, 433, 435, 310, 310, 310,
	310, 310, 482, 481, 481, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 450, 450, 450, 450,
	450, 450, 450, 436, 436, 436, 436, 436, 440, 440,
	440, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 441, 441, 446, 446, 447, 447, 447, 442,
	443, 448, 448, 448, 448, 570, 570, 452, 452, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 438, 438,
	438, 445, 445, 445, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 353, 353, 355,
	355, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 386, 386,
	386, 386, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 500, 500, 500,
	500, 500, 500, 500, 500, 388, 388, 503, 503, 504,
	504, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	511, 511, 512, 512, 514, 514, 515, 515, 516, 517,
	517, 517, 518, 519, 519, 513, 513, 520, 520, 520,
	520, 521, 521, 522, 522, 522, 522, 522, 523, 523,
	523, 523, 523, 398, 398, 399, 399, 405, 405, 405,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 234, 234, 234, 234,
	234, 323, 323, 321, 321, 321, 324, 324, 322, 322,
	320, 320, 319, 319, 395, 395, 393, 393, 397, 397,
	347, 347, 451, 451, 451, 451, 451, 451, 451, 451,
	348, 348, 348, 356, 349, 349, 350, 350, 350, 350,
	350, 389, 390, 351, 351, 351, 391, 391, 400, 404,
	404, 403, 402, 402, 401, 401, 379, 379, 380, 380,
	330, 330, 571, 571, 326, 326, 424, 424, 424, 424,
	276, 276, 315, 315, 275, 275, 267, 267, 268, 268,
	268, 268, 308, 308, 406, 406, 453, 453, 454, 454,
	455, 455, 456, 456, 457, 458, 459, 394, 394, 253,
	252, 240, 241, 251, 250, 249, 239, 242, 246, 247,
	248, 244, 245, 259, 258, 257, 264, 265, 255, 256,
	429, 238, 269, 269, 270, 270, 270, 271, 271, 271,
	271, 235, 235, 236, 236, 260, 260, 261, 262, 262,
	254, 254, 254, 226, 226, 226, 227, 227, 228, 228,
	467, 467, 464, 464, 464, 465, 465, 465, 466, 466,
	466, 466, 463, 463, 463, 463, 463, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 474, 474, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 476, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 479, 479,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 3, 6, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 5, 5,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 6, 4, 8, 3, 4,
	10, 3, 6, 4, 3, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 6, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 6, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 4, 3, 3, 4, 3, 4,
	7, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 1, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	2, 6, 4, 7, 7, 7, 2, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 4, 3, 2, 2, 1, 2, 1, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 2,
	6, 3, 3, 4, 4, 3, 1, 3, 2, 3,
	3, 1, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	2, 2, 5, 7, 3, 3, 3, 4, 4, 6,
	5, 5, 5, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 2, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 3, 2, 4,
	3, 3, 5, 3, 4, 3, 5, 3, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 4, 3, 1, 1,
	1, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 3, 4, 10, 10, 3, 5, 5, 5, 3,
	5, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 11, 14, 1, 2, 3,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 9, 9, 3, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 1, 2, 8, 4,
	2, 5, 5, 5, 2, 1, 3, 11, 12, 8,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 9, 12,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 5, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 6, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 561, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -114, -119, -102, -103, -115, -121, -165,
	-170, -171, -172, -3, -43, -45, -58, -75, -77, -88,
	-97, -96, -98, -104, -111, -107, -92, -49, -116, -120,
	-129, -166, -167, -168, 32, 31, 99, 79, 150, 125,
	133, 194, 370, 407, 418, 383, 399, 388, -124, -125,
	435, -44, -56, -118, -117, 72, 126, 394, -4, -12,
	29, 45, -46, -47, -48, 61, -63, -60, -70, -64,
	-554, 101, -507, -78, -81, -110, -558, 138, 157, 212,
	-99, -100, 353, -105, -106, 401, -108, -109, 403, 158,
	-51, -50, 152, -193, -195, -122, -123, -169, -130, -131,
	-132, -133, -134, -135, -136, -159, -137, -138, -139, -140,
	-141, -142, -162, -143, -144, -145, -146, -151, -147, -148,
	-149, -150, -152, -153, -155, -156, -157, -158, -160, -161,
	439, -154, 494, 48, 453, 81, 142, 411, 21, -5,
	-6, -7, -8, -9, -10, -11, -14, -13, -59, -61,
	-62, -65, -66, -67, -74, -68, -69, -506, -79, -80,
	-83, -85, -86, -82, -84, 400, -196, -194, 558, 509,
	-16, -21, -22, -17, -18, -20, -23, -19, -24, -30,
	-35, -36, -32, -33, -31, -34, -37, -38, -39, -40,
	-41, -42, -26, -28, -29, -27, -15, -25, 528, 536,
	-199, -197, -198, -206, 427, 517, 469, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, -274, 2,
	-255, -260, -261, -262, -254, -226, -476, -479, 4, -473,
	-477, 163, 221, 317, 21, 23, 22, 24, 25, 26,
	27, 29, 30, 41, 42, 44, 45, 46, 47, 48,
	52, 54, 58, 59, 60, 61, 62, 63, 67, 72,
	73, 78, 79, 80, 81, 82, 83, 84, 90, 87,
	88, 89, 91, 93, 95, 96, 97, 98, 99, 100,
	102, 103, 104, 106, 107, 115, 116, 117, 118, 120,
	125, 126, 129, 124, 128, 131, 132, 133, 136, 137,
	138, 140, 141, 143, 144, 145, 147, 148, 150, 151,
	152, 155, 153, 476, 154, 156, 157, 158, 159, 169,
	170, 171, 176, 178, 182, 183, 186, 187, 188, 189,
	190, 191, 192, 193, 195, 199, 201, 202, 203, 204,
	205, 211, 212, 214, 215, 216, 217, 222, 223, 227,
	224, 233, 234, 238, 239, 240, 242, 246, 247, 248,
	249, 250, 251, 253, 255, 254, 257, 260, 261, 264,
	268, 269, 272, 273, 274, 275, 277, 278, 281, 279,
	282, 283, 280, 284, 286, 287, 288, 289, 290, 291,
	292, 293, 294, 295, 296, 297, 285, 300, 298, 302,
	303, 304, 315, 313, 308, 309, 305, 310, 306, 307,
	311, 312, 319, 320, 323, 209, 325, 326, 329, 347,
	333, 334, 335, 338, 339, 342, 345, 346, 348, 349,
	350, 351, 352, 353, 354, 355, 357, 358, 360, 361,
	362, 364, 365, 366, 368, 370, 371, 373, 375, 376,
	377, 378, 379, 380, 381, 383, 385, 384, 386, 388,
	394, 399, 396, 397, 398, 400, 401, 402, 403, 405,
	406, 407, 409, 410, 411, 412, 414, 416, 417, 420,
	421, 436, 437, 455, 418, 419, 422, 423, 424, 425,
	426, 430, 428, 429, 431, 432, 433, 435, 438, 439,
	441, 442, 443, 444, 445, 446, 449, 451, 452, 453,
	454, 456, 459, 460, 461, 462, 457, 468, 465, 466,
	470, 471, 472, 473, 474, 475, 477, 479, 487, 488,
	489, 491, 494, 495, 496, 497, 485, 499, 500, 503,
	504, 505, 508, 506, 507, 509, 511, 514, 515, 516,
	522, 521, 523, 529, 530, 532, 533, 534, 36, 49,
	50, 53, 55, 57, 68, 69, 70, 74, 121, 122,
	149, 160, 161, 172, 184, 185, 196, 198, 206, 207,
	208, 228, 229, 231, 236, 258, 322, 324, 340, 344,
	359, 363, 367, 369, 382, 413, 447, 458, 463, 480,
	481, 482, 483, 490, 492, 517, 518, 519, 524, 531,
	-274, 2, -255, 331, -248, 2, -226, -226, 370, 28,
	2, 28, 358, 429, 471, 473, 2, -533, -309, 2,
	28, -229, -226, 101, 194, 427, -248, 2, -533, -309,
	25, 2, -226, 2, 345, -230, 2, 418, -226, 278,
	2, 561, 93, 269, 73, 413, 432, -127, 488, -126,
	480, 422, -128, -462, 2, 300, -226, 561, 561, 561,
	28, -238, -226, 469, 221, 422, 117, 466, 561, 2,
	469, 350, 521, 428, 117, 379, 221, 496, 422, -542,
	278, 409, 197, 510, -531, 2, -526, 4, -477, -473,
	-268, -267, 469, 474, 117, -262, -254, 551, -261, 561,
	561, 561, 2, 239, 240, 378, 377, 432, 433, 561,
	561, 561, 420, 2, 22, 27, 65, 92, 97, 123,
	159, 179, 182, 336, -555, 347, 376, 431, 468, 477,
	491, -541, 454, 67, 422, -540, -542, 278, 496, 136,
	-357, 117, 269, 193, 504, 473, 471, 502, 129, 227,
	507, 506, 561, 561, 22, 27, 65, 76, 97, 136,
	159, 179, 182, -557, 347, 376, 416, 431, 468, 477,
	491, 2, 521, 278, 428, 469, 221, 117, 496, 422,
	-542, 420, 421, 374, -90, 2, 558, 32, 31, 435,
	-188, 469, 232, 2, -226, 561, 561, 2, 239, 240,
	420, 421, 561, 561, 180, -526, 2, 561, 561, 2,
	239, 240, 420, 421, 232, 2, 67, 424, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	2, -163, 432, 454, 203, 46, 45, 73, 28, 375,
	78, 351, 118, 144, 497, 195, 221, 222, 247, 92,
	93, -359, 44, 240, 239, 421, -547, 420, -410, 470,
	423, 429, 465, 251, 418, 488, 101, 511, 410, 534,
	379, 380, 153, 4, 117, 300, 434, 480, 269, 417,
	354, 83, 561, -564, 2, 469, -566, 2, 488, 488,
	2, -566, 2, -566, 2, -566, 2, -567, 488, 531,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, -194, -196, -195,
	561, 561, 561, 561, 561, 561, 561, -163, 432, 2,
	73, 28, -302, -304, 501, 230, 146, 337, -193, -195,
	2, -506, -460, 2, -384, -480, -386, 549, 550, 542,
	467, 66, 316, 535, -398, 123, 502, 331, -479, -387,
	-400, 149, 413, -324, 8, 9, 5, 6, 7, -235,
	-388, -394, 493, 162, 321, -271, 562, 10, 558, -503,
	-195, -399, 37, 198, 64, -464, -270, -236, -436, 231,
	-269, -254, -500, -501, 4, -473, -474, -465, -439, -447,
	-443, -444, -450, -226, -476, 76, 109, 110, 108, 113,
	112, 271, 270, 114, 111, 434, 510, 65, 36, 206,
	207, 236, 322, 208, 74, -502, 137, -475, 228, 229,
	447, 50, 382, 172, 122, 121, 324, 55, 53, 518,
	-448, 119, 480, 481, 482, 483, 184, 185, 57, 160,
	161, 344, 367, 463, 490, 492, 196, 258, 43, 105,
	181, 226, 210, 235, 237, 241, 259, 262, 301, 314,
	318, 341, 343, 408, 440, -570, 519, 458, 68, 69,
	-508, 384, -509, -248, -508, 561, 561, 563, 561, -296,
	-297, -298, 2, 28, 134, 558, 2, -414, 2, -415,
	-419, -195, 252, -418, 558, -416, 556, -255, 332, -504,
	414, -500, -501, -235, -254, -270, 4, -473, -475, 560,
	-299, 558, 117, 469, 77, 221, -352, 558, -226, 28,
	331, 484, 563, -396, 558, 331, 180, 334, 59, -226,
	521, 2, 2, 436, 2, 558, -127, 70, 488, 43,
	432, -371, 2, -372, -222, -223, -224, -426, -225, 238,
	373, 381, 537, 127, 316, 534, -460, -549, 180, 541,
	484, -460, -325, 560, 2, 2, 2, 2, 2, 2,
	-419, 206, -255, 2, -252, -463, 4, -473, -477, -474,
	-478, -476, 28, 31, 32, 33, 35, 37, 38, 39,
	40, 56, 64, 65, 71, 75, 77, 86, 92, 101,
	108, 109, 111, 110, 112, 113, 114, 123, 127, 130,
	134, 135, 139, 142, 146, 162, 164, 177, 179, 180,
	194, 197, 200, 213, 225, 230, 232, 252, 256, 263,
	270, 271, 316, 321, 327, 331, 332, 336, 337, 356,
	372, 387, 404, 427, 434, 450, 464, 469, 478, 484,
	486, 493, 501, 502, 510, 512, 520, 525, 526, 527,
	528, -479, 76, 2, -419, 206, 2, -257, 206, -419,
	-260, 2, -239, -226, 2, -251, -463, 2, -275, 206,
	-255, -256, -260, -258, 2, -260, -264, 2, -226, -471,
	206, 2, -467, 10, -466, 5, 4, -473, -477, -474,
	521, 232, 484, 563, -315, -267, -268, -459, 8, -308,
	-226, 560, -384, 2, -116, -101, 2, 177, -384, 206,
	2, -116, 206, 2, -384, 206, 2, -116, 206, 2,
	-544, 2, -471, 282, 2, 2, 491, 2, 97, 206,
	-226, 469, 116, 2, 398, -556, 416, 495, 2, 2,
	2, 2, 2, 2, 469, -244, 2, -226, 177, -264,
	206, -265, 2, -226, -227, 428, -565, 384, -471, 206,
	2, 521, -258, 2, -258, 221, 234, -239, 206, 2,
	473, 471, 473, 471, 180, 2, 232, 2, 232, 2,
	-420, 2, -421, -415, -422, 556, 332, 282, 2, 2,
	2, 2, 2, 206, -226, 469, 116, 2, 250, 2,
	2, 2, 2, 2, 2, 2, -317, 206, 2, -255,
	521, -317, 206, 2, -317, 206, 2, -358, 2, 86,
	-239, 206, 2, -263, 206, 2, -258, -266, 206, 2,
	-264, -472, 206, 2, -471, -384, 2, -116, 2, -430,
	2, -429, -466, 517, -90, 558, -90, 558, 432, 558,
	-471, -255, -255, -384, 2, -116, -101, 2, -384, 2,
	-116, 2, -113, -112, -471, 558, 180, -384, 2, -116,
	-101, 2, -384, 2, -116, 2, -188, 177, 2, 117,
	469, -163, 2, 177, 512, 2, 8, 2, 213, -471,
	423, 380, 169, 2, 436, 2, 437, 73, -359, 534,
	73, 180, 2, 180, 2, -342, 2, 528, 2, 2,
	-530, 2, 331, 180, 2, 180, 2, 180, 2, 180,
	2, 180, 2, 377, 433, 489, 240, 2, -116, 525,
	-101, -384, 525, 2, -548, 177, 421, -384, 2, 487,
	249, 154, 180, -342, 2, 180, 2, 180, 2, 5,
	2, 378, 455, 2, 238, 373, 455, 2, -255, -559,
	2, 469, 521, 428, 2, 2, 87, 88, 180, 2,
	180, 2, 180, 534, 2, -334, -419, -370, -371, -370,
	484, -302, -304, -163, 436, 2, -200, -332, -202, 177,
	-361, -362, -203, 263, 164, 327, -204, -341, 28, 134,
	-341, -341, 59, 559, 559, 11, 12, 75, 41, 549,
	550, 551, 552, 175, 553, 554, 547, 548, 546, 539,
	540, 544, 244, 245, 94, 543, 541, 85, 276, 415,
	165, 166, 167, 168, 395, 219, 34, 220, 14, 15,
	16, 33, 336, 262, 535, 210, 440, 542, 17, 18,
	19, 235, 237, 318, 49, 213, -234, -277, -384, -384,
	-384, -384, -384, -384, -384, 343, 558, -330, -379, 556,
	-195, 558, 558, 558, -459, -195, -384, -398, 559, -322,
	558, -195, -398, -393, 558, 413, 556, 558, -401, -384,
	5, 5, 5, 558, 560, -511, 529, 177, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 369, -441, 558, -440, 558, -440, -440,
	522, -438, 558, 536, 530, 558, -438, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	522, 563, -508, -299, 558, -326, -424, -384, 551, -326,
	-326, 331, -319, -384, 105, -345, 241, 301, 181, 259,
	408, 226, -381, 562, -381, -409, 536, -195, -416, -254,
	-195, -418, 558, -414, -409, -91, -459, -75, -88, -96,
	-116, -129, -167, -168, 551, -255, 558, 180, 558, 560,
	-463, 180, -308, -239, -255, -269, -270, -275, 133, -319,
	-526, 496, 422, -308, -229, 38, -395, -433, -434, -482,
	562, -481, -436, -446, -442, -445, 359, 363, -465, 53,
	518, -448, 231, 4, -473, -475, 228, 229, 447, 50,
	382, 172, 122, 121, 324, 55, 480, 481, 482, 483,
	184, 185, 57, 519, 458, 68, 69, -526, 496, 422,
	-308, 177, -469, 2, -468, -467, 114, 434, -358, -462,
	-319, 38, -371, 2, 123, -467, -568, 563, 261, -279,
	275, 315, 202, 332, 532, 325, 127, -470, 5, 4,
	-394, -406, 123, 269, 231, -453, -455, 8, -454, 9,
	-456, 549, 550, -461, -460, 107, 560, -463, -211, 396,
	435, -210, 24, 29, 138, 515, 155, -289, 223, 346,
	350, 149, 451, 505, -537, -538, 419, 475, 476, 89,
	325, 435, 396, 149, -338, -340, 38, 115, 304, 345,
	60, 216, 280, 281, 453, 524, 149, 435, 396, 346,
	-538, 98, 396, -538, -213, 451, 505, -537, -538, 419,
	396, -212, -289, 149, 562, 24, 396, 435, 346, -552,
	-553, 138, 29, 396, 346, -534, -505, 528, 149, -419,
	206, -545, -112, 253, 5, 10, -112, -315, 563, 563,
	-463, 551, 421, 420, 149, 149, 149, 149, 177, 2,
	2, 2, 316, 2, 2, 2, 182, -540, -557, 2,
	2, -255, 206, -301, 331, -529, -316, 469, -255, 316,
	43, -257, 206, 2, -260, 521, -534, 316, -259, 206,
	-255, 38, 558, 2, -358, 2, 221, -505, 316, -420,
	-272, -255, -415, -272, 435, -248, 38, -381, -255, 2,
	149, 2, 2, 2, -226, -214, 563, 63, 402, 149,
	-317, 206, -214, 149, -214, 149, -276, 206, -275, -214,
	149, -214, 563, 149, -214, 563, 149, 563, 149, 559,
	563, -430, -430, -471, -176, 528, 180, 101, 558, 558,
	-188, -427, 563, -426, -472, -113, -471, -471, -529, -239,
	2, -255, 2, 469, 242, -471, -176, 213, -471, -471,
	-471, -462, 28, 437, 2, 377, 433, 489, 88, 437,
	2, -255, 469, 117, 221, 79, -532, 177, -527, 409,
	422, -526, -255, 117, -255, 117, -255, 117, -255, -255,
	2, 2, 2, 2, 2, 84, 84, 2, 45, -548,
	177, 2, 487, 2, 487, 2, -226, -226, -226, 454,
	261, -255, 177, 469, 221, 469, 221, 117, 469, -214,
	563, -230, -200, -332, -462, -333, -332, -201, -200, -203,
	177, 381, 506, 304, 438, 246, -362, -361, 28, -384,
	-366, 171, 303, -384, -364, -386, 549, 550, -454, -456,
	-318, 325, -194, -194, -194, -305, -411, -384, 372, 221,
	-435, -433, -433, -253, -463, 480, -384, -384, -384, -384,
	-384, -384, -384, -384, -384, -384, -384, -384, -384, -384,
	-384, -384, -384, -384, -384, -384, -384, -384, -384, -384,
	-384, -384, -384, -384, -384, -384, -384, -384, -384, -384,
	-384, 262, 210, 440, 49, 213, -384, 484, -384, -384,
	-384, -384, 298, 316, 321, 493, 162, 503, 134, 325,
	-571, 464, 40, -391, -195, -323, 558, -405, 35, 450,
	28, -398, 558, 2, -379, -384, -380, -320, -319, -319,
	559, 520, 28, 134, 551, 2, 559, 563, 38, 559,
	-384, -320, -397, -393, -319, -404, -403, 525, -353, -354,
	533, 285, 120, 204, 283, -355, 426, -457, 8, -463,
	551, -512, 170, 197, 558, 559, 2, 559, 2, 559,
	-384, 2, 559, -384, 2, 559, -384, 2, 559, -384,
	2, 559, 2, -384, -384, -384, -384, -384, -384, -384,
	-319, 8, -457, -457, 480, 480, -457, -457, -457, -449,
	359, 360, 361, 362, 264, 265, 266, 267, 363, 364,
	365, 366, 290, 291, 292, 293, 286, 287, 288, 289,
	294, 295, 296, 297, 189, 190, 191, 192, 185, 186,
	187, 188, -449, -347, 2, -451, -319, 4, 533, 285,
	120, 204, 283, 426, 5, -347, 2, -348, 2, -384,
	-319, -349, -385, -386, 549, 550, 542, -398, -350, 2,
	-384, -320, -384, 56, 256, 486, -351, -384, 180, -319,
	-319, 2, -319, 2, -509, 38, -319, -311, 563, 180,
	38, 4, -311, -311, 558, 559, 563, -346, 201, 279,
	274, -346, -414, -345, 241, -343, 341, -343, -343, -409,
	-240, 556, 564, -463, -409, -408, -407, 38, -248, 338,
	-409, -409, 560, 559, -408, 557, -524, 558, 561, 561,
	561, 561, 561, -255, 558, -319, -463, 560, 456, 559,
	235, 235, 235, 235, 414, 559, 484, -528, -263, -266,
	528, -90, 333, 559, 563, -310, 37, 556, 560, -457,
	2, 2, -452, 522, 558, 558, -354, 558, 180, -528,
	-266, -309, 563, 484, -259, -549, 559, 488, -372, -278,
	381, 449, 397, 430, 466, 8, 9, 8, 9, 563,
	-463, 563, -550, 92, 484, 77, 422, -375, 206, 77,
	-483, -242, 92, -484, -226, 71, 502, 372, 179, 147,
	-550, 92, 372, -550, 92, 92, 435, 454, 484, 59,
	-419, 41, 41, 28, -116, 257, 180, 534, 469, 221,
	422, 484, -419, -340, -433, 115, 280, 281, 59, -458,
	-453, 549, 550, -458, 59, -458, -458, -458, 528, -257,
	-419, 422, 484, 484, 484, 484, 563, 41, 41, 28,
	-116, 257, 180, 484, -275, -240, 516, 42, 516, 484,
	42, 422, 484, 563, 42, 42, 484, 484, -535, -231,
	104, 310, 273, 311, 96, 307, 95, 306, 102, 308,
	103, 309, 523, 319, 62, 305, 284, 312, -232, -233,
	352, 514, -471, 435, 396, 149, 213, -427, 213, -427,
	-267, -226, 560, -116, -384, -384, -116, -384, -116, 45,
	149, 2, -565, 250, 558, -282, 316, 180, -308, -428,
	232, 563, -316, 149, -468, -339, -338, 316, -259, 206,
	2, 149, -299, 316, 143, 558, 379, 2, -241, 206,
	-227, -226, -358, -217, 472, 149, -336, 512, -367, -116,
	558, 123, 38, -367, -327, -328, -425, -329, -242, 558,
	-248, -381, -226, 2, -255, -317, -214, 149, -317, -317,
	-214, 563, 149, -239, -258, -263, -264, -266, -471, -472,
	-90, -429, 559, 559, 559, -175, 335, -174, -226, 5,
	-188, 512, -281, -376, -375, -487, -488, -483, 262, 221,
	502, 234, 163, -300, -243, -242, 116, -182, 528, -112,
	559, -427, 213, -176, -176, -427, -427, -255, 177, -471,
	-176, -176, -176, 2, 2, 2, -342, -255, -239, -275,
	-255, -308, -308, -308, -342, -239, -342, -239, -342, -239,
	-116, -384, 2, 432, 177, 177, 560, -342, 379, 117,
	469, 350, 221, -255, -275, -255, -275, -239, -255, -419,
	-333, -201, 332, 246, 438, -364, -365, -386, 413, 414,
	-365, 413, 414, 8, 9, 8, 9, -205, 442, 320,
	-317, 563, -208, 39, 130, 246, -255, 534, 145, -384,
	-384, 484, -571, 464, -391, 145, -384, 298, 321, 493,
	162, 503, 134, 325, 180, 558, -385, -385, 559, -321,
	-384, -384, 557, 566, 559, -304, 563, -302, -384, -319,
	-319, 559, 560, -319, -308, 557, 557, 563, 559, -402,
	-403, 139, -384, 484, 484, 484, 484, 558, 559, 560,
	-517, 342, 558, 558, -384, 559, 559, 559, 559, 38,
	563, 563, 563, 559, 563, 563, 563, 559, 559, 559,
	563, 559, 534, 534, 559, 559, 559, 559, 563, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 559, 563, 559, 180, 559, 559, -356,
	356, 559, 11, 12, 549, 550, 551, 552, 175, 553,
	554, 547, 548, 546, 539, 540, 541, 85, 276, 415,
	14, 15, 16, 235, 213, -385, -385, -385, 559, -389,
	-390, 180, 177, 38, -351, -351, -351, 559, 180, -319,
	559, 559, 558, -510, 278, 316, 559, -378, -377, 526,
	-424, -312, 2, -414, -250, -463, -378, -378, -319, -384,
	241, 241, -344, 512, 331, -346, -414, -408, -459, -383,
	-382, 178, 39, 130, 313, 209, -408, -248, -299, -408,
	-408, -463, -409, -409, -407, 559, -525, -459, 559, -313,
	-417, -504, -304, 560, -463, -185, -505, -164, 5, 321,
	-164, -164, -164, -308, 484, 484, 25, 357, -433, 556,
	557, 8, -463, 558, -457, -457, -457, -308, 180, 180,
	180, -468, -468, -337, 528, -460, -371, 500, 82, 381,
	480, -460, -210, 396, -242, -242, -255, -264, 316, -375,
	206, -216, 316, -433, -249, -226, 558, 558, 246, 246,
	512, -242, -249, 246, 206, -242, 206, -249, -249, -536,
	381, 326, -384, -468, 268, 379, 317, -211, 396, 435,
	-116, -116, -116, 558, -549, 512, 133, -255, -275, -255,
	-264, -259, 435, 396, 314, -269, -458, -458, -338, 435,
	396, -264, -257, -468, 422, -239, -212, -116, -116, -116,
	558, -240, -213, 396, 5, 206, -242, 5, -226, -242,
	-264, -468, -553, 24, -242, 206, -242, -264, -468, -231,
	-471, 321, 508, -534, 422, 484, -419, -112, -179, 528,
	-112, -173, 217, 551, -531, -226, 521, -226, -280, -283,
	-281, -242, -191, -192, 530, 528, 149, -273, -255, 556,
	-176, -471, -255, -264, -265, 149, -299, 316, -471, 38,
	149, 558, 2, 2, 331, 316, -241, 206, -218, 140,
	-569, 541, -239, -378, -312, -335, -369, 404, 331, -300,
	517, -248, -335, -314, 563, 180, 541, 560, -300, -423,
	551, 2, -214, -317, -214, -214, -275, -276, -214, -214,
	-214, -90, -90, -176, 563, 558, 541, 541, 558, -471,
	-471, 559, 563, -255, -241, 221, 221, -247, -227, 559,
	563, 560, 558, -184, 335, -183, 141, 248, 233, 443,
	444, 445, 446, 132, -182, -113, 180, -52, 528, 469,
	-176, 562, -342, -342, -342, 432, 432, -226, -251, -239,
	-255, -252, -275, 177, 177, 506, -365, 332, 272, -411,
	-209, 323, -255, 562, -384, -384, 145, 145, -384, -385,
	-385, -384, 145, 180, 558, -384, -395, 33, 33, 559,
	563, -380, -384, 559, 520, -304, -304, 559, 551, -463,
	562, 559, -393, 142, -384, 478, 285, 204, 283, -355,
	283, -355, -355, -457, 5, -463, 551, -518, -245, 558,
	-226, 526, -303, 337, 559, -435, -433, -384, -384, -384,
	-384, -384, -457, -438, -438, -453, -453, -384, -389, -384,
	-435, -433, -385, -385, -385, -385, -385, -385, -385, -385,
	-385, -385, -385, -385, -385, -385, -385, -385, -385, -385,
	-385, 134, 316, 325, -385, -390, -389, -384, -384, -433,
	559, 559, 559, -319, -90, 558, 278, -331, 197, -384,
	-427, 563, -331, -331, 559, -414, -414, 558, -384, 241,
	557, 563, 565, 541, -299, 560, -407, -408, 557, 559,
	563, 559, 563, -368, 38, 559, -463, -187, -186, 131,
	52, -308, -308, 334, 5, 8, 556, 557, 560, -457,
	559, 559, 559, -308, -308, -308, 116, 304, -384, 484,
	484, 149, 316, 514, -489, -484, 147, -384, -306, -412,
	-384, 558, 558, 2, -207, 138, 435, -551, 2, 512,
	149, -214, 149, -214, 532, 558, 558, 484, 422, 528,
	-319, -384, -177, 123, -462, -538, 562, -538, 562, 422,
	484, 422, 484, 528, 528, -319, 484, -437, 47, 26,
	316, -258, 484, 484, -214, 149, 496, 435, -471, 321,
	-264, -259, 435, 396, -427, -181, 335, -180, 141, 406,
	132, 248, -427, -179, 180, 232, 2, -259, 2, 559,
	559, 563, -490, 38, 329, 329, 558, -255, -71, 528,
	-426, -459, 43, -257, 38, 149, -534, -116, -259, -431,
	-432, 5, -255, 149, 331, 316, -219, 255, -569, -467,
	-505, -304, -335, -326, 317, 90, 559, -378, -328, -312,
	-384, 2, 559, -214, -214, -174, -175, -471, -471, -471,
	-176, -188, -188, -376, -284, 558, -241, -227, 558, -188,
	-243, 2, -472, 563, 558, 541, 541, 541, -427, -116,
	335, -255, 551, -342, -291, -290, 350, 325, -291, 413,
	413, 332, 171, 251, -208, -240, -384, -384, 145, 33,
	33, -384, -384, -395, 559, -384, -384, -319, 557, 5,
	-384, 559, 559, 8, -384, 559, 560, -519, -226, -384,
	559, 59, 559, 559, 563, 563, 559, 559, 559, 559,
	559, 559, 559, -390, 180, 134, 325, 558, 559, 559,
	-90, -392, 200, 59, -414, -392, -392, -344, -308, -414,
	-382, -240, 556, -463, -459, -417, 558, 560, -186, 541,
	557, 2, 556, -463, 559, 116, -242, -242, -375, 149,
	-491, 92, -493, 75, 163, 101, 316, 321, 502, 372,
	71, 123, 387, -561, 38, 538, 559, 559, 563, -208,
	-306, -308, 316, 461, 123, 316, 123, 116, 496, 78,
	-242, -249, -308, -308, -255, -264, 156, 559, 563, 541,
	2, 551, 551, -264, -259, -264, -257, 348, 156, 559,
	-240, 5, 5, 149, -237, 75, 5, -242, -242, -258,
	116, 422, 484, -179, 563, 558, 541, 541, -179, -472,
	-112, -299, -287, 224, -242, -488, -485, -486, 372, -492,
	-494, 163, 372, -116, 2, -190, -189, -226, 5, 558,
	-282, 335, 557, -468, -339, -116, -259, -299, 559, 563,
	-360, 512, -240, -255, 149, -220, 254, -569, -467, -217,
	-363, -361, 135, 558, 331, -116, -304, 541, 559, 559,
	116, 116, 215, 148, -306, 558, 558, -308, 116, 559,
	-183, -184, -471, -112, -471, -182, -53, -54, 221, 92,
	355, -252, 469, 221, 558, 558, -208, -384, -384, -384,
	559, -304, -463, 551, -513, 350, 559, -411, -384, -384,
	-385, 180, 558, -395, 559, -514, 527, -384, -319, -514,
	-514, 559, -459, 2, -471, 556, 2, -375, -249, -253,
	-246, -226, 163, 206, 321, 246, 558, -385, -255, 558,
	2, 30, -562, 127, 225, -374, -563, 100, 462, 214,
	-412, -209, 559, 559, 321, 321, -384, -433, 558, -214,
	-214, 559, 559, -384, 484, -462, 99, -460, 2, -538,
	-239, -384, 484, 5, -214, -253, -214, -214, -237, 496,
	-264, -259, -180, -181, -471, -112, -179, 38, -288, -289,
	213, -490, 246, -246, 246, -560, 528, 559, 563, 541,
	541, -280, -191, -72, -73, 485, -426, -299, 38, 5,
	558, -226, 331, 558, -240, -221, 91, -569, -467, -218,
	-335, 317, -308, 92, -363, -391, -176, 558, 558, -285,
	80, 93, 124, 205, 183, 222, 454, 459, 28, -285,
	559, -306, -306, 559, 558, -176, 559, 563, 28, 558,
	28, 558, -255, -275, -319, -319, 559, -304, 59, 563,
	559, 559, -385, -395, 559, -515, -516, -245, 557, 2,
	-493, -246, 316, 512, -384, -228, 558, -384, 38, 225,
	128, 211, -287, 558, -373, 512, 387, -237, -306, 558,
	558, 558, 541, 180, 558, -437, -214, -258, 559, -543,
	385, -116, -191, 348, 558, -286, 331, 116, 304, -189,
	-460, -460, 559, 38, -73, 9, 38, -116, -306, -255,
	-306, 331, 263, -467, -219, 559, -249, -335, -472, -472,
	-373, 559, 559, -472, -54, -308, -308, 559, 559, -520,
	379, 414, 199, -319, -305, 559, 563, 38, 149, 201,
	559, -495, 277, -226, 559, 128, 211, -288, -308, -287,
	201, -255, -539, 512, 559, -293, -292, -290, -295, -294,
	-290, -319, -460, 99, 348, -319, -237, -546, 181, -545,
	5, 10, -286, -255, -307, -413, -242, 81, 116, -287,
	-116, -116, 559, -360, 559, -255, -569, -220, -378, 559,
	559, -374, -373, -192, 528, 559, 559, 559, 559, -521,
	-522, 49, 499, 107, -384, -521, -521, -516, -518, 163,
	528, -496, -499, -498, 331, 441, 181, 349, 559, 461,
	524, -562, 559, 528, -299, -384, -373, 559, 563, 517,
	559, 563, 517, 559, 180, 559, -214, -178, 528, 45,
	558, 559, 563, 371, 129, 138, -288, -560, -373, 558,
	-374, 558, -453, -221, 135, -176, -176, -287, -374, -378,
	-176, -523, 147, -522, 368, 176, 413, 368, 176, -523,
	-523, -246, 54, -498, 331, -499, 331, 506, 129, -378,
	54, -495, -287, -292, 213, -294, 180, 348, 420, -545,
	30, -308, -413, 414, 414, 2, -191, -286, -374, -306,
	-287, -306, 317, 506, -288, -287, 107, 197, 479, 304,
	33, 541, -497, 304, 402, 63, 435, -497, 541, -496,
	558, 558, 335, 559, 2, -286, -287, 559, -288, 559,
	435, -192, -288, 413, 339, -522, -384, 23, 321, 123,
	-384, -562, -319, -319, -175, 558, -215, 63, 402, -288,
	-373, -192, -374, -327, -378, -192, 559, 559, -175, -192,
	-374, -378, -287, -378, -378, -288, 484, 559, -378, -287,
	-288, 558, -288, -192, -319, -192, -378, 559, -378, -288,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 29,
	30, 31, 32, 485, 486, 488, 489, 490, 492, 493,
	495, 497, 499, 500, 501, 503, 504, 506, 507, 508,
	509, 510, 512, 514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 578,
	0, 1205, 1207, 1209, 1211, 0, 716, 0, 34, 35,
	0, -2, 285, 287, 289, 0, 315, 317, 318, 320,
	322, -2, 0, 418, 419, 421, 423, -2, -2, 0,
	886, 888, 0, 565, 567, 0, 891, 893, 0, 0,
	587, 588, 0, 1298, -2, 581, 583, 585, 650, 652,
	654, 656, 658, 660, 662, 664, 666, 667, 669, 671,
	673, 675, 677, 679, 681, 683, 684, 686, 688, 690,
	692, 694, 696, 698, 700, 702, 704, 706, 708, 710,
	-2, 712, -2, -2, 0, -2, -2, -2, 1223, 38,
	40, 42, 44, 46, 48, 50, 52, 54, 369, 370,
	372, 374, 376, 378, 381, 383, 385, 1356, 425, 427,
	429, 431, 433, 435, 437, 0, -2, 1368, 0, 0,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 85,
	86, 87, 88, 89, 90, 91, 92, 68, 69, 71,
	72, 73, 77, 78, 79, 80, 83, 66, 0, 0,
	1329, 1331, 1333, 1335, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 487, 491,
	494, 496, 498, 502, 505, 511, 513, 515, 472, 473,
	476, 2018, 2035, 2036, 2037, 2040, 2041, 2042, 2043, 2044,
	2045, 2463, 2544, 2545, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	474, 475, 1048, 0, 539, 537, 2010, 540, 2278, 542,
	544, 412, 413, 414, 415, 416, 417, 0, 558, 550,
	557, 559, 561, 562, 563, 564, 534, 532, 0, 558,
	2071, 556, 1203, 1204, 0, 1188, 1189, 2317, 1230, 0,
	197, 577, -2, -2, -2, 2428, -2, 609, -2, 616,
	2432, 2319, 621, 0, 623, -2, 626, 1206, 1208, 1210,
	714, 715, 2021, 0, 0, 0, 0, 0, 36, 37,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1097, 1098, 1099, 0, 205, 207, -2, -2, -2,
	-2, 0, 0, 2357, 2120, 1978, 2037, 1981, 1976, 286,
	288, 290, 291, 0, 0, 0, 0, 0, 0, 316,
	319, 321, -2, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 943, 935, 936, 1154, 0, 0,
	0, -2, 420, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 348, 477, 478, 0, 1357, 1357, 0,
	0, 0, 0, 260, 251, 887, 889, 890, 0, 0,
	0, 0, 566, 568, 0, 0, 233, 892, 894, 895,
	0, 0, 0, 0, 0, 262, 0, 0, 582, 584,
	586, 651, 653, 655, 657, 659, 661, 663, 665, 668,
	670, 672, 674, 676, 678, 680, 682, 685, 687, 689,
	691, 693, 695, 697, 699, 701, 703, 705, 707, 709,
	711, 722, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 806, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 725, 727, 728, 729, 0, 786, 804,
	805, 814, 713, 0, 1088, 1358, 1232, 1213, 1227, 1232,
	1215, 1216, 1217, 1218, 1219, 1224, 1226, 1220, 1221, 1222,
	39, 41, 43, 45, 47, 49, 51, 53, 55, 371,
	373, 375, 377, 379, 382, 384, 386, -2, 1327, 1328,
	426, 428, 430, 432, 434, 436, 438, 569, 0, 571,
	0, 726, -2, 0, 1362, 1362, 1362, 0, 0, 1328,
	1326, 0, 574, 575, 630, 631, 1621, 0, 0, 0,
	0, 0, 0, 0, 1875, 1707, 0, 632, -2, 1738,
	1740, 2403, 2428, 1874, 1742, 1743, 1744, 1745, 1746, 0,
	1748, 1749, 1750, 1751, 1752, 1753, 0, 1755, 0, 1760,
	1761, 1762, 0, 2410, 1955, 2031, -2, 0, 0, 2416,
	2027, 0, 1841, 1778, -2, -2, 2054, 2033, 1553, 1554,
	1555, 1556, 1557, -2, -2, 2446, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 0, 2391, 2411,
	2412, 2417, 2419, 2413, 2400, 1803, 2132, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1580, 1589, -2, -2, -2, -2, -2, -2, -2, 2404,
	2405, 2422, 2425, 2431, 2436, 2437, 2409, 2418, 2445, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 1581, -2, -2, -2, -2,
	1345, 2290, 1348, 1048, 1346, 1330, 1332, 0, 1334, 0,
	0, 0, 1339, 1365, 1363, 0, 1406, 1343, 1344, 1424,
	1424, 1448, 0, 1429, 0, 1448, 1357, 1474, 0, 1435,
	2309, 1779, 1780, 0, 2037, 2032, -2, -2, 2443, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 541, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	1153, 579, 580, 0, 604, 0, 608, 2399, -2, 0,
	2328, -2, 612, 1233, 1237, 1238, 1239, 1240, 1241, 0,
	0, 0, 0, 1246, 0, 0, 618, 0, 0, 605,
	606, 624, 627, 0, 717, 718, 719, 720, 721, 65,
	0, 2411, 1474, 67, 0, 2000, 2062, 2063, 2064, 2065,
	2066, 2444, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2446, 70, 0, 2411, 74, 0, 2411, 0,
	-2, 81, 0, 2006, 84, 0, 2003, 93, 0, 2411,
	0, 1975, -2, 0, 180, 2014, 0, 914, 2016, -2,
	2411, 1096, 263, 264, 2050, 2051, 2058, 2059, 2060, 2061,
	0, 0, 0, 0, 878, 1972, 1977, 879, 1996, 880,
	1982, 0, 292, 293, 294, 295, 296, 0, 297, 2411,
	299, 300, 0, 302, 303, 2411, 305, 306, 0, 308,
	0, 218, 219, 0, 325, 326, 0, 328, 0, 2411,
	0, 0, 0, 334, -2, 349, 0, 346, 337, 338,
	340, 341, 342, 343, 0, 390, 388, 2011, 0, 907,
	2411, 0, 911, -2, 2017, 0, 0, 1133, -2, 2411,
	1093, 0, 1139, 1135, 0, -2, 0, 1355, 2411, 1250,
	939, 940, 941, 942, 1486, 409, 0, 1265, 0, 1267,
	0, 1286, 1480, 1424, 0, 0, 1485, 0, 351, 352,
	353, 354, 355, 2411, 0, 0, 0, 360, 0, 362,
	363, 364, 365, 366, 367, 368, 169, 2411, 443, 470,
	0, 169, 2411, 446, 169, 2411, 449, 0, 452, 1152,
	169, 2411, 455, 169, 2411, 458, 460, 169, 2411, 464,
	465, 467, 2411, 469, 265, 1199, 1200, 1201, 1202, 0,
	-2, 528, 2020, -2, 480, 0, 481, 0, -2, 0,
	277, 0, 0, 896, 897, 898, 899, 900, 903, 904,
	905, 906, 1461, 236, 234, 0, 0, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 0, 0, 589, 0,
	0, 723, 724, 0, 0, 734, 735, 736, 0, 277,
	2320, 2286, 2152, 743, 0, 746, 749, -2, 0, 0,
	0, 0, 753, 0, 758, 759, 760, 0, 762, 764,
	885, 766, 0, 0, 768, 0, 772, 0, 775, 0,
	777, 0, 779, -2, -2, -2, -2, 790, -2, 0,
	793, 795, 0, 797, -2, 0, 806, 802, 803, 0,
	0, 0, 0, 822, 823, 0, 832, 0, 835, 836,
	837, 0, 839, 840, 0, 842, 843, 844, 845, 0,
	847, 848, -2, -2, 852, 854, 0, 861, 0, 865,
	0, 869, 0, 730, 731, 169, 1478, 1212, -2, 1214,
	0, -2, 0, 570, 0, 573, 1385, 1313, 1310, 0,
	1382, 1383, 1314, 0, 0, 0, 1321, 0, 1360, 1361,
	0, 0, 0, 1300, 1301, 0, 0, 0, 0, 1880,
	1881, 1882, 1883, 1884, 1885, 1888, 1889, 1886, 1887, 1890,
	1891, 0, 0, 0, 0, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1893, 1894,
	1895, 0, 0, 1897, 0, 1899, 0, 0, 0, 0,
	0, 0, 1686, 1688, 1963, 0, 0, 1896, 1626, 1627,
	1628, 1629, 1630, 1665, 1666, 0, 0, 1739, 1960, 1959,
	1741, 0, 1911, 0, 1754, -2, 0, 1875, 1906, 0,
	0, 1763, 1764, 1765, 0, 0, 1911, 0, 0, 1954,
	1775, 1776, 1618, 0, 0, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 1566, 0, 1568, 0, 1569, 1570,
	1577, 1590, 0, 0, 0, 0, 1594, 0, 0, 0,
	0, 0, 0, 0, 1935, -2, 0, 0, 0, 0,
	1582, 0, 1347, 0, 0, 1410, 1964, 1968, 1969, 1410,
	1410, 0, 0, 1912, 1471, 1471, 0, 0, 1467, 1467,
	1467, 1465, 1448, 0, 1448, 1458, 0, 1448, 1448, 0,
	-2, 1429, 0, 0, 1458, 0, 1442, 516, 518, 520,
	522, 523, 524, 526, 1475, 1476, 0, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 2367, 2319, 546, 560, 1357, 0, 1914, 1501, 1505,
	0, 1507, 1508, 1509, 1510, 1511, 0, 0, 1502, -2,
	1578, 1580, 1601, 2055, 2056, 2057, 1561, 1562, 1563, 1564,
	1565, 1573, 1560, 1560, 1560, 1571, 1600, 1592, 1600, 1596,
	1546, 1547, 1548, 1583, 1584, 1585, 1586, 0, 2367, 2319,
	552, 0, 0, 1297, 184, 186, 187, 188, 0, 0,
	0, 0, -2, 614, 619, 620, 0, 1235, 0, 1242,
	641, 642, 643, 1244, 1245, 0, 1247, 617, 644, 645,
	646, 647, 648, 649, 0, 1984, 1985, 1986, 1987, 1990,
	1991, 0, 0, 615, 634, 622, 0, 628, 94, 1185,
	0, 133, 0, 1185, 1185, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 118, 129, 106, 107, 0,
	0, 0, 0, 0, 75, 1070, 0, 1073, 0, 0,
	0, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	117, 0, 0, 112, 96, 0, 0, 0, 119, 131,
	0, 160, 162, 0, 0, 0, 0, 0, 0, 179,
	189, 0, 0, 0, 0, 1094, 0, 1354, 0, 0,
	2411, 0, 1461, 2196, -2, -2, 1461, 877, 0, 0,
	2038, 1980, 0, 0, 0, 0, 0, 0, 0, 324,
	327, 329, 0, 331, 332, 333, 0, 1132, 0, 339,
	380, 1019, 2411, 0, 0, 407, 402, 0, 404, 0,
	0, 1069, 2411, 1067, 2015, 0, 1091, 0, 1048, 2411,
	2013, 0, 0, 1140, 2047, 1149, 1153, 1252, 0, 411,
	0, 1268, 1270, 0, 0, 1481, 0, 1483, 1424, 350,
	0, 357, 358, 359, 0, 439, 0, 167, 168, 0,
	169, 2411, 444, 0, 447, 0, 169, 2411, 1970, 453,
	0, 456, 0, 0, 462, 0, 0, 0, 0, 1357,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 240, 0, 1460, 0, 1461, 234, 277, 277, 1461,
	591, 1461, 593, 0, 0, 737, 738, 0, 277, 277,
	277, 744, 745, 747, 748, -2, -2, -2, 862, 750,
	751, 829, 0, 0, 0, 828, 765, 0, 871, 2305,
	2319, 883, 829, 2120, 829, 2120, 829, 2120, 776, 778,
	781, 817, 825, 789, 794, 0, 0, 799, 807, -2,
	0, 809, 0, 811, 0, 813, 829, 830, 833, 838,
	841, 846, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 1225, 1385, 1313, 572, 1304, 1384, 1305, 1312, 1315,
	0, 0, 1317, 0, 1319, 0, 1380, 1381, 1388, 1389,
	0, 1399, 1400, 1392, 0, -2, 0, 0, 1395, 1396,
	1323, 0, 1340, 1341, 1342, 1369, 1372, 1163, 0, 2544,
	1622, 1496, 1623, 1624, 1999, 0, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, -2, -2, -2, -2,
	-2, -2, -2, -2, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, -2, -2, -2, 1663, 1664,
	-2, 1898, 1900, 0, 1963, 0, -2, 0, -2, -2,
	-2, -2, 1683, 0, 1685, 1690, 1692, 1694, 0, 0,
	0, 0, 1962, 1704, 1946, 1947, 0, 0, 1877, 1878,
	1879, 1689, 0, 1708, 1961, 1958, 0, 0, 1910, 1368,
	1767, 0, 0, 0, 0, 1774, 1759, 1908, 0, 1907,
	0, 0, 0, 1918, 0, 1953, 1949, 0, 1997, 1617,
	1604, 1605, 1606, 1607, 1608, 1609, 1619, 0, 1994, 2024,
	2030, 1851, 0, 0, 0, 1804, 1805, 1806, 1807, 1808,
	0, 1810, 1811, 0, 1813, 1814, 0, 1816, 1817, 0,
	1819, 1820, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 0, 1518, 0, 0, 0, 1522, 0,
	0, 0, 1526, 0, 0, 0, 1530, 0, 0, 0,
	1534, 0, 0, 0, 1538, 0, 0, 0, 1542, 0,
	0, 0, 0, 0, 1823, 0, 1921, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1825, 0, 1827, 1912,
	1932, 0, 0, 1709, 0, 0, 0, 1875, 0, 1830,
	1912, 1940, 0, 0, 0, 0, 0, 1912, 0, 1945,
	0, 1837, 0, 1839, 1349, 0, 0, 1491, 0, 0,
	0, 1967, 1491, 1491, 0, 1405, 0, 0, 1468, 1469,
	1470, 0, 0, 1471, 0, 1462, 1466, 1463, 1464, 1458,
	1421, 0, 0, 2001, 1458, 1427, 1457, 0, 1048, 1447,
	1458, 1458, 0, -2, 1431, 1448, 0, 0, 517, 519,
	521, 525, 527, 0, 0, 1368, -2, 0, -2, 1047,
	0, 0, 0, 0, 536, 538, 0, 0, 459, 0,
	0, 530, 0, 533, 0, 1492, 1495, 0, 0, 1506,
	1512, 1513, 0, -2, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 607, 0, 1234, 1243,
	0, 638, 0, 640, 0, 1988, 1992, 1989, 1993, 0,
	629, 0, 0, 0, 0, 1184, 0, 137, 2411, 0,
	171, 0, 0, 1012, 2007, 0, 0, 0, 0, 2139,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 1071, 1072, 1074, 1081, 1083, 0, 1077,
	1995, 0, 0, 1078, 0, 1080, 1082, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	109, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1128, 1126,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	0, 0, -2, 0, 0, 0, 0, 210, 0, 268,
	1973, 1983, 0, 901, 902, 298, 301, 304, 307, 206,
	0, 335, 0, 0, 945, 920, 0, 0, 389, 277,
	0, 0, 403, 2047, 909, 1065, 1068, 0, 1048, 2411,
	1105, 0, 0, 0, 0, 0, 0, 1138, 0, 2411,
	2002, 2046, 2047, 1254, 1262, 0, 1491, 0, 1284, 1271,
	0, 0, 0, 1284, 1288, 1289, 1291, 1292, 0, 0,
	1482, 1488, 0, 361, 471, 169, 441, 0, 169, 169,
	450, 0, 0, 169, 461, 169, 466, 169, 266, 468,
	479, 529, 1357, 1357, 277, 275, 2255, 273, 270, 272,
	0, 0, 0, 946, 948, 949, 950, 951, 0, 2047,
	0, 2185, 2047, 0, 1274, 1276, 0, 230, 0, 237,
	235, 240, 0, 0, 401, 590, 595, 732, 0, 277,
	740, 741, 742, 783, 819, 827, 752, 754, 755, 756,
	0, 884, 881, 882, 767, 829, 770, 829, 773, 829,
	792, 796, 801, 808, 0, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 866, 867, 868, 870, 1479,
	1308, 1309, 1311, 0, 1320, 0, 0, 1394, -2, -2,
	1393, 1397, 1398, -2, -2, -2, -2, 1316, 0, 1325,
	1322, 0, 1379, 1161, 1162, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1705, 0, -2, 1684, 1687, 1691,
	1693, 1695, 0, 0, 0, 0, 0, 0, 1901, 0,
	1903, 1706, 1956, 1959, 1873, 0, 0, 1367, 1368, 1368,
	0, 1773, 0, 1909, 0, 1916, 1917, 0, 1766, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 1809, 1812, 1815, 1818, 0,
	0, 0, 0, 1798, 0, 0, 0, 1802, 1572, 1558,
	0, 1600, 1598, 1599, 1593, 1600, 1597, 1550, 0, 1515,
	1516, 1517, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528,
	1529, 1531, 1532, 1533, 1535, 1536, 1537, 1539, 1540, 1541,
	1543, 1544, 1545, 1549, 0, 1822, 0, 1824, 1826, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 1713, 1714, 1829, 1938,
	1939, 0, 0, 0, 0, 0, 0, 1835, 0, 1944,
	1836, 1838, 1357, 0, 1350, 0, 1407, 1402, 1490, 0,
	1965, 1461, 1409, 1411, 1966, 2004, 1402, 1402, 0, 1913,
	0, 0, 1452, 0, 0, 0, 1454, 1425, 0, 0,
	1419, 0, 1415, 1416, 1417, 1418, 1426, 1048, 1456, 1428,
	1432, 2024, 0, 1458, 0, 1443, 0, 1445, 1477, 0,
	1437, 1440, 0, 0, 2039, 278, 0, 309, 313, 314,
	310, 311, 312, 545, 0, 0, 0, 0, 1915, 0,
	1497, 0, 1503, 0, 0, 0, 0, 551, 0, 0,
	0, 185, 1296, 196, 0, 603, -2, 636, 637, 639,
	0, 635, 134, 1185, 0, 0, 1166, 1168, 0, 139,
	2411, 148, 0, 986, 0, 2005, 0, 0, 0, 0,
	0, 1187, 0, 0, 2411, 169, 2411, 169, 151, 154,
	0, 159, 156, 157, 0, 0, 977, 95, 1185, 0,
	98, 102, 110, 0, 0, 0, 116, 0, 0, 0,
	1170, 1176, 0, 0, 1075, 1076, 1079, 1085, 76, 0,
	0, 1174, 1180, 82, 0, 1165, 161, 100, 104, 111,
	0, 1182, 97, 0, 183, 0, 0, 0, 175, 0,
	176, 177, 190, 0, 169, 2411, 0, 912, 913, 1127,
	1089, 1090, 0, 1095, 0, 0, 0, 1461, 202, 0,
	1461, 210, 0, 1979, 0, 0, 0, 0, 0, 0,
	944, 1030, 0, 917, 0, 0, 0, 395, 391, 0,
	400, 406, 405, 908, 0, 0, 0, 0, -2, 0,
	0, 1142, 1136, 1137, 0, 0, 0, 2411, 1256, 1262,
	0, 1261, 1355, 1368, 410, 1263, 1284, 0, 0, 0,
	1273, 1269, 1266, 1491, 0, 0, 0, 0, 0, 1484,
	1487, 356, 440, 169, 445, 448, 1971, 169, 454, 457,
	463, 482, 483, 252, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 955, 0, 2047, 2047, 0, 2009, 0,
	0, 0, 0, 238, 0, 241, 0, 0, 0, 246,
	247, 248, 249, 250, 231, 1461, 0, 592, 0, 0,
	739, 0, 769, 771, 774, 810, 812, 829, 855, 856,
	972, 0, 972, 0, 0, 1318, 0, 1391, 1324, 1373,
	1374, 0, 1163, 0, 1625, 1668, 0, 0, -2, 0,
	0, 1672, 0, 0, 0, -2, 0, 0, 0, 1902,
	1904, 0, 1958, 1768, 0, 0, 0, 1772, 1756, 1757,
	0, 1876, 1919, 1948, 1952, 0, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 0, 1998, 2025, 2029, 1849, 1850, 1854,
	2012, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 1591, 1595, 0, 0, 1920, 1931, 1933,
	1710, 1711, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, -2, -2, -2, 1728, 1729, 1730, -2, -2,
	-2, 0, 0, 0, 1934, 1936, 1937, 1941, 1942, 0,
	1832, 1833, 1834, 1943, 0, 1357, 1351, 1404, 0, 1489,
	1408, 0, 1404, 1404, 1364, 1450, 0, 0, 1473, 0,
	1422, 0, 1423, 0, 1455, 0, 1430, 1433, 1434, 1444,
	0, 1436, 0, 1439, 0, 1768, -2, 279, 281, 0,
	284, 548, 549, 547, 531, 0, 0, 1499, 0, 0,
	1575, 1579, 1603, 554, 555, 553, 198, 0, 1459, 0,
	0, 0, 0, 170, 984, 1011, 0, 0, 0, 1156,
	1163, 0, 0, 1017, 141, 0, 0, 0, 149, 0,
	0, 146, 0, 153, 158, 0, 0, 0, 0, 0,
	0, 113, 114, 115, 0, 120, 0, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 1160, 0, 0, 192, 0, 0, 0, 1130, 1131,
	1171, 1177, 0, 0, 210, 208, 0, 211, 0, 214,
	215, 0, 210, 204, 0, 0, 330, 1048, 336, 966,
	1018, 0, 1020, 0, 918, 0, 0, 1019, 387, 0,
	394, 0, 0, 1069, 0, 0, 1092, 1103, 1048, 0,
	1141, 1143, 1151, 0, 0, 0, 1258, 1262, 0, 1251,
	1252, 1387, 1264, 1282, -2, 0, 0, 1368, 1290, 1287,
	1293, 1294, 0, 442, 451, 274, 0, 269, 271, 0,
	255, 0, 0, 947, 952, 0, 0, 0, 0, 0,
	1275, 1277, 0, 0, 0, 0, 0, 0, 240, 261,
	0, 733, 757, 820, 857, 971, 0, 0, 859, 0,
	0, 1390, 1377, 1378, 1375, 1163, 1670, 1674, 0, 0,
	0, 1676, -2, 0, 1698, -2, -2, 1905, 1957, 1747,
	1368, 1769, 1771, 1758, 1951, 1620, 0, 1856, 1853, 0,
	1840, 0, 1793, 1794, 0, 0, 1797, 1799, 1800, 1801,
	1559, 1552, 1551, 1930, 0, 0, 0, 0, 1831, 1352,
	0, 1845, 0, 0, 1412, 1845, 1845, 1451, 0, 1453,
	1420, 1413, 0, 2025, 1446, 1438, 0, 0, 282, 0,
	1493, 1498, 0, 1504, 1574, 199, 135, 136, 138, 0,
	985, 0, 988, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 1005, 0, 1034, 1044, 0, 1379,
	0, 0, 0, 143, 164, 0, 0, 1186, 0, 0,
	169, 169, 0, 0, 1167, 1169, 0, 0, 0, 0,
	123, 0, 0, 1172, 1178, 1175, 1181, 0, 0, 0,
	1183, 181, 182, 0, 169, 0, 174, 169, 169, 1160,
	0, 0, 0, 201, 0, 0, 0, 0, 203, 267,
	210, 0, 974, 0, 1030, 1022, 1023, 1024, 0, 1029,
	1031, 0, 0, 932, 919, 0, 928, 0, 0, 945,
	920, 0, 392, 910, 1066, 1100, 1048, 0, 1134, 0,
	0, 0, 0, 0, 0, 1260, 1262, 0, 1253, 1254,
	1284, 1386, 0, 0, 0, 1272, 1387, 0, 276, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	242, 0, 243, 244, 245, 232, 594, 596, 0, 0,
	602, 970, 0, 0, 0, 0, 1376, 1678, -2, -2,
	1699, 0, 2026, 2028, 1368, 0, 1842, 1370, 0, 0,
	-2, 0, 0, 0, 1353, 1336, 0, 1403, 1401, 1337,
	1338, 1472, 0, 1441, 283, 0, 1500, 140, 0, 989,
	990, 2008, 992, 0, 994, 997, 0, 1000, 2049, 0,
	1004, 0, 1013, 1035, 0, 966, 0, 1040, 1041, 1042,
	1157, 1158, 1046, 0, 142, 144, 163, 1160, 0, 145,
	152, 0, 0, 99, 0, 0, 2111, 126, 124, 122,
	1164, 101, 0, 183, 191, 1159, 178, 193, 169, 0,
	1173, 1179, 212, 0, 213, 216, 0, 0, 920, 973,
	0, 1021, 0, 1032, 1033, 922, 0, 921, 0, 0,
	0, 0, 0, 393, 396, 0, 399, 0, 0, 1144,
	0, 1150, 0, 0, 0, 1248, 0, 0, 1255, 1256,
	408, 1278, 0, 0, 1284, 1295, 254, 0, 0, 953,
	956, 957, 958, 959, 960, 961, 962, 963, 964, 954,
	1046, 0, 0, 1010, 0, 259, 239, 0, 598, 0,
	600, 0, 858, 860, 0, 0, 1770, 1860, 0, 0,
	1795, 1796, -2, 0, 1736, 1844, 1846, 0, 1414, 1494,
	987, 991, 0, 0, 0, 1052, 0, 0, 1006, 0,
	1038, 1039, 974, 0, 966, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 173, 194, 1160, 209, 226,
	0, 1101, 922, 0, 0, 930, 0, 933, 0, 929,
	926, 927, 966, 0, 397, 398, 0, 1104, 0, 1151,
	0, 0, 1262, 1257, 1258, 1491, 1281, 1285, 0, 0,
	1044, 1046, 920, 0, 597, 0, 0, 863, 864, 0,
	0, 0, 0, 1855, 1371, 1737, 0, 0, 0, 0,
	999, 1057, 0, 0, 0, 1036, 1037, 1034, 0, 1015,
	0, 1048, 147, 0, 1046, 0, 978, 0, 0, 981,
	0, 0, 127, 2111, 125, 0, 169, 229, 0, 223,
	221, 222, 915, 0, 0, 1026, 1028, 0, 934, 974,
	932, 1102, 1046, 0, 1044, 0, 0, 1260, 0, 277,
	277, 966, 1044, 1491, 0, 277, 599, 601, 1852, 1872,
	1861, -2, 2370, 2117, 0, 1872, 1872, 1847, 1848, 0,
	0, 1001, 1053, 1054, 0, 1049, 1050, 1051, 2048, 1002,
	1003, 1491, 1043, 0, 1052, 165, 966, 975, 0, 0,
	976, 0, 0, 130, 0, 132, 195, 217, 0, 0,
	0, 1025, 0, 0, 0, 0, 920, 922, 1044, 0,
	966, 0, 1259, 1249, 0, 256, 257, 974, 966, 1009,
	258, 1857, 0, 0, 1863, 1864, 1865, 1866, 1867, 1858,
	1859, 993, 0, 1055, 0, 1056, 0, 0, 0, 1014,
	0, 1057, 150, 979, 0, 982, 0, 128, 0, 224,
	225, 0, 1027, 923, 0, 925, 922, 931, 966, 0,
	974, 0, 1279, 0, 920, 974, 0, 1869, 1870, 0,
	0, 0, 1058, 0, 1061, 1062, 0, 1059, 0, 1034,
	0, 0, 0, 969, 924, 916, 974, 1046, 920, 1044,
	0, 1491, 920, 1868, 1871, 1862, 998, 1060, 1063, 1064,
	1045, 1016, 0, 0, 227, 0, 965, 967, 968, 920,
	1044, 1491, 966, 1491, 1007, 1491, 974, 0, 0, 1491,
	966, 1147, 974, 1280, 1008, 980, 0, 228, 1145, 974,
	920, 0, 920, 1491, 0, 1491, 1148, 974, 1146, 983,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 547, 3, 553, 548, 3,
	558, 559, 551, 549, 563, 550, 560, 552, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 566, 3,
	539, 541, 540, 544, 562, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 556, 3, 557, 554, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 564, 546, 565, 542,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 543, 57882, 545, 57883, 555, 57884, 561,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1234
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1260
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1363
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1376
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1393
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1397
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1401
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1418
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1422
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1443
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1489
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1493
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1499
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1508
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1519
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1523
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1529
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1547
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1551
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1561
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1572
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1579
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1591
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1598
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1606
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1615
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1620
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1626
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1634
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1645
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1655
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1665
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1674
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1685
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1691
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1699
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1722
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1779
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1842
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1891
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1943
		{
			sqlVAL.union.val = nil
		}
	case 167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2004
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2052
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2056
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2059
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2119
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2202
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2210
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2222
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2237
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2348
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2365
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = nil
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2463
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2587
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2596
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2602
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2607
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2612
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2617
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2622
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2626
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2645
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2653
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2717
		{
			sqlVAL.union.val = nil
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2729
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2755
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2775
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2776
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2777
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2796
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2805
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2868
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2889
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2913
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2929
		{
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2930
		{
			return helpWith(sqllex, "CREATE")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplemented(sqllex, "create access method")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplemented(sqllex, "create cast")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2938
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2939
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2940
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2941
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2942
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2944
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2945
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2946
		{
			return unimplemented(sqllex, "create operator")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			return unimplemented(sqllex, "create publication")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2948
		{
			return unimplemented(sqllex, "create rule")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			return unimplemented(sqllex, "create server")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2955
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2956
		{
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2959
		{
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2960
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2963
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2964
		{
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2972
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2973
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2974
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2975
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2976
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2977
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2978
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplemented(sqllex, "drop server")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2989
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2990
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2991
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2992
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2993
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2995
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3043
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3050
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3066
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3105
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3140
		{

			sqlVAL.union.val = nil
		}
	case 408:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3164
		{
			return helpWith(sqllex, "DELETE")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3168
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3180
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3193
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3194
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "DROP")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3198
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3220
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3252
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3315
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3404
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3427
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3469
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3493
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3501
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "DELETE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "INSERT")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "DELETE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "INSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3578
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3611
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "GRANT")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3729
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3755
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "RESET")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "RESET")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "USE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3829
		{
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3836
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "USE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3897
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4008
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4013
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4043
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4053
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4058
		{
			return unimplemented(sqllex, "set from current")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4072
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = tree.Low
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = tree.Normal
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = tree.High
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4245
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4254
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4264
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4269
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4281
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.str = "client_encoding"
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.str = "timezone"
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4314
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4329
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4377
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4386
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4470
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4503
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = true
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = true
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = false
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4602
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4658
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4698
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4705
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = true
		}
	case 815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = false
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4724
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4729
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = true
		}
	case 829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = false
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4825
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4846
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4851
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4856
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4872
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4915
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4923
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4960
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4974
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4983
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4999
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5006
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5139
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5182
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5191
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList().ToStrings()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "RESUME")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5352
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5380
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5419
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5434
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5452
		{

			sqlVAL.union.val = nil
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5458
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = nil
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5468
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5479
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5484
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5489
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 930:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5516
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5530
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5545
		{
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5546
		{
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5630
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5633
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5636
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5637
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5643
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5659
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5664
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.str = ""
		}
	case 974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 975:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 980:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 983:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5853
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5867
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5878
		{
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5965
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5977
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5988
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6005
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6015
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6095
		{
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6096
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6097
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6098
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6172
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6233
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6256
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6265
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6289
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6299
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6304
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6306
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6309
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6314
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6352
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6367
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = true
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6377
		{

			sqlVAL.union.val = true
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = false
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6392
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6406
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6418
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6430
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6440
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6450
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = nil
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6560
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6577
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6579
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6581
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6583
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6585
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6587
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6625
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6643
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6662
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6679
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6696
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6700
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = false
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = true
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = false
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = true
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = false
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6754
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.str = ""
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6807
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6813
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6883
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6889
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6901
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6907
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6921
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6927
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6944
		{
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6945
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6948
		{
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6949
		{
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6960
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6978
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6987
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7008
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7037
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7045
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7056
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7060
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7061
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7062
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7086
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7104
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7113
		{
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7114
		{
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7115
		{
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7132
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7135
		{
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7136
		{
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7179
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7183
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7264
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.str = ""
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.str = ""
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.str = ""
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.str = ""
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7308
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7322
		{
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7351
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7369
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7373
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7382
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7431
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7458
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7462
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7500
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7532
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7552
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7696
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7731
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7732
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7733
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7838
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = true
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = false
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7907
		{
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7908
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = nil
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7921
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7922
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = true
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = false
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = false
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = true
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7951
		{
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7952
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7993
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8014
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8019
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8081
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8136
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8137
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8140
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8141
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8194
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8196
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8211
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8233
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8238
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8243
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8266
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8285
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8324
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8334
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8369
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8380
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8410
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8443
		{
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8445
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = nil
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = true
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = false
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.str = tree.AstFull
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.str = tree.AstRight
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.str = tree.AstInner
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8562
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8563
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.str = tree.AstHash
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.str = ""
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8625
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8630
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8648
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8654
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8670
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = true
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = false
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = true
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = false
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8719
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8732
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8740
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8741
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8759
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8761
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8769
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8782
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8789
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8798
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8850
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8856
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8857
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8859
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8860
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8861
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8863
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8865
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8867
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8869
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8871
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8872
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8873
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8875
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8876
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8879
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8880
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8881
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8883
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8884
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8885
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = types.Geography
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8900
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8908
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8934
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8942
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = nil
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = types.Int2
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = types.Int
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = types.Float4
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = types.Float
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8985
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8993
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9001
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = types.Bool
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = types.Float
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9034
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9040
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9062
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = types.String
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = true
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = false
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = types.Date
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9111
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9119
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9133
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9142
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9150
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9167
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = true
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = false
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = false
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = types.Interval
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9191
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9290
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = nil
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9320
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9380
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9698
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9720
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9914
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9919
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9969
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9999
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10010
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10011
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10026
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10035
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10101
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10226
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10258
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10277
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10282
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10296
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10297
		{
			return unimplemented(sqllex, "treat")
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.str = ""
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10459
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10472
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10540
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10569
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = tree.Any
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = tree.Some
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = tree.All
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = tree.Div
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = tree.LT
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = tree.GT
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = tree.LE
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = tree.GE
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = tree.NE
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = tree.Like
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10930
		{
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10931
		{
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11011
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11084
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11100
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11109
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11129
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11149
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11329
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11349
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.str = ""
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
