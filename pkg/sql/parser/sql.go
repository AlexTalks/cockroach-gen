// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:874
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13693

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1593,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 416,
	-2, 0,
	-1, 74,
	244, 243,
	518, 243,
	-2, 0,
	-1, 88,
	232, 1329,
	246, 1329,
	262, 412,
	392, 412,
	403, 1083,
	442, 412,
	455, 1083,
	502, 1083,
	529, 412,
	555, 1083,
	-2, 0,
	-1, 94,
	133, 1593,
	239, 1593,
	540, 1593,
	541, 1593,
	-2, 0,
	-1, 112,
	151, 1564,
	170, 1564,
	183, 1564,
	242, 1564,
	275, 1564,
	343, 1564,
	353, 1564,
	535, 1564,
	-2, 1535,
	-1, 153,
	159, 923,
	261, 923,
	395, 884,
	460, 884,
	501, 884,
	521, 923,
	523, 884,
	-2, 0,
	-1, 157,
	4, 1595,
	21, 1595,
	22, 1595,
	23, 1595,
	24, 1595,
	25, 1595,
	26, 1595,
	27, 1595,
	29, 1595,
	30, 1595,
	36, 1595,
	41, 1595,
	42, 1595,
	44, 1595,
	45, 1595,
	46, 1595,
	47, 1595,
	48, 1595,
	49, 1595,
	50, 1595,
	51, 1595,
	53, 1595,
	54, 1595,
	55, 1595,
	56, 1595,
	58, 1595,
	59, 1595,
	60, 1595,
	61, 1595,
	62, 1595,
	63, 1595,
	64, 1595,
	68, 1595,
	69, 1595,
	70, 1595,
	71, 1595,
	73, 1595,
	74, 1595,
	75, 1595,
	79, 1595,
	80, 1595,
	81, 1595,
	82, 1595,
	83, 1595,
	84, 1595,
	85, 1595,
	88, 1595,
	89, 1595,
	90, 1595,
	91, 1595,
	92, 1595,
	94, 1595,
	96, 1595,
	97, 1595,
	98, 1595,
	99, 1595,
	100, 1595,
	101, 1595,
	103, 1595,
	104, 1595,
	105, 1595,
	107, 1595,
	108, 1595,
	109, 1595,
	117, 1595,
	118, 1595,
	119, 1595,
	120, 1595,
	121, 1595,
	123, 1595,
	124, 1595,
	125, 1595,
	126, 1595,
	128, 1595,
	129, 1595,
	130, 1595,
	132, 1595,
	133, 1595,
	134, 1595,
	136, 1595,
	137, 1595,
	138, 1595,
	141, 1595,
	142, 1595,
	143, 1595,
	145, 1595,
	146, 1595,
	148, 1595,
	149, 1595,
	150, 1595,
	152, 1595,
	153, 1595,
	154, 1595,
	155, 1595,
	156, 1595,
	157, 1595,
	158, 1595,
	159, 1595,
	160, 1595,
	161, 1595,
	162, 1595,
	163, 1595,
	164, 1595,
	165, 1595,
	166, 1595,
	167, 1595,
	169, 1595,
	175, 1595,
	176, 1595,
	177, 1595,
	178, 1595,
	182, 1595,
	184, 1595,
	185, 1595,
	186, 1595,
	190, 1595,
	191, 1595,
	192, 1595,
	193, 1595,
	194, 1595,
	195, 1595,
	196, 1595,
	197, 1595,
	198, 1595,
	199, 1595,
	200, 1595,
	201, 1595,
	202, 1595,
	203, 1595,
	205, 1595,
	206, 1595,
	208, 1595,
	209, 1595,
	211, 1595,
	212, 1595,
	213, 1595,
	214, 1595,
	215, 1595,
	216, 1595,
	217, 1595,
	218, 1595,
	219, 1595,
	221, 1595,
	222, 1595,
	224, 1595,
	225, 1595,
	226, 1595,
	227, 1595,
	228, 1595,
	232, 1595,
	233, 1595,
	234, 1595,
	235, 1595,
	236, 1595,
	239, 1595,
	240, 1595,
	241, 1595,
	243, 1595,
	245, 1595,
	246, 1595,
	248, 1595,
	250, 1595,
	251, 1595,
	252, 1595,
	254, 1595,
	258, 1595,
	259, 1595,
	260, 1595,
	261, 1595,
	262, 1595,
	263, 1595,
	265, 1595,
	266, 1595,
	267, 1595,
	269, 1595,
	270, 1595,
	272, 1595,
	273, 1595,
	276, 1595,
	277, 1595,
	278, 1595,
	279, 1595,
	280, 1595,
	281, 1595,
	282, 1595,
	285, 1595,
	286, 1595,
	287, 1595,
	288, 1595,
	290, 1595,
	291, 1595,
	292, 1595,
	293, 1595,
	294, 1595,
	295, 1595,
	296, 1595,
	297, 1595,
	298, 1595,
	299, 1595,
	300, 1595,
	301, 1595,
	302, 1595,
	303, 1595,
	304, 1595,
	305, 1595,
	306, 1595,
	307, 1595,
	308, 1595,
	309, 1595,
	310, 1595,
	311, 1595,
	313, 1595,
	315, 1595,
	316, 1595,
	317, 1595,
	318, 1595,
	319, 1595,
	320, 1595,
	321, 1595,
	322, 1595,
	323, 1595,
	324, 1595,
	325, 1595,
	326, 1595,
	327, 1595,
	328, 1595,
	330, 1595,
	331, 1595,
	333, 1595,
	335, 1595,
	336, 1595,
	338, 1595,
	339, 1595,
	340, 1595,
	341, 1595,
	342, 1595,
	345, 1595,
	348, 1595,
	349, 1595,
	350, 1595,
	351, 1595,
	354, 1595,
	355, 1595,
	356, 1595,
	358, 1595,
	360, 1595,
	361, 1595,
	362, 1595,
	363, 1595,
	364, 1595,
	365, 1595,
	366, 1595,
	367, 1595,
	368, 1595,
	369, 1595,
	370, 1595,
	371, 1595,
	372, 1595,
	374, 1595,
	375, 1595,
	376, 1595,
	377, 1595,
	378, 1595,
	379, 1595,
	380, 1595,
	381, 1595,
	382, 1595,
	383, 1595,
	384, 1595,
	385, 1595,
	386, 1595,
	387, 1595,
	388, 1595,
	390, 1595,
	391, 1595,
	393, 1595,
	394, 1595,
	395, 1595,
	396, 1595,
	397, 1595,
	398, 1595,
	399, 1595,
	400, 1595,
	401, 1595,
	402, 1595,
	403, 1595,
	404, 1595,
	405, 1595,
	407, 1595,
	409, 1595,
	410, 1595,
	411, 1595,
	417, 1595,
	419, 1595,
	420, 1595,
	421, 1595,
	422, 1595,
	423, 1595,
	424, 1595,
	425, 1595,
	426, 1595,
	427, 1595,
	428, 1595,
	430, 1595,
	431, 1595,
	432, 1595,
	434, 1595,
	435, 1595,
	436, 1595,
	437, 1595,
	438, 1595,
	439, 1595,
	440, 1595,
	442, 1595,
	443, 1595,
	444, 1595,
	445, 1595,
	446, 1595,
	447, 1595,
	448, 1595,
	449, 1595,
	450, 1595,
	451, 1595,
	452, 1595,
	453, 1595,
	455, 1595,
	456, 1595,
	457, 1595,
	458, 1595,
	459, 1595,
	460, 1595,
	462, 1595,
	463, 1595,
	464, 1595,
	465, 1595,
	466, 1595,
	467, 1595,
	469, 1595,
	470, 1595,
	471, 1595,
	472, 1595,
	473, 1595,
	474, 1595,
	475, 1595,
	476, 1595,
	478, 1595,
	480, 1595,
	481, 1595,
	482, 1595,
	483, 1595,
	484, 1595,
	485, 1595,
	486, 1595,
	487, 1595,
	488, 1595,
	489, 1595,
	490, 1595,
	491, 1595,
	492, 1595,
	493, 1595,
	494, 1595,
	495, 1595,
	497, 1595,
	498, 1595,
	500, 1595,
	501, 1595,
	503, 1595,
	504, 1595,
	505, 1595,
	506, 1595,
	507, 1595,
	508, 1595,
	509, 1595,
	510, 1595,
	511, 1595,
	513, 1595,
	514, 1595,
	515, 1595,
	516, 1595,
	517, 1595,
	519, 1595,
	521, 1595,
	522, 1595,
	523, 1595,
	524, 1595,
	525, 1595,
	526, 1595,
	528, 1595,
	529, 1595,
	530, 1595,
	531, 1595,
	533, 1595,
	534, 1595,
	537, 1595,
	538, 1595,
	539, 1595,
	540, 1595,
	541, 1595,
	542, 1595,
	543, 1595,
	545, 1595,
	548, 1595,
	549, 1595,
	550, 1595,
	551, 1595,
	552, 1595,
	553, 1595,
	555, 1595,
	556, 1595,
	557, 1595,
	558, 1595,
	559, 1595,
	560, 1595,
	565, 1595,
	566, 1595,
	567, 1595,
	568, 1595,
	569, 1595,
	570, 1595,
	-2, 0,
	-1, 158,
	1, 1446,
	131, 1446,
	250, 1446,
	332, 1446,
	390, 1446,
	399, 1446,
	574, 1446,
	603, 1446,
	-2, 0,
	-1, 160,
	1, 1446,
	603, 1446,
	-2, 0,
	-1, 161,
	1, 1446,
	603, 1446,
	-2, 0,
	-1, 162,
	1, 1446,
	518, 1446,
	603, 1446,
	-2, 0,
	-1, 191,
	151, 1563,
	170, 1563,
	183, 1563,
	242, 1563,
	275, 1563,
	343, 1563,
	353, 1563,
	535, 1563,
	-2, 1538,
	-1, 239,
	4, 1602,
	5, 1602,
	6, 1602,
	7, 1602,
	8, 1602,
	9, 1602,
	10, 1602,
	21, 1602,
	22, 1602,
	23, 1602,
	24, 1602,
	25, 1602,
	26, 1602,
	27, 1602,
	29, 1602,
	30, 1602,
	36, 1602,
	37, 1602,
	41, 1602,
	42, 1602,
	43, 1602,
	44, 1602,
	45, 1602,
	46, 1602,
	47, 1602,
	48, 1602,
	49, 1602,
	50, 1602,
	51, 1602,
	53, 1602,
	54, 1602,
	55, 1602,
	56, 1602,
	58, 1602,
	59, 1602,
	60, 1602,
	61, 1602,
	62, 1602,
	63, 1602,
	64, 1602,
	65, 1602,
	66, 1602,
	67, 1602,
	68, 1602,
	69, 1602,
	70, 1602,
	71, 1602,
	73, 1602,
	74, 1602,
	75, 1602,
	77, 1602,
	79, 1602,
	80, 1602,
	81, 1602,
	82, 1602,
	83, 1602,
	84, 1602,
	85, 1602,
	88, 1602,
	89, 1602,
	90, 1602,
	91, 1602,
	92, 1602,
	94, 1602,
	96, 1602,
	97, 1602,
	98, 1602,
	99, 1602,
	100, 1602,
	101, 1602,
	103, 1602,
	104, 1602,
	105, 1602,
	106, 1602,
	107, 1602,
	108, 1602,
	109, 1602,
	110, 1602,
	111, 1602,
	112, 1602,
	113, 1602,
	114, 1602,
	115, 1602,
	116, 1602,
	117, 1602,
	118, 1602,
	119, 1602,
	120, 1602,
	121, 1602,
	122, 1602,
	123, 1602,
	124, 1602,
	125, 1602,
	126, 1602,
	127, 1602,
	128, 1602,
	129, 1602,
	130, 1602,
	132, 1602,
	133, 1602,
	134, 1602,
	136, 1602,
	137, 1602,
	138, 1602,
	141, 1602,
	142, 1602,
	143, 1602,
	145, 1602,
	146, 1602,
	148, 1602,
	149, 1602,
	150, 1602,
	152, 1602,
	153, 1602,
	154, 1602,
	155, 1602,
	156, 1602,
	157, 1602,
	158, 1602,
	159, 1602,
	160, 1602,
	161, 1602,
	162, 1602,
	163, 1602,
	164, 1602,
	165, 1602,
	166, 1602,
	167, 1602,
	168, 1602,
	169, 1602,
	175, 1602,
	176, 1602,
	177, 1602,
	178, 1602,
	182, 1602,
	184, 1602,
	185, 1602,
	186, 1602,
	189, 1602,
	190, 1602,
	191, 1602,
	192, 1602,
	193, 1602,
	194, 1602,
	195, 1602,
	196, 1602,
	197, 1602,
	198, 1602,
	199, 1602,
	200, 1602,
	201, 1602,
	202, 1602,
	203, 1602,
	205, 1602,
	206, 1602,
	208, 1602,
	209, 1602,
	211, 1602,
	212, 1602,
	213, 1602,
	214, 1602,
	215, 1602,
	216, 1602,
	217, 1602,
	218, 1602,
	219, 1602,
	220, 1602,
	221, 1602,
	222, 1602,
	224, 1602,
	225, 1602,
	226, 1602,
	227, 1602,
	228, 1602,
	232, 1602,
	233, 1602,
	234, 1602,
	235, 1602,
	236, 1602,
	238, 1602,
	239, 1602,
	240, 1602,
	241, 1602,
	243, 1602,
	245, 1602,
	246, 1602,
	247, 1602,
	248, 1602,
	249, 1602,
	250, 1602,
	251, 1602,
	252, 1602,
	253, 1602,
	254, 1602,
	258, 1602,
	259, 1602,
	260, 1602,
	261, 1602,
	262, 1602,
	263, 1602,
	265, 1602,
	266, 1602,
	267, 1602,
	269, 1602,
	270, 1602,
	271, 1602,
	272, 1602,
	273, 1602,
	274, 1602,
	276, 1602,
	277, 1602,
	278, 1602,
	279, 1602,
	280, 1602,
	281, 1602,
	282, 1602,
	283, 1602,
	284, 1602,
	285, 1602,
	286, 1602,
	287, 1602,
	288, 1602,
	290, 1602,
	291, 1602,
	292, 1602,
	293, 1602,
	294, 1602,
	295, 1602,
	296, 1602,
	297, 1602,
	298, 1602,
	299, 1602,
	300, 1602,
	301, 1602,
	302, 1602,
	303, 1602,
	304, 1602,
	305, 1602,
	306, 1602,
	307, 1602,
	308, 1602,
	309, 1602,
	310, 1602,
	311, 1602,
	313, 1602,
	314, 1602,
	315, 1602,
	316, 1602,
	317, 1602,
	318, 1602,
	319, 1602,
	320, 1602,
	321, 1602,
	322, 1602,
	323, 1602,
	324, 1602,
	325, 1602,
	326, 1602,
	327, 1602,
	328, 1602,
	329, 1602,
	330, 1602,
	331, 1602,
	332, 1602,
	333, 1602,
	334, 1602,
	335, 1602,
	336, 1602,
	337, 1602,
	338, 1602,
	339, 1602,
	340, 1602,
	341, 1602,
	342, 1602,
	345, 1602,
	349, 1602,
	350, 1602,
	351, 1602,
	354, 1602,
	355, 1602,
	356, 1602,
	357, 1602,
	358, 1602,
	359, 1602,
	360, 1602,
	361, 1602,
	362, 1602,
	363, 1602,
	364, 1602,
	365, 1602,
	366, 1602,
	367, 1602,
	368, 1602,
	369, 1602,
	370, 1602,
	371, 1602,
	372, 1602,
	374, 1602,
	375, 1602,
	376, 1602,
	377, 1602,
	378, 1602,
	379, 1602,
	380, 1602,
	381, 1602,
	382, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	386, 1602,
	387, 1602,
	388, 1602,
	390, 1602,
	391, 1602,
	393, 1602,
	394, 1602,
	395, 1602,
	396, 1602,
	397, 1602,
	398, 1602,
	399, 1602,
	400, 1602,
	401, 1602,
	402, 1602,
	403, 1602,
	404, 1602,
	405, 1602,
	407, 1602,
	409, 1602,
	410, 1602,
	411, 1602,
	417, 1602,
	419, 1602,
	420, 1602,
	421, 1602,
	422, 1602,
	423, 1602,
	424, 1602,
	425, 1602,
	426, 1602,
	427, 1602,
	428, 1602,
	430, 1602,
	431, 1602,
	432, 1602,
	433, 1602,
	434, 1602,
	435, 1602,
	436, 1602,
	437, 1602,
	438, 1602,
	439, 1602,
	440, 1602,
	442, 1602,
	443, 1602,
	444, 1602,
	445, 1602,
	446, 1602,
	447, 1602,
	448, 1602,
	449, 1602,
	450, 1602,
	451, 1602,
	452, 1602,
	453, 1602,
	455, 1602,
	456, 1602,
	457, 1602,
	458, 1602,
	459, 1602,
	460, 1602,
	461, 1602,
	462, 1602,
	463, 1602,
	464, 1602,
	465, 1602,
	466, 1602,
	467, 1602,
	468, 1602,
	469, 1602,
	470, 1602,
	471, 1602,
	472, 1602,
	473, 1602,
	474, 1602,
	475, 1602,
	476, 1602,
	478, 1602,
	480, 1602,
	481, 1602,
	482, 1602,
	483, 1602,
	484, 1602,
	485, 1602,
	486, 1602,
	487, 1602,
	488, 1602,
	489, 1602,
	490, 1602,
	491, 1602,
	492, 1602,
	493, 1602,
	494, 1602,
	495, 1602,
	497, 1602,
	498, 1602,
	499, 1602,
	500, 1602,
	501, 1602,
	503, 1602,
	504, 1602,
	505, 1602,
	506, 1602,
	507, 1602,
	508, 1602,
	509, 1602,
	510, 1602,
	511, 1602,
	513, 1602,
	514, 1602,
	515, 1602,
	516, 1602,
	517, 1602,
	519, 1602,
	521, 1602,
	522, 1602,
	523, 1602,
	524, 1602,
	525, 1602,
	526, 1602,
	527, 1602,
	528, 1602,
	529, 1602,
	530, 1602,
	531, 1602,
	533, 1602,
	534, 1602,
	536, 1602,
	537, 1602,
	538, 1602,
	539, 1602,
	540, 1602,
	541, 1602,
	542, 1602,
	543, 1602,
	544, 1602,
	545, 1602,
	548, 1602,
	549, 1602,
	550, 1602,
	551, 1602,
	552, 1602,
	553, 1602,
	555, 1602,
	556, 1602,
	557, 1602,
	558, 1602,
	559, 1602,
	560, 1602,
	565, 1602,
	566, 1602,
	567, 1602,
	568, 1602,
	569, 1602,
	570, 1602,
	571, 1602,
	584, 1602,
	591, 1602,
	592, 1602,
	593, 1602,
	600, 1602,
	604, 1602,
	-2, 0,
	-1, 751,
	4, 1327,
	21, 1327,
	22, 1327,
	23, 1327,
	24, 1327,
	25, 1327,
	26, 1327,
	27, 1327,
	29, 1327,
	30, 1327,
	36, 1327,
	41, 1327,
	42, 1327,
	44, 1327,
	45, 1327,
	46, 1327,
	47, 1327,
	48, 1327,
	49, 1327,
	50, 1327,
	51, 1327,
	53, 1327,
	54, 1327,
	55, 1327,
	56, 1327,
	58, 1327,
	59, 1327,
	60, 1327,
	61, 1327,
	62, 1327,
	63, 1327,
	64, 1327,
	68, 1327,
	69, 1327,
	70, 1327,
	71, 1327,
	73, 1327,
	74, 1327,
	75, 1327,
	79, 1327,
	80, 1327,
	81, 1327,
	82, 1327,
	83, 1327,
	84, 1327,
	85, 1327,
	88, 1327,
	89, 1327,
	90, 1327,
	91, 1327,
	92, 1327,
	94, 1327,
	96, 1327,
	97, 1327,
	98, 1327,
	99, 1327,
	100, 1327,
	101, 1327,
	103, 1327,
	104, 1327,
	105, 1327,
	107, 1327,
	108, 1327,
	109, 1327,
	117, 1327,
	118, 1327,
	119, 1327,
	120, 1327,
	121, 1327,
	123, 1327,
	124, 1327,
	125, 1327,
	126, 1327,
	128, 1327,
	129, 1327,
	130, 1327,
	132, 1327,
	133, 1327,
	134, 1327,
	136, 1327,
	137, 1327,
	138, 1327,
	141, 1327,
	142, 1327,
	143, 1327,
	145, 1327,
	146, 1327,
	148, 1327,
	149, 1327,
	150, 1327,
	152, 1327,
	153, 1327,
	154, 1327,
	155, 1327,
	156, 1327,
	157, 1327,
	158, 1327,
	159, 1327,
	160, 1327,
	161, 1327,
	162, 1327,
	163, 1327,
	164, 1327,
	165, 1327,
	166, 1327,
	167, 1327,
	169, 1327,
	175, 1327,
	176, 1327,
	177, 1327,
	178, 1327,
	182, 1327,
	184, 1327,
	185, 1327,
	186, 1327,
	190, 1327,
	191, 1327,
	192, 1327,
	193, 1327,
	194, 1327,
	195, 1327,
	196, 1327,
	197, 1327,
	198, 1327,
	199, 1327,
	200, 1327,
	201, 1327,
	202, 1327,
	203, 1327,
	205, 1327,
	206, 1327,
	208, 1327,
	209, 1327,
	211, 1327,
	212, 1327,
	213, 1327,
	214, 1327,
	215, 1327,
	216, 1327,
	217, 1327,
	218, 1327,
	219, 1327,
	221, 1327,
	222, 1327,
	224, 1327,
	225, 1327,
	226, 1327,
	227, 1327,
	228, 1327,
	232, 1327,
	233, 1327,
	234, 1327,
	235, 1327,
	236, 1327,
	239, 1327,
	240, 1327,
	241, 1327,
	243, 1327,
	245, 1327,
	246, 1327,
	248, 1327,
	250, 1327,
	251, 1327,
	252, 1327,
	254, 1327,
	258, 1327,
	259, 1327,
	260, 1327,
	261, 1327,
	262, 1327,
	263, 1327,
	265, 1327,
	266, 1327,
	267, 1327,
	269, 1327,
	270, 1327,
	272, 1327,
	273, 1327,
	276, 1327,
	277, 1327,
	278, 1327,
	279, 1327,
	280, 1327,
	281, 1327,
	282, 1327,
	285, 1327,
	286, 1327,
	287, 1327,
	288, 1327,
	290, 1327,
	291, 1327,
	292, 1327,
	293, 1327,
	294, 1327,
	295, 1327,
	296, 1327,
	297, 1327,
	298, 1327,
	299, 1327,
	300, 1327,
	301, 1327,
	302, 1327,
	303, 1327,
	304, 1327,
	305, 1327,
	306, 1327,
	307, 1327,
	308, 1327,
	309, 1327,
	310, 1327,
	311, 1327,
	313, 1327,
	315, 1327,
	316, 1327,
	317, 1327,
	318, 1327,
	319, 1327,
	320, 1327,
	321, 1327,
	322, 1327,
	323, 1327,
	324, 1327,
	325, 1327,
	326, 1327,
	327, 1327,
	328, 1327,
	330, 1327,
	331, 1327,
	333, 1327,
	335, 1327,
	336, 1327,
	338, 1327,
	339, 1327,
	340, 1327,
	341, 1327,
	342, 1327,
	345, 1327,
	349, 1327,
	350, 1327,
	351, 1327,
	354, 1327,
	355, 1327,
	356, 1327,
	358, 1327,
	360, 1327,
	361, 1327,
	362, 1327,
	363, 1327,
	364, 1327,
	365, 1327,
	366, 1327,
	367, 1327,
	368, 1327,
	369, 1327,
	370, 1327,
	371, 1327,
	372, 1327,
	374, 1327,
	375, 1327,
	376, 1327,
	377, 1327,
	378, 1327,
	379, 1327,
	380, 1327,
	381, 1327,
	382, 1327,
	383, 1327,
	384, 1327,
	385, 1327,
	386, 1327,
	387, 1327,
	388, 1327,
	390, 1327,
	391, 1327,
	393, 1327,
	394, 1327,
	395, 1327,
	396, 1327,
	397, 1327,
	398, 1327,
	399, 1327,
	400, 1327,
	401, 1327,
	402, 1327,
	403, 1327,
	404, 1327,
	405, 1327,
	407, 1327,
	409, 1327,
	410, 1327,
	411, 1327,
	417, 1327,
	419, 1327,
	420, 1327,
	421, 1327,
	422, 1327,
	423, 1327,
	424, 1327,
	425, 1327,
	426, 1327,
	427, 1327,
	428, 1327,
	430, 1327,
	431, 1327,
	432, 1327,
	434, 1327,
	435, 1327,
	436, 1327,
	437, 1327,
	438, 1327,
	439, 1327,
	440, 1327,
	442, 1327,
	443, 1327,
	444, 1327,
	445, 1327,
	446, 1327,
	447, 1327,
	448, 1327,
	449, 1327,
	450, 1327,
	451, 1327,
	452, 1327,
	453, 1327,
	455, 1327,
	456, 1327,
	457, 1327,
	458, 1327,
	459, 1327,
	460, 1327,
	462, 1327,
	463, 1327,
	464, 1327,
	465, 1327,
	466, 1327,
	467, 1327,
	469, 1327,
	470, 1327,
	471, 1327,
	472, 1327,
	473, 1327,
	474, 1327,
	475, 1327,
	476, 1327,
	478, 1327,
	480, 1327,
	481, 1327,
	482, 1327,
	483, 1327,
	484, 1327,
	485, 1327,
	486, 1327,
	487, 1327,
	488, 1327,
	489, 1327,
	490, 1327,
	491, 1327,
	492, 1327,
	493, 1327,
	494, 1327,
	495, 1327,
	497, 1327,
	498, 1327,
	500, 1327,
	501, 1327,
	503, 1327,
	504, 1327,
	505, 1327,
	506, 1327,
	507, 1327,
	508, 1327,
	509, 1327,
	510, 1327,
	511, 1327,
	513, 1327,
	514, 1327,
	515, 1327,
	516, 1327,
	517, 1327,
	519, 1327,
	521, 1327,
	522, 1327,
	523, 1327,
	524, 1327,
	525, 1327,
	526, 1327,
	528, 1327,
	529, 1327,
	530, 1327,
	531, 1327,
	533, 1327,
	534, 1327,
	537, 1327,
	538, 1327,
	539, 1327,
	540, 1327,
	541, 1327,
	542, 1327,
	543, 1327,
	545, 1327,
	548, 1327,
	549, 1327,
	550, 1327,
	551, 1327,
	552, 1327,
	553, 1327,
	555, 1327,
	556, 1327,
	557, 1327,
	558, 1327,
	559, 1327,
	560, 1327,
	565, 1327,
	566, 1327,
	567, 1327,
	568, 1327,
	569, 1327,
	570, 1327,
	-2, 0,
	-1, 770,
	188, 2393,
	518, 2393,
	583, 2393,
	602, 2393,
	-2, 0,
	-1, 771,
	188, 2380,
	518, 2380,
	583, 2380,
	602, 2380,
	-2, 0,
	-1, 773,
	188, 2643,
	518, 2643,
	583, 2643,
	602, 2643,
	-2, 0,
	-1, 776,
	188, 2505,
	518, 2505,
	583, 2505,
	602, 2505,
	-2, 0,
	-1, 777,
	188, 2684,
	518, 2684,
	583, 2684,
	602, 2684,
	-2, 0,
	-1, 785,
	188, 2532,
	518, 2532,
	583, 2532,
	602, 2532,
	-2, 710,
	-1, 820,
	602, 2329,
	605, 2329,
	-2, 1004,
	-1, 821,
	602, 2331,
	605, 2331,
	-2, 1005,
	-1, 822,
	602, 2330,
	605, 2330,
	-2, 1006,
	-1, 823,
	605, 2255,
	-2, 1007,
	-1, 848,
	183, 264,
	-2, 0,
	-1, 872,
	43, 2302,
	-2, 0,
	-1, 873,
	555, 1305,
	-2, 1084,
	-1, 889,
	4, 1735,
	21, 1735,
	22, 1735,
	23, 1735,
	24, 1735,
	25, 1735,
	26, 1735,
	27, 1735,
	29, 1735,
	30, 1735,
	36, 1735,
	41, 1735,
	42, 1735,
	44, 1735,
	45, 1735,
	46, 1735,
	47, 1735,
	48, 1735,
	49, 1735,
	50, 1735,
	51, 1735,
	53, 1735,
	54, 1735,
	55, 1735,
	56, 1735,
	58, 1735,
	59, 1735,
	60, 1735,
	61, 1735,
	62, 1735,
	63, 1735,
	64, 1735,
	68, 1735,
	69, 1735,
	70, 1735,
	71, 1735,
	73, 1735,
	74, 1735,
	75, 1735,
	79, 1735,
	80, 1735,
	81, 1735,
	82, 1735,
	83, 1735,
	84, 1735,
	85, 1735,
	88, 1735,
	89, 1735,
	90, 1735,
	91, 1735,
	92, 1735,
	94, 1735,
	96, 1735,
	97, 1735,
	98, 1735,
	99, 1735,
	100, 1735,
	101, 1735,
	103, 1735,
	104, 1735,
	105, 1735,
	107, 1735,
	108, 1735,
	109, 1735,
	117, 1735,
	118, 1735,
	119, 1735,
	120, 1735,
	121, 1735,
	123, 1735,
	124, 1735,
	125, 1735,
	126, 1735,
	128, 1735,
	129, 1735,
	130, 1735,
	132, 1735,
	133, 1735,
	134, 1735,
	136, 1735,
	137, 1735,
	138, 1735,
	141, 1735,
	142, 1735,
	143, 1735,
	145, 1735,
	146, 1735,
	148, 1735,
	149, 1735,
	150, 1735,
	152, 1735,
	153, 1735,
	154, 1735,
	155, 1735,
	156, 1735,
	157, 1735,
	158, 1735,
	159, 1735,
	160, 1735,
	161, 1735,
	162, 1735,
	163, 1735,
	164, 1735,
	165, 1735,
	166, 1735,
	167, 1735,
	169, 1735,
	175, 1735,
	176, 1735,
	177, 1735,
	178, 1735,
	182, 1735,
	184, 1735,
	185, 1735,
	186, 1735,
	190, 1735,
	191, 1735,
	192, 1735,
	193, 1735,
	194, 1735,
	195, 1735,
	196, 1735,
	197, 1735,
	198, 1735,
	199, 1735,
	200, 1735,
	201, 1735,
	202, 1735,
	203, 1735,
	205, 1735,
	206, 1735,
	208, 1735,
	209, 1735,
	211, 1735,
	212, 1735,
	213, 1735,
	214, 1735,
	215, 1735,
	216, 1735,
	217, 1735,
	218, 1735,
	219, 1735,
	221, 1735,
	222, 1735,
	224, 1735,
	225, 1735,
	226, 1735,
	227, 1735,
	228, 1735,
	232, 1735,
	233, 1735,
	234, 1735,
	235, 1735,
	236, 1735,
	239, 1735,
	240, 1735,
	241, 1735,
	243, 1735,
	245, 1735,
	246, 1735,
	248, 1735,
	250, 1735,
	251, 1735,
	252, 1735,
	254, 1735,
	258, 1735,
	259, 1735,
	260, 1735,
	261, 1735,
	262, 1735,
	263, 1735,
	265, 1735,
	266, 1735,
	267, 1735,
	269, 1735,
	270, 1735,
	272, 1735,
	273, 1735,
	276, 1735,
	277, 1735,
	278, 1735,
	279, 1735,
	280, 1735,
	281, 1735,
	282, 1735,
	285, 1735,
	286, 1735,
	287, 1735,
	288, 1735,
	290, 1735,
	291, 1735,
	292, 1735,
	293, 1735,
	294, 1735,
	295, 1735,
	296, 1735,
	297, 1735,
	298, 1735,
	299, 1735,
	300, 1735,
	301, 1735,
	302, 1735,
	303, 1735,
	304, 1735,
	305, 1735,
	306, 1735,
	307, 1735,
	308, 1735,
	309, 1735,
	310, 1735,
	311, 1735,
	313, 1735,
	315, 1735,
	316, 1735,
	317, 1735,
	318, 1735,
	319, 1735,
	320, 1735,
	321, 1735,
	322, 1735,
	323, 1735,
	324, 1735,
	325, 1735,
	326, 1735,
	327, 1735,
	328, 1735,
	330, 1735,
	331, 1735,
	333, 1735,
	335, 1735,
	336, 1735,
	338, 1735,
	339, 1735,
	340, 1735,
	341, 1735,
	342, 1735,
	345, 1735,
	349, 1735,
	350, 1735,
	351, 1735,
	354, 1735,
	355, 1735,
	356, 1735,
	358, 1735,
	360, 1735,
	361, 1735,
	362, 1735,
	363, 1735,
	364, 1735,
	365, 1735,
	366, 1735,
	367, 1735,
	368, 1735,
	369, 1735,
	370, 1735,
	371, 1735,
	372, 1735,
	374, 1735,
	375, 1735,
	376, 1735,
	377, 1735,
	378, 1735,
	379, 1735,
	380, 1735,
	381, 1735,
	382, 1735,
	383, 1735,
	384, 1735,
	385, 1735,
	386, 1735,
	387, 1735,
	388, 1735,
	390, 1735,
	391, 1735,
	393, 1735,
	394, 1735,
	395, 1735,
	396, 1735,
	397, 1735,
	398, 1735,
	399, 1735,
	400, 1735,
	401, 1735,
	402, 1735,
	403, 1735,
	404, 1735,
	405, 1735,
	407, 1735,
	409, 1735,
	410, 1735,
	411, 1735,
	417, 1735,
	419, 1735,
	420, 1735,
	421, 1735,
	422, 1735,
	423, 1735,
	424, 1735,
	425, 1735,
	426, 1735,
	427, 1735,
	428, 1735,
	430, 1735,
	431, 1735,
	432, 1735,
	434, 1735,
	435, 1735,
	436, 1735,
	437, 1735,
	438, 1735,
	439, 1735,
	440, 1735,
	442, 1735,
	443, 1735,
	444, 1735,
	445, 1735,
	446, 1735,
	447, 1735,
	448, 1735,
	449, 1735,
	450, 1735,
	451, 1735,
	452, 1735,
	453, 1735,
	455, 1735,
	456, 1735,
	457, 1735,
	458, 1735,
	459, 1735,
	460, 1735,
	462, 1735,
	463, 1735,
	464, 1735,
	465, 1735,
	466, 1735,
	467, 1735,
	469, 1735,
	470, 1735,
	471, 1735,
	472, 1735,
	473, 1735,
	474, 1735,
	475, 1735,
	476, 1735,
	478, 1735,
	480, 1735,
	481, 1735,
	482, 1735,
	483, 1735,
	484, 1735,
	485, 1735,
	486, 1735,
	487, 1735,
	488, 1735,
	489, 1735,
	490, 1735,
	491, 1735,
	492, 1735,
	493, 1735,
	494, 1735,
	495, 1735,
	497, 1735,
	498, 1735,
	500, 1735,
	501, 1735,
	503, 1735,
	504, 1735,
	505, 1735,
	506, 1735,
	507, 1735,
	508, 1735,
	509, 1735,
	510, 1735,
	511, 1735,
	513, 1735,
	514, 1735,
	515, 1735,
	516, 1735,
	517, 1735,
	519, 1735,
	521, 1735,
	522, 1735,
	523, 1735,
	524, 1735,
	525, 1735,
	526, 1735,
	528, 1735,
	529, 1735,
	530, 1735,
	531, 1735,
	533, 1735,
	534, 1735,
	537, 1735,
	538, 1735,
	539, 1735,
	540, 1735,
	541, 1735,
	542, 1735,
	543, 1735,
	545, 1735,
	548, 1735,
	549, 1735,
	550, 1735,
	551, 1735,
	552, 1735,
	553, 1735,
	555, 1735,
	556, 1735,
	557, 1735,
	558, 1735,
	559, 1735,
	560, 1735,
	565, 1735,
	566, 1735,
	567, 1735,
	568, 1735,
	569, 1735,
	570, 1735,
	-2, 0,
	-1, 899,
	262, 416,
	-2, 0,
	-1, 976,
	395, 885,
	460, 885,
	501, 885,
	523, 885,
	-2, 0,
	-1, 977,
	395, 884,
	460, 884,
	501, 884,
	523, 884,
	-2, 820,
	-1, 981,
	1, 937,
	599, 937,
	601, 937,
	603, 937,
	-2, 0,
	-1, 983,
	1, 859,
	599, 859,
	601, 859,
	603, 859,
	-2, 0,
	-1, 984,
	1, 863,
	599, 863,
	601, 863,
	603, 863,
	-2, 0,
	-1, 985,
	1, 1003,
	183, 1003,
	599, 1003,
	601, 1003,
	603, 1003,
	-2, 0,
	-1, 993,
	1, 890,
	599, 890,
	601, 890,
	603, 890,
	-2, 0,
	-1, 1000,
	1, 937,
	599, 937,
	601, 937,
	603, 937,
	-2, 0,
	-1, 1001,
	1, 939,
	599, 939,
	601, 939,
	603, 939,
	-2, 0,
	-1, 1002,
	1, 942,
	599, 942,
	601, 942,
	603, 942,
	-2, 0,
	-1, 1008,
	1, 967,
	599, 967,
	601, 967,
	603, 967,
	-2, 0,
	-1, 1009,
	1, 969,
	599, 969,
	601, 969,
	603, 969,
	-2, 0,
	-1, 1014,
	1, 997,
	599, 997,
	601, 997,
	603, 997,
	-2, 0,
	-1, 1064,
	170, 1606,
	183, 1606,
	275, 1606,
	343, 1606,
	-2, 1542,
	-1, 1079,
	170, 1605,
	183, 1605,
	275, 1605,
	343, 1605,
	-2, 1539,
	-1, 1106,
	602, 2328,
	-2, 718,
	-1, 1135,
	5, 2320,
	600, 2318,
	-2, 2309,
	-1, 1143,
	5, 2341,
	600, 2338,
	-2, 2329,
	-1, 1144,
	5, 2342,
	600, 2339,
	-2, 2330,
	-1, 1152,
	602, 2326,
	-2, 2308,
	-1, 1153,
	600, 2768,
	-2, 2327,
	-1, 1176,
	600, 2767,
	-2, 2343,
	-1, 1177,
	5, 1810,
	-2, 2738,
	-1, 1178,
	5, 1811,
	-2, 2739,
	-1, 1179,
	5, 1812,
	-2, 2753,
	-1, 1180,
	5, 1813,
	-2, 2717,
	-1, 1181,
	5, 1814,
	-2, 2751,
	-1, 1182,
	5, 1822,
	-2, 2730,
	-1, 1183,
	5, 1809,
	-2, 2726,
	-1, 1184,
	5, 1809,
	-2, 2725,
	-1, 1185,
	5, 1809,
	-2, 2744,
	-1, 1186,
	5, 1820,
	-2, 2719,
	-1, 1187,
	5, 1825,
	-2, 2718,
	-1, 1188,
	5, 1827,
	-2, 2763,
	-1, 1191,
	5, 1849,
	-2, 2756,
	-1, 1192,
	5, 1841,
	-2, 2757,
	-1, 1193,
	5, 1849,
	-2, 2758,
	-1, 1194,
	5, 1845,
	-2, 2759,
	-1, 1195,
	5, 1795,
	-2, 2731,
	-1, 1196,
	5, 1796,
	-2, 2732,
	-1, 1197,
	5, 1797,
	-2, 2720,
	-1, 1225,
	5, 1832,
	-2, 2764,
	-1, 1226,
	5, 1833,
	-2, 2754,
	-1, 1227,
	5, 1834,
	556, 1834,
	-2, 2721,
	-1, 1228,
	5, 1835,
	556, 1835,
	-2, 2722,
	-1, 1265,
	600, 2338,
	-2, 2329,
	-1, 1266,
	600, 2339,
	-2, 2330,
	-1, 1368,
	188, 2684,
	518, 2684,
	583, 2684,
	602, 2684,
	-2, 0,
	-1, 1373,
	1, 695,
	603, 695,
	-2, 1454,
	-1, 1501,
	362, 2303,
	419, 2303,
	462, 2303,
	593, 2303,
	-2, 2293,
	-1, 1512,
	604, 2303,
	-2, 2305,
	-1, 1520,
	1, 1302,
	424, 1266,
	462, 1266,
	577, 1266,
	599, 1302,
	601, 1302,
	603, 1302,
	-2, 1591,
	-1, 1526,
	204, 1399,
	223, 1399,
	432, 1399,
	-2, 0,
	-1, 1574,
	403, 1083,
	555, 1083,
	-2, 411,
	-1, 1591,
	43, 2301,
	-2, 1049,
	-1, 1598,
	1, 1302,
	599, 1302,
	601, 1302,
	603, 1302,
	-2, 1591,
	-1, 1606,
	4, 1327,
	21, 1327,
	22, 1327,
	23, 1327,
	24, 1327,
	25, 1327,
	26, 1327,
	27, 1327,
	29, 1327,
	30, 1327,
	36, 1327,
	41, 1327,
	42, 1327,
	44, 1327,
	45, 1327,
	46, 1327,
	47, 1327,
	48, 1327,
	49, 1327,
	50, 1327,
	51, 1327,
	53, 1327,
	54, 1327,
	55, 1327,
	56, 1327,
	58, 1327,
	59, 1327,
	60, 1327,
	61, 1327,
	62, 1327,
	63, 1327,
	64, 1327,
	68, 1327,
	69, 1327,
	70, 1327,
	71, 1327,
	73, 1327,
	74, 1327,
	75, 1327,
	79, 1327,
	80, 1327,
	81, 1327,
	82, 1327,
	83, 1327,
	84, 1327,
	85, 1327,
	88, 1327,
	89, 1327,
	90, 1327,
	91, 1327,
	92, 1327,
	94, 1327,
	96, 1327,
	97, 1327,
	98, 1327,
	99, 1327,
	100, 1327,
	101, 1327,
	103, 1327,
	104, 1327,
	105, 1327,
	107, 1327,
	108, 1327,
	109, 1327,
	117, 1327,
	118, 1327,
	119, 1327,
	120, 1327,
	121, 1327,
	123, 1327,
	124, 1327,
	125, 1327,
	126, 1327,
	128, 1327,
	129, 1327,
	130, 1327,
	132, 1327,
	133, 1327,
	134, 1327,
	136, 1327,
	137, 1327,
	138, 1327,
	141, 1327,
	142, 1327,
	143, 1327,
	145, 1327,
	146, 1327,
	148, 1327,
	149, 1327,
	150, 1327,
	152, 1327,
	153, 1327,
	154, 1327,
	155, 1327,
	156, 1327,
	157, 1327,
	158, 1327,
	159, 1327,
	160, 1327,
	161, 1327,
	162, 1327,
	163, 1327,
	164, 1327,
	165, 1327,
	166, 1327,
	167, 1327,
	175, 1327,
	176, 1327,
	177, 1327,
	178, 1327,
	182, 1327,
	184, 1327,
	185, 1327,
	186, 1327,
	190, 1327,
	191, 1327,
	192, 1327,
	193, 1327,
	194, 1327,
	195, 1327,
	196, 1327,
	197, 1327,
	198, 1327,
	199, 1327,
	200, 1327,
	201, 1327,
	202, 1327,
	203, 1327,
	205, 1327,
	206, 1327,
	208, 1327,
	209, 1327,
	211, 1327,
	212, 1327,
	213, 1327,
	214, 1327,
	215, 1327,
	216, 1327,
	217, 1327,
	218, 1327,
	219, 1327,
	221, 1327,
	222, 1327,
	224, 1327,
	225, 1327,
	226, 1327,
	227, 1327,
	228, 1327,
	233, 1327,
	234, 1327,
	235, 1327,
	236, 1327,
	239, 1327,
	240, 1327,
	241, 1327,
	243, 1327,
	245, 1327,
	246, 1327,
	248, 1327,
	250, 1327,
	251, 1327,
	252, 1327,
	254, 1327,
	258, 1327,
	259, 1327,
	260, 1327,
	261, 1327,
	262, 1327,
	263, 1327,
	265, 1327,
	266, 1327,
	267, 1327,
	269, 1327,
	270, 1327,
	272, 1327,
	273, 1327,
	276, 1327,
	277, 1327,
	278, 1327,
	279, 1327,
	280, 1327,
	281, 1327,
	282, 1327,
	285, 1327,
	286, 1327,
	287, 1327,
	288, 1327,
	290, 1327,
	291, 1327,
	292, 1327,
	293, 1327,
	294, 1327,
	295, 1327,
	296, 1327,
	297, 1327,
	298, 1327,
	299, 1327,
	300, 1327,
	301, 1327,
	302, 1327,
	303, 1327,
	304, 1327,
	305, 1327,
	306, 1327,
	307, 1327,
	308, 1327,
	309, 1327,
	310, 1327,
	311, 1327,
	313, 1327,
	315, 1327,
	316, 1327,
	317, 1327,
	318, 1327,
	319, 1327,
	320, 1327,
	321, 1327,
	322, 1327,
	323, 1327,
	324, 1327,
	325, 1327,
	326, 1327,
	327, 1327,
	328, 1327,
	330, 1327,
	331, 1327,
	335, 1327,
	336, 1327,
	338, 1327,
	339, 1327,
	340, 1327,
	341, 1327,
	342, 1327,
	345, 1327,
	347, 1327,
	349, 1327,
	350, 1327,
	351, 1327,
	354, 1327,
	355, 1327,
	356, 1327,
	358, 1327,
	360, 1327,
	361, 1327,
	362, 1327,
	363, 1327,
	364, 1327,
	365, 1327,
	366, 1327,
	367, 1327,
	368, 1327,
	369, 1327,
	370, 1327,
	371, 1327,
	372, 1327,
	374, 1327,
	375, 1327,
	376, 1327,
	377, 1327,
	378, 1327,
	379, 1327,
	380, 1327,
	381, 1327,
	382, 1327,
	383, 1327,
	384, 1327,
	385, 1327,
	386, 1327,
	387, 1327,
	388, 1327,
	390, 1327,
	391, 1327,
	393, 1327,
	394, 1327,
	395, 1327,
	396, 1327,
	397, 1327,
	398, 1327,
	399, 1327,
	400, 1327,
	401, 1327,
	402, 1327,
	403, 1327,
	404, 1327,
	405, 1327,
	407, 1327,
	409, 1327,
	410, 1327,
	411, 1327,
	417, 1327,
	419, 1327,
	420, 1327,
	421, 1327,
	422, 1327,
	423, 1327,
	424, 1327,
	425, 1327,
	426, 1327,
	427, 1327,
	428, 1327,
	430, 1327,
	431, 1327,
	432, 1327,
	434, 1327,
	435, 1327,
	436, 1327,
	437, 1327,
	438, 1327,
	439, 1327,
	440, 1327,
	442, 1327,
	443, 1327,
	444, 1327,
	445, 1327,
	446, 1327,
	447, 1327,
	448, 1327,
	449, 1327,
	450, 1327,
	451, 1327,
	452, 1327,
	453, 1327,
	455, 1327,
	456, 1327,
	457, 1327,
	458, 1327,
	459, 1327,
	460, 1327,
	462, 1327,
	463, 1327,
	464, 1327,
	465, 1327,
	466, 1327,
	467, 1327,
	469, 1327,
	470, 1327,
	471, 1327,
	472, 1327,
	473, 1327,
	474, 1327,
	475, 1327,
	476, 1327,
	478, 1327,
	480, 1327,
	481, 1327,
	482, 1327,
	483, 1327,
	484, 1327,
	485, 1327,
	486, 1327,
	487, 1327,
	488, 1327,
	489, 1327,
	490, 1327,
	491, 1327,
	492, 1327,
	493, 1327,
	494, 1327,
	495, 1327,
	497, 1327,
	498, 1327,
	500, 1327,
	501, 1327,
	503, 1327,
	504, 1327,
	505, 1327,
	506, 1327,
	507, 1327,
	508, 1327,
	509, 1327,
	510, 1327,
	511, 1327,
	513, 1327,
	514, 1327,
	515, 1327,
	516, 1327,
	517, 1327,
	519, 1327,
	521, 1327,
	522, 1327,
	523, 1327,
	524, 1327,
	525, 1327,
	526, 1327,
	528, 1327,
	529, 1327,
	530, 1327,
	531, 1327,
	533, 1327,
	534, 1327,
	537, 1327,
	538, 1327,
	539, 1327,
	540, 1327,
	541, 1327,
	542, 1327,
	543, 1327,
	545, 1327,
	548, 1327,
	549, 1327,
	550, 1327,
	551, 1327,
	552, 1327,
	553, 1327,
	555, 1327,
	556, 1327,
	557, 1327,
	558, 1327,
	559, 1327,
	560, 1327,
	565, 1327,
	566, 1327,
	567, 1327,
	568, 1327,
	569, 1327,
	570, 1327,
	-2, 0,
	-1, 1629,
	1, 556,
	599, 556,
	601, 556,
	603, 556,
	-2, 1562,
	-1, 1632,
	4, 2762,
	11, 2762,
	12, 2762,
	14, 2762,
	15, 2762,
	16, 2762,
	17, 2762,
	18, 2762,
	19, 2762,
	21, 2762,
	22, 2762,
	23, 2762,
	24, 2762,
	25, 2762,
	26, 2762,
	27, 2762,
	29, 2762,
	30, 2762,
	33, 2762,
	34, 2762,
	36, 2762,
	38, 2762,
	41, 2762,
	42, 2762,
	44, 2762,
	45, 2762,
	46, 2762,
	47, 2762,
	48, 2762,
	49, 2762,
	50, 2762,
	51, 2762,
	53, 2762,
	54, 2762,
	55, 2762,
	56, 2762,
	58, 2762,
	59, 2762,
	60, 2762,
	61, 2762,
	62, 2762,
	63, 2762,
	64, 2762,
	67, 2762,
	68, 2762,
	69, 2762,
	70, 2762,
	71, 2762,
	73, 2762,
	74, 2762,
	75, 2762,
	76, 2762,
	79, 2762,
	80, 2762,
	81, 2762,
	82, 2762,
	83, 2762,
	84, 2762,
	85, 2762,
	86, 2762,
	88, 2762,
	89, 2762,
	90, 2762,
	91, 2762,
	92, 2762,
	94, 2762,
	95, 2762,
	96, 2762,
	97, 2762,
	98, 2762,
	99, 2762,
	100, 2762,
	101, 2762,
	103, 2762,
	104, 2762,
	105, 2762,
	106, 2762,
	107, 2762,
	108, 2762,
	109, 2762,
	117, 2762,
	118, 2762,
	119, 2762,
	120, 2762,
	121, 2762,
	123, 2762,
	124, 2762,
	125, 2762,
	126, 2762,
	128, 2762,
	129, 2762,
	130, 2762,
	132, 2762,
	133, 2762,
	134, 2762,
	136, 2762,
	137, 2762,
	138, 2762,
	141, 2762,
	142, 2762,
	143, 2762,
	145, 2762,
	146, 2762,
	148, 2762,
	149, 2762,
	150, 2762,
	152, 2762,
	153, 2762,
	154, 2762,
	155, 2762,
	156, 2762,
	157, 2762,
	158, 2762,
	159, 2762,
	160, 2762,
	161, 2762,
	162, 2762,
	163, 2762,
	164, 2762,
	165, 2762,
	166, 2762,
	167, 2762,
	171, 2762,
	172, 2762,
	173, 2762,
	174, 2762,
	175, 2762,
	176, 2762,
	177, 2762,
	178, 2762,
	181, 2762,
	182, 2762,
	184, 2762,
	185, 2762,
	186, 2762,
	189, 2762,
	190, 2762,
	191, 2762,
	192, 2762,
	193, 2762,
	194, 2762,
	195, 2762,
	196, 2762,
	197, 2762,
	198, 2762,
	199, 2762,
	200, 2762,
	201, 2762,
	202, 2762,
	203, 2762,
	205, 2762,
	206, 2762,
	208, 2762,
	209, 2762,
	211, 2762,
	212, 2762,
	213, 2762,
	214, 2762,
	215, 2762,
	216, 2762,
	217, 2762,
	218, 2762,
	219, 2762,
	220, 2762,
	221, 2762,
	222, 2762,
	223, 2762,
	224, 2762,
	225, 2762,
	226, 2762,
	227, 2762,
	228, 2762,
	230, 2762,
	231, 2762,
	233, 2762,
	234, 2762,
	235, 2762,
	236, 2762,
	238, 2762,
	239, 2762,
	240, 2762,
	241, 2762,
	243, 2762,
	245, 2762,
	246, 2762,
	247, 2762,
	248, 2762,
	249, 2762,
	250, 2762,
	251, 2762,
	252, 2762,
	253, 2762,
	254, 2762,
	256, 2762,
	257, 2762,
	258, 2762,
	259, 2762,
	260, 2762,
	261, 2762,
	262, 2762,
	263, 2762,
	265, 2762,
	266, 2762,
	267, 2762,
	269, 2762,
	270, 2762,
	271, 2762,
	272, 2762,
	273, 2762,
	274, 2762,
	276, 2762,
	277, 2762,
	278, 2762,
	279, 2762,
	280, 2762,
	281, 2762,
	282, 2762,
	285, 2762,
	286, 2762,
	287, 2762,
	288, 2762,
	289, 2762,
	290, 2762,
	291, 2762,
	292, 2762,
	293, 2762,
	294, 2762,
	295, 2762,
	296, 2762,
	297, 2762,
	298, 2762,
	299, 2762,
	300, 2762,
	301, 2762,
	302, 2762,
	303, 2762,
	304, 2762,
	305, 2762,
	306, 2762,
	307, 2762,
	308, 2762,
	309, 2762,
	310, 2762,
	311, 2762,
	313, 2762,
	314, 2762,
	315, 2762,
	316, 2762,
	317, 2762,
	318, 2762,
	319, 2762,
	320, 2762,
	321, 2762,
	322, 2762,
	323, 2762,
	324, 2762,
	325, 2762,
	326, 2762,
	327, 2762,
	328, 2762,
	330, 2762,
	331, 2762,
	334, 2762,
	335, 2762,
	336, 2762,
	338, 2762,
	339, 2762,
	340, 2762,
	341, 2762,
	342, 2762,
	345, 2762,
	349, 2762,
	350, 2762,
	351, 2762,
	352, 2762,
	354, 2762,
	355, 2762,
	356, 2762,
	358, 2762,
	360, 2762,
	361, 2762,
	362, 2762,
	363, 2762,
	364, 2762,
	365, 2762,
	366, 2762,
	367, 2762,
	368, 2762,
	369, 2762,
	370, 2762,
	371, 2762,
	372, 2762,
	374, 2762,
	375, 2762,
	376, 2762,
	377, 2762,
	378, 2762,
	379, 2762,
	380, 2762,
	381, 2762,
	382, 2762,
	383, 2762,
	384, 2762,
	385, 2762,
	386, 2762,
	387, 2762,
	388, 2762,
	390, 2762,
	391, 2762,
	393, 2762,
	394, 2762,
	395, 2762,
	396, 2762,
	397, 2762,
	398, 2762,
	399, 2762,
	400, 2762,
	401, 2762,
	402, 2762,
	403, 2762,
	404, 2762,
	405, 2762,
	407, 2762,
	409, 2762,
	410, 2762,
	411, 2762,
	417, 2762,
	418, 2762,
	419, 2762,
	420, 2762,
	421, 2762,
	422, 2762,
	423, 2762,
	424, 2762,
	425, 2762,
	426, 2762,
	427, 2762,
	428, 2762,
	430, 2762,
	431, 2762,
	432, 2762,
	433, 2762,
	434, 2762,
	435, 2762,
	436, 2762,
	437, 2762,
	438, 2762,
	439, 2762,
	440, 2762,
	441, 2762,
	442, 2762,
	443, 2762,
	444, 2762,
	445, 2762,
	446, 2762,
	447, 2762,
	448, 2762,
	449, 2762,
	450, 2762,
	451, 2762,
	452, 2762,
	453, 2762,
	455, 2762,
	456, 2762,
	457, 2762,
	458, 2762,
	459, 2762,
	460, 2762,
	462, 2762,
	463, 2762,
	464, 2762,
	465, 2762,
	466, 2762,
	467, 2762,
	468, 2762,
	469, 2762,
	470, 2762,
	471, 2762,
	472, 2762,
	473, 2762,
	474, 2762,
	475, 2762,
	476, 2762,
	478, 2762,
	480, 2762,
	481, 2762,
	482, 2762,
	483, 2762,
	484, 2762,
	485, 2762,
	486, 2762,
	487, 2762,
	488, 2762,
	489, 2762,
	490, 2762,
	491, 2762,
	492, 2762,
	493, 2762,
	494, 2762,
	495, 2762,
	497, 2762,
	498, 2762,
	499, 2762,
	500, 2762,
	501, 2762,
	503, 2762,
	504, 2762,
	505, 2762,
	506, 2762,
	507, 2762,
	508, 2762,
	509, 2762,
	510, 2762,
	511, 2762,
	513, 2762,
	514, 2762,
	515, 2762,
	516, 2762,
	517, 2762,
	519, 2762,
	521, 2762,
	522, 2762,
	523, 2762,
	524, 2762,
	525, 2762,
	526, 2762,
	528, 2762,
	529, 2762,
	530, 2762,
	531, 2762,
	533, 2762,
	534, 2762,
	537, 2762,
	538, 2762,
	539, 2762,
	540, 2762,
	541, 2762,
	542, 2762,
	543, 2762,
	545, 2762,
	548, 2762,
	549, 2762,
	550, 2762,
	551, 2762,
	552, 2762,
	553, 2762,
	555, 2762,
	556, 2762,
	557, 2762,
	558, 2762,
	559, 2762,
	560, 2762,
	565, 2762,
	566, 2762,
	567, 2762,
	568, 2762,
	569, 2762,
	570, 2762,
	571, 2762,
	573, 2762,
	581, 2762,
	582, 2762,
	583, 2762,
	584, 2762,
	585, 2762,
	586, 2762,
	588, 2762,
	589, 2762,
	590, 2762,
	591, 2762,
	592, 2762,
	593, 2762,
	594, 2762,
	595, 2762,
	596, 2762,
	598, 2762,
	601, 2762,
	602, 2762,
	604, 2762,
	605, 2762,
	-2, 0,
	-1, 1637,
	188, 2643,
	518, 2643,
	583, 2643,
	602, 2643,
	-2, 0,
	-1, 1690,
	395, 885,
	460, 885,
	501, 885,
	523, 885,
	-2, 0,
	-1, 1701,
	1, 1399,
	599, 1399,
	601, 1399,
	603, 1399,
	-2, 0,
	-1, 1718,
	1, 880,
	599, 880,
	601, 880,
	603, 880,
	-2, 0,
	-1, 1719,
	1, 924,
	599, 924,
	601, 924,
	603, 924,
	-2, 0,
	-1, 1720,
	1, 932,
	599, 932,
	601, 932,
	603, 932,
	-2, 0,
	-1, 1723,
	1, 889,
	599, 889,
	601, 889,
	603, 889,
	-2, 0,
	-1, 1725,
	1, 895,
	599, 895,
	601, 895,
	603, 895,
	-2, 0,
	-1, 1728,
	1, 891,
	599, 891,
	601, 891,
	603, 891,
	-2, 0,
	-1, 1733,
	1, 905,
	599, 905,
	601, 905,
	603, 905,
	-2, 0,
	-1, 1764,
	1, 2626,
	599, 2626,
	601, 2626,
	602, 2626,
	603, 2626,
	-2, 0,
	-1, 1768,
	1, 978,
	599, 978,
	601, 978,
	603, 978,
	-2, 0,
	-1, 1783,
	1, 1449,
	603, 1449,
	-2, 1454,
	-1, 1786,
	170, 1605,
	183, 1605,
	275, 1605,
	343, 1605,
	-2, 1543,
	-1, 1886,
	151, 1564,
	170, 1564,
	183, 1564,
	242, 1564,
	275, 1564,
	343, 1564,
	353, 1564,
	535, 1564,
	-2, 2014,
	-1, 1947,
	601, 2189,
	-2, 0,
	-1, 1982,
	151, 1564,
	170, 1564,
	183, 1564,
	242, 1564,
	275, 1564,
	343, 1564,
	353, 1564,
	535, 1564,
	-2, 1696,
	-1, 2021,
	518, 2640,
	602, 2640,
	605, 2640,
	-2, 0,
	-1, 2038,
	600, 1837,
	-2, 1825,
	-1, 2070,
	188, 2640,
	602, 2640,
	605, 2640,
	-2, 0,
	-1, 2112,
	1, 697,
	603, 697,
	-2, 1454,
	-1, 2252,
	223, 259,
	-2, 2337,
	-1, 2253,
	223, 260,
	-2, 313,
	-1, 2363,
	1, 882,
	599, 882,
	601, 882,
	603, 882,
	-2, 0,
	-1, 2364,
	1, 926,
	599, 926,
	601, 926,
	603, 926,
	-2, 0,
	-1, 2365,
	1, 934,
	599, 934,
	601, 934,
	603, 934,
	-2, 0,
	-1, 2366,
	1, 980,
	599, 980,
	601, 980,
	603, 980,
	-2, 0,
	-1, 2407,
	1, 907,
	599, 907,
	601, 907,
	603, 907,
	-2, 0,
	-1, 2426,
	1, 963,
	599, 963,
	601, 963,
	603, 963,
	-2, 0,
	-1, 2471,
	439, 1632,
	440, 1632,
	-2, 1870,
	-1, 2502,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1890,
	-1, 2503,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1891,
	-1, 2504,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1892,
	-1, 2505,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1893,
	-1, 2506,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1894,
	-1, 2507,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1895,
	-1, 2508,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1896,
	-1, 2509,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1897,
	-1, 2521,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1909,
	-1, 2522,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1910,
	-1, 2523,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1911,
	-1, 2527,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1918,
	-1, 2533,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1922,
	-1, 2535,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1930,
	-1, 2536,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1931,
	-1, 2537,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1932,
	-1, 2538,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1933,
	-1, 2712,
	5, 2341,
	188, 2200,
	600, 2338,
	-2, 2329,
	-1, 2713,
	188, 2201,
	-2, 2713,
	-1, 2714,
	188, 2202,
	-2, 2531,
	-1, 2715,
	188, 2203,
	-2, 2411,
	-1, 2716,
	188, 2204,
	-2, 2468,
	-1, 2717,
	188, 2205,
	-2, 2516,
	-1, 2718,
	188, 2206,
	-2, 2638,
	-1, 2719,
	188, 2207,
	-2, 1997,
	-1, 2790,
	1, 1697,
	2, 1697,
	106, 1697,
	151, 1697,
	170, 1697,
	183, 1697,
	189, 1697,
	207, 1697,
	210, 1697,
	238, 1697,
	242, 1697,
	253, 1697,
	271, 1697,
	275, 1697,
	314, 1697,
	343, 1697,
	347, 1697,
	353, 1697,
	429, 1697,
	433, 1697,
	535, 1697,
	546, 1697,
	562, 1697,
	563, 1697,
	564, 1697,
	574, 1697,
	599, 1697,
	601, 1697,
	603, 1697,
	605, 1697,
	-2, 1696,
	-1, 2803,
	600, 2310,
	-2, 2324,
	-1, 2805,
	1, 330,
	562, 330,
	-2, 1591,
	-1, 2835,
	600, 1836,
	-2, 1826,
	-1, 3020,
	1, 1302,
	424, 1266,
	462, 1266,
	577, 1266,
	599, 1302,
	601, 1302,
	603, 1302,
	-2, 1591,
	-1, 3208,
	348, 1635,
	-2, 2752,
	-1, 3209,
	348, 1636,
	-2, 2623,
	-1, 3213,
	439, 2266,
	440, 2266,
	-2, 1995,
	-1, 3214,
	439, 2270,
	440, 2270,
	-2, 1996,
	-1, 3215,
	439, 2267,
	440, 2267,
	-2, 1995,
	-1, 3216,
	439, 2271,
	440, 2271,
	-2, 1996,
	-1, 3229,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1920,
	-1, 3230,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1924,
	-1, 3236,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1926,
	-1, 3461,
	1, 692,
	599, 692,
	601, 692,
	603, 692,
	-2, 1454,
	-1, 3625,
	43, 2301,
	-2, 1050,
	-1, 3630,
	1, 1302,
	599, 1302,
	601, 1302,
	603, 1302,
	-2, 1591,
	-1, 3742,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1928,
	-1, 3749,
	247, 0,
	249, 0,
	334, 0,
	-2, 1947,
	-1, 3817,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1976,
	-1, 3818,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1977,
	-1, 3819,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1978,
	-1, 3823,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1982,
	-1, 3824,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1983,
	-1, 3825,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1984,
	-1, 3873,
	600, 2311,
	-2, 2325,
	-1, 4048,
	602, 2869,
	-2, 1517,
	-1, 4110,
	247, 0,
	249, 0,
	334, 0,
	-2, 1948,
	-1, 4113,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1951,
	-1, 4114,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1953,
	-1, 4215,
	602, 2326,
	-2, 1337,
	-1, 4370,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1952,
	-1, 4371,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1954,
	-1, 4382,
	247, 0,
	-2, 1987,
	-1, 4570,
	247, 0,
	-2, 1988,
	-1, 4771,
	50, 0,
	220, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 2716,
}

const sqlPrivate = 57344

const sqlLast = 135069

var sqlAct = [...]int{
	275, 4764, 3614, 4967, 4604, 4875, 3108, 3095, 3367, 4432,
	4888, 4829, 4612, 4781, 4752, 4770, 2897, 4640, 4904, 4763,
	4636, 4661, 3613, 4739, 4720, 4211, 4697, 4782, 4414, 4783,
	2249, 4717, 4492, 4093, 2162, 4499, 2941, 4523, 2326, 4477,
	3782, 4842, 4574, 2745, 1269, 4437, 4324, 2966, 4769, 4319,
	1089, 4285, 3734, 4391, 4032, 4359, 1135, 4306, 2481, 4260,
	4040, 1344, 3647, 1258, 4308, 1340, 4508, 1535, 2012, 1333,
	4299, 3968, 711, 2338, 4212, 822, 4192, 3541, 2094, 3065,
	2550, 3222, 1795, 4537, 4329, 3641, 2081, 3609, 4013, 3997,
	2489, 2299, 3117, 2170, 1655, 2006, 3484, 2025, 2979, 782,
	1326, 3995, 1988, 822, 1080, 3132, 3591, 3051, 3084, 3688,
	3382, 1407, 3690, 4387, 3119, 3598, 3876, 3590, 3412, 2026,
	3390, 4092, 4149, 2482, 3350, 1335, 3079, 722, 3373, 901,
	3127, 3116, 897, 4, 3110, 3081, 1498, 3371, 1957, 3096,
	3419, 2236, 4876, 3027, 2181, 2899, 3843, 1933, 3503, 2238,
	3349, 2486, 4575, 1894, 1864, 2563, 2628, 3206, 1338, 1593,
	1505, 3126, 3479, 3055, 2783, 111, 778, 1146, 2197, 817,
	892, 1142, 2996, 1088, 182, 2213, 2237, 2232, 1249, 2220,
	2782, 3066, 1139, 1388, 2940, 2150, 1189, 1783, 2154, 1312,
	2763, 2619, 2092, 1958, 269, 1144, 2547, 2470, 2140, 2451,
	2818, 2453, 755, 2630, 1698, 3611, 3089, 1596, 1630, 819,
	2286, 1653, 823, 4662, 2922, 2336, 970, 824, 1375, 3061,
	2885, 268, 2753, 2742, 3120, 3989, 1974, 2622, 2817, 1928,
	2772, 1252, 1231, 2600, 1977, 2708, 1967, 1878, 1796, 2674,
	2452, 1797, 1266, 191, 2454, 763, 1733, 1718, 774, 1621,
	1248, 2246, 1323, 192, 2312, 2285, 1628, 2169, 1530, 4830,
	4889, 2475, 1120, 3062, 2785, 715, 44, 1141, 182, 828,
	43, 41, 1254, 1137, 32, 30, 812, 738, 712, 28,
	723, 1229, 3259, 873, 1802, 1541, 1782, 991, 3857, 3253,
	3858, 874, 2083, 3369, 4407, 4980, 831, 828, 1264, 2762,
	2083, 4810, 4173, 1084, 1084, 2083, 2083, 2083, 267, 2083,
	3657, 4970, 918, 4954, 698, 3666, 4953, 2762, 720, 4943,
	2762, 4924, 163, 2258, 831, 4436, 3666, 4922, 1534, 3446,
	73, 4436, 46, 45, 4861, 4818, 3656, 4807, 2258, 4819,
	4805, 2762, 2258, 2258, 2762, 4802, 4404, 74, 4799, 4803,
	158, 4767, 4800, 4766, 4765, 2258, 4760, 2258, 2104, 1085,
	2104, 4759, 4750, 79, 3444, 2104, 4436, 4748, 3320, 3321,
	1246, 4436, 4745, 4715, 67, 2755, 4511, 4436, 4686, 3320,
	3321, 48, 2826, 160, 4679, 4678, 4673, 4672, 2762, 2762,
	4436, 4436, 4666, 4632, 4572, 4554, 2258, 4276, 2826, 4077,
	4551, 47, 4548, 88, 2258, 4501, 4436, 1074, 4455, 4502,
	4454, 4443, 2258, 1261, 2258, 2258, 4442, 4435, 4398, 4372,
	4436, 4436, 2258, 2826, 4348, 4337, 1065, 3429, 2104, 3666,
	50, 68, 2258, 2101, 1384, 3221, 1064, 4255, 1724, 51,
	1290, 2762, 1664, 4238, 57, 1118, 4112, 2762, 161, 4056,
	2826, 4050, 1384, 3683, 3268, 3683, 49, 893, 110, 2846,
	3269, 2762, 4011, 94, 107, 2337, 4012, 3868, 3866, 3850,
	3766, 3869, 3867, 2762, 2258, 1079, 3762, 3682, 2625, 1283,
	2762, 3683, 94, 3847, 73, 3673, 896, 895, 1235, 3674,
	1236, 3366, 1646, 3320, 3321, 2762, 3361, 239, 1232, 1232,
	2762, 74, 1810, 1811, 3360, 52, 3311, 3309, 2762, 1260,
	3312, 3310, 2822, 4687, 2101, 3301, 1233, 79, 3299, 3302,
	3270, 4576, 2762, 95, 2762, 1841, 3136, 3106, 4567, 3105,
	2104, 2322, 1813, 2322, 4555, 2869, 2825, 2815, 3326, 2762,
	2826, 2762, 4511, 2807, 2761, 241, 2258, 2258, 2762, 3326,
	2321, 2104, 3847, 2258, 2322, 2762, 3258, 88, 1866, 2754,
	4317, 4276, 2101, 1284, 4239, 4077, 1284, 1812, 3674, 2626,
	2969, 2884, 2119, 2082, 2098, 3057, 2257, 2989, 2882, 2174,
	1953, 1529, 3951, 2576, 2577, 2578, 2595, 2596, 2597, 3737,
	3711, 1810, 1811, 1975, 240, 2225, 3658, 1700, 899, 2799,
	2798, 2797, 2796, 2598, 2795, 1237, 1234, 233, 1073, 1072,
	49, 1071, 110, 239, 1070, 3659, 234, 94, 107, 1543,
	1069, 1813, 1068, 1543, 1067, 1063, 1062, 1061, 1060, 1059,
	1058, 1057, 1056, 1055, 1054, 3180, 1866, 1053, 1052, 1051,
	1050, 1049, 1048, 193, 1047, 1046, 3336, 1028, 968, 967,
	966, 2627, 965, 2624, 2084, 2588, 1812, 3336, 964, 963,
	962, 241, 2084, 3326, 2584, 961, 960, 2084, 2084, 2084,
	99, 2084, 1818, 1543, 959, 958, 957, 95, 956, 955,
	954, 953, 952, 951, 950, 949, 948, 1262, 53, 1555,
	947, 946, 945, 944, 943, 942, 941, 940, 939, 938,
	937, 936, 935, 56, 934, 933, 922, 921, 59, 4167,
	240, 2101, 920, 916, 915, 908, 907, 906, 69, 891,
	1863, 1840, 1842, 890, 58, 190, 102, 3656, 847, 106,
	846, 1863, 845, 54, 844, 835, 834, 162, 833, 832,
	2589, 2590, 2591, 2592, 4124, 55, 1284, 798, 789, 788,
	2583, 787, 769, 263, 262, 239, 1349, 1144, 1549, 193,
	261, 1818, 4331, 62, 260, 259, 258, 257, 153, 256,
	255, 3336, 254, 253, 239, 1542, 252, 251, 250, 3891,
	1833, 2101, 73, 159, 1144, 1144, 1144, 153, 249, 248,
	4792, 247, 2754, 246, 245, 244, 243, 242, 3337, 74,
	3862, 3684, 1410, 241, 3415, 1534, 1410, 3281, 2629, 3337,
	3264, 3255, 3160, 1349, 3037, 79, 3074, 2830, 3364, 2804,
	2789, 2329, 241, 2148, 99, 2593, 2594, 2103, 1978, 157,
	1936, 2657, 2655, 2258, 1392, 1393, 1394, 1935, 1144, 2399,
	1144, 2856, 1144, 4427, 194, 1863, 2082, 2101, 2098, 1349,
	2446, 1379, 240, 2001, 1863, 88, 1809, 1284, 2586, 3365,
	3092, 1905, 2641, 1537, 1939, 233, 1936, 1396, 2639, 1810,
	1811, 240, 1268, 1935, 234, 1349, 1896, 1513, 4791, 190,
	102, 4788, 4768, 106, 233, 1508, 4747, 4647, 4579, 4564,
	239, 4558, 1841, 234, 239, 1349, 899, 4556, 4386, 1813,
	1934, 193, 1349, 1554, 3, 1503, 4338, 2328, 49, 239,
	110, 1144, 4316, 1144, 4179, 94, 107, 900, 1349, 4147,
	193, 1903, 153, 3337, 2623, 1866, 1144, 4146, 1144, 1533,
	4140, 4139, 1834, 4138, 1812, 4131, 4130, 4128, 241, 1317,
	1320, 4123, 241, 1371, 239, 4120, 1602, 1605, 3322, 3323,
	3324, 3325, 3327, 3328, 1330, 2839, 1543, 241, 3330, 3322,
	3323, 3324, 3325, 3327, 3328, 1373, 4119, 4010, 4016, 4333,
	1518, 3895, 1548, 3894, 3893, 95, 1349, 3872, 3838, 1403,
	1608, 1495, 1500, 157, 3837, 3836, 3758, 240, 3753, 3410,
	1865, 240, 241, 1668, 3357, 3348, 1144, 1726, 194, 1144,
	233, 3319, 3316, 3315, 233, 3313, 240, 3308, 1650, 234,
	2587, 3307, 3306, 234, 1357, 3303, 3300, 3280, 1087, 233,
	828, 3263, 1365, 3256, 3254, 1898, 1245, 3107, 234, 2790,
	2612, 1591, 1809, 1896, 2302, 1897, 193, 1895, 1532, 1818,
	193, 240, 2265, 1531, 2263, 1808, 4974, 831, 4914, 4913,
	4017, 4877, 4828, 4826, 233, 894, 1270, 3784, 4707, 1669,
	1085, 4639, 1334, 234, 4623, 3076, 1633, 1635, 1865, 182,
	182, 3329, 3330, 3322, 3323, 3324, 3325, 3327, 3328, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 1840, 1842,
	193, 1810, 1811, 3949, 4620, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 4619, 4618, 4598, 1379, 4597, 4595, 1379,
	4578, 4577, 1501, 4552, 4536, 1512, 1334, 4535, 2553, 4521,
	4518, 1813, 99, 4517, 4512, 4451, 4422, 3362, 1144, 4384,
	3320, 3321, 4367, 4366, 1144, 4345, 4344, 4302, 4277, 4166,
	1624, 239, 4145, 3320, 3321, 4078, 4070, 1833, 4067, 3937,
	2573, 2574, 2575, 2599, 2585, 2579, 1812, 2581, 2582, 2580,
	2567, 2568, 2569, 2570, 2571, 2572, 3936, 3919, 3918, 1787,
	3916, 3853, 3841, 1816, 1817, 1819, 1820, 190, 102, 3748,
	4581, 106, 1883, 3685, 3667, 1334, 1334, 239, 1674, 241,
	3633, 3558, 3516, 3483, 2559, 3438, 3285, 1645, 3284, 3279,
	3245, 1810, 1811, 3050, 1942, 1742, 1941, 239, 1781, 1940,
	239, 1937, 1663, 3320, 3321, 900, 3436, 1929, 1927, 2837,
	153, 1863, 4332, 4017, 1841, 2836, 2801, 239, 1885, 1810,
	1811, 1813, 2794, 2760, 2637, 241, 1882, 2000, 240, 1144,
	1144, 1144, 1956, 1951, 1950, 1144, 1949, 1948, 1947, 1946,
	1945, 233, 1266, 1944, 1266, 241, 1943, 1866, 241, 1813,
	234, 1818, 1924, 1923, 1922, 1691, 1812, 1921, 3075, 1410,
	1920, 1919, 1918, 1917, 1916, 241, 1832, 1955, 1915, 1727,
	1144, 157, 1914, 822, 240, 1829, 1913, 193, 1964, 2043,
	822, 239, 1788, 1085, 1812, 1912, 194, 233, 1911, 1834,
	3326, 1910, 1909, 1898, 240, 1884, 234, 240, 1264, 1881,
	1264, 1876, 1364, 3326, 1622, 1288, 1279, 233, 1627, 2330,
	233, 1792, 1784, 2016, 240, 1791, 234, 4580, 4305, 234,
	4175, 2010, 1065, 3091, 4116, 3890, 3865, 233, 2004, 241,
	1346, 1938, 1064, 3856, 3267, 2792, 234, 1786, 2828, 4405,
	4177, 2022, 3889, 193, 2011, 1897, 193, 1865, 2071, 3434,
	2073, 1835, 1836, 1837, 1838, 1144, 1879, 1805, 1806, 3662,
	1349, 1818, 2005, 193, 3320, 3321, 4241, 2139, 1961, 1962,
	2139, 1996, 1985, 3326, 4911, 4903, 2131, 2130, 240, 1144,
	2139, 2141, 2967, 1391, 4621, 4513, 4504, 1410, 3407, 4503,
	2139, 233, 4336, 4279, 2088, 2164, 4278, 2090, 2110, 1389,
	234, 4240, 4784, 2095, 1930, 1931, 4169, 2097, 4083, 1085,
	1840, 1842, 2100, 1261, 2137, 1261, 2106, 4082, 4081, 182,
	2656, 2654, 2945, 4080, 4079, 3860, 3859, 193, 3687, 2146,
	3686, 4426, 1379, 1863, 3669, 239, 1827, 1828, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 3668, 2037, 2009, 1390, 4857,
	239, 2640, 2109, 4559, 4855, 2208, 239, 2638, 4509, 4557,
	239, 4020, 1384, 1978, 3735, 2040, 1976, 828, 3963, 1833,
	1936, 1384, 1863, 3305, 828, 1983, 1779, 1935, 1919, 1986,
	1919, 3336, 2017, 241, 3304, 1232, 1690, 3550, 3227, 2066,
	2927, 1387, 3934, 2994, 831, 3485, 2086, 1044, 241, 2134,
	2222, 831, 1954, 2125, 241, 1907, 1904, 2174, 241, 1260,
	1743, 1260, 1995, 1384, 1980, 4840, 1994, 1993, 1349, 1349,
	1991, 1990, 3616, 1699, 3615, 1989, 2239, 3678, 1410, 2327,
	2355, 4500, 240, 4814, 4795, 4780, 3599, 3133, 1700, 4388,
	2023, 2240, 1045, 1863, 4024, 233, 2112, 240, 4007, 3965,
	3369, 3960, 2031, 240, 234, 1863, 3942, 240, 1626, 3708,
	233, 2625, 3459, 2334, 4789, 3786, 233, 2835, 2620, 234,
	233, 4446, 1952, 4418, 1512, 234, 1932, 3273, 3607, 234,
	2296, 193, 2975, 1601, 1525, 3519, 2303, 2204, 1360, 2212,
	1316, 4804, 2217, 2924, 2986, 4801, 193, 3652, 1839, 3911,
	2983, 4613, 193, 2108, 2981, 4320, 193, 4714, 2207, 4591,
	3488, 3929, 2250, 2255, 1244, 2136, 4859, 3114, 1678, 3582,
	3088, 1834, 1512, 2115, 4858, 1349, 4449, 1349, 4445, 1349,
	4424, 4790, 3729, 3337, 4473, 4228, 1568, 3463, 3978, 2142,
	2132, 1576, 2870, 2974, 1740, 886, 2413, 1349, 1349, 2411,
	1627, 1527, 2626, 2135, 2923, 4969, 4627, 1042, 1040, 4226,
	1349, 1814, 1815, 1816, 1817, 1819, 1820, 4223, 4466, 4457,
	2180, 1038, 1349, 3159, 1349, 1349, 1349, 1036, 4893, 1865,
	1033, 4269, 2888, 4268, 3976, 3975, 3029, 1262, 3967, 1262,
	2242, 2243, 3957, 1024, 2244, 3956, 1741, 2886, 822, 3954,
	3322, 3323, 3324, 3325, 3327, 3328, 3977, 2202, 3953, 2888,
	3465, 2354, 2340, 3941, 828, 3324, 3325, 3327, 3328, 1102,
	1144, 3906, 2292, 2126, 2886, 3320, 3321, 3905, 1577, 1391,
	2297, 3588, 1532, 3587, 2627, 3428, 2624, 1531, 3278, 3277,
	3276, 831, 3275, 1385, 3231, 2992, 1739, 2991, 2309, 2988,
	2977, 887, 2670, 2201, 2198, 1144, 2216, 2961, 2960, 2955,
	2954, 2332, 2953, 2347, 2932, 1830, 1826, 2931, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 2359, 2256, 2892,
	3331, 3329, 3330, 3322, 3323, 3324, 3325, 3327, 3328, 1144,
	1085, 1144, 1085, 4447, 1390, 4419, 2816, 3435, 1144, 1676,
	3335, 2043, 2043, 1410, 1820, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 2319, 1144, 2278, 1144, 1144, 1144, 1144, 2277, 2306,
	2534, 3548, 761, 1785, 4482, 2311, 1624, 2445, 2314, 2341,
	2314, 3485, 1381, 2171, 2315, 761, 2669, 2240, 2461, 2463,
	1144, 2327, 4222, 2925, 1144, 1144, 1365, 2491, 2317, 2450,
	1083, 2323, 1144, 2324, 2925, 4894, 1144, 4224, 1144, 1144,
	3085, 2629, 828, 2843, 2295, 3326, 1410, 2167, 1093, 2829,
	1626, 2199, 1144, 1144, 1144, 1144, 2820, 2384, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 2346, 2601, 2602, 831,
	2487, 2488, 3709, 2949, 2443, 1528, 2172, 2173, 2459, 2363,
	2438, 2601, 2617, 4365, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 2374, 1386, 2461, 4207, 1144, 2351, 3328,
	2942, 2943, 1722, 2942, 2943, 1030, 2168, 4242, 2665, 1266,
	2174, 2113, 2276, 2143, 2144, 1391, 1410, 2174, 2037, 2037,
	4185, 1082, 2407, 2942, 2943, 1266, 2205, 2711, 2711, 2725,
	4200, 2601, 1692, 2901, 2746, 2748, 1671, 2040, 2040, 2474,
	2752, 1144, 1410, 3518, 2620, 1374, 1614, 1612, 1613, 1611,
	2929, 1777, 1382, 3336, 1585, 2459, 1738, 2623, 1722, 2457,
	1996, 1383, 3549, 2371, 2435, 1264, 2877, 2364, 2449, 4898,
	2200, 2447, 2448, 4858, 2462, 2455, 2426, 2565, 2425, 2210,
	1390, 1264, 3139, 4184, 2802, 4201, 1065, 1085, 3175, 1065,
	1065, 2616, 2437, 710, 1778, 2806, 2478, 1085, 1752, 2479,
	2480, 1085, 889, 888, 2549, 1590, 2915, 2549, 1721, 2417,
	2423, 2405, 1572, 3914, 2777, 3204, 1302, 4926, 2368, 705,
	2985, 4786, 1700, 1719, 2031, 2031, 2460, 1863, 1756, 760,
	2365, 2424, 1084, 2914, 2557, 1700, 2362, 2769, 3462, 2316,
	1385, 2555, 760, 3718, 3717, 1349, 1349, 3177, 2904, 4225,
	3219, 4483, 2984, 1985, 1672, 2561, 3320, 3321, 2982, 3338,
	3339, 3340, 2980, 4481, 1721, 2629, 4267, 4899, 3775, 4479,
	931, 2614, 3938, 2667, 1385, 2372, 3955, 3926, 2668, 1790,
	1261, 2671, 2226, 2672, 2673, 2819, 1720, 2233, 1363, 1410,
	1085, 3952, 1688, 2254, 2182, 3898, 1261, 2823, 2768, 2887,
	2458, 2891, 4220, 2460, 3885, 3337, 3594, 2791, 2859, 1597,
	3586, 2865, 1677, 2851, 3546, 2412, 4478, 2186, 2410, 2855,
	2720, 2737, 2707, 2043, 2758, 2759, 2750, 1034, 1034, 2987,
	2891, 3335, 1379, 2866, 2842, 2952, 1384, 2858, 182, 762,
	2867, 1034, 2774, 2775, 4480, 1938, 2770, 1035, 4606, 2776,
	1034, 2781, 762, 4364, 2787, 2788, 1983, 2930, 1232, 1381,
	1735, 1595, 4872, 3772, 2262, 2261, 1410, 2155, 2862, 2444,
	2873, 4880, 2156, 2831, 2183, 1631, 1260, 2458, 4901, 3211,
	3212, 3242, 1349, 2545, 3218, 4879, 2223, 2814, 2893, 2196,
	4196, 2875, 1260, 1381, 4929, 4197, 3924, 4787, 4847, 2209,
	2861, 2227, 4098, 1144, 1144, 4202, 1144, 4097, 3712, 2838,
	3240, 4907, 2543, 3595, 1081, 2850, 2211, 3592, 836, 2853,
	2928, 2854, 1930, 1931, 3650, 2629, 3326, 884, 2876, 883,
	822, 3649, 1349, 2868, 2434, 2890, 2841, 3183, 2845, 2219,
	2860, 1386, 2935, 2978, 843, 3773, 2206, 4199, 1018, 2874,
	2903, 2208, 3331, 3329, 3330, 3322, 3323, 3324, 3325, 3327,
	3328, 4957, 2436, 1349, 4203, 2934, 2218, 1334, 3939, 2950,
	1574, 4608, 1078, 3099, 2223, 1386, 1753, 2871, 1349, 4693,
	1349, 3186, 2155, 2187, 3072, 2918, 2157, 2156, 3128, 2203,
	2037, 2083, 3054, 4410, 3473, 2965, 1349, 2889, 2933, 1382,
	2214, 4785, 4683, 2161, 2235, 2968, 3649, 4218, 1383, 2040,
	2959, 2951, 2944, 2946, 2947, 2948, 1334, 2906, 2909, 2957,
	2896, 2210, 4221, 3986, 3140, 3141, 2956, 3561, 3068, 2172,
	2173, 4614, 2780, 1382, 3336, 3147, 3148, 3149, 3131, 4634,
	796, 1675, 1383, 1018, 1144, 2370, 2993, 1334, 1334, 2188,
	2189, 3021, 3022, 3237, 1262, 2539, 1597, 2958, 2531, 2215,
	4754, 2234, 4755, 3130, 1019, 2963, 706, 1078, 3464, 3500,
	1262, 2973, 3134, 4900, 2184, 1966, 2540, 2158, 2163, 3238,
	3987, 2541, 2727, 3243, 1750, 2546, 759, 3161, 1274, 3162,
	3030, 3157, 828, 3189, 4198, 1571, 2031, 2902, 3113, 1301,
	1701, 2157, 2629, 1276, 2207, 1031, 3032, 1144, 1863, 1526,
	1532, 3034, 3156, 1144, 1144, 3035, 1754, 2185, 2161, 831,
	2230, 1286, 2888, 3985, 828, 3048, 3499, 3166, 4294, 3168,
	1271, 3170, 3103, 4208, 4209, 182, 1673, 2907, 3058, 3059,
	2211, 1501, 4846, 1925, 2155, 3593, 2406, 707, 3163, 2156,
	3432, 831, 794, 932, 3191, 2209, 3193, 2223, 1970, 1019,
	3233, 2159, 3094, 2548, 3535, 4905, 4219, 837, 838, 1144,
	1144, 3104, 3527, 1512, 1277, 1144, 3115, 2228, 2805, 3194,
	1751, 2367, 3196, 1384, 2165, 2556, 3337, 3102, 1144, 1144,
	4681, 3135, 2158, 2163, 1144, 1144, 708, 3137, 709, 2361,
	1144, 3083, 3474, 3142, 4094, 3143, 4821, 1973, 4377, 2165,
	1755, 1970, 4361, 3024, 3154, 3925, 4822, 1384, 3030, 4869,
	2229, 3536, 1968, 3101, 3164, 728, 4737, 3188, 2529, 3528,
	3165, 2532, 3167, 4682, 3169, 4725, 3171, 3172, 2190, 4607,
	1971, 1789, 1275, 2194, 2177, 1144, 1144, 1144, 4252, 4546,
	1362, 1144, 1875, 3234, 1687, 1689, 3283, 1020, 3185, 3181,
	1973, 1144, 3468, 2157, 3534, 3199, 2773, 4930, 3210, 3239,
	3025, 2542, 3526, 4906, 1084, 2771, 2159, 3504, 1144, 3241,
	2161, 2544, 2528, 1969, 2786, 3788, 4917, 4304, 3200, 3261,
	3262, 3201, 4088, 1971, 3265, 2964, 923, 4309, 4915, 4272,
	2195, 2178, 4538, 3886, 3205, 2474, 2611, 3220, 4641, 4908,
	4099, 840, 839, 3023, 2191, 4539, 3384, 4310, 1291, 3266,
	3510, 1512, 924, 4958, 2165, 3731, 3332, 3333, 3334, 3202,
	3506, 1706, 1334, 3331, 3329, 3330, 3322, 3323, 3324, 3325,
	3327, 3328, 4730, 2193, 2176, 4845, 4660, 3257, 4295, 4540,
	2116, 4360, 1020, 2084, 2158, 2163, 4520, 1966, 4271, 1085,
	4270, 4038, 3637, 3187, 2813, 2284, 1963, 1289, 3232, 795,
	1144, 1144, 1144, 1144, 909, 841, 842, 3508, 1021, 1282,
	1144, 1144, 1144, 697, 1512, 1144, 1512, 4015, 1799, 1800,
	4095, 2477, 2160, 2175, 3505, 1144, 1266, 1410, 1799, 2127,
	914, 1144, 1972, 1144, 4935, 1022, 4000, 3376, 3377, 39,
	4529, 1794, 1266, 4542, 3420, 3998, 4444, 4590, 797, 3827,
	3509, 4039, 793, 3971, 4143, 3958, 3910, 3480, 3359, 3638,
	1410, 3629, 2124, 2908, 3476, 3073, 4541, 3878, 2159, 1076,
	1970, 1018, 1266, 3067, 3378, 1410, 3052, 2310, 2304, 2298,
	3272, 4642, 1264, 2290, 4543, 1972, 2270, 2269, 1023, 1272,
	3902, 4820, 3771, 1565, 1293, 1078, 3842, 2043, 1264, 2936,
	3400, 1410, 768, 1021, 4698, 3732, 2530, 2891, 4663, 2418,
	2120, 4041, 2153, 4325, 4100, 3049, 2165, 1349, 1304, 1973,
	4362, 3879, 2467, 1798, 4002, 1799, 4498, 1888, 1264, 4496,
	1022, 1893, 4421, 1798, 1968, 3413, 3491, 2160, 2122, 1144,
	3487, 1077, 1273, 3486, 3225, 3383, 3203, 2352, 3880, 3855,
	3877, 3388, 1971, 1144, 3427, 3381, 2164, 3380, 2344, 4001,
	2335, 4307, 4006, 1349, 1729, 1728, 2267, 3409, 2043, 2151,
	3386, 1723, 3469, 3470, 3882, 925, 926, 3414, 3442, 1343,
	2812, 2123, 2811, 1023, 1606, 2810, 1144, 1019, 2809, 3460,
	2164, 1800, 1620, 3489, 2808, 1969, 3493, 1261, 1607, 1082,
	4101, 1800, 1349, 3466, 1618, 3453, 4601, 3449, 3056, 930,
	3451, 3452, 2152, 1261, 1379, 3455, 3433, 3456, 3370, 3457,
	3422, 3423, 3424, 3425, 1349, 3418, 1349, 3387, 3406, 4493,
	1798, 3385, 3398, 3354, 3355, 3356, 1520, 3482, 3401, 3402,
	4286, 2222, 3828, 1261, 4934, 1631, 3490, 1631, 1410, 3495,
	2222, 3829, 3497, 910, 911, 3472, 4144, 1875, 3477, 1349,
	2912, 4433, 2468, 1349, 2037, 3917, 2010, 3392, 3564, 3679,
	3566, 3602, 1560, 3570, 2937, 2938, 2308, 3576, 3521, 4342,
	4643, 3907, 4866, 2040, 4638, 4408, 3551, 3481, 1349, 3903,
	4429, 3028, 3445, 1260, 3525, 3404, 3523, 3405, 1598, 2160,
	3430, 3138, 1349, 3033, 1349, 3544, 1707, 3031, 1410, 1260,
	3439, 3440, 3450, 3441, 1972, 822, 1349, 2339, 3537, 3399,
	3454, 2239, 1681, 4704, 4428, 1639, 4416, 1349, 3461, 3562,
	3999, 4711, 3547, 4602, 4544, 2037, 3447, 3612, 4695, 1260,
	4545, 1654, 1349, 3467, 2764, 4150, 3559, 3844, 2636, 4870,
	1773, 3881, 4341, 3571, 2040, 4732, 2430, 3577, 4871, 1266,
	4000, 3539, 1775, 3393, 3621, 1772, 3645, 4434, 3596, 3998,
	2031, 927, 928, 4417, 3507, 1770, 3421, 4868, 3128, 2767,
	1020, 3517, 3475, 3628, 1349, 1349, 1747, 3128, 4806, 1745,
	3583, 767, 3530, 1717, 1715, 2409, 3597, 1713, 3600, 1682,
	3531, 1711, 3533, 3643, 3532, 4630, 4622, 4383, 4142, 1349,
	4005, 4253, 4705, 3391, 3397, 1264, 3665, 3351, 3636, 3552,
	2766, 3524, 4603, 3747, 3560, 2765, 3706, 3654, 3705, 3443,
	3314, 2959, 3584, 3244, 1619, 1512, 1512, 3573, 3579, 1709,
	3053, 2031, 2976, 3538, 3908, 3540, 1617, 3396, 4002, 912,
	913, 929, 3700, 1703, 2926, 3710, 1410, 3644, 2840, 1410,
	1697, 1695, 1616, 2439, 1408, 3698, 2003, 3585, 1506, 1999,
	1776, 1262, 1657, 4485, 3691, 3589, 3352, 2376, 3572, 2248,
	3639, 2934, 3578, 4001, 3604, 3727, 3726, 1262, 1794, 3625,
	3626, 3179, 1144, 3624, 3178, 3145, 3646, 2456, 1144, 1144,
	1734, 1021, 1144, 1144, 1144, 2379, 1144, 4779, 1512, 828,
	2289, 3962, 2268, 3703, 2072, 1144, 2043, 1262, 1908, 3677,
	1670, 3720, 1589, 3651, 1144, 2635, 1075, 1085, 1022, 1144,
	1261, 3681, 3660, 2295, 3961, 1410, 831, 2432, 3725, 4254,
	3563, 4237, 2431, 4694, 1144, 4318, 3663, 3664, 1774, 182,
	182, 1771, 1410, 3675, 1032, 3394, 3395, 3722, 4323, 4259,
	4250, 1769, 2043, 2043, 1144, 1144, 3728, 1144, 1144, 1144,
	3724, 4189, 1746, 3693, 3996, 1744, 2408, 4037, 4028, 1716,
	1714, 1023, 3974, 1712, 3959, 1144, 3932, 1710, 3692, 1144,
	3930, 2043, 2043, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 3750, 1144, 3733, 3721, 3800, 3909, 3801,
	3704, 3702, 1144, 1144, 2043, 1708, 1260, 3632, 3653, 1144,
	3627, 4843, 3617, 3730, 3086, 3760, 3761, 3078, 3071, 1702,
	1144, 3714, 3060, 3715, 3701, 3716, 1696, 1694, 1615, 3700,
	3046, 1266, 1266, 3045, 3999, 1144, 3026, 1334, 2375, 2857,
	2247, 2852, 3698, 2266, 2264, 2241, 2224, 2192, 2179, 2166,
	2105, 3691, 3839, 2102, 2099, 2096, 2091, 2089, 2085, 3755,
	3757, 2487, 3791, 2037, 2076, 3768, 1410, 3642, 4834, 3574,
	2015, 4859, 4309, 3767, 2233, 2128, 3874, 1241, 1803, 3223,
	4600, 3197, 2040, 3774, 3776, 3777, 3783, 1264, 1264, 3195,
	2487, 3806, 4310, 3790, 3861, 1037, 1039, 1041, 3019, 4742,
	4347, 3798, 4340, 1242, 4339, 3799, 2442, 4266, 4181, 2037,
	2037, 3129, 2147, 1570, 4531, 2888, 1144, 2888, 3803, 2913,
	4524, 4049, 3805, 3835, 3831, 2174, 1767, 1768, 2040, 2040,
	2886, 2366, 2910, 3778, 1144, 2307, 1325, 1324, 2037, 2037,
	2403, 2398, 4741, 2373, 4229, 3840, 3883, 3884, 1512, 4261,
	3693, 3832, 2440, 1810, 1811, 1693, 3797, 2040, 2040, 3851,
	3852, 3896, 3897, 4566, 3899, 3692, 4431, 1144, 1144, 2031,
	4151, 2037, 2916, 3848, 3849, 3224, 4129, 1356, 3502, 3699,
	3694, 3695, 3696, 3697, 1262, 2917, 182, 3900, 3575, 1804,
	2040, 3901, 2939, 4862, 1810, 1811, 1807, 1358, 2441, 1292,
	4853, 3970, 1261, 1261, 2917, 4815, 264, 3044, 4025, 1144,
	3943, 2291, 1369, 2983, 1243, 2031, 2031, 2970, 1812, 3863,
	1325, 3701, 1325, 3969, 1813, 4703, 2981, 2990, 2972, 2921,
	3931, 2919, 3933, 1349, 4688, 4654, 3864, 3846, 1349, 4902,
	4648, 2971, 2920, 4599, 2031, 2031, 4515, 4491, 4409, 4035,
	4027, 4014, 3966, 694, 3871, 2558, 3689, 3631, 1540, 1812,
	1547, 3093, 1553, 2043, 3948, 3950, 2751, 2111, 3947, 2024,
	4734, 1888, 4430, 2962, 1524, 4735, 1523, 2031, 3913, 3964,
	3431, 4933, 2116, 1534, 3972, 3320, 3321, 1810, 1811, 2880,
	2881, 4734, 3892, 4650, 1349, 4874, 4735, 4121, 1260, 1260,
	1144, 3935, 3940, 3973, 2878, 2879, 1680, 2631, 1266, 1144,
	3888, 2002, 1679, 1631, 4051, 3988, 3990, 2880, 2878, 1349,
	1349, 1349, 2666, 3099, 4058, 4034, 2733, 4516, 2934, 4467,
	3984, 1644, 3982, 1649, 4263, 4258, 1349, 1349, 1349, 4257,
	4042, 1749, 4021, 4117, 1748, 3887, 1662, 3779, 1667, 4008,
	3128, 3568, 3565, 1902, 1901, 4043, 1349, 4919, 4881, 2471,
	4062, 4046, 1410, 4692, 1264, 4691, 4690, 4004, 4629, 4628,
	3992, 4583, 4494, 4022, 4031, 4461, 3699, 3694, 3695, 3696,
	3697, 4406, 3481, 4403, 4401, 4297, 4283, 4227, 1410, 3993,
	4176, 1144, 1144, 4073, 4055, 4009, 3928, 1144, 1144, 2043,
	4045, 4074, 1144, 1144, 3981, 1144, 3920, 3635, 3634, 3496,
	1144, 3448, 3184, 1725, 4026, 3176, 3153, 3152, 3151, 3150,
	3077, 1144, 4029, 3047, 2911, 2848, 2844, 2833, 2832, 2821,
	2037, 2560, 2433, 2404, 2397, 2396, 2395, 1144, 4047, 2149,
	2394, 2393, 2325, 2305, 4044, 4053, 4052, 2279, 4115, 2040,
	4086, 4057, 4063, 4064, 2275, 4068, 4065, 3983, 4084, 2274,
	1343, 2342, 4071, 3994, 4072, 4069, 4003, 2273, 4102, 2272,
	2271, 2079, 2078, 2345, 2077, 2075, 1262, 1262, 2014, 1261,
	1766, 1765, 1704, 1584, 1583, 2353, 4103, 2356, 2357, 2358,
	1582, 1581, 1580, 1152, 1579, 1578, 4111, 4096, 1266, 1573,
	1569, 1567, 1566, 1517, 1516, 2728, 1266, 1515, 1401, 1400,
	1410, 1410, 1399, 1410, 1398, 1397, 1361, 1311, 1310, 1309,
	1266, 1308, 1307, 1334, 1306, 1305, 1303, 1298, 1297, 1296,
	1295, 1349, 1349, 1294, 898, 8, 2031, 1224, 2118, 271,
	271, 271, 1410, 700, 701, 1043, 716, 700, 716, 726,
	1029, 4605, 766, 4206, 1264, 4205, 786, 4204, 2429, 93,
	1575, 792, 1264, 860, 87, 2231, 2037, 1266, 271, 1266,
	4085, 4156, 4182, 4183, 4091, 1260, 1264, 3927, 4141, 4809,
	2259, 997, 4731, 3413, 4633, 2040, 2295, 1558, 868, 905,
	4713, 4023, 1349, 3498, 4216, 2995, 271, 4230, 2378, 1705,
	2380, 3408, 1410, 2793, 1349, 4680, 4125, 1349, 4159, 4161,
	3282, 4573, 4376, 4155, 2634, 1906, 3363, 89, 1410, 1128,
	4164, 4153, 4154, 1264, 4148, 1264, 4152, 1174, 4158, 4293,
	4213, 4292, 4213, 4190, 4157, 3912, 4186, 4217, 4165, 3118,
	4290, 4262, 4168, 4264, 4289, 2028, 2030, 1092, 1413, 4753,
	2129, 4231, 4188, 1134, 4232, 4233, 1349, 1349, 2145, 2138,
	2834, 4174, 2710, 1151, 1148, 182, 2032, 2034, 1150, 1261,
	1149, 2033, 2031, 4172, 4180, 1992, 1349, 1261, 1926, 4287,
	1147, 2027, 4033, 3097, 3661, 4235, 1625, 4251, 1410, 1623,
	999, 1261, 2133, 1349, 2554, 2618, 4246, 4265, 4244, 3271,
	1899, 4247, 1108, 4284, 1130, 2615, 1287, 1119, 1107, 3389,
	3368, 3648, 3870, 2466, 878, 3317, 4256, 2621, 1266, 1278,
	2734, 4281, 2726, 2722, 3458, 3087, 4315, 700, 700, 1780,
	1349, 1349, 1349, 1349, 1349, 271, 4390, 1877, 1261, 4326,
	1261, 3098, 1395, 4343, 4249, 1410, 1112, 2552, 1890, 3249,
	4274, 4282, 2476, 1262, 4327, 3655, 4312, 1144, 1144, 1144,
	4275, 4273, 3411, 2827, 4738, 1260, 3787, 3182, 2283, 4280,
	4314, 1240, 1239, 1260, 1264, 1410, 4303, 4288, 4330, 1285,
	1144, 4213, 1238, 1144, 1144, 4719, 4321, 1260, 4346, 4716,
	2221, 4066, 3610, 1144, 2121, 2872, 2043, 2564, 3618, 1124,
	1511, 1144, 1144, 4328, 2422, 3374, 4335, 3680, 1586, 791,
	4438, 4236, 1136, 1862, 3016, 3015, 4594, 1380, 1410, 1378,
	1349, 1377, 1376, 4245, 4890, 4352, 4248, 4956, 3923, 3922,
	3921, 238, 3217, 1801, 1260, 4368, 1260, 2116, 4350, 1793,
	4349, 4356, 235, 237, 1410, 236, 2733, 4298, 3875, 3417,
	4813, 3945, 1144, 3601, 23, 2490, 4363, 22, 21, 116,
	42, 20, 155, 133, 152, 1144, 151, 125, 150, 149,
	148, 147, 154, 4373, 1144, 146, 145, 140, 144, 2043,
	143, 142, 141, 2116, 139, 137, 138, 132, 1144, 1261,
	136, 1144, 135, 4385, 134, 4311, 131, 130, 129, 128,
	127, 126, 124, 4379, 156, 1144, 123, 122, 2864, 1343,
	4412, 4441, 1410, 4399, 121, 4400, 2295, 4396, 4397, 1349,
	120, 119, 2116, 118, 117, 779, 780, 2733, 2733, 1349,
	1349, 61, 4411, 60, 4413, 115, 1334, 113, 114, 19,
	40, 4460, 14, 1262, 2116, 4420, 2116, 65, 2632, 66,
	18, 1262, 4357, 13, 35, 92, 105, 104, 103, 36,
	101, 4484, 100, 2037, 34, 1262, 17, 4452, 4453, 3612,
	16, 15, 98, 4497, 1410, 4472, 4506, 1349, 4463, 2116,
	97, 96, 2040, 2116, 33, 1260, 31, 4462, 11, 4458,
	9, 37, 1987, 12, 5, 1266, 1266, 4468, 4450, 4470,
	187, 4471, 4469, 4464, 186, 189, 185, 188, 91, 4514,
	184, 4476, 1262, 4474, 1262, 183, 4486, 1144, 1144, 90,
	4549, 4550, 29, 4525, 4489, 3207, 4495, 4534, 4510, 4487,
	10, 179, 4507, 4019, 1144, 2043, 82, 4553, 4526, 181,
	4505, 180, 4528, 178, 2803, 3020, 2037, 177, 4490, 176,
	4530, 1264, 1264, 83, 80, 175, 86, 174, 4213, 4213,
	4562, 4563, 81, 85, 4527, 2040, 84, 4533, 4330, 2031,
	4532, 27, 4522, 1144, 6, 1144, 4547, 1144, 64, 7,
	4358, 3707, 108, 109, 38, 78, 77, 1266, 76, 75,
	26, 63, 25, 173, 4561, 4589, 220, 219, 218, 217,
	1144, 216, 1266, 215, 214, 213, 2728, 2728, 208, 2733,
	2733, 2733, 2733, 207, 212, 210, 209, 211, 206, 230,
	229, 223, 4582, 222, 228, 4584, 227, 4617, 226, 225,
	224, 4565, 4571, 221, 232, 205, 4585, 204, 4475, 4588,
	203, 201, 197, 1264, 2164, 196, 200, 202, 2400, 199,
	4213, 198, 2031, 195, 1144, 1144, 231, 72, 1264, 3146,
	4616, 4609, 171, 1262, 1144, 4213, 1261, 1261, 172, 1266,
	4610, 71, 1266, 170, 169, 168, 1349, 4637, 167, 166,
	165, 164, 70, 24, 2, 1, 1349, 1349, 0, 4624,
	0, 2883, 0, 4626, 4657, 0, 1280, 4659, 0, 0,
	0, 0, 2037, 1349, 4645, 4646, 0, 0, 4631, 4625,
	0, 4671, 0, 0, 0, 0, 0, 1144, 1144, 0,
	4652, 2040, 4656, 4644, 4649, 1264, 4651, 1144, 1264, 1300,
	0, 4510, 4213, 0, 0, 4213, 0, 4664, 4665, 0,
	0, 271, 0, 271, 271, 4668, 1329, 271, 1339, 0,
	4667, 4669, 4670, 0, 0, 0, 0, 0, 1261, 1359,
	4684, 4675, 1260, 1260, 0, 0, 0, 786, 4674, 0,
	786, 1144, 1144, 1261, 1144, 4676, 4685, 4677, 0, 0,
	4689, 0, 0, 0, 0, 0, 0, 4706, 2728, 2728,
	2728, 2728, 0, 0, 271, 4710, 271, 271, 1329, 0,
	271, 271, 4718, 4721, 0, 1339, 4740, 4709, 2031, 4736,
	0, 0, 0, 4708, 4722, 4733, 0, 4726, 0, 271,
	0, 1536, 4723, 0, 1512, 4758, 4761, 4701, 4702, 0,
	0, 0, 1144, 1144, 1144, 4762, 4727, 1556, 0, 0,
	1261, 0, 0, 1261, 1563, 4728, 0, 0, 4729, 4743,
	0, 0, 0, 0, 1260, 0, 0, 0, 4749, 0,
	0, 4756, 4757, 1588, 0, 1144, 1339, 0, 0, 1260,
	271, 271, 0, 1329, 0, 0, 4793, 0, 4798, 4778,
	4777, 4775, 4776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 786, 0, 271, 271, 0, 0,
	0, 0, 0, 0, 4816, 4827, 0, 4796, 1651, 0,
	0, 4825, 0, 0, 0, 0, 4839, 4838, 1658, 0,
	4812, 0, 1144, 905, 0, 4794, 4823, 0, 0, 0,
	4824, 0, 1334, 0, 0, 0, 1260, 4844, 0, 1260,
	1262, 1262, 0, 4832, 4837, 4833, 0, 0, 4835, 4836,
	0, 4831, 0, 4860, 4841, 0, 0, 0, 4852, 0,
	0, 4856, 4854, 0, 4808, 0, 4811, 4850, 4851, 0,
	0, 0, 0, 4863, 0, 2164, 0, 1266, 4867, 1266,
	4884, 4864, 4865, 0, 4718, 0, 4740, 4721, 0, 0,
	0, 0, 4883, 4878, 4882, 0, 4873, 0, 4897, 0,
	0, 271, 4885, 0, 4887, 4892, 0, 4895, 4637, 0,
	4886, 0, 0, 0, 0, 0, 0, 0, 0, 4910,
	0, 4896, 0, 271, 0, 0, 0, 4912, 4909, 0,
	0, 0, 1262, 1264, 0, 1264, 0, 0, 0, 0,
	4213, 0, 4213, 0, 0, 0, 0, 1262, 4927, 4891,
	0, 0, 0, 1144, 1144, 4920, 4923, 4925, 0, 0,
	0, 0, 1144, 73, 1144, 1144, 4928, 4921, 4931, 0,
	0, 0, 4937, 0, 4941, 0, 4947, 0, 2116, 4948,
	74, 4952, 0, 0, 4950, 4946, 4951, 4949, 4944, 4916,
	0, 4945, 0, 3099, 0, 4918, 79, 0, 4960, 4955,
	4959, 4961, 0, 0, 0, 4968, 4962, 4938, 4939, 4965,
	4964, 4966, 2733, 2733, 1262, 0, 0, 1262, 0, 4971,
	0, 0, 0, 0, 0, 1144, 4976, 0, 4978, 0,
	0, 4963, 4968, 4973, 4982, 4979, 88, 4981, 0, 0,
	3246, 3247, 4975, 0, 4972, 0, 0, 0, 1261, 0,
	1261, 0, 0, 4940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4977, 0,
	0, 0, 0, 0, 0, 0, 0, 899, 0, 0,
	0, 3038, 0, 0, 3041, 0, 3043, 0, 0, 49,
	0, 110, 0, 0, 0, 0, 94, 107, 0, 0,
	0, 0, 2733, 2733, 2733, 2733, 2733, 2733, 2733, 2733,
	2733, 2733, 2733, 2733, 2733, 2733, 2733, 2733, 2733, 2733,
	2733, 2733, 0, 2733, 700, 0, 0, 0, 0, 0,
	0, 0, 3090, 0, 0, 3090, 0, 0, 0, 0,
	0, 0, 0, 0, 1260, 271, 1260, 271, 0, 1810,
	1811, 271, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 1536, 1329, 2007, 271, 0, 271,
	2013, 0, 1841, 1810, 1811, 0, 271, 1536, 716, 1813,
	0, 0, 4207, 271, 1536, 0, 1536, 0, 0, 0,
	0, 2728, 2728, 0, 0, 0, 1841, 0, 2080, 3375,
	0, 0, 0, 1813, 0, 1866, 0, 0, 0, 0,
	271, 0, 0, 0, 1812, 0, 4200, 271, 3173, 0,
	4193, 3580, 3344, 3345, 3346, 3347, 0, 0, 0, 1866,
	0, 0, 3403, 0, 0, 0, 0, 4191, 1812, 0,
	0, 0, 0, 0, 0, 0, 4195, 3416, 1832, 3605,
	0, 0, 1536, 0, 0, 0, 786, 0, 0, 0,
	3622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4201, 0, 3437, 0, 3630, 0, 0, 0, 0,
	0, 2728, 2728, 2728, 2728, 2728, 2728, 2728, 2728, 2728,
	2728, 2728, 2728, 2728, 2728, 2728, 2728, 2728, 2728, 2728,
	2728, 0, 2728, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4194, 0, 0, 0, 3671, 3672, 1818,
	0, 0, 1262, 0, 1262, 0, 0, 0, 0, 0,
	0, 0, 2116, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 0, 0, 1818, 2116, 0, 0, 2116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 102,
	0, 0, 106, 0, 0, 0, 0, 0, 1840, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 1840, 1842, 0, 0, 900, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2116, 0, 0, 271,
	0, 0, 0, 271, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3320,
	3321, 1833, 3338, 3339, 3340, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 4108, 0, 0, 0, 0, 4196, 194, 0, 271,
	3416, 4197, 0, 271, 0, 240, 0, 0, 0, 271,
	0, 4202, 0, 0, 0, 271, 0, 0, 233, 0,
	0, 1863, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 271, 0, 271, 0, 0, 0, 700, 0, 271,
	0, 0, 0, 0, 3335, 1863, 0, 0, 0, 0,
	0, 786, 0, 4199, 1636, 905, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 1329, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	1839, 786, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 2377, 0, 0, 0,
	0, 271, 271, 1834, 271, 0, 271, 0, 271, 0,
	271, 0, 0, 0, 0, 0, 0, 1129, 112, 3326,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 1408, 0, 0, 0, 2414, 0, 1865, 2415, 0,
	2416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 271, 271, 271, 0, 0, 0, 2116,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	3320, 3321, 0, 3338, 3339, 3340, 0, 0, 0, 766,
	4198, 3011, 0, 786, 0, 3342, 0, 0, 0, 0,
	0, 0, 4107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3764, 0, 0,
	0, 0, 112, 0, 3003, 3001, 0, 0, 0, 4208,
	4209, 3005, 3007, 2997, 3780, 3743, 3744, 3336, 0, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0, 3511,
	3512, 0, 3513, 3514, 3515, 3335, 0, 0, 0, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3979, 0, 0, 0,
	3553, 3554, 0, 3555, 3556, 3557, 0, 0, 0, 0,
	1066, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1086, 0, 0, 0, 3807, 3808, 3809, 3810, 3811,
	3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821,
	3822, 3823, 3824, 3825, 3826, 0, 3830, 0, 0, 0,
	3326, 0, 0, 0, 0, 0, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3873, 1250,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 700, 4059, 4060, 4061, 0, 0, 0, 271, 3337,
	700, 0, 0, 0, 0, 0, 0, 0, 0, 1343,
	4075, 4076, 271, 0, 1810, 1811, 0, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 2999, 0, 3342, 0, 0, 0,
	0, 0, 271, 1339, 0, 3013, 1847, 1841, 0, 0,
	0, 0, 2733, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 3012, 3004, 3002,
	3006, 3008, 2998, 3000, 3014, 0, 0, 0, 3336, 0,
	1866, 0, 0, 3010, 0, 0, 0, 0, 0, 1812,
	0, 271, 1339, 0, 0, 0, 716, 0, 0, 1832,
	2847, 0, 0, 0, 0, 0, 271, 0, 1829, 271,
	0, 2733, 0, 271, 0, 271, 3017, 0, 0, 0,
	1329, 0, 271, 271, 0, 1339, 1339, 2863, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3332,
	3333, 3334, 1863, 0, 0, 74, 3331, 3329, 3330, 3322,
	3323, 3324, 3325, 3327, 3328, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 2900,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	271, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 3320, 3321, 0, 3338, 3339, 3340,
	0, 88, 0, 0, 4170, 4171, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3752, 786, 0, 0,
	3337, 2728, 0, 1851, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 0, 0, 271, 0,
	0, 0, 899, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 1858, 0, 49, 0, 110, 0, 0, 1827,
	1828, 94, 107, 0, 0, 0, 0, 0, 0, 3335,
	0, 271, 3036, 0, 0, 0, 0, 1849, 0, 0,
	2728, 0, 0, 2733, 0, 0, 3018, 0, 0, 0,
	0, 0, 1833, 0, 0, 3009, 0, 0, 1536, 0,
	0, 271, 0, 271, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3082, 95, 0, 0, 2733, 0, 0, 0, 0, 1343,
	2900, 0, 700, 0, 0, 0, 0, 1859, 0, 0,
	0, 3111, 905, 0, 2900, 2900, 0, 0, 0, 2733,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	3332, 3333, 3334, 0, 3326, 271, 1863, 3331, 3329, 3330,
	3322, 3323, 3324, 3325, 3327, 3328, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 1329, 271, 0, 0, 0,
	0, 0, 0, 1536, 0, 1536, 1339, 271, 0, 0,
	1329, 0, 1329, 4351, 1329, 4353, 4354, 4355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 4163, 0, 0, 0, 0,
	3342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 271, 271,
	271, 271, 1329, 0, 4178, 1329, 0, 271, 0, 0,
	271, 0, 2728, 0, 0, 0, 0, 1099, 99, 0,
	0, 1852, 3336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 4402, 0, 112, 0, 0, 0, 271,
	0, 0, 1865, 2728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 102, 0, 0, 106, 2728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 900, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 4030, 0, 0, 1850, 0, 112, 0, 112, 0,
	112, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 241, 4488, 0, 4134, 0, 0, 0, 4133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3337, 1536, 0, 157, 0, 0,
	0, 0, 1086, 112, 112, 0, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 4087, 0, 0, 112,
	240, 112, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 233, 112, 0, 112, 0, 0, 0,
	0, 0, 234, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 0, 0, 4374, 273, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 1634,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	4374, 112, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 4382, 2490, 1829, 0, 0,
	0, 0, 0, 0, 3332, 3333, 3334, 0, 0, 271,
	0, 3331, 3329, 3330, 3322, 3323, 3324, 3325, 3327, 3328,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	700, 0, 0, 0, 0, 700, 0, 0, 700, 0,
	0, 700, 700, 0, 0, 0, 0, 700, 1810, 1811,
	0, 0, 0, 0, 4423, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 2490, 0, 1066, 271, 0, 0,
	1536, 1841, 0, 1835, 1836, 1837, 1838, 0, 1813, 0,
	0, 0, 0, 1818, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1536, 0, 0, 0, 0, 1343,
	1343, 0, 0, 0, 1866, 1886, 271, 0, 0, 1892,
	271, 271, 0, 1812, 0, 0, 1343, 0, 0, 0,
	0, 0, 1851, 1106, 0, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 0, 0, 0, 0, 2900,
	2900, 271, 0, 2007, 0, 0, 0, 0, 0, 2900,
	0, 0, 2013, 0, 0, 0, 0, 0, 1827, 1828,
	2900, 2013, 0, 2900, 2013, 0, 0, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 271, 271, 2007, 0, 271, 0, 0, 0,
	0, 1833, 0, 0, 4296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2007, 4313, 271, 0,
	3543, 3543, 0, 0, 0, 1329, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	4334, 1982, 0, 112, 0, 2900, 4570, 2900, 0, 3569,
	2900, 2007, 0, 0, 2900, 2007, 0, 0, 786, 0,
	0, 0, 73, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 1840, 1842, 74,
	0, 74, 0, 1329, 0, 0, 0, 4593, 0, 0,
	271, 0, 0, 0, 1536, 79, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	3606, 0, 4615, 3608, 2900, 0, 0, 271, 0, 0,
	0, 271, 0, 0, 1339, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 88, 1833, 88, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 3082, 0, 0,
	1329, 0, 271, 1834, 0, 2900, 0, 700, 0, 0,
	0, 0, 0, 0, 2900, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 899, 0, 899, 0,
	1852, 0, 0, 0, 0, 271, 3082, 0, 0, 3082,
	110, 0, 110, 0, 0, 94, 107, 94, 107, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 0,
	1863, 1865, 0, 1854, 1855, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 3713, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 3719, 0, 1860, 1536, 0, 0,
	1329, 271, 0, 271, 0, 95, 0, 95, 0, 1329,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 1850, 0, 0, 0, 0, 1834, 271,
	0, 1829, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3320, 3321, 0, 3338, 3339, 3340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3751, 0, 0, 0, 1865, 3785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 1836, 1837,
	1838, 0, 0, 0, 0, 3320, 3321, 1818, 3338, 3339,
	3340, 0, 2824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3335, 0, 0, 0, 0,
	0, 0, 99, 0, 99, 0, 0, 3320, 3321, 0,
	3338, 3339, 3340, 0, 0, 0, 1851, 0, 0, 1861,
	0, 0, 1086, 0, 1086, 0, 1840, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 271, 271, 0, 0, 0, 0,
	3335, 0, 1827, 1828, 0, 0, 0, 190, 102, 190,
	102, 106, 0, 106, 0, 0, 0, 0, 700, 700,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4635, 3335, 0, 0, 1833, 0, 239, 0, 239,
	3326, 0, 1536, 1536, 0, 900, 0, 900, 0, 0,
	153, 0, 153, 0, 0, 4655, 0, 1536, 1536, 1965,
	1536, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 1106, 1106, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 241, 0, 0,
	1493, 0, 0, 0, 1493, 3326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3342, 0, 0, 1863,
	0, 157, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 3326, 194, 0,
	0, 0, 786, 0, 240, 0, 240, 3343, 0, 0,
	1066, 0, 0, 1066, 1066, 0, 0, 233, 3336, 233,
	0, 0, 0, 0, 0, 0, 234, 0, 234, 1846,
	0, 3342, 0, 0, 1839, 3543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 193, 0, 193, 0, 1834, 4744, 0,
	799, 0, 0, 3342, 4746, 0, 0, 0, 0, 2551,
	2007, 0, 271, 3336, 0, 0, 716, 716, 1339, 0,
	0, 0, 0, 0, 1852, 810, 0, 0, 0, 1086,
	0, 271, 1863, 0, 0, 0, 0, 0, 0, 1886,
	0, 271, 0, 1886, 0, 3336, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 1865, 271, 0, 0, 0,
	0, 271, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2900, 271, 0, 0, 0, 0, 0, 1863, 0, 0,
	3111, 3111, 0, 0, 0, 0, 905, 905, 2900, 0,
	0, 0, 3082, 3082, 0, 0, 905, 2900, 0, 0,
	3337, 0, 0, 0, 0, 0, 1250, 0, 804, 1863,
	0, 0, 0, 0, 0, 816, 0, 1850, 0, 0,
	0, 0, 1982, 271, 0, 0, 0, 0, 0, 809,
	1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3337, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 808, 0,
	0, 0, 0, 0, 0, 0, 0, 3337, 0, 0,
	0, 0, 0, 0, 0, 761, 0, 0, 4126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 0, 0,
	806, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	3332, 3333, 3334, 0, 0, 0, 1813, 3331, 3329, 3330,
	3322, 3323, 3324, 3325, 3327, 3328, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 1536, 0, 271,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 815,
	0, 1812, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 3332, 3333, 3334, 0, 1339,
	1829, 0, 3331, 3329, 3330, 3322, 3323, 3324, 3325, 3327,
	3328, 0, 1339, 0, 0, 0, 0, 0, 0, 2900,
	2900, 0, 3543, 2900, 0, 0, 0, 3332, 3333, 3334,
	4215, 0, 4215, 1536, 3331, 3329, 3330, 3322, 3323, 3324,
	3325, 3327, 3328, 0, 2900, 0, 2013, 0, 0, 0,
	1536, 1536, 271, 2007, 801, 4106, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 2007, 0, 271, 2007,
	0, 271, 0, 3543, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 805, 1818, 0, 2900, 0,
	2900, 271, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 112, 0, 112, 0, 1846, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 760, 0, 0, 0, 2900, 0, 0, 0,
	0, 4300, 0, 0, 0, 1840, 1842, 811, 0, 0,
	0, 0, 271, 803, 0, 0, 0, 0, 0, 0,
	112, 0, 271, 112, 0, 0, 0, 0, 0, 112,
	0, 1827, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 0,
	0, 4215, 0, 0, 1536, 1493, 0, 0, 0, 0,
	800, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 1846, 0, 0, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 762, 1846, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 813, 814, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 2900, 1846, 2013, 0, 0, 4415, 0,
	0, 0, 0, 0, 0, 0, 1354, 271, 0, 0,
	0, 0, 0, 1839, 0, 0, 1493, 4439, 0, 4439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 1091, 1091, 1834, 0, 0, 0,
	0, 0, 0, 786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3543, 0, 1329, 0, 0, 0,
	2551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2007, 0, 271, 0, 746, 0, 0, 0, 0,
	0, 1886, 0, 0, 0, 0, 0, 1538, 0, 1544,
	0, 1550, 0, 0, 1865, 729, 0, 0, 4415, 0,
	730, 0, 0, 0, 0, 0, 2900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4519, 1846, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 0, 0, 0, 1536, 0, 0, 731,
	0, 0, 0, 0, 0, 1846, 0, 0, 4215, 4215,
	732, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	1642, 0, 1647, 0, 0, 0, 0, 0, 271, 271,
	0, 733, 0, 0, 0, 1660, 0, 1665, 0, 0,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 3785, 752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2732, 0, 0, 0, 1536, 0,
	0, 1536, 3543, 4587, 734, 0, 0, 1846, 0, 0,
	4415, 0, 0, 1846, 1256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	4215, 0, 0, 0, 0, 1730, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 4215, 0, 0, 0, 0,
	736, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	266, 266, 696, 0, 0, 0, 0, 271, 0, 0,
	761, 0, 0, 1250, 0, 0, 0, 0, 0, 716,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 1250,
	0, 0, 0, 0, 0, 751, 4300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4215, 0, 271, 4215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 1536, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1887, 0, 0,
	0, 0, 0, 1900, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4439, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 0, 1536, 0, 739, 0, 0, 0,
	0, 0, 0, 2900, 0, 0, 0, 112, 112, 0,
	112, 112, 112, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 759, 0, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 1959, 1959,
	1959, 3785, 0, 0, 0, 0, 0, 0, 112, 112,
	0, 112, 112, 112, 0, 0, 0, 760, 0, 0,
	0, 1536, 0, 0, 0, 741, 0, 0, 0, 0,
	756, 757, 754, 0, 0, 0, 0, 0, 749, 0,
	0, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 743, 0, 750, 0, 0, 0, 0,
	0, 0, 0, 4415, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1250, 762, 0, 1086,
	0, 0, 0, 2900, 0, 0, 0, 1493, 747, 0,
	4215, 0, 4215, 112, 112, 1536, 0, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 0,
	0, 1536, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3111, 0, 1846, 0, 0, 0, 1846, 0, 0,
	2900, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 3111, 0, 0, 0,
	1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 1846, 1846, 1846, 0, 0, 0, 0,
	0, 1846, 0, 1846, 1846, 1846, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 2732, 2732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2703, 2704, 2705, 2706, 2699, 2700, 2701, 2702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 1846, 0, 0, 1846, 1250, 1250,
	1846, 0, 0, 0, 0, 0, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2679, 2680, 2681, 2682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2691, 2692, 2693, 2694, 2687,
	2688, 2689, 2690, 2695, 2696, 2697, 2698, 0, 0, 0,
	0, 0, 1315, 0, 1315, 1315, 0, 0, 0, 2401,
	0, 0, 1846, 0, 0, 3341, 0, 2732, 2732, 2732,
	2732, 0, 0, 0, 1846, 0, 1846, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 0, 0,
	0, 1510, 2675, 2676, 2677, 2678, 2683, 2684, 2685, 2686,
	0, 0, 0, 0, 0, 0, 0, 0, 2465, 0,
	2469, 0, 0, 0, 0, 0, 0, 2483, 0, 0,
	0, 0, 0, 0, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	0, 2533, 0, 2535, 2536, 2537, 2538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 1641, 2562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1887, 0, 0, 0, 2613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 2643, 2646, 2649, 2652, 0, 0, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2724, 0, 2736, 2738, 2743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 0,
	1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0, 0,
	0, 0, 1757, 0, 112, 1493, 0, 0, 0, 1847,
	1841, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 1846, 1846, 0,
	1846, 1829, 0, 1176, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 1250, 0, 1835, 1836, 1837,
	1838, 0, 0, 1250, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 1861,
	0, 0, 1846, 0, 0, 0, 1840, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1858, 1493, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 1997, 0, 0, 0, 0, 1846, 1846, 0,
	2732, 2732, 0, 0, 1846, 1833, 0, 0, 2008, 0,
	1510, 0, 0, 0, 3341, 3341, 0, 0, 1846, 1846,
	0, 0, 3039, 3040, 0, 3042, 1493, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	1859, 1315, 112, 0, 1846, 1267, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732,
	2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732,
	0, 2732, 3341, 3341, 3341, 3341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 3174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 3229, 3230,
	0, 0, 0, 0, 3236, 0, 0, 1824, 1825, 1831,
	1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 3250, 3251, 0, 0, 3295, 0, 2613,
	2281, 3296, 0, 0, 2288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2313, 0, 2313, 0, 0, 0, 0, 0,
	2320, 0, 0, 0, 3260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2551, 0, 0, 0, 0, 0,
	3274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3286, 0, 0,
	0, 0, 0, 0, 1493, 2288, 0, 0, 2349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2385, 0, 2387, 0, 2389, 0, 2391,
	0, 2392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2419, 2420, 2421, 0, 0, 0, 2743,
	2743, 2743, 0, 0, 0, 0, 1846, 1846, 0, 0,
	1846, 3341, 3341, 1846, 1959, 0, 0, 1846, 0, 0,
	0, 0, 3379, 0, 1846, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	1846, 1846, 1846, 1846, 1846, 0, 0, 0, 0, 1267,
	1846, 0, 1846, 0, 0, 3341, 3341, 3341, 3341, 3341,
	3341, 3341, 3341, 3341, 3341, 3341, 3341, 3341, 3341, 3341,
	3341, 3341, 3341, 3341, 3341, 0, 0, 0, 3341, 0,
	0, 1846, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 1267, 0, 0, 0, 1267,
	1810, 1811, 1846, 0, 0, 0, 1267, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 1841, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 3501, 1866, 0, 0, 0,
	0, 0, 0, 1846, 0, 1812, 112, 0, 1267, 0,
	0, 0, 112, 0, 0, 1832, 0, 0, 0, 0,
	1493, 0, 0, 0, 1829, 0, 0, 0, 1267, 0,
	0, 0, 1846, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 1267, 0, 2800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 1836, 1837, 1838, 0, 0, 0, 0, 0, 1267,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1140, 0, 0, 0, 2849, 0, 0,
	1315, 0, 1846, 0, 1315, 0, 1315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1842, 0, 0, 2301, 0, 0, 0, 0, 1493, 1493,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 270,
	270, 270, 0, 0, 0, 1827, 1828, 0, 0, 0,
	0, 0, 1846, 1846, 0, 0, 0, 1846, 1846, 0,
	1493, 1846, 1846, 0, 0, 0, 1846, 0, 829, 0,
	1846, 0, 0, 0, 0, 1846, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2732, 0, 0, 0, 0, 0, 829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2732,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 2483, 0, 0, 0, 0, 0, 3738, 3739, 0,
	0, 3742, 0, 0, 0, 3745, 0, 0, 0, 0,
	0, 0, 0, 0, 3749, 0, 0, 0, 0, 0,
	0, 0, 0, 3756, 0, 0, 0, 0, 3379, 0,
	0, 0, 2288, 0, 0, 0, 1493, 1839, 0, 0,
	0, 2301, 0, 3769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 3792, 3793, 1263, 3794, 3795, 3796, 0,
	0, 0, 0, 0, 0, 1267, 0, 1267, 0, 0,
	746, 0, 0, 0, 3802, 0, 0, 0, 3804, 0,
	0, 0, 1267, 1493, 0, 0, 3144, 0, 0, 0,
	729, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 3155, 0, 3158, 1865, 0,
	0, 3833, 3834, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3845,
	0, 0, 0, 0, 731, 0, 0, 1846, 1846, 1846,
	0, 0, 0, 0, 3854, 732, 0, 0, 1846, 1846,
	3341, 2732, 0, 0, 0, 0, 1493, 1846, 0, 0,
	1846, 0, 0, 0, 0, 0, 733, 0, 0, 3190,
	1510, 3192, 1510, 0, 0, 0, 0, 0, 3198, 0,
	0, 0, 1493, 1267, 0, 0, 0, 0, 752, 0,
	0, 3341, 2732, 0, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 1846, 734,
	1267, 0, 1315, 0, 0, 0, 1846, 2732, 0, 0,
	3226, 0, 0, 0, 1846, 3904, 0, 0, 0, 1106,
	0, 0, 735, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3915, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 736, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 0, 3944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3341, 0,
	0, 1267, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 0, 0, 0, 0, 0, 0, 748,
	1846, 3341, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 4054, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 758,
	0, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	1267, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 740, 0, 0, 0, 0, 0, 0, 0,
	1267, 1267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 1106, 1106, 0, 1267, 0, 1267, 1267, 1267,
	4104, 4105, 760, 0, 0, 0, 4109, 4110, 0, 0,
	741, 4113, 4114, 0, 0, 756, 757, 754, 0, 4118,
	0, 0, 0, 749, 0, 0, 742, 0, 0, 0,
	4122, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 4127, 0, 3426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 270, 270, 1846, 0, 270, 743, 0,
	750, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 0, 0, 0, 0, 1315, 0, 0,
	0, 1510, 1510, 745, 0, 0, 0, 0, 753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1106, 0, 762, 0, 270, 0, 270, 270, 0, 0,
	270, 270, 3471, 747, 2044, 2044, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	0, 0, 0, 3520, 3522, 0, 0, 2301, 0, 0,
	0, 0, 1847, 1841, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	270, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 1846, 0, 1866, 0, 0, 0,
	0, 0, 1810, 1811, 0, 1812, 270, 270, 0, 1267,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1841, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 1267, 0, 0, 0, 0, 1832, 3619, 1267,
	0, 0, 3623, 0, 0, 0, 1829, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 1836, 1837, 1838, 0, 1267, 0, 0, 0, 0,
	1818, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 3741, 0, 0, 0, 0, 3676, 0, 0, 1851,
	0, 0, 1861, 0, 0, 0, 4369, 4370, 4371, 1840,
	1842, 0, 1835, 1836, 1837, 1838, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 1857, 0, 1858, 2483,
	0, 0, 4380, 4381, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4389, 4392, 0, 1849, 1810, 1811, 0, 0, 1267, 1267,
	0, 0, 3723, 0, 1510, 0, 0, 0, 1833, 0,
	0, 1840, 1842, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	3736, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 1859, 4440, 0, 0, 0, 0, 1812,
	0, 0, 0, 4448, 0, 0, 0, 0, 0, 1832,
	1833, 1848, 0, 0, 0, 0, 2044, 4456, 1829, 0,
	1091, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3740, 0, 1267, 0, 1839, 0, 0,
	0, 0, 0, 0, 1863, 1981, 0, 1263, 0, 0,
	0, 270, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	1834, 0, 0, 0, 1818, 0, 0, 270, 1981, 270,
	0, 0, 0, 0, 0, 0, 829, 0, 0, 0,
	0, 0, 0, 829, 0, 1267, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 1840, 1842, 0, 1267, 270, 1865, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 1267, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4592, 0, 0, 0, 4596, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0,
	2609, 0, 0, 0, 2610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 1091, 0, 1863, 0, 0, 0,
	0, 0, 0, 4653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 2301, 0, 0, 0, 2483, 0, 0,
	0, 0, 0, 0, 0, 0, 4392, 0, 0, 270,
	0, 0, 2301, 829, 1834, 0, 0, 0, 0, 0,
	0, 0, 4018, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2301, 0, 0,
	0, 0, 4036, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 0, 0, 1810,
	1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 270,
	0, 0, 1865, 270, 0, 0, 0, 0, 0, 270,
	0, 1847, 1841, 0, 0, 270, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 270, 0, 270, 0, 0, 0, 0, 0, 270,
	0, 4774, 4774, 4774, 4089, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 4797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 270, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 829, 270, 0, 270, 0, 270, 0, 270, 0,
	270, 4774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	1267, 0, 270, 270, 270, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 1861, 0, 1267, 0, 0, 0, 0, 1840, 1842,
	0, 0, 0, 0, 0, 1267, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 1857, 0, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 0,
	2044, 0, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	1267, 0, 4774, 4932, 0, 0, 0, 1833, 0, 0,
	0, 4936, 0, 4234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1811, 0, 0, 0, 1267, 0, 0, 0,
	0, 2044, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	1848, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 2301, 0, 0, 1812, 1267, 0, 1267,
	0, 0, 0, 4322, 0, 0, 1832, 0, 0, 0,
	0, 0, 1263, 0, 0, 1829, 0, 0, 0, 0,
	0, 1267, 0, 0, 0, 0, 1839, 0, 1263, 0,
	0, 0, 1267, 0, 0, 0, 1267, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 270, 0, 0, 0, 0, 0, 0, 0,
	3235, 0, 0, 0, 0, 1267, 1852, 1267, 0, 0,
	0, 1267, 0, 0, 0, 0, 0, 0, 0, 1267,
	0, 1835, 1836, 1837, 1838, 0, 0, 0, 0, 0,
	1267, 1818, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 270, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 270,
	0, 0, 1267, 270, 0, 270, 0, 0, 0, 0,
	0, 0, 270, 270, 0, 0, 0, 0, 0, 0,
	1840, 1842, 270, 0, 0, 0, 0, 1267, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4425, 0,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 1850,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0, 1833,
	270, 0, 0, 4132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 1267,
	0, 0, 1267, 0, 2301, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 829, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 4560,
	1510, 270, 0, 829, 0, 2044, 2044, 0, 1839, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 2044, 2044, 0, 0, 0, 0,
	0, 0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 1841, 2044, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 270, 0, 270, 0, 0, 1865,
	0, 0, 0, 0, 1267, 1267, 0, 270, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 1153, 0, 0, 0, 0, 0, 1829, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 270,
	270, 270, 0, 0, 0, 4658, 0, 270, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 272, 272, 272,
	0, 0, 0, 0, 0, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 272, 0, 0, 270,
	0, 0, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 4712,
	0, 0, 1851, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 1813, 0, 1857,
	0, 1858, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 0, 0, 4751, 1267, 0, 0, 0,
	0, 1267, 0, 1866, 0, 0, 1849, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 1832, 0, 0, 0, 2044, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 1267, 4817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 1267, 1267, 0, 3228, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 1267,
	1267, 1267, 0, 0, 0, 0, 0, 1835, 1836, 1837,
	1838, 0, 0, 0, 0, 0, 0, 1818, 0, 1267,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 1267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 1840, 1842, 0, 1263,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1263, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 270, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 0, 0, 0, 270, 0, 0, 1267,
	270, 270, 0, 1267, 1267, 0, 1267, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1267, 1267, 0, 0, 0, 1863,
	0, 270, 0, 1850, 0, 1267, 0, 0, 276, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	1267, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 270, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 1981, 1839, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 1267, 270, 0,
	1267, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 1267, 0, 821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 821, 0, 0, 0, 0, 0, 0, 0, 1267,
	1267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 1267,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 0, 0, 0, 1267, 0, 829, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 1267, 1267, 1267, 1267, 1267, 0, 0,
	0, 0, 1263, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 0, 0, 270, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 272, 272, 0, 0, 272, 0, 1352, 0, 0,
	0, 1267, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 270, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 1352, 272, 272, 0, 1352, 272, 272,
	0, 0, 0, 0, 1352, 0, 0, 0, 0, 270,
	0, 0, 2044, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 1267, 0, 0, 1352, 0, 272, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 0, 1352, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1267, 0, 1352,
	1267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1263, 1263, 0, 1352, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1267, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 0, 1267, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	1267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 1263, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 272, 272, 272, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	1411, 272, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 1350, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 272, 1843,
	1844, 1845, 1854, 1855, 1856, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 1847, 1841,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 1352, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 1350, 0, 0, 0, 0, 0, 0,
	1350, 1832, 0, 0, 0, 0, 0, 0, 1352, 0,
	1829, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1267, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1263, 0, 0, 0, 0, 0, 0, 0, 1263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 272, 1861, 1352,
	1352, 272, 270, 0, 0, 1840, 1842, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 270, 1857, 0, 1858, 0, 0, 0, 0, 0,
	0, 1827, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 1145, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 272, 0, 0, 1833, 0, 0, 272, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 272, 270, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 270, 0, 0, 0, 1352, 0, 1352, 1859,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 1352, 1352,
	0, 1981, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 1352, 272, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 1352, 1352, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	272, 0, 272, 0, 272, 0, 272, 0, 272, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 849, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	272, 272, 272, 272, 851, 0, 0, 0, 0, 852,
	0, 821, 0, 1852, 0, 0, 0, 0, 821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 853, 0,
	870, 0, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 0, 0, 0, 0,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 879, 270, 0, 0, 0, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 877, 0, 1411, 1824, 1825, 1831, 1853,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 0, 0, 850, 1352, 0, 0,
	3754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 857,
	0, 0, 858, 0, 0, 0, 0, 0, 1981, 1981,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 1350, 0, 0,
	272, 0, 0, 880, 0, 0, 1411, 0, 0, 0,
	1981, 0, 0, 875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 272, 0, 0,
	0, 272, 0, 272, 859, 0, 0, 0, 0, 0,
	272, 272, 0, 0, 0, 861, 1352, 1352, 0, 0,
	272, 0, 1981, 0, 270, 1981, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 1350, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 862, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 1350, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 871, 0, 0, 0, 272, 0,
	1350, 0, 1350, 1350, 1350, 0, 760, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 848,
	0, 872, 0, 0, 272, 0, 821, 0, 0, 0,
	863, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 869, 272, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 864, 1352, 0, 0, 865, 884, 0, 883,
	0, 0, 0, 866, 270, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 867, 0, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 885, 0,
	882, 0, 0, 0, 0, 0, 762, 0, 0, 272,
	0, 272, 0, 1352, 0, 0, 0, 0, 272, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 0, 0, 0, 0, 0,
	1351, 270, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 1352, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 272, 0, 0, 0, 1352, 0, 0,
	0, 0, 0, 0, 0, 1847, 1841, 0, 0, 0,
	0, 0, 272, 1813, 272, 0, 1412, 0, 0, 0,
	1412, 0, 1860, 0, 0, 272, 0, 1351, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	1981, 0, 1981, 1351, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 272, 272, 272,
	0, 0, 0, 0, 0, 272, 0, 0, 272, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 0, 0, 1351, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	1411, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1351, 0, 1851, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 1858, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 1350, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 821, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 1350, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 1350, 0,
	0, 1865, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 1350, 0, 0, 0, 1352, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 272, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	272, 272, 0, 1352, 272, 0, 0, 3298, 0, 0,
	0, 272, 0, 0, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1352, 272, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 1352, 0, 1352, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 272, 1352, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 1352, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 1352, 1352, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 272,
	1352, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 1351, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 1351, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1351, 0, 1351, 1351,
	1351, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	1412, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 1350, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 821, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 0, 1352, 0, 0, 0, 0, 1352,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 1350, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 272,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 1352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	1352, 1352, 1352, 0, 1411, 0, 0, 1411, 0, 1351,
	1351, 0, 1847, 1841, 0, 0, 0, 1352, 1352, 1352,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	0, 272, 0, 1352, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 1412, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 1352,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1351, 0, 0, 0,
	1835, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 1352, 0, 1352, 0, 1351, 0, 0, 1851,
	0, 0, 1861, 0, 0, 0, 0, 0, 0, 1840,
	1842, 0, 1352, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 1857, 1351, 1858, 0,
	0, 0, 0, 0, 1411, 1827, 1828, 0, 0, 0,
	0, 0, 1351, 0, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	272, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 1352, 272, 0, 1352, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 1352, 1352, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	272, 0, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 1350, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 1352, 1352, 1352, 1352, 1352, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 1350, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 1352, 0, 0, 1350, 1350, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 1352, 0, 0, 0, 0,
	1411, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 3297, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	1352, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1352, 0, 0, 1352, 0,
	0, 1412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 1411,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 272, 272, 0, 1350,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 1350, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 1810, 1811,
	0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0,
	0, 0, 0, 0, 1350, 1350, 0, 0, 0, 0,
	1847, 1841, 0, 0, 0, 0, 1351, 0, 1813, 0,
	0, 0, 0, 0, 1350, 0, 0, 1860, 0, 0,
	0, 0, 272, 0, 0, 0, 1411, 1352, 1351, 0,
	1351, 1350, 0, 0, 1866, 0, 0, 1352, 1352, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 1832, 1352, 0, 0, 0, 0, 0,
	0, 0, 1829, 1351, 0, 0, 0, 1351, 1350, 1350,
	1350, 1350, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1351, 0, 1351, 0,
	0, 0, 1412, 1411, 0, 0, 272, 0, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 1835, 1836,
	1837, 1838, 0, 0, 0, 0, 1351, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 1350, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 1851, 1351, 1351,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 1857, 0, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 0, 0, 1833, 1350, 0, 0,
	1412, 0, 0, 1412, 0, 0, 0, 1350, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 1350, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 1810, 1811, 0, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1847, 1841, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	1412, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 1824, 1825,
	1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 3294, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 0,
	1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 1861, 0, 0, 1847,
	1841, 0, 0, 1840, 1842, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	1857, 0, 1858, 0, 0, 0, 0, 1351, 0, 1827,
	1828, 0, 1351, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 1351, 1351, 1351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	1351, 1351, 1351, 0, 0, 0, 1863, 1835, 1836, 1837,
	1838, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1351, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	0, 0, 1412, 0, 0, 0, 1851, 0, 0, 1861,
	0, 1839, 1847, 1841, 0, 0, 1840, 1842, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 1857, 1834, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	1849, 1852, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 1412, 1412, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 1351, 1351, 0, 0, 1863,
	1835, 1836, 1837, 1838, 0, 0, 1412, 0, 0, 0,
	1818, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 3293, 1851,
	0, 0, 1861, 0, 1839, 0, 1351, 0, 0, 1840,
	1842, 0, 0, 0, 0, 0, 1412, 0, 1351, 0,
	0, 1351, 0, 0, 0, 0, 1857, 1834, 1858, 0,
	0, 0, 1412, 0, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	1351, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 1351, 1351, 1351, 1351, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 1824, 1825, 1831,
	1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 0, 0, 0, 0, 0, 0, 1412,
	0, 3292, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 1351, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 2610, 0, 0, 0, 1412, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1351, 1351, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 1414, 287, 288, 1415, 1416, 1417, 1351, 1418, 642,
	1419, 1420, 1421, 1422, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	1423, 647, 299, 300, 301, 302, 303, 304, 1424, 1425,
	0, 305, 648, 649, 650, 1426, 306, 307, 651, 1427,
	1353, 1428, 308, 309, 310, 311, 312, 313, 314, 0,
	1429, 316, 317, 318, 315, 319, 1430, 320, 0, 321,
	322, 323, 324, 325, 326, 1431, 327, 328, 329, 1208,
	330, 331, 332, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	1439, 343, 339, 341, 1440, 344, 342, 345, 1441, 346,
	347, 348, 1442, 1443, 349, 350, 351, 1444, 352, 353,
	1445, 354, 355, 356, 1446, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 1447, 277, 1448, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 1449, 375, 376, 377,
	1450, 1451, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1452, 390, 660,
	1453, 661, 391, 1454, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 1211, 397, 398, 1455, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1456, 1210, 407, 665, 666, 1457, 667, 1458, 409, 410,
	1212, 668, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1459, 421, 423,
	422, 1460, 424, 669, 1215, 425, 426, 1216, 1461, 427,
	428, 429, 430, 431, 432, 435, 1462, 1463, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1464, 279, 1219, 477, 478,
	1465, 670, 479, 671, 481, 482, 1466, 0, 483, 0,
	1467, 1468, 485, 486, 487, 1469, 1470, 488, 489, 672,
	1220, 490, 1221, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 1471, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 1472, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 1473,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 1474, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 1475, 567, 568,
	566, 569, 570, 571, 1476, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 1477, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 1478,
	599, 600, 0, 596, 587, 1479, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 1480, 609, 683, 684, 685,
	686, 1481, 618, 1482, 610, 611, 612, 687, 613, 688,
	1483, 614, 615, 616, 617, 0, 619, 620, 1484, 1485,
	621, 622, 623, 625, 626, 624, 627, 1486, 628, 1487,
	0, 629, 630, 631, 689, 690, 691, 1488, 633, 632,
	634, 692, 635, 636, 1489, 1490, 1491, 1492, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 2778, 0, 0, 0, 0, 0, 0, 0, 2779,
	280, 282, 281, 283, 284, 285, 286, 1414, 287, 288,
	1415, 1416, 1417, 0, 1418, 642, 1419, 1420, 1421, 1422,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 1423, 647, 299, 300,
	301, 302, 303, 304, 1424, 1425, 0, 305, 648, 649,
	650, 1426, 306, 307, 651, 1427, 1353, 1428, 308, 309,
	310, 311, 312, 313, 314, 0, 1429, 316, 317, 318,
	315, 319, 1430, 320, 0, 321, 322, 323, 324, 325,
	326, 1431, 327, 328, 329, 1208, 330, 331, 332, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 1439, 343, 339, 341,
	1440, 344, 342, 345, 1441, 346, 347, 348, 1442, 1443,
	349, 350, 351, 1444, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 1447, 277, 1448,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 1449, 375, 376, 377, 1450, 1451, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1452, 390, 660, 1453, 661, 391, 1454,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 1211,
	397, 398, 1455, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1456, 1210, 407, 665,
	666, 1457, 667, 1458, 409, 410, 1212, 668, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1459, 421, 423, 422, 1460, 424, 669,
	1215, 425, 426, 1216, 1461, 427, 428, 429, 430, 431,
	432, 435, 1462, 1463, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1464, 279, 1219, 477, 478, 1465, 670, 479, 671,
	481, 482, 1466, 0, 483, 0, 1467, 1468, 485, 486,
	487, 1469, 1470, 488, 489, 672, 1220, 490, 1221, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 1471, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 1472, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 1473, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 1474, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 1475, 567, 568, 566, 569, 570, 571,
	1476, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 1477, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 1478, 599, 600, 0, 596,
	587, 1479, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 1480, 609, 683, 684, 685, 686, 1481, 618, 1482,
	610, 611, 612, 687, 613, 688, 1483, 614, 615, 616,
	617, 0, 619, 620, 1484, 1485, 621, 622, 623, 625,
	626, 624, 627, 1486, 628, 1487, 0, 629, 630, 631,
	689, 690, 691, 1488, 633, 632, 634, 692, 635, 636,
	1489, 1490, 1491, 1492, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 3763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3765, 280, 282, 281, 283, 284, 285,
	286, 1414, 287, 288, 1415, 1416, 1417, 0, 1418, 642,
	1419, 1420, 1421, 1422, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	1423, 647, 299, 300, 301, 302, 303, 304, 1424, 1425,
	0, 305, 648, 649, 650, 1426, 306, 307, 651, 1427,
	1353, 1428, 308, 309, 310, 311, 312, 313, 314, 0,
	1429, 316, 317, 318, 315, 319, 1430, 320, 0, 321,
	322, 323, 324, 325, 326, 1431, 327, 328, 329, 1208,
	330, 331, 332, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	1439, 343, 339, 341, 1440, 344, 342, 345, 1441, 346,
	347, 348, 1442, 1443, 349, 350, 351, 1444, 352, 353,
	1445, 354, 355, 356, 1446, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 1447, 277, 1448, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 1449, 375, 376, 377,
	1450, 1451, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1452, 390, 660,
	1453, 661, 391, 1454, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 1211, 397, 398, 1455, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1456, 1210, 407, 665, 666, 1457, 667, 1458, 409, 410,
	1212, 668, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1459, 421, 423,
	422, 1460, 424, 669, 1215, 425, 426, 1216, 1461, 427,
	428, 429, 430, 431, 432, 435, 1462, 1463, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1464, 279, 1219, 477, 478,
	1465, 670, 479, 671, 481, 482, 1466, 0, 483, 0,
	1467, 1468, 485, 486, 487, 1469, 1470, 488, 489, 672,
	1220, 490, 1221, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 1471, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 1472, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 1473,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 1474, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 1475, 567, 568,
	566, 569, 570, 571, 1476, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 1477, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 1478,
	599, 600, 0, 596, 587, 1479, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 1480, 609, 683, 684, 685,
	686, 1481, 618, 1482, 610, 611, 612, 687, 613, 688,
	1483, 614, 615, 616, 617, 0, 619, 620, 1484, 1485,
	621, 622, 623, 625, 626, 624, 627, 1486, 628, 1487,
	0, 629, 630, 631, 689, 690, 691, 1488, 633, 632,
	634, 692, 635, 636, 1489, 1490, 1491, 1492, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4162, 280, 282, 281, 283, 284, 285, 286, 1414,
	287, 288, 1415, 1416, 1417, 0, 1418, 642, 1419, 1420,
	1421, 1422, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 1423, 647,
	299, 300, 301, 302, 303, 304, 1424, 1425, 0, 305,
	648, 649, 650, 1426, 306, 307, 651, 1427, 1353, 1428,
	308, 309, 310, 311, 312, 313, 314, 0, 1429, 316,
	317, 318, 315, 319, 1430, 320, 0, 321, 322, 323,
	324, 325, 326, 1431, 327, 328, 329, 1208, 330, 331,
	332, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 1439, 343,
	339, 341, 1440, 344, 342, 345, 1441, 346, 347, 348,
	1442, 1443, 349, 350, 351, 1444, 352, 353, 1445, 354,
	355, 356, 1446, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 1447,
	277, 1448, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 1449, 375, 376, 377, 1450, 1451,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1452, 390, 660, 1453, 661,
	391, 1454, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 1455, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 1456, 1210,
	407, 665, 666, 1457, 667, 1458, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1459, 421, 423, 422, 1460,
	424, 669, 1215, 425, 426, 1216, 1461, 427, 428, 429,
	430, 431, 432, 435, 1462, 1463, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1464, 279, 1219, 477, 478, 1465, 670,
	479, 671, 481, 482, 1466, 0, 483, 0, 1467, 1468,
	485, 486, 487, 1469, 1470, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1471, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	1472, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 1473, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	1474, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 1475, 567, 568, 566, 569,
	570, 571, 1476, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	1477, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 1478, 599, 600,
	0, 596, 587, 1479, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 1480, 609, 683, 684, 685, 686, 1481,
	618, 1482, 610, 611, 612, 687, 613, 688, 1483, 614,
	615, 616, 617, 0, 619, 620, 1484, 1485, 621, 622,
	623, 625, 626, 624, 627, 1486, 628, 1487, 0, 629,
	630, 631, 689, 690, 691, 1488, 633, 632, 634, 692,
	635, 636, 1489, 1490, 1491, 1492, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4160,
	280, 282, 281, 283, 284, 285, 286, 1414, 287, 288,
	1415, 1416, 1417, 0, 1418, 642, 1419, 1420, 1421, 1422,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 1423, 647, 299, 300,
	301, 302, 303, 304, 1424, 1425, 0, 305, 648, 649,
	650, 1426, 306, 307, 651, 1427, 1353, 1428, 308, 309,
	310, 311, 312, 313, 314, 0, 1429, 316, 317, 318,
	315, 319, 1430, 320, 0, 321, 322, 323, 324, 325,
	326, 1431, 327, 328, 329, 1208, 330, 331, 332, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 1439, 343, 339, 341,
	1440, 344, 342, 345, 1441, 346, 347, 348, 1442, 1443,
	349, 350, 351, 1444, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 1447, 277, 1448,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 1449, 375, 376, 377, 1450, 1451, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1452, 390, 660, 1453, 661, 391, 1454,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 1211,
	397, 398, 1455, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1456, 1210, 407, 665,
	666, 1457, 667, 1458, 409, 410, 1212, 668, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1459, 421, 423, 422, 1460, 424, 669,
	1215, 425, 426, 1216, 1461, 427, 428, 429, 430, 431,
	432, 435, 1462, 1463, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1464, 279, 1219, 477, 478, 1465, 670, 479, 671,
	481, 482, 1466, 0, 483, 0, 1467, 1468, 485, 486,
	487, 1469, 1470, 488, 489, 672, 1220, 490, 1221, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 1471, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 1472, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 1473, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 1474, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 1475, 567, 568, 566, 569, 570, 571,
	1476, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 1477, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 1478, 599, 600, 0, 596,
	587, 1479, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 1480, 609, 683, 684, 685, 686, 1481, 618, 1482,
	610, 611, 612, 687, 613, 688, 1483, 614, 615, 616,
	617, 0, 619, 620, 1484, 1485, 621, 622, 623, 625,
	626, 624, 627, 1486, 628, 1487, 0, 629, 630, 631,
	689, 690, 691, 1488, 633, 632, 634, 692, 635, 636,
	1489, 1490, 1491, 1492, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4375, 280, 282, 281, 283, 284, 285, 286,
	1414, 287, 288, 1415, 1416, 1417, 0, 1418, 642, 1419,
	1420, 1421, 1422, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 1423,
	647, 299, 300, 301, 302, 303, 304, 1424, 1425, 0,
	305, 648, 649, 650, 1426, 306, 307, 651, 1427, 1353,
	1428, 308, 309, 310, 311, 312, 313, 314, 0, 1429,
	316, 317, 318, 315, 319, 1430, 320, 0, 321, 322,
	323, 324, 325, 326, 1431, 327, 328, 329, 1208, 330,
	331, 332, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 1439,
	343, 339, 341, 1440, 344, 342, 345, 1441, 346, 347,
	348, 1442, 1443, 349, 350, 351, 1444, 352, 353, 1445,
	354, 355, 356, 1446, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	1447, 277, 1448, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 1449, 375, 376, 377, 1450,
	1451, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1452, 390, 660, 1453,
	661, 391, 1454, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 1211, 397, 398, 1455, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1456,
	1210, 407, 665, 666, 1457, 667, 1458, 409, 410, 1212,
	668, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1459, 421, 423, 422,
	1460, 424, 669, 1215, 425, 426, 1216, 1461, 427, 428,
	429, 430, 431, 432, 435, 1462, 1463, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1464, 279, 1219, 477, 478, 1465,
	670, 479, 671, 481, 482, 1466, 0, 483, 0, 1467,
	1468, 485, 486, 487, 1469, 1470, 488, 489, 672, 1220,
	490, 1221, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 1471, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 1472, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 1473, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 1474, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 1475, 567, 568, 566,
	569, 570, 571, 1476, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 1477, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 1478, 599,
	600, 0, 596, 587, 1479, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 1480, 609, 683, 684, 685, 686,
	1481, 618, 1482, 610, 611, 612, 687, 613, 688, 1483,
	614, 615, 616, 617, 0, 619, 620, 1484, 1485, 621,
	622, 623, 625, 626, 624, 627, 1486, 628, 1487, 0,
	629, 630, 631, 689, 690, 691, 1488, 633, 632, 634,
	692, 635, 636, 1489, 1490, 1491, 1492, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4243, 280, 282, 281, 283,
	284, 285, 286, 1414, 287, 288, 1415, 1416, 1417, 0,
	1418, 642, 1419, 1420, 1421, 1422, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 1423, 647, 299, 300, 301, 302, 303, 304,
	1424, 1425, 0, 305, 648, 649, 650, 1426, 306, 307,
	651, 1427, 1353, 1428, 308, 309, 310, 311, 312, 313,
	314, 0, 1429, 316, 317, 318, 315, 319, 1430, 320,
	0, 321, 322, 323, 324, 325, 326, 1431, 327, 328,
	329, 1208, 330, 331, 332, 1432, 1433, 1435, 1434, 1436,
	1437, 1438, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 1439, 343, 339, 341, 1440, 344, 342, 345,
	1441, 346, 347, 348, 1442, 1443, 349, 350, 351, 1444,
	352, 353, 1445, 354, 355, 356, 1446, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 1447, 277, 1448, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 1449, 375,
	376, 377, 1450, 1451, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1452,
	390, 660, 1453, 661, 391, 1454, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 1455, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 1456, 1210, 407, 665, 666, 1457, 667, 1458,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1459,
	421, 423, 422, 1460, 424, 669, 1215, 425, 426, 1216,
	1461, 427, 428, 429, 430, 431, 432, 435, 1462, 1463,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1464, 279, 1219,
	477, 478, 1465, 670, 479, 671, 481, 482, 1466, 0,
	483, 0, 1467, 1468, 485, 486, 487, 1469, 1470, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1471, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 1472, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 1473, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 1474, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 1475,
	567, 568, 566, 569, 570, 571, 1476, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 1477, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 1478, 599, 600, 0, 596, 587, 1479, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 1480, 609, 683,
	684, 685, 686, 1481, 618, 1482, 610, 611, 612, 687,
	613, 688, 1483, 614, 615, 616, 617, 0, 619, 620,
	1484, 1485, 621, 622, 623, 625, 626, 624, 627, 1486,
	628, 1487, 0, 629, 630, 631, 689, 690, 691, 1488,
	633, 632, 634, 692, 635, 636, 1489, 1490, 1491, 1492,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4090, 280,
	282, 281, 283, 284, 285, 286, 1414, 287, 288, 1415,
	1416, 1417, 0, 1418, 642, 1419, 1420, 1421, 1422, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 1423, 647, 299, 300, 301,
	302, 303, 304, 1424, 1425, 0, 305, 648, 649, 650,
	1426, 306, 307, 651, 1427, 1353, 1428, 308, 309, 310,
	311, 312, 313, 314, 0, 1429, 316, 317, 318, 315,
	319, 1430, 320, 0, 321, 322, 323, 324, 325, 326,
	1431, 327, 328, 329, 1208, 330, 331, 332, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 1439, 343, 339, 341, 1440,
	344, 342, 345, 1441, 346, 347, 348, 1442, 1443, 349,
	350, 351, 1444, 352, 353, 1445, 354, 355, 356, 1446,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 1447, 277, 1448, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 1449, 375, 376, 377, 1450, 1451, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1452, 390, 660, 1453, 661, 391, 1454, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 1455, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1456, 1210, 407, 665, 666,
	1457, 667, 1458, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1459, 421, 423, 422, 1460, 424, 669, 1215,
	425, 426, 1216, 1461, 427, 428, 429, 430, 431, 432,
	435, 1462, 1463, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1464, 279, 1219, 477, 478, 1465, 670, 479, 671, 481,
	482, 1466, 0, 483, 0, 1467, 1468, 485, 486, 487,
	1469, 1470, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 1471, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 1472, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 1473, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 1474, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 1475, 567, 568, 566, 569, 570, 571, 1476,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 1477, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 1478, 599, 600, 0, 596, 587,
	1479, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	1480, 609, 683, 684, 685, 686, 1481, 618, 1482, 610,
	611, 612, 687, 613, 688, 1483, 614, 615, 616, 617,
	0, 619, 620, 1484, 1485, 621, 622, 623, 625, 626,
	624, 627, 1486, 628, 1487, 0, 629, 630, 631, 689,
	690, 691, 1488, 633, 632, 634, 692, 635, 636, 1489,
	1490, 1491, 1492, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3781, 280, 282, 281, 283, 284, 285, 286, 1414,
	287, 288, 1415, 1416, 1417, 0, 1418, 642, 1419, 1420,
	1421, 1422, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 1423, 647,
	299, 300, 301, 302, 303, 304, 1424, 1425, 0, 305,
	648, 649, 650, 1426, 306, 307, 651, 1427, 1353, 1428,
	308, 309, 310, 311, 312, 313, 314, 0, 1429, 316,
	317, 318, 315, 319, 1430, 320, 0, 321, 322, 323,
	324, 325, 326, 1431, 327, 328, 329, 1208, 330, 331,
	332, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 1439, 343,
	339, 341, 1440, 344, 342, 345, 1441, 346, 347, 348,
	1442, 1443, 349, 350, 351, 1444, 352, 353, 1445, 354,
	355, 356, 1446, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 1447,
	277, 1448, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 1449, 375, 376, 377, 1450, 1451,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1452, 390, 660, 1453, 661,
	391, 1454, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 1455, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 1456, 1210,
	407, 665, 666, 1457, 667, 1458, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1459, 421, 423, 422, 1460,
	424, 669, 1215, 425, 426, 1216, 1461, 427, 428, 429,
	430, 431, 432, 435, 1462, 1463, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1464, 279, 1219, 477, 478, 1465, 670,
	479, 671, 481, 482, 1466, 0, 483, 0, 1467, 1468,
	485, 486, 487, 1469, 1470, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1471, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	1472, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 1473, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	1474, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 1475, 567, 568, 566, 569,
	570, 571, 1476, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	1477, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 1478, 599, 600,
	0, 596, 587, 1479, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 1480, 609, 683, 684, 685, 686, 1481,
	618, 1482, 610, 611, 612, 687, 613, 688, 1483, 614,
	615, 616, 617, 0, 619, 620, 1484, 1485, 621, 622,
	623, 625, 626, 624, 627, 1486, 628, 1487, 0, 629,
	630, 631, 689, 690, 691, 1488, 633, 632, 634, 692,
	635, 636, 1489, 1490, 1491, 1492, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3603, 280, 282, 281, 283, 284,
	285, 286, 1414, 287, 288, 1415, 1416, 1417, 0, 1418,
	642, 1419, 1420, 1421, 1422, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 1423, 647, 299, 300, 301, 302, 303, 304, 1424,
	1425, 0, 305, 648, 649, 650, 1426, 306, 307, 651,
	1427, 1353, 1428, 308, 309, 310, 311, 312, 313, 314,
	0, 1429, 316, 317, 318, 315, 319, 1430, 320, 0,
	321, 322, 323, 324, 325, 326, 1431, 327, 328, 329,
	1208, 330, 331, 332, 1432, 1433, 1435, 1434, 1436, 1437,
	1438, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 1439, 343, 339, 341, 1440, 344, 342, 345, 1441,
	346, 347, 348, 1442, 1443, 349, 350, 351, 1444, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 1447, 277, 1448, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 1449, 375, 376,
	377, 1450, 1451, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1452, 390,
	660, 1453, 661, 391, 1454, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 1455, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1456, 1210, 407, 665, 666, 1457, 667, 1458, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1459, 421,
	423, 422, 1460, 424, 669, 1215, 425, 426, 1216, 1461,
	427, 428, 429, 430, 431, 432, 435, 1462, 1463, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1464, 279, 1219, 477,
	478, 1465, 670, 479, 671, 481, 482, 1466, 0, 483,
	0, 1467, 1468, 485, 486, 487, 1469, 1470, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 1471, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 1472, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	1473, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 1474, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 1475, 567,
	568, 566, 569, 570, 571, 1476, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 1477, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	1478, 599, 600, 0, 596, 587, 1479, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 1480, 609, 683, 684,
	685, 686, 1481, 618, 1482, 610, 611, 612, 687, 613,
	688, 1483, 614, 615, 616, 617, 0, 619, 620, 1484,
	1485, 621, 622, 623, 625, 626, 624, 627, 1486, 628,
	1487, 0, 629, 630, 631, 689, 690, 691, 1488, 633,
	632, 634, 692, 635, 636, 1489, 1490, 1491, 1492, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2633, 280, 282,
	281, 283, 284, 285, 286, 1414, 287, 288, 1415, 1416,
	1417, 0, 1418, 642, 1419, 1420, 1421, 1422, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 1423, 647, 299, 300, 301, 302,
	303, 304, 1424, 1425, 0, 305, 648, 649, 650, 1426,
	306, 307, 651, 1427, 1353, 1428, 308, 309, 310, 311,
	312, 313, 314, 0, 1429, 316, 317, 318, 315, 319,
	1430, 320, 0, 321, 322, 323, 324, 325, 326, 1431,
	327, 328, 329, 1208, 330, 331, 332, 1432, 1433, 1435,
	1434, 1436, 1437, 1438, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 1439, 343, 339, 341, 1440, 344,
	342, 345, 1441, 346, 347, 348, 1442, 1443, 349, 350,
	351, 1444, 352, 353, 1445, 354, 355, 356, 1446, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 1447, 277, 1448, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	1449, 375, 376, 377, 1450, 1451, 1209, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1452, 390, 660, 1453, 661, 391, 1454, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 1211, 397, 398,
	1455, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 1456, 1210, 407, 665, 666, 1457,
	667, 1458, 409, 410, 1212, 668, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1459, 421, 423, 422, 1460, 424, 669, 1215, 425,
	426, 1216, 1461, 427, 428, 429, 430, 431, 432, 435,
	1462, 1463, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1464,
	279, 1219, 477, 478, 1465, 670, 479, 671, 481, 482,
	1466, 0, 483, 0, 1467, 1468, 485, 486, 487, 1469,
	1470, 488, 489, 672, 1220, 490, 1221, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	1471, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 1472, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 1473, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 1474, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 1475, 567, 568, 566, 569, 570, 571, 1476, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 1477, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 1478, 599, 600, 0, 596, 587, 1479,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 1480,
	609, 683, 684, 685, 686, 1481, 618, 1482, 610, 611,
	612, 687, 613, 688, 1483, 614, 615, 616, 617, 0,
	619, 620, 1484, 1485, 621, 622, 623, 625, 626, 624,
	627, 1486, 628, 1487, 0, 629, 630, 631, 689, 690,
	691, 1488, 633, 632, 634, 692, 635, 636, 1489, 1490,
	1491, 1492, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 1504, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2260, 280, 282, 281, 283, 284, 285, 286, 1414, 287,
	288, 1415, 1416, 1417, 0, 1418, 642, 1419, 1420, 1421,
	1422, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 1423, 647, 299,
	300, 301, 302, 303, 304, 1424, 1425, 0, 305, 648,
	649, 650, 1426, 306, 307, 651, 1427, 1353, 1428, 308,
	309, 310, 311, 312, 313, 314, 0, 1429, 316, 317,
	318, 315, 319, 1430, 320, 0, 321, 322, 323, 324,
	325, 326, 1431, 327, 328, 329, 1208, 330, 331, 332,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 1439, 343, 339,
	341, 1440, 344, 342, 345, 1441, 346, 347, 348, 1442,
	1443, 349, 350, 351, 1444, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 1447, 277,
	1448, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1209,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 660, 1453, 661, 391,
	1454, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	1211, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1456, 1210, 407,
	665, 666, 1457, 667, 1458, 409, 410, 1212, 668, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1459, 421, 423, 422, 1460, 424,
	669, 1215, 425, 426, 1216, 1461, 427, 428, 429, 430,
	431, 432, 435, 1462, 1463, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1464, 279, 1219, 477, 478, 1465, 670, 479,
	671, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 672, 1220, 490, 1221,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 1474,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 1475, 567, 568, 566, 569, 570,
	571, 1476, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 1477,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 1478, 599, 600, 0,
	596, 587, 1479, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 1480, 609, 683, 684, 685, 686, 1481, 618,
	1482, 610, 611, 612, 687, 613, 688, 1483, 614, 615,
	616, 617, 0, 619, 620, 1484, 1485, 621, 622, 623,
	625, 626, 624, 627, 1486, 628, 1487, 0, 629, 630,
	631, 689, 690, 691, 1488, 633, 632, 634, 692, 635,
	636, 1489, 1490, 1491, 1492, 637, 638, 693, 639, 640,
	641, 1406, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 1414, 287, 288,
	1415, 1416, 1417, 0, 1418, 642, 1419, 1420, 1421, 1422,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 1423, 647, 299, 300,
	301, 302, 303, 304, 1424, 1425, 0, 305, 648, 649,
	650, 1426, 306, 307, 651, 1427, 1353, 1428, 308, 309,
	310, 311, 312, 313, 314, 0, 1429, 316, 317, 318,
	315, 319, 1430, 320, 0, 321, 322, 323, 324, 325,
	326, 1431, 327, 328, 329, 1208, 330, 331, 332, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 1439, 343, 339, 341,
	1440, 344, 342, 345, 1441, 346, 347, 348, 1442, 1443,
	349, 350, 351, 1444, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 1447, 277, 1448,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 1449, 375, 376, 377, 1450, 1451, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1452, 390, 660, 1453, 661, 391, 1454,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 1211,
	397, 398, 1455, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1456, 1210, 407, 665,
	666, 1457, 667, 1458, 409, 410, 1212, 668, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1459, 421, 423, 422, 1460, 424, 669,
	1215, 425, 426, 1216, 1461, 427, 428, 429, 430, 431,
	432, 435, 1462, 1463, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1464, 279, 1219, 477, 478, 1465, 670, 479, 671,
	481, 482, 1466, 0, 483, 0, 1467, 1468, 485, 486,
	487, 1469, 1470, 488, 489, 672, 1220, 490, 1221, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 1471, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 1472, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 1473, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 1474, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 1475, 567, 568, 566, 569, 570, 571,
	1476, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 1477, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 1478, 599, 600, 0, 596,
	587, 1479, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 1480, 609, 683, 684, 685, 686, 1481, 618, 1482,
	610, 611, 612, 687, 613, 688, 1483, 614, 615, 616,
	617, 0, 619, 620, 1484, 1485, 621, 622, 623, 625,
	626, 624, 627, 1486, 628, 1487, 0, 629, 630, 631,
	689, 690, 691, 1488, 633, 632, 634, 692, 635, 636,
	1489, 1490, 1491, 1492, 637, 638, 693, 639, 640, 641,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 1414, 287, 288, 1415, 1416, 1417,
	0, 1418, 642, 1419, 1420, 1421, 1422, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 1423, 647, 299, 300, 301, 302, 303,
	304, 1424, 1425, 0, 305, 648, 649, 650, 1426, 306,
	307, 651, 1427, 1353, 1428, 308, 309, 310, 311, 312,
	313, 314, 0, 1429, 316, 317, 318, 315, 319, 1430,
	320, 0, 321, 322, 323, 324, 325, 326, 1431, 327,
	328, 329, 1208, 330, 331, 332, 1432, 1433, 1435, 1434,
	1436, 1437, 1438, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 1439, 343, 339, 341, 1440, 344, 342,
	345, 1441, 346, 347, 348, 1442, 1443, 349, 350, 351,
	1444, 352, 353, 1445, 354, 355, 356, 1446, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 1447, 277, 1448, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 1449,
	375, 376, 377, 1450, 1451, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1452, 390, 660, 1453, 661, 391, 1454, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 1211, 397, 398, 1455,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1456, 1210, 407, 665, 666, 1457, 667,
	1458, 409, 410, 1212, 668, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1459, 421, 423, 422, 1460, 424, 669, 1215, 425, 426,
	1216, 1461, 427, 428, 429, 430, 431, 432, 435, 1462,
	1463, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1464, 279,
	1219, 477, 478, 1465, 670, 479, 671, 481, 482, 1466,
	0, 483, 0, 1467, 1468, 485, 486, 487, 1469, 1470,
	488, 489, 672, 1220, 490, 1221, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 1471,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 1472, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 1473, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 1474, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	1475, 567, 568, 566, 569, 570, 571, 1476, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 1477, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 1478, 599, 600, 0, 596, 587, 1479, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 1480, 609,
	683, 684, 685, 686, 1481, 618, 1482, 610, 611, 612,
	687, 613, 688, 1483, 614, 615, 616, 617, 0, 619,
	620, 1484, 1485, 621, 622, 623, 625, 626, 624, 627,
	1486, 628, 1487, 0, 629, 630, 631, 689, 690, 691,
	1488, 633, 632, 634, 692, 635, 636, 1489, 1490, 1491,
	1492, 637, 638, 693, 639, 640, 641, 2608, 0, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 2605, 287, 288, 0, 0, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 2606, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 2604,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 2607, 0,
	0, 0, 0, 0, 0, 1127, 2603, 0, 1087, 1125,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	239, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 241, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 1632, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	233, 637, 638, 693, 639, 640, 641, 1101, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 1891, 1889, 0, 0,
	1125, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 239,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 241, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 1632, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 233,
	637, 638, 693, 639, 640, 641, 1101, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 1891, 3248, 0, 0, 1125,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 239, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 241, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 1632, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 233, 637,
	638, 693, 639, 640, 641, 1101, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 1143, 1115, 1116,
	1117, 1113, 1114, 1126, 1891, 1889, 0, 0, 1125, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	2739, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 2744, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 2740, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 2741, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1101, 0, 0, 2653, 0, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 280, 282, 281, 283,
	284, 285, 286, 1127, 287, 288, 0, 1125, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 0, 0,
	0, 0, 0, 0, 0, 1127, 2651, 0, 2650, 1125,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 0,
	0, 0, 0, 0, 0, 0, 1127, 2648, 0, 2647,
	1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	0, 0, 0, 0, 0, 0, 0, 1127, 2645, 0,
	2644, 1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 0, 0, 0, 0, 0, 0, 0, 1127, 2642,
	0, 1732, 1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 338, 340, 1184, 1183, 1103, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 1097, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 619, 620, 0, 1104, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 0, 633, 632, 634, 692, 635, 636,
	1731, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1101, 0, 0, 1090, 0, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 1096, 0, 0, 0, 0, 0, 0,
	1094, 1095, 280, 282, 281, 283, 284, 285, 286, 1127,
	287, 288, 0, 1125, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 1105, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1101, 0, 0, 0, 0, 1143, 1115, 1116,
	1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 280, 282, 281, 283, 284, 285,
	286, 1127, 287, 288, 0, 1125, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 4724, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	1105, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1101, 0, 0, 0, 0, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 280, 282, 281, 283,
	284, 285, 286, 1127, 287, 288, 0, 1125, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 2485, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 2484, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 0,
	0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 280, 282,
	281, 283, 284, 285, 286, 1127, 287, 288, 0, 1125,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 1105, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1101, 0,
	0, 0, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	280, 282, 281, 283, 284, 285, 286, 1127, 287, 288,
	0, 1125, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 4459,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 338, 340, 1184, 1183, 1103, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 1105, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 1097, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 619, 620, 0, 1104, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1101, 0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 1096, 0, 0, 0, 0, 0, 0,
	1094, 1095, 280, 282, 281, 283, 284, 285, 286, 1127,
	287, 288, 0, 1125, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 4048, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 1960, 0, 0, 0, 0, 0,
	0, 1127, 0, 0, 0, 1125, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 3759, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 0, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 1960, 0, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 1125, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 2744, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 0,
	0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 280, 282,
	281, 283, 284, 285, 286, 1127, 287, 288, 0, 1125,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	0, 0, 0, 0, 0, 0, 0, 1127, 1889, 0,
	2749, 1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 2747, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 2735, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 2723, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 2721, 0,
	2712, 2719, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 2715,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	2716, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 2717, 445, 2714, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 2718,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 2713, 641, 1101, 0, 0,
	2709, 0, 2712, 2719, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 2715, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 2716, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 2717, 445, 2714, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 2718, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 2713, 641, 1101,
	0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 0, 0, 0, 0, 0, 1897, 0,
	1127, 0, 0, 0, 1125, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 2464,
	287, 288, 0, 0, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1101, 0, 0, 2428, 0, 1143, 1115, 1116,
	1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 280, 282, 281, 283, 284, 285,
	286, 1127, 287, 288, 0, 1125, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1101, 0, 0, 2402, 0, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 280, 282, 281, 283,
	284, 285, 286, 1127, 287, 288, 0, 1125, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 1737,
	0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 280, 282,
	281, 283, 284, 285, 286, 1127, 287, 288, 0, 1125,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1101, 0,
	0, 1666, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	280, 282, 281, 283, 284, 285, 286, 1127, 287, 288,
	0, 1125, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 338, 340, 1184, 1183, 1103, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 1097, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 619, 620, 0, 1104, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1101, 0, 0, 1661, 0, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 1096, 0, 0, 0, 0, 0, 0,
	1094, 1095, 280, 282, 281, 283, 284, 285, 286, 1127,
	287, 288, 0, 1125, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1101, 0, 0, 1648, 0, 1143, 1115, 1116,
	1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 280, 282, 281, 283, 284, 285,
	286, 1127, 287, 288, 0, 1125, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1101, 0, 0, 1643, 0, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 280, 282, 281, 283,
	284, 285, 286, 1127, 287, 288, 0, 1125, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 1552,
	0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 280, 282,
	281, 283, 284, 285, 286, 1127, 287, 288, 0, 1125,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1551, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1101, 0,
	0, 1546, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	280, 282, 281, 283, 284, 285, 286, 1127, 287, 288,
	0, 1125, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 338, 340, 1184, 1183, 1103, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 395, 396, 1545, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 1097, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 619, 620, 0, 1104, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1101, 0, 0, 1539, 0, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 1096, 0, 0, 0, 0, 0, 0,
	1094, 1095, 280, 282, 281, 283, 284, 285, 286, 1127,
	287, 288, 0, 1125, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1101, 0, 0, 1355, 0, 1143, 1115, 1116,
	1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 280, 282, 281, 283, 284, 285,
	286, 1127, 287, 288, 0, 1125, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1101, 0, 0, 0, 0, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 280, 282, 281, 283,
	284, 285, 286, 1127, 287, 288, 0, 1125, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 0,
	0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 280, 282,
	281, 283, 284, 285, 286, 1127, 287, 288, 0, 1125,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 4773, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	4772, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1101, 0,
	0, 0, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	280, 282, 281, 283, 284, 285, 286, 1127, 287, 288,
	0, 1125, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 4771,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 4773, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 338, 340, 1184, 1183, 1103, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 1097, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 4772, 620, 0, 1104, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1101, 0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 1096, 0, 0, 0, 0, 0, 0,
	1094, 1095, 280, 282, 281, 283, 284, 285, 286, 1127,
	287, 288, 0, 1125, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 4394,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 4395,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 4393, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1101, 0, 0, 0, 0, 1143, 1115, 1116,
	1117, 3215, 3216, 1126, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 280, 282, 281, 283, 284, 285,
	286, 1127, 287, 288, 0, 1125, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1101, 0, 0, 0, 0, 1143,
	1115, 1116, 1117, 3213, 3214, 1126, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 280, 282, 281, 283,
	284, 285, 286, 1127, 287, 288, 0, 1125, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 0,
	0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 280, 282,
	281, 283, 284, 285, 286, 1127, 287, 288, 0, 1125,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1101, 0,
	0, 0, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126,
	0, 1096, 0, 0, 0, 0, 0, 0, 2472, 2473,
	280, 282, 281, 283, 284, 285, 286, 1127, 287, 288,
	0, 1125, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 0, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 338, 340, 1184, 1183, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 2731, 0, 0, 0, 0, 0, 0,
	2729, 2730, 280, 282, 281, 283, 284, 285, 286, 1127,
	287, 288, 0, 1125, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 0, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 0, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	3208, 3209, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 1143, 1115, 1116,
	1117, 1113, 1114, 1126, 0, 0, 0, 0, 0, 0,
	0, 0, 2143, 2144, 280, 282, 281, 283, 284, 285,
	286, 1127, 287, 288, 0, 1125, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 0, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 4773, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	0, 1170, 0, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 0, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 4772, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 1087, 0, 1265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1094, 1095, 280, 282, 281, 283,
	284, 285, 286, 1127, 287, 288, 0, 1125, 0, 0,
	0, 1167, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 1166, 0, 305, 648, 649, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1251,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 279, 1219,
	477, 478, 0, 1171, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 1257, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 1259, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 239,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 0, 596, 587, 241, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 1632, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 233,
	637, 638, 693, 639, 640, 641, 1265, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 1255, 0, 1984, 0, 0, 1167, 0,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 1166, 0,
	305, 648, 649, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1251, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 279, 1219, 477, 478, 0,
	1171, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	1257, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 1259, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 239, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 0, 596, 587, 241, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 1632, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 233, 637, 638, 693,
	639, 640, 641, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 3372, 0, 1265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 1984, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1167, 0,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 1166, 0,
	305, 648, 649, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1251, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 279, 1219, 477, 478, 0,
	1171, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	1257, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 1259, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 1247, 0, 1265, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1167, 0,
	1255, 0, 1253, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 1166, 0,
	305, 648, 649, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1251, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 279, 1219, 477, 478, 0,
	1171, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	1257, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 1259, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 1265, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1167, 0,
	1255, 0, 1253, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 1166, 0,
	305, 648, 649, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1251, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 279, 1219, 477, 478, 0,
	1171, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	1257, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 1259, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 1265, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1167, 0,
	1255, 0, 1253, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 1166, 0,
	305, 648, 649, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 279, 1219, 477, 478, 0,
	1171, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 1265, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1167, 0,
	0, 0, 4214, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 1166, 0,
	305, 648, 649, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 279, 1219, 477, 478, 0,
	1171, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 1259, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 274, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 2576, 2577, 2578, 2595, 2596, 2597, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 2598, 0, 642, 0, 0, 0, 0,
	289, 290, 1881, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 1866, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 2588, 0, 316, 317, 318,
	315, 319, 0, 320, 2584, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	2589, 2590, 2591, 2592, 371, 372, 373, 657, 0, 0,
	2583, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 2593, 2594, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 2586, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	2587, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 1865, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 1087, 0, 1348,
	2573, 2574, 2575, 2599, 2585, 2579, 0, 2581, 2582, 2580,
	2567, 2568, 2569, 2570, 2571, 2572, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 1353, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 0, 1219,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 239,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 241, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 1632, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 233,
	637, 638, 693, 639, 640, 641, 0, 0, 234, 1629,
	0, 1348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 193, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 1353, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1210, 407, 665, 666, 0,
	667, 0, 409, 410, 1212, 668, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 0,
	0, 1219, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 239, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 241,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 1632, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 233, 637, 638, 693, 639, 640, 641, 1348, 1347,
	234, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 193, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 1353, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1210, 407, 665, 666, 0, 667, 0, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 0, 0, 1219, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1348, 1347, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 1656, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 1353, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1210,
	407, 665, 666, 0, 667, 0, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 0, 0, 1219, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1348, 1347, 0, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 3670, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 1353, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1210, 407, 665, 666,
	0, 667, 0, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	0, 0, 1219, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	2343, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1348,
	2252, 0, 0, 0, 0, 2253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 1656, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 1353, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	2251, 423, 422, 0, 424, 669, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 0, 1219,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1348, 1347, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 1656, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 1353,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	668, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 0, 1219, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 1087, 0, 274, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 1638, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 239, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 241, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 1632, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 274, 0, 0, 233, 637, 638, 693,
	639, 640, 641, 0, 0, 234, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 193, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 279, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 1265, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1167, 0, 0, 0, 1998,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 1166, 0, 305, 648, 649,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 665,
	666, 0, 667, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 279, 1219, 477, 478, 0, 1171, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	274, 3112, 0, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 274, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 4942, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 274, 0, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 3620, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 279, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 0, 274, 0, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 1626,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	274, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 3100,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 274, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 3784, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 919, 0, 820, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 2331, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 827, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 917, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 825, 601, 602, 603, 604,
	605, 826, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 820, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 280, 282, 281, 283, 284, 285,
	286, 2069, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 830, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 827, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 2068, 562, 563, 564, 565, 0, 2070, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 825, 601, 602, 603, 604,
	605, 826, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 2067, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 820, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 280, 282, 281, 283, 284, 285,
	286, 2020, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 830, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 827, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 2019, 562, 563, 564, 565, 0, 2021, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 825, 601, 602, 603, 604,
	605, 826, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 2018, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 818, 0, 820, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 830, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 827, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 825, 601, 602, 603, 604, 605,
	826, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 2042, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 830, 0, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 0,
	2048, 0, 297, 2038, 298, 2054, 0, 2061, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 2064, 2065,
	0, 0, 306, 307, 0, 0, 1353, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 1190, 338, 340, 2052, 2051, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 2050, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 2059, 2060, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1210, 407, 2045,
	2046, 0, 2041, 0, 409, 410, 1212, 0, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 0,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 0, 1219, 477, 478, 0, 0, 479, 2053,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 0, 1220, 490, 1221, 0,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 2035, 504, 505, 506, 2036,
	507, 508, 509, 0, 510, 0, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 2049,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 0, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 2047, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 2063, 590, 591,
	592, 593, 0, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 2055, 2056, 2057, 2058, 0, 618, 0,
	610, 611, 612, 0, 613, 0, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	0, 2039, 2062, 0, 633, 632, 634, 0, 635, 636,
	0, 0, 0, 0, 637, 638, 0, 639, 640, 641,
	820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 2029, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 827, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 825, 601,
	602, 603, 604, 605, 826, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	820, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 830,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 827, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	2381, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 2382, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 825, 601,
	602, 603, 604, 605, 826, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 2383, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 830,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 0, 1348, 2117,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 830,
	642, 0, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 1353, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	3063, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1210, 407, 665, 666, 0, 667, 0, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 0, 0, 1219, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 3064, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1348, 1347, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 1353, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1210,
	407, 665, 666, 0, 667, 0, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 0, 0, 1219, 477, 478, 3980, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1348, 1347, 0, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 1353, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1210, 407, 665, 666,
	0, 667, 0, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	0, 0, 1219, 477, 478, 3581, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1686,
	0, 1348, 1347, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 1353, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 1685, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1210, 407, 665, 666, 0,
	667, 0, 409, 410, 1212, 668, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 0,
	0, 1219, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 1684, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 1683, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1600, 0,
	1348, 1347, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 1353, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 1599, 663, 664, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1210, 407, 665, 666, 0, 667,
	0, 409, 410, 1212, 668, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 0, 0,
	1219, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1559, 0, 1348,
	1347, 0, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 1353, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 1561, 663, 664, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 0, 1219,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1522, 0, 1348, 1347,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 1353, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	1521, 663, 664, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1210, 407, 665, 666, 0, 667, 0, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 0, 0, 1219, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1342, 0, 1348, 1347, 0,
	0, 0, 0, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	1353, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1341,
	663, 664, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1210, 407, 665, 666, 0, 667, 0, 409, 410,
	1212, 668, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 0, 0, 1219, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1348, 1347, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 1353, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1210, 407,
	665, 666, 0, 667, 0, 409, 410, 1212, 668, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 0, 0, 1219, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 1348, 2117, 0, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 1353, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 2114, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1210, 407, 665, 666, 0,
	667, 0, 409, 410, 1212, 668, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 0,
	0, 1219, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 1348, 1347,
	0, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 1353, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1210, 407, 665, 666, 0, 667, 0, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 0, 0, 1219, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 1348, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 1353, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1210, 407, 665, 666, 0, 667, 0, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 0, 0, 1219, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 274, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 2901, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 2898, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 2905, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 3125, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 2904, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 3122, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	3124, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 3121, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 2903, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	3123, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 274, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 2901, 306, 307, 651,
	0, 0, 2895, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 2898, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 2905, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 2904, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	2894, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 2903, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	2902, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 1763, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 1762, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 1761, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	1764, 554, 561, 562, 563, 564, 565, 0, 1760, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 1758, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 1759, 632,
	634, 692, 635, 636, 1497, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1499, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	1257, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 1494, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 1496, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 279, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 1257,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 1402, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 1404, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 279, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 1257, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 725, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 724, 285, 286, 714, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 717, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 718, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 719, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	713, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 714, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	717, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 718, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 719, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 714, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	717, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 718, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 719, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 714, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	717, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 3991, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 719, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 279, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 1257, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 3529, 476, 465,
	0, 279, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 3070,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 3069, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	279, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 2350, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 2287, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 2294, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 2293, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 2280, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	2282, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 279, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 274, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	2245, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 279, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 1257, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 1604, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1603,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 1514, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 1507, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 1509, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 279, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 1332, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 1331, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 279, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 1322, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1321, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 279, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	1319, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 1318, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 279, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 1314,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 1313, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	279, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 695, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 265, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 717, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 718,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 719,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 2390, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 2388, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 2386, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 2300, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 2093, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 2087, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 904, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 903, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 902, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 274, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 3125, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 4291, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 1366, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 1369, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 1367, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 785, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 784, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 783, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 1370, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 781, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 1366, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 1369, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 1367, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 785, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 784, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 783, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 1370, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 781, 684, 685, 686,
	0, 618, 0, 610, 1368, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 704, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 703,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 702, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 274, 3112, 0, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 274,
	4301, 0, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 4586, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 4187, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 3946, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 2784, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 274, 3112, 0, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 3109, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 2211, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 784, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 783, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 781, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	2360, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 2348, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 2107, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 2074, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	1659, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 1652,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	0, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 775, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	771, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 776, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 785,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	784, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 783, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 1637, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	781, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 1610, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 1609, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 1594, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	1592, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 1587, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 1564, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1562, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 1557, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 1519, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 1502, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	1372, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 784, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 783, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 781, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 1337,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 1336, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	0, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 1328, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 1327, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 1281, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 790, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 775, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 771,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 770,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 776, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 785, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 784,
	546, 547, 548, 549, 772, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 783, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 773, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 781,
	684, 685, 686, 0, 618, 0, 610, 777, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 764, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 765, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 727, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 721, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 699, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 3640, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 784, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	783, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 781, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 3567, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 3545, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 3542, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 3494, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 3492, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 3478, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 3080, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 765, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 2318,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 0, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 1299, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 1230, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	0, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 0, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 0, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 0, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 1841, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 1847, 1841, 1812, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 1832, 0, 0,
	0, 0, 1860, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 1836, 1837, 1838, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 1851, 0, 1818, 1861, 0, 0, 0, 0, 0,
	0, 1840, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	1858, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	0, 0, 1851, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	1833, 1858, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 1810, 1811,
	0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	1847, 1841, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 1834, 0, 0, 0, 1860, 0, 1810,
	1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0,
	1865, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	1852, 1847, 1841, 1812, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 1832, 0, 0, 0, 0, 1860, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 1850, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	0, 0, 4700, 0, 0, 0, 0, 0, 1835, 1836,
	1837, 1838, 0, 1850, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 0, 0, 4696, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 1851, 0, 1818,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 1851, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 1833, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 1810, 1811, 0, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1847, 1841, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 1834,
	0, 0, 0, 1860, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 1865, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 1852, 1847, 1841, 1812,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 1832,
	0, 0, 0, 0, 1860, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 1850, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1825,
	1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 0, 0, 4611, 0,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 1850,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0, 4569,
	0, 0, 0, 0, 0, 1835, 1836, 1837, 1838, 0,
	0, 0, 0, 1851, 0, 1818, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 1851, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 1833, 1858, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 1847, 1841, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 1834, 0, 0, 0, 1860,
	0, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856,
	0, 0, 1865, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 1852, 1847, 1841, 1812, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 1832, 0, 0, 0, 0,
	1860, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 1850, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 0, 0, 4568, 0, 0, 0, 0, 0,
	1835, 1836, 1837, 1838, 0, 1850, 0, 0, 0, 0,
	1818, 0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 0, 0, 4378, 0, 0, 0, 0,
	0, 1835, 1836, 1837, 1838, 0, 0, 0, 0, 1851,
	0, 1818, 1861, 0, 0, 0, 0, 0, 0, 1840,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 1858, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	1851, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	1840, 1842, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 1833, 1858,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 1810, 1811, 0, 1843,
	1844, 1845, 1854, 1855, 1856, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 1847, 1841,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 1834, 0, 0, 0, 1860, 0, 1810, 1811, 0,
	1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 1865, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 1852, 1847,
	1841, 1812, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 1832, 0, 0, 0, 0, 1860, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	1850, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0,
	4210, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 1850, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0,
	0, 4137, 0, 0, 0, 0, 0, 1835, 1836, 1837,
	1838, 0, 0, 0, 0, 1851, 0, 1818, 1861, 0,
	0, 0, 0, 0, 0, 1840, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 1858, 0, 0, 0, 0, 0,
	0, 1827, 1828, 0, 0, 0, 1851, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 1840, 1842, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 1833, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1847, 1841, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 1834, 0, 0,
	0, 1860, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 1865, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 1852, 1847, 1841, 1812, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 1832, 0, 0,
	0, 0, 1860, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 1850, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1825, 1831, 1853,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 0, 0, 4136, 0, 0, 0,
	0, 0, 1835, 1836, 1837, 1838, 0, 1850, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 1824, 1825, 1831,
	1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 0, 0, 0, 0, 4135, 0, 0,
	0, 0, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 1851, 0, 1818, 1861, 0, 0, 0, 0, 0,
	0, 1840, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	1858, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	0, 0, 1851, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	1833, 1858, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 1810, 1811,
	0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	1847, 1841, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 1834, 0, 0, 0, 1860, 0, 1810,
	1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0,
	1865, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	1852, 1847, 1841, 1812, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 1832, 0, 0, 0, 0, 1860, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 1850, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	0, 0, 3789, 0, 0, 0, 0, 0, 1835, 1836,
	1837, 1838, 0, 1850, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 0, 0, 3290, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 1851, 0, 1818,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 1851, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 1833, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 1810, 1811, 0, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1847, 1841, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 1834,
	0, 0, 0, 1860, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 1865, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 1852, 1847, 1841, 1812,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 1832,
	0, 0, 0, 0, 1860, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 1850, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1825,
	1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 0, 0, 3289, 0,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 1850,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0, 3288,
	0, 0, 0, 0, 0, 1835, 1836, 1837, 1838, 0,
	0, 0, 0, 1851, 0, 1818, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 1851, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 1833, 1858, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 1847, 1841, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 1834, 0, 0, 0, 1860,
	0, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856,
	0, 0, 1865, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 1852, 1847, 1841, 1812, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 1832, 0, 0, 0, 0,
	1860, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 1850, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 0, 0, 3287, 0, 0, 0, 0, 0,
	1835, 1836, 1837, 1838, 0, 1850, 0, 0, 0, 0,
	1818, 4849, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 3252, 0, 0, 0, 0, 0, 0,
	0, 1835, 1836, 1837, 1838, 0, 0, 0, 0, 1851,
	0, 1818, 1861, 3352, 0, 0, 0, 0, 3351, 1840,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 1858, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	1851, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	1840, 1842, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 1833, 1858,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4848, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1811,
	1834, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	1847, 1841, 0, 0, 0, 0, 3223, 1852, 1813, 0,
	0, 0, 2757, 0, 0, 0, 0, 1860, 0, 1810,
	1811, 1834, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 1865, 0,
	0, 1847, 1841, 1812, 0, 0, 2756, 0, 1852, 1813,
	0, 0, 0, 1832, 0, 0, 0, 0, 1860, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 1865,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 3224, 1829, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 1835, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 1851, 0, 1818,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 1851, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 1833, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 1834, 1843,
	1844, 1845, 1854, 1855, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 1847, 1841,
	0, 0, 0, 0, 0, 1852, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 1810, 1811, 1834,
	1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 1865, 0, 0, 1847,
	1841, 1812, 0, 0, 0, 0, 1852, 1813, 0, 0,
	0, 1832, 0, 0, 0, 0, 1860, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 1865, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1825,
	1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 1835, 1836, 1837,
	1838, 0, 0, 0, 0, 1851, 0, 1818, 1861, 0,
	0, 0, 0, 0, 0, 1840, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 1858, 0, 0, 0, 0, 0,
	0, 1827, 1828, 0, 0, 0, 1851, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 1840, 1842, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 1833, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 1084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1811, 1834, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1847, 1841, 0, 0,
	0, 0, 0, 1852, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 1810, 1811, 1834, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 1865, 0, 0, 1847, 1841, 1812,
	0, 0, 3353, 0, 1852, 1813, 0, 0, 0, 1832,
	0, 0, 0, 0, 1860, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 1865, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 3770, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1825, 1831, 1853,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 1850, 0, 0,
	0, 3358, 0, 0, 0, 0, 0, 1824, 1825, 1831,
	1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 0, 0, 1835, 1836, 1837, 1838, 0,
	0, 0, 0, 1851, 0, 1818, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 1851, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 1833, 1858, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1811, 1834, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 1847, 1841, 0, 0, 0, 0,
	0, 1852, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 1810, 1811, 1834, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 1865, 0, 0, 1847, 1841, 1812, 0, 0,
	3291, 0, 1852, 1813, 0, 0, 0, 1832, 0, 0,
	0, 0, 1860, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 1865, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 1835, 1836, 1837, 1838, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 1851, 0, 1818, 1861, 0, 0, 0, 0, 0,
	0, 1840, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	1858, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	0, 0, 1851, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	1833, 1858, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3318, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1811, 1834, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 1847, 1841, 0, 0, 0, 0, 0, 1852,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 1810, 1811, 1834, 1843, 1844, 1845, 1854, 1855, 1856,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	1865, 0, 0, 1847, 1841, 1812, 0, 0, 0, 0,
	1852, 1813, 0, 0, 0, 1832, 0, 0, 0, 0,
	1860, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 1865, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	1835, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 1835, 1836, 1837, 1838, 0, 0, 0, 0, 1851,
	0, 1818, 1861, 0, 0, 0, 0, 0, 0, 1840,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 1858, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	1851, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	1840, 1842, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 1833, 1858,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1811,
	1834, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	1847, 1841, 0, 0, 0, 0, 0, 1852, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 1865, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2333, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 1835, 1836,
	1837, 1838, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	969, 0, 1018, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 992, 0, 975, 974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 0,
	0, 0, 976, 0, 0, 0, 0, 979, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 989, 990, 0, 0, 0, 0, 0, 0, 0,
	1007, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1019, 981,
	0, 0, 0, 0, 0, 982, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 983, 0, 0,
	0, 0, 0, 0, 0, 0, 1016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 1017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 985, 0, 0, 0, 0, 1834, 0,
	0, 973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	986, 987, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 995,
	993, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	0, 1004, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
	1015, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1825,
	1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 980, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 978, 0, 0, 0, 1011, 1012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 1009, 0, 0, 0, 0, 0, 0,
	0, 1025, 1005, 0, 0, 998, 996, 0, 1001, 0,
	0, 0, 0, 0, 1002, 0, 0, 971, 0, 1022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1013, 0, 1003, 0, 0, 0, 0,
	0, 1000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1023, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1010,
}

var sqlPact = [...]int{
	301, -1000, -1000, -1000, -1000, 194, -1000, -1000, 193, 192,
	191, 190, 188, 186, 185, 175, 174, 173, 170, -1000,
	-1000, -1000, -1000, -1000, -1000, 169, -1000, -1000, 167, -1000,
	166, 164, 163, -1000, -1000, 162, -1000, 161, -1000, -1000,
	-1000, -1000, 157, 151, 150, 94405, 93846, 94955, 2396, 119401,
	101591, 2051, 83838, 118842, 83279, 118283, 2224, 10598, 117724, 2830,
	149, -1000, 117165, 148, 146, 145, -1000, 116606, -1000, 2280,
	-1000, 144, -1000, 7418, 70392, 136, 135, 133, 132, 2276,
	131, -1000, 129, 127, -1000, -1000, 125, -1000, 14492, 1522,
	-1000, 120, 116, -1000, 455, 99364, 114, 113, 112, 2732,
	111, 110, 68733, 109, 104, 103, 2654, 2937, -1000, -1000,
	2062, -1000, -1000, 102, 101, 99, 98, 97, 96, 95,
	94, 93, 92, 91, 90, 89, -1000, 88, 87, 83,
	82, 81, -1000, 80, 79, 78, -1000, 77, -1000, 76,
	75, 73, 72, 71, 63, 62, 57, 56, 55, 49,
	47, 46, 45, 134498, -1000, -1000, 44, 1963, 1688, 1685,
	1679, 1666, 1665, 985, 42, 41, 39, 38, 37, 36,
	35, 34, 31, 30, 29, 28, 27, 26, 25, 24,
	23, 22, 159, 21, 19, 17, 11, 8, 6, 5,
	2797, -1000, 1739, 1016, 32801, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 127101, 119951, 3, -115, 2, -1000, 3425,
	1024, 56932, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	270, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 456, 2370, 716, -1000,
	-1000, -1000, 116056, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2392, -39, -1000, 2090, -1000, -1000, -1000, -1000, -1000,
	715, -1000, 2380, 252, 2328, -1000, -1000, -1000, 3489, 2529,
	3881, 3878, 3877, 3876, 3875, 126551, 1957, 3874, 2586, 3873,
	3872, 3870, 3869, 3867, 3866, 3865, -1000, 93287, 1045, 92728,
	92169, 3485, 115506, 91610, 114947, 77153, 48933, 1012, 3487, -1000,
	-1000, -1000, -1000, -1000, -1000, 119951, -1000, 1043, -1000, -1000,
	3864, 2146, 712, 101032, -1000, -1000, 114388, 2003, -1000, -1000,
	-1000, 931, 1221, 34517, 34517, 34517, 265, -1000, -1000, -1000,
	-1000, -1000, -1000, 3863, 3862, 3860, 3857, 3856, -1000, -1000,
	82720, 25749, 82161, 81602, 113829, 25180, 91051, 90492, 3855, 3852,
	3851, 113270, 76584, 3598, 3596, 1039, 2078, 1417, -1000, -1000,
	-1000, -1000, -1000, -1000, -24, 72616, 3625, 119951, -1000, 261,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48361, 773, 47789,
	756, 47217, 687, 112711, -1000, -1000, -1000, -1000, 76015, -1000,
	112152, 2528, 3850, 3849, 1121, 3848, 3365, 1953, 3847, 1909,
	1209, 3843, 3842, 3840, 3839, 3838, 3832, 3831, 1512, 111593,
	3069, 1579, 111034, 1766, 75446, 1038, 89933, 94955, 2682, 110475,
	1502, 1501, -1000, -1000, -1000, -1000, 3190, 2932, 2920, 1312,
	-1000, -1000, -1000, -1000, 60317, 5929, 4884, -1000, -1000, 8113,
	109916, 63152, 94955, 94955, -1000, -1000, -1000, -1000, -1000, -1000,
	46645, 490, 46073, 1006, 109357, -1000, -1000, 60884, 3014, -1000,
	-1000, -1000, -1000, -1000, 108798, 45501, 440, 44929, 991, 119951,
	-1000, 3067, 1994, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2399, 1626, 3654, 2829, 74877, 2150, 1422, 3431, 3189,
	3188, 1531, 2069, 3181, 3830, 2689, 3167, 3129, 3125, 3122,
	3121, 1623, 2649, 436, 2643, 32229, 3047, 1772, 44357, 1495,
	1518, 3117, 3114, 3689, 2048, 2056, 2086, 81043, 3829, 3828,
	3388, 3103, 3093, 2877, 3090, -1000, 3012, 1509, -1000, -1000,
	-1000, -1000, -1000, 1484, -1000, -1000, -1000, -1000, -1000, 85488,
	-1000, -1000, 1622, -1000, -1000, 1622, -1000, -1000, -1000, -1000,
	-1000, 1345, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1739, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2304, -1000, 2137, -1000, -1000,
	2588, 3400, 3400, 3400, 3486, 444, 431, -1000, 159, -1000,
	-1000, 133880, -1000, -1000, 49505, 49505, 49505, 49505, 49505, 49505,
	49505, 49505, 2253, -1000, 711, -1000, -1000, 768, -1000, 709,
	636, 582, -1000, -1000, -1000, -1000, -1000, -1000, 705, -1000,
	-1000, -1000, -1000, -1000, -1000, 3625, -1000, 28664, -1000, -1000,
	-1000, 437, 703, 49505, -1000, -1000, 3699, 3698, 916, -1000,
	259, 950, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3065, 702, 701, -1000, 698, 695,
	686, 682, 678, -1000, 674, -1000, 673, 672, 671, 670,
	667, 664, 663, 662, -1000, 2117, -1000, -1000, -1000, -1000,
	-1000, -1000, 618, 617, 617, 617, -1000, 1030, -1000, -1000,
	-1000, 300, 611, 264, 609, 606, 604, -1000, 656, 653,
	650, 649, 648, 647, 646, 644, 643, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1026, -1000, -1000, -1000, -1000, -25,
	119951, -1000, 456, -25, -1000, -1000, 642, -1000, 36834, 36834,
	36834, -1000, -1000, 2379, 49505, -1000, 2611, -1000, -11, -11,
	900, 58612, -1000, 55792, 900, 320, 788, 64269, -1000, 3011,
	-1000, -1000, 637, 251, -1000, -1000, -1000, -1000, 26316, 3008,
	119951, 119951, 119951, 94955, 94955, 94955, 119951, 3826, 3282, 49505,
	-1000, -1000, 69833, 119951, 95505, -1000, -1000, 3581, 70949, 69283,
	119951, 3061, 108239, 3823, -1000, -1000, -1000, -1000, -1000, 3260,
	3822, 3820, 3819, -1000, 119951, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 241, 3254, -1000, -1000, 98805, 241, 3253, -1000,
	241, 3252, -1000, 98255, -1000, -1000, 2287, 3251, -1000, -1000,
	243, 3250, -1000, -1000, -1000, 242, 3249, -1000, -1000, 225,
	-54, 3246, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 133880, -1000, -1000, -1000, 107680, -1000,
	3399, -1000, 119951, -1000, 49505, -1000, -1000, 3579, 1969, 78277,
	3519, -1000, -1000, -33, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2567, 2580, 1165, 2418, -1000, 3294, 1382, 34517, 3353,
	-1000, -1000, -1000, -1000, -1000, 221, 26316, -1000, -1000, -1000,
	-1000, -1000, -1000, 2480, 3245, 1427, -1000, 2412, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2242, 3244, -1000, 2116, 3243,
	2241, -1000, -1000, 1887, -1000, 3385, -1000, -1000, 1880, 3242,
	-9, -1000, -1000, 2118, -1000, -1000, -1000, -1000, 2002, -1000,
	1313, 3241, -1000, 2828, 2828, 89374, 3207, 62585, 60884, 72616,
	-29, -1000, -1000, -1000, -1000, -173, -1000, 24607, 133880, -1000,
	-1000, -1000, -1000, 1777, 133880, 890, -1000, -1000, 3240, -1000,
	133880, 888, -1000, -1000, 3239, -1000, 2644, -1000, 3059, -1000,
	-1000, 2485, 2484, -1000, -1000, 3818, -1000, -1000, 3817, -1000,
	3815, 3807, 3802, -1000, 1782, 2054, 3795, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 88824, 2378, -1000, -1000, 87706,
	3057, -1000, 2481, 3518, -1000, 88265, 1035, -1000, 987, 2477,
	-1000, 97705, 996, 2476, -1000, 3791, 3483, 2774, 987, 2475,
	-1000, -1000, -1000, -1000, -1000, 970, -1000, 66501, -1000, 66501,
	-1000, 1637, -1000, 126001, -11, 94955, 3625, -1000, -51, -1000,
	-1000, -1000, 1024, -1000, 59745, -1000, 59745, 100473, 77720, 975,
	719, 68173, 133839, -1000, 1009, -1000, -1000, 133880, -1000, -1000,
	-1000, 2638, -1000, -140, 2824, -1000, 77720, 62018, 2636, -1000,
	133880, -1000, -1000, -1000, -1000, 133880, -1000, -1000, -1000, 77720,
	87706, -1000, 107121, 87156, -1000, -1000, 1456, 2623, -1000, -1000,
	-1000, 77720, 1317, 77720, 77720, 77720, -1000, 106562, -1000, -1000,
	2094, 1567, 3392, 2076, 94955, -1000, 1903, -1000, -1000, -1000,
	3413, 3205, 119951, -1000, -1000, 3052, -1000, 72066, 97155, -1000,
	96605, -1000, 96055, -1000, 94955, -1000, 94955, -1000, 3789, 3788,
	3784, -1000, -1000, 3783, -1000, 3782, 3406, -1000, 837, 43785,
	133880, 3405, -1000, 3781, 2025, 3047, 133880, -1000, 3123, 1657,
	1654, 119951, -1000, -1000, 119951, -1000, 119951, -1000, -1000, -1000,
	1586, -1000, -1000, 2566, -1000, -1000, -1000, -1000, 94955, 94955,
	94955, 94955, 1588, -1000, 43213, -1000, -1000, 3084, 3780, 1792,
	-1000, 1820, -1000, 3005, 3428, -1000, 1432, 1784, -1000, -1000,
	245, -1000, -1000, -33, -1000, 125451, -1000, 2588, -1000, 119951,
	-1000, 2578, 3035, 3044, 1620, 2406, 2685, -1000, 42641, 2675,
	52937, 2410, 159, -1000, -1000, 159, 159, 33945, -1000, -1000,
	70949, 70949, 26316, 1373, 49505, 49505, 49505, 49505, 49505, 49505,
	49505, 49505, 49505, 49505, 49505, 49505, 49505, 49505, 49505, 49505,
	49505, 49505, 49505, 49505, 49505, 49505, 49505, 49505, 49505, 49505,
	49505, 49505, 49505, 49505, 49505, 49505, 49505, 49505, 49505, 49505,
	2368, 49505, 1342, 49505, 49505, 49505, 49505, 2104, -1000, -1000,
	2027, 518, 2066, 636, -1000, -1000, -1000, 3626, 3626, 3626,
	1080, 1080, 1080, 12662, 12662, 594, 3779, 768, -1000, 49505,
	-1000, 43, 59169, 49505, 26885, -1000, 431, 11169, 2628, -1000,
	429, 27486, -1000, -1000, -1000, 28664, 582, 42040, 49505, 1017,
	133880, -1000, -1000, 1448, 3649, 24034, 3079, 2871, 634, 866,
	860, 31628, 31027, 30426, 29825, 830, 829, 49505, 49505, 49505,
	49505, 49505, 49505, 49505, 49505, -1000, -1000, 3664, -1000, 3649,
	-1000, -1000, -1000, -1000, 3649, 1362, 1248, 3649, -1000, 3649,
	3649, 8696, 8696, 41468, 40896, 40324, 53509, 39752, 49505, 29253,
	39180, 38608, -1000, 119951, -25, 3578, 49505, 187, -1000, 132168,
	-1000, 187, 187, 633, -57, 133880, 2863, 2863, 57492, 2382,
	2269, 2269, 2269, -1000, 900, 18843, 900, 104905, 2290, 900,
	900, 218, 255, 428, 55225, 2611, 104905, 746, 632, 1,
	-1, -2, -1000, -1000, -3, -4, -1000, -1000, 94955, 626,
	26885, 26316, 217, 2053, -58, 2677, 2671, -1000, 2668, 2665,
	-1000, 2663, 2377, -1000, -1000, 1807, -64, 1288, 94955, 119951,
	1413, 3777, -52, -1000, 6813, -65, -1000, 1311, 215, 3649,
	-1000, -1000, -1000, -1000, -1000, 3776, 3775, -1000, 1021, 625,
	619, 355, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	618, 617, 617, 617, -1000, 300, 611, 264, 609, 606,
	604, -1000, -1000, -1000, -1000, -1000, 3000, 94955, 119951, 1400,
	3774, -173, 95505, -59, -1000, -1000, 119951, -1000, -1000, -1000,
	3773, -1000, 94955, -1000, -1000, 94955, 241, 3237, -1000, 94955,
	-1000, 94955, 236, 3235, -1000, -1000, 119951, -1000, 94955, 94955,
	-1000, 119951, 119951, 119951, 77720, 77720, 228, -1000, 94955, 875,
	-66, 1130, -33, -1000, -1000, -1000, -1000, -1000, 1622, -1000,
	1831, -1000, -1000, -1000, -1000, -1000, -1000, 1528, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 916, -1000, -1000, -1000,
	-1000, -1000, -1000, 3646, 3631, -27, -1000, -1000, 26316, -1000,
	-34, 1641, 1908, 1271, -1000, 80484, 2404, 3389, 3772, 2756,
	3376, 1631, -1000, 1583, -1000, 3494, 85488, 3540, 3551, 1334,
	-1000, 2996, -1000, -1000, 930, 1778, 1768, 1259, 1256, 85488,
	2116, -1000, 70949, -1000, 2711, 3482, 1392, 1372, 1392, 1392,
	1369, -1000, 85488, 1746, 1254, 1252, 1251, -1000, -1000, 1977,
	1970, -1000, -1000, 106012, -1000, 1250, 1249, 3595, 2304, 2228,
	809, 1956, -1000, -35, 3526, 3550, 1323, -1000, 2984, 1242,
	-1000, -1000, -1000, 3475, 94955, 26316, 1572, 1568, 1562, 1740,
	1241, -28, -1000, 3535, 1239, 1237, -1000, 1041, 5568, 3328,
	-1000, 77720, 1041, 1041, 2211, 3232, 2798, 1668, -1000, 2814,
	898, 2810, -1000, -1000, -1000, 898, -29, 72616, 119951, 212,
	-1000, 43, 49505, 49505, 43, 49505, 43, -1000, 3511, 3229,
	3226, -1000, -1000, -1000, -1000, -1000, 3771, 2013, 2583, -1000,
	-1000, 603, 2474, 2982, 119951, 2694, -30, 94955, -1000, 71516,
	3218, 73174, 2116, 2471, -1000, -1000, 86597, -1000, 3214, 456,
	2463, -1000, 668, 3768, 3213, -1000, 124901, -1000, 3399, 1394,
	3210, 1084, 733, 3573, -1000, 733, 67059, -1000, 119951, -1000,
	-11, 753, 79384, -72, -74, 426, -1000, 105462, 119951, 1081,
	79934, 119951, 3342, 2022, 1997, -1000, 983, 60884, -1000, 60884,
	-75, -140, 2808, 1556, -1000, 975, 975, 898, -1000, 898,
	-1000, 94955, 3042, -1000, -1000, 77720, 975, 975, 975, -1000,
	-1000, -1000, -1000, 3767, 3766, 3765, 3764, -1000, -1000, 984,
	94955, 119951, 94955, -1000, -1000, 1655, -1000, 210, -1000, 119951,
	-1000, 119951, 119951, 94955, -1000, 984, 119951, 984, 119951, 984,
	119951, 984, 984, -1000, -1000, -1000, -1000, -1000, 43, -1000,
	-1000, 133880, -1000, 49505, -1000, -1000, 1565, 3763, 1648, -1000,
	3041, -1000, 3038, -1000, 33, -1000, -1000, 1868, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3760, 133880, -1000, 2221,
	-1000, -1000, -1000, -1000, 94955, 94955, 94955, 94955, 119951, 3319,
	-1000, 119951, 3310, 94955, -1000, -1000, 85488, -1000, 2578, 3035,
	-1000, -1000, -1000, -1000, -1000, -1000, 1697, 2341, -1000, 2618,
	-1000, 1609, -1000, -1000, -1000, 133880, 54081, -1000, -1000, 133880,
	1800, -1000, 52365, 51793, -1000, -1000, 1774, 94955, 2687, -1000,
	2687, -170, -1000, 132127, 2616, 94955, -1000, -1000, -1000, -1000,
	-1000, 928, 580, 580, 1218, 1218, 1218, 1218, 3533, 858,
	5088, 6627, 6976, 6976, 5112, 5112, 5112, 5112, 5112, 6976,
	491, 1080, 1080, 491, 491, 491, 491, 491, 1080, 1080,
	1080, 6976, 6976, 6976, 1080, 12662, 134267, 12866, 49505, 49505,
	1236, 2024, 518, 12220, 49505, 1190, 1190, 1190, 1190, -1000,
	2102, -1000, -1000, -1000, -1000, 2975, 600, 53509, 53509, -1000,
	-1000, -1000, -1000, 28075, 49505, -1000, -1000, -1000, -1000, 38007,
	-1000, -1000, 131304, -319, 423, -1000, 209, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	422, -144, -49, -1000, 49505, 49505, 49505, 420, -1000, 208,
	49505, 119951, -1000, 18039, 745, -145, -1000, -81, 1443, -1000,
	49505, -1000, -1000, 1234, -1000, 1232, 1231, 1230, -1000, 599,
	416, -1000, 205, -1000, 2258, 598, 596, 49505, -1000, -1000,
	-1000, -1000, -1000, 131263, -1000, -1000, 130868, -1000, -1000, 130827,
	-1000, -1000, 130432, -1000, -1000, -1000, -1000, -1000, 133452, 17846,
	17653, 17217, 9246, 16399, 15082, -83, 415, -86, 414, 924,
	913, 411, 410, 406, -94, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -95, 404, -1000,
	2972, -144, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	402, -1000, 401, -1000, 133411, -144, 400, 7144, -1000, 53509,
	53509, 53509, 53509, -1000, 394, -1000, 131740, -1000, 133024, 37435,
	37435, 37435, 393, 132983, 49505, -144, -97, -1000, -105, -1000,
	-1000, 527, -110, 998, 36834, 56372, 26316, -1000, 998, 998,
	49505, -1000, 49505, 2634, -1000, -1000, -1000, -1000, 2632, 2329,
	2863, 57492, -1000, -1000, -1000, -1000, 104905, -1000, 3625, 2958,
	-1000, 104905, -1000, -1000, 119951, 456, -1000, 104905, 104905, 26316,
	900, -1000, 900, 104905, 797, -1000, -1000, -1000, -1000, -1000,
	388, 64829, -49, 202, 26316, 987, -1000, -1000, 2769, 2769,
	2769, 2769, 2769, 94955, -1000, -1000, 119951, 1227, -31, -91,
	2807, -1000, 3605, -1000, 2136, -1000, 70949, -1000, 761, 1208,
	26316, -1000, -1000, -1000, 595, -1000, 3649, 3649, -1000, 3649,
	119951, 2971, 176, 2799, -1000, 141, 73174, 3759, -1000, -1000,
	241, -1000, 94955, 241, 241, -1000, 94955, 94955, 2287, -1000,
	243, -1000, 242, -1000, -1000, -54, -1000, 1008, 34517, -1000,
	1622, -1000, -1000, 1564, -1000, 2029, -1000, 1206, -1000, -1000,
	-1000, -1000, 34517, -1000, 2203, 119951, 119951, 94955, -1000, 119951,
	-1000, 2152, 73174, -1000, 2462, 124351, 2455, 70949, 119951, -1000,
	-1000, 593, 939, 2615, 2612, 1074, 119951, 119951, 2608, 123801,
	123251, -1000, 3757, 119951, 2087, 49505, 3468, 2357, 2318, 43,
	43, -1000, 43, 43, 43, -1000, 592, 1457, 94955, 94955,
	119951, 73174, 94955, 2170, -1000, -1000, -1000, -1000, -1000, 86038,
	-1000, -1000, 3660, 3659, -1000, 1392, -1000, -1000, -1000, 1392,
	2116, 2162, 119951, 73174, 94955, 73174, 122701, 122151, -1000, -1000,
	1725, 119951, -1000, -1000, -1000, -1000, 1452, -1000, 809, 2151,
	43, 43, -1000, 43, 43, 43, 591, 26316, 1968, -1000,
	3054, 119951, 3697, 121601, 3696, 119951, 119951, 119951, 73174, 3395,
	119951, 119951, 73174, -1000, 121051, 5568, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 74308, 1087, 119951,
	1313, -1000, -1000, 1721, 1225, 1223, 85488, 2073, 1717, 1838,
	119951, 60884, 982, 60884, 2773, -1000, -1000, 23461, -1000, 133880,
	133880, -1000, 133880, -1000, 71516, 77720, 119951, -1000, 1033, 119951,
	79934, 968, 3208, 65943, -173, 975, 77720, 94955, -30, 2694,
	119951, -1000, -1000, -1000, -1000, -1000, 2116, 3206, 456, 2459,
	-1000, 77720, 3569, 3203, 590, 3756, 3755, -1000, 94955, 2375,
	2457, -1000, -1000, 120501, 3272, 809, 119951, 998, 57492, 1937,
	-1000, 63712, 1056, 119951, 1862, 122, -1000, -1000, -1000, 13,
	119951, -1000, 776, -1000, -1000, 753, 753, 975, -279, 584,
	-1000, 872, 861, 61451, 77720, -116, -1000, -1000, -1000, -1000,
	2455, 94955, 119951, 1305, 2767, 119951, -124, -1000, 199, 583,
	857, 855, -1000, 3255, -1000, -140, -1000, 983, 60884, 2970,
	2968, -1000, -1000, 1005, -1000, 1430, 975, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -14, 1833,
	119951, -173, -173, -43, -31, -1000, 984, -1000, 984, -1000,
	984, -1000, -1000, -1000, 133880, -1000, -1000, -1000, 1645, 1644,
	119951, -1000, -1000, 119951, -1000, 26316, 119951, 94955, 26316, 94955,
	3033, 3032, -1000, -1000, -1000, 119951, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1102, -1000, 1800, 2337, -1000, 582, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2550, -1000,
	-32, 33945, 902, -1000, -1000, 94955, -15, 49505, 49505, 11433,
	11231, 49505, 53509, 53509, -1000, 49505, 10139, -1000, -1000, -1000,
	-1000, -1000, 2965, 579, 49505, 70949, 7089, 6013, -1000, 387,
	14055, 491, -1000, 49505, -1000, 569, -1000, 385, 36262, -1000,
	132555, -50, -125, -1000, 19429, -144, -131, -1000, -1000, 757,
	-1000, 3268, -1000, 49505, 132596, 2524, 2009, 1832, 1672, 3649,
	3692, 22888, -1000, 67616, 1013, 2292, 130391, -1000, -1000, -1000,
	-1000, 70949, 70949, 49505, 49505, -1000, 49505, 49505, 49505, -1000,
	-1000, -1000, 3649, 914, -1000, -1000, -1000, 914, -1000, -1000,
	1392, -1000, 1392, -1000, 49505, -1000, -1000, 2959, 49505, -1000,
	70949, 70949, 53509, 53509, 53509, 53509, 53509, 53509, 53509, 53509,
	53509, 53509, 53509, 53509, 53509, 53509, 53509, 53509, 53509, 53509,
	53509, 53509, 2640, 53509, 3624, 3624, 3624, 1119, -1000, 3023,
	2959, 49505, 49505, 70949, 384, 383, 377, -1000, 49505, -144,
	-1000, -1000, 6815, 572, -1000, 2535, -1000, 2870, -1000, 49505,
	-1000, -122, -1000, 2611, -1000, -1000, 2870, 2870, -132, 133880,
	57492, 57492, -1000, 571, 49505, 2626, -1000, -1000, 744, -317,
	-1000, 853, -1000, -1000, -1000, -1000, -1000, 852, -1000, 456,
	-1000, -1000, -1000, 198, 104905, 104905, 737, -1000, -133, -1000,
	-1000, -134, -1000, 3566, 376, 26316, -1000, 998, 2744, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2657, -173, 119951, 119951,
	1715, 2313, 3690, -1000, 3652, 754, 736, 177, 3649, 373,
	372, 370, -173, 119951, 119951, 1706, 119951, -1000, -1000, -1000,
	241, -1000, -1000, -1000, 236, -1000, -1000, -1000, -1000, 2701,
	-1000, -33, -1000, -1000, -1000, 49505, -1000, -1000, 3387, 1219,
	1213, -1000, -1000, -1000, 2951, -1000, 3194, -1000, 2454, -1000,
	1061, -1000, 1921, 49505, 570, 2763, 568, 567, 3754, 2113,
	3744, 1075, 3166, 2287, 3162, 2287, -1000, -1000, -1000, 934,
	-1000, 133880, 2357, -1000, 566, 549, -1000, -34, 1614, 1879,
	1205, 1002, -1000, -1000, -1000, -1000, 49505, 49505, 104355, -1000,
	489, 3385, -22, -1000, -1000, -1000, 1702, 1200, 1191, -1000,
	-1000, -1000, -1000, 2116, 1687, 1187, 1184, -1000, -1000, -1000,
	-1000, -1000, 2453, -1000, -1000, 3160, 997, -1000, 3097, 3074,
	908, 119951, -1000, 995, -1000, -1000, -1000, -1000, 49505, -1000,
	-35, 1180, 3525, 2451, 94955, -1000, 2287, 3158, 1177, -1000,
	1176, -1000, -1000, -1000, 3534, 3521, 1186, -1000, -1000, -1000,
	-1000, -1000, 73741, -1000, -1000, 1041, 119951, 73174, 94955, 2021,
	-1000, -1000, 84388, 84938, 119951, 2798, -173, 898, -1000, 2953,
	898, 982, 2952, -1000, 2648, -1000, 994, 94955, 3743, 366,
	-139, -37, 70949, 3563, -1000, 2402, 623, 94955, 907, -1000,
	3625, -1000, -1000, -1000, 990, -1000, 3515, 94955, 3562, 3154,
	987, 43, 94955, 3670, -1000, -1000, 3561, 94955, 3153, 2374,
	2449, 2574, 809, 78834, 987, 2281, -53, -1000, 1862, 35661,
	3380, -150, -1000, -1000, -1000, 998, 67059, 57492, 49505, 3742,
	-152, -1000, -1000, -1000, -1000, -1000, 102148, 102148, 77720, 77720,
	77720, 975, 119951, 119951, 79934, -1000, -1000, 548, 119951, 119951,
	546, -1000, 119951, 119951, 3741, 77720, 77720, 77720, -40, 545,
	-1000, 851, 850, 845, -1000, -1000, -1000, -1000, -1000, -1000,
	844, 835, 983, -1000, -140, 60884, 43, -1000, 2301, 94955,
	-1000, 22315, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 984,
	-173, -1000, -1000, 2198, 2409, 2198, 1828, 1823, -1000, -1000,
	2322, -1000, -1000, -1000, -1000, 2667, 3390, 26316, 3492, 1190,
	49505, 49505, 7635, 5609, 5388, 1190, 49505, 49505, 70949, 6492,
	-155, 49505, 49505, -1000, 49505, 735, 133880, -1000, 3688, 49505,
	365, 344, -1000, -1000, -1000, 3639, -1000, -1000, -1000, 133880,
	49505, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 340, -1000,
	142, -1000, -1000, -1000, 127651, -1000, 49505, 336, 3466, -1000,
	335, 334, 11908, 5833, 129996, 129955, 129560, 332, -1000, -1000,
	330, 329, 133880, 3023, 133880, -1000, -1000, 1132, 1132, 1363,
	1363, 1363, 1363, 3624, 368, 357, 482, 1724, 1724, 1724,
	1202, 1119, 1119, 1724, 1724, 1724, 1119, 2950, 2645, 542,
	7176, -1000, -1000, 133880, 133880, 326, -1000, -1000, -1000, -144,
	318, 6815, -1000, 2865, 3460, 133880, -1000, 57492, 2865, 2865,
	-1000, -1000, 2329, 119951, 133880, 57492, -1000, 2958, -1000, 20591,
	20013, -1000, 26316, -1000, -1000, -1000, -1000, 3625, -1000, 64829,
	-1000, 539, -1000, 107, -1000, 2744, -1000, 833, -1000, -1000,
	77720, 77720, 2769, -173, -262, 119951, -1000, -1000, 731, 3738,
	752, 26316, 313, -1000, -1000, -1000, -173, -173, 119951, -173,
	-1000, -1000, -1000, 3339, 133880, 119951, 119951, 1541, 103805, 119951,
	3147, -1000, 5094, -1000, 1074, 129519, 58052, -1000, 58052, 119951,
	-1000, -1000, -1000, -1000, 2035, 1550, 3735, 1115, -1000, 3415,
	119951, -1000, 119951, -1000, -1000, -1000, 119951, 119951, 94955, 119951,
	-1000, 73174, 3110, -158, 133880, -41, -1000, 828, -1000, 1374,
	-1000, 21742, 119951, 73174, 94955, 119951, 73174, 94955, 3136, 119951,
	2244, -1000, -1000, 2974, -1000, 3108, -164, 26316, -1000, 3684,
	3680, 3135, 3423, -1000, 119951, 3679, 119951, 94955, 3338, -1000,
	-1000, -1000, -1000, -1000, -1000, 1677, 1175, 1173, 2373, -42,
	2371, 2309, -43, 2073, 982, -44, 538, -1000, 823, -1000,
	-1000, 820, -1000, 982, -1000, 77720, 60884, 3734, 456, -1000,
	2736, -1000, 99914, 2319, 43, -1000, 3733, 102705, 537, -1000,
	2296, -1000, 729, -1000, 2540, 73174, 2116, 43, 94955, -1000,
	-1000, 456, 311, -45, -1000, 3127, 1069, 26316, 94955, 3134,
	2577, 809, 78834, -1000, 1394, 2685, -1000, -46, -1000, 622,
	43, 2281, -1000, -53, 133880, -1000, 819, -1000, -176, -1000,
	-1000, 305, -1000, 3335, 3333, -1000, 2856, 58052, 536, 535,
	119951, 3331, -1000, -1000, -177, -1000, -1000, 3058, 3058, 77720,
	60884, 77720, 77720, 77720, -1000, 983, 898, -1000, 2479, -1000,
	-1000, -1000, -1000, -1000, 26316, 1711, -1000, 533, 532, -1000,
	-1000, -1000, -1000, 3390, 1190, 1190, 49505, 49505, 49505, 1190,
	6492, -182, -1000, 1190, 1190, -144, -1000, -1000, 132555, -1000,
	-1000, -1000, 133880, -1000, 21169, 2202, -1000, 129124, -1000, 33945,
	-1000, -1000, 49505, 49505, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 53509, 2949, 529, 70949, -1000, -1000, 297, 986,
	49505, 51221, 2611, 986, 986, -1000, -183, -1000, -1000, -1000,
	3625, -1000, 3625, 107, -1000, -1000, 3732, 26316, -1000, 77720,
	-1000, -1000, -1000, 3731, -172, 751, -1000, 3729, -1000, -1000,
	106, -1000, -1000, -1000, 2792, 3560, -1000, 1944, -1000, 119951,
	-1000, 119951, -1000, 26316, 119951, 2887, 1246, -1000, 939, 2604,
	526, 53509, 1100, 94955, 841, 2839, 2805, -1000, 3592, 3456,
	2860, -184, -1000, 119951, 49505, 119951, -185, -190, 2439, -1000,
	-1000, 1098, 1244, 49505, 1096, -1000, -1000, -1000, 70949, 525,
	2287, 2287, -191, -193, -1000, -1000, -1000, 49505, 1161, 119951,
	35089, -1000, 3723, 3385, -1000, -1000, -1000, -1000, -1000, -1000,
	119951, -1000, 119951, -1000, 49505, 1160, -1000, -1000, -1000, 3674,
	2287, 26316, 2287, -1000, 2287, 3423, 1114, 119951, 73174, 94955,
	1673, 1673, 3020, -1000, -1000, -1000, 2629, 2629, 77720, 60884,
	-1000, -54, 982, -1000, 3559, 2723, 3720, -1000, -1000, -1000,
	-1000, 2601, -1000, -1000, 119951, 2598, 977, -1000, -196, -1000,
	816, 813, 79934, 968, 949, -1000, -63, 524, -1000, 812,
	-1000, -1000, -1000, -1000, 456, 3558, -1000, 3672, 523, 520,
	119951, 2369, 519, 26316, 3378, 809, 78834, -1000, 3272, 1862,
	-1000, 2437, 119951, 3371, -1000, 2685, 518, -1000, 975, 517,
	514, 2581, 2581, -199, 58052, 58052, -201, 513, 975, -1000,
	-206, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -71, -1000,
	869, 863, -1000, -1000, 94955, 94955, 49505, 49505, -1000, 1190,
	1190, 1190, -1000, 288, -1000, -1000, 2281, 3453, -1000, -77,
	129083, 128688, 2105, 53509, 70949, -207, -1000, -1000, 119951, 133880,
	-84, -1000, 133880, 511, 510, 425, -1000, -1000, -1000, 728,
	581, -1000, -1000, -1000, 119951, 3719, -1000, 119951, 103255, 119951,
	-1000, -1000, 1918, -1000, -1000, -1000, 119951, 2445, -1000, -1000,
	-1000, 1073, 49505, 7176, 53509, 508, 49505, -1000, 507, 505,
	3555, 3303, -1000, 2699, 2931, 2107, 58052, -1000, 3390, -1000,
	128647, -1000, 1065, 1985, -1000, -1000, -1000, -1000, 133880, 53509,
	3423, 58052, -1000, -1000, 504, 503, 133880, 494, 811, 2948,
	-1000, -1000, -1000, -1000, -1000, 133880, 464, 3525, -1000, -1000,
	-1000, -1000, 2287, 94955, -1000, -1000, -1000, 1148, -1000, -1000,
	-1000, -1000, 3717, 3716, 2947, 84388, -1000, -208, -1000, -1000,
	1995, 43, 2178, 2791, -1000, 2319, 461, -1000, -1000, 2321,
	2692, -1000, 102705, 34517, 34517, 286, 3552, 949, -1000, 3634,
	-1000, 3305, 3305, 49505, 3547, 43, -1000, 3670, 58052, -1000,
	94955, 58052, 2359, 2111, 2563, 78834, -1000, 2574, -1000, -1000,
	-209, 119951, 1862, -1000, -1000, 77720, 77720, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1065, -214,
	-215, -1000, 77720, -1000, -1000, 2479, -1000, 119951, -1000, 119951,
	-1000, -1000, -216, -217, -1000, 2153, 49505, 33945, -1000, -1000,
	2105, -223, -1000, -92, -1000, 3546, 51221, 3714, 3713, 3711,
	-1000, -1000, -173, -1000, -173, -1000, 1930, -1000, -1000, -1000,
	3119, 2857, 128252, 7176, 2544, 119951, 128211, 2116, 2116, -1000,
	3537, 2921, -1000, -1000, 2723, 458, -1000, -1000, -1000, -1000,
	902, 119951, 2723, 2850, 94955, 7176, 1071, -228, 2198, 2198,
	49505, 33373, 2231, 49505, -1000, -1000, 3423, 119951, -1000, -1000,
	119951, 2355, -1000, 2896, 3636, -1000, 968, -1000, 2222, 119951,
	-1000, 3410, -1000, 3330, -1000, -1000, -1000, 2736, 43, -1000,
	-1000, -1000, -229, 133880, 43, -1000, 285, -234, 1069, -239,
	94955, 2011, -1000, 809, -1000, 2577, 998, -1000, -1000, -240,
	-245, 2107, 1065, 2151, -247, -1000, -248, -250, -1000, -1000,
	281, 50649, 50649, 50649, -144, -170, -1000, 119951, 457, -1000,
	-1000, -1000, -1000, -1000, 3068, 981, -1000, 832, 1892, 280,
	1083, 277, 189, -1000, -1000, -1000, 2151, 119951, -1000, -1000,
	-1000, 980, 456, -1000, 49505, 1065, -253, -1000, 1054, -256,
	-1000, 1050, -261, -1000, 2930, -1000, -264, 2287, -263, 228,
	1673, 979, 3509, -1000, -1000, -1000, 2321, 94955, -266, -1000,
	-1000, 2433, -1000, 2723, 977, -1000, -1000, -1000, 1065, 453,
	2107, 452, 1545, 809, -1000, -1000, 1392, 3378, 3278, 975,
	975, 2723, 2107, 961, -1000, 975, -1000, -1000, -1000, 3209,
	-1000, 54653, 2320, 1819, 131699, 3209, 3209, -1000, -1000, 119951,
	3495, -1000, 884, 879, 1493, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2860, -267, 3488, 2544, 133880, 2723, -1000,
	2198, 2789, -1000, 2198, 2919, -1000, 2215, -1000, -1000, -1000,
	2875, -1000, 2900, -1000, 1775, 3615, 2555, 451, -1000, 119951,
	1805, 1791, 3706, 2178, 2321, 2107, 58052, 2723, 58052, 2143,
	-1000, 119951, -1000, 2111, 1355, -1000, -1000, 2151, 2723, 998,
	450, -1000, -1000, 1920, 3556, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 802, -1000, 3288, -1000, 1094, 2207, 2207,
	998, -1000, 801, 832, -1000, -1000, 449, -1000, 448, -1000,
	2308, 119951, 2295, -1000, -1000, -1000, -1000, 119951, -1000, -1000,
	3705, -1000, 968, -1000, 2723, -274, 2151, -280, -1000, -1000,
	-1000, -173, 2011, -1000, 1615, 961, 2151, -1000, 1815, -1000,
	-1000, 2272, 50077, 49505, -1000, 3608, -1000, -1000, 2637, -1000,
	-1000, 49505, 2860, 49505, 49505, -1000, 228, 65386, -282, -1000,
	2321, 2151, 1065, 961, 2107, 1545, 67059, 998, 961, -1000,
	-1000, -1000, 133880, -1000, -1000, -1000, 133880, -1000, -285, -288,
	-1000, -279, 102148, 2257, 2555, 961, 2107, 998, 2723, 2143,
	-269, -1000, 998, 2151, 1147, -290, -1000, -1000, -1000, -1000,
	998, 2723, -1000, 2151, -1000, -1000, -1000, -1000, -1000, 446,
	-1000, -1000, 2151, 961, 49505, 961, 998, -306, 998, -1000,
	2151, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4535, 4534, 4533, 4532, 4531, 4530, 4529, 4528, 4525,
	4524, 4523, 4521, 168, 4518, 4512, 4507, 4506, 4503, 4501,
	4499, 4497, 4496, 4495, 4492, 4491, 4490, 4487, 4485, 4484,
	4483, 4480, 4479, 4478, 4476, 4474, 4473, 4471, 4470, 4469,
	4468, 4467, 4466, 4465, 4464, 4463, 4458, 4455, 4454, 4453,
	4451, 4449, 4448, 4447, 4446, 4443, 4442, 4441, 4440, 4439,
	4438, 4436, 4435, 4434, 4433, 4432, 4431, 4430, 55, 4429,
	4428, 4424, 4421, 4416, 4413, 4412, 4407, 4406, 4405, 4404,
	4403, 4399, 4397, 4393, 4391, 4389, 4386, 4383, 4382, 66,
	4381, 279, 4380, 4372, 4369, 4365, 4360, 4358, 4357, 4356,
	4355, 4354, 4350, 4344, 275, 4343, 132, 170, 4342, 4341,
	3884, 4340, 4338, 274, 4336, 4334, 4331, 4330, 4322, 285,
	4321, 4320, 4316, 4314, 4312, 4310, 4309, 4308, 4307, 4306,
	4305, 4304, 94, 211, 4303, 4300, 2769, 4299, 4297, 4292,
	4290, 4289, 4288, 4287, 4285, 4283, 4281, 4276, 248, 166,
	4275, 271, 4274, 4273, 4271, 4270, 4264, 4257, 4256, 4254,
	4252, 4251, 4250, 4249, 4248, 4247, 4246, 4244, 4242, 4240,
	4237, 4236, 4235, 4234, 4232, 4231, 4230, 4228, 4227, 4226,
	4225, 4222, 4221, 4220, 4219, 4218, 4217, 4216, 4214, 4213,
	4212, 247, 216, 140, 4211, 4210, 270, 266, 4209, 4208,
	4207, 4204, 4203, 134, 6, 38, 4201, 4200, 115, 89,
	101, 105, 112, 109, 4199, 116, 4198, 129, 70, 4197,
	22, 2, 165, 253, 5567, 243, 4195, 4193, 4192, 244,
	201, 4189, 241, 4183, 4182, 4181, 4180, 4179, 4178, 81,
	52, 188, 185, 179, 175, 86, 4177, 162, 108, 85,
	60, 46, 14, 77, 213, 21, 10, 260, 4174, 259,
	11, 142, 5, 37, 4172, 4171, 4169, 4167, 3843, 135,
	4166, 265, 245, 172, 4165, 4164, 4163, 445, 4162, 4160,
	59, 4159, 100, 98, 126, 16, 130, 4158, 152, 176,
	28, 4157, 264, 68, 4155, 160, 111, 90, 10343, 8264,
	4154, 4150, 136, 69, 91, 308, 221, 194, 200, 95,
	158, 159, 125, 217, 212, 182, 56, 4149, 254, 4148,
	3556, 78, 192, 154, 6297, 4147, 4145, 4144, 87, 205,
	107, 4142, 4141, 83, 17, 32, 3, 1, 148, 20,
	34, 19, 4140, 33, 121, 51, 31, 4139, 24, 4135,
	4132, 4129, 4122, 4121, 44, 161, 4118, 4117, 282, 4116,
	104, 58, 25, 4114, 67, 225, 4113, 222, 137, 4112,
	4105, 258, 210, 189, 4102, 43, 233, 4099, 4098, 4097,
	4096, 4092, 138, 7, 139, 4091, 4087, 146, 4086, 53,
	240, 199, 4079, 62, 4075, 4074, 181, 79, 144, 284,
	204, 230, 110, 236, 190, 235, 4073, 4072, 4070, 223,
	4069, 4067, 227, 156, 4065, 4064, 252, 287, 96, 49,
	82, 238, 84, 197, 157, 4063, 206, 4062, 4061, 286,
	187, 218, 12, 4, 92, 131, 4060, 8, 237, 155,
	226, 120, 4059, 7289, 2442, 1908, 4058, 4057, 150, 124,
	80, 122, 153, 262, 97, 4056, 4055, 1729, 4054, 4052,
	4050, 4049, 191, 4045, 4044, 4042, 164, 180, 234, 4040,
	123, 74, 45, 23, 128, 250, 272, 118, 231, 178,
	249, 4039, 4036, 4034, 193, 4033, 73, 215, 163, 208,
	256, 54, 4032, 119, 4031, 151, 273, 71, 147, 4030,
	229, 4028, 4021, 4020, 4018, 4017, 4016, 4014, 186, 239,
	4013, 4012, 4010, 36, 198, 4009, 261, 203, 184, 102,
	50, 4008, 99, 2392, 4003, 167, 1340, 61, 263, 219,
	4000, 2153, 65, 3999, 0, 14324, 9343, 12751, 13238, 3998,
	6518, 3997, 3996, 3995, 224, 145, 3994, 3990, 3989, 114,
	3985, 88, 3983, 3981, 76, 3979, 26, 13, 18, 29,
	27, 267, 171, 3977, 3969, 63, 149, 173, 3967, 281,
	232, 3966, 3965, 3964, 3962, 113, 3961, 42, 3960, 40,
	3956, 3955, 48, 15, 41, 3953, 3951, 209, 3950, 228,
	255, 3949, 169, 3948, 72, 141, 3945, 3943, 3941, 64,
	57, 257, 93, 3940, 283, 3938, 202, 3937, 3934, 3934,
	30, 3932, 3931, 246, 117, 106, 3929, 251, 143, 39,
	214, 183, 220, 3927, 3915, 177, 3914, 3913, 3910, 277,
	3909, 3908, 35, 3907, 3905, 3903, 9, 3901, 3900, 207,
	3284, 3895, 3888, 47, 3887, 196,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	601, 601, 620, 620, 23, 23, 45, 45, 24, 46,
	17, 602, 602, 602, 602, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	597, 597, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 603, 603, 245, 245, 245, 247, 247, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 497, 497,
	497, 529, 529, 529, 528, 528, 624, 624, 625, 625,
	625, 625, 625, 135, 135, 395, 395, 395, 56, 56,
	56, 56, 56, 592, 592, 208, 208, 208, 210, 210,
	209, 209, 209, 209, 209, 80, 80, 609, 609, 610,
	610, 608, 607, 607, 607, 611, 611, 611, 207, 207,
	207, 131, 131, 131, 131, 131, 131, 132, 132, 133,
	133, 211, 211, 211, 213, 213, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 217, 16, 16,
	16, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	109, 109, 531, 531, 532, 532, 202, 202, 203, 203,
	203, 203, 204, 204, 205, 205, 205, 71, 71, 214,
	214, 216, 216, 215, 215, 215, 215, 215, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 59, 59, 59,
	59, 59, 60, 60, 60, 60, 60, 60, 61, 61,
	61, 61, 61, 61, 62, 62, 69, 69, 69, 69,
	69, 69, 69, 193, 193, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 72, 77, 77,
	77, 77, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 627, 627, 628, 628, 629, 629, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 86, 86, 356, 356, 319, 319, 87,
	87, 87, 88, 88, 89, 89, 73, 73, 590, 590,
	372, 372, 488, 488, 74, 598, 598, 598, 600, 600,
	599, 599, 91, 91, 394, 394, 92, 92, 92, 92,
	92, 92, 93, 93, 93, 93, 93, 93, 93, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 101, 101, 101, 101, 101, 102, 102,
	102, 99, 99, 99, 96, 96, 96, 95, 95, 95,
	100, 100, 100, 589, 308, 308, 98, 98, 98, 97,
	97, 97, 373, 373, 103, 103, 103, 103, 320, 104,
	104, 104, 104, 104, 104, 104, 104, 107, 107, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 490, 490, 105, 105, 105, 455, 455, 110,
	110, 110, 410, 410, 111, 111, 111, 111, 111, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 134, 134,
	134, 134, 134, 134, 134, 134, 594, 594, 365, 365,
	271, 271, 271, 271, 123, 123, 123, 123, 124, 124,
	124, 125, 125, 198, 198, 141, 141, 141, 141, 140,
	140, 140, 140, 140, 140, 140, 140, 63, 63, 63,
	64, 64, 65, 65, 66, 66, 67, 67, 68, 68,
	68, 68, 68, 144, 144, 621, 621, 146, 143, 143,
	143, 143, 143, 142, 142, 145, 145, 145, 145, 147,
	149, 149, 149, 149, 149, 148, 148, 148, 148, 150,
	150, 522, 522, 381, 381, 520, 520, 541, 541, 521,
	521, 326, 326, 326, 326, 326, 327, 327, 327, 530,
	530, 530, 530, 530, 530, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 199, 199,
	200, 201, 201, 201, 201, 201, 176, 176, 176, 192,
	192, 192, 192, 192, 192, 192, 192, 179, 179, 179,
	163, 163, 152, 152, 152, 152, 152, 152, 152, 157,
	157, 157, 157, 157, 157, 157, 157, 153, 153, 165,
	165, 165, 165, 165, 158, 158, 159, 159, 159, 160,
	160, 160, 160, 186, 186, 162, 162, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 154, 154, 154, 154,
	167, 167, 167, 167, 417, 417, 417, 191, 191, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 189, 189, 189, 189, 189,
	189, 612, 612, 613, 613, 613, 183, 183, 183, 183,
	183, 183, 469, 469, 177, 177, 177, 177, 182, 182,
	182, 182, 185, 185, 185, 185, 400, 400, 174, 174,
	174, 175, 175, 175, 180, 180, 181, 357, 357, 178,
	178, 184, 184, 184, 184, 155, 155, 155, 155, 155,
	155, 155, 155, 156, 156, 156, 156, 187, 187, 173,
	173, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 631, 631, 169, 169, 169, 168, 168, 168,
	168, 171, 171, 172, 172, 172, 172, 172, 172, 170,
	161, 190, 591, 591, 587, 587, 587, 587, 587, 587,
	587, 587, 588, 588, 588, 588, 593, 593, 115, 115,
	115, 115, 115, 115, 115, 126, 126, 126, 126, 126,
	126, 126, 129, 129, 116, 116, 116, 116, 116, 116,
	116, 119, 119, 117, 117, 117, 117, 118, 118, 81,
	81, 81, 81, 81, 15, 15, 15, 82, 82, 262,
	262, 220, 220, 220, 345, 345, 221, 221, 334, 334,
	334, 334, 218, 218, 219, 219, 83, 83, 632, 632,
	632, 604, 604, 604, 605, 605, 605, 605, 605, 605,
	328, 328, 329, 329, 435, 435, 435, 435, 435, 332,
	332, 332, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 335, 335, 246, 246, 246, 343, 344, 344, 336,
	336, 342, 341, 341, 340, 340, 339, 339, 337, 338,
	338, 338, 347, 347, 346, 349, 349, 348, 434, 550,
	550, 552, 552, 552, 552, 552, 552, 552, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 418, 418, 633, 633, 634,
	635, 548, 548, 548, 549, 544, 544, 545, 545, 545,
	545, 545, 330, 330, 331, 331, 331, 331, 546, 547,
	363, 363, 473, 551, 551, 553, 553, 555, 636, 636,
	636, 636, 636, 636, 637, 637, 637, 433, 433, 432,
	432, 354, 354, 556, 556, 556, 556, 557, 557, 557,
	557, 557, 560, 559, 558, 558, 558, 558, 558, 85,
	85, 85, 397, 397, 396, 396, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 195, 195, 274, 274, 79, 79, 79, 12, 12,
	12, 12, 12, 12, 12, 289, 289, 13, 13, 13,
	606, 606, 606, 84, 84, 84, 84, 84, 84, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 596,
	596, 595, 595, 275, 275, 639, 639, 90, 90, 90,
	90, 90, 90, 90, 90, 491, 491, 492, 492, 78,
	78, 78, 78, 78, 419, 419, 416, 416, 415, 415,
	362, 362, 471, 471, 471, 472, 279, 279, 280, 280,
	239, 239, 239, 31, 30, 21, 21, 26, 26, 27,
	27, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	28, 28, 49, 49, 49, 49, 50, 50, 50, 50,
	53, 53, 54, 54, 48, 48, 48, 48, 51, 51,
	44, 44, 55, 55, 55, 55, 55, 614, 616, 616,
	615, 615, 619, 619, 619, 619, 619, 619, 617, 617,
	618, 618, 622, 622, 623, 623, 122, 122, 127, 127,
	127, 127, 127, 128, 128, 128, 128, 130, 130, 130,
	130, 139, 139, 194, 194, 194, 194, 194, 194, 194,
	57, 57, 57, 57, 70, 70, 70, 70, 137, 641,
	641, 641, 138, 138, 138, 640, 640, 272, 272, 429,
	429, 430, 430, 642, 642, 431, 431, 431, 431, 431,
	265, 264, 266, 266, 267, 267, 76, 76, 76, 255,
	255, 254, 256, 256, 257, 257, 252, 252, 533, 533,
	259, 259, 259, 260, 260, 248, 248, 249, 249, 250,
	250, 251, 251, 263, 263, 643, 643, 113, 113, 113,
	197, 197, 318, 318, 318, 426, 426, 426, 355, 355,
	286, 286, 428, 428, 428, 428, 393, 393, 393, 196,
	196, 370, 370, 383, 383, 384, 384, 485, 485, 385,
	120, 120, 121, 121, 136, 136, 224, 224, 222, 222,
	222, 222, 222, 222, 222, 222, 229, 229, 230, 230,
	231, 231, 232, 233, 233, 233, 233, 374, 374, 234,
	234, 234, 223, 223, 223, 225, 225, 225, 225, 225,
	225, 225, 228, 228, 228, 228, 235, 235, 235, 227,
	227, 567, 567, 567, 569, 569, 571, 571, 570, 570,
	566, 566, 568, 568, 638, 638, 399, 399, 399, 352,
	353, 350, 350, 351, 351, 360, 360, 358, 359, 359,
	361, 361, 470, 470, 470, 240, 240, 240, 390, 390,
	390, 390, 391, 391, 422, 422, 420, 420, 420, 420,
	421, 421, 423, 423, 423, 424, 424, 425, 425, 387,
	387, 388, 388, 389, 389, 389, 389, 451, 451, 226,
	226, 226, 367, 367, 367, 368, 368, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 442, 442, 440,
	440, 440, 440, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 475, 476, 476, 369, 369, 477, 427, 427,
	585, 585, 585, 586, 586, 468, 468, 478, 478, 478,
	478, 478, 478, 466, 466, 467, 467, 486, 487, 487,
	403, 403, 403, 403, 401, 401, 404, 404, 404, 404,
	404, 402, 402, 479, 479, 479, 479, 392, 392, 480,
	480, 480, 480, 481, 482, 482, 483, 483, 436, 437,
	437, 493, 493, 493, 493, 495, 366, 366, 366, 366,
	366, 543, 542, 542, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 510, 510, 510, 510, 510,
	510, 510, 496, 496, 496, 496, 496, 500, 500, 500,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 501, 501, 506, 506, 507, 507, 507, 502, 503,
	508, 508, 508, 508, 644, 644, 512, 512, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 498, 498, 498,
	505, 505, 505, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 411, 411, 413, 413,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 445, 445, 445, 445, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	561, 561, 561, 561, 561, 561, 561, 561, 447, 447,
	564, 564, 565, 565, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 572, 572, 573, 573, 575,
	575, 576, 576, 577, 578, 578, 578, 579, 580, 580,
	574, 574, 581, 581, 581, 581, 582, 582, 583, 583,
	583, 583, 583, 584, 584, 584, 584, 584, 457, 457,
	458, 458, 464, 464, 464, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	325, 325, 324, 276, 276, 276, 276, 276, 276, 379,
	379, 377, 377, 377, 380, 380, 378, 378, 376, 376,
	375, 375, 454, 454, 452, 452, 456, 456, 405, 405,
	511, 511, 511, 511, 511, 511, 511, 511, 406, 406,
	406, 414, 407, 407, 408, 408, 408, 408, 408, 448,
	449, 409, 409, 409, 450, 450, 459, 463, 463, 462,
	461, 461, 460, 460, 438, 438, 439, 439, 386, 386,
	645, 645, 382, 382, 484, 484, 484, 484, 322, 322,
	371, 371, 321, 321, 313, 313, 314, 314, 314, 314,
	364, 364, 465, 465, 513, 513, 514, 514, 515, 515,
	516, 516, 517, 518, 519, 453, 453, 297, 296, 283,
	284, 295, 294, 293, 282, 285, 290, 291, 292, 287,
	288, 304, 303, 302, 253, 258, 309, 310, 310, 312,
	312, 311, 311, 299, 300, 301, 489, 281, 315, 315,
	316, 316, 316, 317, 317, 317, 317, 277, 277, 278,
	278, 305, 305, 306, 307, 307, 298, 298, 298, 268,
	268, 268, 269, 269, 270, 270, 527, 527, 524, 524,
	524, 525, 525, 525, 526, 526, 526, 526, 523, 523,
	523, 523, 523, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 535, 535, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 537, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 540, 540,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 4, 3, 6, 6, 6, 6,
	6, 8, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 6, 3,
	8, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 9, 10, 5, 2, 6, 4,
	7, 7, 7, 10, 5, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 3,
	2, 2, 6, 3, 3, 3, 3, 4, 4, 3,
	1, 3, 3, 2, 2, 1, 3, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 6, 4, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 5, 3, 5, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 3, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 5, 2, 0, 3,
	3, 4, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 3, 4, 5, 4, 4, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 4, 3, 4,
	4, 5, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 3, 2,
	5, 4, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 13, 16, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 1, 1, 0, 1, 4, 1, 0, 3, 7,
	7, 1, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 2, 8, 4, 2, 3, 5, 5, 5,
	2, 5, 5, 2, 2, 2, 0, 1, 1, 3,
	4, 11, 12, 9, 5, 3, 1, 5, 10, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 5,
	1, 3, 1, 2, 0, 1, 2, 2, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 6,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 13, 16, 3, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 603, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 204, 387, 432, 444, 402, 143, 423, 407,
	-145, -146, 462, -57, -70, -138, -137, 73, 130, 417,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -626, 102, -568,
	-94, -97, -130, -630, 162, 222, -116, -117, -118, 369,
	-124, -125, 425, -127, -128, -129, 428, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 467, -181, -190, -159, 528, 49, 482,
	82, 147, 436, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -567, -95, -96, -99, -101, -102, -98, -100,
	424, -225, -223, 600, 543, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 564, 573, -228, -226, -227, -235, 454,
	551, 502, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, -320, 2, -299, -305, -306, -307,
	-298, -268, -537, -540, 4, -534, -538, 169, 232, 333,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 510, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 186, 190, 191,
	192, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	205, 209, 211, 212, 213, 214, 215, 221, 222, 224,
	225, 226, 227, 228, 233, 234, 235, 239, 236, 245,
	246, 250, 251, 252, 254, 258, 259, 260, 261, 262,
	263, 265, 267, 266, 269, 272, 273, 276, 277, 278,
	279, 280, 281, 285, 286, 282, 287, 288, 290, 291,
	294, 292, 295, 296, 293, 297, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 298, 313,
	311, 315, 316, 317, 318, 331, 327, 328, 322, 323,
	319, 324, 320, 321, 325, 326, 330, 335, 336, 339,
	219, 341, 342, 345, 363, 349, 350, 351, 354, 355,
	358, 361, 362, 364, 365, 366, 367, 368, 369, 370,
	371, 372, 374, 375, 377, 378, 379, 381, 382, 383,
	385, 387, 388, 390, 391, 393, 394, 395, 396, 397,
	398, 399, 401, 402, 404, 403, 405, 407, 409, 410,
	411, 417, 423, 419, 420, 421, 422, 424, 425, 426,
	427, 428, 430, 431, 432, 434, 435, 436, 437, 438,
	440, 442, 443, 447, 448, 464, 465, 484, 444, 445,
	446, 449, 450, 451, 452, 453, 457, 455, 456, 458,
	459, 460, 462, 463, 466, 467, 469, 470, 471, 472,
	473, 474, 475, 478, 480, 481, 482, 501, 483, 485,
	489, 490, 491, 492, 486, 487, 500, 494, 495, 497,
	498, 503, 504, 505, 506, 507, 508, 509, 511, 513,
	521, 522, 523, 525, 528, 529, 530, 531, 519, 533,
	534, 537, 538, 539, 542, 540, 541, 543, 545, 548,
	549, 550, 556, 555, 557, 559, 560, 565, 566, 568,
	569, 570, 36, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 125, 126, 154, 165, 166, 178, 193, 194,
	206, 208, 216, 217, 218, 240, 241, 243, 248, 270,
	338, 340, 356, 360, 376, 380, 384, 386, 400, 439,
	476, 488, 493, 514, 515, 516, 517, 524, 526, 551,
	552, 553, 558, 567, -320, 2, -299, 347, -292, 2,
	-268, -268, 387, 28, 2, 28, 375, 456, 505, 507,
	2, -594, -365, 2, 28, -271, -268, 102, 204, 454,
	-292, 2, -594, -365, 25, 2, -268, 2, 361, 22,
	27, 66, 77, 98, 141, 164, 187, 190, -629, 363,
	394, 442, 458, 500, 511, 525, 2, 555, 291, 455,
	502, 232, 120, 530, 449, -606, 447, 448, 361, 392,
	434, 207, 544, -272, 2, 444, -268, 291, 2, 603,
	94, 74, 439, 459, -148, 2, 281, 522, -149, -150,
	-147, 514, -522, 449, 434, 313, -268, 603, 603, 603,
	28, -281, -268, 502, 232, 449, 120, 498, 603, 2,
	502, 366, 555, 455, 120, 397, 232, 530, 190, 141,
	27, 449, -606, 578, 579, 291, 127, -592, 2, -587,
	4, -538, -534, -314, -313, 502, 508, 120, -307, -298,
	593, -306, 603, 603, 603, 603, 2, 251, 252, 396,
	395, 459, 460, 28, 603, 603, 603, 603, 447, 2,
	164, 22, 27, 66, 93, 98, 127, 187, 190, 352,
	-627, 363, 394, 458, 500, 504, 511, 525, -605, 483,
	68, 422, 449, -604, -606, 291, 530, 141, -415, 120,
	281, 202, 538, 507, 505, 536, 133, 239, 541, 540,
	603, 603, -107, 2, 600, 32, 31, -106, -110, 143,
	462, -217, 502, 244, 2, -268, 603, 603, 603, 2,
	251, 252, 447, 448, 28, 603, 603, 188, -587, 2,
	603, 603, 603, 2, 28, 251, 252, 447, 448, 244,
	2, 68, 451, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 2,
	-192, 459, 483, 213, 47, 46, 74, 28, 393, 79,
	367, 121, 127, 149, 531, 205, 232, 233, 259, 93,
	94, -417, 44, 252, 68, 251, 448, -612, 447, -469,
	503, 450, 456, 497, 263, 444, 522, 102, 545, 435,
	570, 397, 398, 495, 411, 282, 158, 189, 4, 120,
	313, 434, 461, 514, 281, 443, 370, 84, 603, -638,
	2, 502, -640, 2, 522, 522, 2, -640, 2, -640,
	2, -640, 2, -641, 522, 567, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, -223, -225, -224, 603, 603, 603,
	603, 603, 603, 603, -192, 459, 2, 74, 28, -358,
	-360, 535, 242, 151, 353, -222, -224, 2, -567, -520,
	2, -443, -541, -445, 591, 592, 584, 499, 67, -324,
	332, 571, -457, 127, 536, 347, -540, -446, -459, 154,
	363, 439, -380, 8, 9, 5, 6, 7, -277, -447,
	-453, 527, 168, 337, -317, 604, 10, 600, -564, -224,
	-458, 37, 208, 65, -524, -316, -278, -496, 243, -315,
	-298, -561, -562, 4, -534, -535, -525, -499, -507, -503,
	-504, -510, -268, -537, 77, 111, 112, 110, 115, 114,
	284, 283, 116, 113, 461, 544, 66, 36, 216, 217,
	248, 338, 218, 75, -563, 142, -536, 240, 241, 476,
	51, 400, 178, 126, 125, 340, 56, 54, 552, -508,
	122, 514, 515, 516, 517, 193, 194, 58, 165, 166,
	360, 384, 493, 524, 526, 206, 270, 43, 106, 189,
	238, 220, 247, 249, 253, 271, 274, 314, 329, 334,
	357, 359, 433, 468, -644, 553, 488, 69, 70, -569,
	403, -570, -292, -569, 603, 603, 605, 603, -350, -352,
	-353, 2, 28, 139, 600, 2, -474, 2, -475, -479,
	-224, 264, -478, 600, -476, 598, -299, 348, -565, 440,
	-561, -562, -277, -298, -316, 4, -534, -536, 602, -354,
	600, 120, 449, 502, 78, 232, 93, 164, -410, 600,
	-268, 28, 347, 518, 605, -351, 391, -455, 600, 347,
	188, 350, 60, 295, 2, 2, 2, 2, 2, 216,
	-268, 502, 119, 2, 262, 2, 2, 2, 2, 2,
	2, 2, -373, 216, 2, -299, 555, -373, 216, 2,
	-373, 216, 2, -416, 2, 87, -282, 216, 2, -268,
	-308, 216, 2, -303, -305, -312, 216, 2, -310, -268,
	-532, 216, 2, -531, -527, 10, -526, 5, 4, -534,
	-538, -535, -537, 77, -443, 2, -136, 2, 60, -268,
	555, 2, 464, 2, 600, -148, 2, 71, 522, 43,
	459, -149, 2, -430, 2, -431, -264, -265, -266, -486,
	-267, 250, 390, 399, 574, 131, 332, 570, -621, 188,
	583, 518, -520, -520, -520, -381, 602, 2, 2, 2,
	2, 2, 2, -479, 216, -299, 2, -296, -523, 4,
	-534, -538, -535, -539, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 127,
	131, 135, 139, 140, 144, 147, 151, 168, 170, 183,
	187, 188, 204, 207, 210, 223, 237, 242, 244, 264,
	268, 275, 283, 284, 332, 337, 343, 347, 348, 352,
	353, 373, 389, 406, 429, 454, 461, 479, 496, 502,
	512, 518, 520, 527, 535, 536, 544, 546, 554, 561,
	562, 563, 564, -540, 2, -479, 216, 2, -302, 216,
	-479, -305, 2, -282, 2, -295, -523, 2, -321, 216,
	-299, -301, -305, -303, 2, 2, 2, 2, -310, 2,
	-531, 216, 2, 28, 28, 555, 391, 244, 518, 605,
	-371, -313, -314, -519, 8, -364, -268, 602, -443, 2,
	-136, -119, 2, 183, -443, 216, 2, -136, 216, 2,
	-443, 216, 2, -136, 216, 2, -268, 2, -607, 2,
	-531, 216, 216, -268, 2, 295, 2, 2, 525, 2,
	98, 502, 119, 2, 421, -628, 442, 529, 2, 2,
	2, 2, 2, 2, 2, 502, -287, 2, -268, 183,
	486, -310, 216, -311, 2, 455, -639, 403, -531, 216,
	2, 555, -303, 216, 2, -303, 232, 246, -282, 216,
	2, 507, 505, 507, 505, 188, 2, 244, 2, 244,
	2, -480, 2, -481, -475, -482, 598, 348, -490, 2,
	-489, -526, 551, -107, 600, -107, 600, 459, 600, -531,
	-299, -299, -443, 2, -136, -119, 2, -443, 2, -136,
	2, -268, 2, -133, -531, -132, 600, 188, -268, 2,
	-443, 2, -136, -119, 2, -443, 2, -136, 2, -217,
	183, 2, 120, 502, -192, 2, 183, 546, 2, 8,
	2, 223, -531, 450, 398, 175, 2, 464, 2, 465,
	74, -417, 570, 74, 188, 2, 188, 2, -400, 2,
	564, 391, 188, 2, 2, -591, 2, 347, 188, 2,
	188, 2, 188, 2, 188, 2, 188, 2, -191, 460,
	523, 501, 395, 252, 2, -136, 561, -119, 252, 251,
	-443, 561, 2, -613, 183, 448, -443, 2, 521, 261,
	159, 188, -400, 2, 188, 2, 188, 2, 5, 2,
	396, 484, 2, 250, 390, 484, 2, -299, 502, 555,
	455, 120, 28, 2, 447, 2, 2, 88, 89, 188,
	2, 188, 2, 203, 188, 2, 188, 502, 570, 2,
	-392, -479, -429, -430, -429, 518, -358, -360, -192, 464,
	2, -229, -390, -231, 183, -420, -421, -232, 275, 170,
	343, -233, -399, 28, 139, -399, -399, 60, 601, 601,
	11, 12, 76, 41, 591, 592, 593, 594, 181, 595,
	596, 589, 590, 588, 581, 582, 586, 256, 257, 95,
	585, 583, 86, 289, 441, 171, 172, 173, 174, 418,
	230, 34, 231, 14, 15, 16, -324, 33, 352, 274,
	571, 220, 468, 584, 17, 18, 19, 247, 249, 334,
	50, 223, -276, 363, -323, 499, 67, -443, -443, -443,
	-443, -443, -443, -443, -443, 359, 600, -386, -438, 598,
	-224, 600, 600, 600, 600, -519, -224, -443, -457, 601,
	-378, 600, -224, -457, -452, 600, 439, 598, 600, -460,
	-443, 5, 5, 5, 600, 602, -572, 565, 183, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 386, -501, 600, -500, 600,
	-500, -500, 556, -498, 600, 573, 566, 600, -498, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 556, 605, -569, -354, 600, -382, -484, -443,
	593, -382, -382, 347, -375, -443, 106, -403, 253, 314,
	189, 271, 433, 238, -440, 604, -440, -468, 573, -224,
	-476, -298, -224, -478, 600, -474, -468, -108, -519, -91,
	-104, -113, -136, -151, -196, -197, 593, -299, 600, 188,
	600, 602, -523, 188, -364, -282, -309, -268, -299, -315,
	-316, -321, -293, -268, 2, 138, -375, -587, 530, 449,
	28, 455, -364, -271, 38, -454, -493, -494, -543, 604,
	-542, -496, -506, -502, -505, 376, 380, -525, 54, 552,
	-508, 243, 4, -534, -536, 240, 241, 476, 51, 400,
	178, 126, 125, 340, 56, 514, 515, 516, 517, 193,
	194, 58, 553, 488, 69, 70, -587, 530, 449, 28,
	455, -364, 183, -364, 2, 2, 154, 2, 2, 2,
	-268, -245, 605, 64, 426, 154, -373, 216, -245, 154,
	-245, 154, -322, 216, -321, -245, 154, -245, 605, 154,
	-245, 605, 154, 602, 605, 154, -364, 2, -416, -522,
	-375, 38, -430, 2, 127, -528, -526, 5, -642, 605,
	273, -327, 288, 331, 212, 348, 568, 341, 131, -530,
	5, 4, -453, -465, 127, 281, 243, -513, -515, 8,
	-514, 9, -516, 591, 592, -521, -520, 109, 602, -523,
	-242, 419, 462, 362, -241, 24, 29, 143, 234, 318,
	549, 160, -340, 235, -337, 366, 154, 480, 539, -601,
	-602, 446, 509, 510, 90, 341, 462, 362, 419, 154,
	-396, -398, 38, 118, 318, 361, 61, 227, 293, 294,
	482, 558, 154, 462, 362, 419, 362, -13, -257, 24,
	143, -259, -254, 462, -602, 99, 419, 577, 424, 372,
	494, 389, -602, -244, 480, 539, -601, -602, 446, 419,
	-243, -342, -337, 366, 154, 604, 24, 143, 419, 462,
	362, -624, -625, 29, 419, 362, -595, -289, -566, 223,
	564, 154, -289, -289, -479, 216, -617, 183, 2, -610,
	-132, 265, 5, 10, -531, -132, -371, 605, 605, -523,
	593, 448, 447, 154, 154, 154, 154, 252, 183, 332,
	332, 2, 2, 2, 2, 2, 190, -604, -629, 2,
	2, -299, 216, -356, 347, -590, -372, 502, -299, 183,
	332, 43, -302, 216, 2, -305, 555, -595, 332, -304,
	216, -299, 38, 600, 332, 2, -416, 2, 232, -566,
	332, -480, -318, -299, -475, -318, 462, -292, 38, -440,
	-299, 601, 605, -490, -490, -531, -205, 564, 188, 102,
	600, 600, -217, 564, 564, 252, -487, 605, -486, 223,
	-532, -133, -531, 422, 252, -531, -590, -282, 2, -299,
	2, 502, 254, -531, -205, 223, -531, -531, -531, -522,
	28, 465, 2, -191, 460, 523, 89, 465, 2, -299,
	502, 120, 232, 80, -617, 183, 2, -268, -593, 183,
	-588, 434, 449, 530, -587, -299, 120, -299, 120, -299,
	120, -299, -299, 2, 2, 2, 2, 2, 85, 2,
	-136, -443, 2, 85, 2, 46, 481, -613, 183, 2,
	521, 2, 521, 2, -268, -268, -268, 483, 273, -299,
	-299, -299, -300, -305, 503, 450, 448, -443, 2, -631,
	2, 188, 183, 2, 502, 232, 502, 232, 120, 188,
	74, 120, 28, 502, 445, -245, 605, -272, -229, -390,
	-522, -391, -390, -230, -229, -232, 183, 399, 540, 318,
	466, 258, -421, -420, 28, -443, -425, 177, 317, -443,
	-423, -445, 591, 592, -514, -516, -374, 341, -223, -223,
	-223, -361, -470, -443, 389, 232, -495, -493, -493, -297,
	-523, 514, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, 274, 220,
	468, 50, 223, -443, 518, -443, -443, -443, -443, 311,
	332, 337, 527, 168, 537, 139, 341, -645, 496, 40,
	-450, -224, -379, 600, -464, 35, 479, 28, -457, 600,
	2, -438, -443, -439, -325, -323, -268, 591, 592, 593,
	594, 595, 596, 581, 582, 583, 14, 15, 16, 586,
	590, 588, 589, 181, 95, 585, 289, 441, 86, 171,
	172, 173, 174, 256, 257, 17, 18, 19, 34, 584,
	-376, -375, -375, 601, 554, 28, 139, 593, 2, 601,
	605, 38, 601, -443, -376, -456, -452, -375, -463, -462,
	561, -411, -412, 569, 298, 123, 214, 296, -413, 453,
	-517, 8, -523, 593, -573, 176, 207, 600, 601, 2,
	601, 2, 601, -443, 2, 601, -443, 2, 601, -443,
	2, 601, -443, 2, 601, 2, 601, 2, -443, -443,
	-443, -443, -443, -443, -443, -375, 8, -517, -517, 514,
	514, -517, -517, -517, -509, 376, 377, 378, 379, 276,
	277, 278, 279, 380, 381, 382, 383, 303, 304, 305,
	306, 299, 300, 301, 302, 307, 308, 309, 310, 198,
	199, 200, 201, 194, 195, 196, 197, -509, -405, 2,
	-511, -375, 4, 569, 298, 123, 214, 296, 453, 5,
	-405, 2, -406, 2, -443, -375, -407, -444, -445, 591,
	592, 584, -324, -457, -408, 2, -443, -376, -443, 57,
	268, 520, -409, -443, 188, -375, -375, 2, -375, 2,
	-570, 38, -375, -367, 605, 188, 38, 4, -367, -367,
	600, 601, 605, -404, 211, 292, 287, 246, -404, -474,
	-403, 253, -401, 357, -401, -401, -468, -283, 598, 606,
	-523, -468, -467, -466, 38, -292, 354, -468, -468, 602,
	601, -467, 599, -585, 600, 603, 603, 603, 603, 603,
	-299, 600, -375, -523, 602, 485, 2, 601, 247, 247,
	247, 247, 247, 347, 440, 601, 518, -589, -308, -312,
	503, 2, 564, -106, 349, 601, 605, -366, 37, 598,
	602, -517, 2, 2, -512, 556, 600, 600, -412, 600,
	188, -589, -312, 503, 2, -365, 518, -268, 2, -299,
	-373, -245, 154, -373, -373, -245, 605, 154, -282, -303,
	-308, -310, -312, -268, -531, -532, -245, -304, -621, 601,
	522, -431, -326, 399, 478, 420, 457, 498, 8, 9,
	8, 9, 605, -523, 605, -622, 93, 518, 78, 449,
	-261, 282, 518, -434, 216, 78, -544, -285, 93, -545,
	-268, 72, 536, 389, 187, 152, -622, 93, 389, -622,
	93, 2, 234, 93, 462, 483, 28, 60, -479, 41,
	41, 28, -620, 330, 269, 560, 188, 570, 502, 232,
	449, 518, 518, -479, -398, -493, 118, 293, 294, 60,
	-518, -513, 591, 592, -518, 60, -518, -518, -518, 564,
	-302, -479, 449, 518, 518, 518, 409, 409, -254, -149,
	518, 518, 28, -192, 427, 127, -643, 583, 409, 605,
	41, 41, 28, -620, 330, 269, 188, 518, -321, -283,
	550, 42, 550, 42, 550, 518, 42, 449, 518, 605,
	42, 518, 518, -13, 462, -596, -273, 105, 324, 286,
	325, 97, 321, 96, 320, 103, 322, 104, 323, 557,
	335, 63, 319, 297, 326, -274, -275, 368, 548, 120,
	-531, -13, -13, 462, 362, 419, 154, -618, 223, 28,
	-606, 223, -487, 223, -487, -313, -268, 602, -136, -443,
	-443, -136, -443, -136, 46, 154, 154, 2, -639, 262,
	600, -330, 332, 188, -364, -488, 244, 605, -372, -587,
	154, -529, -528, 116, 461, -397, -396, 332, -304, 216,
	2, 154, -354, 332, 148, 600, 397, 2, 154, -284,
	216, -269, -268, -416, -248, 506, 154, -394, 546, -426,
	-136, 600, 127, 38, -426, -383, -384, -485, -385, -285,
	600, -292, -440, -107, -489, 601, 601, 601, -204, 351,
	-203, -268, 5, -217, 546, -329, -435, -434, -548, -549,
	-544, 274, 232, 536, 246, 169, -355, -286, -285, 119,
	401, 401, -211, 564, -132, -133, 601, -487, 223, 486,
	-205, -205, -487, -487, -299, 183, -531, -205, -205, -205,
	2, 2, 2, 2, -400, -299, -282, -321, -299, 28,
	602, -364, -364, -312, -308, -400, -282, -400, -282, -400,
	-282, -400, -400, -136, -443, 483, 2, 459, 183, 183,
	602, -400, -357, 429, 2, 397, 120, 502, 366, 232,
	-299, -321, -299, -321, -282, 120, -282, 121, -299, -479,
	-391, -230, 348, 258, 466, -423, -424, -445, 439, 440,
	-424, 439, 440, 8, 9, 8, 9, -234, 470, 336,
	-373, 605, -239, 39, 135, 258, -299, 570, 150, -443,
	-443, 518, -645, 496, -450, 150, -443, 311, 337, 527,
	168, 537, 139, 341, 188, 600, -444, -444, 601, -377,
	-443, -443, 599, 608, 601, 602, 601, -360, 605, -358,
	-443, -375, -375, 601, 602, -375, -364, 599, 599, 605,
	601, -461, -462, 144, -443, 518, 518, 518, 518, 600,
	601, 602, -578, 358, 600, 600, -443, 601, 601, 601,
	601, 38, 605, 605, 605, 601, 605, 605, 605, 601,
	601, 601, 605, 601, 570, 570, 601, 601, 601, 601,
	605, 601, 605, 601, 188, 601, 601, -414, 373, 601,
	11, 12, 591, 592, 593, 594, 181, 595, 596, 589,
	590, 588, 581, 582, 583, 86, 289, 441, 14, 15,
	16, -324, 247, 223, -444, -444, -444, -444, 601, -448,
	-449, 188, 183, 38, -409, -409, -409, 601, 188, -375,
	601, 601, 600, -571, 291, 332, 601, -437, -436, 562,
	-484, -368, 2, -474, -294, -523, -437, -437, -375, -443,
	253, 253, -402, 546, 347, -404, -474, -467, -519, -442,
	-441, 185, 39, 135, 327, 328, 219, 186, -467, -292,
	-354, -467, -467, -523, -468, -468, -466, 601, -586, -519,
	601, -369, -477, -565, -360, 602, -523, -214, -566, -193,
	5, 337, -193, -193, -193, -193, -299, -364, 518, 518,
	223, 25, 374, -493, 598, 599, 8, -523, 600, -517,
	-517, -517, -364, 188, 188, 223, 188, -529, 2, -245,
	-373, -245, -245, -321, -322, -245, -245, -245, -395, 564,
	-520, -430, 534, 83, 399, 514, -520, -241, 419, -285,
	-285, -299, -309, 202, 410, -529, 332, -434, 216, -247,
	332, -493, -293, 600, -418, 566, 258, 258, 546, -285,
	-293, 258, 216, -285, 216, -293, 2, -293, -597, 399,
	342, -443, 60, -338, 280, 397, 333, -242, 419, 462,
	362, -136, -136, -136, -136, -136, 600, -621, 546, 138,
	-299, -321, -299, -309, -529, -304, 462, 362, 419, 329,
	-315, -518, -518, -396, 462, 362, 419, -309, -529, -302,
	-529, -253, 216, -268, -253, 216, 449, -282, 409, 570,
	45, -643, -243, -136, -136, -136, -136, -136, 600, -283,
	-244, 419, 5, 216, -285, 5, -285, 216, 5, -268,
	-285, -309, -529, -625, 24, 143, -285, -309, -529, -273,
	-531, 337, 542, -282, -595, -289, 449, 518, 518, -479,
	-614, -615, 204, 432, 449, 435, -364, -132, -208, 564,
	-132, -202, 228, 593, -592, -531, -268, 555, -268, -328,
	-331, -329, -285, -220, -221, 566, 564, 154, -319, -299,
	598, -205, -531, -299, -488, -310, -311, 154, -354, 332,
	-531, 38, 154, 600, 2, 2, -303, 347, 332, -284,
	216, -249, 145, -643, -282, -437, -368, -393, -428, 429,
	347, -355, 551, -292, -393, -370, 605, 188, 583, 602,
	-355, -483, 593, -107, -107, -205, 605, 600, 583, 583,
	600, -531, -531, 601, 605, -247, -299, -284, 232, 232,
	-291, -269, 601, 605, 602, 600, 583, 583, -213, 351,
	-212, 146, 260, 245, 472, 473, 474, 475, 137, 471,
	124, 316, -487, -211, -133, 188, 188, -66, 564, 502,
	-205, 604, 435, -268, -400, -400, -400, 459, 459, -268,
	-364, -295, -282, -299, -296, -321, 183, 183, -282, 540,
	-424, 348, 285, -470, -240, 572, -299, 604, -443, -443,
	150, 150, -443, -444, -444, -443, 150, 188, 600, -443,
	-454, 33, 33, 601, 605, -439, -443, -323, 601, 554,
	-360, -360, 601, 593, -523, 604, 601, -452, 147, -443,
	512, 298, 214, 296, -413, 296, -413, -413, -517, 5,
	-523, 593, -579, -288, 600, -268, 562, -359, 353, 601,
	-495, -493, -443, -443, -443, -443, -443, -517, -498, -498,
	-513, -513, -443, -448, -443, -495, -493, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, 139, 332, 341,
	-444, -449, -448, -443, -443, -493, 601, 601, 601, -375,
	-106, 600, 291, -387, 207, -443, -487, 605, -387, -387,
	601, -474, -474, 600, -443, 253, 599, 605, 607, 583,
	583, -354, 602, -466, -467, 599, 601, 605, 601, 605,
	-427, 38, 601, -523, -437, -216, -215, 136, 53, 107,
	134, 337, 247, -364, -364, 449, 350, 5, 8, 598,
	599, 602, -517, 601, 601, 601, -364, -364, 449, -364,
	-245, -245, 119, 318, -443, 518, 518, 60, 223, 154,
	332, 548, -550, -545, 152, -443, 600, 232, 600, 600,
	2, -236, -237, -238, 143, 462, 24, -623, 2, 546,
	154, -245, 154, -245, 568, -338, 600, 600, 518, 449,
	-261, 518, 564, -375, -443, -206, 127, -522, -602, 604,
	-602, 604, 449, 518, 518, 449, 518, 518, 332, 154,
	564, 167, 167, 570, -253, 564, -375, 518, -497, 48,
	26, 332, -303, -245, 154, 518, 518, 530, 462, -531,
	337, -13, -309, -529, -304, 462, 362, 419, -594, -365,
	-594, 204, -312, -618, -487, -210, 351, -209, 146, 431,
	137, 260, 225, -487, -208, 188, 244, 564, -304, 2,
	601, 601, 605, -551, 38, 345, 345, 600, -299, -87,
	564, -486, -519, -598, 564, 43, -302, 38, 154, -595,
	-136, -304, -491, -492, 5, 38, -299, 154, 347, 332,
	-250, 267, -643, -527, -566, -360, -393, -382, 333, 91,
	601, -437, -384, -368, -443, 2, 601, -203, -204, -531,
	-531, -531, -205, -217, -217, -435, -332, 600, -284, -269,
	600, -217, -286, 2, -532, -531, -531, 605, 600, 583,
	583, 583, 583, 583, -211, -487, -132, -136, 351, -299,
	593, -400, -344, -343, 366, 341, -344, 439, 439, 348,
	177, 263, -239, -283, -443, -443, 150, 33, 33, -443,
	-443, -454, 601, -443, -443, -375, 599, 5, -443, 601,
	601, 8, -443, 601, 602, -580, -268, -443, 601, 60,
	601, 601, 605, 605, 601, 601, 601, 601, 601, 601,
	601, -449, 188, 139, 341, 600, 601, 601, -106, -451,
	210, 60, -474, -451, -451, -402, -364, -474, -441, -283,
	598, -283, 598, -523, -519, -477, 600, 602, -215, 583,
	-531, -531, -193, 564, -312, 599, 2, 598, -523, 601,
	-312, 119, -285, -285, 502, 439, -253, 389, -434, 154,
	-552, 93, -554, 76, 169, 102, 332, 337, 536, 389,
	72, 127, 347, 406, -633, -634, -635, 38, 575, 576,
	601, -362, -471, -565, 600, -268, -362, -364, 332, 491,
	127, 347, 332, 127, 347, 559, 119, 2, 530, 79,
	-285, -293, -364, -364, -299, -309, -529, 161, 601, 605,
	583, 2, 593, 593, -309, -529, -304, -309, -529, -302,
	154, -253, 364, 167, 161, 601, -283, 5, 5, 154,
	-280, 76, -285, 5, -285, -303, 119, 449, 518, 518,
	347, 347, 350, -614, -615, -208, 605, 600, 583, 583,
	-208, -532, -132, 2, -354, -345, 234, -285, -549, -546,
	-547, 389, -553, -555, 169, 389, -136, 2, -219, -218,
	-268, 5, 600, -330, 351, 599, -600, 351, -599, 117,
	137, -529, -397, -136, -304, -354, 601, 605, 148, -419,
	546, -283, -299, 154, -251, 266, -643, -527, -248, -422,
	-420, 140, 600, 347, -136, -360, 583, 601, 601, 119,
	119, 226, 153, -362, 600, 600, -364, 119, 601, -212,
	-213, -531, -132, -531, -531, -531, -211, -487, -67, -68,
	232, 93, 371, -296, 502, 232, 600, 600, -239, -443,
	-443, -443, 601, -360, -523, 593, -574, 366, 601, -470,
	-443, -443, -444, 188, 600, -454, 601, -575, 563, -443,
	-388, -389, -443, 437, 108, 208, -575, -575, 601, -519,
	-519, 2, -531, 2, 518, 598, 2, 188, 223, 38,
	409, -434, -293, -297, -290, -268, 169, 216, 337, 559,
	-418, 258, 600, -444, 540, -299, 600, 2, 215, 215,
	30, 60, -636, 131, 237, 601, 605, -472, -279, -268,
	-443, -472, 601, 601, 337, 540, 337, 559, -443, 540,
	-493, 600, -245, -245, 601, 601, -443, 518, -522, 100,
	-520, 2, -602, -253, -282, -443, 518, 5, -245, -297,
	-245, -245, -280, 530, -309, -529, -304, -619, 503, 456,
	531, 450, 191, 438, -619, 183, -209, -210, -531, -132,
	-208, 38, -335, 236, 2, -551, 258, -290, 258, -632,
	564, 601, 605, 583, 583, -328, -220, -88, -89, 519,
	-486, 605, 600, 583, -354, 38, 5, 600, 600, -268,
	347, 600, -283, -263, 92, -643, -527, -249, -393, 333,
	-364, 93, -422, -450, -205, 600, 600, -333, 81, 94,
	128, 215, 192, 233, 483, 489, 28, -333, 601, -362,
	-362, 601, 600, -205, 601, 605, 28, 600, 28, 600,
	-299, -321, -375, -375, 601, -360, 60, 605, 601, 601,
	-444, -454, 601, -576, -577, -288, 605, 600, 600, 463,
	599, 599, -364, 2, -364, -253, 389, -268, -554, -290,
	332, 546, -443, -444, -270, 600, -443, 600, 600, 38,
	127, 237, 132, 221, -433, -637, 101, 492, 224, -471,
	-239, 601, -432, 546, 406, -444, -280, -362, 600, 600,
	600, 583, 188, 600, -497, -245, -303, 518, 2, 2,
	188, -594, 601, -608, 404, -136, -339, -340, 223, 600,
	-334, 347, 119, 318, -218, -520, -520, 601, 38, -89,
	9, -599, -600, -443, 38, -136, -491, -362, -299, -362,
	347, -255, -254, 275, -527, -250, 601, -293, -393, -532,
	-532, -432, 601, 601, -532, -68, -364, -364, 601, 601,
	-581, 397, 440, 209, -375, -361, 601, 605, 38, -389,
	2, 2, 2, 409, 154, 211, 601, -556, 290, -268,
	601, -397, -397, 38, 132, 221, -335, 600, -240, -472,
	-335, 211, -299, -603, 546, 601, -347, -346, -343, -349,
	-348, -343, -375, -520, 100, 364, -375, -280, -364, -364,
	347, -611, 189, -610, 5, 10, -220, 364, -363, -473,
	-285, 82, 119, -345, -136, 601, -136, 601, 601, -419,
	601, -299, -252, -533, 409, 411, -643, -251, -437, 601,
	601, -433, -432, -341, -337, 601, 601, 601, 601, -582,
	-583, 50, 533, 109, -443, -582, -582, -577, -579, 169,
	564, -557, -560, -559, 580, 469, 189, 365, 601, 491,
	558, 601, 601, -341, -364, 564, -354, -443, -432, 601,
	605, 551, 601, 605, 551, 601, 188, 601, -245, -616,
	564, -245, -619, -207, 564, 46, -334, -299, 601, 605,
	388, 133, 143, -335, -632, -432, 600, -433, 600, -260,
	-259, -643, -513, -263, 140, -205, -205, -335, -433, -221,
	564, -205, -584, 152, -583, 385, 182, 439, 385, 182,
	-584, -584, -290, 55, -559, 580, -560, 580, 540, 133,
	-636, 601, 55, -556, -335, -346, 223, -348, 188, 364,
	204, 188, 447, -610, 30, -262, -261, 600, -473, 440,
	440, 2, -339, -334, -433, -362, -335, -362, -256, -257,
	-258, -364, -255, 333, 540, -341, -335, -437, 109, 207,
	513, 318, 33, 583, -558, 318, 426, 64, 462, -558,
	-437, 583, -557, 600, 600, 350, -364, 351, -364, 2,
	-220, -335, 601, -341, 601, -252, 462, -221, -341, 439,
	355, -583, -443, 23, 337, 127, -443, -636, -375, -375,
	-245, -204, 600, 601, -334, -341, -432, -221, -433, -260,
	-383, -437, -221, 601, 601, -204, -246, 64, 426, -262,
	-221, -433, -437, -335, -256, -437, -437, -336, -337, 518,
	601, -437, -335, -341, 600, -341, -221, -375, -221, -437,
	601, -437, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 559, 560, 562, 563, 564, 566,
	567, 569, 571, 573, 574, 575, 577, 578, 580, 581,
	582, 583, 584, 586, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	655, 657, 0, 1423, 1425, 1427, 1429, 0, 810, 0,
	36, 37, 39, 0, -2, 338, 340, 342, 344, 0,
	375, 377, 378, 380, 382, 383, 384, 386, -2, 0,
	492, 493, 495, 497, -2, 0, 1018, 1020, 1022, 0,
	644, 646, 0, 1025, 1027, 1029, 0, 0, 667, 668,
	0, 1534, -2, 659, 661, 663, 665, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 753, 754, 756, 758,
	760, 762, 764, 765, 767, 769, 771, 772, 774, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	797, 799, 801, -2, 804, 805, 806, -2, -2, 0,
	-2, -2, -2, 1441, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 436, 438, 440, 442, 444, 447,
	449, 451, 1592, 499, 501, 503, 505, 507, 509, 511,
	0, -2, 1606, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1565, 1567, 1569, 1571, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 561, 565, 568, 570, 572, 576,
	579, 585, 587, 589, 544, 545, 548, 2303, 2321, 2322,
	2323, 2326, 2327, 2328, 2329, 2330, 2331, 2787, 2868, 2869,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762,
	2763, 2764, 2765, 2766, 546, 547, 1212, 0, 613, 611,
	2288, 614, 2584, 616, 618, 486, 487, 488, 489, 490,
	491, 0, 637, 627, 1604, 638, 640, 641, 642, 643,
	608, 606, 0, 637, 2357, 635, 1421, 1422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 498, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 415,
	1270, 1271, 1272, 1406, 1407, 2631, 1448, 0, 234, 656,
	-2, -2, 2752, -2, 690, 691, -2, -2, 705, 708,
	700, 2756, 0, 2634, 2618, -2, 711, 1424, 1426, 1428,
	808, 809, 2307, 0, 0, 0, 0, 0, 38, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 244,
	-2, -2, -2, -2, 0, 0, 2679, 2409, 2256, 2323,
	2259, 2254, 339, 341, 343, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 376, 379, 381, 385, -2, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 1081, 1082, 1328, 0, 0, 0, -2,
	494, 496, 549, 550, 0, 1593, 1593, 557, 558, -2,
	0, 0, 0, 0, 309, 297, 1019, 1021, 1023, 1024,
	0, 0, 0, 0, 0, 645, 647, 0, 0, 276,
	1026, 1028, 1030, 1031, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 660, 662, 664, 666, 736, 738, 740,
	742, 744, 746, 748, 750, 752, 755, 757, 759, 761,
	763, 766, 768, 770, 773, 776, 778, 780, 782, 784,
	786, 788, 790, 792, 794, 796, 798, 800, 802, 803,
	816, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 913, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 999, 0, 0, 819, 821,
	822, 823, 824, 0, 886, 911, 912, 922, 807, 0,
	1252, 1594, 1450, 1431, 1445, 1450, 1433, 1434, 1435, 1436,
	1437, 1442, 1444, 1438, 1439, 1440, 42, 44, 46, 48,
	50, 52, 54, 56, 58, 60, 437, 439, 441, 443,
	445, 448, 450, 452, -2, 1563, 1564, 500, 502, 504,
	506, 508, 510, 512, 648, 0, 650, 0, 820, -2,
	0, 1598, 1598, 1598, 0, 0, 1564, 1562, 0, 653,
	654, 715, 716, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 2130, 1958, 0, 717, -2, 1991, 1993, 2727,
	2557, 2752, 2129, 1995, 1996, 1997, 1998, 1999, 0, 2001,
	2002, 2003, 2004, 2005, 2006, 0, 2008, 0, 2013, 2014,
	2015, 0, 2734, 2233, 2317, -2, 0, 0, 2740, 2313,
	0, 2096, 2031, -2, -2, 2340, 2319, 1802, 1803, 1804,
	1805, 1806, -2, -2, 2770, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 0, 2715, 2735, 2736,
	2741, 2743, 2737, 2724, 2056, 2423, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1829,
	1838, -2, -2, -2, -2, -2, -2, -2, 2728, 2729,
	2746, 2749, 2755, 2760, 2761, 2733, 2742, 2769, 2771, 2772,
	2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782,
	2783, 2784, 2785, 2786, 1830, -2, -2, -2, -2, 1581,
	2598, 1584, 1212, 1582, 1566, 1568, 0, 1570, 0, 0,
	0, 1575, 1601, 1599, 0, 1650, 1579, 1580, 1672, 1672,
	1696, 0, 1677, 0, 1696, 1593, 1723, 0, 1683, 2623,
	2032, 2033, 0, 2323, 2318, -2, -2, 2767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	615, 617, 0, 0, 0, 636, 1603, 0, 0, 0,
	0, 0, 0, 0, 418, 419, 420, 421, 422, 2735,
	0, 0, 0, 427, 0, 429, 430, 431, 432, 433,
	434, 435, 205, 2735, 517, 542, 0, 205, 2735, 520,
	205, 2735, 523, 0, 526, 1326, 205, 2735, 529, 2284,
	205, 2735, 532, 534, 2292, 205, 2735, 538, 2299, 2297,
	539, 2735, 541, 314, 312, 313, 2336, 2337, 2344, 2345,
	2346, 2347, 2768, 2770, 1417, 1418, 1419, 1420, 0, 1447,
	1327, 658, 0, 684, 0, 688, 689, 2723, -2, 0,
	2643, 693, 694, -2, 696, 1451, 1455, 1456, 1457, 1458,
	1459, 0, 0, 0, 0, 1464, 0, 0, 0, 0,
	685, 686, 703, 704, 709, 712, 0, 811, 812, 813,
	814, 815, 72, 0, 2735, 1723, 74, 0, 2278, 2348,
	2349, 2350, 2351, 2352, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 78, 0, 2735, 83, 0, 2735,
	0, -2, 96, 0, 108, 0, 2281, 117, 0, 2735,
	0, 2253, -2, 0, 217, 298, 299, 300, 0, 1056,
	-2, 2735, 1264, 1266, 1266, 0, -2, 0, 0, 0,
	1009, 2250, 2255, 1010, 2274, 1011, 2260, 0, 347, 348,
	349, 350, 351, 0, 352, 2735, 354, 355, 0, 357,
	358, 2735, 360, 361, 0, 363, 0, 365, 0, 256,
	262, 2735, 2735, 389, 391, 0, 393, 394, 0, 396,
	0, 0, 0, 400, -2, 416, 0, 413, 403, 404,
	406, 407, 408, 409, 410, 0, 456, 454, 2289, 0,
	0, -2, 2735, 0, 1053, 0, 0, 1306, -2, 2735,
	1257, 0, 1313, 2735, 1309, 0, -2, 0, 1591, 2735,
	1468, 1085, 1086, 1087, 1088, 1735, 483, 0, 1499, 0,
	1501, 0, 1520, 1729, 1672, 0, 0, 1734, 0, -2,
	602, 2306, -2, 552, 0, 553, 0, -2, 0, 326,
	0, 0, 1034, 1036, 1037, 1039, 1040, 1043, 1044, 1045,
	1046, 0, 1048, 1709, 277, 279, 0, 0, 0, 1033,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 0,
	0, 669, 0, 0, 817, 818, 0, 0, 829, 830,
	831, 0, 326, 2635, 2593, 2444, 838, 0, 841, 844,
	-2, 0, 0, 0, 0, 848, 0, 853, 854, 855,
	0, -2, 0, 862, 864, 1017, 866, 0, 0, 868,
	0, 872, 0, 875, 0, 877, 0, 879, -2, -2,
	-2, 887, 888, -2, 893, -2, 0, 897, -2, 0,
	900, 0, 903, -2, 0, 913, 909, 910, 0, 0,
	0, 0, 930, 931, 0, 940, 0, 943, 944, 945,
	0, 949, 950, 0, 952, 953, 954, 955, 0, 2706,
	2640, 2409, 0, 962, -2, 968, 970, 0, -2, 0,
	986, 0, 990, 0, 0, 998, 0, 0, 825, 826,
	205, 1727, 1430, -2, 1432, 0, -2, 0, 649, 0,
	652, 1623, 1549, 1546, 0, 1620, 1621, 1550, 0, 0,
	0, 1557, 0, 1596, 1597, 0, 0, 0, 1536, 1537,
	0, 0, 0, 0, 2135, 2136, 2137, 2138, 2151, 2139,
	2140, 2150, 2148, 2149, 2141, 2142, 2147, 2161, 2162, 2152,
	2153, 2143, 2156, 2154, 2155, 2157, 2158, 2159, 2160, 0,
	0, 2166, 0, 2144, 2145, 2146, 2174, 0, 0, 2175,
	0, 2177, 0, 2167, 2163, 2164, 2165, 0, 1937, 1939,
	2241, 0, 0, 0, 2173, 2168, 2169, 1875, 1876, 1877,
	1878, 1879, 1912, 1916, 1917, 0, 0, 1992, 2238, 2237,
	1994, 0, 0, 2189, 0, 2007, -2, 0, 2130, 2184,
	0, 0, 2016, 2017, 2018, 0, 0, 2189, 0, 0,
	2232, 2028, 2029, 1867, 0, 0, 2098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 1815, 0, 1817, 0,
	1818, 1819, 1826, 1839, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 2213, -2, 0, 0,
	0, 0, 1831, 0, 1583, 0, 0, 1654, 2242, 2246,
	2247, 1654, 1654, 0, 0, 2190, 1720, 1720, 0, 0,
	1715, 1715, 1715, 1713, 1696, 0, 1696, 1706, 0, 1696,
	1696, 0, -2, 1677, 0, 0, 1706, 0, 1690, 590,
	592, 594, 596, 597, 598, 600, 1724, 1725, 0, 0,
	0, 0, 2324, 0, 0, 0, 0, 2296, 0, 0,
	2309, 0, 0, 2283, 372, 0, 0, 0, 2689, 2634,
	0, -2, 620, 639, 1593, 0, 2192, 1750, 1754, 0,
	1756, 1757, 1758, 1759, 1760, 0, 0, 1751, -2, 1827,
	1829, 1850, 2341, 2342, 2343, 1810, 1811, 1812, 1813, 1814,
	1822, 1809, 1809, 1809, 1820, 1849, 1841, 1849, 1845, 1795,
	1796, 1797, 1832, 1833, 1834, 1835, 0, 2689, 2634, 0,
	-2, 629, 0, 0, 1531, 417, 0, 424, 425, 426,
	0, 513, 0, 203, 204, 0, 205, 2735, 518, 0,
	521, 0, 205, 2735, 2248, 527, 0, 530, 0, 0,
	536, 0, 0, 0, 0, 0, 205, 1533, 0, 0,
	0, 0, -2, 698, 706, 707, 224, 225, 0, 1453,
	0, 1460, 726, 727, 728, 1462, 1463, 0, 1465, 701,
	729, 730, 731, 732, 733, 734, 0, 2262, 2263, 2264,
	2265, 2268, 2269, 0, 0, 699, 719, 702, 0, 713,
	118, 1403, 0, 0, 161, 0, 1403, 1403, 0, 0,
	0, 0, 188, 0, 1124, 0, 0, 0, 0, 133,
	146, 157, 130, 131, 0, 0, 0, 0, 0, 0,
	84, 1234, 0, 1237, 0, 0, 0, 0, 0, 0,
	0, 1250, 0, 0, 0, 0, 0, 98, 99, 0,
	0, 104, 105, 0, 145, 0, 0, 0, 0, 0,
	1496, 0, 140, 120, 0, 0, 133, 147, 159, 0,
	192, 194, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 226, 0, 0, 0, 1258, 0, 0, 0,
	1590, 0, 0, 0, 0, 2735, 1401, 0, 1386, 0,
	1709, 2494, -2, -2, 277, 1709, 1008, 0, 0, 2324,
	2258, 0, 0, 0, 0, 0, 0, 364, 0, 0,
	0, 392, 395, 397, 398, 399, 0, 1305, 0, 405,
	446, 1183, 2735, 0, 0, 473, 468, 0, 470, 0,
	0, 0, 1233, 2735, 1231, 2293, 0, 1255, 0, 1212,
	2735, 2291, 0, 0, 0, 1314, 2333, 1323, 1327, 1486,
	0, 485, 0, 1502, 1504, 0, 0, 1730, 0, 1732,
	1672, 1593, 0, 0, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 1047, 283, 0, 1708, 0,
	0, 1709, 277, 2609, 1032, 326, 326, 1709, 671, 1709,
	673, 0, 0, 832, 833, 0, 326, 326, 326, 839,
	840, 842, 843, -2, -2, -2, -2, 845, 846, 937,
	0, 0, 0, 936, 856, 0, 858, 861, 865, 0,
	1002, 2618, 2634, 2689, 1015, 937, 2409, 937, 2409, 937,
	2409, 937, 937, 881, 925, 933, 892, 899, 0, 894,
	898, 901, 904, 0, 906, 914, 0, -2, 0, 917,
	0, 919, 0, 921, 937, 938, 941, 948, 951, 956,
	957, 958, 959, 2304, 960, 961, -2, 965, 966, 0,
	977, 982, 983, 979, 0, 0, 0, 0, 0, 0,
	993, 994, 0, 0, 1001, 1251, 0, 1443, 1623, 1549,
	651, 1540, 1622, 1541, 1548, 1551, 0, 0, 1553, 0,
	1555, 0, 1618, 1619, 1626, 1627, 0, 1637, 1638, 1630,
	0, -2, 0, 0, 1633, 1634, 1559, 0, 1576, 1577,
	1578, 1607, 1610, 1342, 0, 2868, 1871, 1745, 1872, 1873,
	2277, 0, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, -2, -2, -2, -2, -2, -2, -2, -2,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, -2, -2, -2, 1913, 1914, 1915, -2, 2176, 2178,
	0, 2241, 0, -2, 0, -2, -2, -2, -2, 1934,
	0, 1936, 1941, 1943, 1945, 0, 0, 0, 0, 2240,
	1955, 2224, 2225, 0, 0, 2132, 2133, 2134, 1940, 0,
	1959, 2239, 2236, 0, 0, 2170, 0, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	0, 2188, 1606, 2020, 0, 0, 0, 0, 2027, 2012,
	2186, 0, 2185, 0, 0, 0, 2196, 0, 2231, 2227,
	0, 2275, 1866, 1853, 1854, 1855, 1856, 1857, 1858, 1868,
	0, 2272, 2310, 2316, 2106, 0, 0, 0, 2057, 2058,
	2059, 2060, 2061, 0, 2063, 2064, 0, 2066, 2067, 0,
	2069, 2070, 0, 2072, 2073, 2074, 2075, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 0, 0, 2078,
	0, 2199, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2080, 0, 2082, 2190, 2210, 0, 0, 1960, 0,
	0, 0, 0, 2130, 0, 2085, 2190, 2218, 0, 0,
	0, 0, 0, 2190, 0, 2223, 0, 2092, 0, 2094,
	1585, 0, 0, 1740, 0, 0, 0, 2245, 1740, 1740,
	0, 1649, 0, 0, 1716, 1717, 1718, 1719, 0, 0,
	1720, 0, 1710, 1714, 1711, 1712, 1706, 1669, 0, 0,
	2279, 1706, 1675, 1705, 0, 1212, 1695, 1706, 1706, 0,
	-2, 1679, 1696, 0, 0, 591, 593, 595, 599, 601,
	0, 0, 1606, -2, 0, -2, 328, 1211, 0, 0,
	0, 0, 0, 0, 610, 612, 0, 0, 533, 0,
	0, 626, 0, 604, 0, 607, 0, 1741, 1744, 0,
	0, 1755, 1761, 1762, 0, -2, 0, 0, 1851, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 428, 543,
	205, 515, 0, 205, 205, 524, 0, 0, 205, 535,
	205, 2300, 205, 2298, 315, 540, 1532, 237, 0, 687,
	0, 1452, 1461, 0, 723, 0, 725, 0, 2266, 2270,
	2267, 2271, 0, 714, 0, 0, 0, 0, 1402, 0,
	1349, 0, 0, 165, 2735, 0, 207, 0, 0, 1176,
	2285, 0, 1166, 0, 0, 2430, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 1235, 1236, 1238, 1245, 1247, 0,
	1241, 2273, 0, 0, 1242, 0, 1244, 1246, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 1267,
	0, 0, 1268, 1269, 1474, 1475, 0, 1495, 1496, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 2252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 0, 1301, 1299, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 0, 0, 0,
	-2, 1262, 1263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 317, 2251, 2261, 0, 1041, 1042,
	353, 356, 359, 362, 243, 0, 0, 401, 0, 0,
	1091, 1066, 0, 0, 455, 326, 0, 0, 469, 473,
	2302, 1051, 221, 222, 223, 1229, 1232, 0, 1212, 2735,
	1278, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	2735, 2280, 2332, 2333, 1488, 1496, 0, 1740, 0, 1518,
	1505, 0, 0, 0, 1518, 1522, 1523, 1525, 1526, 0,
	0, 1731, 1737, 551, 603, 1593, 1593, 326, 324, 2560,
	322, 319, 321, 0, 0, 0, 1092, 1094, 1095, 1096,
	207, 0, 2333, 1166, 2483, 2333, 0, 1508, 1510, 0,
	0, 0, 271, 0, 280, 1709, 278, 283, 0, 0,
	0, 467, 670, 675, 827, 0, 326, 835, 836, 837,
	883, 927, 935, 981, 847, 849, 850, 851, 0, 0,
	0, 1016, 1012, 1013, 1014, 867, 937, 870, 937, 873,
	937, 876, 878, 896, 902, 915, 908, 916, 0, 0,
	0, 929, 946, 0, 964, 0, 0, 0, 0, 0,
	0, 0, 987, 988, 989, 991, 996, 995, 1000, 1728,
	1544, 1545, 1547, 0, 1556, 0, 0, 1632, -2, -2,
	1631, 1635, 1636, -2, -2, -2, -2, 1552, 0, 1561,
	1558, 0, 1617, 1340, 1341, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1956, 0, -2, 1935, 1938, 1942,
	1944, 1946, 0, 0, 0, 0, 0, 0, 2179, 0,
	2181, 1957, 2234, 2237, 2172, 0, 2128, 0, 0, 1605,
	1606, 1606, 0, 2026, 0, 2187, 0, 2194, 2195, 0,
	2019, 0, 2228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 2062, 2065, 2068,
	2071, 0, 0, 0, 0, 2051, 0, 0, 0, 2055,
	1821, 1807, 0, 1849, 1847, 1848, 1842, 1849, 1846, 1799,
	0, 1798, 0, 2077, 0, 2079, 2081, 0, 0, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 1964, 1965, 1985, 2084, 2216,
	2217, 0, 0, 0, 0, 0, 0, 2090, 0, 2222,
	2091, 2093, 1593, 0, 1586, 0, 1651, 1640, 1739, 0,
	2243, 1709, 1653, 1655, 2244, 2282, 1640, 1640, 0, 2191,
	0, 0, 1700, 0, 0, 0, 1702, 1673, 0, 0,
	1667, 0, 1659, 1660, 1661, 1662, 1663, 1664, 1674, 1212,
	1704, 1676, 1680, 2310, 0, 1706, 0, 1691, 0, 1693,
	1726, 0, 1685, 1688, 0, 0, 2325, 1740, 0, 366,
	373, 374, 367, 368, 369, 370, 0, 619, 0, 0,
	0, 0, 0, 2193, 0, 1746, 0, 1752, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 1530, 423, 514,
	205, 519, 522, 2249, 205, 528, 531, 537, 233, 0,
	683, -2, 721, 722, 724, 0, 720, 162, 1403, 0,
	0, 1345, 1347, 1351, 1357, 1360, 0, 167, 2735, 179,
	0, 1140, 0, 0, 0, 0, 0, 0, 0, 1405,
	0, 0, 2735, 205, 2735, 205, 182, 184, 187, 0,
	191, 189, 0, 1128, 0, 0, 1131, 119, 1403, 0,
	0, 122, 126, 134, 135, 138, 0, 0, 0, 144,
	0, 0, 0, 1362, 1366, 1374, 0, 0, 0, 1239,
	1240, 1243, 1249, 85, 0, 0, 0, 1370, 1372, 1378,
	97, 100, 2735, 2294, 102, 2735, 0, 1344, 0, 0,
	0, 0, 193, 124, 128, 136, 137, 139, 0, 1380,
	121, 0, 220, 0, 0, 210, 205, 2735, 0, 212,
	0, 213, 214, 227, 0, 0, 0, 1054, 1055, 1300,
	1253, 1254, 0, 1265, 1259, 0, 0, 0, 0, 0,
	1382, 1383, 0, 0, 0, 1401, 1398, 1709, 239, 0,
	1709, 247, 0, 2257, 0, 263, 388, 0, 0, 0,
	0, 1090, 1194, 0, 1061, 0, 0, 0, 461, 457,
	0, 466, 472, 471, 477, -2, 0, 0, 0, 0,
	-2, 0, 0, 1316, 1310, 1311, 0, 0, 0, 0,
	2735, 1490, 1496, 0, 1591, 1606, 484, 1497, 1518, 0,
	0, 0, 1507, 1503, 1500, 1740, 0, 0, 0, 0,
	0, 1733, 1736, 554, 555, 301, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 1097, 1101, 0, 2333, 2333,
	0, 2287, 0, 0, 0, 0, 0, 0, 281, 0,
	284, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	0, 0, 283, 273, 1709, 0, 0, 672, 0, 0,
	834, 0, 857, 860, 869, 871, 874, 918, 920, 937,
	947, 971, 972, 1118, 0, 1118, 0, 0, 992, 1554,
	0, 1629, 1560, 1611, 1612, 0, 1342, 0, 1874, 1919,
	0, 0, -2, 0, 0, 1923, 0, 0, 0, -2,
	0, 0, 0, 2180, 2182, 0, 2236, 2171, 2021, 0,
	0, 0, 2025, 2009, 2010, 0, 2131, 2197, 2226, 2230,
	0, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 0, 2276,
	2311, 2315, 2104, 2105, 2109, 2290, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1844,
	0, 0, 2198, 2209, 2211, 1961, 1962, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, -2, -2, -2,
	1979, 1980, 1981, -2, -2, -2, 1986, 0, 0, 0,
	2212, 2214, 2215, 2219, 2220, 0, 2087, 2088, 2089, 2221,
	0, 1593, 1587, 1648, 0, 1738, 1652, 0, 1648, 1648,
	1600, 1698, 0, 0, 1722, 0, 1670, 0, 1671, 0,
	0, 1703, 0, 1678, 1681, 1682, 1692, 0, 1684, 0,
	1687, 0, 2021, -2, 327, 329, 331, 0, 334, 335,
	0, 0, 0, 622, 623, 0, 621, 605, 0, 0,
	1748, 0, 0, 1824, 1828, 1852, 631, 632, 0, 630,
	516, 525, 235, 0, 1707, 0, 0, 0, 0, 0,
	0, 206, 1138, 1175, 0, 0, 0, 1165, 0, 0,
	1181, 169, 170, 171, 0, 0, 0, 0, 180, 0,
	0, 177, 0, 186, 190, 1125, 0, 0, 0, 0,
	1350, 0, 0, 0, 141, 142, 143, 0, 148, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1480, 1481, 0, 1471, 0, 0, 0, 208, 0,
	0, 0, 1339, 229, 0, 0, 0, 0, 0, 1303,
	1304, 1261, 1363, 1367, 1375, 0, 0, 0, 0, 637,
	0, 642, 1400, 0, 247, 245, 0, 248, 0, 251,
	252, 0, 254, 247, 241, 0, 0, 0, 1212, 402,
	1064, 1182, 0, 1184, 0, 1062, 0, 0, 1183, 453,
	0, 460, 0, 474, 0, 0, 1233, 0, 0, 1256,
	1276, 1212, 0, 1315, 1317, 0, 1325, 0, 0, 0,
	1492, 1496, 0, 1485, 1486, 1625, 1498, 1516, -2, 0,
	0, 1606, 1524, 1521, 1527, 1528, 0, 323, 0, 318,
	320, 0, 304, 0, 0, 1093, 1098, 0, 0, 0,
	0, 0, 1509, 1511, 0, 1035, 1038, 0, 0, 0,
	0, 0, 0, 0, 272, 283, 1709, 310, 0, 828,
	852, 928, 973, 1117, 0, 0, 975, 0, 0, 1628,
	1615, 1616, 1613, 1342, 1921, 1925, 0, 0, 0, 1927,
	-2, 0, 1949, -2, -2, 2183, 2235, 2000, 1606, 2022,
	2024, 2011, 2229, 1869, 0, 2111, 2108, 0, 2095, 0,
	2046, 2047, 0, 0, 2050, 2052, 2053, 2054, 1808, 1801,
	1800, 2208, 0, 0, 0, 0, 2086, 1588, 0, 2100,
	0, 0, 1656, 2100, 2100, 1699, 0, 1701, 1668, 1657,
	0, 1665, 0, 2311, 1694, 1686, 0, 0, 332, 0,
	336, 337, 371, 0, 0, 1742, 1747, 0, 1753, 1823,
	0, 236, 163, 164, 1354, 1358, 1355, 0, 166, 0,
	1139, 0, 1142, 0, 0, 0, 0, 1149, 1166, 0,
	0, 0, 0, 0, 0, 1168, 0, 1167, 0, 0,
	1198, 0, 1330, 1337, 0, -2, 0, 0, 0, 173,
	196, 0, 0, 0, 0, 199, 1404, 175, 0, 0,
	205, 205, 0, 0, 1346, 1348, 1361, 0, 0, 0,
	0, 151, 0, 0, 1364, 1368, 1376, 1371, 1373, 1379,
	0, 103, 0, 1482, 0, 0, 1381, 218, 219, 0,
	205, 0, 205, 211, 205, 1339, 0, 0, 0, 0,
	0, 0, 0, 1384, 1385, 238, 0, 0, 0, 0,
	240, 316, 247, 390, 0, 1112, 0, 1194, 1186, 1187,
	1188, 0, 1193, 1195, 0, 0, 1078, 1063, 0, 1074,
	0, 0, 1091, 1066, 0, 458, 475, 0, 478, 0,
	481, 1052, 1230, 1273, 1212, 0, 1307, 0, 0, 0,
	0, 0, 0, 0, 1494, 1496, 0, 1487, 1488, 1518,
	1624, 0, 0, 0, 1506, 1625, 0, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 285,
	0, 286, 287, 288, 295, 296, 274, 275, 674, 676,
	0, 0, 682, 1116, 0, 0, 0, 0, 1614, 1929,
	-2, -2, 1950, 0, 2312, 2314, 1606, 0, 2097, 1608,
	0, 0, -2, 0, 0, 0, 1589, 1572, 0, 1647,
	1639, 1641, 1643, 2621, 2404, 2734, 1573, 1574, 1721, 0,
	0, 1689, 333, 624, 0, 0, 1749, 0, 0, 0,
	1356, 168, 0, 1143, 1144, 2286, 1146, 0, 1148, 1150,
	1151, 1152, 0, 1155, 0, 2335, 0, 1160, 1163, 1164,
	0, 0, 1177, 1199, 0, 1208, 0, 1332, 1342, 1336,
	0, 1334, 1210, 0, 172, 198, 174, 200, 195, 0,
	1339, 0, 176, 185, 0, 0, 123, 0, 0, 2398,
	154, 152, 150, 101, 1343, 125, 0, 220, 228, 1338,
	230, 215, 205, 0, 1365, 1369, 1377, 0, 1392, 1393,
	1394, 1395, 0, 0, 0, 0, 249, 0, 250, 253,
	0, 0, 1127, 0, 1065, 1185, 0, 1196, 1197, 1068,
	0, 1067, 0, 0, 0, 0, 0, 459, 462, 0,
	465, 0, 0, 0, 0, 0, 1318, 1316, 0, 1324,
	0, 0, 0, 1470, 0, 0, 1489, 1490, 482, 1512,
	0, 0, 1518, 1529, 303, 0, 0, 1099, 1102, 1103,
	1104, 1105, 1106, 1107, 1108, 1109, 1110, 1100, 1210, 0,
	0, 1174, 0, 308, 282, 0, 678, 0, 680, 0,
	974, 976, 0, 0, 2023, 2115, 0, 0, 2048, 2049,
	-2, 0, 1989, 2099, 2101, 0, 0, 0, 0, 0,
	1658, 1666, 625, 1743, 633, 1352, 0, 1359, 1141, 1145,
	0, 0, 0, 1156, 1216, 0, 0, 1233, 1233, 1169,
	0, 0, 1202, 1203, 1112, 0, 1204, 1205, 1206, 1331,
	1617, 1337, 1112, 0, 0, 197, 202, 0, 0, 0,
	0, 0, 0, 0, 209, 231, 1339, 0, 1396, 1397,
	0, 0, 246, 267, 0, 1274, 1066, 1126, 0, 0,
	1076, 0, 1079, 0, 1075, 1072, 1073, 1064, 0, 463,
	464, 479, 0, 480, 0, 1277, 0, 0, 1325, 0,
	0, 1477, 1469, 1496, 1491, 1492, 1740, 1515, 1519, 0,
	0, 1208, 1210, 1123, 0, 677, 0, 0, 984, 985,
	0, 0, 0, 0, 2110, 1609, 1990, 0, 0, 1642,
	1644, 1645, 1646, 1353, 0, 0, 1154, 1221, 0, 0,
	0, 0, 0, 1170, 1200, 1201, 1123, 0, 1335, 1333,
	1179, 0, 1212, 178, 0, 1210, 0, 1132, 0, 0,
	1135, 0, 0, 155, 2398, 153, 0, 205, 1389, 205,
	0, 270, 0, 261, 259, 260, 1068, 0, 0, 1190,
	1192, 0, 1080, 1112, 1078, 476, 1275, 1308, 1210, 0,
	1208, 0, 1484, 1496, 1478, 1479, 0, 1494, 0, 326,
	326, 1112, 1208, 1066, 1122, 326, 679, 681, 2107, 2127,
	2116, -2, 2692, 2405, 0, 2127, 2127, 2102, 2103, 0,
	0, 1157, 1217, 1218, 0, 1213, 1214, 1215, 2334, 1158,
	1159, 1161, 1162, 1198, 0, 0, 1216, 201, 1112, 1129,
	0, 0, 1130, 0, 0, 158, 0, 160, 232, 1387,
	0, 1390, 0, 255, 0, 0, 1060, 0, 1189, 0,
	0, 0, 0, 1127, 1068, 1208, 0, 1112, 0, 1473,
	1483, 0, 1493, 1470, 0, 305, 306, 1123, 1112, 1740,
	0, 307, 2112, 0, 0, 2118, 2119, 2120, 2121, 2122,
	2113, 2114, 1147, 0, 1219, 0, 1220, 0, 0, 0,
	1740, 1207, 0, 1221, 183, 1133, 0, 1136, 0, 156,
	0, 0, 0, 265, 266, 1057, 1059, 0, 1191, 1069,
	0, 1071, 1066, 1077, 1112, 0, 1123, 0, 1466, 1472,
	1476, 2295, 1477, 1513, 0, 1066, 1123, 1173, 0, 2124,
	2125, 0, 0, 0, 1222, 0, 1225, 1226, 0, 1223,
	1178, 0, 1198, 0, 0, 1388, 205, 0, 0, 1070,
	1068, 1123, 1210, 1066, 1208, 1484, 0, 1740, 1066, 2123,
	2126, 2117, 1153, 1224, 1227, 1228, 1209, 1180, 0, 0,
	1391, 268, 0, 1115, 1060, 1066, 1208, 1740, 1112, 1473,
	1740, 1171, 1740, 1120, 0, 0, 1111, 1113, 1114, 1058,
	1740, 1112, 1321, 1123, 1467, 1514, 1172, 1134, 1119, 0,
	269, 1319, 1123, 1066, 0, 1066, 1740, 0, 1740, 1322,
	1120, 1320, 1137,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 589, 3, 595, 590, 3,
	600, 601, 593, 591, 605, 592, 602, 594, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 608, 3,
	581, 583, 582, 586, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 598, 3, 599, 596, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 606, 588, 607, 584,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 585, 57924, 587,
	57925, 597, 57926, 603, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1504
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1627
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1694
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1790
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1822
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1855
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1884
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1912
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1921
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1933
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1957
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1992
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2000
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2011
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2021
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2031
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2040
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2051
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2057
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2083
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2088
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2179
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2215
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2222
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2225
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2231
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2283
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2466
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2470
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2473
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2498
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2510
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2641
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2803
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2937
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			return unimplemented(sqllex, "alter function")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3087
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3096
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3102
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3107
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3112
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3117
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3122
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3145
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3153
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = nil
		}
	case 327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3229
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3296
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3297
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3298
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3425
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3443
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3450
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3455
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3474
		{
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "CREATE")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "create access method")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			return unimplemented(sqllex, "create cast")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3495
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3497
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplemented(sqllex, "create publication")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplemented(sqllex, "create rule")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "create server")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3514
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3517
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3518
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3521
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3522
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3525
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3526
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3535
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3538
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			return unimplemented(sqllex, "drop server")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3542
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3623
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3669
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3704
		{

			sqlVAL.union.val = nil
		}
	case 474:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3751
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			return helpWith(sqllex, "DELETE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3791
		{
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3817
		{
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "DROP")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3890
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4013
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4017
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4040
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4083
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4107
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4115
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "DELETE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "INSERT")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "DELETE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "INSERT")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4196
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4229
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4319
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4334
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "GRANT")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4397
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4409
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "RESET")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "RESET")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "USE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4484
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4490
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4491
		{
			return helpWith(sqllex, "USE")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4681
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4686
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{
			return unimplemented(sqllex, "set from current")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4717
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4722
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4731
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4736
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4753
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = tree.Low
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = tree.Normal
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = tree.High
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4929
		{
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4933
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4969
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.str = "client_encoding"
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.str = "timezone"
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5003
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5018
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5066
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5075
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5100
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5205
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5228
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = true
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = true
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = false
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5407
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5451
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5456
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5458
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5462
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = true
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = false
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5477
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5513
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5523
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = true
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = false
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5560
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5575
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5586
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5600
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5608
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5618
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5622
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5637
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5642
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5647
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5652
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5664
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5677
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5682
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5693
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5722
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5730
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5751
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5756
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5765
		{
		}
	case 984:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5774
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5797
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5809
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5878
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5891
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6024
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6067
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6076
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6125
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6127
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6128
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6138
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6139
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6152
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6180
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6193
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6225
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6244
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6308
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6347
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6363
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6392
		{

			sqlVAL.union.val = nil
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.str = ""
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6408
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = nil
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6431
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6435
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6461
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6475
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6490
		{
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6491
		{
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6492
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6547
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6573
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6584
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6587
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6591
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6597
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6613
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6618
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.str = ""
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6761
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6865
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6910
		{

			sqlVAL.union.val = true
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = false
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6920
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6927
		{
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7027
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7055
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7065
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7080
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7145
		{
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7146
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7147
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7148
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7149
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7150
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7222
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7306
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7315
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7323
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7334
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7339
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7353
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7358
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7363
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7376
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7401
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7435
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.str = ""
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = true
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7469
		{

			sqlVAL.union.val = true
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = false
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7484
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7498
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7510
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7522
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7532
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7542
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = nil
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7652
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7653
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7678
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7680
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7682
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7684
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7686
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7688
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7726
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7744
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7763
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7780
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7797
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7801
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = false
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = true
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = false
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = true
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = false
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7855
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7861
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.str = ""
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.str = ""
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7934
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7940
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8165
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8171
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8183
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8189
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8203
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8209
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8268
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = true
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = false
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = tree.Types
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8328
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8332
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8356
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8357
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8360
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8361
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8372
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8390
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8399
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8420
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8428
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8449
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8457
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8472
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8473
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8474
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8493
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8516
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8525
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8526
		{
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8527
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8544
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8548
		{
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8589
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8591
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8684
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.str = ""
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8707
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8712
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8729
		{

		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8744
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.str = ""
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.str = ""
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.str = ""
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.str = ""
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8799
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8812
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8813
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8842
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8860
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8873
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8922
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8949
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8991
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9044
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9059
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9238
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9239
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9240
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9301
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9345
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9361
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = true
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = false
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9414
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9415
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = nil
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9429
		{
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = true
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = false
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = false
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = true
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9459
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9463
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9504
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9516
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9521
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9547
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9580
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9639
		{
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9640
		{
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9676
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9706
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9708
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9723
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9745
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9787
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9799
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9818
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9859
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9869
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9904
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9915
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9945
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9978
		{
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = nil
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = true
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = false
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.str = tree.AstFull
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.str = tree.AstRight
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.str = tree.AstInner
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10097
		{
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10098
		{
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.str = tree.AstHash
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.str = ""
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10172
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10190
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10196
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10202
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10212
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = false
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = true
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = false
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10261
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10274
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10282
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10283
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10301
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10311
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10331
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10340
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10380
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10392
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10393
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = types.Geography
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10442
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10450
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10476
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10484
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = nil
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = types.Int2
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = types.Int
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = types.Float4
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = types.Float
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10527
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10535
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10543
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = types.Bool
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10557
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = types.Float
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10576
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10582
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10604
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = types.String
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = true
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = false
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = types.Date
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10653
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10661
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10675
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10684
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10692
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10709
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = true
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = false
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = false
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = types.Interval
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10733
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10817
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10832
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = nil
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10862
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10922
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11071
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11192
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11258
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11280
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11388
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11396
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11492
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11497
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11523
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11532
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11547
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11577
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11588
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11589
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11604
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11613
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11679
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11809
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11850
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11860
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11865
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11879
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11880
		{
			return unimplemented(sqllex, "treat")
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11906
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11953
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.str = ""
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12042
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12055
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12123
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12152
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12228
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12529
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12569
		{
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12641
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12649
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12718
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12722
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12738
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12747
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12758
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12767
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12775
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12792
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12877
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12885
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12889
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12907
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12934
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13011
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13024
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13031
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.str = ""
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
